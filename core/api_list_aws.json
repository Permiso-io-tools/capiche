[
  {
    "API": "accessanalyzer:ApplyArchiveRule",
    "EventSource": "accessanalyzer",
    "EventName": "ApplyArchiveRule",
    "Description": "Retroactively applies the archive rule to existing findings that meet the archive rule criteria"
  },
  {
    "API": "accessanalyzer:CancelPolicyGeneration",
    "EventSource": "accessanalyzer",
    "EventName": "CancelPolicyGeneration",
    "Description": "Cancels the requested policy generation"
  },
  {
    "API": "accessanalyzer:CheckAccessNotGranted",
    "EventSource": "accessanalyzer",
    "EventName": "CheckAccessNotGranted",
    "Description": "Checks whether the specified access isn't allowed by a policy"
  },
  {
    "API": "accessanalyzer:CheckNoNewAccess",
    "EventSource": "accessanalyzer",
    "EventName": "CheckNoNewAccess",
    "Description": "Checks whether new access is allowed for an updated policy when compared to the existing policy"
  },
  {
    "API": "accessanalyzer:CheckNoPublicAccess",
    "EventSource": "accessanalyzer",
    "EventName": "CheckNoPublicAccess",
    "Description": "Checks whether a resource policy can grant public access to the specified resource type"
  },
  {
    "API": "accessanalyzer:CreateAccessPreview",
    "EventSource": "accessanalyzer",
    "EventName": "CreateAccessPreview",
    "Description": "Creates an access preview that allows you to preview IAM Access Analyzer findings for your resource before deploying resource permissions"
  },
  {
    "API": "accessanalyzer:CreateAnalyzer",
    "EventSource": "accessanalyzer",
    "EventName": "CreateAnalyzer",
    "Description": "Creates an analyzer for your account"
  },
  {
    "API": "accessanalyzer:CreateArchiveRule",
    "EventSource": "accessanalyzer",
    "EventName": "CreateArchiveRule",
    "Description": "Creates an archive rule for the specified analyzer"
  },
  {
    "API": "accessanalyzer:DeleteAnalyzer",
    "EventSource": "accessanalyzer",
    "EventName": "DeleteAnalyzer",
    "Description": "Deletes the specified analyzer"
  },
  {
    "API": "accessanalyzer:DeleteArchiveRule",
    "EventSource": "accessanalyzer",
    "EventName": "DeleteArchiveRule",
    "Description": "Deletes the specified archive rule"
  },
  {
    "API": "accessanalyzer:GenerateFindingRecommendation",
    "EventSource": "accessanalyzer",
    "EventName": "GenerateFindingRecommendation",
    "Description": "Creates a recommendation for an unused permissions finding"
  },
  {
    "API": "accessanalyzer:GeneratePresignedUrl",
    "EventSource": "accessanalyzer",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "accessanalyzer:GetAccessPreview",
    "EventSource": "accessanalyzer",
    "EventName": "GetAccessPreview",
    "Description": "Retrieves information about an access preview for the specified analyzer"
  },
  {
    "API": "accessanalyzer:GetAnalyzedResource",
    "EventSource": "accessanalyzer",
    "EventName": "GetAnalyzedResource",
    "Description": "Retrieves information about a resource that was analyzed"
  },
  {
    "API": "accessanalyzer:GetAnalyzer",
    "EventSource": "accessanalyzer",
    "EventName": "GetAnalyzer",
    "Description": "Retrieves information about the specified analyzer"
  },
  {
    "API": "accessanalyzer:GetArchiveRule",
    "EventSource": "accessanalyzer",
    "EventName": "GetArchiveRule",
    "Description": "Retrieves information about an archive rule"
  },
  {
    "API": "accessanalyzer:GetFinding",
    "EventSource": "accessanalyzer",
    "EventName": "GetFinding",
    "Description": "Retrieves information about the specified finding"
  },
  {
    "API": "accessanalyzer:GetFindingRecommendation",
    "EventSource": "accessanalyzer",
    "EventName": "GetFindingRecommendation",
    "Description": "Retrieves information about a finding recommendation for the specified analyzer"
  },
  {
    "API": "accessanalyzer:GetFindingV2",
    "EventSource": "accessanalyzer",
    "EventName": "GetFindingV2",
    "Description": "Retrieves information about the specified finding"
  },
  {
    "API": "accessanalyzer:GetGeneratedPolicy",
    "EventSource": "accessanalyzer",
    "EventName": "GetGeneratedPolicy",
    "Description": "Retrieves the policy that was generated using ``StartPolicyGeneration``"
  },
  {
    "API": "accessanalyzer:ListAccessPreviewFindings",
    "EventSource": "accessanalyzer",
    "EventName": "ListAccessPreviewFindings",
    "Description": "Retrieves a list of access preview findings generated by the specified access preview"
  },
  {
    "API": "accessanalyzer:ListAccessPreviews",
    "EventSource": "accessanalyzer",
    "EventName": "ListAccessPreviews",
    "Description": "Retrieves a list of access previews for the specified analyzer"
  },
  {
    "API": "accessanalyzer:ListAnalyzedResources",
    "EventSource": "accessanalyzer",
    "EventName": "ListAnalyzedResources",
    "Description": "Retrieves a list of resources of the specified type that have been analyzed by the specified external access analyzer"
  },
  {
    "API": "accessanalyzer:ListAnalyzers",
    "EventSource": "accessanalyzer",
    "EventName": "ListAnalyzers",
    "Description": "Retrieves a list of analyzers"
  },
  {
    "API": "accessanalyzer:ListArchiveRules",
    "EventSource": "accessanalyzer",
    "EventName": "ListArchiveRules",
    "Description": "Retrieves a list of archive rules created for the specified analyzer"
  },
  {
    "API": "accessanalyzer:ListFindings",
    "EventSource": "accessanalyzer",
    "EventName": "ListFindings",
    "Description": "Retrieves a list of findings generated by the specified analyzer"
  },
  {
    "API": "accessanalyzer:ListFindingsV2",
    "EventSource": "accessanalyzer",
    "EventName": "ListFindingsV2",
    "Description": "Retrieves a list of findings generated by the specified analyzer"
  },
  {
    "API": "accessanalyzer:ListPolicyGenerations",
    "EventSource": "accessanalyzer",
    "EventName": "ListPolicyGenerations",
    "Description": "Lists all of the policy generations requested in the last seven days"
  },
  {
    "API": "accessanalyzer:ListTagsForResource",
    "EventSource": "accessanalyzer",
    "EventName": "ListTagsForResource",
    "Description": "Retrieves a list of tags applied to the specified resource"
  },
  {
    "API": "accessanalyzer:StartPolicyGeneration",
    "EventSource": "accessanalyzer",
    "EventName": "StartPolicyGeneration",
    "Description": "Starts the policy generation request"
  },
  {
    "API": "accessanalyzer:StartResourceScan",
    "EventSource": "accessanalyzer",
    "EventName": "StartResourceScan",
    "Description": "Immediately starts a scan of the policies applied to the specified resource"
  },
  {
    "API": "accessanalyzer:TagResource",
    "EventSource": "accessanalyzer",
    "EventName": "TagResource",
    "Description": "Adds a tag to the specified resource"
  },
  {
    "API": "accessanalyzer:UntagResource",
    "EventSource": "accessanalyzer",
    "EventName": "UntagResource",
    "Description": "Removes a tag from the specified resource"
  },
  {
    "API": "accessanalyzer:UpdateArchiveRule",
    "EventSource": "accessanalyzer",
    "EventName": "UpdateArchiveRule",
    "Description": "Updates the criteria and values for the specified archive rule"
  },
  {
    "API": "accessanalyzer:UpdateFindings",
    "EventSource": "accessanalyzer",
    "EventName": "UpdateFindings",
    "Description": "Updates the status for the specified findings"
  },
  {
    "API": "accessanalyzer:ValidatePolicy",
    "EventSource": "accessanalyzer",
    "EventName": "ValidatePolicy",
    "Description": "Requests the validation of a policy and returns a list of findings"
  },
  {
    "API": "account:AcceptPrimaryEmailUpdate",
    "EventSource": "account",
    "EventName": "AcceptPrimaryEmailUpdate",
    "Description": "Accepts the request that originated from  StartPrimaryEmailUpdate to update the primary email address (also known as the root user email address) for the specified account"
  },
  {
    "API": "account:DeleteAlternateContact",
    "EventSource": "account",
    "EventName": "DeleteAlternateContact",
    "Description": "Deletes the specified alternate contact from an Amazon Web Services account"
  },
  {
    "API": "account:DisableRegion",
    "EventSource": "account",
    "EventName": "DisableRegion",
    "Description": "Disables (opts-out) a particular Region for an account"
  },
  {
    "API": "account:EnableRegion",
    "EventSource": "account",
    "EventName": "EnableRegion",
    "Description": "Enables (opts-in) a particular Region for an account"
  },
  {
    "API": "account:GeneratePresignedUrl",
    "EventSource": "account",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "account:GetAlternateContact",
    "EventSource": "account",
    "EventName": "GetAlternateContact",
    "Description": "Retrieves the specified alternate contact attached to an Amazon Web Services account"
  },
  {
    "API": "account:GetContactInformation",
    "EventSource": "account",
    "EventName": "GetContactInformation",
    "Description": "Retrieves the primary contact information of an Amazon Web Services account"
  },
  {
    "API": "account:GetPrimaryEmail",
    "EventSource": "account",
    "EventName": "GetPrimaryEmail",
    "Description": "Retrieves the primary email address for the specified account"
  },
  {
    "API": "account:GetRegionOptStatus",
    "EventSource": "account",
    "EventName": "GetRegionOptStatus",
    "Description": "Retrieves the opt-in status of a particular Region"
  },
  {
    "API": "account:ListRegions",
    "EventSource": "account",
    "EventName": "ListRegions",
    "Description": "Lists all the Regions for a given account and their respective opt-in statuses"
  },
  {
    "API": "account:PutAlternateContact",
    "EventSource": "account",
    "EventName": "PutAlternateContact",
    "Description": "Modifies the specified alternate contact attached to an Amazon Web Services account"
  },
  {
    "API": "account:PutContactInformation",
    "EventSource": "account",
    "EventName": "PutContactInformation",
    "Description": "Updates the primary contact information of an Amazon Web Services account"
  },
  {
    "API": "account:StartPrimaryEmailUpdate",
    "EventSource": "account",
    "EventName": "StartPrimaryEmailUpdate",
    "Description": "Starts the process to update the primary email address for the specified account"
  },
  {
    "API": "acm:AddTagsToCertificate",
    "EventSource": "acm",
    "EventName": "AddTagsToCertificate",
    "Description": "Adds one or more tags to an ACM certificate"
  },
  {
    "API": "acm:DeleteCertificate",
    "EventSource": "acm",
    "EventName": "DeleteCertificate",
    "Description": "Deletes a certificate and its associated private key"
  },
  {
    "API": "acm:DescribeCertificate",
    "EventSource": "acm",
    "EventName": "DescribeCertificate",
    "Description": "Returns detailed metadata about the specified ACM certificate"
  },
  {
    "API": "acm:ExportCertificate",
    "EventSource": "acm",
    "EventName": "ExportCertificate",
    "Description": "Exports a private certificate issued by a private certificate authority (CA) for use anywhere"
  },
  {
    "API": "acm:GeneratePresignedUrl",
    "EventSource": "acm",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "acm:GetAccountConfiguration",
    "EventSource": "acm",
    "EventName": "GetAccountConfiguration",
    "Description": "Returns the account configuration options associated with an Amazon Web Services account"
  },
  {
    "API": "acm:GetCertificate",
    "EventSource": "acm",
    "EventName": "GetCertificate",
    "Description": "Retrieves an Amazon-issued certificate and its certificate chain"
  },
  {
    "API": "acm:ImportCertificate",
    "EventSource": "acm",
    "EventName": "ImportCertificate",
    "Description": "Imports a certificate into Certificate Manager (ACM) to use with services that are integrated with ACM"
  },
  {
    "API": "acm:ListCertificates",
    "EventSource": "acm",
    "EventName": "ListCertificates",
    "Description": "Retrieves a list of certificate ARNs and domain names"
  },
  {
    "API": "acm:ListTagsForCertificate",
    "EventSource": "acm",
    "EventName": "ListTagsForCertificate",
    "Description": "Lists the tags that have been applied to the ACM certificate"
  },
  {
    "API": "acm:PutAccountConfiguration",
    "EventSource": "acm",
    "EventName": "PutAccountConfiguration",
    "Description": "Adds or modifies account-level configurations in ACM"
  },
  {
    "API": "acm:RemoveTagsFromCertificate",
    "EventSource": "acm",
    "EventName": "RemoveTagsFromCertificate",
    "Description": "Remove one or more tags from an ACM certificate"
  },
  {
    "API": "acm:RenewCertificate",
    "EventSource": "acm",
    "EventName": "RenewCertificate",
    "Description": "Renews an eligible ACM certificate"
  },
  {
    "API": "acm:RequestCertificate",
    "EventSource": "acm",
    "EventName": "RequestCertificate",
    "Description": "Requests an ACM certificate for use with other Amazon Web Services services"
  },
  {
    "API": "acm:ResendValidationEmail",
    "EventSource": "acm",
    "EventName": "ResendValidationEmail",
    "Description": "Resends the email that requests domain ownership validation"
  },
  {
    "API": "acm:UpdateCertificateOptions",
    "EventSource": "acm",
    "EventName": "UpdateCertificateOptions",
    "Description": "Updates a certificate"
  },
  {
    "API": "acm-pca:CreateCertificateAuthority",
    "EventSource": "acm-pca",
    "EventName": "CreateCertificateAuthority",
    "Description": "Creates a root or subordinate private certificate authority (CA)"
  },
  {
    "API": "acm-pca:CreateCertificateAuthorityAuditReport",
    "EventSource": "acm-pca",
    "EventName": "CreateCertificateAuthorityAuditReport",
    "Description": "Creates an audit report that lists every time that your CA private key is used"
  },
  {
    "API": "acm-pca:CreatePermission",
    "EventSource": "acm-pca",
    "EventName": "CreatePermission",
    "Description": "Grants one or more permissions on a private CA to the Certificate Manager (ACM) service principal ( ``acm"
  },
  {
    "API": "acm-pca:DeleteCertificateAuthority",
    "EventSource": "acm-pca",
    "EventName": "DeleteCertificateAuthority",
    "Description": "Deletes a private certificate authority (CA)"
  },
  {
    "API": "acm-pca:DeletePermission",
    "EventSource": "acm-pca",
    "EventName": "DeletePermission",
    "Description": "Revokes permissions on a private CA granted to the Certificate Manager (ACM) service principal (acm"
  },
  {
    "API": "acm-pca:DeletePolicy",
    "EventSource": "acm-pca",
    "EventName": "DeletePolicy",
    "Description": "Deletes the resource-based policy attached to a private CA"
  },
  {
    "API": "acm-pca:DescribeCertificateAuthority",
    "EventSource": "acm-pca",
    "EventName": "DescribeCertificateAuthority",
    "Description": "Lists information about your private certificate authority (CA) or one that has been shared with you"
  },
  {
    "API": "acm-pca:DescribeCertificateAuthorityAuditReport",
    "EventSource": "acm-pca",
    "EventName": "DescribeCertificateAuthorityAuditReport",
    "Description": "Lists information about a specific audit report created by calling the `CreateCertificateAuthorityAuditReport <https://docs"
  },
  {
    "API": "acm-pca:GeneratePresignedUrl",
    "EventSource": "acm-pca",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "acm-pca:GetCertificate",
    "EventSource": "acm-pca",
    "EventName": "GetCertificate",
    "Description": "Retrieves a certificate from your private CA or one that has been shared with you"
  },
  {
    "API": "acm-pca:GetCertificateAuthorityCertificate",
    "EventSource": "acm-pca",
    "EventName": "GetCertificateAuthorityCertificate",
    "Description": "Retrieves the certificate and certificate chain for your private certificate authority (CA) or one that has been shared with you"
  },
  {
    "API": "acm-pca:GetCertificateAuthorityCsr",
    "EventSource": "acm-pca",
    "EventName": "GetCertificateAuthorityCsr",
    "Description": "Retrieves the certificate signing request (CSR) for your private certificate authority (CA)"
  },
  {
    "API": "acm-pca:GetPolicy",
    "EventSource": "acm-pca",
    "EventName": "GetPolicy",
    "Description": "Retrieves the resource-based policy attached to a private CA"
  },
  {
    "API": "acm-pca:ImportCertificateAuthorityCertificate",
    "EventSource": "acm-pca",
    "EventName": "ImportCertificateAuthorityCertificate",
    "Description": "Imports a signed private CA certificate into Amazon Web Services Private CA"
  },
  {
    "API": "acm-pca:IssueCertificate",
    "EventSource": "acm-pca",
    "EventName": "IssueCertificate",
    "Description": "Uses your private certificate authority (CA), or one that has been shared with you, to issue a client certificate"
  },
  {
    "API": "acm-pca:ListCertificateAuthorities",
    "EventSource": "acm-pca",
    "EventName": "ListCertificateAuthorities",
    "Description": "Lists the private certificate authorities that you created by using the `CreateCertificateAuthority <https://docs"
  },
  {
    "API": "acm-pca:ListPermissions",
    "EventSource": "acm-pca",
    "EventName": "ListPermissions",
    "Description": "List all permissions on a private CA, if any, granted to the Certificate Manager (ACM) service principal (acm"
  },
  {
    "API": "acm-pca:ListTags",
    "EventSource": "acm-pca",
    "EventName": "ListTags",
    "Description": "Lists the tags, if any, that are associated with your private CA or one that has been shared with you"
  },
  {
    "API": "acm-pca:PutPolicy",
    "EventSource": "acm-pca",
    "EventName": "PutPolicy",
    "Description": "Attaches a resource-based policy to a private CA"
  },
  {
    "API": "acm-pca:RestoreCertificateAuthority",
    "EventSource": "acm-pca",
    "EventName": "RestoreCertificateAuthority",
    "Description": "Restores a certificate authority (CA) that is in the ``DELETED`` state"
  },
  {
    "API": "acm-pca:RevokeCertificate",
    "EventSource": "acm-pca",
    "EventName": "RevokeCertificate",
    "Description": "Revokes a certificate that was issued inside Amazon Web Services Private CA"
  },
  {
    "API": "acm-pca:TagCertificateAuthority",
    "EventSource": "acm-pca",
    "EventName": "TagCertificateAuthority",
    "Description": "Adds one or more tags to your private CA"
  },
  {
    "API": "acm-pca:UntagCertificateAuthority",
    "EventSource": "acm-pca",
    "EventName": "UntagCertificateAuthority",
    "Description": "Remove one or more tags from your private CA"
  },
  {
    "API": "acm-pca:UpdateCertificateAuthority",
    "EventSource": "acm-pca",
    "EventName": "UpdateCertificateAuthority",
    "Description": "Updates the status or configuration of a private certificate authority (CA)"
  },
  {
    "API": "amp:CreateAlertManagerDefinition",
    "EventSource": "amp",
    "EventName": "CreateAlertManagerDefinition",
    "Description": "The ``CreateAlertManagerDefinition`` operation creates the alert manager definition in a workspace"
  },
  {
    "API": "amp:CreateLoggingConfiguration",
    "EventSource": "amp",
    "EventName": "CreateLoggingConfiguration",
    "Description": "The ``CreateLoggingConfiguration`` operation creates a logging configuration for the workspace"
  },
  {
    "API": "amp:CreateRuleGroupsNamespace",
    "EventSource": "amp",
    "EventName": "CreateRuleGroupsNamespace",
    "Description": "The ``CreateRuleGroupsNamespace`` operation creates a rule groups namespace within a workspace"
  },
  {
    "API": "amp:CreateScraper",
    "EventSource": "amp",
    "EventName": "CreateScraper",
    "Description": "The ``CreateScraper`` operation creates a scraper to collect metrics"
  },
  {
    "API": "amp:CreateWorkspace",
    "EventSource": "amp",
    "EventName": "CreateWorkspace",
    "Description": "Creates a Prometheus workspace"
  },
  {
    "API": "amp:DeleteAlertManagerDefinition",
    "EventSource": "amp",
    "EventName": "DeleteAlertManagerDefinition",
    "Description": "Deletes the alert manager definition from a workspace"
  },
  {
    "API": "amp:DeleteLoggingConfiguration",
    "EventSource": "amp",
    "EventName": "DeleteLoggingConfiguration",
    "Description": "Deletes the logging configuration for a workspace"
  },
  {
    "API": "amp:DeleteRuleGroupsNamespace",
    "EventSource": "amp",
    "EventName": "DeleteRuleGroupsNamespace",
    "Description": "Deletes one rule groups namespace and its associated rule groups definition"
  },
  {
    "API": "amp:DeleteScraper",
    "EventSource": "amp",
    "EventName": "DeleteScraper",
    "Description": "The ``DeleteScraper`` operation deletes one scraper, and stops any metrics collection that the scraper performs"
  },
  {
    "API": "amp:DeleteWorkspace",
    "EventSource": "amp",
    "EventName": "DeleteWorkspace",
    "Description": "Deletes an existing workspace"
  },
  {
    "API": "amp:DescribeAlertManagerDefinition",
    "EventSource": "amp",
    "EventName": "DescribeAlertManagerDefinition",
    "Description": "Retrieves the full information about the alert manager definition for a workspace"
  },
  {
    "API": "amp:DescribeLoggingConfiguration",
    "EventSource": "amp",
    "EventName": "DescribeLoggingConfiguration",
    "Description": "Returns complete information about the current logging configuration of the workspace"
  },
  {
    "API": "amp:DescribeRuleGroupsNamespace",
    "EventSource": "amp",
    "EventName": "DescribeRuleGroupsNamespace",
    "Description": "Returns complete information about one rule groups namespace"
  },
  {
    "API": "amp:DescribeScraper",
    "EventSource": "amp",
    "EventName": "DescribeScraper",
    "Description": "The ``DescribeScraper`` operation displays information about an existing scraper"
  },
  {
    "API": "amp:DescribeWorkspace",
    "EventSource": "amp",
    "EventName": "DescribeWorkspace",
    "Description": "Returns information about an existing workspace"
  },
  {
    "API": "amp:GeneratePresignedUrl",
    "EventSource": "amp",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "amp:GetDefaultScraperConfiguration",
    "EventSource": "amp",
    "EventName": "GetDefaultScraperConfiguration",
    "Description": "The ``GetDefaultScraperConfiguration`` operation returns the default scraper configuration used when Amazon EKS creates a scraper for you"
  },
  {
    "API": "amp:ListRuleGroupsNamespaces",
    "EventSource": "amp",
    "EventName": "ListRuleGroupsNamespaces",
    "Description": "Returns a list of rule groups namespaces in a workspace"
  },
  {
    "API": "amp:ListScrapers",
    "EventSource": "amp",
    "EventName": "ListScrapers",
    "Description": "The ``ListScrapers`` operation lists all of the scrapers in your account"
  },
  {
    "API": "amp:ListTagsForResource",
    "EventSource": "amp",
    "EventName": "ListTagsForResource",
    "Description": "The ``ListTagsForResource`` operation returns the tags that are associated with an Amazon Managed Service for Prometheus resource"
  },
  {
    "API": "amp:ListWorkspaces",
    "EventSource": "amp",
    "EventName": "ListWorkspaces",
    "Description": "Lists all of the Amazon Managed Service for Prometheus workspaces in your account"
  },
  {
    "API": "amp:PutAlertManagerDefinition",
    "EventSource": "amp",
    "EventName": "PutAlertManagerDefinition",
    "Description": "Updates an existing alert manager definition in a workspace"
  },
  {
    "API": "amp:PutRuleGroupsNamespace",
    "EventSource": "amp",
    "EventName": "PutRuleGroupsNamespace",
    "Description": "Updates an existing rule groups namespace within a workspace"
  },
  {
    "API": "amp:TagResource",
    "EventSource": "amp",
    "EventName": "TagResource",
    "Description": "The ``TagResource`` operation associates tags with an Amazon Managed Service for Prometheus resource"
  },
  {
    "API": "amp:UntagResource",
    "EventSource": "amp",
    "EventName": "UntagResource",
    "Description": "Removes the specified tags from an Amazon Managed Service for Prometheus resource"
  },
  {
    "API": "amp:UpdateLoggingConfiguration",
    "EventSource": "amp",
    "EventName": "UpdateLoggingConfiguration",
    "Description": "Updates the log group ARN or the workspace ID of the current logging configuration"
  },
  {
    "API": "amp:UpdateWorkspaceAlias",
    "EventSource": "amp",
    "EventName": "UpdateWorkspaceAlias",
    "Description": "Updates the alias of an existing workspace"
  },
  {
    "API": "amplify:CreateApp",
    "EventSource": "amplify",
    "EventName": "CreateApp",
    "Description": "Creates a new Amplify app"
  },
  {
    "API": "amplify:CreateBackendEnvironment",
    "EventSource": "amplify",
    "EventName": "CreateBackendEnvironment",
    "Description": "Creates a new backend environment for an Amplify app"
  },
  {
    "API": "amplify:CreateBranch",
    "EventSource": "amplify",
    "EventName": "CreateBranch",
    "Description": "Creates a new branch for an Amplify app"
  },
  {
    "API": "amplify:CreateDeployment",
    "EventSource": "amplify",
    "EventName": "CreateDeployment",
    "Description": "Creates a deployment for a manually deployed Amplify app"
  },
  {
    "API": "amplify:CreateDomainAssociation",
    "EventSource": "amplify",
    "EventName": "CreateDomainAssociation",
    "Description": "Creates a new domain association for an Amplify app"
  },
  {
    "API": "amplify:CreateWebhook",
    "EventSource": "amplify",
    "EventName": "CreateWebhook",
    "Description": "Creates a new webhook on an Amplify app"
  },
  {
    "API": "amplify:DeleteApp",
    "EventSource": "amplify",
    "EventName": "DeleteApp",
    "Description": "Deletes an existing Amplify app specified by an app ID"
  },
  {
    "API": "amplify:DeleteBackendEnvironment",
    "EventSource": "amplify",
    "EventName": "DeleteBackendEnvironment",
    "Description": "Deletes a backend environment for an Amplify app"
  },
  {
    "API": "amplify:DeleteBranch",
    "EventSource": "amplify",
    "EventName": "DeleteBranch",
    "Description": "Deletes a branch for an Amplify app"
  },
  {
    "API": "amplify:DeleteDomainAssociation",
    "EventSource": "amplify",
    "EventName": "DeleteDomainAssociation",
    "Description": "Deletes a domain association for an Amplify app"
  },
  {
    "API": "amplify:DeleteJob",
    "EventSource": "amplify",
    "EventName": "DeleteJob",
    "Description": "Deletes a job for a branch of an Amplify app"
  },
  {
    "API": "amplify:DeleteWebhook",
    "EventSource": "amplify",
    "EventName": "DeleteWebhook",
    "Description": "Deletes a webhook"
  },
  {
    "API": "amplify:GenerateAccessLogs",
    "EventSource": "amplify",
    "EventName": "GenerateAccessLogs",
    "Description": "Returns the website access logs for a specific time range using a presigned URL"
  },
  {
    "API": "amplify:GeneratePresignedUrl",
    "EventSource": "amplify",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "amplify:GetApp",
    "EventSource": "amplify",
    "EventName": "GetApp",
    "Description": "Returns an existing Amplify app specified by an app ID"
  },
  {
    "API": "amplify:GetArtifactUrl",
    "EventSource": "amplify",
    "EventName": "GetArtifactUrl",
    "Description": "Returns the artifact info that corresponds to an artifact id"
  },
  {
    "API": "amplify:GetBackendEnvironment",
    "EventSource": "amplify",
    "EventName": "GetBackendEnvironment",
    "Description": "Returns a backend environment for an Amplify app"
  },
  {
    "API": "amplify:GetBranch",
    "EventSource": "amplify",
    "EventName": "GetBranch",
    "Description": "Returns a branch for an Amplify app"
  },
  {
    "API": "amplify:GetDomainAssociation",
    "EventSource": "amplify",
    "EventName": "GetDomainAssociation",
    "Description": "Returns the domain information for an Amplify app"
  },
  {
    "API": "amplify:GetJob",
    "EventSource": "amplify",
    "EventName": "GetJob",
    "Description": "Returns a job for a branch of an Amplify app"
  },
  {
    "API": "amplify:GetWebhook",
    "EventSource": "amplify",
    "EventName": "GetWebhook",
    "Description": "Returns the webhook information that corresponds to a specified webhook ID"
  },
  {
    "API": "amplify:ListApps",
    "EventSource": "amplify",
    "EventName": "ListApps",
    "Description": "Returns a list of the existing Amplify apps"
  },
  {
    "API": "amplify:ListArtifacts",
    "EventSource": "amplify",
    "EventName": "ListArtifacts",
    "Description": "Returns a list of artifacts for a specified app, branch, and job"
  },
  {
    "API": "amplify:ListBackendEnvironments",
    "EventSource": "amplify",
    "EventName": "ListBackendEnvironments",
    "Description": "Lists the backend environments for an Amplify app"
  },
  {
    "API": "amplify:ListBranches",
    "EventSource": "amplify",
    "EventName": "ListBranches",
    "Description": "Lists the branches of an Amplify app"
  },
  {
    "API": "amplify:ListDomainAssociations",
    "EventSource": "amplify",
    "EventName": "ListDomainAssociations",
    "Description": "Returns the domain associations for an Amplify app"
  },
  {
    "API": "amplify:ListJobs",
    "EventSource": "amplify",
    "EventName": "ListJobs",
    "Description": "Lists the jobs for a branch of an Amplify app"
  },
  {
    "API": "amplify:ListTagsForResource",
    "EventSource": "amplify",
    "EventName": "ListTagsForResource",
    "Description": "Returns a list of tags for a specified Amazon Resource Name (ARN)"
  },
  {
    "API": "amplify:ListWebhooks",
    "EventSource": "amplify",
    "EventName": "ListWebhooks",
    "Description": "Returns a list of webhooks for an Amplify app"
  },
  {
    "API": "amplify:StartDeployment",
    "EventSource": "amplify",
    "EventName": "StartDeployment",
    "Description": "Starts a deployment for a manually deployed app"
  },
  {
    "API": "amplify:StartJob",
    "EventSource": "amplify",
    "EventName": "StartJob",
    "Description": "Starts a new job for a branch of an Amplify app"
  },
  {
    "API": "amplify:StopJob",
    "EventSource": "amplify",
    "EventName": "StopJob",
    "Description": "Stops a job that is in progress for a branch of an Amplify app"
  },
  {
    "API": "amplify:TagResource",
    "EventSource": "amplify",
    "EventName": "TagResource",
    "Description": "Tags the resource with a tag key and value"
  },
  {
    "API": "amplify:UntagResource",
    "EventSource": "amplify",
    "EventName": "UntagResource",
    "Description": "Untags a resource with a specified Amazon Resource Name (ARN)"
  },
  {
    "API": "amplify:UpdateApp",
    "EventSource": "amplify",
    "EventName": "UpdateApp",
    "Description": "Updates an existing Amplify app"
  },
  {
    "API": "amplify:UpdateBranch",
    "EventSource": "amplify",
    "EventName": "UpdateBranch",
    "Description": "Updates a branch for an Amplify app"
  },
  {
    "API": "amplify:UpdateDomainAssociation",
    "EventSource": "amplify",
    "EventName": "UpdateDomainAssociation",
    "Description": "Creates a new domain association for an Amplify app"
  },
  {
    "API": "amplify:UpdateWebhook",
    "EventSource": "amplify",
    "EventName": "UpdateWebhook",
    "Description": "Updates a webhook"
  },
  {
    "API": "amplifybackend:CloneBackend",
    "EventSource": "amplifybackend",
    "EventName": "CloneBackend",
    "Description": "This operation clones an existing backend"
  },
  {
    "API": "amplifybackend:CreateBackend",
    "EventSource": "amplifybackend",
    "EventName": "CreateBackend",
    "Description": "This operation creates a backend for an Amplify app"
  },
  {
    "API": "amplifybackend:CreateBackendApi",
    "EventSource": "amplifybackend",
    "EventName": "CreateBackendApi",
    "Description": "Creates a new backend API resource"
  },
  {
    "API": "amplifybackend:CreateBackendAuth",
    "EventSource": "amplifybackend",
    "EventName": "CreateBackendAuth",
    "Description": "Creates a new backend authentication resource"
  },
  {
    "API": "amplifybackend:CreateBackendConfig",
    "EventSource": "amplifybackend",
    "EventName": "CreateBackendConfig",
    "Description": "Creates a config object for a backend"
  },
  {
    "API": "amplifybackend:CreateBackendStorage",
    "EventSource": "amplifybackend",
    "EventName": "CreateBackendStorage",
    "Description": "Creates a backend storage resource"
  },
  {
    "API": "amplifybackend:CreateToken",
    "EventSource": "amplifybackend",
    "EventName": "CreateToken",
    "Description": "Generates a one-time challenge code to authenticate a user into your Amplify Admin UI"
  },
  {
    "API": "amplifybackend:DeleteBackend",
    "EventSource": "amplifybackend",
    "EventName": "DeleteBackend",
    "Description": "Removes an existing environment from your Amplify project"
  },
  {
    "API": "amplifybackend:DeleteBackendApi",
    "EventSource": "amplifybackend",
    "EventName": "DeleteBackendApi",
    "Description": "Deletes an existing backend API resource"
  },
  {
    "API": "amplifybackend:DeleteBackendAuth",
    "EventSource": "amplifybackend",
    "EventName": "DeleteBackendAuth",
    "Description": "Deletes an existing backend authentication resource"
  },
  {
    "API": "amplifybackend:DeleteBackendStorage",
    "EventSource": "amplifybackend",
    "EventName": "DeleteBackendStorage",
    "Description": "Removes the specified backend storage resource"
  },
  {
    "API": "amplifybackend:DeleteToken",
    "EventSource": "amplifybackend",
    "EventName": "DeleteToken",
    "Description": "Deletes the challenge token based on the given appId and sessionId"
  },
  {
    "API": "amplifybackend:GenerateBackendApiModels",
    "EventSource": "amplifybackend",
    "EventName": "GenerateBackendApiModels",
    "Description": "Generates a model schema for an existing backend API resource"
  },
  {
    "API": "amplifybackend:GeneratePresignedUrl",
    "EventSource": "amplifybackend",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "amplifybackend:GetBackend",
    "EventSource": "amplifybackend",
    "EventName": "GetBackend",
    "Description": "Provides project-level details for your Amplify UI project"
  },
  {
    "API": "amplifybackend:GetBackendApi",
    "EventSource": "amplifybackend",
    "EventName": "GetBackendApi",
    "Description": "Gets the details for a backend API"
  },
  {
    "API": "amplifybackend:GetBackendApiModels",
    "EventSource": "amplifybackend",
    "EventName": "GetBackendApiModels",
    "Description": "Gets a model introspection schema for an existing backend API resource"
  },
  {
    "API": "amplifybackend:GetBackendAuth",
    "EventSource": "amplifybackend",
    "EventName": "GetBackendAuth",
    "Description": "Gets a backend auth details"
  },
  {
    "API": "amplifybackend:GetBackendJob",
    "EventSource": "amplifybackend",
    "EventName": "GetBackendJob",
    "Description": "Returns information about a specific job"
  },
  {
    "API": "amplifybackend:GetBackendStorage",
    "EventSource": "amplifybackend",
    "EventName": "GetBackendStorage",
    "Description": "Gets details for a backend storage resource"
  },
  {
    "API": "amplifybackend:GetToken",
    "EventSource": "amplifybackend",
    "EventName": "GetToken",
    "Description": "Gets the challenge token based on the given appId and sessionId"
  },
  {
    "API": "amplifybackend:ImportBackendAuth",
    "EventSource": "amplifybackend",
    "EventName": "ImportBackendAuth",
    "Description": "Imports an existing backend authentication resource"
  },
  {
    "API": "amplifybackend:ImportBackendStorage",
    "EventSource": "amplifybackend",
    "EventName": "ImportBackendStorage",
    "Description": "Imports an existing backend storage resource"
  },
  {
    "API": "amplifybackend:ListBackendJobs",
    "EventSource": "amplifybackend",
    "EventName": "ListBackendJobs",
    "Description": "Lists the jobs for the backend of an Amplify app"
  },
  {
    "API": "amplifybackend:ListS3Buckets",
    "EventSource": "amplifybackend",
    "EventName": "ListS3Buckets",
    "Description": "The list of S3 buckets in your account"
  },
  {
    "API": "amplifybackend:RemoveAllBackends",
    "EventSource": "amplifybackend",
    "EventName": "RemoveAllBackends",
    "Description": "Removes all backend environments from your Amplify project"
  },
  {
    "API": "amplifybackend:RemoveBackendConfig",
    "EventSource": "amplifybackend",
    "EventName": "RemoveBackendConfig",
    "Description": "Removes the AWS resources required to access the Amplify Admin UI"
  },
  {
    "API": "amplifybackend:UpdateBackendApi",
    "EventSource": "amplifybackend",
    "EventName": "UpdateBackendApi",
    "Description": "Updates an existing backend API resource"
  },
  {
    "API": "amplifybackend:UpdateBackendAuth",
    "EventSource": "amplifybackend",
    "EventName": "UpdateBackendAuth",
    "Description": "Updates an existing backend authentication resource"
  },
  {
    "API": "amplifybackend:UpdateBackendConfig",
    "EventSource": "amplifybackend",
    "EventName": "UpdateBackendConfig",
    "Description": "Updates the AWS resources required to access the Amplify Admin UI"
  },
  {
    "API": "amplifybackend:UpdateBackendJob",
    "EventSource": "amplifybackend",
    "EventName": "UpdateBackendJob",
    "Description": "Updates a specific job"
  },
  {
    "API": "amplifybackend:UpdateBackendStorage",
    "EventSource": "amplifybackend",
    "EventName": "UpdateBackendStorage",
    "Description": "Updates an existing backend storage resource"
  },
  {
    "API": "amplifyuibuilder:CreateComponent",
    "EventSource": "amplifyuibuilder",
    "EventName": "CreateComponent",
    "Description": "Creates a new component for an Amplify app"
  },
  {
    "API": "amplifyuibuilder:CreateForm",
    "EventSource": "amplifyuibuilder",
    "EventName": "CreateForm",
    "Description": "Creates a new form for an Amplify app"
  },
  {
    "API": "amplifyuibuilder:CreateTheme",
    "EventSource": "amplifyuibuilder",
    "EventName": "CreateTheme",
    "Description": "Creates a theme to apply to the components in an Amplify app"
  },
  {
    "API": "amplifyuibuilder:DeleteComponent",
    "EventSource": "amplifyuibuilder",
    "EventName": "DeleteComponent",
    "Description": "Deletes a component from an Amplify app"
  },
  {
    "API": "amplifyuibuilder:DeleteForm",
    "EventSource": "amplifyuibuilder",
    "EventName": "DeleteForm",
    "Description": "Deletes a form from an Amplify app"
  },
  {
    "API": "amplifyuibuilder:DeleteTheme",
    "EventSource": "amplifyuibuilder",
    "EventName": "DeleteTheme",
    "Description": "Deletes a theme from an Amplify app"
  },
  {
    "API": "amplifyuibuilder:ExchangeCodeForToken",
    "EventSource": "amplifyuibuilder",
    "EventName": "ExchangeCodeForToken",
    "Description": ""
  },
  {
    "API": "amplifyuibuilder:ExportComponents",
    "EventSource": "amplifyuibuilder",
    "EventName": "ExportComponents",
    "Description": "Exports component configurations to code that is ready to integrate into an Amplify app"
  },
  {
    "API": "amplifyuibuilder:ExportForms",
    "EventSource": "amplifyuibuilder",
    "EventName": "ExportForms",
    "Description": "Exports form configurations to code that is ready to integrate into an Amplify app"
  },
  {
    "API": "amplifyuibuilder:ExportThemes",
    "EventSource": "amplifyuibuilder",
    "EventName": "ExportThemes",
    "Description": "Exports theme configurations to code that is ready to integrate into an Amplify app"
  },
  {
    "API": "amplifyuibuilder:GeneratePresignedUrl",
    "EventSource": "amplifyuibuilder",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "amplifyuibuilder:GetCodegenJob",
    "EventSource": "amplifyuibuilder",
    "EventName": "GetCodegenJob",
    "Description": "Returns an existing code generation job"
  },
  {
    "API": "amplifyuibuilder:GetComponent",
    "EventSource": "amplifyuibuilder",
    "EventName": "GetComponent",
    "Description": "Returns an existing component for an Amplify app"
  },
  {
    "API": "amplifyuibuilder:GetForm",
    "EventSource": "amplifyuibuilder",
    "EventName": "GetForm",
    "Description": "Returns an existing form for an Amplify app"
  },
  {
    "API": "amplifyuibuilder:GetMetadata",
    "EventSource": "amplifyuibuilder",
    "EventName": "GetMetadata",
    "Description": "Returns existing metadata for an Amplify app"
  },
  {
    "API": "amplifyuibuilder:GetTheme",
    "EventSource": "amplifyuibuilder",
    "EventName": "GetTheme",
    "Description": "Returns an existing theme for an Amplify app"
  },
  {
    "API": "amplifyuibuilder:ListCodegenJobs",
    "EventSource": "amplifyuibuilder",
    "EventName": "ListCodegenJobs",
    "Description": "Retrieves a list of code generation jobs for a specified Amplify app and backend environment"
  },
  {
    "API": "amplifyuibuilder:ListComponents",
    "EventSource": "amplifyuibuilder",
    "EventName": "ListComponents",
    "Description": "Retrieves a list of components for a specified Amplify app and backend environment"
  },
  {
    "API": "amplifyuibuilder:ListForms",
    "EventSource": "amplifyuibuilder",
    "EventName": "ListForms",
    "Description": "Retrieves a list of forms for a specified Amplify app and backend environment"
  },
  {
    "API": "amplifyuibuilder:ListTagsForResource",
    "EventSource": "amplifyuibuilder",
    "EventName": "ListTagsForResource",
    "Description": "Returns a list of tags for a specified Amazon Resource Name (ARN)"
  },
  {
    "API": "amplifyuibuilder:ListThemes",
    "EventSource": "amplifyuibuilder",
    "EventName": "ListThemes",
    "Description": "Retrieves a list of themes for a specified Amplify app and backend environment"
  },
  {
    "API": "amplifyuibuilder:PutMetadataFlag",
    "EventSource": "amplifyuibuilder",
    "EventName": "PutMetadataFlag",
    "Description": "Stores the metadata information about a feature on a form"
  },
  {
    "API": "amplifyuibuilder:RefreshToken",
    "EventSource": "amplifyuibuilder",
    "EventName": "RefreshToken",
    "Description": ""
  },
  {
    "API": "amplifyuibuilder:StartCodegenJob",
    "EventSource": "amplifyuibuilder",
    "EventName": "StartCodegenJob",
    "Description": "Starts a code generation job for a specified Amplify app and backend environment"
  },
  {
    "API": "amplifyuibuilder:TagResource",
    "EventSource": "amplifyuibuilder",
    "EventName": "TagResource",
    "Description": "Tags the resource with a tag key and value"
  },
  {
    "API": "amplifyuibuilder:UntagResource",
    "EventSource": "amplifyuibuilder",
    "EventName": "UntagResource",
    "Description": "Untags a resource with a specified Amazon Resource Name (ARN)"
  },
  {
    "API": "amplifyuibuilder:UpdateComponent",
    "EventSource": "amplifyuibuilder",
    "EventName": "UpdateComponent",
    "Description": "Updates an existing component"
  },
  {
    "API": "amplifyuibuilder:UpdateForm",
    "EventSource": "amplifyuibuilder",
    "EventName": "UpdateForm",
    "Description": "Updates an existing form"
  },
  {
    "API": "amplifyuibuilder:UpdateTheme",
    "EventSource": "amplifyuibuilder",
    "EventName": "UpdateTheme",
    "Description": "Updates an existing theme"
  },
  {
    "API": "apigateway:CreateApiKey",
    "EventSource": "apigateway",
    "EventName": "CreateApiKey",
    "Description": "Create an ApiKey resource"
  },
  {
    "API": "apigateway:CreateAuthorizer",
    "EventSource": "apigateway",
    "EventName": "CreateAuthorizer",
    "Description": "Adds a new Authorizer resource to an existing RestApi resource"
  },
  {
    "API": "apigateway:CreateBasePathMapping",
    "EventSource": "apigateway",
    "EventName": "CreateBasePathMapping",
    "Description": "Creates a new BasePathMapping resource"
  },
  {
    "API": "apigateway:CreateDeployment",
    "EventSource": "apigateway",
    "EventName": "CreateDeployment",
    "Description": "Creates a Deployment resource, which makes a specified RestApi callable over the internet"
  },
  {
    "API": "apigateway:CreateDocumentationPart",
    "EventSource": "apigateway",
    "EventName": "CreateDocumentationPart",
    "Description": "Creates a documentation part"
  },
  {
    "API": "apigateway:CreateDocumentationVersion",
    "EventSource": "apigateway",
    "EventName": "CreateDocumentationVersion",
    "Description": "Creates a documentation version"
  },
  {
    "API": "apigateway:CreateDomainName",
    "EventSource": "apigateway",
    "EventName": "CreateDomainName",
    "Description": "Creates a new domain name"
  },
  {
    "API": "apigateway:CreateModel",
    "EventSource": "apigateway",
    "EventName": "CreateModel",
    "Description": "Adds a new Model resource to an existing RestApi resource"
  },
  {
    "API": "apigateway:CreateRequestValidator",
    "EventSource": "apigateway",
    "EventName": "CreateRequestValidator",
    "Description": "Creates a RequestValidator of a given RestApi"
  },
  {
    "API": "apigateway:CreateResource",
    "EventSource": "apigateway",
    "EventName": "CreateResource",
    "Description": "Creates a Resource resource"
  },
  {
    "API": "apigateway:CreateRestApi",
    "EventSource": "apigateway",
    "EventName": "CreateRestApi",
    "Description": "Creates a new RestApi resource"
  },
  {
    "API": "apigateway:CreateStage",
    "EventSource": "apigateway",
    "EventName": "CreateStage",
    "Description": "Creates a new Stage resource that references a pre-existing Deployment for the API"
  },
  {
    "API": "apigateway:CreateUsagePlan",
    "EventSource": "apigateway",
    "EventName": "CreateUsagePlan",
    "Description": "Creates a usage plan with the throttle and quota limits, as well as the associated API stages, specified in the payload"
  },
  {
    "API": "apigateway:CreateUsagePlanKey",
    "EventSource": "apigateway",
    "EventName": "CreateUsagePlanKey",
    "Description": "Creates a usage plan key for adding an existing API key to a usage plan"
  },
  {
    "API": "apigateway:CreateVpcLink",
    "EventSource": "apigateway",
    "EventName": "CreateVpcLink",
    "Description": "Creates a VPC link, under the caller's account in a selected region, in an asynchronous operation that typically takes 2-4 minutes to complete and become operational"
  },
  {
    "API": "apigateway:DeleteApiKey",
    "EventSource": "apigateway",
    "EventName": "DeleteApiKey",
    "Description": "Deletes the ApiKey resource"
  },
  {
    "API": "apigateway:DeleteAuthorizer",
    "EventSource": "apigateway",
    "EventName": "DeleteAuthorizer",
    "Description": "Deletes an existing Authorizer resource"
  },
  {
    "API": "apigateway:DeleteBasePathMapping",
    "EventSource": "apigateway",
    "EventName": "DeleteBasePathMapping",
    "Description": "Deletes the BasePathMapping resource"
  },
  {
    "API": "apigateway:DeleteClientCertificate",
    "EventSource": "apigateway",
    "EventName": "DeleteClientCertificate",
    "Description": "Deletes the ClientCertificate resource"
  },
  {
    "API": "apigateway:DeleteDeployment",
    "EventSource": "apigateway",
    "EventName": "DeleteDeployment",
    "Description": "Deletes a Deployment resource"
  },
  {
    "API": "apigateway:DeleteDocumentationPart",
    "EventSource": "apigateway",
    "EventName": "DeleteDocumentationPart",
    "Description": "Deletes a documentation part"
  },
  {
    "API": "apigateway:DeleteDocumentationVersion",
    "EventSource": "apigateway",
    "EventName": "DeleteDocumentationVersion",
    "Description": "Deletes a documentation version"
  },
  {
    "API": "apigateway:DeleteDomainName",
    "EventSource": "apigateway",
    "EventName": "DeleteDomainName",
    "Description": "Deletes the DomainName resource"
  },
  {
    "API": "apigateway:DeleteGatewayResponse",
    "EventSource": "apigateway",
    "EventName": "DeleteGatewayResponse",
    "Description": "Clears any customization of a GatewayResponse of a specified response type on the given RestApi and resets it with the default settings"
  },
  {
    "API": "apigateway:DeleteIntegration",
    "EventSource": "apigateway",
    "EventName": "DeleteIntegration",
    "Description": "Represents a delete integration"
  },
  {
    "API": "apigateway:DeleteIntegrationResponse",
    "EventSource": "apigateway",
    "EventName": "DeleteIntegrationResponse",
    "Description": "Represents a delete integration response"
  },
  {
    "API": "apigateway:DeleteMethod",
    "EventSource": "apigateway",
    "EventName": "DeleteMethod",
    "Description": "Deletes an existing Method resource"
  },
  {
    "API": "apigateway:DeleteMethodResponse",
    "EventSource": "apigateway",
    "EventName": "DeleteMethodResponse",
    "Description": "Deletes an existing MethodResponse resource"
  },
  {
    "API": "apigateway:DeleteModel",
    "EventSource": "apigateway",
    "EventName": "DeleteModel",
    "Description": "Deletes a model"
  },
  {
    "API": "apigateway:DeleteRequestValidator",
    "EventSource": "apigateway",
    "EventName": "DeleteRequestValidator",
    "Description": "Deletes a RequestValidator of a given RestApi"
  },
  {
    "API": "apigateway:DeleteResource",
    "EventSource": "apigateway",
    "EventName": "DeleteResource",
    "Description": "Deletes a Resource resource"
  },
  {
    "API": "apigateway:DeleteRestApi",
    "EventSource": "apigateway",
    "EventName": "DeleteRestApi",
    "Description": "Deletes the specified API"
  },
  {
    "API": "apigateway:DeleteStage",
    "EventSource": "apigateway",
    "EventName": "DeleteStage",
    "Description": "Deletes a Stage resource"
  },
  {
    "API": "apigateway:DeleteUsagePlan",
    "EventSource": "apigateway",
    "EventName": "DeleteUsagePlan",
    "Description": "Deletes a usage plan of a given plan Id"
  },
  {
    "API": "apigateway:DeleteUsagePlanKey",
    "EventSource": "apigateway",
    "EventName": "DeleteUsagePlanKey",
    "Description": "Deletes a usage plan key and remove the underlying API key from the associated usage plan"
  },
  {
    "API": "apigateway:DeleteVpcLink",
    "EventSource": "apigateway",
    "EventName": "DeleteVpcLink",
    "Description": "Deletes an existing VpcLink of a specified identifier"
  },
  {
    "API": "apigateway:FlushStageAuthorizersCache",
    "EventSource": "apigateway",
    "EventName": "FlushStageAuthorizersCache",
    "Description": "Flushes all authorizer cache entries on a stage"
  },
  {
    "API": "apigateway:FlushStageCache",
    "EventSource": "apigateway",
    "EventName": "FlushStageCache",
    "Description": "Flushes a stage's cache"
  },
  {
    "API": "apigateway:GenerateClientCertificate",
    "EventSource": "apigateway",
    "EventName": "GenerateClientCertificate",
    "Description": "Generates a ClientCertificate resource"
  },
  {
    "API": "apigateway:GeneratePresignedUrl",
    "EventSource": "apigateway",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "apigateway:GetAccount",
    "EventSource": "apigateway",
    "EventName": "GetAccount",
    "Description": "Gets information about the current Account resource"
  },
  {
    "API": "apigateway:GetApiKey",
    "EventSource": "apigateway",
    "EventName": "GetApiKey",
    "Description": "Gets information about the current ApiKey resource"
  },
  {
    "API": "apigateway:GetApiKeys",
    "EventSource": "apigateway",
    "EventName": "GetApiKeys",
    "Description": "Gets information about the current ApiKeys resource"
  },
  {
    "API": "apigateway:GetAuthorizer",
    "EventSource": "apigateway",
    "EventName": "GetAuthorizer",
    "Description": "Describe an existing Authorizer resource"
  },
  {
    "API": "apigateway:GetAuthorizers",
    "EventSource": "apigateway",
    "EventName": "GetAuthorizers",
    "Description": "Describe an existing Authorizers resource"
  },
  {
    "API": "apigateway:GetBasePathMapping",
    "EventSource": "apigateway",
    "EventName": "GetBasePathMapping",
    "Description": "Describe a BasePathMapping resource"
  },
  {
    "API": "apigateway:GetBasePathMappings",
    "EventSource": "apigateway",
    "EventName": "GetBasePathMappings",
    "Description": "Represents a collection of BasePathMapping resources"
  },
  {
    "API": "apigateway:GetClientCertificate",
    "EventSource": "apigateway",
    "EventName": "GetClientCertificate",
    "Description": "Gets information about the current ClientCertificate resource"
  },
  {
    "API": "apigateway:GetClientCertificates",
    "EventSource": "apigateway",
    "EventName": "GetClientCertificates",
    "Description": "Gets a collection of ClientCertificate resources"
  },
  {
    "API": "apigateway:GetDeployment",
    "EventSource": "apigateway",
    "EventName": "GetDeployment",
    "Description": "Gets information about a Deployment resource"
  },
  {
    "API": "apigateway:GetDeployments",
    "EventSource": "apigateway",
    "EventName": "GetDeployments",
    "Description": "Gets information about a Deployments collection"
  },
  {
    "API": "apigateway:GetDocumentationPart",
    "EventSource": "apigateway",
    "EventName": "GetDocumentationPart",
    "Description": "Gets a documentation part"
  },
  {
    "API": "apigateway:GetDocumentationParts",
    "EventSource": "apigateway",
    "EventName": "GetDocumentationParts",
    "Description": "Gets documentation parts"
  },
  {
    "API": "apigateway:GetDocumentationVersion",
    "EventSource": "apigateway",
    "EventName": "GetDocumentationVersion",
    "Description": "Gets a documentation version"
  },
  {
    "API": "apigateway:GetDocumentationVersions",
    "EventSource": "apigateway",
    "EventName": "GetDocumentationVersions",
    "Description": "Gets documentation versions"
  },
  {
    "API": "apigateway:GetDomainName",
    "EventSource": "apigateway",
    "EventName": "GetDomainName",
    "Description": "Represents a domain name that is contained in a simpler, more intuitive URL that can be called"
  },
  {
    "API": "apigateway:GetDomainNames",
    "EventSource": "apigateway",
    "EventName": "GetDomainNames",
    "Description": "Represents a collection of DomainName resources"
  },
  {
    "API": "apigateway:GetExport",
    "EventSource": "apigateway",
    "EventName": "GetExport",
    "Description": "Exports a deployed version of a RestApi in a specified format"
  },
  {
    "API": "apigateway:GetGatewayResponse",
    "EventSource": "apigateway",
    "EventName": "GetGatewayResponse",
    "Description": "Gets a GatewayResponse of a specified response type on the given RestApi"
  },
  {
    "API": "apigateway:GetGatewayResponses",
    "EventSource": "apigateway",
    "EventName": "GetGatewayResponses",
    "Description": "Gets the GatewayResponses collection on the given RestApi"
  },
  {
    "API": "apigateway:GetIntegration",
    "EventSource": "apigateway",
    "EventName": "GetIntegration",
    "Description": "Get the integration settings"
  },
  {
    "API": "apigateway:GetIntegrationResponse",
    "EventSource": "apigateway",
    "EventName": "GetIntegrationResponse",
    "Description": "Represents a get integration response"
  },
  {
    "API": "apigateway:GetMethod",
    "EventSource": "apigateway",
    "EventName": "GetMethod",
    "Description": "Describe an existing Method resource"
  },
  {
    "API": "apigateway:GetMethodResponse",
    "EventSource": "apigateway",
    "EventName": "GetMethodResponse",
    "Description": "Describes a MethodResponse resource"
  },
  {
    "API": "apigateway:GetModel",
    "EventSource": "apigateway",
    "EventName": "GetModel",
    "Description": "Describes an existing model defined for a RestApi resource"
  },
  {
    "API": "apigateway:GetModelTemplate",
    "EventSource": "apigateway",
    "EventName": "GetModelTemplate",
    "Description": "Generates a sample mapping template that can be used to transform a payload into the structure of a model"
  },
  {
    "API": "apigateway:GetModels",
    "EventSource": "apigateway",
    "EventName": "GetModels",
    "Description": "Describes existing Models defined for a RestApi resource"
  },
  {
    "API": "apigateway:GetRequestValidator",
    "EventSource": "apigateway",
    "EventName": "GetRequestValidator",
    "Description": "Gets a RequestValidator of a given RestApi"
  },
  {
    "API": "apigateway:GetRequestValidators",
    "EventSource": "apigateway",
    "EventName": "GetRequestValidators",
    "Description": "Gets the RequestValidators collection of a given RestApi"
  },
  {
    "API": "apigateway:GetResource",
    "EventSource": "apigateway",
    "EventName": "GetResource",
    "Description": "Lists information about a resource"
  },
  {
    "API": "apigateway:GetResources",
    "EventSource": "apigateway",
    "EventName": "GetResources",
    "Description": "Lists information about a collection of Resource resources"
  },
  {
    "API": "apigateway:GetRestApi",
    "EventSource": "apigateway",
    "EventName": "GetRestApi",
    "Description": "Lists the RestApi resource in the collection"
  },
  {
    "API": "apigateway:GetRestApis",
    "EventSource": "apigateway",
    "EventName": "GetRestApis",
    "Description": "Lists the RestApis resources for your collection"
  },
  {
    "API": "apigateway:GetSdk",
    "EventSource": "apigateway",
    "EventName": "GetSdk",
    "Description": "Generates a client SDK for a RestApi and Stage"
  },
  {
    "API": "apigateway:GetSdkType",
    "EventSource": "apigateway",
    "EventName": "GetSdkType",
    "Description": "Gets an SDK type"
  },
  {
    "API": "apigateway:GetSdkTypes",
    "EventSource": "apigateway",
    "EventName": "GetSdkTypes",
    "Description": "Gets SDK types"
  },
  {
    "API": "apigateway:GetStage",
    "EventSource": "apigateway",
    "EventName": "GetStage",
    "Description": "Gets information about a Stage resource"
  },
  {
    "API": "apigateway:GetStages",
    "EventSource": "apigateway",
    "EventName": "GetStages",
    "Description": "Gets information about one or more Stage resources"
  },
  {
    "API": "apigateway:GetTags",
    "EventSource": "apigateway",
    "EventName": "GetTags",
    "Description": "Gets the Tags collection for a given resource"
  },
  {
    "API": "apigateway:GetUsage",
    "EventSource": "apigateway",
    "EventName": "GetUsage",
    "Description": "Gets the usage data of a usage plan in a specified time interval"
  },
  {
    "API": "apigateway:GetUsagePlan",
    "EventSource": "apigateway",
    "EventName": "GetUsagePlan",
    "Description": "Gets a usage plan of a given plan identifier"
  },
  {
    "API": "apigateway:GetUsagePlanKey",
    "EventSource": "apigateway",
    "EventName": "GetUsagePlanKey",
    "Description": "Gets a usage plan key of a given key identifier"
  },
  {
    "API": "apigateway:GetUsagePlanKeys",
    "EventSource": "apigateway",
    "EventName": "GetUsagePlanKeys",
    "Description": "Gets all the usage plan keys representing the API keys added to a specified usage plan"
  },
  {
    "API": "apigateway:GetUsagePlans",
    "EventSource": "apigateway",
    "EventName": "GetUsagePlans",
    "Description": "Gets all the usage plans of the caller's account"
  },
  {
    "API": "apigateway:GetVpcLink",
    "EventSource": "apigateway",
    "EventName": "GetVpcLink",
    "Description": "Gets a specified VPC link under the caller's account in a region"
  },
  {
    "API": "apigateway:GetVpcLinks",
    "EventSource": "apigateway",
    "EventName": "GetVpcLinks",
    "Description": "Gets the VpcLinks collection under the caller's account in a selected region"
  },
  {
    "API": "apigateway:ImportApiKeys",
    "EventSource": "apigateway",
    "EventName": "ImportApiKeys",
    "Description": "Import API keys from an external source, such as a CSV-formatted file"
  },
  {
    "API": "apigateway:ImportDocumentationParts",
    "EventSource": "apigateway",
    "EventName": "ImportDocumentationParts",
    "Description": "Imports documentation parts"
  },
  {
    "API": "apigateway:ImportRestApi",
    "EventSource": "apigateway",
    "EventName": "ImportRestApi",
    "Description": "A feature of the API Gateway control service for creating a new API from an external API definition file"
  },
  {
    "API": "apigateway:PutGatewayResponse",
    "EventSource": "apigateway",
    "EventName": "PutGatewayResponse",
    "Description": "Creates a customization of a GatewayResponse of a specified response type and status code on the given RestApi"
  },
  {
    "API": "apigateway:PutIntegration",
    "EventSource": "apigateway",
    "EventName": "PutIntegration",
    "Description": "Sets up a method's integration"
  },
  {
    "API": "apigateway:PutIntegrationResponse",
    "EventSource": "apigateway",
    "EventName": "PutIntegrationResponse",
    "Description": "Represents a put integration"
  },
  {
    "API": "apigateway:PutMethod",
    "EventSource": "apigateway",
    "EventName": "PutMethod",
    "Description": "Add a method to an existing Resource resource"
  },
  {
    "API": "apigateway:PutMethodResponse",
    "EventSource": "apigateway",
    "EventName": "PutMethodResponse",
    "Description": "Adds a MethodResponse to an existing Method resource"
  },
  {
    "API": "apigateway:PutRestApi",
    "EventSource": "apigateway",
    "EventName": "PutRestApi",
    "Description": "A feature of the API Gateway control service for updating an existing API with an input of external API definitions"
  },
  {
    "API": "apigateway:TagResource",
    "EventSource": "apigateway",
    "EventName": "TagResource",
    "Description": "Adds or updates a tag on a given resource"
  },
  {
    "API": "apigateway:TestInvokeAuthorizer",
    "EventSource": "apigateway",
    "EventName": "TestInvokeAuthorizer",
    "Description": "Simulate the execution of an Authorizer in your RestApi with headers, parameters, and an incoming request body"
  },
  {
    "API": "apigateway:TestInvokeMethod",
    "EventSource": "apigateway",
    "EventName": "TestInvokeMethod",
    "Description": "Simulate the invocation of a Method in your RestApi with headers, parameters, and an incoming request body"
  },
  {
    "API": "apigateway:UntagResource",
    "EventSource": "apigateway",
    "EventName": "UntagResource",
    "Description": "Removes a tag from a given resource"
  },
  {
    "API": "apigateway:UpdateAccount",
    "EventSource": "apigateway",
    "EventName": "UpdateAccount",
    "Description": "Changes information about the current Account resource"
  },
  {
    "API": "apigateway:UpdateApiKey",
    "EventSource": "apigateway",
    "EventName": "UpdateApiKey",
    "Description": "Changes information about an ApiKey resource"
  },
  {
    "API": "apigateway:UpdateAuthorizer",
    "EventSource": "apigateway",
    "EventName": "UpdateAuthorizer",
    "Description": "Updates an existing Authorizer resource"
  },
  {
    "API": "apigateway:UpdateBasePathMapping",
    "EventSource": "apigateway",
    "EventName": "UpdateBasePathMapping",
    "Description": "Changes information about the BasePathMapping resource"
  },
  {
    "API": "apigateway:UpdateClientCertificate",
    "EventSource": "apigateway",
    "EventName": "UpdateClientCertificate",
    "Description": "Changes information about an ClientCertificate resource"
  },
  {
    "API": "apigateway:UpdateDeployment",
    "EventSource": "apigateway",
    "EventName": "UpdateDeployment",
    "Description": "Changes information about a Deployment resource"
  },
  {
    "API": "apigateway:UpdateDocumentationPart",
    "EventSource": "apigateway",
    "EventName": "UpdateDocumentationPart",
    "Description": "Updates a documentation part"
  },
  {
    "API": "apigateway:UpdateDocumentationVersion",
    "EventSource": "apigateway",
    "EventName": "UpdateDocumentationVersion",
    "Description": "Updates a documentation version"
  },
  {
    "API": "apigateway:UpdateDomainName",
    "EventSource": "apigateway",
    "EventName": "UpdateDomainName",
    "Description": "Changes information about the DomainName resource"
  },
  {
    "API": "apigateway:UpdateGatewayResponse",
    "EventSource": "apigateway",
    "EventName": "UpdateGatewayResponse",
    "Description": "Updates a GatewayResponse of a specified response type on the given RestApi"
  },
  {
    "API": "apigateway:UpdateIntegration",
    "EventSource": "apigateway",
    "EventName": "UpdateIntegration",
    "Description": "Represents an update integration"
  },
  {
    "API": "apigateway:UpdateIntegrationResponse",
    "EventSource": "apigateway",
    "EventName": "UpdateIntegrationResponse",
    "Description": "Represents an update integration response"
  },
  {
    "API": "apigateway:UpdateMethod",
    "EventSource": "apigateway",
    "EventName": "UpdateMethod",
    "Description": "Updates an existing Method resource"
  },
  {
    "API": "apigateway:UpdateMethodResponse",
    "EventSource": "apigateway",
    "EventName": "UpdateMethodResponse",
    "Description": "Updates an existing MethodResponse resource"
  },
  {
    "API": "apigateway:UpdateModel",
    "EventSource": "apigateway",
    "EventName": "UpdateModel",
    "Description": "Changes information about a model"
  },
  {
    "API": "apigateway:UpdateRequestValidator",
    "EventSource": "apigateway",
    "EventName": "UpdateRequestValidator",
    "Description": "Updates a RequestValidator of a given RestApi"
  },
  {
    "API": "apigateway:UpdateResource",
    "EventSource": "apigateway",
    "EventName": "UpdateResource",
    "Description": "Changes information about a Resource resource"
  },
  {
    "API": "apigateway:UpdateRestApi",
    "EventSource": "apigateway",
    "EventName": "UpdateRestApi",
    "Description": "Changes information about the specified API"
  },
  {
    "API": "apigateway:UpdateStage",
    "EventSource": "apigateway",
    "EventName": "UpdateStage",
    "Description": "Changes information about a Stage resource"
  },
  {
    "API": "apigateway:UpdateUsage",
    "EventSource": "apigateway",
    "EventName": "UpdateUsage",
    "Description": "Grants a temporary extension to the remaining quota of a usage plan associated with a specified API key"
  },
  {
    "API": "apigateway:UpdateUsagePlan",
    "EventSource": "apigateway",
    "EventName": "UpdateUsagePlan",
    "Description": "Updates a usage plan of a given plan Id"
  },
  {
    "API": "apigateway:UpdateVpcLink",
    "EventSource": "apigateway",
    "EventName": "UpdateVpcLink",
    "Description": "Updates an existing VpcLink of a specified identifier"
  },
  {
    "API": "apigatewaymanagementapi:DeleteConnection",
    "EventSource": "apigatewaymanagementapi",
    "EventName": "DeleteConnection",
    "Description": "Delete the connection with the provided id"
  },
  {
    "API": "apigatewaymanagementapi:GeneratePresignedUrl",
    "EventSource": "apigatewaymanagementapi",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "apigatewaymanagementapi:GetConnection",
    "EventSource": "apigatewaymanagementapi",
    "EventName": "GetConnection",
    "Description": "Get information about the connection with the provided id"
  },
  {
    "API": "apigatewaymanagementapi:PostToConnection",
    "EventSource": "apigatewaymanagementapi",
    "EventName": "PostToConnection",
    "Description": "Sends the provided data to the specified connection"
  },
  {
    "API": "apigatewayv2:CreateApi",
    "EventSource": "apigatewayv2",
    "EventName": "CreateApi",
    "Description": "Creates an Api resource"
  },
  {
    "API": "apigatewayv2:CreateApiMapping",
    "EventSource": "apigatewayv2",
    "EventName": "CreateApiMapping",
    "Description": "Creates an API mapping"
  },
  {
    "API": "apigatewayv2:CreateAuthorizer",
    "EventSource": "apigatewayv2",
    "EventName": "CreateAuthorizer",
    "Description": "Creates an Authorizer for an API"
  },
  {
    "API": "apigatewayv2:CreateDeployment",
    "EventSource": "apigatewayv2",
    "EventName": "CreateDeployment",
    "Description": "Creates a Deployment for an API"
  },
  {
    "API": "apigatewayv2:CreateDomainName",
    "EventSource": "apigatewayv2",
    "EventName": "CreateDomainName",
    "Description": "Creates a domain name"
  },
  {
    "API": "apigatewayv2:CreateIntegration",
    "EventSource": "apigatewayv2",
    "EventName": "CreateIntegration",
    "Description": "Creates an Integration"
  },
  {
    "API": "apigatewayv2:CreateIntegrationResponse",
    "EventSource": "apigatewayv2",
    "EventName": "CreateIntegrationResponse",
    "Description": "Creates an IntegrationResponses"
  },
  {
    "API": "apigatewayv2:CreateModel",
    "EventSource": "apigatewayv2",
    "EventName": "CreateModel",
    "Description": "Creates a Model for an API"
  },
  {
    "API": "apigatewayv2:CreateRoute",
    "EventSource": "apigatewayv2",
    "EventName": "CreateRoute",
    "Description": "Creates a Route for an API"
  },
  {
    "API": "apigatewayv2:CreateRouteResponse",
    "EventSource": "apigatewayv2",
    "EventName": "CreateRouteResponse",
    "Description": "Creates a RouteResponse for a Route"
  },
  {
    "API": "apigatewayv2:CreateStage",
    "EventSource": "apigatewayv2",
    "EventName": "CreateStage",
    "Description": "Creates a Stage for an API"
  },
  {
    "API": "apigatewayv2:CreateVpcLink",
    "EventSource": "apigatewayv2",
    "EventName": "CreateVpcLink",
    "Description": "Creates a VPC link"
  },
  {
    "API": "apigatewayv2:DeleteAccessLogSettings",
    "EventSource": "apigatewayv2",
    "EventName": "DeleteAccessLogSettings",
    "Description": "Deletes the AccessLogSettings for a Stage"
  },
  {
    "API": "apigatewayv2:DeleteApi",
    "EventSource": "apigatewayv2",
    "EventName": "DeleteApi",
    "Description": "Deletes an Api resource"
  },
  {
    "API": "apigatewayv2:DeleteApiMapping",
    "EventSource": "apigatewayv2",
    "EventName": "DeleteApiMapping",
    "Description": "Deletes an API mapping"
  },
  {
    "API": "apigatewayv2:DeleteAuthorizer",
    "EventSource": "apigatewayv2",
    "EventName": "DeleteAuthorizer",
    "Description": "Deletes an Authorizer"
  },
  {
    "API": "apigatewayv2:DeleteCorsConfiguration",
    "EventSource": "apigatewayv2",
    "EventName": "DeleteCorsConfiguration",
    "Description": "Deletes a CORS configuration"
  },
  {
    "API": "apigatewayv2:DeleteDeployment",
    "EventSource": "apigatewayv2",
    "EventName": "DeleteDeployment",
    "Description": "Deletes a Deployment"
  },
  {
    "API": "apigatewayv2:DeleteDomainName",
    "EventSource": "apigatewayv2",
    "EventName": "DeleteDomainName",
    "Description": "Deletes a domain name"
  },
  {
    "API": "apigatewayv2:DeleteIntegration",
    "EventSource": "apigatewayv2",
    "EventName": "DeleteIntegration",
    "Description": "Deletes an Integration"
  },
  {
    "API": "apigatewayv2:DeleteIntegrationResponse",
    "EventSource": "apigatewayv2",
    "EventName": "DeleteIntegrationResponse",
    "Description": "Deletes an IntegrationResponses"
  },
  {
    "API": "apigatewayv2:DeleteModel",
    "EventSource": "apigatewayv2",
    "EventName": "DeleteModel",
    "Description": "Deletes a Model"
  },
  {
    "API": "apigatewayv2:DeleteRoute",
    "EventSource": "apigatewayv2",
    "EventName": "DeleteRoute",
    "Description": "Deletes a Route"
  },
  {
    "API": "apigatewayv2:DeleteRouteRequestParameter",
    "EventSource": "apigatewayv2",
    "EventName": "DeleteRouteRequestParameter",
    "Description": "Deletes a route request parameter"
  },
  {
    "API": "apigatewayv2:DeleteRouteResponse",
    "EventSource": "apigatewayv2",
    "EventName": "DeleteRouteResponse",
    "Description": "Deletes a RouteResponse"
  },
  {
    "API": "apigatewayv2:DeleteRouteSettings",
    "EventSource": "apigatewayv2",
    "EventName": "DeleteRouteSettings",
    "Description": "Deletes the RouteSettings for a stage"
  },
  {
    "API": "apigatewayv2:DeleteStage",
    "EventSource": "apigatewayv2",
    "EventName": "DeleteStage",
    "Description": "Deletes a Stage"
  },
  {
    "API": "apigatewayv2:DeleteVpcLink",
    "EventSource": "apigatewayv2",
    "EventName": "DeleteVpcLink",
    "Description": "Deletes a VPC link"
  },
  {
    "API": "apigatewayv2:ExportApi",
    "EventSource": "apigatewayv2",
    "EventName": "ExportApi",
    "Description": "See also: `AWS API Documentation <https://docs"
  },
  {
    "API": "apigatewayv2:GeneratePresignedUrl",
    "EventSource": "apigatewayv2",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "apigatewayv2:GetApi",
    "EventSource": "apigatewayv2",
    "EventName": "GetApi",
    "Description": "Gets an Api resource"
  },
  {
    "API": "apigatewayv2:GetApiMapping",
    "EventSource": "apigatewayv2",
    "EventName": "GetApiMapping",
    "Description": "Gets an API mapping"
  },
  {
    "API": "apigatewayv2:GetApiMappings",
    "EventSource": "apigatewayv2",
    "EventName": "GetApiMappings",
    "Description": "Gets API mappings"
  },
  {
    "API": "apigatewayv2:GetApis",
    "EventSource": "apigatewayv2",
    "EventName": "GetApis",
    "Description": "Gets a collection of Api resources"
  },
  {
    "API": "apigatewayv2:GetAuthorizer",
    "EventSource": "apigatewayv2",
    "EventName": "GetAuthorizer",
    "Description": "Gets an Authorizer"
  },
  {
    "API": "apigatewayv2:GetAuthorizers",
    "EventSource": "apigatewayv2",
    "EventName": "GetAuthorizers",
    "Description": "Gets the Authorizers for an API"
  },
  {
    "API": "apigatewayv2:GetDeployment",
    "EventSource": "apigatewayv2",
    "EventName": "GetDeployment",
    "Description": "Gets a Deployment"
  },
  {
    "API": "apigatewayv2:GetDeployments",
    "EventSource": "apigatewayv2",
    "EventName": "GetDeployments",
    "Description": "Gets the Deployments for an API"
  },
  {
    "API": "apigatewayv2:GetDomainName",
    "EventSource": "apigatewayv2",
    "EventName": "GetDomainName",
    "Description": "Gets a domain name"
  },
  {
    "API": "apigatewayv2:GetDomainNames",
    "EventSource": "apigatewayv2",
    "EventName": "GetDomainNames",
    "Description": "Gets the domain names for an AWS account"
  },
  {
    "API": "apigatewayv2:GetIntegration",
    "EventSource": "apigatewayv2",
    "EventName": "GetIntegration",
    "Description": "Gets an Integration"
  },
  {
    "API": "apigatewayv2:GetIntegrationResponse",
    "EventSource": "apigatewayv2",
    "EventName": "GetIntegrationResponse",
    "Description": "Gets an IntegrationResponses"
  },
  {
    "API": "apigatewayv2:GetIntegrationResponses",
    "EventSource": "apigatewayv2",
    "EventName": "GetIntegrationResponses",
    "Description": "Gets the IntegrationResponses for an Integration"
  },
  {
    "API": "apigatewayv2:GetIntegrations",
    "EventSource": "apigatewayv2",
    "EventName": "GetIntegrations",
    "Description": "Gets the Integrations for an API"
  },
  {
    "API": "apigatewayv2:GetModel",
    "EventSource": "apigatewayv2",
    "EventName": "GetModel",
    "Description": "Gets a Model"
  },
  {
    "API": "apigatewayv2:GetModelTemplate",
    "EventSource": "apigatewayv2",
    "EventName": "GetModelTemplate",
    "Description": "Gets a model template"
  },
  {
    "API": "apigatewayv2:GetModels",
    "EventSource": "apigatewayv2",
    "EventName": "GetModels",
    "Description": "Gets the Models for an API"
  },
  {
    "API": "apigatewayv2:GetRoute",
    "EventSource": "apigatewayv2",
    "EventName": "GetRoute",
    "Description": "Gets a Route"
  },
  {
    "API": "apigatewayv2:GetRouteResponse",
    "EventSource": "apigatewayv2",
    "EventName": "GetRouteResponse",
    "Description": "Gets a RouteResponse"
  },
  {
    "API": "apigatewayv2:GetRouteResponses",
    "EventSource": "apigatewayv2",
    "EventName": "GetRouteResponses",
    "Description": "Gets the RouteResponses for a Route"
  },
  {
    "API": "apigatewayv2:GetRoutes",
    "EventSource": "apigatewayv2",
    "EventName": "GetRoutes",
    "Description": "Gets the Routes for an API"
  },
  {
    "API": "apigatewayv2:GetStage",
    "EventSource": "apigatewayv2",
    "EventName": "GetStage",
    "Description": "Gets a Stage"
  },
  {
    "API": "apigatewayv2:GetStages",
    "EventSource": "apigatewayv2",
    "EventName": "GetStages",
    "Description": "Gets the Stages for an API"
  },
  {
    "API": "apigatewayv2:GetTags",
    "EventSource": "apigatewayv2",
    "EventName": "GetTags",
    "Description": "Gets a collection of Tag resources"
  },
  {
    "API": "apigatewayv2:GetVpcLink",
    "EventSource": "apigatewayv2",
    "EventName": "GetVpcLink",
    "Description": "Gets a VPC link"
  },
  {
    "API": "apigatewayv2:GetVpcLinks",
    "EventSource": "apigatewayv2",
    "EventName": "GetVpcLinks",
    "Description": "Gets a collection of VPC links"
  },
  {
    "API": "apigatewayv2:ImportApi",
    "EventSource": "apigatewayv2",
    "EventName": "ImportApi",
    "Description": "Imports an API"
  },
  {
    "API": "apigatewayv2:ReimportApi",
    "EventSource": "apigatewayv2",
    "EventName": "ReimportApi",
    "Description": "Puts an Api resource"
  },
  {
    "API": "apigatewayv2:ResetAuthorizersCache",
    "EventSource": "apigatewayv2",
    "EventName": "ResetAuthorizersCache",
    "Description": "Resets all authorizer cache entries on a stage"
  },
  {
    "API": "apigatewayv2:TagResource",
    "EventSource": "apigatewayv2",
    "EventName": "TagResource",
    "Description": "Creates a new Tag resource to represent a tag"
  },
  {
    "API": "apigatewayv2:UntagResource",
    "EventSource": "apigatewayv2",
    "EventName": "UntagResource",
    "Description": "Deletes a Tag"
  },
  {
    "API": "apigatewayv2:UpdateApi",
    "EventSource": "apigatewayv2",
    "EventName": "UpdateApi",
    "Description": "Updates an Api resource"
  },
  {
    "API": "apigatewayv2:UpdateApiMapping",
    "EventSource": "apigatewayv2",
    "EventName": "UpdateApiMapping",
    "Description": "The API mapping"
  },
  {
    "API": "apigatewayv2:UpdateAuthorizer",
    "EventSource": "apigatewayv2",
    "EventName": "UpdateAuthorizer",
    "Description": "Updates an Authorizer"
  },
  {
    "API": "apigatewayv2:UpdateDeployment",
    "EventSource": "apigatewayv2",
    "EventName": "UpdateDeployment",
    "Description": "Updates a Deployment"
  },
  {
    "API": "apigatewayv2:UpdateDomainName",
    "EventSource": "apigatewayv2",
    "EventName": "UpdateDomainName",
    "Description": "Updates a domain name"
  },
  {
    "API": "apigatewayv2:UpdateIntegration",
    "EventSource": "apigatewayv2",
    "EventName": "UpdateIntegration",
    "Description": "Updates an Integration"
  },
  {
    "API": "apigatewayv2:UpdateIntegrationResponse",
    "EventSource": "apigatewayv2",
    "EventName": "UpdateIntegrationResponse",
    "Description": "Updates an IntegrationResponses"
  },
  {
    "API": "apigatewayv2:UpdateModel",
    "EventSource": "apigatewayv2",
    "EventName": "UpdateModel",
    "Description": "Updates a Model"
  },
  {
    "API": "apigatewayv2:UpdateRoute",
    "EventSource": "apigatewayv2",
    "EventName": "UpdateRoute",
    "Description": "Updates a Route"
  },
  {
    "API": "apigatewayv2:UpdateRouteResponse",
    "EventSource": "apigatewayv2",
    "EventName": "UpdateRouteResponse",
    "Description": "Updates a RouteResponse"
  },
  {
    "API": "apigatewayv2:UpdateStage",
    "EventSource": "apigatewayv2",
    "EventName": "UpdateStage",
    "Description": "Updates a Stage"
  },
  {
    "API": "apigatewayv2:UpdateVpcLink",
    "EventSource": "apigatewayv2",
    "EventName": "UpdateVpcLink",
    "Description": "Updates a VPC link"
  },
  {
    "API": "appconfig:CreateApplication",
    "EventSource": "appconfig",
    "EventName": "CreateApplication",
    "Description": "Creates an application"
  },
  {
    "API": "appconfig:CreateConfigurationProfile",
    "EventSource": "appconfig",
    "EventName": "CreateConfigurationProfile",
    "Description": "Creates a configuration profile, which is information that enables AppConfig to access the configuration source"
  },
  {
    "API": "appconfig:CreateDeploymentStrategy",
    "EventSource": "appconfig",
    "EventName": "CreateDeploymentStrategy",
    "Description": "Creates a deployment strategy that defines important criteria for rolling out your configuration to the designated targets"
  },
  {
    "API": "appconfig:CreateEnvironment",
    "EventSource": "appconfig",
    "EventName": "CreateEnvironment",
    "Description": "Creates an environment"
  },
  {
    "API": "appconfig:CreateExtension",
    "EventSource": "appconfig",
    "EventName": "CreateExtension",
    "Description": "Creates an AppConfig extension"
  },
  {
    "API": "appconfig:CreateExtensionAssociation",
    "EventSource": "appconfig",
    "EventName": "CreateExtensionAssociation",
    "Description": "When you create an extension or configure an Amazon Web Services authored extension, you associate the extension with an AppConfig application, environment, or configuration profile"
  },
  {
    "API": "appconfig:CreateHostedConfigurationVersion",
    "EventSource": "appconfig",
    "EventName": "CreateHostedConfigurationVersion",
    "Description": "Creates a new configuration in the AppConfig hosted configuration store"
  },
  {
    "API": "appconfig:DeleteApplication",
    "EventSource": "appconfig",
    "EventName": "DeleteApplication",
    "Description": "Deletes an application"
  },
  {
    "API": "appconfig:DeleteConfigurationProfile",
    "EventSource": "appconfig",
    "EventName": "DeleteConfigurationProfile",
    "Description": "Deletes a configuration profile"
  },
  {
    "API": "appconfig:DeleteDeploymentStrategy",
    "EventSource": "appconfig",
    "EventName": "DeleteDeploymentStrategy",
    "Description": "Deletes a deployment strategy"
  },
  {
    "API": "appconfig:DeleteEnvironment",
    "EventSource": "appconfig",
    "EventName": "DeleteEnvironment",
    "Description": "Deletes an environment"
  },
  {
    "API": "appconfig:DeleteExtension",
    "EventSource": "appconfig",
    "EventName": "DeleteExtension",
    "Description": "Deletes an AppConfig extension"
  },
  {
    "API": "appconfig:DeleteExtensionAssociation",
    "EventSource": "appconfig",
    "EventName": "DeleteExtensionAssociation",
    "Description": "Deletes an extension association"
  },
  {
    "API": "appconfig:DeleteHostedConfigurationVersion",
    "EventSource": "appconfig",
    "EventName": "DeleteHostedConfigurationVersion",
    "Description": "Deletes a version of a configuration from the AppConfig hosted configuration store"
  },
  {
    "API": "appconfig:GeneratePresignedUrl",
    "EventSource": "appconfig",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "appconfig:GetApplication",
    "EventSource": "appconfig",
    "EventName": "GetApplication",
    "Description": "Retrieves information about an application"
  },
  {
    "API": "appconfig:GetConfiguration",
    "EventSource": "appconfig",
    "EventName": "GetConfiguration",
    "Description": "(Deprecated) Retrieves the latest deployed configuration"
  },
  {
    "API": "appconfig:GetConfigurationProfile",
    "EventSource": "appconfig",
    "EventName": "GetConfigurationProfile",
    "Description": "Retrieves information about a configuration profile"
  },
  {
    "API": "appconfig:GetDeployment",
    "EventSource": "appconfig",
    "EventName": "GetDeployment",
    "Description": "Retrieves information about a configuration deployment"
  },
  {
    "API": "appconfig:GetDeploymentStrategy",
    "EventSource": "appconfig",
    "EventName": "GetDeploymentStrategy",
    "Description": "Retrieves information about a deployment strategy"
  },
  {
    "API": "appconfig:GetEnvironment",
    "EventSource": "appconfig",
    "EventName": "GetEnvironment",
    "Description": "Retrieves information about an environment"
  },
  {
    "API": "appconfig:GetExtension",
    "EventSource": "appconfig",
    "EventName": "GetExtension",
    "Description": "Returns information about an AppConfig extension"
  },
  {
    "API": "appconfig:GetExtensionAssociation",
    "EventSource": "appconfig",
    "EventName": "GetExtensionAssociation",
    "Description": "Returns information about an AppConfig extension association"
  },
  {
    "API": "appconfig:GetHostedConfigurationVersion",
    "EventSource": "appconfig",
    "EventName": "GetHostedConfigurationVersion",
    "Description": "Retrieves information about a specific configuration version"
  },
  {
    "API": "appconfig:ListApplications",
    "EventSource": "appconfig",
    "EventName": "ListApplications",
    "Description": "Lists all applications in your Amazon Web Services account"
  },
  {
    "API": "appconfig:ListConfigurationProfiles",
    "EventSource": "appconfig",
    "EventName": "ListConfigurationProfiles",
    "Description": "Lists the configuration profiles for an application"
  },
  {
    "API": "appconfig:ListDeploymentStrategies",
    "EventSource": "appconfig",
    "EventName": "ListDeploymentStrategies",
    "Description": "Lists deployment strategies"
  },
  {
    "API": "appconfig:ListDeployments",
    "EventSource": "appconfig",
    "EventName": "ListDeployments",
    "Description": "Lists the deployments for an environment in descending deployment number order"
  },
  {
    "API": "appconfig:ListEnvironments",
    "EventSource": "appconfig",
    "EventName": "ListEnvironments",
    "Description": "Lists the environments for an application"
  },
  {
    "API": "appconfig:ListExtensionAssociations",
    "EventSource": "appconfig",
    "EventName": "ListExtensionAssociations",
    "Description": "Lists all AppConfig extension associations in the account"
  },
  {
    "API": "appconfig:ListExtensions",
    "EventSource": "appconfig",
    "EventName": "ListExtensions",
    "Description": "Lists all custom and Amazon Web Services authored AppConfig extensions in the account"
  },
  {
    "API": "appconfig:ListHostedConfigurationVersions",
    "EventSource": "appconfig",
    "EventName": "ListHostedConfigurationVersions",
    "Description": "Lists configurations stored in the AppConfig hosted configuration store by version"
  },
  {
    "API": "appconfig:ListTagsForResource",
    "EventSource": "appconfig",
    "EventName": "ListTagsForResource",
    "Description": "Retrieves the list of key-value tags assigned to the resource"
  },
  {
    "API": "appconfig:StartDeployment",
    "EventSource": "appconfig",
    "EventName": "StartDeployment",
    "Description": "Starts a deployment"
  },
  {
    "API": "appconfig:StopDeployment",
    "EventSource": "appconfig",
    "EventName": "StopDeployment",
    "Description": "Stops a deployment"
  },
  {
    "API": "appconfig:TagResource",
    "EventSource": "appconfig",
    "EventName": "TagResource",
    "Description": "Assigns metadata to an AppConfig resource"
  },
  {
    "API": "appconfig:UntagResource",
    "EventSource": "appconfig",
    "EventName": "UntagResource",
    "Description": "Deletes a tag key and value from an AppConfig resource"
  },
  {
    "API": "appconfig:UpdateApplication",
    "EventSource": "appconfig",
    "EventName": "UpdateApplication",
    "Description": "Updates an application"
  },
  {
    "API": "appconfig:UpdateConfigurationProfile",
    "EventSource": "appconfig",
    "EventName": "UpdateConfigurationProfile",
    "Description": "Updates a configuration profile"
  },
  {
    "API": "appconfig:UpdateDeploymentStrategy",
    "EventSource": "appconfig",
    "EventName": "UpdateDeploymentStrategy",
    "Description": "Updates a deployment strategy"
  },
  {
    "API": "appconfig:UpdateEnvironment",
    "EventSource": "appconfig",
    "EventName": "UpdateEnvironment",
    "Description": "Updates an environment"
  },
  {
    "API": "appconfig:UpdateExtension",
    "EventSource": "appconfig",
    "EventName": "UpdateExtension",
    "Description": "Updates an AppConfig extension"
  },
  {
    "API": "appconfig:UpdateExtensionAssociation",
    "EventSource": "appconfig",
    "EventName": "UpdateExtensionAssociation",
    "Description": "Updates an association"
  },
  {
    "API": "appconfig:ValidateConfiguration",
    "EventSource": "appconfig",
    "EventName": "ValidateConfiguration",
    "Description": "Uses the validators in a configuration profile to validate a configuration"
  },
  {
    "API": "appconfigdata:GeneratePresignedUrl",
    "EventSource": "appconfigdata",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "appconfigdata:GetLatestConfiguration",
    "EventSource": "appconfigdata",
    "EventName": "GetLatestConfiguration",
    "Description": "Retrieves the latest deployed configuration"
  },
  {
    "API": "appconfigdata:StartConfigurationSession",
    "EventSource": "appconfigdata",
    "EventName": "StartConfigurationSession",
    "Description": "Starts a configuration session used to retrieve a deployed configuration"
  },
  {
    "API": "appfabric:BatchGetUserAccessTasks",
    "EventSource": "appfabric",
    "EventName": "BatchGetUserAccessTasks",
    "Description": "Gets user access details in a batch request"
  },
  {
    "API": "appfabric:ConnectAppAuthorization",
    "EventSource": "appfabric",
    "EventName": "ConnectAppAuthorization",
    "Description": "Establishes a connection between Amazon Web Services AppFabric and an application, which allows AppFabric to call the APIs of the application"
  },
  {
    "API": "appfabric:CreateAppAuthorization",
    "EventSource": "appfabric",
    "EventName": "CreateAppAuthorization",
    "Description": "Creates an app authorization within an app bundle, which allows AppFabric to connect to an application"
  },
  {
    "API": "appfabric:CreateAppBundle",
    "EventSource": "appfabric",
    "EventName": "CreateAppBundle",
    "Description": "Creates an app bundle to collect data from an application using AppFabric"
  },
  {
    "API": "appfabric:CreateIngestion",
    "EventSource": "appfabric",
    "EventName": "CreateIngestion",
    "Description": "Creates a data ingestion for an application"
  },
  {
    "API": "appfabric:CreateIngestionDestination",
    "EventSource": "appfabric",
    "EventName": "CreateIngestionDestination",
    "Description": "Creates an ingestion destination, which specifies how an application's ingested data is processed by Amazon Web Services AppFabric and where it's delivered"
  },
  {
    "API": "appfabric:DeleteAppAuthorization",
    "EventSource": "appfabric",
    "EventName": "DeleteAppAuthorization",
    "Description": "Deletes an app authorization"
  },
  {
    "API": "appfabric:DeleteAppBundle",
    "EventSource": "appfabric",
    "EventName": "DeleteAppBundle",
    "Description": "Deletes an app bundle"
  },
  {
    "API": "appfabric:DeleteIngestion",
    "EventSource": "appfabric",
    "EventName": "DeleteIngestion",
    "Description": "Deletes an ingestion"
  },
  {
    "API": "appfabric:DeleteIngestionDestination",
    "EventSource": "appfabric",
    "EventName": "DeleteIngestionDestination",
    "Description": "Deletes an ingestion destination"
  },
  {
    "API": "appfabric:GeneratePresignedUrl",
    "EventSource": "appfabric",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "appfabric:GetAppAuthorization",
    "EventSource": "appfabric",
    "EventName": "GetAppAuthorization",
    "Description": "Returns information about an app authorization"
  },
  {
    "API": "appfabric:GetAppBundle",
    "EventSource": "appfabric",
    "EventName": "GetAppBundle",
    "Description": "Returns information about an app bundle"
  },
  {
    "API": "appfabric:GetIngestion",
    "EventSource": "appfabric",
    "EventName": "GetIngestion",
    "Description": "Returns information about an ingestion"
  },
  {
    "API": "appfabric:GetIngestionDestination",
    "EventSource": "appfabric",
    "EventName": "GetIngestionDestination",
    "Description": "Returns information about an ingestion destination"
  },
  {
    "API": "appfabric:ListAppAuthorizations",
    "EventSource": "appfabric",
    "EventName": "ListAppAuthorizations",
    "Description": "Returns a list of all app authorizations configured for an app bundle"
  },
  {
    "API": "appfabric:ListAppBundles",
    "EventSource": "appfabric",
    "EventName": "ListAppBundles",
    "Description": "Returns a list of app bundles"
  },
  {
    "API": "appfabric:ListIngestionDestinations",
    "EventSource": "appfabric",
    "EventName": "ListIngestionDestinations",
    "Description": "Returns a list of all ingestion destinations configured for an ingestion"
  },
  {
    "API": "appfabric:ListIngestions",
    "EventSource": "appfabric",
    "EventName": "ListIngestions",
    "Description": "Returns a list of all ingestions configured for an app bundle"
  },
  {
    "API": "appfabric:ListTagsForResource",
    "EventSource": "appfabric",
    "EventName": "ListTagsForResource",
    "Description": "Returns a list of tags for a resource"
  },
  {
    "API": "appfabric:StartIngestion",
    "EventSource": "appfabric",
    "EventName": "StartIngestion",
    "Description": "Starts (enables) an ingestion, which collects data from an application"
  },
  {
    "API": "appfabric:StartUserAccessTasks",
    "EventSource": "appfabric",
    "EventName": "StartUserAccessTasks",
    "Description": "Starts the tasks to search user access status for a specific email address"
  },
  {
    "API": "appfabric:StopIngestion",
    "EventSource": "appfabric",
    "EventName": "StopIngestion",
    "Description": "Stops (disables) an ingestion"
  },
  {
    "API": "appfabric:TagResource",
    "EventSource": "appfabric",
    "EventName": "TagResource",
    "Description": "Assigns one or more tags (key-value pairs) to the specified resource"
  },
  {
    "API": "appfabric:UntagResource",
    "EventSource": "appfabric",
    "EventName": "UntagResource",
    "Description": "Removes a tag or tags from a resource"
  },
  {
    "API": "appfabric:UpdateAppAuthorization",
    "EventSource": "appfabric",
    "EventName": "UpdateAppAuthorization",
    "Description": "Updates an app authorization within an app bundle, which allows AppFabric to connect to an application"
  },
  {
    "API": "appfabric:UpdateIngestionDestination",
    "EventSource": "appfabric",
    "EventName": "UpdateIngestionDestination",
    "Description": "Updates an ingestion destination, which specifies how an application's ingested data is processed by Amazon Web Services AppFabric and where it's delivered"
  },
  {
    "API": "appflow:CancelFlowExecutions",
    "EventSource": "appflow",
    "EventName": "CancelFlowExecutions",
    "Description": "Cancels active runs for a flow"
  },
  {
    "API": "appflow:CreateConnectorProfile",
    "EventSource": "appflow",
    "EventName": "CreateConnectorProfile",
    "Description": "Creates a new connector profile associated with your Amazon Web Services account"
  },
  {
    "API": "appflow:CreateFlow",
    "EventSource": "appflow",
    "EventName": "CreateFlow",
    "Description": "Enables your application to create a new flow using Amazon AppFlow"
  },
  {
    "API": "appflow:DeleteConnectorProfile",
    "EventSource": "appflow",
    "EventName": "DeleteConnectorProfile",
    "Description": "Enables you to delete an existing connector profile"
  },
  {
    "API": "appflow:DeleteFlow",
    "EventSource": "appflow",
    "EventName": "DeleteFlow",
    "Description": "Enables your application to delete an existing flow"
  },
  {
    "API": "appflow:DescribeConnector",
    "EventSource": "appflow",
    "EventName": "DescribeConnector",
    "Description": "Describes the given custom connector registered in your Amazon Web Services account"
  },
  {
    "API": "appflow:DescribeConnectorEntity",
    "EventSource": "appflow",
    "EventName": "DescribeConnectorEntity",
    "Description": "Provides details regarding the entity used with the connector, with a description of the data model for each field in that entity"
  },
  {
    "API": "appflow:DescribeConnectorProfiles",
    "EventSource": "appflow",
    "EventName": "DescribeConnectorProfiles",
    "Description": "Returns a list of ``connector-profile`` details matching the provided ``connector-profile`` names and ``connector-types``"
  },
  {
    "API": "appflow:DescribeConnectors",
    "EventSource": "appflow",
    "EventName": "DescribeConnectors",
    "Description": "Describes the connectors vended by Amazon AppFlow for specified connector types"
  },
  {
    "API": "appflow:DescribeFlow",
    "EventSource": "appflow",
    "EventName": "DescribeFlow",
    "Description": "Provides a description of the specified flow"
  },
  {
    "API": "appflow:DescribeFlowExecutionRecords",
    "EventSource": "appflow",
    "EventName": "DescribeFlowExecutionRecords",
    "Description": "Fetches the execution history of the flow"
  },
  {
    "API": "appflow:GeneratePresignedUrl",
    "EventSource": "appflow",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "appflow:ListConnectorEntities",
    "EventSource": "appflow",
    "EventName": "ListConnectorEntities",
    "Description": "Returns the list of available connector entities supported by Amazon AppFlow"
  },
  {
    "API": "appflow:ListConnectors",
    "EventSource": "appflow",
    "EventName": "ListConnectors",
    "Description": "Returns the list of all registered custom connectors in your Amazon Web Services account"
  },
  {
    "API": "appflow:ListFlows",
    "EventSource": "appflow",
    "EventName": "ListFlows",
    "Description": "Lists all of the flows associated with your account"
  },
  {
    "API": "appflow:ListTagsForResource",
    "EventSource": "appflow",
    "EventName": "ListTagsForResource",
    "Description": "Retrieves the tags that are associated with a specified flow"
  },
  {
    "API": "appflow:RegisterConnector",
    "EventSource": "appflow",
    "EventName": "RegisterConnector",
    "Description": "Registers a new custom connector with your Amazon Web Services account"
  },
  {
    "API": "appflow:ResetConnectorMetadataCache",
    "EventSource": "appflow",
    "EventName": "ResetConnectorMetadataCache",
    "Description": "Resets metadata about your connector entities that Amazon AppFlow stored in its cache"
  },
  {
    "API": "appflow:StartFlow",
    "EventSource": "appflow",
    "EventName": "StartFlow",
    "Description": "Activates an existing flow"
  },
  {
    "API": "appflow:StopFlow",
    "EventSource": "appflow",
    "EventName": "StopFlow",
    "Description": "Deactivates the existing flow"
  },
  {
    "API": "appflow:TagResource",
    "EventSource": "appflow",
    "EventName": "TagResource",
    "Description": "Applies a tag to the specified flow"
  },
  {
    "API": "appflow:UnregisterConnector",
    "EventSource": "appflow",
    "EventName": "UnregisterConnector",
    "Description": "Unregisters the custom connector registered in your account that matches the connector label provided in the request"
  },
  {
    "API": "appflow:UntagResource",
    "EventSource": "appflow",
    "EventName": "UntagResource",
    "Description": "Removes a tag from the specified flow"
  },
  {
    "API": "appflow:UpdateConnectorProfile",
    "EventSource": "appflow",
    "EventName": "UpdateConnectorProfile",
    "Description": "Updates a given connector profile associated with your account"
  },
  {
    "API": "appflow:UpdateConnectorRegistration",
    "EventSource": "appflow",
    "EventName": "UpdateConnectorRegistration",
    "Description": "Updates a custom connector that you've previously registered"
  },
  {
    "API": "appflow:UpdateFlow",
    "EventSource": "appflow",
    "EventName": "UpdateFlow",
    "Description": "Updates an existing flow"
  },
  {
    "API": "appintegrations:CreateApplication",
    "EventSource": "appintegrations",
    "EventName": "CreateApplication",
    "Description": "This API is in preview release and subject to change"
  },
  {
    "API": "appintegrations:CreateDataIntegration",
    "EventSource": "appintegrations",
    "EventName": "CreateDataIntegration",
    "Description": "Creates and persists a DataIntegration resource"
  },
  {
    "API": "appintegrations:CreateEventIntegration",
    "EventSource": "appintegrations",
    "EventName": "CreateEventIntegration",
    "Description": "Creates an EventIntegration, given a specified name, description, and a reference to an Amazon EventBridge bus in your account and a partner event source that pushes events to that bus"
  },
  {
    "API": "appintegrations:DeleteApplication",
    "EventSource": "appintegrations",
    "EventName": "DeleteApplication",
    "Description": "Deletes the Application"
  },
  {
    "API": "appintegrations:DeleteDataIntegration",
    "EventSource": "appintegrations",
    "EventName": "DeleteDataIntegration",
    "Description": "Deletes the DataIntegration"
  },
  {
    "API": "appintegrations:DeleteEventIntegration",
    "EventSource": "appintegrations",
    "EventName": "DeleteEventIntegration",
    "Description": "Deletes the specified existing event integration"
  },
  {
    "API": "appintegrations:GeneratePresignedUrl",
    "EventSource": "appintegrations",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "appintegrations:GetApplication",
    "EventSource": "appintegrations",
    "EventName": "GetApplication",
    "Description": "This API is in preview release and subject to change"
  },
  {
    "API": "appintegrations:GetDataIntegration",
    "EventSource": "appintegrations",
    "EventName": "GetDataIntegration",
    "Description": "Returns information about the DataIntegration"
  },
  {
    "API": "appintegrations:GetEventIntegration",
    "EventSource": "appintegrations",
    "EventName": "GetEventIntegration",
    "Description": "Returns information about the event integration"
  },
  {
    "API": "appintegrations:ListApplicationAssociations",
    "EventSource": "appintegrations",
    "EventName": "ListApplicationAssociations",
    "Description": "Returns a paginated list of application associations for an application"
  },
  {
    "API": "appintegrations:ListApplications",
    "EventSource": "appintegrations",
    "EventName": "ListApplications",
    "Description": "This API is in preview release and subject to change"
  },
  {
    "API": "appintegrations:ListDataIntegrationAssociations",
    "EventSource": "appintegrations",
    "EventName": "ListDataIntegrationAssociations",
    "Description": "Returns a paginated list of DataIntegration associations in the account"
  },
  {
    "API": "appintegrations:ListDataIntegrations",
    "EventSource": "appintegrations",
    "EventName": "ListDataIntegrations",
    "Description": "Returns a paginated list of DataIntegrations in the account"
  },
  {
    "API": "appintegrations:ListEventIntegrationAssociations",
    "EventSource": "appintegrations",
    "EventName": "ListEventIntegrationAssociations",
    "Description": "Returns a paginated list of event integration associations in the account"
  },
  {
    "API": "appintegrations:ListEventIntegrations",
    "EventSource": "appintegrations",
    "EventName": "ListEventIntegrations",
    "Description": "Returns a paginated list of event integrations in the account"
  },
  {
    "API": "appintegrations:ListTagsForResource",
    "EventSource": "appintegrations",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags for the specified resource"
  },
  {
    "API": "appintegrations:TagResource",
    "EventSource": "appintegrations",
    "EventName": "TagResource",
    "Description": "Adds the specified tags to the specified resource"
  },
  {
    "API": "appintegrations:UntagResource",
    "EventSource": "appintegrations",
    "EventName": "UntagResource",
    "Description": "Removes the specified tags from the specified resource"
  },
  {
    "API": "appintegrations:UpdateApplication",
    "EventSource": "appintegrations",
    "EventName": "UpdateApplication",
    "Description": "This API is in preview release and subject to change"
  },
  {
    "API": "appintegrations:UpdateDataIntegration",
    "EventSource": "appintegrations",
    "EventName": "UpdateDataIntegration",
    "Description": "Updates the description of a DataIntegration"
  },
  {
    "API": "appintegrations:UpdateEventIntegration",
    "EventSource": "appintegrations",
    "EventName": "UpdateEventIntegration",
    "Description": "Updates the description of an event integration"
  },
  {
    "API": "application-autoscaling:DeleteScalingPolicy",
    "EventSource": "application-autoscaling",
    "EventName": "DeleteScalingPolicy",
    "Description": "Deletes the specified scaling policy for an Application Auto Scaling scalable target"
  },
  {
    "API": "application-autoscaling:DeleteScheduledAction",
    "EventSource": "application-autoscaling",
    "EventName": "DeleteScheduledAction",
    "Description": "Deletes the specified scheduled action for an Application Auto Scaling scalable target"
  },
  {
    "API": "application-autoscaling:DeregisterScalableTarget",
    "EventSource": "application-autoscaling",
    "EventName": "DeregisterScalableTarget",
    "Description": "Deregisters an Application Auto Scaling scalable target when you have finished using it"
  },
  {
    "API": "application-autoscaling:DescribeScalableTargets",
    "EventSource": "application-autoscaling",
    "EventName": "DescribeScalableTargets",
    "Description": "Gets information about the scalable targets in the specified namespace"
  },
  {
    "API": "application-autoscaling:DescribeScalingActivities",
    "EventSource": "application-autoscaling",
    "EventName": "DescribeScalingActivities",
    "Description": "Provides descriptive information about the scaling activities in the specified namespace from the previous six weeks"
  },
  {
    "API": "application-autoscaling:DescribeScalingPolicies",
    "EventSource": "application-autoscaling",
    "EventName": "DescribeScalingPolicies",
    "Description": "Describes the Application Auto Scaling scaling policies for the specified service namespace"
  },
  {
    "API": "application-autoscaling:DescribeScheduledActions",
    "EventSource": "application-autoscaling",
    "EventName": "DescribeScheduledActions",
    "Description": "Describes the Application Auto Scaling scheduled actions for the specified service namespace"
  },
  {
    "API": "application-autoscaling:GeneratePresignedUrl",
    "EventSource": "application-autoscaling",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "application-autoscaling:ListTagsForResource",
    "EventSource": "application-autoscaling",
    "EventName": "ListTagsForResource",
    "Description": "Returns all the tags on the specified Application Auto Scaling scalable target"
  },
  {
    "API": "application-autoscaling:PutScalingPolicy",
    "EventSource": "application-autoscaling",
    "EventName": "PutScalingPolicy",
    "Description": "Creates or updates a scaling policy for an Application Auto Scaling scalable target"
  },
  {
    "API": "application-autoscaling:PutScheduledAction",
    "EventSource": "application-autoscaling",
    "EventName": "PutScheduledAction",
    "Description": "Creates or updates a scheduled action for an Application Auto Scaling scalable target"
  },
  {
    "API": "application-autoscaling:RegisterScalableTarget",
    "EventSource": "application-autoscaling",
    "EventName": "RegisterScalableTarget",
    "Description": "Registers or updates a scalable target, which is the resource that you want to scale"
  },
  {
    "API": "application-autoscaling:TagResource",
    "EventSource": "application-autoscaling",
    "EventName": "TagResource",
    "Description": "Adds or edits tags on an Application Auto Scaling scalable target"
  },
  {
    "API": "application-autoscaling:UntagResource",
    "EventSource": "application-autoscaling",
    "EventName": "UntagResource",
    "Description": "Deletes tags from an Application Auto Scaling scalable target"
  },
  {
    "API": "application-insights:AddWorkload",
    "EventSource": "application-insights",
    "EventName": "AddWorkload",
    "Description": "Adds a workload to a component"
  },
  {
    "API": "application-insights:CreateApplication",
    "EventSource": "application-insights",
    "EventName": "CreateApplication",
    "Description": "Adds an application that is created from a resource group"
  },
  {
    "API": "application-insights:CreateComponent",
    "EventSource": "application-insights",
    "EventName": "CreateComponent",
    "Description": "Creates a custom component by grouping similar standalone instances to monitor"
  },
  {
    "API": "application-insights:CreateLogPattern",
    "EventSource": "application-insights",
    "EventName": "CreateLogPattern",
    "Description": "Adds an log pattern to a ``LogPatternSet``"
  },
  {
    "API": "application-insights:DeleteApplication",
    "EventSource": "application-insights",
    "EventName": "DeleteApplication",
    "Description": "Removes the specified application from monitoring"
  },
  {
    "API": "application-insights:DeleteComponent",
    "EventSource": "application-insights",
    "EventName": "DeleteComponent",
    "Description": "Ungroups a custom component"
  },
  {
    "API": "application-insights:DeleteLogPattern",
    "EventSource": "application-insights",
    "EventName": "DeleteLogPattern",
    "Description": "Removes the specified log pattern from a ``LogPatternSet``"
  },
  {
    "API": "application-insights:DescribeApplication",
    "EventSource": "application-insights",
    "EventName": "DescribeApplication",
    "Description": "Describes the application"
  },
  {
    "API": "application-insights:DescribeComponent",
    "EventSource": "application-insights",
    "EventName": "DescribeComponent",
    "Description": "Describes a component and lists the resources that are grouped together in a component"
  },
  {
    "API": "application-insights:DescribeComponentConfiguration",
    "EventSource": "application-insights",
    "EventName": "DescribeComponentConfiguration",
    "Description": "Describes the monitoring configuration of the component"
  },
  {
    "API": "application-insights:DescribeComponentConfigurationRecommendation",
    "EventSource": "application-insights",
    "EventName": "DescribeComponentConfigurationRecommendation",
    "Description": "Describes the recommended monitoring configuration of the component"
  },
  {
    "API": "application-insights:DescribeLogPattern",
    "EventSource": "application-insights",
    "EventName": "DescribeLogPattern",
    "Description": "Describe a specific log pattern from a ``LogPatternSet``"
  },
  {
    "API": "application-insights:DescribeObservation",
    "EventSource": "application-insights",
    "EventName": "DescribeObservation",
    "Description": "Describes an anomaly or error with the application"
  },
  {
    "API": "application-insights:DescribeProblem",
    "EventSource": "application-insights",
    "EventName": "DescribeProblem",
    "Description": "Describes an application problem"
  },
  {
    "API": "application-insights:DescribeProblemObservations",
    "EventSource": "application-insights",
    "EventName": "DescribeProblemObservations",
    "Description": "Describes the anomalies or errors associated with the problem"
  },
  {
    "API": "application-insights:DescribeWorkload",
    "EventSource": "application-insights",
    "EventName": "DescribeWorkload",
    "Description": "Describes a workload and its configuration"
  },
  {
    "API": "application-insights:GeneratePresignedUrl",
    "EventSource": "application-insights",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "application-insights:ListApplications",
    "EventSource": "application-insights",
    "EventName": "ListApplications",
    "Description": "Lists the IDs of the applications that you are monitoring"
  },
  {
    "API": "application-insights:ListComponents",
    "EventSource": "application-insights",
    "EventName": "ListComponents",
    "Description": "Lists the auto-grouped, standalone, and custom components of the application"
  },
  {
    "API": "application-insights:ListConfigurationHistory",
    "EventSource": "application-insights",
    "EventName": "ListConfigurationHistory",
    "Description": "Lists the INFO, WARN, and ERROR events for periodic configuration updates performed by Application Insights"
  },
  {
    "API": "application-insights:ListLogPatternSets",
    "EventSource": "application-insights",
    "EventName": "ListLogPatternSets",
    "Description": "Lists the log pattern sets in the specific application"
  },
  {
    "API": "application-insights:ListLogPatterns",
    "EventSource": "application-insights",
    "EventName": "ListLogPatterns",
    "Description": "Lists the log patterns in the specific log ``LogPatternSet``"
  },
  {
    "API": "application-insights:ListProblems",
    "EventSource": "application-insights",
    "EventName": "ListProblems",
    "Description": "Lists the problems with your application"
  },
  {
    "API": "application-insights:ListTagsForResource",
    "EventSource": "application-insights",
    "EventName": "ListTagsForResource",
    "Description": "Retrieve a list of the tags (keys and values) that are associated with a specified application"
  },
  {
    "API": "application-insights:ListWorkloads",
    "EventSource": "application-insights",
    "EventName": "ListWorkloads",
    "Description": "Lists the workloads that are configured on a given component"
  },
  {
    "API": "application-insights:RemoveWorkload",
    "EventSource": "application-insights",
    "EventName": "RemoveWorkload",
    "Description": "Remove workload from a component"
  },
  {
    "API": "application-insights:TagResource",
    "EventSource": "application-insights",
    "EventName": "TagResource",
    "Description": "Add one or more tags (keys and values) to a specified application"
  },
  {
    "API": "application-insights:UntagResource",
    "EventSource": "application-insights",
    "EventName": "UntagResource",
    "Description": "Remove one or more tags (keys and values) from a specified application"
  },
  {
    "API": "application-insights:UpdateApplication",
    "EventSource": "application-insights",
    "EventName": "UpdateApplication",
    "Description": "Updates the application"
  },
  {
    "API": "application-insights:UpdateComponent",
    "EventSource": "application-insights",
    "EventName": "UpdateComponent",
    "Description": "Updates the custom component name and/or the list of resources that make up the component"
  },
  {
    "API": "application-insights:UpdateComponentConfiguration",
    "EventSource": "application-insights",
    "EventName": "UpdateComponentConfiguration",
    "Description": "Updates the monitoring configurations for the component"
  },
  {
    "API": "application-insights:UpdateLogPattern",
    "EventSource": "application-insights",
    "EventName": "UpdateLogPattern",
    "Description": "Adds a log pattern to a ``LogPatternSet``"
  },
  {
    "API": "application-insights:UpdateProblem",
    "EventSource": "application-insights",
    "EventName": "UpdateProblem",
    "Description": "Updates the visibility of the problem or specifies the problem as ``RESOLVED``"
  },
  {
    "API": "application-insights:UpdateWorkload",
    "EventSource": "application-insights",
    "EventName": "UpdateWorkload",
    "Description": "Adds a workload to a component"
  },
  {
    "API": "application-signals:BatchGetServiceLevelObjectiveBudgetReport",
    "EventSource": "application-signals",
    "EventName": "BatchGetServiceLevelObjectiveBudgetReport",
    "Description": "Use this operation to retrieve one or more *service level objective (SLO) budget reports*"
  },
  {
    "API": "application-signals:CreateServiceLevelObjective",
    "EventSource": "application-signals",
    "EventName": "CreateServiceLevelObjective",
    "Description": "Creates a service level objective (SLO), which can help you ensure that your critical business operations are meeting customer expectations"
  },
  {
    "API": "application-signals:DeleteServiceLevelObjective",
    "EventSource": "application-signals",
    "EventName": "DeleteServiceLevelObjective",
    "Description": "Deletes the specified service level objective"
  },
  {
    "API": "application-signals:GeneratePresignedUrl",
    "EventSource": "application-signals",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "application-signals:GetService",
    "EventSource": "application-signals",
    "EventName": "GetService",
    "Description": "Returns information about a service discovered by Application Signals"
  },
  {
    "API": "application-signals:GetServiceLevelObjective",
    "EventSource": "application-signals",
    "EventName": "GetServiceLevelObjective",
    "Description": "Returns information about one SLO created in the account"
  },
  {
    "API": "application-signals:ListServiceDependencies",
    "EventSource": "application-signals",
    "EventName": "ListServiceDependencies",
    "Description": "Returns a list of service dependencies of the service that you specify"
  },
  {
    "API": "application-signals:ListServiceDependents",
    "EventSource": "application-signals",
    "EventName": "ListServiceDependents",
    "Description": "Returns the list of dependents that invoked the specified service during the provided time range"
  },
  {
    "API": "application-signals:ListServiceLevelObjectives",
    "EventSource": "application-signals",
    "EventName": "ListServiceLevelObjectives",
    "Description": "Returns a list of SLOs created in this account"
  },
  {
    "API": "application-signals:ListServiceOperations",
    "EventSource": "application-signals",
    "EventName": "ListServiceOperations",
    "Description": "Returns a list of the *operations* of this service that have been discovered by Application Signals"
  },
  {
    "API": "application-signals:ListServices",
    "EventSource": "application-signals",
    "EventName": "ListServices",
    "Description": "Returns a list of services that have been discovered by Application Signals"
  },
  {
    "API": "application-signals:ListTagsForResource",
    "EventSource": "application-signals",
    "EventName": "ListTagsForResource",
    "Description": "Displays the tags associated with a CloudWatch resource"
  },
  {
    "API": "application-signals:StartDiscovery",
    "EventSource": "application-signals",
    "EventName": "StartDiscovery",
    "Description": "Enables this Amazon Web Services account to be able to use CloudWatch Application Signals by creating the *AWSServiceRoleForCloudWatchApplicationSignals* service-linked role"
  },
  {
    "API": "application-signals:TagResource",
    "EventSource": "application-signals",
    "EventName": "TagResource",
    "Description": "Assigns one or more tags (key-value pairs) to the specified CloudWatch resource, such as a service level objective"
  },
  {
    "API": "application-signals:UntagResource",
    "EventSource": "application-signals",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags from the specified resource"
  },
  {
    "API": "application-signals:UpdateServiceLevelObjective",
    "EventSource": "application-signals",
    "EventName": "UpdateServiceLevelObjective",
    "Description": "Updates an existing service level objective (SLO)"
  },
  {
    "API": "applicationcostprofiler:DeleteReportDefinition",
    "EventSource": "applicationcostprofiler",
    "EventName": "DeleteReportDefinition",
    "Description": "Deletes the specified report definition in AWS Application Cost Profiler"
  },
  {
    "API": "applicationcostprofiler:GeneratePresignedUrl",
    "EventSource": "applicationcostprofiler",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "applicationcostprofiler:GetReportDefinition",
    "EventSource": "applicationcostprofiler",
    "EventName": "GetReportDefinition",
    "Description": "Retrieves the definition of a report already configured in AWS Application Cost Profiler"
  },
  {
    "API": "applicationcostprofiler:ImportApplicationUsage",
    "EventSource": "applicationcostprofiler",
    "EventName": "ImportApplicationUsage",
    "Description": "Ingests application usage data from Amazon Simple Storage Service (Amazon S3)"
  },
  {
    "API": "applicationcostprofiler:ListReportDefinitions",
    "EventSource": "applicationcostprofiler",
    "EventName": "ListReportDefinitions",
    "Description": "Retrieves a list of all reports and their configurations for your AWS account"
  },
  {
    "API": "applicationcostprofiler:PutReportDefinition",
    "EventSource": "applicationcostprofiler",
    "EventName": "PutReportDefinition",
    "Description": "Creates the report definition for a report in Application Cost Profiler"
  },
  {
    "API": "applicationcostprofiler:UpdateReportDefinition",
    "EventSource": "applicationcostprofiler",
    "EventName": "UpdateReportDefinition",
    "Description": "Updates existing report in AWS Application Cost Profiler"
  },
  {
    "API": "appmesh:CreateGatewayRoute",
    "EventSource": "appmesh",
    "EventName": "CreateGatewayRoute",
    "Description": "Creates a gateway route"
  },
  {
    "API": "appmesh:CreateMesh",
    "EventSource": "appmesh",
    "EventName": "CreateMesh",
    "Description": "Creates a service mesh"
  },
  {
    "API": "appmesh:CreateRoute",
    "EventSource": "appmesh",
    "EventName": "CreateRoute",
    "Description": "Creates a route that is associated with a virtual router"
  },
  {
    "API": "appmesh:CreateVirtualGateway",
    "EventSource": "appmesh",
    "EventName": "CreateVirtualGateway",
    "Description": "Creates a virtual gateway"
  },
  {
    "API": "appmesh:CreateVirtualNode",
    "EventSource": "appmesh",
    "EventName": "CreateVirtualNode",
    "Description": "Creates a virtual node within a service mesh"
  },
  {
    "API": "appmesh:CreateVirtualRouter",
    "EventSource": "appmesh",
    "EventName": "CreateVirtualRouter",
    "Description": "Creates a virtual router within a service mesh"
  },
  {
    "API": "appmesh:CreateVirtualService",
    "EventSource": "appmesh",
    "EventName": "CreateVirtualService",
    "Description": "Creates a virtual service within a service mesh"
  },
  {
    "API": "appmesh:DeleteGatewayRoute",
    "EventSource": "appmesh",
    "EventName": "DeleteGatewayRoute",
    "Description": "Deletes an existing gateway route"
  },
  {
    "API": "appmesh:DeleteMesh",
    "EventSource": "appmesh",
    "EventName": "DeleteMesh",
    "Description": "Deletes an existing service mesh"
  },
  {
    "API": "appmesh:DeleteRoute",
    "EventSource": "appmesh",
    "EventName": "DeleteRoute",
    "Description": "Deletes an existing route"
  },
  {
    "API": "appmesh:DeleteVirtualGateway",
    "EventSource": "appmesh",
    "EventName": "DeleteVirtualGateway",
    "Description": "Deletes an existing virtual gateway"
  },
  {
    "API": "appmesh:DeleteVirtualNode",
    "EventSource": "appmesh",
    "EventName": "DeleteVirtualNode",
    "Description": "Deletes an existing virtual node"
  },
  {
    "API": "appmesh:DeleteVirtualRouter",
    "EventSource": "appmesh",
    "EventName": "DeleteVirtualRouter",
    "Description": "Deletes an existing virtual router"
  },
  {
    "API": "appmesh:DeleteVirtualService",
    "EventSource": "appmesh",
    "EventName": "DeleteVirtualService",
    "Description": "Deletes an existing virtual service"
  },
  {
    "API": "appmesh:DescribeGatewayRoute",
    "EventSource": "appmesh",
    "EventName": "DescribeGatewayRoute",
    "Description": "Describes an existing gateway route"
  },
  {
    "API": "appmesh:DescribeMesh",
    "EventSource": "appmesh",
    "EventName": "DescribeMesh",
    "Description": "Describes an existing service mesh"
  },
  {
    "API": "appmesh:DescribeRoute",
    "EventSource": "appmesh",
    "EventName": "DescribeRoute",
    "Description": "Describes an existing route"
  },
  {
    "API": "appmesh:DescribeVirtualGateway",
    "EventSource": "appmesh",
    "EventName": "DescribeVirtualGateway",
    "Description": "Describes an existing virtual gateway"
  },
  {
    "API": "appmesh:DescribeVirtualNode",
    "EventSource": "appmesh",
    "EventName": "DescribeVirtualNode",
    "Description": "Describes an existing virtual node"
  },
  {
    "API": "appmesh:DescribeVirtualRouter",
    "EventSource": "appmesh",
    "EventName": "DescribeVirtualRouter",
    "Description": "Describes an existing virtual router"
  },
  {
    "API": "appmesh:DescribeVirtualService",
    "EventSource": "appmesh",
    "EventName": "DescribeVirtualService",
    "Description": "Describes an existing virtual service"
  },
  {
    "API": "appmesh:GeneratePresignedUrl",
    "EventSource": "appmesh",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "appmesh:ListGatewayRoutes",
    "EventSource": "appmesh",
    "EventName": "ListGatewayRoutes",
    "Description": "Returns a list of existing gateway routes that are associated to a virtual gateway"
  },
  {
    "API": "appmesh:ListMeshes",
    "EventSource": "appmesh",
    "EventName": "ListMeshes",
    "Description": "Returns a list of existing service meshes"
  },
  {
    "API": "appmesh:ListRoutes",
    "EventSource": "appmesh",
    "EventName": "ListRoutes",
    "Description": "Returns a list of existing routes in a service mesh"
  },
  {
    "API": "appmesh:ListTagsForResource",
    "EventSource": "appmesh",
    "EventName": "ListTagsForResource",
    "Description": "List the tags for an App Mesh resource"
  },
  {
    "API": "appmesh:ListVirtualGateways",
    "EventSource": "appmesh",
    "EventName": "ListVirtualGateways",
    "Description": "Returns a list of existing virtual gateways in a service mesh"
  },
  {
    "API": "appmesh:ListVirtualNodes",
    "EventSource": "appmesh",
    "EventName": "ListVirtualNodes",
    "Description": "Returns a list of existing virtual nodes"
  },
  {
    "API": "appmesh:ListVirtualRouters",
    "EventSource": "appmesh",
    "EventName": "ListVirtualRouters",
    "Description": "Returns a list of existing virtual routers in a service mesh"
  },
  {
    "API": "appmesh:ListVirtualServices",
    "EventSource": "appmesh",
    "EventName": "ListVirtualServices",
    "Description": "Returns a list of existing virtual services in a service mesh"
  },
  {
    "API": "appmesh:TagResource",
    "EventSource": "appmesh",
    "EventName": "TagResource",
    "Description": "Associates the specified tags to a resource with the specified ``resourceArn``"
  },
  {
    "API": "appmesh:UntagResource",
    "EventSource": "appmesh",
    "EventName": "UntagResource",
    "Description": "Deletes specified tags from a resource"
  },
  {
    "API": "appmesh:UpdateGatewayRoute",
    "EventSource": "appmesh",
    "EventName": "UpdateGatewayRoute",
    "Description": "Updates an existing gateway route that is associated to a specified virtual gateway in a service mesh"
  },
  {
    "API": "appmesh:UpdateMesh",
    "EventSource": "appmesh",
    "EventName": "UpdateMesh",
    "Description": "Updates an existing service mesh"
  },
  {
    "API": "appmesh:UpdateRoute",
    "EventSource": "appmesh",
    "EventName": "UpdateRoute",
    "Description": "Updates an existing route for a specified service mesh and virtual router"
  },
  {
    "API": "appmesh:UpdateVirtualGateway",
    "EventSource": "appmesh",
    "EventName": "UpdateVirtualGateway",
    "Description": "Updates an existing virtual gateway in a specified service mesh"
  },
  {
    "API": "appmesh:UpdateVirtualNode",
    "EventSource": "appmesh",
    "EventName": "UpdateVirtualNode",
    "Description": "Updates an existing virtual node in a specified service mesh"
  },
  {
    "API": "appmesh:UpdateVirtualRouter",
    "EventSource": "appmesh",
    "EventName": "UpdateVirtualRouter",
    "Description": "Updates an existing virtual router in a specified service mesh"
  },
  {
    "API": "appmesh:UpdateVirtualService",
    "EventSource": "appmesh",
    "EventName": "UpdateVirtualService",
    "Description": "Updates an existing virtual service in a specified service mesh"
  },
  {
    "API": "apprunner:AssociateCustomDomain",
    "EventSource": "apprunner",
    "EventName": "AssociateCustomDomain",
    "Description": "Associate your own domain name with the App Runner subdomain URL of your App Runner service"
  },
  {
    "API": "apprunner:CreateAutoScalingConfiguration",
    "EventSource": "apprunner",
    "EventName": "CreateAutoScalingConfiguration",
    "Description": "Create an App Runner automatic scaling configuration resource"
  },
  {
    "API": "apprunner:CreateConnection",
    "EventSource": "apprunner",
    "EventName": "CreateConnection",
    "Description": "Create an App Runner connection resource"
  },
  {
    "API": "apprunner:CreateObservabilityConfiguration",
    "EventSource": "apprunner",
    "EventName": "CreateObservabilityConfiguration",
    "Description": "Create an App Runner observability configuration resource"
  },
  {
    "API": "apprunner:CreateService",
    "EventSource": "apprunner",
    "EventName": "CreateService",
    "Description": "Create an App Runner service"
  },
  {
    "API": "apprunner:CreateVpcConnector",
    "EventSource": "apprunner",
    "EventName": "CreateVpcConnector",
    "Description": "Create an App Runner VPC connector resource"
  },
  {
    "API": "apprunner:CreateVpcIngressConnection",
    "EventSource": "apprunner",
    "EventName": "CreateVpcIngressConnection",
    "Description": "Create an App Runner VPC Ingress Connection resource"
  },
  {
    "API": "apprunner:DeleteAutoScalingConfiguration",
    "EventSource": "apprunner",
    "EventName": "DeleteAutoScalingConfiguration",
    "Description": "Delete an App Runner automatic scaling configuration resource"
  },
  {
    "API": "apprunner:DeleteConnection",
    "EventSource": "apprunner",
    "EventName": "DeleteConnection",
    "Description": "Delete an App Runner connection"
  },
  {
    "API": "apprunner:DeleteObservabilityConfiguration",
    "EventSource": "apprunner",
    "EventName": "DeleteObservabilityConfiguration",
    "Description": "Delete an App Runner observability configuration resource"
  },
  {
    "API": "apprunner:DeleteService",
    "EventSource": "apprunner",
    "EventName": "DeleteService",
    "Description": "Delete an App Runner service"
  },
  {
    "API": "apprunner:DeleteVpcConnector",
    "EventSource": "apprunner",
    "EventName": "DeleteVpcConnector",
    "Description": "Delete an App Runner VPC connector resource"
  },
  {
    "API": "apprunner:DeleteVpcIngressConnection",
    "EventSource": "apprunner",
    "EventName": "DeleteVpcIngressConnection",
    "Description": "Delete an App Runner VPC Ingress Connection resource that's associated with an App Runner service"
  },
  {
    "API": "apprunner:DescribeAutoScalingConfiguration",
    "EventSource": "apprunner",
    "EventName": "DescribeAutoScalingConfiguration",
    "Description": "Return a full description of an App Runner automatic scaling configuration resource"
  },
  {
    "API": "apprunner:DescribeCustomDomains",
    "EventSource": "apprunner",
    "EventName": "DescribeCustomDomains",
    "Description": "Return a description of custom domain names that are associated with an App Runner service"
  },
  {
    "API": "apprunner:DescribeObservabilityConfiguration",
    "EventSource": "apprunner",
    "EventName": "DescribeObservabilityConfiguration",
    "Description": "Return a full description of an App Runner observability configuration resource"
  },
  {
    "API": "apprunner:DescribeService",
    "EventSource": "apprunner",
    "EventName": "DescribeService",
    "Description": "Return a full description of an App Runner service"
  },
  {
    "API": "apprunner:DescribeVpcConnector",
    "EventSource": "apprunner",
    "EventName": "DescribeVpcConnector",
    "Description": "Return a description of an App Runner VPC connector resource"
  },
  {
    "API": "apprunner:DescribeVpcIngressConnection",
    "EventSource": "apprunner",
    "EventName": "DescribeVpcIngressConnection",
    "Description": "Return a full description of an App Runner VPC Ingress Connection resource"
  },
  {
    "API": "apprunner:DisassociateCustomDomain",
    "EventSource": "apprunner",
    "EventName": "DisassociateCustomDomain",
    "Description": "Disassociate a custom domain name from an App Runner service"
  },
  {
    "API": "apprunner:GeneratePresignedUrl",
    "EventSource": "apprunner",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "apprunner:ListAutoScalingConfigurations",
    "EventSource": "apprunner",
    "EventName": "ListAutoScalingConfigurations",
    "Description": "Returns a list of active App Runner automatic scaling configurations in your Amazon Web Services account"
  },
  {
    "API": "apprunner:ListConnections",
    "EventSource": "apprunner",
    "EventName": "ListConnections",
    "Description": "Returns a list of App Runner connections that are associated with your Amazon Web Services account"
  },
  {
    "API": "apprunner:ListObservabilityConfigurations",
    "EventSource": "apprunner",
    "EventName": "ListObservabilityConfigurations",
    "Description": "Returns a list of active App Runner observability configurations in your Amazon Web Services account"
  },
  {
    "API": "apprunner:ListOperations",
    "EventSource": "apprunner",
    "EventName": "ListOperations",
    "Description": "Return a list of operations that occurred on an App Runner service"
  },
  {
    "API": "apprunner:ListServices",
    "EventSource": "apprunner",
    "EventName": "ListServices",
    "Description": "Returns a list of running App Runner services in your Amazon Web Services account"
  },
  {
    "API": "apprunner:ListServicesForAutoScalingConfiguration",
    "EventSource": "apprunner",
    "EventName": "ListServicesForAutoScalingConfiguration",
    "Description": "Returns a list of the associated App Runner services using an auto scaling configuration"
  },
  {
    "API": "apprunner:ListTagsForResource",
    "EventSource": "apprunner",
    "EventName": "ListTagsForResource",
    "Description": "List tags that are associated with for an App Runner resource"
  },
  {
    "API": "apprunner:ListVpcConnectors",
    "EventSource": "apprunner",
    "EventName": "ListVpcConnectors",
    "Description": "Returns a list of App Runner VPC connectors in your Amazon Web Services account"
  },
  {
    "API": "apprunner:ListVpcIngressConnections",
    "EventSource": "apprunner",
    "EventName": "ListVpcIngressConnections",
    "Description": "Return a list of App Runner VPC Ingress Connections in your Amazon Web Services account"
  },
  {
    "API": "apprunner:PauseService",
    "EventSource": "apprunner",
    "EventName": "PauseService",
    "Description": "Pause an active App Runner service"
  },
  {
    "API": "apprunner:ResumeService",
    "EventSource": "apprunner",
    "EventName": "ResumeService",
    "Description": "Resume an active App Runner service"
  },
  {
    "API": "apprunner:StartDeployment",
    "EventSource": "apprunner",
    "EventName": "StartDeployment",
    "Description": "Initiate a manual deployment of the latest commit in a source code repository or the latest image in a source image repository to an App Runner service"
  },
  {
    "API": "apprunner:TagResource",
    "EventSource": "apprunner",
    "EventName": "TagResource",
    "Description": "Add tags to, or update the tag values of, an App Runner resource"
  },
  {
    "API": "apprunner:UntagResource",
    "EventSource": "apprunner",
    "EventName": "UntagResource",
    "Description": "Remove tags from an App Runner resource"
  },
  {
    "API": "apprunner:UpdateDefaultAutoScalingConfiguration",
    "EventSource": "apprunner",
    "EventName": "UpdateDefaultAutoScalingConfiguration",
    "Description": "Update an auto scaling configuration to be the default"
  },
  {
    "API": "apprunner:UpdateService",
    "EventSource": "apprunner",
    "EventName": "UpdateService",
    "Description": "Update an App Runner service"
  },
  {
    "API": "apprunner:UpdateVpcIngressConnection",
    "EventSource": "apprunner",
    "EventName": "UpdateVpcIngressConnection",
    "Description": "Update an existing App Runner VPC Ingress Connection resource"
  },
  {
    "API": "appstream:AssociateAppBlockBuilderAppBlock",
    "EventSource": "appstream",
    "EventName": "AssociateAppBlockBuilderAppBlock",
    "Description": "Associates the specified app block builder with the specified app block"
  },
  {
    "API": "appstream:AssociateApplicationFleet",
    "EventSource": "appstream",
    "EventName": "AssociateApplicationFleet",
    "Description": "Associates the specified application with the specified fleet"
  },
  {
    "API": "appstream:AssociateApplicationToEntitlement",
    "EventSource": "appstream",
    "EventName": "AssociateApplicationToEntitlement",
    "Description": "Associates an application to entitle"
  },
  {
    "API": "appstream:AssociateFleet",
    "EventSource": "appstream",
    "EventName": "AssociateFleet",
    "Description": "Associates the specified fleet with the specified stack"
  },
  {
    "API": "appstream:BatchAssociateUserStack",
    "EventSource": "appstream",
    "EventName": "BatchAssociateUserStack",
    "Description": "Associates the specified users with the specified stacks"
  },
  {
    "API": "appstream:BatchDisassociateUserStack",
    "EventSource": "appstream",
    "EventName": "BatchDisassociateUserStack",
    "Description": "Disassociates the specified users from the specified stacks"
  },
  {
    "API": "appstream:CopyImage",
    "EventSource": "appstream",
    "EventName": "CopyImage",
    "Description": "Copies the image within the same region or to a new region within the same AWS account"
  },
  {
    "API": "appstream:CreateAppBlock",
    "EventSource": "appstream",
    "EventName": "CreateAppBlock",
    "Description": "Creates an app block"
  },
  {
    "API": "appstream:CreateAppBlockBuilder",
    "EventSource": "appstream",
    "EventName": "CreateAppBlockBuilder",
    "Description": "Creates an app block builder"
  },
  {
    "API": "appstream:CreateAppBlockBuilderStreamingUrl",
    "EventSource": "appstream",
    "EventName": "CreateAppBlockBuilderStreamingUrl",
    "Description": "Creates a URL to start a create app block builder streaming session"
  },
  {
    "API": "appstream:CreateApplication",
    "EventSource": "appstream",
    "EventName": "CreateApplication",
    "Description": "Creates an application"
  },
  {
    "API": "appstream:CreateDirectoryConfig",
    "EventSource": "appstream",
    "EventName": "CreateDirectoryConfig",
    "Description": "Creates a Directory Config object in AppStream 2"
  },
  {
    "API": "appstream:CreateEntitlement",
    "EventSource": "appstream",
    "EventName": "CreateEntitlement",
    "Description": "Creates a new entitlement"
  },
  {
    "API": "appstream:CreateFleet",
    "EventSource": "appstream",
    "EventName": "CreateFleet",
    "Description": "Creates a fleet"
  },
  {
    "API": "appstream:CreateImageBuilder",
    "EventSource": "appstream",
    "EventName": "CreateImageBuilder",
    "Description": "Creates an image builder"
  },
  {
    "API": "appstream:CreateImageBuilderStreamingUrl",
    "EventSource": "appstream",
    "EventName": "CreateImageBuilderStreamingUrl",
    "Description": "Creates a URL to start an image builder streaming session"
  },
  {
    "API": "appstream:CreateStack",
    "EventSource": "appstream",
    "EventName": "CreateStack",
    "Description": "Creates a stack to start streaming applications to users"
  },
  {
    "API": "appstream:CreateStreamingUrl",
    "EventSource": "appstream",
    "EventName": "CreateStreamingUrl",
    "Description": "Creates a temporary URL to start an AppStream 2"
  },
  {
    "API": "appstream:CreateUpdatedImage",
    "EventSource": "appstream",
    "EventName": "CreateUpdatedImage",
    "Description": "Creates a new image with the latest Windows operating system updates, driver updates, and AppStream 2"
  },
  {
    "API": "appstream:CreateUsageReportSubscription",
    "EventSource": "appstream",
    "EventName": "CreateUsageReportSubscription",
    "Description": "Creates a usage report subscription"
  },
  {
    "API": "appstream:CreateUser",
    "EventSource": "appstream",
    "EventName": "CreateUser",
    "Description": "Creates a new user in the user pool"
  },
  {
    "API": "appstream:DeleteAppBlock",
    "EventSource": "appstream",
    "EventName": "DeleteAppBlock",
    "Description": "Deletes an app block"
  },
  {
    "API": "appstream:DeleteAppBlockBuilder",
    "EventSource": "appstream",
    "EventName": "DeleteAppBlockBuilder",
    "Description": "Deletes an app block builder"
  },
  {
    "API": "appstream:DeleteApplication",
    "EventSource": "appstream",
    "EventName": "DeleteApplication",
    "Description": "Deletes an application"
  },
  {
    "API": "appstream:DeleteDirectoryConfig",
    "EventSource": "appstream",
    "EventName": "DeleteDirectoryConfig",
    "Description": "Deletes the specified Directory Config object from AppStream 2"
  },
  {
    "API": "appstream:DeleteEntitlement",
    "EventSource": "appstream",
    "EventName": "DeleteEntitlement",
    "Description": "Deletes the specified entitlement"
  },
  {
    "API": "appstream:DeleteFleet",
    "EventSource": "appstream",
    "EventName": "DeleteFleet",
    "Description": "Deletes the specified fleet"
  },
  {
    "API": "appstream:DeleteImage",
    "EventSource": "appstream",
    "EventName": "DeleteImage",
    "Description": "Deletes the specified image"
  },
  {
    "API": "appstream:DeleteImageBuilder",
    "EventSource": "appstream",
    "EventName": "DeleteImageBuilder",
    "Description": "Deletes the specified image builder and releases the capacity"
  },
  {
    "API": "appstream:DeleteImagePermissions",
    "EventSource": "appstream",
    "EventName": "DeleteImagePermissions",
    "Description": "Deletes permissions for the specified private image"
  },
  {
    "API": "appstream:DeleteStack",
    "EventSource": "appstream",
    "EventName": "DeleteStack",
    "Description": "Deletes the specified stack"
  },
  {
    "API": "appstream:DeleteUsageReportSubscription",
    "EventSource": "appstream",
    "EventName": "DeleteUsageReportSubscription",
    "Description": "Disables usage report generation"
  },
  {
    "API": "appstream:DeleteUser",
    "EventSource": "appstream",
    "EventName": "DeleteUser",
    "Description": "Deletes a user from the user pool"
  },
  {
    "API": "appstream:DescribeAppBlockBuilderAppBlockAssociations",
    "EventSource": "appstream",
    "EventName": "DescribeAppBlockBuilderAppBlockAssociations",
    "Description": "Retrieves a list that describes one or more app block builder associations"
  },
  {
    "API": "appstream:DescribeAppBlockBuilders",
    "EventSource": "appstream",
    "EventName": "DescribeAppBlockBuilders",
    "Description": "Retrieves a list that describes one or more app block builders"
  },
  {
    "API": "appstream:DescribeAppBlocks",
    "EventSource": "appstream",
    "EventName": "DescribeAppBlocks",
    "Description": "Retrieves a list that describes one or more app blocks"
  },
  {
    "API": "appstream:DescribeApplicationFleetAssociations",
    "EventSource": "appstream",
    "EventName": "DescribeApplicationFleetAssociations",
    "Description": "Retrieves a list that describes one or more application fleet associations"
  },
  {
    "API": "appstream:DescribeApplications",
    "EventSource": "appstream",
    "EventName": "DescribeApplications",
    "Description": "Retrieves a list that describes one or more applications"
  },
  {
    "API": "appstream:DescribeDirectoryConfigs",
    "EventSource": "appstream",
    "EventName": "DescribeDirectoryConfigs",
    "Description": "Retrieves a list that describes one or more specified Directory Config objects for AppStream 2"
  },
  {
    "API": "appstream:DescribeEntitlements",
    "EventSource": "appstream",
    "EventName": "DescribeEntitlements",
    "Description": "Retrieves a list that describes one of more entitlements"
  },
  {
    "API": "appstream:DescribeFleets",
    "EventSource": "appstream",
    "EventName": "DescribeFleets",
    "Description": "Retrieves a list that describes one or more specified fleets, if the fleet names are provided"
  },
  {
    "API": "appstream:DescribeImageBuilders",
    "EventSource": "appstream",
    "EventName": "DescribeImageBuilders",
    "Description": "Retrieves a list that describes one or more specified image builders, if the image builder names are provided"
  },
  {
    "API": "appstream:DescribeImagePermissions",
    "EventSource": "appstream",
    "EventName": "DescribeImagePermissions",
    "Description": "Retrieves a list that describes the permissions for shared AWS account IDs on a private image that you own"
  },
  {
    "API": "appstream:DescribeImages",
    "EventSource": "appstream",
    "EventName": "DescribeImages",
    "Description": "Retrieves a list that describes one or more specified images, if the image names or image ARNs are provided"
  },
  {
    "API": "appstream:DescribeSessions",
    "EventSource": "appstream",
    "EventName": "DescribeSessions",
    "Description": "Retrieves a list that describes the streaming sessions for a specified stack and fleet"
  },
  {
    "API": "appstream:DescribeStacks",
    "EventSource": "appstream",
    "EventName": "DescribeStacks",
    "Description": "Retrieves a list that describes one or more specified stacks, if the stack names are provided"
  },
  {
    "API": "appstream:DescribeUsageReportSubscriptions",
    "EventSource": "appstream",
    "EventName": "DescribeUsageReportSubscriptions",
    "Description": "Retrieves a list that describes one or more usage report subscriptions"
  },
  {
    "API": "appstream:DescribeUserStackAssociations",
    "EventSource": "appstream",
    "EventName": "DescribeUserStackAssociations",
    "Description": "Retrieves a list that describes the UserStackAssociation objects"
  },
  {
    "API": "appstream:DescribeUsers",
    "EventSource": "appstream",
    "EventName": "DescribeUsers",
    "Description": "Retrieves a list that describes one or more specified users in the user pool"
  },
  {
    "API": "appstream:DisableUser",
    "EventSource": "appstream",
    "EventName": "DisableUser",
    "Description": "Disables the specified user in the user pool"
  },
  {
    "API": "appstream:DisassociateAppBlockBuilderAppBlock",
    "EventSource": "appstream",
    "EventName": "DisassociateAppBlockBuilderAppBlock",
    "Description": "Disassociates a specified app block builder from a specified app block"
  },
  {
    "API": "appstream:DisassociateApplicationFleet",
    "EventSource": "appstream",
    "EventName": "DisassociateApplicationFleet",
    "Description": "Disassociates the specified application from the fleet"
  },
  {
    "API": "appstream:DisassociateApplicationFromEntitlement",
    "EventSource": "appstream",
    "EventName": "DisassociateApplicationFromEntitlement",
    "Description": "Deletes the specified application from the specified entitlement"
  },
  {
    "API": "appstream:DisassociateFleet",
    "EventSource": "appstream",
    "EventName": "DisassociateFleet",
    "Description": "Disassociates the specified fleet from the specified stack"
  },
  {
    "API": "appstream:EnableUser",
    "EventSource": "appstream",
    "EventName": "EnableUser",
    "Description": "Enables a user in the user pool"
  },
  {
    "API": "appstream:ExpireSession",
    "EventSource": "appstream",
    "EventName": "ExpireSession",
    "Description": "Immediately stops the specified streaming session"
  },
  {
    "API": "appstream:GeneratePresignedUrl",
    "EventSource": "appstream",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "appstream:ListAssociatedFleets",
    "EventSource": "appstream",
    "EventName": "ListAssociatedFleets",
    "Description": "Retrieves the name of the fleet that is associated with the specified stack"
  },
  {
    "API": "appstream:ListAssociatedStacks",
    "EventSource": "appstream",
    "EventName": "ListAssociatedStacks",
    "Description": "Retrieves the name of the stack with which the specified fleet is associated"
  },
  {
    "API": "appstream:ListEntitledApplications",
    "EventSource": "appstream",
    "EventName": "ListEntitledApplications",
    "Description": "Retrieves a list of entitled applications"
  },
  {
    "API": "appstream:ListTagsForResource",
    "EventSource": "appstream",
    "EventName": "ListTagsForResource",
    "Description": "Retrieves a list of all tags for the specified AppStream 2"
  },
  {
    "API": "appstream:StartAppBlockBuilder",
    "EventSource": "appstream",
    "EventName": "StartAppBlockBuilder",
    "Description": "Starts an app block builder"
  },
  {
    "API": "appstream:StartFleet",
    "EventSource": "appstream",
    "EventName": "StartFleet",
    "Description": "Starts the specified fleet"
  },
  {
    "API": "appstream:StartImageBuilder",
    "EventSource": "appstream",
    "EventName": "StartImageBuilder",
    "Description": "Starts the specified image builder"
  },
  {
    "API": "appstream:StopAppBlockBuilder",
    "EventSource": "appstream",
    "EventName": "StopAppBlockBuilder",
    "Description": "Stops an app block builder"
  },
  {
    "API": "appstream:StopFleet",
    "EventSource": "appstream",
    "EventName": "StopFleet",
    "Description": "Stops the specified fleet"
  },
  {
    "API": "appstream:StopImageBuilder",
    "EventSource": "appstream",
    "EventName": "StopImageBuilder",
    "Description": "Stops the specified image builder"
  },
  {
    "API": "appstream:TagResource",
    "EventSource": "appstream",
    "EventName": "TagResource",
    "Description": "Adds or overwrites one or more tags for the specified AppStream 2"
  },
  {
    "API": "appstream:UntagResource",
    "EventSource": "appstream",
    "EventName": "UntagResource",
    "Description": "Disassociates one or more specified tags from the specified AppStream 2"
  },
  {
    "API": "appstream:UpdateAppBlockBuilder",
    "EventSource": "appstream",
    "EventName": "UpdateAppBlockBuilder",
    "Description": "Updates an app block builder"
  },
  {
    "API": "appstream:UpdateApplication",
    "EventSource": "appstream",
    "EventName": "UpdateApplication",
    "Description": "Updates the specified application"
  },
  {
    "API": "appstream:UpdateDirectoryConfig",
    "EventSource": "appstream",
    "EventName": "UpdateDirectoryConfig",
    "Description": "Updates the specified Directory Config object in AppStream 2"
  },
  {
    "API": "appstream:UpdateEntitlement",
    "EventSource": "appstream",
    "EventName": "UpdateEntitlement",
    "Description": "Updates the specified entitlement"
  },
  {
    "API": "appstream:UpdateFleet",
    "EventSource": "appstream",
    "EventName": "UpdateFleet",
    "Description": "Updates the specified fleet"
  },
  {
    "API": "appstream:UpdateImagePermissions",
    "EventSource": "appstream",
    "EventName": "UpdateImagePermissions",
    "Description": "Adds or updates permissions for the specified private image"
  },
  {
    "API": "appstream:UpdateStack",
    "EventSource": "appstream",
    "EventName": "UpdateStack",
    "Description": "Updates the specified fields for the specified stack"
  },
  {
    "API": "appsync:AssociateApi",
    "EventSource": "appsync",
    "EventName": "AssociateApi",
    "Description": "Maps an endpoint to your custom domain"
  },
  {
    "API": "appsync:AssociateMergedGraphqlApi",
    "EventSource": "appsync",
    "EventName": "AssociateMergedGraphqlApi",
    "Description": "Creates an association between a Merged API and source API using the source API's identifier"
  },
  {
    "API": "appsync:AssociateSourceGraphqlApi",
    "EventSource": "appsync",
    "EventName": "AssociateSourceGraphqlApi",
    "Description": "Creates an association between a Merged API and source API using the Merged API's identifier"
  },
  {
    "API": "appsync:CreateApiCache",
    "EventSource": "appsync",
    "EventName": "CreateApiCache",
    "Description": "Creates a cache for the GraphQL API"
  },
  {
    "API": "appsync:CreateApiKey",
    "EventSource": "appsync",
    "EventName": "CreateApiKey",
    "Description": "Creates a unique key that you can distribute to clients who invoke your API"
  },
  {
    "API": "appsync:CreateDataSource",
    "EventSource": "appsync",
    "EventName": "CreateDataSource",
    "Description": "Creates a ``DataSource`` object"
  },
  {
    "API": "appsync:CreateDomainName",
    "EventSource": "appsync",
    "EventName": "CreateDomainName",
    "Description": "Creates a custom ``DomainName`` object"
  },
  {
    "API": "appsync:CreateFunction",
    "EventSource": "appsync",
    "EventName": "CreateFunction",
    "Description": "Creates a ``Function`` object"
  },
  {
    "API": "appsync:CreateGraphqlApi",
    "EventSource": "appsync",
    "EventName": "CreateGraphqlApi",
    "Description": "Creates a ``GraphqlApi`` object"
  },
  {
    "API": "appsync:CreateResolver",
    "EventSource": "appsync",
    "EventName": "CreateResolver",
    "Description": "Creates a ``Resolver`` object"
  },
  {
    "API": "appsync:CreateType",
    "EventSource": "appsync",
    "EventName": "CreateType",
    "Description": "Creates a ``Type`` object"
  },
  {
    "API": "appsync:DeleteApiCache",
    "EventSource": "appsync",
    "EventName": "DeleteApiCache",
    "Description": "Deletes an ``ApiCache`` object"
  },
  {
    "API": "appsync:DeleteApiKey",
    "EventSource": "appsync",
    "EventName": "DeleteApiKey",
    "Description": "Deletes an API key"
  },
  {
    "API": "appsync:DeleteDataSource",
    "EventSource": "appsync",
    "EventName": "DeleteDataSource",
    "Description": "Deletes a ``DataSource`` object"
  },
  {
    "API": "appsync:DeleteDomainName",
    "EventSource": "appsync",
    "EventName": "DeleteDomainName",
    "Description": "Deletes a custom ``DomainName`` object"
  },
  {
    "API": "appsync:DeleteFunction",
    "EventSource": "appsync",
    "EventName": "DeleteFunction",
    "Description": "Deletes a ``Function``"
  },
  {
    "API": "appsync:DeleteGraphqlApi",
    "EventSource": "appsync",
    "EventName": "DeleteGraphqlApi",
    "Description": "Deletes a ``GraphqlApi`` object"
  },
  {
    "API": "appsync:DeleteResolver",
    "EventSource": "appsync",
    "EventName": "DeleteResolver",
    "Description": "Deletes a ``Resolver`` object"
  },
  {
    "API": "appsync:DeleteType",
    "EventSource": "appsync",
    "EventName": "DeleteType",
    "Description": "Deletes a ``Type`` object"
  },
  {
    "API": "appsync:DisassociateApi",
    "EventSource": "appsync",
    "EventName": "DisassociateApi",
    "Description": "Removes an ``ApiAssociation`` object from a custom domain"
  },
  {
    "API": "appsync:DisassociateMergedGraphqlApi",
    "EventSource": "appsync",
    "EventName": "DisassociateMergedGraphqlApi",
    "Description": "Deletes an association between a Merged API and source API using the source API's identifier and the association ID"
  },
  {
    "API": "appsync:DisassociateSourceGraphqlApi",
    "EventSource": "appsync",
    "EventName": "DisassociateSourceGraphqlApi",
    "Description": "Deletes an association between a Merged API and source API using the Merged API's identifier and the association ID"
  },
  {
    "API": "appsync:EvaluateCode",
    "EventSource": "appsync",
    "EventName": "EvaluateCode",
    "Description": "Evaluates the given code and returns the response"
  },
  {
    "API": "appsync:EvaluateMappingTemplate",
    "EventSource": "appsync",
    "EventName": "EvaluateMappingTemplate",
    "Description": "Evaluates a given template and returns the response"
  },
  {
    "API": "appsync:FlushApiCache",
    "EventSource": "appsync",
    "EventName": "FlushApiCache",
    "Description": "Flushes an ``ApiCache`` object"
  },
  {
    "API": "appsync:GeneratePresignedUrl",
    "EventSource": "appsync",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "appsync:GetApiAssociation",
    "EventSource": "appsync",
    "EventName": "GetApiAssociation",
    "Description": "Retrieves an ``ApiAssociation`` object"
  },
  {
    "API": "appsync:GetApiCache",
    "EventSource": "appsync",
    "EventName": "GetApiCache",
    "Description": "Retrieves an ``ApiCache`` object"
  },
  {
    "API": "appsync:GetDataSource",
    "EventSource": "appsync",
    "EventName": "GetDataSource",
    "Description": "Retrieves a ``DataSource`` object"
  },
  {
    "API": "appsync:GetDataSourceIntrospection",
    "EventSource": "appsync",
    "EventName": "GetDataSourceIntrospection",
    "Description": "Retrieves the record of an existing introspection"
  },
  {
    "API": "appsync:GetDomainName",
    "EventSource": "appsync",
    "EventName": "GetDomainName",
    "Description": "Retrieves a custom ``DomainName`` object"
  },
  {
    "API": "appsync:GetFunction",
    "EventSource": "appsync",
    "EventName": "GetFunction",
    "Description": "Get a ``Function``"
  },
  {
    "API": "appsync:GetGraphqlApi",
    "EventSource": "appsync",
    "EventName": "GetGraphqlApi",
    "Description": "Retrieves a ``GraphqlApi`` object"
  },
  {
    "API": "appsync:GetGraphqlApiEnvironmentVariables",
    "EventSource": "appsync",
    "EventName": "GetGraphqlApiEnvironmentVariables",
    "Description": "Retrieves the list of environmental variable key-value pairs associated with an API by its ID value"
  },
  {
    "API": "appsync:GetIntrospectionSchema",
    "EventSource": "appsync",
    "EventName": "GetIntrospectionSchema",
    "Description": "Retrieves the introspection schema for a GraphQL API"
  },
  {
    "API": "appsync:GetResolver",
    "EventSource": "appsync",
    "EventName": "GetResolver",
    "Description": "Retrieves a ``Resolver`` object"
  },
  {
    "API": "appsync:GetSchemaCreationStatus",
    "EventSource": "appsync",
    "EventName": "GetSchemaCreationStatus",
    "Description": "Retrieves the current status of a schema creation operation"
  },
  {
    "API": "appsync:GetSourceApiAssociation",
    "EventSource": "appsync",
    "EventName": "GetSourceApiAssociation",
    "Description": "Retrieves a ``SourceApiAssociation`` object"
  },
  {
    "API": "appsync:GetType",
    "EventSource": "appsync",
    "EventName": "GetType",
    "Description": "Retrieves a ``Type`` object"
  },
  {
    "API": "appsync:ListApiKeys",
    "EventSource": "appsync",
    "EventName": "ListApiKeys",
    "Description": "Lists the API keys for a given API"
  },
  {
    "API": "appsync:ListDataSources",
    "EventSource": "appsync",
    "EventName": "ListDataSources",
    "Description": "Lists the data sources for a given API"
  },
  {
    "API": "appsync:ListDomainNames",
    "EventSource": "appsync",
    "EventName": "ListDomainNames",
    "Description": "Lists multiple custom domain names"
  },
  {
    "API": "appsync:ListFunctions",
    "EventSource": "appsync",
    "EventName": "ListFunctions",
    "Description": "List multiple functions"
  },
  {
    "API": "appsync:ListGraphqlApis",
    "EventSource": "appsync",
    "EventName": "ListGraphqlApis",
    "Description": "Lists your GraphQL APIs"
  },
  {
    "API": "appsync:ListResolvers",
    "EventSource": "appsync",
    "EventName": "ListResolvers",
    "Description": "Lists the resolvers for a given API and type"
  },
  {
    "API": "appsync:ListResolversByFunction",
    "EventSource": "appsync",
    "EventName": "ListResolversByFunction",
    "Description": "List the resolvers that are associated with a specific function"
  },
  {
    "API": "appsync:ListSourceApiAssociations",
    "EventSource": "appsync",
    "EventName": "ListSourceApiAssociations",
    "Description": "Lists the ``SourceApiAssociationSummary`` data"
  },
  {
    "API": "appsync:ListTagsForResource",
    "EventSource": "appsync",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags for a resource"
  },
  {
    "API": "appsync:ListTypes",
    "EventSource": "appsync",
    "EventName": "ListTypes",
    "Description": "Lists the types for a given API"
  },
  {
    "API": "appsync:ListTypesByAssociation",
    "EventSource": "appsync",
    "EventName": "ListTypesByAssociation",
    "Description": "Lists ``Type`` objects by the source API association ID"
  },
  {
    "API": "appsync:PutGraphqlApiEnvironmentVariables",
    "EventSource": "appsync",
    "EventName": "PutGraphqlApiEnvironmentVariables",
    "Description": "Creates a list of environmental variables in an API by its ID value"
  },
  {
    "API": "appsync:StartDataSourceIntrospection",
    "EventSource": "appsync",
    "EventName": "StartDataSourceIntrospection",
    "Description": "Creates a new introspection"
  },
  {
    "API": "appsync:StartSchemaCreation",
    "EventSource": "appsync",
    "EventName": "StartSchemaCreation",
    "Description": "Adds a new schema to your GraphQL API"
  },
  {
    "API": "appsync:StartSchemaMerge",
    "EventSource": "appsync",
    "EventName": "StartSchemaMerge",
    "Description": "Initiates a merge operation"
  },
  {
    "API": "appsync:TagResource",
    "EventSource": "appsync",
    "EventName": "TagResource",
    "Description": "Tags a resource with user-supplied tags"
  },
  {
    "API": "appsync:UntagResource",
    "EventSource": "appsync",
    "EventName": "UntagResource",
    "Description": "Untags a resource"
  },
  {
    "API": "appsync:UpdateApiCache",
    "EventSource": "appsync",
    "EventName": "UpdateApiCache",
    "Description": "Updates the cache for the GraphQL API"
  },
  {
    "API": "appsync:UpdateApiKey",
    "EventSource": "appsync",
    "EventName": "UpdateApiKey",
    "Description": "Updates an API key"
  },
  {
    "API": "appsync:UpdateDataSource",
    "EventSource": "appsync",
    "EventName": "UpdateDataSource",
    "Description": "Updates a ``DataSource`` object"
  },
  {
    "API": "appsync:UpdateDomainName",
    "EventSource": "appsync",
    "EventName": "UpdateDomainName",
    "Description": "Updates a custom ``DomainName`` object"
  },
  {
    "API": "appsync:UpdateFunction",
    "EventSource": "appsync",
    "EventName": "UpdateFunction",
    "Description": "Updates a ``Function`` object"
  },
  {
    "API": "appsync:UpdateGraphqlApi",
    "EventSource": "appsync",
    "EventName": "UpdateGraphqlApi",
    "Description": "Updates a ``GraphqlApi`` object"
  },
  {
    "API": "appsync:UpdateResolver",
    "EventSource": "appsync",
    "EventName": "UpdateResolver",
    "Description": "Updates a ``Resolver`` object"
  },
  {
    "API": "appsync:UpdateSourceApiAssociation",
    "EventSource": "appsync",
    "EventName": "UpdateSourceApiAssociation",
    "Description": "Updates some of the configuration choices of a particular source API association"
  },
  {
    "API": "appsync:UpdateType",
    "EventSource": "appsync",
    "EventName": "UpdateType",
    "Description": "Updates a ``Type`` object"
  },
  {
    "API": "apptest:CreateTestCase",
    "EventSource": "apptest",
    "EventName": "CreateTestCase",
    "Description": "Creates a test case"
  },
  {
    "API": "apptest:CreateTestConfiguration",
    "EventSource": "apptest",
    "EventName": "CreateTestConfiguration",
    "Description": "Creates a test configuration"
  },
  {
    "API": "apptest:CreateTestSuite",
    "EventSource": "apptest",
    "EventName": "CreateTestSuite",
    "Description": "Creates a test suite"
  },
  {
    "API": "apptest:DeleteTestCase",
    "EventSource": "apptest",
    "EventName": "DeleteTestCase",
    "Description": "Deletes a test case"
  },
  {
    "API": "apptest:DeleteTestConfiguration",
    "EventSource": "apptest",
    "EventName": "DeleteTestConfiguration",
    "Description": "Deletes a test configuration"
  },
  {
    "API": "apptest:DeleteTestRun",
    "EventSource": "apptest",
    "EventName": "DeleteTestRun",
    "Description": "Deletes a test run"
  },
  {
    "API": "apptest:DeleteTestSuite",
    "EventSource": "apptest",
    "EventName": "DeleteTestSuite",
    "Description": "Deletes a test suite"
  },
  {
    "API": "apptest:GeneratePresignedUrl",
    "EventSource": "apptest",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "apptest:GetTestCase",
    "EventSource": "apptest",
    "EventName": "GetTestCase",
    "Description": "Gets a test case"
  },
  {
    "API": "apptest:GetTestConfiguration",
    "EventSource": "apptest",
    "EventName": "GetTestConfiguration",
    "Description": "Gets a test configuration"
  },
  {
    "API": "apptest:GetTestRunStep",
    "EventSource": "apptest",
    "EventName": "GetTestRunStep",
    "Description": "Gets a test run step"
  },
  {
    "API": "apptest:GetTestSuite",
    "EventSource": "apptest",
    "EventName": "GetTestSuite",
    "Description": "Gets a test suite"
  },
  {
    "API": "apptest:ListTagsForResource",
    "EventSource": "apptest",
    "EventName": "ListTagsForResource",
    "Description": "Lists tags for a resource"
  },
  {
    "API": "apptest:ListTestCases",
    "EventSource": "apptest",
    "EventName": "ListTestCases",
    "Description": "Lists test cases"
  },
  {
    "API": "apptest:ListTestConfigurations",
    "EventSource": "apptest",
    "EventName": "ListTestConfigurations",
    "Description": "Lists test configurations"
  },
  {
    "API": "apptest:ListTestRunSteps",
    "EventSource": "apptest",
    "EventName": "ListTestRunSteps",
    "Description": "Lists test run steps"
  },
  {
    "API": "apptest:ListTestRunTestCases",
    "EventSource": "apptest",
    "EventName": "ListTestRunTestCases",
    "Description": "Lists test run test cases"
  },
  {
    "API": "apptest:ListTestRuns",
    "EventSource": "apptest",
    "EventName": "ListTestRuns",
    "Description": "Lists test runs"
  },
  {
    "API": "apptest:ListTestSuites",
    "EventSource": "apptest",
    "EventName": "ListTestSuites",
    "Description": "Lists test suites"
  },
  {
    "API": "apptest:StartTestRun",
    "EventSource": "apptest",
    "EventName": "StartTestRun",
    "Description": "Starts a test run"
  },
  {
    "API": "apptest:TagResource",
    "EventSource": "apptest",
    "EventName": "TagResource",
    "Description": "Specifies tags of a resource"
  },
  {
    "API": "apptest:UntagResource",
    "EventSource": "apptest",
    "EventName": "UntagResource",
    "Description": "Untags a resource"
  },
  {
    "API": "apptest:UpdateTestCase",
    "EventSource": "apptest",
    "EventName": "UpdateTestCase",
    "Description": "Updates a test case"
  },
  {
    "API": "apptest:UpdateTestConfiguration",
    "EventSource": "apptest",
    "EventName": "UpdateTestConfiguration",
    "Description": "Updates a test configuration"
  },
  {
    "API": "apptest:UpdateTestSuite",
    "EventSource": "apptest",
    "EventName": "UpdateTestSuite",
    "Description": "Updates a test suite"
  },
  {
    "API": "arc-zonal-shift:CancelZonalShift",
    "EventSource": "arc-zonal-shift",
    "EventName": "CancelZonalShift",
    "Description": "Cancel a zonal shift in Amazon Route 53 Application Recovery Controller"
  },
  {
    "API": "arc-zonal-shift:CreatePracticeRunConfiguration",
    "EventSource": "arc-zonal-shift",
    "EventName": "CreatePracticeRunConfiguration",
    "Description": "A practice run configuration for zonal autoshift is required when you enable zonal autoshift"
  },
  {
    "API": "arc-zonal-shift:DeletePracticeRunConfiguration",
    "EventSource": "arc-zonal-shift",
    "EventName": "DeletePracticeRunConfiguration",
    "Description": "Deletes the practice run configuration for a resource"
  },
  {
    "API": "arc-zonal-shift:GeneratePresignedUrl",
    "EventSource": "arc-zonal-shift",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "arc-zonal-shift:GetManagedResource",
    "EventSource": "arc-zonal-shift",
    "EventName": "GetManagedResource",
    "Description": "Get information about a resource that's been registered for zonal shifts with Amazon Route 53 Application Recovery Controller in this Amazon Web Services Region"
  },
  {
    "API": "arc-zonal-shift:ListAutoshifts",
    "EventSource": "arc-zonal-shift",
    "EventName": "ListAutoshifts",
    "Description": "Returns the active autoshifts for a specified resource"
  },
  {
    "API": "arc-zonal-shift:ListManagedResources",
    "EventSource": "arc-zonal-shift",
    "EventName": "ListManagedResources",
    "Description": "Lists all the resources in your Amazon Web Services account in this Amazon Web Services Region that are managed for zonal shifts in Amazon Route 53 Application Recovery Controller, and information about them"
  },
  {
    "API": "arc-zonal-shift:ListZonalShifts",
    "EventSource": "arc-zonal-shift",
    "EventName": "ListZonalShifts",
    "Description": "Lists all active and completed zonal shifts in Amazon Route 53 Application Recovery Controller in your Amazon Web Services account in this Amazon Web Services Region"
  },
  {
    "API": "arc-zonal-shift:StartZonalShift",
    "EventSource": "arc-zonal-shift",
    "EventName": "StartZonalShift",
    "Description": "You start a zonal shift to temporarily move load balancer traffic away from an Availability Zone in an Amazon Web Services Region, to help your application recover immediately, for example, from a developer's bad code deployment or from an Amazon Web Services infrastructure failure in a single Availability Zone"
  },
  {
    "API": "arc-zonal-shift:UpdatePracticeRunConfiguration",
    "EventSource": "arc-zonal-shift",
    "EventName": "UpdatePracticeRunConfiguration",
    "Description": "Update a practice run configuration to change one or more of the following: add, change, or remove the blocking alarm; change the outcome alarm; or add, change, or remove blocking dates or time windows"
  },
  {
    "API": "arc-zonal-shift:UpdateZonalAutoshiftConfiguration",
    "EventSource": "arc-zonal-shift",
    "EventName": "UpdateZonalAutoshiftConfiguration",
    "Description": "You can update the zonal autoshift status for a resource, to enable or disable zonal autoshift"
  },
  {
    "API": "arc-zonal-shift:UpdateZonalShift",
    "EventSource": "arc-zonal-shift",
    "EventName": "UpdateZonalShift",
    "Description": "Update an active zonal shift in Amazon Route 53 Application Recovery Controller in your Amazon Web Services account"
  },
  {
    "API": "artifact:GeneratePresignedUrl",
    "EventSource": "artifact",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "artifact:GetAccountSettings",
    "EventSource": "artifact",
    "EventName": "GetAccountSettings",
    "Description": "Get the account settings for Artifact"
  },
  {
    "API": "artifact:GetReport",
    "EventSource": "artifact",
    "EventName": "GetReport",
    "Description": "Get the content for a single report"
  },
  {
    "API": "artifact:GetReportMetadata",
    "EventSource": "artifact",
    "EventName": "GetReportMetadata",
    "Description": "Get the metadata for a single report"
  },
  {
    "API": "artifact:GetTermForReport",
    "EventSource": "artifact",
    "EventName": "GetTermForReport",
    "Description": "Get the Term content associated with a single report"
  },
  {
    "API": "artifact:ListReports",
    "EventSource": "artifact",
    "EventName": "ListReports",
    "Description": "List available reports"
  },
  {
    "API": "artifact:PutAccountSettings",
    "EventSource": "artifact",
    "EventName": "PutAccountSettings",
    "Description": "Put the account settings for Artifact"
  },
  {
    "API": "athena:BatchGetNamedQuery",
    "EventSource": "athena",
    "EventName": "BatchGetNamedQuery",
    "Description": "Returns the details of a single named query or a list of up to 50 queries, which you provide as an array of query ID strings"
  },
  {
    "API": "athena:BatchGetPreparedStatement",
    "EventSource": "athena",
    "EventName": "BatchGetPreparedStatement",
    "Description": "Returns the details of a single prepared statement or a list of up to 256 prepared statements for the array of prepared statement names that you provide"
  },
  {
    "API": "athena:BatchGetQueryExecution",
    "EventSource": "athena",
    "EventName": "BatchGetQueryExecution",
    "Description": "Returns the details of a single query execution or a list of up to 50 query executions, which you provide as an array of query execution ID strings"
  },
  {
    "API": "athena:CancelCapacityReservation",
    "EventSource": "athena",
    "EventName": "CancelCapacityReservation",
    "Description": "Cancels the capacity reservation with the specified name"
  },
  {
    "API": "athena:CreateCapacityReservation",
    "EventSource": "athena",
    "EventName": "CreateCapacityReservation",
    "Description": "Creates a capacity reservation with the specified name and number of requested data processing units"
  },
  {
    "API": "athena:CreateDataCatalog",
    "EventSource": "athena",
    "EventName": "CreateDataCatalog",
    "Description": "Creates (registers) a data catalog with the specified name and properties"
  },
  {
    "API": "athena:CreateNamedQuery",
    "EventSource": "athena",
    "EventName": "CreateNamedQuery",
    "Description": "Creates a named query in the specified workgroup"
  },
  {
    "API": "athena:CreateNotebook",
    "EventSource": "athena",
    "EventName": "CreateNotebook",
    "Description": "Creates an empty ``ipynb`` file in the specified Apache Spark enabled workgroup"
  },
  {
    "API": "athena:CreatePreparedStatement",
    "EventSource": "athena",
    "EventName": "CreatePreparedStatement",
    "Description": "Creates a prepared statement for use with SQL queries in Athena"
  },
  {
    "API": "athena:CreatePresignedNotebookUrl",
    "EventSource": "athena",
    "EventName": "CreatePresignedNotebookUrl",
    "Description": "Gets an authentication token and the URL at which the notebook can be accessed"
  },
  {
    "API": "athena:CreateWorkGroup",
    "EventSource": "athena",
    "EventName": "CreateWorkGroup",
    "Description": "Creates a workgroup with the specified name"
  },
  {
    "API": "athena:DeleteCapacityReservation",
    "EventSource": "athena",
    "EventName": "DeleteCapacityReservation",
    "Description": "Deletes a cancelled capacity reservation"
  },
  {
    "API": "athena:DeleteDataCatalog",
    "EventSource": "athena",
    "EventName": "DeleteDataCatalog",
    "Description": "Deletes a data catalog"
  },
  {
    "API": "athena:DeleteNamedQuery",
    "EventSource": "athena",
    "EventName": "DeleteNamedQuery",
    "Description": "Deletes the named query if you have access to the workgroup in which the query was saved"
  },
  {
    "API": "athena:DeleteNotebook",
    "EventSource": "athena",
    "EventName": "DeleteNotebook",
    "Description": "Deletes the specified notebook"
  },
  {
    "API": "athena:DeletePreparedStatement",
    "EventSource": "athena",
    "EventName": "DeletePreparedStatement",
    "Description": "Deletes the prepared statement with the specified name from the specified workgroup"
  },
  {
    "API": "athena:DeleteWorkGroup",
    "EventSource": "athena",
    "EventName": "DeleteWorkGroup",
    "Description": "Deletes the workgroup with the specified name"
  },
  {
    "API": "athena:ExportNotebook",
    "EventSource": "athena",
    "EventName": "ExportNotebook",
    "Description": "Exports the specified notebook and its metadata"
  },
  {
    "API": "athena:GeneratePresignedUrl",
    "EventSource": "athena",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "athena:GetCalculationExecution",
    "EventSource": "athena",
    "EventName": "GetCalculationExecution",
    "Description": "Describes a previously submitted calculation execution"
  },
  {
    "API": "athena:GetCalculationExecutionCode",
    "EventSource": "athena",
    "EventName": "GetCalculationExecutionCode",
    "Description": "Retrieves the unencrypted code that was executed for the calculation"
  },
  {
    "API": "athena:GetCalculationExecutionStatus",
    "EventSource": "athena",
    "EventName": "GetCalculationExecutionStatus",
    "Description": "Gets the status of a current calculation"
  },
  {
    "API": "athena:GetCapacityAssignmentConfiguration",
    "EventSource": "athena",
    "EventName": "GetCapacityAssignmentConfiguration",
    "Description": "Gets the capacity assignment configuration for a capacity reservation, if one exists"
  },
  {
    "API": "athena:GetCapacityReservation",
    "EventSource": "athena",
    "EventName": "GetCapacityReservation",
    "Description": "Returns information about the capacity reservation with the specified name"
  },
  {
    "API": "athena:GetDataCatalog",
    "EventSource": "athena",
    "EventName": "GetDataCatalog",
    "Description": "Returns the specified data catalog"
  },
  {
    "API": "athena:GetDatabase",
    "EventSource": "athena",
    "EventName": "GetDatabase",
    "Description": "Returns a database object for the specified database and data catalog"
  },
  {
    "API": "athena:GetNamedQuery",
    "EventSource": "athena",
    "EventName": "GetNamedQuery",
    "Description": "Returns information about a single query"
  },
  {
    "API": "athena:GetNotebookMetadata",
    "EventSource": "athena",
    "EventName": "GetNotebookMetadata",
    "Description": "Retrieves notebook metadata for the specified notebook ID"
  },
  {
    "API": "athena:GetPreparedStatement",
    "EventSource": "athena",
    "EventName": "GetPreparedStatement",
    "Description": "Retrieves the prepared statement with the specified name from the specified workgroup"
  },
  {
    "API": "athena:GetQueryExecution",
    "EventSource": "athena",
    "EventName": "GetQueryExecution",
    "Description": "Returns information about a single execution of a query if you have access to the workgroup in which the query ran"
  },
  {
    "API": "athena:GetQueryResults",
    "EventSource": "athena",
    "EventName": "GetQueryResults",
    "Description": "Streams the results of a single query execution specified by ``QueryExecutionId`` from the Athena query results location in Amazon S3"
  },
  {
    "API": "athena:GetQueryRuntimeStatistics",
    "EventSource": "athena",
    "EventName": "GetQueryRuntimeStatistics",
    "Description": "Returns query execution runtime statistics related to a single execution of a query if you have access to the workgroup in which the query ran"
  },
  {
    "API": "athena:GetSession",
    "EventSource": "athena",
    "EventName": "GetSession",
    "Description": "Gets the full details of a previously created session, including the session status and configuration"
  },
  {
    "API": "athena:GetSessionStatus",
    "EventSource": "athena",
    "EventName": "GetSessionStatus",
    "Description": "Gets the current status of a session"
  },
  {
    "API": "athena:GetTableMetadata",
    "EventSource": "athena",
    "EventName": "GetTableMetadata",
    "Description": "Returns table metadata for the specified catalog, database, and table"
  },
  {
    "API": "athena:GetWorkGroup",
    "EventSource": "athena",
    "EventName": "GetWorkGroup",
    "Description": "Returns information about the workgroup with the specified name"
  },
  {
    "API": "athena:ImportNotebook",
    "EventSource": "athena",
    "EventName": "ImportNotebook",
    "Description": "Imports a single ``ipynb`` file to a Spark enabled workgroup"
  },
  {
    "API": "athena:ListApplicationDpuSizes",
    "EventSource": "athena",
    "EventName": "ListApplicationDpuSizes",
    "Description": "Returns the supported DPU sizes for the supported application runtimes (for example, ``Athena notebook version 1``)"
  },
  {
    "API": "athena:ListCalculationExecutions",
    "EventSource": "athena",
    "EventName": "ListCalculationExecutions",
    "Description": "Lists the calculations that have been submitted to a session in descending order"
  },
  {
    "API": "athena:ListCapacityReservations",
    "EventSource": "athena",
    "EventName": "ListCapacityReservations",
    "Description": "Lists the capacity reservations for the current account"
  },
  {
    "API": "athena:ListDataCatalogs",
    "EventSource": "athena",
    "EventName": "ListDataCatalogs",
    "Description": "Lists the data catalogs in the current Amazon Web Services account"
  },
  {
    "API": "athena:ListDatabases",
    "EventSource": "athena",
    "EventName": "ListDatabases",
    "Description": "Lists the databases in the specified data catalog"
  },
  {
    "API": "athena:ListEngineVersions",
    "EventSource": "athena",
    "EventName": "ListEngineVersions",
    "Description": "Returns a list of engine versions that are available to choose from, including the Auto option"
  },
  {
    "API": "athena:ListExecutors",
    "EventSource": "athena",
    "EventName": "ListExecutors",
    "Description": "Lists, in descending order, the executors that joined a session"
  },
  {
    "API": "athena:ListNamedQueries",
    "EventSource": "athena",
    "EventName": "ListNamedQueries",
    "Description": "Provides a list of available query IDs only for queries saved in the specified workgroup"
  },
  {
    "API": "athena:ListNotebookMetadata",
    "EventSource": "athena",
    "EventName": "ListNotebookMetadata",
    "Description": "Displays the notebook files for the specified workgroup in paginated format"
  },
  {
    "API": "athena:ListNotebookSessions",
    "EventSource": "athena",
    "EventName": "ListNotebookSessions",
    "Description": "Lists, in descending order, the sessions that have been created in a notebook that are in an active state like ``CREATING``, ``CREATED``, ``IDLE`` or ``BUSY``"
  },
  {
    "API": "athena:ListPreparedStatements",
    "EventSource": "athena",
    "EventName": "ListPreparedStatements",
    "Description": "Lists the prepared statements in the specified workgroup"
  },
  {
    "API": "athena:ListQueryExecutions",
    "EventSource": "athena",
    "EventName": "ListQueryExecutions",
    "Description": "Provides a list of available query execution IDs for the queries in the specified workgroup"
  },
  {
    "API": "athena:ListSessions",
    "EventSource": "athena",
    "EventName": "ListSessions",
    "Description": "Lists the sessions in a workgroup that are in an active state like ``CREATING``, ``CREATED``, ``IDLE``, or ``BUSY``"
  },
  {
    "API": "athena:ListTableMetadata",
    "EventSource": "athena",
    "EventName": "ListTableMetadata",
    "Description": "Lists the metadata for the tables in the specified data catalog database"
  },
  {
    "API": "athena:ListTagsForResource",
    "EventSource": "athena",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags associated with an Athena resource"
  },
  {
    "API": "athena:ListWorkGroups",
    "EventSource": "athena",
    "EventName": "ListWorkGroups",
    "Description": "Lists available workgroups for the account"
  },
  {
    "API": "athena:PutCapacityAssignmentConfiguration",
    "EventSource": "athena",
    "EventName": "PutCapacityAssignmentConfiguration",
    "Description": "Puts a new capacity assignment configuration for a specified capacity reservation"
  },
  {
    "API": "athena:StartCalculationExecution",
    "EventSource": "athena",
    "EventName": "StartCalculationExecution",
    "Description": "Submits calculations for execution within a session"
  },
  {
    "API": "athena:StartQueryExecution",
    "EventSource": "athena",
    "EventName": "StartQueryExecution",
    "Description": "Runs the SQL query statements contained in the ``Query``"
  },
  {
    "API": "athena:StartSession",
    "EventSource": "athena",
    "EventName": "StartSession",
    "Description": "Creates a session for running calculations within a workgroup"
  },
  {
    "API": "athena:StopCalculationExecution",
    "EventSource": "athena",
    "EventName": "StopCalculationExecution",
    "Description": "Requests the cancellation of a calculation"
  },
  {
    "API": "athena:StopQueryExecution",
    "EventSource": "athena",
    "EventName": "StopQueryExecution",
    "Description": "Stops a query execution"
  },
  {
    "API": "athena:TagResource",
    "EventSource": "athena",
    "EventName": "TagResource",
    "Description": "Adds one or more tags to an Athena resource"
  },
  {
    "API": "athena:TerminateSession",
    "EventSource": "athena",
    "EventName": "TerminateSession",
    "Description": "Terminates an active session"
  },
  {
    "API": "athena:UntagResource",
    "EventSource": "athena",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags from an Athena resource"
  },
  {
    "API": "athena:UpdateCapacityReservation",
    "EventSource": "athena",
    "EventName": "UpdateCapacityReservation",
    "Description": "Updates the number of requested data processing units for the capacity reservation with the specified name"
  },
  {
    "API": "athena:UpdateDataCatalog",
    "EventSource": "athena",
    "EventName": "UpdateDataCatalog",
    "Description": "Updates the data catalog that has the specified name"
  },
  {
    "API": "athena:UpdateNamedQuery",
    "EventSource": "athena",
    "EventName": "UpdateNamedQuery",
    "Description": "Updates a  NamedQuery object"
  },
  {
    "API": "athena:UpdateNotebook",
    "EventSource": "athena",
    "EventName": "UpdateNotebook",
    "Description": "Updates the contents of a Spark notebook"
  },
  {
    "API": "athena:UpdateNotebookMetadata",
    "EventSource": "athena",
    "EventName": "UpdateNotebookMetadata",
    "Description": "Updates the metadata for a notebook"
  },
  {
    "API": "athena:UpdatePreparedStatement",
    "EventSource": "athena",
    "EventName": "UpdatePreparedStatement",
    "Description": "Updates a prepared statement"
  },
  {
    "API": "athena:UpdateWorkGroup",
    "EventSource": "athena",
    "EventName": "UpdateWorkGroup",
    "Description": "Updates the workgroup with the specified name"
  },
  {
    "API": "auditmanager:AssociateAssessmentReportEvidenceFolder",
    "EventSource": "auditmanager",
    "EventName": "AssociateAssessmentReportEvidenceFolder",
    "Description": "Associates an evidence folder to an assessment report in an Audit Manager assessment"
  },
  {
    "API": "auditmanager:BatchAssociateAssessmentReportEvidence",
    "EventSource": "auditmanager",
    "EventName": "BatchAssociateAssessmentReportEvidence",
    "Description": "Associates a list of evidence to an assessment report in an Audit Manager assessment"
  },
  {
    "API": "auditmanager:BatchCreateDelegationByAssessment",
    "EventSource": "auditmanager",
    "EventName": "BatchCreateDelegationByAssessment",
    "Description": "Creates a batch of delegations for an assessment in Audit Manager"
  },
  {
    "API": "auditmanager:BatchDeleteDelegationByAssessment",
    "EventSource": "auditmanager",
    "EventName": "BatchDeleteDelegationByAssessment",
    "Description": "Deletes a batch of delegations for an assessment in Audit Manager"
  },
  {
    "API": "auditmanager:BatchDisassociateAssessmentReportEvidence",
    "EventSource": "auditmanager",
    "EventName": "BatchDisassociateAssessmentReportEvidence",
    "Description": "Disassociates a list of evidence from an assessment report in Audit Manager"
  },
  {
    "API": "auditmanager:BatchImportEvidenceToAssessmentControl",
    "EventSource": "auditmanager",
    "EventName": "BatchImportEvidenceToAssessmentControl",
    "Description": "Adds one or more pieces of evidence to a control in an Audit Manager assessment"
  },
  {
    "API": "auditmanager:CreateAssessment",
    "EventSource": "auditmanager",
    "EventName": "CreateAssessment",
    "Description": "Creates an assessment in Audit Manager"
  },
  {
    "API": "auditmanager:CreateAssessmentFramework",
    "EventSource": "auditmanager",
    "EventName": "CreateAssessmentFramework",
    "Description": "Creates a custom framework in Audit Manager"
  },
  {
    "API": "auditmanager:CreateAssessmentReport",
    "EventSource": "auditmanager",
    "EventName": "CreateAssessmentReport",
    "Description": "Creates an assessment report for the specified assessment"
  },
  {
    "API": "auditmanager:CreateControl",
    "EventSource": "auditmanager",
    "EventName": "CreateControl",
    "Description": "Creates a new custom control in Audit Manager"
  },
  {
    "API": "auditmanager:DeleteAssessment",
    "EventSource": "auditmanager",
    "EventName": "DeleteAssessment",
    "Description": "Deletes an assessment in Audit Manager"
  },
  {
    "API": "auditmanager:DeleteAssessmentFramework",
    "EventSource": "auditmanager",
    "EventName": "DeleteAssessmentFramework",
    "Description": "Deletes a custom framework in Audit Manager"
  },
  {
    "API": "auditmanager:DeleteAssessmentFrameworkShare",
    "EventSource": "auditmanager",
    "EventName": "DeleteAssessmentFrameworkShare",
    "Description": "Deletes a share request for a custom framework in Audit Manager"
  },
  {
    "API": "auditmanager:DeleteAssessmentReport",
    "EventSource": "auditmanager",
    "EventName": "DeleteAssessmentReport",
    "Description": "Deletes an assessment report in Audit Manager"
  },
  {
    "API": "auditmanager:DeleteControl",
    "EventSource": "auditmanager",
    "EventName": "DeleteControl",
    "Description": "Deletes a custom control in Audit Manager"
  },
  {
    "API": "auditmanager:DeregisterAccount",
    "EventSource": "auditmanager",
    "EventName": "DeregisterAccount",
    "Description": "Deregisters an account in Audit Manager"
  },
  {
    "API": "auditmanager:DeregisterOrganizationAdminAccount",
    "EventSource": "auditmanager",
    "EventName": "DeregisterOrganizationAdminAccount",
    "Description": "Removes the specified Amazon Web Services account as a delegated administrator for Audit Manager"
  },
  {
    "API": "auditmanager:DisassociateAssessmentReportEvidenceFolder",
    "EventSource": "auditmanager",
    "EventName": "DisassociateAssessmentReportEvidenceFolder",
    "Description": "Disassociates an evidence folder from the specified assessment report in Audit Manager"
  },
  {
    "API": "auditmanager:GeneratePresignedUrl",
    "EventSource": "auditmanager",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "auditmanager:GetAccountStatus",
    "EventSource": "auditmanager",
    "EventName": "GetAccountStatus",
    "Description": "Gets the registration status of an account in Audit Manager"
  },
  {
    "API": "auditmanager:GetAssessment",
    "EventSource": "auditmanager",
    "EventName": "GetAssessment",
    "Description": "Gets information about a specified assessment"
  },
  {
    "API": "auditmanager:GetAssessmentFramework",
    "EventSource": "auditmanager",
    "EventName": "GetAssessmentFramework",
    "Description": "Gets information about a specified framework"
  },
  {
    "API": "auditmanager:GetAssessmentReportUrl",
    "EventSource": "auditmanager",
    "EventName": "GetAssessmentReportUrl",
    "Description": "Gets the URL of an assessment report in Audit Manager"
  },
  {
    "API": "auditmanager:GetChangeLogs",
    "EventSource": "auditmanager",
    "EventName": "GetChangeLogs",
    "Description": "Gets a list of changelogs from Audit Manager"
  },
  {
    "API": "auditmanager:GetControl",
    "EventSource": "auditmanager",
    "EventName": "GetControl",
    "Description": "Gets information about a specified control"
  },
  {
    "API": "auditmanager:GetDelegations",
    "EventSource": "auditmanager",
    "EventName": "GetDelegations",
    "Description": "Gets a list of delegations from an audit owner to a delegate"
  },
  {
    "API": "auditmanager:GetEvidence",
    "EventSource": "auditmanager",
    "EventName": "GetEvidence",
    "Description": "Gets information about a specified evidence item"
  },
  {
    "API": "auditmanager:GetEvidenceByEvidenceFolder",
    "EventSource": "auditmanager",
    "EventName": "GetEvidenceByEvidenceFolder",
    "Description": "Gets all evidence from a specified evidence folder in Audit Manager"
  },
  {
    "API": "auditmanager:GetEvidenceFileUploadUrl",
    "EventSource": "auditmanager",
    "EventName": "GetEvidenceFileUploadUrl",
    "Description": "Creates a presigned Amazon S3 URL that can be used to upload a file as manual evidence"
  },
  {
    "API": "auditmanager:GetEvidenceFolder",
    "EventSource": "auditmanager",
    "EventName": "GetEvidenceFolder",
    "Description": "Gets an evidence folder from a specified assessment in Audit Manager"
  },
  {
    "API": "auditmanager:GetEvidenceFoldersByAssessment",
    "EventSource": "auditmanager",
    "EventName": "GetEvidenceFoldersByAssessment",
    "Description": "Gets the evidence folders from a specified assessment in Audit Manager"
  },
  {
    "API": "auditmanager:GetEvidenceFoldersByAssessmentControl",
    "EventSource": "auditmanager",
    "EventName": "GetEvidenceFoldersByAssessmentControl",
    "Description": "Gets a list of evidence folders that are associated with a specified control in an Audit Manager assessment"
  },
  {
    "API": "auditmanager:GetInsights",
    "EventSource": "auditmanager",
    "EventName": "GetInsights",
    "Description": "Gets the latest analytics data for all your current active assessments"
  },
  {
    "API": "auditmanager:GetInsightsByAssessment",
    "EventSource": "auditmanager",
    "EventName": "GetInsightsByAssessment",
    "Description": "Gets the latest analytics data for a specific active assessment"
  },
  {
    "API": "auditmanager:GetOrganizationAdminAccount",
    "EventSource": "auditmanager",
    "EventName": "GetOrganizationAdminAccount",
    "Description": "Gets the name of the delegated Amazon Web Services administrator account for a specified organization"
  },
  {
    "API": "auditmanager:GetServicesInScope",
    "EventSource": "auditmanager",
    "EventName": "GetServicesInScope",
    "Description": "Gets a list of the Amazon Web Services from which Audit Manager can collect evidence"
  },
  {
    "API": "auditmanager:GetSettings",
    "EventSource": "auditmanager",
    "EventName": "GetSettings",
    "Description": "Gets the settings for a specified Amazon Web Services account"
  },
  {
    "API": "auditmanager:ListAssessmentControlInsightsByControlDomain",
    "EventSource": "auditmanager",
    "EventName": "ListAssessmentControlInsightsByControlDomain",
    "Description": "Lists the latest analytics data for controls within a specific control domain and a specific active assessment"
  },
  {
    "API": "auditmanager:ListAssessmentFrameworkShareRequests",
    "EventSource": "auditmanager",
    "EventName": "ListAssessmentFrameworkShareRequests",
    "Description": "Returns a list of sent or received share requests for custom frameworks in Audit Manager"
  },
  {
    "API": "auditmanager:ListAssessmentFrameworks",
    "EventSource": "auditmanager",
    "EventName": "ListAssessmentFrameworks",
    "Description": "Returns a list of the frameworks that are available in the Audit Manager framework library"
  },
  {
    "API": "auditmanager:ListAssessmentReports",
    "EventSource": "auditmanager",
    "EventName": "ListAssessmentReports",
    "Description": "Returns a list of assessment reports created in Audit Manager"
  },
  {
    "API": "auditmanager:ListAssessments",
    "EventSource": "auditmanager",
    "EventName": "ListAssessments",
    "Description": "Returns a list of current and past assessments from Audit Manager"
  },
  {
    "API": "auditmanager:ListControlDomainInsights",
    "EventSource": "auditmanager",
    "EventName": "ListControlDomainInsights",
    "Description": "Lists the latest analytics data for control domains across all of your active assessments"
  },
  {
    "API": "auditmanager:ListControlDomainInsightsByAssessment",
    "EventSource": "auditmanager",
    "EventName": "ListControlDomainInsightsByAssessment",
    "Description": "Lists analytics data for control domains within a specified active assessment"
  },
  {
    "API": "auditmanager:ListControlInsightsByControlDomain",
    "EventSource": "auditmanager",
    "EventName": "ListControlInsightsByControlDomain",
    "Description": "Lists the latest analytics data for controls within a specific control domain across all active assessments"
  },
  {
    "API": "auditmanager:ListControls",
    "EventSource": "auditmanager",
    "EventName": "ListControls",
    "Description": "Returns a list of controls from Audit Manager"
  },
  {
    "API": "auditmanager:ListKeywordsForDataSource",
    "EventSource": "auditmanager",
    "EventName": "ListKeywordsForDataSource",
    "Description": "Returns a list of keywords that are pre-mapped to the specified control data source"
  },
  {
    "API": "auditmanager:ListNotifications",
    "EventSource": "auditmanager",
    "EventName": "ListNotifications",
    "Description": "Returns a list of all Audit Manager notifications"
  },
  {
    "API": "auditmanager:ListTagsForResource",
    "EventSource": "auditmanager",
    "EventName": "ListTagsForResource",
    "Description": "Returns a list of tags for the specified resource in Audit Manager"
  },
  {
    "API": "auditmanager:RegisterAccount",
    "EventSource": "auditmanager",
    "EventName": "RegisterAccount",
    "Description": "Enables Audit Manager for the specified Amazon Web Services account"
  },
  {
    "API": "auditmanager:RegisterOrganizationAdminAccount",
    "EventSource": "auditmanager",
    "EventName": "RegisterOrganizationAdminAccount",
    "Description": "Enables an Amazon Web Services account within the organization as the delegated administrator for Audit Manager"
  },
  {
    "API": "auditmanager:StartAssessmentFrameworkShare",
    "EventSource": "auditmanager",
    "EventName": "StartAssessmentFrameworkShare",
    "Description": "Creates a share request for a custom framework in Audit Manager"
  },
  {
    "API": "auditmanager:TagResource",
    "EventSource": "auditmanager",
    "EventName": "TagResource",
    "Description": "Tags the specified resource in Audit Manager"
  },
  {
    "API": "auditmanager:UntagResource",
    "EventSource": "auditmanager",
    "EventName": "UntagResource",
    "Description": "Removes a tag from a resource in Audit Manager"
  },
  {
    "API": "auditmanager:UpdateAssessment",
    "EventSource": "auditmanager",
    "EventName": "UpdateAssessment",
    "Description": "Edits an Audit Manager assessment"
  },
  {
    "API": "auditmanager:UpdateAssessmentControl",
    "EventSource": "auditmanager",
    "EventName": "UpdateAssessmentControl",
    "Description": "Updates a control within an assessment in Audit Manager"
  },
  {
    "API": "auditmanager:UpdateAssessmentControlSetStatus",
    "EventSource": "auditmanager",
    "EventName": "UpdateAssessmentControlSetStatus",
    "Description": "Updates the status of a control set in an Audit Manager assessment"
  },
  {
    "API": "auditmanager:UpdateAssessmentFramework",
    "EventSource": "auditmanager",
    "EventName": "UpdateAssessmentFramework",
    "Description": "Updates a custom framework in Audit Manager"
  },
  {
    "API": "auditmanager:UpdateAssessmentFrameworkShare",
    "EventSource": "auditmanager",
    "EventName": "UpdateAssessmentFrameworkShare",
    "Description": "Updates a share request for a custom framework in Audit Manager"
  },
  {
    "API": "auditmanager:UpdateAssessmentStatus",
    "EventSource": "auditmanager",
    "EventName": "UpdateAssessmentStatus",
    "Description": "Updates the status of an assessment in Audit Manager"
  },
  {
    "API": "auditmanager:UpdateControl",
    "EventSource": "auditmanager",
    "EventName": "UpdateControl",
    "Description": "Updates a custom control in Audit Manager"
  },
  {
    "API": "auditmanager:UpdateSettings",
    "EventSource": "auditmanager",
    "EventName": "UpdateSettings",
    "Description": "Updates Audit Manager settings for the current account"
  },
  {
    "API": "auditmanager:ValidateAssessmentReportIntegrity",
    "EventSource": "auditmanager",
    "EventName": "ValidateAssessmentReportIntegrity",
    "Description": "Validates the integrity of an assessment report in Audit Manager"
  },
  {
    "API": "autoscaling:AttachInstances",
    "EventSource": "autoscaling",
    "EventName": "AttachInstances",
    "Description": "Attaches one or more EC2 instances to the specified Auto Scaling group"
  },
  {
    "API": "autoscaling:AttachLoadBalancerTargetGroups",
    "EventSource": "autoscaling",
    "EventName": "AttachLoadBalancerTargetGroups",
    "Description": ""
  },
  {
    "API": "autoscaling:AttachLoadBalancers",
    "EventSource": "autoscaling",
    "EventName": "AttachLoadBalancers",
    "Description": ""
  },
  {
    "API": "autoscaling:AttachTrafficSources",
    "EventSource": "autoscaling",
    "EventName": "AttachTrafficSources",
    "Description": "Attaches one or more traffic sources to the specified Auto Scaling group"
  },
  {
    "API": "autoscaling:BatchDeleteScheduledAction",
    "EventSource": "autoscaling",
    "EventName": "BatchDeleteScheduledAction",
    "Description": "Deletes one or more scheduled actions for the specified Auto Scaling group"
  },
  {
    "API": "autoscaling:BatchPutScheduledUpdateGroupAction",
    "EventSource": "autoscaling",
    "EventName": "BatchPutScheduledUpdateGroupAction",
    "Description": "Creates or updates one or more scheduled scaling actions for an Auto Scaling group"
  },
  {
    "API": "autoscaling:CancelInstanceRefresh",
    "EventSource": "autoscaling",
    "EventName": "CancelInstanceRefresh",
    "Description": "Cancels an instance refresh or rollback that is in progress"
  },
  {
    "API": "autoscaling:CompleteLifecycleAction",
    "EventSource": "autoscaling",
    "EventName": "CompleteLifecycleAction",
    "Description": "Completes the lifecycle action for the specified token or instance with the specified result"
  },
  {
    "API": "autoscaling:CreateAutoScalingGroup",
    "EventSource": "autoscaling",
    "EventName": "CreateAutoScalingGroup",
    "Description": "**We strongly recommend using a launch template when calling this operation to ensure full functionality for Amazon EC2 Auto Scaling and Amazon EC2"
  },
  {
    "API": "autoscaling:CreateLaunchConfiguration",
    "EventSource": "autoscaling",
    "EventName": "CreateLaunchConfiguration",
    "Description": "Creates a launch configuration"
  },
  {
    "API": "autoscaling:CreateOrUpdateTags",
    "EventSource": "autoscaling",
    "EventName": "CreateOrUpdateTags",
    "Description": "Creates or updates tags for the specified Auto Scaling group"
  },
  {
    "API": "autoscaling:DeleteAutoScalingGroup",
    "EventSource": "autoscaling",
    "EventName": "DeleteAutoScalingGroup",
    "Description": "Deletes the specified Auto Scaling group"
  },
  {
    "API": "autoscaling:DeleteLaunchConfiguration",
    "EventSource": "autoscaling",
    "EventName": "DeleteLaunchConfiguration",
    "Description": "Deletes the specified launch configuration"
  },
  {
    "API": "autoscaling:DeleteLifecycleHook",
    "EventSource": "autoscaling",
    "EventName": "DeleteLifecycleHook",
    "Description": "Deletes the specified lifecycle hook"
  },
  {
    "API": "autoscaling:DeleteNotificationConfiguration",
    "EventSource": "autoscaling",
    "EventName": "DeleteNotificationConfiguration",
    "Description": "Deletes the specified notification"
  },
  {
    "API": "autoscaling:DeletePolicy",
    "EventSource": "autoscaling",
    "EventName": "DeletePolicy",
    "Description": "Deletes the specified scaling policy"
  },
  {
    "API": "autoscaling:DeleteScheduledAction",
    "EventSource": "autoscaling",
    "EventName": "DeleteScheduledAction",
    "Description": "Deletes the specified scheduled action"
  },
  {
    "API": "autoscaling:DeleteTags",
    "EventSource": "autoscaling",
    "EventName": "DeleteTags",
    "Description": "Deletes the specified tags"
  },
  {
    "API": "autoscaling:DeleteWarmPool",
    "EventSource": "autoscaling",
    "EventName": "DeleteWarmPool",
    "Description": "Deletes the warm pool for the specified Auto Scaling group"
  },
  {
    "API": "autoscaling:DescribeAccountLimits",
    "EventSource": "autoscaling",
    "EventName": "DescribeAccountLimits",
    "Description": "Describes the current Amazon EC2 Auto Scaling resource quotas for your account"
  },
  {
    "API": "autoscaling:DescribeAdjustmentTypes",
    "EventSource": "autoscaling",
    "EventName": "DescribeAdjustmentTypes",
    "Description": "Describes the available adjustment types for step scaling and simple scaling policies"
  },
  {
    "API": "autoscaling:DescribeAutoScalingGroups",
    "EventSource": "autoscaling",
    "EventName": "DescribeAutoScalingGroups",
    "Description": "Gets information about the Auto Scaling groups in the account and Region"
  },
  {
    "API": "autoscaling:DescribeAutoScalingInstances",
    "EventSource": "autoscaling",
    "EventName": "DescribeAutoScalingInstances",
    "Description": "Gets information about the Auto Scaling instances in the account and Region"
  },
  {
    "API": "autoscaling:DescribeAutoScalingNotificationTypes",
    "EventSource": "autoscaling",
    "EventName": "DescribeAutoScalingNotificationTypes",
    "Description": "Describes the notification types that are supported by Amazon EC2 Auto Scaling"
  },
  {
    "API": "autoscaling:DescribeInstanceRefreshes",
    "EventSource": "autoscaling",
    "EventName": "DescribeInstanceRefreshes",
    "Description": "Gets information about the instance refreshes for the specified Auto Scaling group from the previous six weeks"
  },
  {
    "API": "autoscaling:DescribeLaunchConfigurations",
    "EventSource": "autoscaling",
    "EventName": "DescribeLaunchConfigurations",
    "Description": "Gets information about the launch configurations in the account and Region"
  },
  {
    "API": "autoscaling:DescribeLifecycleHookTypes",
    "EventSource": "autoscaling",
    "EventName": "DescribeLifecycleHookTypes",
    "Description": "Describes the available types of lifecycle hooks"
  },
  {
    "API": "autoscaling:DescribeLifecycleHooks",
    "EventSource": "autoscaling",
    "EventName": "DescribeLifecycleHooks",
    "Description": "Gets information about the lifecycle hooks for the specified Auto Scaling group"
  },
  {
    "API": "autoscaling:DescribeLoadBalancerTargetGroups",
    "EventSource": "autoscaling",
    "EventName": "DescribeLoadBalancerTargetGroups",
    "Description": ""
  },
  {
    "API": "autoscaling:DescribeLoadBalancers",
    "EventSource": "autoscaling",
    "EventName": "DescribeLoadBalancers",
    "Description": ""
  },
  {
    "API": "autoscaling:DescribeMetricCollectionTypes",
    "EventSource": "autoscaling",
    "EventName": "DescribeMetricCollectionTypes",
    "Description": "Describes the available CloudWatch metrics for Amazon EC2 Auto Scaling"
  },
  {
    "API": "autoscaling:DescribeNotificationConfigurations",
    "EventSource": "autoscaling",
    "EventName": "DescribeNotificationConfigurations",
    "Description": "Gets information about the Amazon SNS notifications that are configured for one or more Auto Scaling groups"
  },
  {
    "API": "autoscaling:DescribePolicies",
    "EventSource": "autoscaling",
    "EventName": "DescribePolicies",
    "Description": "Gets information about the scaling policies in the account and Region"
  },
  {
    "API": "autoscaling:DescribeScalingActivities",
    "EventSource": "autoscaling",
    "EventName": "DescribeScalingActivities",
    "Description": "Gets information about the scaling activities in the account and Region"
  },
  {
    "API": "autoscaling:DescribeScalingProcessTypes",
    "EventSource": "autoscaling",
    "EventName": "DescribeScalingProcessTypes",
    "Description": "Describes the scaling process types for use with the  ResumeProcesses and  SuspendProcesses APIs"
  },
  {
    "API": "autoscaling:DescribeScheduledActions",
    "EventSource": "autoscaling",
    "EventName": "DescribeScheduledActions",
    "Description": "Gets information about the scheduled actions that haven't run or that have not reached their end time"
  },
  {
    "API": "autoscaling:DescribeTags",
    "EventSource": "autoscaling",
    "EventName": "DescribeTags",
    "Description": "Describes the specified tags"
  },
  {
    "API": "autoscaling:DescribeTerminationPolicyTypes",
    "EventSource": "autoscaling",
    "EventName": "DescribeTerminationPolicyTypes",
    "Description": "Describes the termination policies supported by Amazon EC2 Auto Scaling"
  },
  {
    "API": "autoscaling:DescribeTrafficSources",
    "EventSource": "autoscaling",
    "EventName": "DescribeTrafficSources",
    "Description": "Gets information about the traffic sources for the specified Auto Scaling group"
  },
  {
    "API": "autoscaling:DescribeWarmPool",
    "EventSource": "autoscaling",
    "EventName": "DescribeWarmPool",
    "Description": "Gets information about a warm pool and its instances"
  },
  {
    "API": "autoscaling:DetachInstances",
    "EventSource": "autoscaling",
    "EventName": "DetachInstances",
    "Description": "Removes one or more instances from the specified Auto Scaling group"
  },
  {
    "API": "autoscaling:DetachLoadBalancerTargetGroups",
    "EventSource": "autoscaling",
    "EventName": "DetachLoadBalancerTargetGroups",
    "Description": ""
  },
  {
    "API": "autoscaling:DetachLoadBalancers",
    "EventSource": "autoscaling",
    "EventName": "DetachLoadBalancers",
    "Description": ""
  },
  {
    "API": "autoscaling:DetachTrafficSources",
    "EventSource": "autoscaling",
    "EventName": "DetachTrafficSources",
    "Description": "Detaches one or more traffic sources from the specified Auto Scaling group"
  },
  {
    "API": "autoscaling:DisableMetricsCollection",
    "EventSource": "autoscaling",
    "EventName": "DisableMetricsCollection",
    "Description": "Disables group metrics collection for the specified Auto Scaling group"
  },
  {
    "API": "autoscaling:EnableMetricsCollection",
    "EventSource": "autoscaling",
    "EventName": "EnableMetricsCollection",
    "Description": "Enables group metrics collection for the specified Auto Scaling group"
  },
  {
    "API": "autoscaling:EnterStandby",
    "EventSource": "autoscaling",
    "EventName": "EnterStandby",
    "Description": "Moves the specified instances into the standby state"
  },
  {
    "API": "autoscaling:ExecutePolicy",
    "EventSource": "autoscaling",
    "EventName": "ExecutePolicy",
    "Description": "Executes the specified policy"
  },
  {
    "API": "autoscaling:ExitStandby",
    "EventSource": "autoscaling",
    "EventName": "ExitStandby",
    "Description": "Moves the specified instances out of the standby state"
  },
  {
    "API": "autoscaling:GeneratePresignedUrl",
    "EventSource": "autoscaling",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "autoscaling:GetPredictiveScalingForecast",
    "EventSource": "autoscaling",
    "EventName": "GetPredictiveScalingForecast",
    "Description": "Retrieves the forecast data for a predictive scaling policy"
  },
  {
    "API": "autoscaling:PutLifecycleHook",
    "EventSource": "autoscaling",
    "EventName": "PutLifecycleHook",
    "Description": "Creates or updates a lifecycle hook for the specified Auto Scaling group"
  },
  {
    "API": "autoscaling:PutNotificationConfiguration",
    "EventSource": "autoscaling",
    "EventName": "PutNotificationConfiguration",
    "Description": "Configures an Auto Scaling group to send notifications when specified events take place"
  },
  {
    "API": "autoscaling:PutScalingPolicy",
    "EventSource": "autoscaling",
    "EventName": "PutScalingPolicy",
    "Description": "Creates or updates a scaling policy for an Auto Scaling group"
  },
  {
    "API": "autoscaling:PutScheduledUpdateGroupAction",
    "EventSource": "autoscaling",
    "EventName": "PutScheduledUpdateGroupAction",
    "Description": "Creates or updates a scheduled scaling action for an Auto Scaling group"
  },
  {
    "API": "autoscaling:PutWarmPool",
    "EventSource": "autoscaling",
    "EventName": "PutWarmPool",
    "Description": "Creates or updates a warm pool for the specified Auto Scaling group"
  },
  {
    "API": "autoscaling:RecordLifecycleActionHeartbeat",
    "EventSource": "autoscaling",
    "EventName": "RecordLifecycleActionHeartbeat",
    "Description": "Records a heartbeat for the lifecycle action associated with the specified token or instance"
  },
  {
    "API": "autoscaling:ResumeProcesses",
    "EventSource": "autoscaling",
    "EventName": "ResumeProcesses",
    "Description": "Resumes the specified suspended auto scaling processes, or all suspended process, for the specified Auto Scaling group"
  },
  {
    "API": "autoscaling:RollbackInstanceRefresh",
    "EventSource": "autoscaling",
    "EventName": "RollbackInstanceRefresh",
    "Description": "Cancels an instance refresh that is in progress and rolls back any changes that it made"
  },
  {
    "API": "autoscaling:SetDesiredCapacity",
    "EventSource": "autoscaling",
    "EventName": "SetDesiredCapacity",
    "Description": "Sets the size of the specified Auto Scaling group"
  },
  {
    "API": "autoscaling:SetInstanceHealth",
    "EventSource": "autoscaling",
    "EventName": "SetInstanceHealth",
    "Description": "Sets the health status of the specified instance"
  },
  {
    "API": "autoscaling:SetInstanceProtection",
    "EventSource": "autoscaling",
    "EventName": "SetInstanceProtection",
    "Description": "Updates the instance protection settings of the specified instances"
  },
  {
    "API": "autoscaling:StartInstanceRefresh",
    "EventSource": "autoscaling",
    "EventName": "StartInstanceRefresh",
    "Description": "Starts an instance refresh"
  },
  {
    "API": "autoscaling:SuspendProcesses",
    "EventSource": "autoscaling",
    "EventName": "SuspendProcesses",
    "Description": "Suspends the specified auto scaling processes, or all processes, for the specified Auto Scaling group"
  },
  {
    "API": "autoscaling:TerminateInstanceInAutoScalingGroup",
    "EventSource": "autoscaling",
    "EventName": "TerminateInstanceInAutoScalingGroup",
    "Description": "Terminates the specified instance and optionally adjusts the desired group size"
  },
  {
    "API": "autoscaling:UpdateAutoScalingGroup",
    "EventSource": "autoscaling",
    "EventName": "UpdateAutoScalingGroup",
    "Description": "**We strongly recommend that all Auto Scaling groups use launch templates to ensure full functionality for Amazon EC2 Auto Scaling and Amazon EC2"
  },
  {
    "API": "autoscaling-plans:CreateScalingPlan",
    "EventSource": "autoscaling-plans",
    "EventName": "CreateScalingPlan",
    "Description": "Creates a scaling plan"
  },
  {
    "API": "autoscaling-plans:DeleteScalingPlan",
    "EventSource": "autoscaling-plans",
    "EventName": "DeleteScalingPlan",
    "Description": "Deletes the specified scaling plan"
  },
  {
    "API": "autoscaling-plans:DescribeScalingPlanResources",
    "EventSource": "autoscaling-plans",
    "EventName": "DescribeScalingPlanResources",
    "Description": "Describes the scalable resources in the specified scaling plan"
  },
  {
    "API": "autoscaling-plans:DescribeScalingPlans",
    "EventSource": "autoscaling-plans",
    "EventName": "DescribeScalingPlans",
    "Description": "Describes one or more of your scaling plans"
  },
  {
    "API": "autoscaling-plans:GeneratePresignedUrl",
    "EventSource": "autoscaling-plans",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "autoscaling-plans:GetScalingPlanResourceForecastData",
    "EventSource": "autoscaling-plans",
    "EventName": "GetScalingPlanResourceForecastData",
    "Description": "Retrieves the forecast data for a scalable resource"
  },
  {
    "API": "autoscaling-plans:UpdateScalingPlan",
    "EventSource": "autoscaling-plans",
    "EventName": "UpdateScalingPlan",
    "Description": "Updates the specified scaling plan"
  },
  {
    "API": "b2bi:CreateCapability",
    "EventSource": "b2bi",
    "EventName": "CreateCapability",
    "Description": "Instantiates a capability based on the specified parameters"
  },
  {
    "API": "b2bi:CreatePartnership",
    "EventSource": "b2bi",
    "EventName": "CreatePartnership",
    "Description": "Creates a partnership between a customer and a trading partner, based on the supplied parameters"
  },
  {
    "API": "b2bi:CreateProfile",
    "EventSource": "b2bi",
    "EventName": "CreateProfile",
    "Description": "Creates a customer profile"
  },
  {
    "API": "b2bi:CreateTransformer",
    "EventSource": "b2bi",
    "EventName": "CreateTransformer",
    "Description": "Creates a transformer"
  },
  {
    "API": "b2bi:DeleteCapability",
    "EventSource": "b2bi",
    "EventName": "DeleteCapability",
    "Description": "Deletes the specified capability"
  },
  {
    "API": "b2bi:DeletePartnership",
    "EventSource": "b2bi",
    "EventName": "DeletePartnership",
    "Description": "Deletes the specified partnership"
  },
  {
    "API": "b2bi:DeleteProfile",
    "EventSource": "b2bi",
    "EventName": "DeleteProfile",
    "Description": "Deletes the specified profile"
  },
  {
    "API": "b2bi:DeleteTransformer",
    "EventSource": "b2bi",
    "EventName": "DeleteTransformer",
    "Description": "Deletes the specified transformer"
  },
  {
    "API": "b2bi:GeneratePresignedUrl",
    "EventSource": "b2bi",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "b2bi:GetCapability",
    "EventSource": "b2bi",
    "EventName": "GetCapability",
    "Description": "Retrieves the details for the specified capability"
  },
  {
    "API": "b2bi:GetPartnership",
    "EventSource": "b2bi",
    "EventName": "GetPartnership",
    "Description": "Retrieves the details for a partnership, based on the partner and profile IDs specified"
  },
  {
    "API": "b2bi:GetProfile",
    "EventSource": "b2bi",
    "EventName": "GetProfile",
    "Description": "Retrieves the details for the profile specified by the profile ID"
  },
  {
    "API": "b2bi:GetTransformer",
    "EventSource": "b2bi",
    "EventName": "GetTransformer",
    "Description": "Retrieves the details for the transformer specified by the transformer ID"
  },
  {
    "API": "b2bi:GetTransformerJob",
    "EventSource": "b2bi",
    "EventName": "GetTransformerJob",
    "Description": "Returns the details of the transformer run, based on the Transformer job ID"
  },
  {
    "API": "b2bi:ListCapabilities",
    "EventSource": "b2bi",
    "EventName": "ListCapabilities",
    "Description": "Lists the capabilities associated with your Amazon Web Services account for your current or specified region"
  },
  {
    "API": "b2bi:ListPartnerships",
    "EventSource": "b2bi",
    "EventName": "ListPartnerships",
    "Description": "Lists the partnerships associated with your Amazon Web Services account for your current or specified region"
  },
  {
    "API": "b2bi:ListProfiles",
    "EventSource": "b2bi",
    "EventName": "ListProfiles",
    "Description": "Lists the profiles associated with your Amazon Web Services account for your current or specified region"
  },
  {
    "API": "b2bi:ListTagsForResource",
    "EventSource": "b2bi",
    "EventName": "ListTagsForResource",
    "Description": "Lists all of the tags associated with the Amazon Resource Name (ARN) that you specify"
  },
  {
    "API": "b2bi:ListTransformers",
    "EventSource": "b2bi",
    "EventName": "ListTransformers",
    "Description": "Lists the available transformers"
  },
  {
    "API": "b2bi:StartTransformerJob",
    "EventSource": "b2bi",
    "EventName": "StartTransformerJob",
    "Description": "Runs a job, using a transformer, to parse input EDI (electronic data interchange) file into the output structures used by Amazon Web Services B2BI Data Interchange"
  },
  {
    "API": "b2bi:TagResource",
    "EventSource": "b2bi",
    "EventName": "TagResource",
    "Description": "Attaches a key-value pair to a resource, as identified by its Amazon Resource Name (ARN)"
  },
  {
    "API": "b2bi:TestMapping",
    "EventSource": "b2bi",
    "EventName": "TestMapping",
    "Description": "Maps the input file according to the provided template file"
  },
  {
    "API": "b2bi:TestParsing",
    "EventSource": "b2bi",
    "EventName": "TestParsing",
    "Description": "Parses the input EDI (electronic data interchange) file"
  },
  {
    "API": "b2bi:UntagResource",
    "EventSource": "b2bi",
    "EventName": "UntagResource",
    "Description": "Detaches a key-value pair from the specified resource, as identified by its Amazon Resource Name (ARN)"
  },
  {
    "API": "b2bi:UpdateCapability",
    "EventSource": "b2bi",
    "EventName": "UpdateCapability",
    "Description": "Updates some of the parameters for a capability, based on the specified parameters"
  },
  {
    "API": "b2bi:UpdatePartnership",
    "EventSource": "b2bi",
    "EventName": "UpdatePartnership",
    "Description": "Updates some of the parameters for a partnership between a customer and trading partner"
  },
  {
    "API": "b2bi:UpdateProfile",
    "EventSource": "b2bi",
    "EventName": "UpdateProfile",
    "Description": "Updates the specified parameters for a profile"
  },
  {
    "API": "b2bi:UpdateTransformer",
    "EventSource": "b2bi",
    "EventName": "UpdateTransformer",
    "Description": "Updates the specified parameters for a transformer"
  },
  {
    "API": "backup:CancelLegalHold",
    "EventSource": "backup",
    "EventName": "CancelLegalHold",
    "Description": "This action removes the specified legal hold on a recovery point"
  },
  {
    "API": "backup:CreateBackupPlan",
    "EventSource": "backup",
    "EventName": "CreateBackupPlan",
    "Description": "Creates a backup plan using a backup plan name and backup rules"
  },
  {
    "API": "backup:CreateBackupSelection",
    "EventSource": "backup",
    "EventName": "CreateBackupSelection",
    "Description": "Creates a JSON document that specifies a set of resources to assign to a backup plan"
  },
  {
    "API": "backup:CreateBackupVault",
    "EventSource": "backup",
    "EventName": "CreateBackupVault",
    "Description": "Creates a logical container where backups are stored"
  },
  {
    "API": "backup:CreateFramework",
    "EventSource": "backup",
    "EventName": "CreateFramework",
    "Description": "Creates a framework with one or more controls"
  },
  {
    "API": "backup:CreateLegalHold",
    "EventSource": "backup",
    "EventName": "CreateLegalHold",
    "Description": "This action creates a legal hold on a recovery point (backup)"
  },
  {
    "API": "backup:CreateLogicallyAirGappedBackupVault",
    "EventSource": "backup",
    "EventName": "CreateLogicallyAirGappedBackupVault",
    "Description": "This request creates a logical container to where backups may be copied"
  },
  {
    "API": "backup:CreateReportPlan",
    "EventSource": "backup",
    "EventName": "CreateReportPlan",
    "Description": "Creates a report plan"
  },
  {
    "API": "backup:CreateRestoreTestingPlan",
    "EventSource": "backup",
    "EventName": "CreateRestoreTestingPlan",
    "Description": "This is the first of two steps to create a restore testing plan; once this request is successful, finish the procedure with request CreateRestoreTestingSelection"
  },
  {
    "API": "backup:CreateRestoreTestingSelection",
    "EventSource": "backup",
    "EventName": "CreateRestoreTestingSelection",
    "Description": "This request can be sent after CreateRestoreTestingPlan request returns successfully"
  },
  {
    "API": "backup:DeleteBackupPlan",
    "EventSource": "backup",
    "EventName": "DeleteBackupPlan",
    "Description": "Deletes a backup plan"
  },
  {
    "API": "backup:DeleteBackupSelection",
    "EventSource": "backup",
    "EventName": "DeleteBackupSelection",
    "Description": "Deletes the resource selection associated with a backup plan that is specified by the ``SelectionId``"
  },
  {
    "API": "backup:DeleteBackupVault",
    "EventSource": "backup",
    "EventName": "DeleteBackupVault",
    "Description": "Deletes the backup vault identified by its name"
  },
  {
    "API": "backup:DeleteBackupVaultAccessPolicy",
    "EventSource": "backup",
    "EventName": "DeleteBackupVaultAccessPolicy",
    "Description": "Deletes the policy document that manages permissions on a backup vault"
  },
  {
    "API": "backup:DeleteBackupVaultLockConfiguration",
    "EventSource": "backup",
    "EventName": "DeleteBackupVaultLockConfiguration",
    "Description": "Deletes Backup Vault Lock from a backup vault specified by a backup vault name"
  },
  {
    "API": "backup:DeleteBackupVaultNotifications",
    "EventSource": "backup",
    "EventName": "DeleteBackupVaultNotifications",
    "Description": "Deletes event notifications for the specified backup vault"
  },
  {
    "API": "backup:DeleteFramework",
    "EventSource": "backup",
    "EventName": "DeleteFramework",
    "Description": "Deletes the framework specified by a framework name"
  },
  {
    "API": "backup:DeleteRecoveryPoint",
    "EventSource": "backup",
    "EventName": "DeleteRecoveryPoint",
    "Description": "Deletes the recovery point specified by a recovery point ID"
  },
  {
    "API": "backup:DeleteReportPlan",
    "EventSource": "backup",
    "EventName": "DeleteReportPlan",
    "Description": "Deletes the report plan specified by a report plan name"
  },
  {
    "API": "backup:DeleteRestoreTestingPlan",
    "EventSource": "backup",
    "EventName": "DeleteRestoreTestingPlan",
    "Description": "This request deletes the specified restore testing plan"
  },
  {
    "API": "backup:DeleteRestoreTestingSelection",
    "EventSource": "backup",
    "EventName": "DeleteRestoreTestingSelection",
    "Description": "Input the Restore Testing Plan name and Restore Testing Selection name"
  },
  {
    "API": "backup:DescribeBackupJob",
    "EventSource": "backup",
    "EventName": "DescribeBackupJob",
    "Description": "Returns backup job details for the specified ``BackupJobId``"
  },
  {
    "API": "backup:DescribeBackupVault",
    "EventSource": "backup",
    "EventName": "DescribeBackupVault",
    "Description": "Returns metadata about a backup vault specified by its name"
  },
  {
    "API": "backup:DescribeCopyJob",
    "EventSource": "backup",
    "EventName": "DescribeCopyJob",
    "Description": "Returns metadata associated with creating a copy of a resource"
  },
  {
    "API": "backup:DescribeFramework",
    "EventSource": "backup",
    "EventName": "DescribeFramework",
    "Description": "Returns the framework details for the specified ``FrameworkName``"
  },
  {
    "API": "backup:DescribeGlobalSettings",
    "EventSource": "backup",
    "EventName": "DescribeGlobalSettings",
    "Description": "Describes whether the Amazon Web Services account is opted in to cross-account backup"
  },
  {
    "API": "backup:DescribeProtectedResource",
    "EventSource": "backup",
    "EventName": "DescribeProtectedResource",
    "Description": "Returns information about a saved resource, including the last time it was backed up, its Amazon Resource Name (ARN), and the Amazon Web Services service type of the saved resource"
  },
  {
    "API": "backup:DescribeRecoveryPoint",
    "EventSource": "backup",
    "EventName": "DescribeRecoveryPoint",
    "Description": "Returns metadata associated with a recovery point, including ID, status, encryption, and lifecycle"
  },
  {
    "API": "backup:DescribeRegionSettings",
    "EventSource": "backup",
    "EventName": "DescribeRegionSettings",
    "Description": "Returns the current service opt-in settings for the Region"
  },
  {
    "API": "backup:DescribeReportJob",
    "EventSource": "backup",
    "EventName": "DescribeReportJob",
    "Description": "Returns the details associated with creating a report as specified by its ``ReportJobId``"
  },
  {
    "API": "backup:DescribeReportPlan",
    "EventSource": "backup",
    "EventName": "DescribeReportPlan",
    "Description": "Returns a list of all report plans for an Amazon Web Services account and Amazon Web Services Region"
  },
  {
    "API": "backup:DescribeRestoreJob",
    "EventSource": "backup",
    "EventName": "DescribeRestoreJob",
    "Description": "Returns metadata associated with a restore job that is specified by a job ID"
  },
  {
    "API": "backup:DisassociateRecoveryPoint",
    "EventSource": "backup",
    "EventName": "DisassociateRecoveryPoint",
    "Description": "Deletes the specified continuous backup recovery point from Backup and releases control of that continuous backup to the source service, such as Amazon RDS"
  },
  {
    "API": "backup:DisassociateRecoveryPointFromParent",
    "EventSource": "backup",
    "EventName": "DisassociateRecoveryPointFromParent",
    "Description": "This action to a specific child (nested) recovery point removes the relationship between the specified recovery point and its parent (composite) recovery point"
  },
  {
    "API": "backup:ExportBackupPlanTemplate",
    "EventSource": "backup",
    "EventName": "ExportBackupPlanTemplate",
    "Description": "Returns the backup plan that is specified by the plan ID as a backup template"
  },
  {
    "API": "backup:GeneratePresignedUrl",
    "EventSource": "backup",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "backup:GetBackupPlan",
    "EventSource": "backup",
    "EventName": "GetBackupPlan",
    "Description": "Returns ``BackupPlan`` details for the specified ``BackupPlanId``"
  },
  {
    "API": "backup:GetBackupPlanFromJson",
    "EventSource": "backup",
    "EventName": "GetBackupPlanFromJson",
    "Description": "Returns a valid JSON document specifying a backup plan or an error"
  },
  {
    "API": "backup:GetBackupPlanFromTemplate",
    "EventSource": "backup",
    "EventName": "GetBackupPlanFromTemplate",
    "Description": "Returns the template specified by its ``templateId`` as a backup plan"
  },
  {
    "API": "backup:GetBackupSelection",
    "EventSource": "backup",
    "EventName": "GetBackupSelection",
    "Description": "Returns selection metadata and a document in JSON format that specifies a list of resources that are associated with a backup plan"
  },
  {
    "API": "backup:GetBackupVaultAccessPolicy",
    "EventSource": "backup",
    "EventName": "GetBackupVaultAccessPolicy",
    "Description": "Returns the access policy document that is associated with the named backup vault"
  },
  {
    "API": "backup:GetBackupVaultNotifications",
    "EventSource": "backup",
    "EventName": "GetBackupVaultNotifications",
    "Description": "Returns event notifications for the specified backup vault"
  },
  {
    "API": "backup:GetLegalHold",
    "EventSource": "backup",
    "EventName": "GetLegalHold",
    "Description": "This action returns details for a specified legal hold"
  },
  {
    "API": "backup:GetRecoveryPointRestoreMetadata",
    "EventSource": "backup",
    "EventName": "GetRecoveryPointRestoreMetadata",
    "Description": "Returns a set of metadata key-value pairs that were used to create the backup"
  },
  {
    "API": "backup:GetRestoreJobMetadata",
    "EventSource": "backup",
    "EventName": "GetRestoreJobMetadata",
    "Description": "This request returns the metadata for the specified restore job"
  },
  {
    "API": "backup:GetRestoreTestingInferredMetadata",
    "EventSource": "backup",
    "EventName": "GetRestoreTestingInferredMetadata",
    "Description": "This request returns the minimal required set of metadata needed to start a restore job with secure default settings"
  },
  {
    "API": "backup:GetRestoreTestingPlan",
    "EventSource": "backup",
    "EventName": "GetRestoreTestingPlan",
    "Description": "Returns ``RestoreTestingPlan`` details for the specified ``RestoreTestingPlanName``"
  },
  {
    "API": "backup:GetRestoreTestingSelection",
    "EventSource": "backup",
    "EventName": "GetRestoreTestingSelection",
    "Description": "Returns RestoreTestingSelection, which displays resources and elements of the restore testing plan"
  },
  {
    "API": "backup:GetSupportedResourceTypes",
    "EventSource": "backup",
    "EventName": "GetSupportedResourceTypes",
    "Description": "Returns the Amazon Web Services resource types supported by Backup"
  },
  {
    "API": "backup:ListBackupJobSummaries",
    "EventSource": "backup",
    "EventName": "ListBackupJobSummaries",
    "Description": "This is a request for a summary of backup jobs created or running within the most recent 30 days"
  },
  {
    "API": "backup:ListBackupJobs",
    "EventSource": "backup",
    "EventName": "ListBackupJobs",
    "Description": "Returns a list of existing backup jobs for an authenticated account for the last 30 days"
  },
  {
    "API": "backup:ListBackupPlanTemplates",
    "EventSource": "backup",
    "EventName": "ListBackupPlanTemplates",
    "Description": "Returns metadata of your saved backup plan templates, including the template ID, name, and the creation and deletion dates"
  },
  {
    "API": "backup:ListBackupPlanVersions",
    "EventSource": "backup",
    "EventName": "ListBackupPlanVersions",
    "Description": "Returns version metadata of your backup plans, including Amazon Resource Names (ARNs), backup plan IDs, creation and deletion dates, plan names, and version IDs"
  },
  {
    "API": "backup:ListBackupPlans",
    "EventSource": "backup",
    "EventName": "ListBackupPlans",
    "Description": "Returns a list of all active backup plans for an authenticated account"
  },
  {
    "API": "backup:ListBackupSelections",
    "EventSource": "backup",
    "EventName": "ListBackupSelections",
    "Description": "Returns an array containing metadata of the resources associated with the target backup plan"
  },
  {
    "API": "backup:ListBackupVaults",
    "EventSource": "backup",
    "EventName": "ListBackupVaults",
    "Description": "Returns a list of recovery point storage containers along with information about them"
  },
  {
    "API": "backup:ListCopyJobSummaries",
    "EventSource": "backup",
    "EventName": "ListCopyJobSummaries",
    "Description": "This request obtains a list of copy jobs created or running within the the most recent 30 days"
  },
  {
    "API": "backup:ListCopyJobs",
    "EventSource": "backup",
    "EventName": "ListCopyJobs",
    "Description": "Returns metadata about your copy jobs"
  },
  {
    "API": "backup:ListFrameworks",
    "EventSource": "backup",
    "EventName": "ListFrameworks",
    "Description": "Returns a list of all frameworks for an Amazon Web Services account and Amazon Web Services Region"
  },
  {
    "API": "backup:ListLegalHolds",
    "EventSource": "backup",
    "EventName": "ListLegalHolds",
    "Description": "This action returns metadata about active and previous legal holds"
  },
  {
    "API": "backup:ListProtectedResources",
    "EventSource": "backup",
    "EventName": "ListProtectedResources",
    "Description": "Returns an array of resources successfully backed up by Backup, including the time the resource was saved, an Amazon Resource Name (ARN) of the resource, and a resource type"
  },
  {
    "API": "backup:ListProtectedResourcesByBackupVault",
    "EventSource": "backup",
    "EventName": "ListProtectedResourcesByBackupVault",
    "Description": "This request lists the protected resources corresponding to each backup vault"
  },
  {
    "API": "backup:ListRecoveryPointsByBackupVault",
    "EventSource": "backup",
    "EventName": "ListRecoveryPointsByBackupVault",
    "Description": "Returns detailed information about the recovery points stored in a backup vault"
  },
  {
    "API": "backup:ListRecoveryPointsByLegalHold",
    "EventSource": "backup",
    "EventName": "ListRecoveryPointsByLegalHold",
    "Description": "This action returns recovery point ARNs (Amazon Resource Names) of the specified legal hold"
  },
  {
    "API": "backup:ListRecoveryPointsByResource",
    "EventSource": "backup",
    "EventName": "ListRecoveryPointsByResource",
    "Description": "Returns detailed information about all the recovery points of the type specified by a resource Amazon Resource Name (ARN)"
  },
  {
    "API": "backup:ListReportJobs",
    "EventSource": "backup",
    "EventName": "ListReportJobs",
    "Description": "Returns details about your report jobs"
  },
  {
    "API": "backup:ListReportPlans",
    "EventSource": "backup",
    "EventName": "ListReportPlans",
    "Description": "Returns a list of your report plans"
  },
  {
    "API": "backup:ListRestoreJobSummaries",
    "EventSource": "backup",
    "EventName": "ListRestoreJobSummaries",
    "Description": "This request obtains a summary of restore jobs created or running within the the most recent 30 days"
  },
  {
    "API": "backup:ListRestoreJobs",
    "EventSource": "backup",
    "EventName": "ListRestoreJobs",
    "Description": "Returns a list of jobs that Backup initiated to restore a saved resource, including details about the recovery process"
  },
  {
    "API": "backup:ListRestoreJobsByProtectedResource",
    "EventSource": "backup",
    "EventName": "ListRestoreJobsByProtectedResource",
    "Description": "This returns restore jobs that contain the specified protected resource"
  },
  {
    "API": "backup:ListRestoreTestingPlans",
    "EventSource": "backup",
    "EventName": "ListRestoreTestingPlans",
    "Description": "Returns a list of restore testing plans"
  },
  {
    "API": "backup:ListRestoreTestingSelections",
    "EventSource": "backup",
    "EventName": "ListRestoreTestingSelections",
    "Description": "Returns a list of restore testing selections"
  },
  {
    "API": "backup:ListTags",
    "EventSource": "backup",
    "EventName": "ListTags",
    "Description": "Returns a list of key-value pairs assigned to a target recovery point, backup plan, or backup vault"
  },
  {
    "API": "backup:PutBackupVaultAccessPolicy",
    "EventSource": "backup",
    "EventName": "PutBackupVaultAccessPolicy",
    "Description": "Sets a resource-based policy that is used to manage access permissions on the target backup vault"
  },
  {
    "API": "backup:PutBackupVaultLockConfiguration",
    "EventSource": "backup",
    "EventName": "PutBackupVaultLockConfiguration",
    "Description": "Applies Backup Vault Lock to a backup vault, preventing attempts to delete any recovery point stored in or created in a backup vault"
  },
  {
    "API": "backup:PutBackupVaultNotifications",
    "EventSource": "backup",
    "EventName": "PutBackupVaultNotifications",
    "Description": "Turns on notifications on a backup vault for the specified topic and events"
  },
  {
    "API": "backup:PutRestoreValidationResult",
    "EventSource": "backup",
    "EventName": "PutRestoreValidationResult",
    "Description": "This request allows you to send your independent self-run restore test validation results"
  },
  {
    "API": "backup:StartBackupJob",
    "EventSource": "backup",
    "EventName": "StartBackupJob",
    "Description": "Starts an on-demand backup job for the specified resource"
  },
  {
    "API": "backup:StartCopyJob",
    "EventSource": "backup",
    "EventName": "StartCopyJob",
    "Description": "Starts a job to create a one-time copy of the specified resource"
  },
  {
    "API": "backup:StartReportJob",
    "EventSource": "backup",
    "EventName": "StartReportJob",
    "Description": "Starts an on-demand report job for the specified report plan"
  },
  {
    "API": "backup:StartRestoreJob",
    "EventSource": "backup",
    "EventName": "StartRestoreJob",
    "Description": "Recovers the saved resource identified by an Amazon Resource Name (ARN)"
  },
  {
    "API": "backup:StopBackupJob",
    "EventSource": "backup",
    "EventName": "StopBackupJob",
    "Description": "Attempts to cancel a job to create a one-time backup of a resource"
  },
  {
    "API": "backup:TagResource",
    "EventSource": "backup",
    "EventName": "TagResource",
    "Description": "Assigns a set of key-value pairs to a recovery point, backup plan, or backup vault identified by an Amazon Resource Name (ARN)"
  },
  {
    "API": "backup:UntagResource",
    "EventSource": "backup",
    "EventName": "UntagResource",
    "Description": "Removes a set of key-value pairs from a recovery point, backup plan, or backup vault identified by an Amazon Resource Name (ARN)"
  },
  {
    "API": "backup:UpdateBackupPlan",
    "EventSource": "backup",
    "EventName": "UpdateBackupPlan",
    "Description": "Updates an existing backup plan identified by its ``backupPlanId`` with the input document in JSON format"
  },
  {
    "API": "backup:UpdateFramework",
    "EventSource": "backup",
    "EventName": "UpdateFramework",
    "Description": "Updates an existing framework identified by its ``FrameworkName`` with the input document in JSON format"
  },
  {
    "API": "backup:UpdateGlobalSettings",
    "EventSource": "backup",
    "EventName": "UpdateGlobalSettings",
    "Description": "Updates whether the Amazon Web Services account is opted in to cross-account backup"
  },
  {
    "API": "backup:UpdateRecoveryPointLifecycle",
    "EventSource": "backup",
    "EventName": "UpdateRecoveryPointLifecycle",
    "Description": "Sets the transition lifecycle of a recovery point"
  },
  {
    "API": "backup:UpdateRegionSettings",
    "EventSource": "backup",
    "EventName": "UpdateRegionSettings",
    "Description": "Updates the current service opt-in settings for the Region"
  },
  {
    "API": "backup:UpdateReportPlan",
    "EventSource": "backup",
    "EventName": "UpdateReportPlan",
    "Description": "Updates an existing report plan identified by its ``ReportPlanName`` with the input document in JSON format"
  },
  {
    "API": "backup:UpdateRestoreTestingPlan",
    "EventSource": "backup",
    "EventName": "UpdateRestoreTestingPlan",
    "Description": "This request will send changes to your specified restore testing plan"
  },
  {
    "API": "backup:UpdateRestoreTestingSelection",
    "EventSource": "backup",
    "EventName": "UpdateRestoreTestingSelection",
    "Description": "Most elements except the ``RestoreTestingSelectionName`` can be updated with this request"
  },
  {
    "API": "backup-gateway:AssociateGatewayToServer",
    "EventSource": "backup-gateway",
    "EventName": "AssociateGatewayToServer",
    "Description": "Associates a backup gateway with your server"
  },
  {
    "API": "backup-gateway:CreateGateway",
    "EventSource": "backup-gateway",
    "EventName": "CreateGateway",
    "Description": "Creates a backup gateway"
  },
  {
    "API": "backup-gateway:DeleteGateway",
    "EventSource": "backup-gateway",
    "EventName": "DeleteGateway",
    "Description": "Deletes a backup gateway"
  },
  {
    "API": "backup-gateway:DeleteHypervisor",
    "EventSource": "backup-gateway",
    "EventName": "DeleteHypervisor",
    "Description": "Deletes a hypervisor"
  },
  {
    "API": "backup-gateway:DisassociateGatewayFromServer",
    "EventSource": "backup-gateway",
    "EventName": "DisassociateGatewayFromServer",
    "Description": "Disassociates a backup gateway from the specified server"
  },
  {
    "API": "backup-gateway:GeneratePresignedUrl",
    "EventSource": "backup-gateway",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "backup-gateway:GetBandwidthRateLimitSchedule",
    "EventSource": "backup-gateway",
    "EventName": "GetBandwidthRateLimitSchedule",
    "Description": "Retrieves the bandwidth rate limit schedule for a specified gateway"
  },
  {
    "API": "backup-gateway:GetGateway",
    "EventSource": "backup-gateway",
    "EventName": "GetGateway",
    "Description": "By providing the ARN (Amazon Resource Name), this API returns the gateway"
  },
  {
    "API": "backup-gateway:GetHypervisor",
    "EventSource": "backup-gateway",
    "EventName": "GetHypervisor",
    "Description": "This action requests information about the specified hypervisor to which the gateway will connect"
  },
  {
    "API": "backup-gateway:GetHypervisorPropertyMappings",
    "EventSource": "backup-gateway",
    "EventName": "GetHypervisorPropertyMappings",
    "Description": "This action retrieves the property mappings for the specified hypervisor"
  },
  {
    "API": "backup-gateway:GetVirtualMachine",
    "EventSource": "backup-gateway",
    "EventName": "GetVirtualMachine",
    "Description": "By providing the ARN (Amazon Resource Name), this API returns the virtual machine"
  },
  {
    "API": "backup-gateway:ImportHypervisorConfiguration",
    "EventSource": "backup-gateway",
    "EventName": "ImportHypervisorConfiguration",
    "Description": "Connect to a hypervisor by importing its configuration"
  },
  {
    "API": "backup-gateway:ListGateways",
    "EventSource": "backup-gateway",
    "EventName": "ListGateways",
    "Description": "Lists backup gateways owned by an Amazon Web Services account in an Amazon Web Services Region"
  },
  {
    "API": "backup-gateway:ListHypervisors",
    "EventSource": "backup-gateway",
    "EventName": "ListHypervisors",
    "Description": "Lists your hypervisors"
  },
  {
    "API": "backup-gateway:ListTagsForResource",
    "EventSource": "backup-gateway",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags applied to the resource identified by its Amazon Resource Name (ARN)"
  },
  {
    "API": "backup-gateway:ListVirtualMachines",
    "EventSource": "backup-gateway",
    "EventName": "ListVirtualMachines",
    "Description": "Lists your virtual machines"
  },
  {
    "API": "backup-gateway:PutBandwidthRateLimitSchedule",
    "EventSource": "backup-gateway",
    "EventName": "PutBandwidthRateLimitSchedule",
    "Description": "This action sets the bandwidth rate limit schedule for a specified gateway"
  },
  {
    "API": "backup-gateway:PutHypervisorPropertyMappings",
    "EventSource": "backup-gateway",
    "EventName": "PutHypervisorPropertyMappings",
    "Description": "This action sets the property mappings for the specified hypervisor"
  },
  {
    "API": "backup-gateway:PutMaintenanceStartTime",
    "EventSource": "backup-gateway",
    "EventName": "PutMaintenanceStartTime",
    "Description": "Set the maintenance start time for a gateway"
  },
  {
    "API": "backup-gateway:StartVirtualMachinesMetadataSync",
    "EventSource": "backup-gateway",
    "EventName": "StartVirtualMachinesMetadataSync",
    "Description": "This action sends a request to sync metadata across the specified virtual machines"
  },
  {
    "API": "backup-gateway:TagResource",
    "EventSource": "backup-gateway",
    "EventName": "TagResource",
    "Description": "Tag the resource"
  },
  {
    "API": "backup-gateway:TestHypervisorConfiguration",
    "EventSource": "backup-gateway",
    "EventName": "TestHypervisorConfiguration",
    "Description": "Tests your hypervisor configuration to validate that backup gateway can connect with the hypervisor and its resources"
  },
  {
    "API": "backup-gateway:UntagResource",
    "EventSource": "backup-gateway",
    "EventName": "UntagResource",
    "Description": "Removes tags from the resource"
  },
  {
    "API": "backup-gateway:UpdateGatewayInformation",
    "EventSource": "backup-gateway",
    "EventName": "UpdateGatewayInformation",
    "Description": "Updates a gateway's name"
  },
  {
    "API": "backup-gateway:UpdateGatewaySoftwareNow",
    "EventSource": "backup-gateway",
    "EventName": "UpdateGatewaySoftwareNow",
    "Description": "Updates the gateway virtual machine (VM) software"
  },
  {
    "API": "backup-gateway:UpdateHypervisor",
    "EventSource": "backup-gateway",
    "EventName": "UpdateHypervisor",
    "Description": "Updates a hypervisor metadata, including its host, username, and password"
  },
  {
    "API": "batch:CancelJob",
    "EventSource": "batch",
    "EventName": "CancelJob",
    "Description": "Cancels a job in an Batch job queue"
  },
  {
    "API": "batch:CreateComputeEnvironment",
    "EventSource": "batch",
    "EventName": "CreateComputeEnvironment",
    "Description": "Creates an Batch compute environment"
  },
  {
    "API": "batch:CreateJobQueue",
    "EventSource": "batch",
    "EventName": "CreateJobQueue",
    "Description": "Creates an Batch job queue"
  },
  {
    "API": "batch:CreateSchedulingPolicy",
    "EventSource": "batch",
    "EventName": "CreateSchedulingPolicy",
    "Description": "Creates an Batch scheduling policy"
  },
  {
    "API": "batch:DeleteComputeEnvironment",
    "EventSource": "batch",
    "EventName": "DeleteComputeEnvironment",
    "Description": "Deletes an Batch compute environment"
  },
  {
    "API": "batch:DeleteJobQueue",
    "EventSource": "batch",
    "EventName": "DeleteJobQueue",
    "Description": "Deletes the specified job queue"
  },
  {
    "API": "batch:DeleteSchedulingPolicy",
    "EventSource": "batch",
    "EventName": "DeleteSchedulingPolicy",
    "Description": "Deletes the specified scheduling policy"
  },
  {
    "API": "batch:DeregisterJobDefinition",
    "EventSource": "batch",
    "EventName": "DeregisterJobDefinition",
    "Description": "Deregisters an Batch job definition"
  },
  {
    "API": "batch:DescribeComputeEnvironments",
    "EventSource": "batch",
    "EventName": "DescribeComputeEnvironments",
    "Description": "Describes one or more of your compute environments"
  },
  {
    "API": "batch:DescribeJobDefinitions",
    "EventSource": "batch",
    "EventName": "DescribeJobDefinitions",
    "Description": "Describes a list of job definitions"
  },
  {
    "API": "batch:DescribeJobQueues",
    "EventSource": "batch",
    "EventName": "DescribeJobQueues",
    "Description": "Describes one or more of your job queues"
  },
  {
    "API": "batch:DescribeJobs",
    "EventSource": "batch",
    "EventName": "DescribeJobs",
    "Description": "Describes a list of Batch jobs"
  },
  {
    "API": "batch:DescribeSchedulingPolicies",
    "EventSource": "batch",
    "EventName": "DescribeSchedulingPolicies",
    "Description": "Describes one or more of your scheduling policies"
  },
  {
    "API": "batch:GeneratePresignedUrl",
    "EventSource": "batch",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "batch:GetJobQueueSnapshot",
    "EventSource": "batch",
    "EventName": "GetJobQueueSnapshot",
    "Description": "Provides a list of the first 100 ``RUNNABLE`` jobs associated to a single job queue"
  },
  {
    "API": "batch:ListJobs",
    "EventSource": "batch",
    "EventName": "ListJobs",
    "Description": "Returns a list of Batch jobs"
  },
  {
    "API": "batch:ListSchedulingPolicies",
    "EventSource": "batch",
    "EventName": "ListSchedulingPolicies",
    "Description": "Returns a list of Batch scheduling policies"
  },
  {
    "API": "batch:ListTagsForResource",
    "EventSource": "batch",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags for an Batch resource"
  },
  {
    "API": "batch:RegisterJobDefinition",
    "EventSource": "batch",
    "EventName": "RegisterJobDefinition",
    "Description": "Registers an Batch job definition"
  },
  {
    "API": "batch:SubmitJob",
    "EventSource": "batch",
    "EventName": "SubmitJob",
    "Description": "Submits an Batch job from a job definition"
  },
  {
    "API": "batch:TagResource",
    "EventSource": "batch",
    "EventName": "TagResource",
    "Description": "Associates the specified tags to a resource with the specified ``resourceArn``"
  },
  {
    "API": "batch:TerminateJob",
    "EventSource": "batch",
    "EventName": "TerminateJob",
    "Description": "Terminates a job in a job queue"
  },
  {
    "API": "batch:UntagResource",
    "EventSource": "batch",
    "EventName": "UntagResource",
    "Description": "Deletes specified tags from an Batch resource"
  },
  {
    "API": "batch:UpdateComputeEnvironment",
    "EventSource": "batch",
    "EventName": "UpdateComputeEnvironment",
    "Description": "Updates an Batch compute environment"
  },
  {
    "API": "batch:UpdateJobQueue",
    "EventSource": "batch",
    "EventName": "UpdateJobQueue",
    "Description": "Updates a job queue"
  },
  {
    "API": "batch:UpdateSchedulingPolicy",
    "EventSource": "batch",
    "EventName": "UpdateSchedulingPolicy",
    "Description": "Updates a scheduling policy"
  },
  {
    "API": "bcm-data-exports:CreateExport",
    "EventSource": "bcm-data-exports",
    "EventName": "CreateExport",
    "Description": "Creates a data export and specifies the data query, the delivery preference, and any optional resource tags"
  },
  {
    "API": "bcm-data-exports:DeleteExport",
    "EventSource": "bcm-data-exports",
    "EventName": "DeleteExport",
    "Description": "Deletes an existing data export"
  },
  {
    "API": "bcm-data-exports:GeneratePresignedUrl",
    "EventSource": "bcm-data-exports",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "bcm-data-exports:GetExecution",
    "EventSource": "bcm-data-exports",
    "EventName": "GetExecution",
    "Description": "Exports data based on the source data update"
  },
  {
    "API": "bcm-data-exports:GetExport",
    "EventSource": "bcm-data-exports",
    "EventName": "GetExport",
    "Description": "Views the definition of an existing data export"
  },
  {
    "API": "bcm-data-exports:GetTable",
    "EventSource": "bcm-data-exports",
    "EventName": "GetTable",
    "Description": "Returns the metadata for the specified table and table properties"
  },
  {
    "API": "bcm-data-exports:ListExecutions",
    "EventSource": "bcm-data-exports",
    "EventName": "ListExecutions",
    "Description": "Lists the historical executions for the export"
  },
  {
    "API": "bcm-data-exports:ListExports",
    "EventSource": "bcm-data-exports",
    "EventName": "ListExports",
    "Description": "Lists all data export definitions"
  },
  {
    "API": "bcm-data-exports:ListTables",
    "EventSource": "bcm-data-exports",
    "EventName": "ListTables",
    "Description": "Lists all available tables in data exports"
  },
  {
    "API": "bcm-data-exports:ListTagsForResource",
    "EventSource": "bcm-data-exports",
    "EventName": "ListTagsForResource",
    "Description": "List tags associated with an existing data export"
  },
  {
    "API": "bcm-data-exports:TagResource",
    "EventSource": "bcm-data-exports",
    "EventName": "TagResource",
    "Description": "Adds tags for an existing data export definition"
  },
  {
    "API": "bcm-data-exports:UntagResource",
    "EventSource": "bcm-data-exports",
    "EventName": "UntagResource",
    "Description": "Deletes tags associated with an existing data export definition"
  },
  {
    "API": "bcm-data-exports:UpdateExport",
    "EventSource": "bcm-data-exports",
    "EventName": "UpdateExport",
    "Description": "Updates an existing data export by overwriting all export parameters"
  },
  {
    "API": "bedrock:CreateEvaluationJob",
    "EventSource": "bedrock",
    "EventName": "CreateEvaluationJob",
    "Description": "API operation for creating and managing Amazon Bedrock automatic model evaluation jobs and model evaluation jobs that use human workers"
  },
  {
    "API": "bedrock:CreateGuardrail",
    "EventSource": "bedrock",
    "EventName": "CreateGuardrail",
    "Description": "Creates a guardrail to block topics and to filter out harmful content"
  },
  {
    "API": "bedrock:CreateGuardrailVersion",
    "EventSource": "bedrock",
    "EventName": "CreateGuardrailVersion",
    "Description": "Creates a version of the guardrail"
  },
  {
    "API": "bedrock:CreateModelCustomizationJob",
    "EventSource": "bedrock",
    "EventName": "CreateModelCustomizationJob",
    "Description": "Creates a fine-tuning job to customize a base model"
  },
  {
    "API": "bedrock:CreateProvisionedModelThroughput",
    "EventSource": "bedrock",
    "EventName": "CreateProvisionedModelThroughput",
    "Description": "Creates dedicated throughput for a base or custom model with the model units and for the duration that you specify"
  },
  {
    "API": "bedrock:DeleteCustomModel",
    "EventSource": "bedrock",
    "EventName": "DeleteCustomModel",
    "Description": "Deletes a custom model that you created earlier"
  },
  {
    "API": "bedrock:DeleteGuardrail",
    "EventSource": "bedrock",
    "EventName": "DeleteGuardrail",
    "Description": "Deletes a guardrail"
  },
  {
    "API": "bedrock:DeleteModelInvocationLoggingConfiguration",
    "EventSource": "bedrock",
    "EventName": "DeleteModelInvocationLoggingConfiguration",
    "Description": "Delete the invocation logging"
  },
  {
    "API": "bedrock:DeleteProvisionedModelThroughput",
    "EventSource": "bedrock",
    "EventName": "DeleteProvisionedModelThroughput",
    "Description": "Deletes a Provisioned Throughput"
  },
  {
    "API": "bedrock:GeneratePresignedUrl",
    "EventSource": "bedrock",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "bedrock:GetCustomModel",
    "EventSource": "bedrock",
    "EventName": "GetCustomModel",
    "Description": "Get the properties associated with a Amazon Bedrock custom model that you have created"
  },
  {
    "API": "bedrock:GetEvaluationJob",
    "EventSource": "bedrock",
    "EventName": "GetEvaluationJob",
    "Description": "Retrieves the properties associated with a model evaluation job, including the status of the job"
  },
  {
    "API": "bedrock:GetFoundationModel",
    "EventSource": "bedrock",
    "EventName": "GetFoundationModel",
    "Description": "Get details about a Amazon Bedrock foundation model"
  },
  {
    "API": "bedrock:GetGuardrail",
    "EventSource": "bedrock",
    "EventName": "GetGuardrail",
    "Description": "Gets details about a guardrail"
  },
  {
    "API": "bedrock:GetModelCustomizationJob",
    "EventSource": "bedrock",
    "EventName": "GetModelCustomizationJob",
    "Description": "Retrieves the properties associated with a model-customization job, including the status of the job"
  },
  {
    "API": "bedrock:GetModelInvocationLoggingConfiguration",
    "EventSource": "bedrock",
    "EventName": "GetModelInvocationLoggingConfiguration",
    "Description": "Get the current configuration values for model invocation logging"
  },
  {
    "API": "bedrock:GetProvisionedModelThroughput",
    "EventSource": "bedrock",
    "EventName": "GetProvisionedModelThroughput",
    "Description": "Returns details for a Provisioned Throughput"
  },
  {
    "API": "bedrock:ListCustomModels",
    "EventSource": "bedrock",
    "EventName": "ListCustomModels",
    "Description": "Returns a list of the custom models that you have created with the ``CreateModelCustomizationJob`` operation"
  },
  {
    "API": "bedrock:ListEvaluationJobs",
    "EventSource": "bedrock",
    "EventName": "ListEvaluationJobs",
    "Description": "Lists model evaluation jobs"
  },
  {
    "API": "bedrock:ListFoundationModels",
    "EventSource": "bedrock",
    "EventName": "ListFoundationModels",
    "Description": "Lists Amazon Bedrock foundation models that you can use"
  },
  {
    "API": "bedrock:ListGuardrails",
    "EventSource": "bedrock",
    "EventName": "ListGuardrails",
    "Description": "Lists details about all the guardrails in an account"
  },
  {
    "API": "bedrock:ListModelCustomizationJobs",
    "EventSource": "bedrock",
    "EventName": "ListModelCustomizationJobs",
    "Description": "Returns a list of model customization jobs that you have submitted"
  },
  {
    "API": "bedrock:ListProvisionedModelThroughputs",
    "EventSource": "bedrock",
    "EventName": "ListProvisionedModelThroughputs",
    "Description": "Lists the Provisioned Throughputs in the account"
  },
  {
    "API": "bedrock:ListTagsForResource",
    "EventSource": "bedrock",
    "EventName": "ListTagsForResource",
    "Description": "List the tags associated with the specified resource"
  },
  {
    "API": "bedrock:PutModelInvocationLoggingConfiguration",
    "EventSource": "bedrock",
    "EventName": "PutModelInvocationLoggingConfiguration",
    "Description": "Set the configuration values for model invocation logging"
  },
  {
    "API": "bedrock:StopEvaluationJob",
    "EventSource": "bedrock",
    "EventName": "StopEvaluationJob",
    "Description": "Stops an in progress model evaluation job"
  },
  {
    "API": "bedrock:StopModelCustomizationJob",
    "EventSource": "bedrock",
    "EventName": "StopModelCustomizationJob",
    "Description": "Stops an active model customization job"
  },
  {
    "API": "bedrock:TagResource",
    "EventSource": "bedrock",
    "EventName": "TagResource",
    "Description": "Associate tags with a resource"
  },
  {
    "API": "bedrock:UntagResource",
    "EventSource": "bedrock",
    "EventName": "UntagResource",
    "Description": "Remove one or more tags from a resource"
  },
  {
    "API": "bedrock:UpdateGuardrail",
    "EventSource": "bedrock",
    "EventName": "UpdateGuardrail",
    "Description": "Updates a guardrail with the values you specify"
  },
  {
    "API": "bedrock:UpdateProvisionedModelThroughput",
    "EventSource": "bedrock",
    "EventName": "UpdateProvisionedModelThroughput",
    "Description": "Updates the name or associated model for a Provisioned Throughput"
  },
  {
    "API": "bedrock-agent:AssociateAgentKnowledgeBase",
    "EventSource": "bedrock-agent",
    "EventName": "AssociateAgentKnowledgeBase",
    "Description": "Associates a knowledge base with an agent"
  },
  {
    "API": "bedrock-agent:CreateAgent",
    "EventSource": "bedrock-agent",
    "EventName": "CreateAgent",
    "Description": "Creates an agent that orchestrates interactions between foundation models, data sources, software applications, user conversations, and APIs to carry out tasks to help customers"
  },
  {
    "API": "bedrock-agent:CreateAgentActionGroup",
    "EventSource": "bedrock-agent",
    "EventName": "CreateAgentActionGroup",
    "Description": "Creates an action group for an agent"
  },
  {
    "API": "bedrock-agent:CreateAgentAlias",
    "EventSource": "bedrock-agent",
    "EventName": "CreateAgentAlias",
    "Description": "Creates an alias of an agent that can be used to deploy the agent"
  },
  {
    "API": "bedrock-agent:CreateDataSource",
    "EventSource": "bedrock-agent",
    "EventName": "CreateDataSource",
    "Description": "Sets up a data source to be added to a knowledge base"
  },
  {
    "API": "bedrock-agent:CreateKnowledgeBase",
    "EventSource": "bedrock-agent",
    "EventName": "CreateKnowledgeBase",
    "Description": "Creates a knowledge base that contains data sources from which information can be queried and used by LLMs"
  },
  {
    "API": "bedrock-agent:DeleteAgent",
    "EventSource": "bedrock-agent",
    "EventName": "DeleteAgent",
    "Description": "Deletes an agent"
  },
  {
    "API": "bedrock-agent:DeleteAgentActionGroup",
    "EventSource": "bedrock-agent",
    "EventName": "DeleteAgentActionGroup",
    "Description": "Deletes an action group in an agent"
  },
  {
    "API": "bedrock-agent:DeleteAgentAlias",
    "EventSource": "bedrock-agent",
    "EventName": "DeleteAgentAlias",
    "Description": "Deletes an alias of an agent"
  },
  {
    "API": "bedrock-agent:DeleteAgentVersion",
    "EventSource": "bedrock-agent",
    "EventName": "DeleteAgentVersion",
    "Description": "Deletes a version of an agent"
  },
  {
    "API": "bedrock-agent:DeleteDataSource",
    "EventSource": "bedrock-agent",
    "EventName": "DeleteDataSource",
    "Description": "Deletes a data source from a knowledge base"
  },
  {
    "API": "bedrock-agent:DeleteKnowledgeBase",
    "EventSource": "bedrock-agent",
    "EventName": "DeleteKnowledgeBase",
    "Description": "Deletes a knowledge base"
  },
  {
    "API": "bedrock-agent:DisassociateAgentKnowledgeBase",
    "EventSource": "bedrock-agent",
    "EventName": "DisassociateAgentKnowledgeBase",
    "Description": "Disassociates a knowledge base from an agent"
  },
  {
    "API": "bedrock-agent:GeneratePresignedUrl",
    "EventSource": "bedrock-agent",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "bedrock-agent:GetAgent",
    "EventSource": "bedrock-agent",
    "EventName": "GetAgent",
    "Description": "Gets information about an agent"
  },
  {
    "API": "bedrock-agent:GetAgentActionGroup",
    "EventSource": "bedrock-agent",
    "EventName": "GetAgentActionGroup",
    "Description": "Gets information about an action group for an agent"
  },
  {
    "API": "bedrock-agent:GetAgentAlias",
    "EventSource": "bedrock-agent",
    "EventName": "GetAgentAlias",
    "Description": "Gets information about an alias of an agent"
  },
  {
    "API": "bedrock-agent:GetAgentKnowledgeBase",
    "EventSource": "bedrock-agent",
    "EventName": "GetAgentKnowledgeBase",
    "Description": "Gets information about a knowledge base associated with an agent"
  },
  {
    "API": "bedrock-agent:GetAgentVersion",
    "EventSource": "bedrock-agent",
    "EventName": "GetAgentVersion",
    "Description": "Gets details about a version of an agent"
  },
  {
    "API": "bedrock-agent:GetDataSource",
    "EventSource": "bedrock-agent",
    "EventName": "GetDataSource",
    "Description": "Gets information about a data source"
  },
  {
    "API": "bedrock-agent:GetIngestionJob",
    "EventSource": "bedrock-agent",
    "EventName": "GetIngestionJob",
    "Description": "Gets information about a ingestion job, in which a data source is added to a knowledge base"
  },
  {
    "API": "bedrock-agent:GetKnowledgeBase",
    "EventSource": "bedrock-agent",
    "EventName": "GetKnowledgeBase",
    "Description": "Gets information about a knoweldge base"
  },
  {
    "API": "bedrock-agent:ListAgentActionGroups",
    "EventSource": "bedrock-agent",
    "EventName": "ListAgentActionGroups",
    "Description": "Lists the action groups for an agent and information about each one"
  },
  {
    "API": "bedrock-agent:ListAgentAliases",
    "EventSource": "bedrock-agent",
    "EventName": "ListAgentAliases",
    "Description": "Lists the aliases of an agent and information about each one"
  },
  {
    "API": "bedrock-agent:ListAgentKnowledgeBases",
    "EventSource": "bedrock-agent",
    "EventName": "ListAgentKnowledgeBases",
    "Description": "Lists knowledge bases associated with an agent and information about each one"
  },
  {
    "API": "bedrock-agent:ListAgentVersions",
    "EventSource": "bedrock-agent",
    "EventName": "ListAgentVersions",
    "Description": "Lists the versions of an agent and information about each version"
  },
  {
    "API": "bedrock-agent:ListAgents",
    "EventSource": "bedrock-agent",
    "EventName": "ListAgents",
    "Description": "Lists the agents belonging to an account and information about each agent"
  },
  {
    "API": "bedrock-agent:ListDataSources",
    "EventSource": "bedrock-agent",
    "EventName": "ListDataSources",
    "Description": "Lists the data sources in a knowledge base and information about each one"
  },
  {
    "API": "bedrock-agent:ListIngestionJobs",
    "EventSource": "bedrock-agent",
    "EventName": "ListIngestionJobs",
    "Description": "Lists the ingestion jobs for a data source and information about each of them"
  },
  {
    "API": "bedrock-agent:ListKnowledgeBases",
    "EventSource": "bedrock-agent",
    "EventName": "ListKnowledgeBases",
    "Description": "Lists the knowledge bases in an account and information about each of them"
  },
  {
    "API": "bedrock-agent:ListTagsForResource",
    "EventSource": "bedrock-agent",
    "EventName": "ListTagsForResource",
    "Description": "List all the tags for the resource you specify"
  },
  {
    "API": "bedrock-agent:PrepareAgent",
    "EventSource": "bedrock-agent",
    "EventName": "PrepareAgent",
    "Description": "Creates a ``DRAFT`` version of the agent that can be used for internal testing"
  },
  {
    "API": "bedrock-agent:StartIngestionJob",
    "EventSource": "bedrock-agent",
    "EventName": "StartIngestionJob",
    "Description": "Begins an ingestion job, in which a data source is added to a knowledge base"
  },
  {
    "API": "bedrock-agent:TagResource",
    "EventSource": "bedrock-agent",
    "EventName": "TagResource",
    "Description": "Associate tags with a resource"
  },
  {
    "API": "bedrock-agent:UntagResource",
    "EventSource": "bedrock-agent",
    "EventName": "UntagResource",
    "Description": "Remove tags from a resource"
  },
  {
    "API": "bedrock-agent:UpdateAgent",
    "EventSource": "bedrock-agent",
    "EventName": "UpdateAgent",
    "Description": "Updates the configuration of an agent"
  },
  {
    "API": "bedrock-agent:UpdateAgentActionGroup",
    "EventSource": "bedrock-agent",
    "EventName": "UpdateAgentActionGroup",
    "Description": "Updates the configuration for an action group for an agent"
  },
  {
    "API": "bedrock-agent:UpdateAgentAlias",
    "EventSource": "bedrock-agent",
    "EventName": "UpdateAgentAlias",
    "Description": "Updates configurations for an alias of an agent"
  },
  {
    "API": "bedrock-agent:UpdateAgentKnowledgeBase",
    "EventSource": "bedrock-agent",
    "EventName": "UpdateAgentKnowledgeBase",
    "Description": "Updates the configuration for a knowledge base that has been associated with an agent"
  },
  {
    "API": "bedrock-agent:UpdateDataSource",
    "EventSource": "bedrock-agent",
    "EventName": "UpdateDataSource",
    "Description": "Updates configurations for a data source"
  },
  {
    "API": "bedrock-agent:UpdateKnowledgeBase",
    "EventSource": "bedrock-agent",
    "EventName": "UpdateKnowledgeBase",
    "Description": "Updates the configuration of a knowledge base with the fields that you specify"
  },
  {
    "API": "bedrock-agent-runtime:GeneratePresignedUrl",
    "EventSource": "bedrock-agent-runtime",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "bedrock-agent-runtime:InvokeAgent",
    "EventSource": "bedrock-agent-runtime",
    "EventName": "InvokeAgent",
    "Description": ""
  },
  {
    "API": "bedrock-agent-runtime:RetrieveAndGenerate",
    "EventSource": "bedrock-agent-runtime",
    "EventName": "RetrieveAndGenerate",
    "Description": "Queries a knowledge base and generates responses based on the retrieved results"
  },
  {
    "API": "bedrock-runtime:ConverseStream",
    "EventSource": "bedrock-runtime",
    "EventName": "ConverseStream",
    "Description": "Sends messages to the specified Amazon Bedrock model and returns the response in a stream"
  },
  {
    "API": "bedrock-runtime:GeneratePresignedUrl",
    "EventSource": "bedrock-runtime",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "bedrock-runtime:InvokeModel",
    "EventSource": "bedrock-runtime",
    "EventName": "InvokeModel",
    "Description": "Invokes the specified Amazon Bedrock model to run inference using the prompt and inference parameters provided in the request body"
  },
  {
    "API": "bedrock-runtime:InvokeModelWithResponseStream",
    "EventSource": "bedrock-runtime",
    "EventName": "InvokeModelWithResponseStream",
    "Description": "Invoke the specified Amazon Bedrock model to run inference using the prompt and inference parameters provided in the request body"
  },
  {
    "API": "billingconductor:AssociateAccounts",
    "EventSource": "billingconductor",
    "EventName": "AssociateAccounts",
    "Description": "Connects an array of account IDs in a consolidated billing family to a predefined billing group"
  },
  {
    "API": "billingconductor:AssociatePricingRules",
    "EventSource": "billingconductor",
    "EventName": "AssociatePricingRules",
    "Description": "Connects an array of ``PricingRuleArns`` to a defined ``PricingPlan``"
  },
  {
    "API": "billingconductor:BatchAssociateResourcesToCustomLineItem",
    "EventSource": "billingconductor",
    "EventName": "BatchAssociateResourcesToCustomLineItem",
    "Description": "Associates a batch of resources to a percentage custom line item"
  },
  {
    "API": "billingconductor:BatchDisassociateResourcesFromCustomLineItem",
    "EventSource": "billingconductor",
    "EventName": "BatchDisassociateResourcesFromCustomLineItem",
    "Description": "Disassociates a batch of resources from a percentage custom line item"
  },
  {
    "API": "billingconductor:CreateBillingGroup",
    "EventSource": "billingconductor",
    "EventName": "CreateBillingGroup",
    "Description": "Creates a billing group that resembles a consolidated billing family that Amazon Web Services charges, based off of the predefined pricing plan computation"
  },
  {
    "API": "billingconductor:CreateCustomLineItem",
    "EventSource": "billingconductor",
    "EventName": "CreateCustomLineItem",
    "Description": "Creates a custom line item that can be used to create a one-time fixed charge that can be applied to a single billing group for the current or previous billing period"
  },
  {
    "API": "billingconductor:CreatePricingPlan",
    "EventSource": "billingconductor",
    "EventName": "CreatePricingPlan",
    "Description": "Creates a pricing plan that is used for computing Amazon Web Services charges for billing groups"
  },
  {
    "API": "billingconductor:CreatePricingRule",
    "EventSource": "billingconductor",
    "EventName": "CreatePricingRule",
    "Description": "Creates a pricing rule can be associated to a pricing plan, or a set of pricing plans"
  },
  {
    "API": "billingconductor:DeleteBillingGroup",
    "EventSource": "billingconductor",
    "EventName": "DeleteBillingGroup",
    "Description": "Deletes a billing group"
  },
  {
    "API": "billingconductor:DeleteCustomLineItem",
    "EventSource": "billingconductor",
    "EventName": "DeleteCustomLineItem",
    "Description": "Deletes the custom line item identified by the given ARN in the current, or previous billing period"
  },
  {
    "API": "billingconductor:DeletePricingPlan",
    "EventSource": "billingconductor",
    "EventName": "DeletePricingPlan",
    "Description": "Deletes a pricing plan"
  },
  {
    "API": "billingconductor:DeletePricingRule",
    "EventSource": "billingconductor",
    "EventName": "DeletePricingRule",
    "Description": "Deletes the pricing rule that's identified by the input Amazon Resource Name (ARN)"
  },
  {
    "API": "billingconductor:DisassociateAccounts",
    "EventSource": "billingconductor",
    "EventName": "DisassociateAccounts",
    "Description": "Removes the specified list of account IDs from the given billing group"
  },
  {
    "API": "billingconductor:DisassociatePricingRules",
    "EventSource": "billingconductor",
    "EventName": "DisassociatePricingRules",
    "Description": "Disassociates a list of pricing rules from a pricing plan"
  },
  {
    "API": "billingconductor:GeneratePresignedUrl",
    "EventSource": "billingconductor",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "billingconductor:GetBillingGroupCostReport",
    "EventSource": "billingconductor",
    "EventName": "GetBillingGroupCostReport",
    "Description": "Retrieves the margin summary report, which includes the Amazon Web Services cost and charged amount (pro forma cost) by Amazon Web Service for a specific billing group"
  },
  {
    "API": "billingconductor:ListAccountAssociations",
    "EventSource": "billingconductor",
    "EventName": "ListAccountAssociations",
    "Description": "This is a paginated call to list linked accounts that are linked to the payer account for the specified time period"
  },
  {
    "API": "billingconductor:ListBillingGroupCostReports",
    "EventSource": "billingconductor",
    "EventName": "ListBillingGroupCostReports",
    "Description": "A paginated call to retrieve a summary report of actual Amazon Web Services charges and the calculated Amazon Web Services charges based on the associated pricing plan of a billing group"
  },
  {
    "API": "billingconductor:ListBillingGroups",
    "EventSource": "billingconductor",
    "EventName": "ListBillingGroups",
    "Description": "A paginated call to retrieve a list of billing groups for the given billing period"
  },
  {
    "API": "billingconductor:ListCustomLineItemVersions",
    "EventSource": "billingconductor",
    "EventName": "ListCustomLineItemVersions",
    "Description": "A paginated call to get a list of all custom line item versions"
  },
  {
    "API": "billingconductor:ListCustomLineItems",
    "EventSource": "billingconductor",
    "EventName": "ListCustomLineItems",
    "Description": "A paginated call to get a list of all custom line items (FFLIs) for the given billing period"
  },
  {
    "API": "billingconductor:ListPricingPlans",
    "EventSource": "billingconductor",
    "EventName": "ListPricingPlans",
    "Description": "A paginated call to get pricing plans for the given billing period"
  },
  {
    "API": "billingconductor:ListPricingPlansAssociatedWithPricingRule",
    "EventSource": "billingconductor",
    "EventName": "ListPricingPlansAssociatedWithPricingRule",
    "Description": "A list of the pricing plans that are associated with a pricing rule"
  },
  {
    "API": "billingconductor:ListPricingRules",
    "EventSource": "billingconductor",
    "EventName": "ListPricingRules",
    "Description": "Describes a pricing rule that can be associated to a pricing plan, or set of pricing plans"
  },
  {
    "API": "billingconductor:ListPricingRulesAssociatedToPricingPlan",
    "EventSource": "billingconductor",
    "EventName": "ListPricingRulesAssociatedToPricingPlan",
    "Description": "Lists the pricing rules that are associated with a pricing plan"
  },
  {
    "API": "billingconductor:ListResourcesAssociatedToCustomLineItem",
    "EventSource": "billingconductor",
    "EventName": "ListResourcesAssociatedToCustomLineItem",
    "Description": "List the resources that are associated to a custom line item"
  },
  {
    "API": "billingconductor:ListTagsForResource",
    "EventSource": "billingconductor",
    "EventName": "ListTagsForResource",
    "Description": "A list the tags for a resource"
  },
  {
    "API": "billingconductor:TagResource",
    "EventSource": "billingconductor",
    "EventName": "TagResource",
    "Description": "Associates the specified tags to a resource with the specified ``resourceArn``"
  },
  {
    "API": "billingconductor:UntagResource",
    "EventSource": "billingconductor",
    "EventName": "UntagResource",
    "Description": "Deletes specified tags from a resource"
  },
  {
    "API": "billingconductor:UpdateBillingGroup",
    "EventSource": "billingconductor",
    "EventName": "UpdateBillingGroup",
    "Description": "This updates an existing billing group"
  },
  {
    "API": "billingconductor:UpdateCustomLineItem",
    "EventSource": "billingconductor",
    "EventName": "UpdateCustomLineItem",
    "Description": "Update an existing custom line item in the current or previous billing period"
  },
  {
    "API": "billingconductor:UpdatePricingPlan",
    "EventSource": "billingconductor",
    "EventName": "UpdatePricingPlan",
    "Description": "This updates an existing pricing plan"
  },
  {
    "API": "billingconductor:UpdatePricingRule",
    "EventSource": "billingconductor",
    "EventName": "UpdatePricingRule",
    "Description": "Updates an existing pricing rule"
  },
  {
    "API": "braket:CancelJob",
    "EventSource": "braket",
    "EventName": "CancelJob",
    "Description": "Cancels an Amazon Braket job"
  },
  {
    "API": "braket:CancelQuantumTask",
    "EventSource": "braket",
    "EventName": "CancelQuantumTask",
    "Description": "Cancels the specified task"
  },
  {
    "API": "braket:CreateJob",
    "EventSource": "braket",
    "EventName": "CreateJob",
    "Description": "Creates an Amazon Braket job"
  },
  {
    "API": "braket:CreateQuantumTask",
    "EventSource": "braket",
    "EventName": "CreateQuantumTask",
    "Description": "Creates a quantum task"
  },
  {
    "API": "braket:GeneratePresignedUrl",
    "EventSource": "braket",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "braket:GetDevice",
    "EventSource": "braket",
    "EventName": "GetDevice",
    "Description": "Retrieves the devices available in Amazon Braket"
  },
  {
    "API": "braket:GetJob",
    "EventSource": "braket",
    "EventName": "GetJob",
    "Description": "Retrieves the specified Amazon Braket job"
  },
  {
    "API": "braket:GetQuantumTask",
    "EventSource": "braket",
    "EventName": "GetQuantumTask",
    "Description": "Retrieves the specified quantum task"
  },
  {
    "API": "braket:ListTagsForResource",
    "EventSource": "braket",
    "EventName": "ListTagsForResource",
    "Description": "Shows the tags associated with this resource"
  },
  {
    "API": "braket:SearchDevices",
    "EventSource": "braket",
    "EventName": "SearchDevices",
    "Description": "Searches for devices using the specified filters"
  },
  {
    "API": "braket:SearchJobs",
    "EventSource": "braket",
    "EventName": "SearchJobs",
    "Description": "Searches for Amazon Braket jobs that match the specified filter values"
  },
  {
    "API": "braket:SearchQuantumTasks",
    "EventSource": "braket",
    "EventName": "SearchQuantumTasks",
    "Description": "Searches for tasks that match the specified filter values"
  },
  {
    "API": "braket:TagResource",
    "EventSource": "braket",
    "EventName": "TagResource",
    "Description": "Add a tag to the specified resource"
  },
  {
    "API": "braket:UntagResource",
    "EventSource": "braket",
    "EventName": "UntagResource",
    "Description": "Remove tags from a resource"
  },
  {
    "API": "budgets:CreateBudget",
    "EventSource": "budgets",
    "EventName": "CreateBudget",
    "Description": "Creates a budget and, if included, notifications and subscribers"
  },
  {
    "API": "budgets:CreateBudgetAction",
    "EventSource": "budgets",
    "EventName": "CreateBudgetAction",
    "Description": "Creates a budget action"
  },
  {
    "API": "budgets:CreateNotification",
    "EventSource": "budgets",
    "EventName": "CreateNotification",
    "Description": "Creates a notification"
  },
  {
    "API": "budgets:CreateSubscriber",
    "EventSource": "budgets",
    "EventName": "CreateSubscriber",
    "Description": "Creates a subscriber"
  },
  {
    "API": "budgets:DeleteBudget",
    "EventSource": "budgets",
    "EventName": "DeleteBudget",
    "Description": "Deletes a budget"
  },
  {
    "API": "budgets:DeleteBudgetAction",
    "EventSource": "budgets",
    "EventName": "DeleteBudgetAction",
    "Description": "Deletes a budget action"
  },
  {
    "API": "budgets:DeleteNotification",
    "EventSource": "budgets",
    "EventName": "DeleteNotification",
    "Description": "Deletes a notification"
  },
  {
    "API": "budgets:DeleteSubscriber",
    "EventSource": "budgets",
    "EventName": "DeleteSubscriber",
    "Description": "Deletes a subscriber"
  },
  {
    "API": "budgets:DescribeBudget",
    "EventSource": "budgets",
    "EventName": "DescribeBudget",
    "Description": "Describes a budget"
  },
  {
    "API": "budgets:DescribeBudgetAction",
    "EventSource": "budgets",
    "EventName": "DescribeBudgetAction",
    "Description": "Describes a budget action detail"
  },
  {
    "API": "budgets:DescribeBudgetActionHistories",
    "EventSource": "budgets",
    "EventName": "DescribeBudgetActionHistories",
    "Description": "Describes a budget action history detail"
  },
  {
    "API": "budgets:DescribeBudgetActionsForAccount",
    "EventSource": "budgets",
    "EventName": "DescribeBudgetActionsForAccount",
    "Description": "Describes all of the budget actions for an account"
  },
  {
    "API": "budgets:DescribeBudgetActionsForBudget",
    "EventSource": "budgets",
    "EventName": "DescribeBudgetActionsForBudget",
    "Description": "Describes all of the budget actions for a budget"
  },
  {
    "API": "budgets:DescribeBudgetNotificationsForAccount",
    "EventSource": "budgets",
    "EventName": "DescribeBudgetNotificationsForAccount",
    "Description": "Lists the budget names and notifications that are associated with an account"
  },
  {
    "API": "budgets:DescribeBudgetPerformanceHistory",
    "EventSource": "budgets",
    "EventName": "DescribeBudgetPerformanceHistory",
    "Description": "Describes the history for ``DAILY``, ``MONTHLY``, and ``QUARTERLY`` budgets"
  },
  {
    "API": "budgets:DescribeBudgets",
    "EventSource": "budgets",
    "EventName": "DescribeBudgets",
    "Description": "Lists the budgets that are associated with an account"
  },
  {
    "API": "budgets:DescribeNotificationsForBudget",
    "EventSource": "budgets",
    "EventName": "DescribeNotificationsForBudget",
    "Description": "Lists the notifications that are associated with a budget"
  },
  {
    "API": "budgets:DescribeSubscribersForNotification",
    "EventSource": "budgets",
    "EventName": "DescribeSubscribersForNotification",
    "Description": "Lists the subscribers that are associated with a notification"
  },
  {
    "API": "budgets:ExecuteBudgetAction",
    "EventSource": "budgets",
    "EventName": "ExecuteBudgetAction",
    "Description": "Executes a budget action"
  },
  {
    "API": "budgets:GeneratePresignedUrl",
    "EventSource": "budgets",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "budgets:ListTagsForResource",
    "EventSource": "budgets",
    "EventName": "ListTagsForResource",
    "Description": "Lists tags associated with a budget or budget action resource"
  },
  {
    "API": "budgets:TagResource",
    "EventSource": "budgets",
    "EventName": "TagResource",
    "Description": "Creates tags for a budget or budget action resource"
  },
  {
    "API": "budgets:UntagResource",
    "EventSource": "budgets",
    "EventName": "UntagResource",
    "Description": "Deletes tags associated with a budget or budget action resource"
  },
  {
    "API": "budgets:UpdateBudget",
    "EventSource": "budgets",
    "EventName": "UpdateBudget",
    "Description": "Updates a budget"
  },
  {
    "API": "budgets:UpdateBudgetAction",
    "EventSource": "budgets",
    "EventName": "UpdateBudgetAction",
    "Description": "Updates a budget action"
  },
  {
    "API": "budgets:UpdateNotification",
    "EventSource": "budgets",
    "EventName": "UpdateNotification",
    "Description": "Updates a notification"
  },
  {
    "API": "budgets:UpdateSubscriber",
    "EventSource": "budgets",
    "EventName": "UpdateSubscriber",
    "Description": "Updates a subscriber"
  },
  {
    "API": "ce:CreateAnomalyMonitor",
    "EventSource": "ce",
    "EventName": "CreateAnomalyMonitor",
    "Description": "Creates a new cost anomaly detection monitor with the requested type and monitor specification"
  },
  {
    "API": "ce:CreateAnomalySubscription",
    "EventSource": "ce",
    "EventName": "CreateAnomalySubscription",
    "Description": "Adds an alert subscription to a cost anomaly detection monitor"
  },
  {
    "API": "ce:CreateCostCategoryDefinition",
    "EventSource": "ce",
    "EventName": "CreateCostCategoryDefinition",
    "Description": "Creates a new Cost Category with the requested name and rules"
  },
  {
    "API": "ce:DeleteAnomalyMonitor",
    "EventSource": "ce",
    "EventName": "DeleteAnomalyMonitor",
    "Description": "Deletes a cost anomaly monitor"
  },
  {
    "API": "ce:DeleteAnomalySubscription",
    "EventSource": "ce",
    "EventName": "DeleteAnomalySubscription",
    "Description": "Deletes a cost anomaly subscription"
  },
  {
    "API": "ce:DeleteCostCategoryDefinition",
    "EventSource": "ce",
    "EventName": "DeleteCostCategoryDefinition",
    "Description": "Deletes a Cost Category"
  },
  {
    "API": "ce:DescribeCostCategoryDefinition",
    "EventSource": "ce",
    "EventName": "DescribeCostCategoryDefinition",
    "Description": "Returns the name, Amazon Resource Name (ARN), rules, definition, and effective dates of a Cost Category that's defined in the account"
  },
  {
    "API": "ce:GeneratePresignedUrl",
    "EventSource": "ce",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "ce:GetAnomalies",
    "EventSource": "ce",
    "EventName": "GetAnomalies",
    "Description": "Retrieves all of the cost anomalies detected on your account during the time period that's specified by the ``DateInterval`` object"
  },
  {
    "API": "ce:GetAnomalyMonitors",
    "EventSource": "ce",
    "EventName": "GetAnomalyMonitors",
    "Description": "Retrieves the cost anomaly monitor definitions for your account"
  },
  {
    "API": "ce:GetAnomalySubscriptions",
    "EventSource": "ce",
    "EventName": "GetAnomalySubscriptions",
    "Description": "Retrieves the cost anomaly subscription objects for your account"
  },
  {
    "API": "ce:GetApproximateUsageRecords",
    "EventSource": "ce",
    "EventName": "GetApproximateUsageRecords",
    "Description": "Retrieves estimated usage records for hourly granularity or resource-level data at daily granularity"
  },
  {
    "API": "ce:GetCostAndUsage",
    "EventSource": "ce",
    "EventName": "GetCostAndUsage",
    "Description": "Retrieves cost and usage metrics for your account"
  },
  {
    "API": "ce:GetCostAndUsageWithResources",
    "EventSource": "ce",
    "EventName": "GetCostAndUsageWithResources",
    "Description": "Retrieves cost and usage metrics with resources for your account"
  },
  {
    "API": "ce:GetCostCategories",
    "EventSource": "ce",
    "EventName": "GetCostCategories",
    "Description": "Retrieves an array of Cost Category names and values incurred cost"
  },
  {
    "API": "ce:GetCostForecast",
    "EventSource": "ce",
    "EventName": "GetCostForecast",
    "Description": "Retrieves a forecast for how much Amazon Web Services predicts that you will spend over the forecast time period that you select, based on your past costs"
  },
  {
    "API": "ce:GetDimensionValues",
    "EventSource": "ce",
    "EventName": "GetDimensionValues",
    "Description": "Retrieves all available filter values for a specified filter over a period of time"
  },
  {
    "API": "ce:GetReservationCoverage",
    "EventSource": "ce",
    "EventName": "GetReservationCoverage",
    "Description": "Retrieves the reservation coverage for your account, which you can use to see how much of your Amazon Elastic Compute Cloud, Amazon ElastiCache, Amazon Relational Database Service, or Amazon Redshift usage is covered by a reservation"
  },
  {
    "API": "ce:GetReservationPurchaseRecommendation",
    "EventSource": "ce",
    "EventName": "GetReservationPurchaseRecommendation",
    "Description": "Gets recommendations for reservation purchases"
  },
  {
    "API": "ce:GetReservationUtilization",
    "EventSource": "ce",
    "EventName": "GetReservationUtilization",
    "Description": "Retrieves the reservation utilization for your account"
  },
  {
    "API": "ce:GetRightsizingRecommendation",
    "EventSource": "ce",
    "EventName": "GetRightsizingRecommendation",
    "Description": "Creates recommendations that help you save cost by identifying idle and underutilized Amazon EC2 instances"
  },
  {
    "API": "ce:GetSavingsPlanPurchaseRecommendationDetails",
    "EventSource": "ce",
    "EventName": "GetSavingsPlanPurchaseRecommendationDetails",
    "Description": "Retrieves the details for a Savings Plan recommendation"
  },
  {
    "API": "ce:GetSavingsPlansCoverage",
    "EventSource": "ce",
    "EventName": "GetSavingsPlansCoverage",
    "Description": "Retrieves the Savings Plans covered for your account"
  },
  {
    "API": "ce:GetSavingsPlansPurchaseRecommendation",
    "EventSource": "ce",
    "EventName": "GetSavingsPlansPurchaseRecommendation",
    "Description": "Retrieves the Savings Plans recommendations for your account"
  },
  {
    "API": "ce:GetSavingsPlansUtilization",
    "EventSource": "ce",
    "EventName": "GetSavingsPlansUtilization",
    "Description": "Retrieves the Savings Plans utilization for your account across date ranges with daily or monthly granularity"
  },
  {
    "API": "ce:GetSavingsPlansUtilizationDetails",
    "EventSource": "ce",
    "EventName": "GetSavingsPlansUtilizationDetails",
    "Description": "Retrieves attribute data along with aggregate utilization and savings data for a given time period"
  },
  {
    "API": "ce:GetTags",
    "EventSource": "ce",
    "EventName": "GetTags",
    "Description": "Queries for available tag keys and tag values for a specified period"
  },
  {
    "API": "ce:GetUsageForecast",
    "EventSource": "ce",
    "EventName": "GetUsageForecast",
    "Description": "Retrieves a forecast for how much Amazon Web Services predicts that you will use over the forecast time period that you select, based on your past usage"
  },
  {
    "API": "ce:ListCostAllocationTagBackfillHistory",
    "EventSource": "ce",
    "EventName": "ListCostAllocationTagBackfillHistory",
    "Description": "Retrieves a list of your historical cost allocation tag backfill requests"
  },
  {
    "API": "ce:ListCostAllocationTags",
    "EventSource": "ce",
    "EventName": "ListCostAllocationTags",
    "Description": "Get a list of cost allocation tags"
  },
  {
    "API": "ce:ListCostCategoryDefinitions",
    "EventSource": "ce",
    "EventName": "ListCostCategoryDefinitions",
    "Description": "Returns the name, Amazon Resource Name (ARN), ``NumberOfRules`` and effective dates of all Cost Categories defined in the account"
  },
  {
    "API": "ce:ListSavingsPlansPurchaseRecommendationGeneration",
    "EventSource": "ce",
    "EventName": "ListSavingsPlansPurchaseRecommendationGeneration",
    "Description": "Retrieves a list of your historical recommendation generations within the past 30 days"
  },
  {
    "API": "ce:ListTagsForResource",
    "EventSource": "ce",
    "EventName": "ListTagsForResource",
    "Description": "Returns a list of resource tags associated with the resource specified by the Amazon Resource Name (ARN)"
  },
  {
    "API": "ce:ProvideAnomalyFeedback",
    "EventSource": "ce",
    "EventName": "ProvideAnomalyFeedback",
    "Description": "Modifies the feedback property of a given cost anomaly"
  },
  {
    "API": "ce:StartCostAllocationTagBackfill",
    "EventSource": "ce",
    "EventName": "StartCostAllocationTagBackfill",
    "Description": "Request a cost allocation tag backfill"
  },
  {
    "API": "ce:StartSavingsPlansPurchaseRecommendationGeneration",
    "EventSource": "ce",
    "EventName": "StartSavingsPlansPurchaseRecommendationGeneration",
    "Description": "Requests a Savings Plans recommendation generation"
  },
  {
    "API": "ce:TagResource",
    "EventSource": "ce",
    "EventName": "TagResource",
    "Description": "An API operation for adding one or more tags (key-value pairs) to a resource"
  },
  {
    "API": "ce:UntagResource",
    "EventSource": "ce",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags from a resource"
  },
  {
    "API": "ce:UpdateAnomalyMonitor",
    "EventSource": "ce",
    "EventName": "UpdateAnomalyMonitor",
    "Description": "Updates an existing cost anomaly monitor"
  },
  {
    "API": "ce:UpdateAnomalySubscription",
    "EventSource": "ce",
    "EventName": "UpdateAnomalySubscription",
    "Description": "Updates an existing cost anomaly subscription"
  },
  {
    "API": "ce:UpdateCostAllocationTagsStatus",
    "EventSource": "ce",
    "EventName": "UpdateCostAllocationTagsStatus",
    "Description": "Updates status for cost allocation tags in bulk, with maximum batch size of 20"
  },
  {
    "API": "ce:UpdateCostCategoryDefinition",
    "EventSource": "ce",
    "EventName": "UpdateCostCategoryDefinition",
    "Description": "Updates an existing Cost Category"
  },
  {
    "API": "chatbot:CreateChimeWebhookConfiguration",
    "EventSource": "chatbot",
    "EventName": "CreateChimeWebhookConfiguration",
    "Description": "Creates Chime Webhook Configuration"
  },
  {
    "API": "chatbot:CreateMicrosoftTeamsChannelConfiguration",
    "EventSource": "chatbot",
    "EventName": "CreateMicrosoftTeamsChannelConfiguration",
    "Description": "Creates MS Teams Channel Configuration"
  },
  {
    "API": "chatbot:CreateSlackChannelConfiguration",
    "EventSource": "chatbot",
    "EventName": "CreateSlackChannelConfiguration",
    "Description": "Creates Slack Channel Configuration"
  },
  {
    "API": "chatbot:DeleteChimeWebhookConfiguration",
    "EventSource": "chatbot",
    "EventName": "DeleteChimeWebhookConfiguration",
    "Description": "Deletes a Chime Webhook Configuration"
  },
  {
    "API": "chatbot:DeleteMicrosoftTeamsChannelConfiguration",
    "EventSource": "chatbot",
    "EventName": "DeleteMicrosoftTeamsChannelConfiguration",
    "Description": "Deletes MS Teams Channel Configuration"
  },
  {
    "API": "chatbot:DeleteMicrosoftTeamsConfiguredTeam",
    "EventSource": "chatbot",
    "EventName": "DeleteMicrosoftTeamsConfiguredTeam",
    "Description": "Deletes the Microsoft Teams team authorization allowing for channels to be configured in that Microsoft Teams team"
  },
  {
    "API": "chatbot:DeleteMicrosoftTeamsUserIdentity",
    "EventSource": "chatbot",
    "EventName": "DeleteMicrosoftTeamsUserIdentity",
    "Description": "Deletes a Teams user identity"
  },
  {
    "API": "chatbot:DeleteSlackChannelConfiguration",
    "EventSource": "chatbot",
    "EventName": "DeleteSlackChannelConfiguration",
    "Description": "Deletes Slack Channel Configuration"
  },
  {
    "API": "chatbot:DeleteSlackUserIdentity",
    "EventSource": "chatbot",
    "EventName": "DeleteSlackUserIdentity",
    "Description": "Deletes a Slack user identity"
  },
  {
    "API": "chatbot:DeleteSlackWorkspaceAuthorization",
    "EventSource": "chatbot",
    "EventName": "DeleteSlackWorkspaceAuthorization",
    "Description": "Deletes the Slack workspace authorization that allows channels to be configured in that workspace"
  },
  {
    "API": "chatbot:DescribeChimeWebhookConfigurations",
    "EventSource": "chatbot",
    "EventName": "DescribeChimeWebhookConfigurations",
    "Description": "Lists Chime Webhook Configurations optionally filtered by ChatConfigurationArn"
  },
  {
    "API": "chatbot:DescribeSlackChannelConfigurations",
    "EventSource": "chatbot",
    "EventName": "DescribeSlackChannelConfigurations",
    "Description": "Lists Slack Channel Configurations optionally filtered by ChatConfigurationArn"
  },
  {
    "API": "chatbot:DescribeSlackUserIdentities",
    "EventSource": "chatbot",
    "EventName": "DescribeSlackUserIdentities",
    "Description": "Lists all Slack user identities with a mapped role"
  },
  {
    "API": "chatbot:DescribeSlackWorkspaces",
    "EventSource": "chatbot",
    "EventName": "DescribeSlackWorkspaces",
    "Description": "Lists all authorized Slack Workspaces for AWS Account"
  },
  {
    "API": "chatbot:GeneratePresignedUrl",
    "EventSource": "chatbot",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "chatbot:GetAccountPreferences",
    "EventSource": "chatbot",
    "EventName": "GetAccountPreferences",
    "Description": "Get Chatbot account level preferences"
  },
  {
    "API": "chatbot:GetMicrosoftTeamsChannelConfiguration",
    "EventSource": "chatbot",
    "EventName": "GetMicrosoftTeamsChannelConfiguration",
    "Description": "Get a single MS Teams Channel Configurations"
  },
  {
    "API": "chatbot:ListMicrosoftTeamsChannelConfigurations",
    "EventSource": "chatbot",
    "EventName": "ListMicrosoftTeamsChannelConfigurations",
    "Description": "Lists MS Teams Channel Configurations optionally filtered by TeamId"
  },
  {
    "API": "chatbot:ListMicrosoftTeamsConfiguredTeams",
    "EventSource": "chatbot",
    "EventName": "ListMicrosoftTeamsConfiguredTeams",
    "Description": "Lists all authorized MS teams for AWS Account"
  },
  {
    "API": "chatbot:ListMicrosoftTeamsUserIdentities",
    "EventSource": "chatbot",
    "EventName": "ListMicrosoftTeamsUserIdentities",
    "Description": "Lists all Microsoft Teams user identities with a mapped role"
  },
  {
    "API": "chatbot:ListTagsForResource",
    "EventSource": "chatbot",
    "EventName": "ListTagsForResource",
    "Description": "Retrieves the list of tags applied to a configuration"
  },
  {
    "API": "chatbot:TagResource",
    "EventSource": "chatbot",
    "EventName": "TagResource",
    "Description": "Applies the supplied tags to a configuration"
  },
  {
    "API": "chatbot:UntagResource",
    "EventSource": "chatbot",
    "EventName": "UntagResource",
    "Description": "Removes the supplied tags from a configuration"
  },
  {
    "API": "chatbot:UpdateAccountPreferences",
    "EventSource": "chatbot",
    "EventName": "UpdateAccountPreferences",
    "Description": "Update Chatbot account level preferences"
  },
  {
    "API": "chatbot:UpdateChimeWebhookConfiguration",
    "EventSource": "chatbot",
    "EventName": "UpdateChimeWebhookConfiguration",
    "Description": "Updates a Chime Webhook Configuration"
  },
  {
    "API": "chatbot:UpdateMicrosoftTeamsChannelConfiguration",
    "EventSource": "chatbot",
    "EventName": "UpdateMicrosoftTeamsChannelConfiguration",
    "Description": "Updates MS Teams Channel Configuration"
  },
  {
    "API": "chatbot:UpdateSlackChannelConfiguration",
    "EventSource": "chatbot",
    "EventName": "UpdateSlackChannelConfiguration",
    "Description": "Updates Slack Channel Configuration"
  },
  {
    "API": "chime:AssociatePhoneNumberWithUser",
    "EventSource": "chime",
    "EventName": "AssociatePhoneNumberWithUser",
    "Description": "Associates a phone number with the specified Amazon Chime user"
  },
  {
    "API": "chime:AssociatePhoneNumbersWithVoiceConnector",
    "EventSource": "chime",
    "EventName": "AssociatePhoneNumbersWithVoiceConnector",
    "Description": "Associates phone numbers with the specified Amazon Chime Voice Connector"
  },
  {
    "API": "chime:AssociatePhoneNumbersWithVoiceConnectorGroup",
    "EventSource": "chime",
    "EventName": "AssociatePhoneNumbersWithVoiceConnectorGroup",
    "Description": "Associates phone numbers with the specified Amazon Chime Voice Connector group"
  },
  {
    "API": "chime:AssociateSigninDelegateGroupsWithAccount",
    "EventSource": "chime",
    "EventName": "AssociateSigninDelegateGroupsWithAccount",
    "Description": "Associates the specified sign-in delegate groups with the specified Amazon Chime account"
  },
  {
    "API": "chime:BatchCreateAttendee",
    "EventSource": "chime",
    "EventName": "BatchCreateAttendee",
    "Description": "Creates up to 100 new attendees for an active Amazon Chime SDK meeting"
  },
  {
    "API": "chime:BatchCreateChannelMembership",
    "EventSource": "chime",
    "EventName": "BatchCreateChannelMembership",
    "Description": "Adds a specified number of users to a channel"
  },
  {
    "API": "chime:BatchCreateRoomMembership",
    "EventSource": "chime",
    "EventName": "BatchCreateRoomMembership",
    "Description": "Adds up to 50 members to a chat room in an Amazon Chime Enterprise account"
  },
  {
    "API": "chime:BatchDeletePhoneNumber",
    "EventSource": "chime",
    "EventName": "BatchDeletePhoneNumber",
    "Description": "Moves phone numbers into the **Deletion queue**"
  },
  {
    "API": "chime:BatchSuspendUser",
    "EventSource": "chime",
    "EventName": "BatchSuspendUser",
    "Description": "Suspends up to 50 users from a ``Team`` or ``EnterpriseLWA`` Amazon Chime account"
  },
  {
    "API": "chime:BatchUnsuspendUser",
    "EventSource": "chime",
    "EventName": "BatchUnsuspendUser",
    "Description": "Removes the suspension from up to 50 previously suspended users for the specified Amazon Chime ``EnterpriseLWA`` account"
  },
  {
    "API": "chime:BatchUpdatePhoneNumber",
    "EventSource": "chime",
    "EventName": "BatchUpdatePhoneNumber",
    "Description": "Updates phone number product types or calling names"
  },
  {
    "API": "chime:BatchUpdateUser",
    "EventSource": "chime",
    "EventName": "BatchUpdateUser",
    "Description": "Updates user details within the  UpdateUserRequestItem object for up to 20 users for the specified Amazon Chime account"
  },
  {
    "API": "chime:CreateAccount",
    "EventSource": "chime",
    "EventName": "CreateAccount",
    "Description": "Creates an Amazon Chime account under the administrator's AWS account"
  },
  {
    "API": "chime:CreateAppInstance",
    "EventSource": "chime",
    "EventName": "CreateAppInstance",
    "Description": "Creates an Amazon Chime SDK messaging ``AppInstance`` under an AWS account"
  },
  {
    "API": "chime:CreateAppInstanceAdmin",
    "EventSource": "chime",
    "EventName": "CreateAppInstanceAdmin",
    "Description": "Promotes an ``AppInstanceUser`` to an ``AppInstanceAdmin``"
  },
  {
    "API": "chime:CreateAppInstanceUser",
    "EventSource": "chime",
    "EventName": "CreateAppInstanceUser",
    "Description": "Creates a user under an Amazon Chime ``AppInstance``"
  },
  {
    "API": "chime:CreateAttendee",
    "EventSource": "chime",
    "EventName": "CreateAttendee",
    "Description": "Creates a new attendee for an active Amazon Chime SDK meeting"
  },
  {
    "API": "chime:CreateBot",
    "EventSource": "chime",
    "EventName": "CreateBot",
    "Description": "Creates a bot for an Amazon Chime Enterprise account"
  },
  {
    "API": "chime:CreateChannel",
    "EventSource": "chime",
    "EventName": "CreateChannel",
    "Description": "Creates a channel to which you can add users and send messages"
  },
  {
    "API": "chime:CreateChannelBan",
    "EventSource": "chime",
    "EventName": "CreateChannelBan",
    "Description": "Permanently bans a member from a channel"
  },
  {
    "API": "chime:CreateChannelMembership",
    "EventSource": "chime",
    "EventName": "CreateChannelMembership",
    "Description": "Adds a user to a channel"
  },
  {
    "API": "chime:CreateChannelModerator",
    "EventSource": "chime",
    "EventName": "CreateChannelModerator",
    "Description": "Creates a new ``ChannelModerator``"
  },
  {
    "API": "chime:CreateMediaCapturePipeline",
    "EventSource": "chime",
    "EventName": "CreateMediaCapturePipeline",
    "Description": "Creates a media capture pipeline"
  },
  {
    "API": "chime:CreateMeeting",
    "EventSource": "chime",
    "EventName": "CreateMeeting",
    "Description": "Creates a new Amazon Chime SDK meeting in the specified media Region with no initial attendees"
  },
  {
    "API": "chime:CreateMeetingDialOut",
    "EventSource": "chime",
    "EventName": "CreateMeetingDialOut",
    "Description": "Uses the join token and call metadata in a meeting request (From number, To number, and so forth) to initiate an outbound call to a public switched telephone network (PSTN) and join them into a Chime meeting"
  },
  {
    "API": "chime:CreateMeetingWithAttendees",
    "EventSource": "chime",
    "EventName": "CreateMeetingWithAttendees",
    "Description": "Creates a new Amazon Chime SDK meeting in the specified media Region, with attendees"
  },
  {
    "API": "chime:CreatePhoneNumberOrder",
    "EventSource": "chime",
    "EventName": "CreatePhoneNumberOrder",
    "Description": "Creates an order for phone numbers to be provisioned"
  },
  {
    "API": "chime:CreateProxySession",
    "EventSource": "chime",
    "EventName": "CreateProxySession",
    "Description": "Creates a proxy session on the specified Amazon Chime Voice Connector for the specified participant phone numbers"
  },
  {
    "API": "chime:CreateRoom",
    "EventSource": "chime",
    "EventName": "CreateRoom",
    "Description": "Creates a chat room for the specified Amazon Chime Enterprise account"
  },
  {
    "API": "chime:CreateRoomMembership",
    "EventSource": "chime",
    "EventName": "CreateRoomMembership",
    "Description": "Adds a member to a chat room in an Amazon Chime Enterprise account"
  },
  {
    "API": "chime:CreateSipMediaApplication",
    "EventSource": "chime",
    "EventName": "CreateSipMediaApplication",
    "Description": "Creates a SIP media application"
  },
  {
    "API": "chime:CreateSipMediaApplicationCall",
    "EventSource": "chime",
    "EventName": "CreateSipMediaApplicationCall",
    "Description": "Creates an outbound call to a phone number from the phone number specified in the request, and it invokes the endpoint of the specified ``sipMediaApplicationId``"
  },
  {
    "API": "chime:CreateSipRule",
    "EventSource": "chime",
    "EventName": "CreateSipRule",
    "Description": "Creates a SIP rule which can be used to run a SIP media application as a target for a specific trigger type"
  },
  {
    "API": "chime:CreateUser",
    "EventSource": "chime",
    "EventName": "CreateUser",
    "Description": "Creates a user under the specified Amazon Chime account"
  },
  {
    "API": "chime:CreateVoiceConnector",
    "EventSource": "chime",
    "EventName": "CreateVoiceConnector",
    "Description": "Creates an Amazon Chime Voice Connector under the administrator's AWS account"
  },
  {
    "API": "chime:CreateVoiceConnectorGroup",
    "EventSource": "chime",
    "EventName": "CreateVoiceConnectorGroup",
    "Description": "Creates an Amazon Chime Voice Connector group under the administrator's AWS account"
  },
  {
    "API": "chime:DeleteAccount",
    "EventSource": "chime",
    "EventName": "DeleteAccount",
    "Description": "Deletes the specified Amazon Chime account"
  },
  {
    "API": "chime:DeleteAppInstance",
    "EventSource": "chime",
    "EventName": "DeleteAppInstance",
    "Description": "Deletes an ``AppInstance`` and all associated data asynchronously"
  },
  {
    "API": "chime:DeleteAppInstanceAdmin",
    "EventSource": "chime",
    "EventName": "DeleteAppInstanceAdmin",
    "Description": "Demotes an ``AppInstanceAdmin`` to an ``AppInstanceUser``"
  },
  {
    "API": "chime:DeleteAppInstanceStreamingConfigurations",
    "EventSource": "chime",
    "EventName": "DeleteAppInstanceStreamingConfigurations",
    "Description": "Deletes the streaming configurations of an ``AppInstance``"
  },
  {
    "API": "chime:DeleteAppInstanceUser",
    "EventSource": "chime",
    "EventName": "DeleteAppInstanceUser",
    "Description": "Deletes an ``AppInstanceUser``"
  },
  {
    "API": "chime:DeleteAttendee",
    "EventSource": "chime",
    "EventName": "DeleteAttendee",
    "Description": "Deletes an attendee from the specified Amazon Chime SDK meeting and deletes their ``JoinToken``"
  },
  {
    "API": "chime:DeleteChannel",
    "EventSource": "chime",
    "EventName": "DeleteChannel",
    "Description": "Immediately makes a channel and its memberships inaccessible and marks them for deletion"
  },
  {
    "API": "chime:DeleteChannelBan",
    "EventSource": "chime",
    "EventName": "DeleteChannelBan",
    "Description": "Removes a user from a channel's ban list"
  },
  {
    "API": "chime:DeleteChannelMembership",
    "EventSource": "chime",
    "EventName": "DeleteChannelMembership",
    "Description": "Removes a member from a channel"
  },
  {
    "API": "chime:DeleteChannelMessage",
    "EventSource": "chime",
    "EventName": "DeleteChannelMessage",
    "Description": "Deletes a channel message"
  },
  {
    "API": "chime:DeleteChannelModerator",
    "EventSource": "chime",
    "EventName": "DeleteChannelModerator",
    "Description": "Deletes a channel moderator"
  },
  {
    "API": "chime:DeleteEventsConfiguration",
    "EventSource": "chime",
    "EventName": "DeleteEventsConfiguration",
    "Description": "Deletes the events configuration that allows a bot to receive outgoing events"
  },
  {
    "API": "chime:DeleteMediaCapturePipeline",
    "EventSource": "chime",
    "EventName": "DeleteMediaCapturePipeline",
    "Description": "Deletes the media capture pipeline"
  },
  {
    "API": "chime:DeleteMeeting",
    "EventSource": "chime",
    "EventName": "DeleteMeeting",
    "Description": "Deletes the specified Amazon Chime SDK meeting"
  },
  {
    "API": "chime:DeletePhoneNumber",
    "EventSource": "chime",
    "EventName": "DeletePhoneNumber",
    "Description": "Moves the specified phone number into the **Deletion queue**"
  },
  {
    "API": "chime:DeleteProxySession",
    "EventSource": "chime",
    "EventName": "DeleteProxySession",
    "Description": "Deletes the specified proxy session from the specified Amazon Chime Voice Connector"
  },
  {
    "API": "chime:DeleteRoom",
    "EventSource": "chime",
    "EventName": "DeleteRoom",
    "Description": "Deletes a chat room in an Amazon Chime Enterprise account"
  },
  {
    "API": "chime:DeleteRoomMembership",
    "EventSource": "chime",
    "EventName": "DeleteRoomMembership",
    "Description": "Removes a member from a chat room in an Amazon Chime Enterprise account"
  },
  {
    "API": "chime:DeleteSipMediaApplication",
    "EventSource": "chime",
    "EventName": "DeleteSipMediaApplication",
    "Description": "Deletes a SIP media application"
  },
  {
    "API": "chime:DeleteSipRule",
    "EventSource": "chime",
    "EventName": "DeleteSipRule",
    "Description": "Deletes a SIP rule"
  },
  {
    "API": "chime:DeleteVoiceConnector",
    "EventSource": "chime",
    "EventName": "DeleteVoiceConnector",
    "Description": "Deletes the specified Amazon Chime Voice Connector"
  },
  {
    "API": "chime:DeleteVoiceConnectorEmergencyCallingConfiguration",
    "EventSource": "chime",
    "EventName": "DeleteVoiceConnectorEmergencyCallingConfiguration",
    "Description": "Deletes the emergency calling configuration details from the specified Amazon Chime Voice Connector"
  },
  {
    "API": "chime:DeleteVoiceConnectorGroup",
    "EventSource": "chime",
    "EventName": "DeleteVoiceConnectorGroup",
    "Description": "Deletes the specified Amazon Chime Voice Connector group"
  },
  {
    "API": "chime:DeleteVoiceConnectorOrigination",
    "EventSource": "chime",
    "EventName": "DeleteVoiceConnectorOrigination",
    "Description": "Deletes the origination settings for the specified Amazon Chime Voice Connector"
  },
  {
    "API": "chime:DeleteVoiceConnectorProxy",
    "EventSource": "chime",
    "EventName": "DeleteVoiceConnectorProxy",
    "Description": "Deletes the proxy configuration from the specified Amazon Chime Voice Connector"
  },
  {
    "API": "chime:DeleteVoiceConnectorStreamingConfiguration",
    "EventSource": "chime",
    "EventName": "DeleteVoiceConnectorStreamingConfiguration",
    "Description": "Deletes the streaming configuration for the specified Amazon Chime Voice Connector"
  },
  {
    "API": "chime:DeleteVoiceConnectorTermination",
    "EventSource": "chime",
    "EventName": "DeleteVoiceConnectorTermination",
    "Description": "Deletes the termination settings for the specified Amazon Chime Voice Connector"
  },
  {
    "API": "chime:DeleteVoiceConnectorTerminationCredentials",
    "EventSource": "chime",
    "EventName": "DeleteVoiceConnectorTerminationCredentials",
    "Description": "Deletes the specified SIP credentials used by your equipment to authenticate during call termination"
  },
  {
    "API": "chime:DescribeAppInstance",
    "EventSource": "chime",
    "EventName": "DescribeAppInstance",
    "Description": "Returns the full details of an ``AppInstance``"
  },
  {
    "API": "chime:DescribeAppInstanceAdmin",
    "EventSource": "chime",
    "EventName": "DescribeAppInstanceAdmin",
    "Description": "Returns the full details of an ``AppInstanceAdmin``"
  },
  {
    "API": "chime:DescribeAppInstanceUser",
    "EventSource": "chime",
    "EventName": "DescribeAppInstanceUser",
    "Description": "Returns the full details of an ``AppInstanceUser``"
  },
  {
    "API": "chime:DescribeChannel",
    "EventSource": "chime",
    "EventName": "DescribeChannel",
    "Description": "Returns the full details of a channel in an Amazon Chime ``AppInstance``"
  },
  {
    "API": "chime:DescribeChannelBan",
    "EventSource": "chime",
    "EventName": "DescribeChannelBan",
    "Description": "Returns the full details of a channel ban"
  },
  {
    "API": "chime:DescribeChannelMembership",
    "EventSource": "chime",
    "EventName": "DescribeChannelMembership",
    "Description": "Returns the full details of a user's channel membership"
  },
  {
    "API": "chime:DescribeChannelMembershipForAppInstanceUser",
    "EventSource": "chime",
    "EventName": "DescribeChannelMembershipForAppInstanceUser",
    "Description": "Returns the details of a channel based on the membership of the specified ``AppInstanceUser``"
  },
  {
    "API": "chime:DescribeChannelModeratedByAppInstanceUser",
    "EventSource": "chime",
    "EventName": "DescribeChannelModeratedByAppInstanceUser",
    "Description": "Returns the full details of a channel moderated by the specified ``AppInstanceUser``"
  },
  {
    "API": "chime:DescribeChannelModerator",
    "EventSource": "chime",
    "EventName": "DescribeChannelModerator",
    "Description": "Returns the full details of a single ChannelModerator"
  },
  {
    "API": "chime:DisassociatePhoneNumberFromUser",
    "EventSource": "chime",
    "EventName": "DisassociatePhoneNumberFromUser",
    "Description": "Disassociates the primary provisioned phone number from the specified Amazon Chime user"
  },
  {
    "API": "chime:DisassociatePhoneNumbersFromVoiceConnector",
    "EventSource": "chime",
    "EventName": "DisassociatePhoneNumbersFromVoiceConnector",
    "Description": "Disassociates the specified phone numbers from the specified Amazon Chime Voice Connector"
  },
  {
    "API": "chime:DisassociatePhoneNumbersFromVoiceConnectorGroup",
    "EventSource": "chime",
    "EventName": "DisassociatePhoneNumbersFromVoiceConnectorGroup",
    "Description": "Disassociates the specified phone numbers from the specified Amazon Chime Voice Connector group"
  },
  {
    "API": "chime:DisassociateSigninDelegateGroupsFromAccount",
    "EventSource": "chime",
    "EventName": "DisassociateSigninDelegateGroupsFromAccount",
    "Description": "Disassociates the specified sign-in delegate groups from the specified Amazon Chime account"
  },
  {
    "API": "chime:GeneratePresignedUrl",
    "EventSource": "chime",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "chime:GetAccount",
    "EventSource": "chime",
    "EventName": "GetAccount",
    "Description": "Retrieves details for the specified Amazon Chime account, such as account type and supported licenses"
  },
  {
    "API": "chime:GetAccountSettings",
    "EventSource": "chime",
    "EventName": "GetAccountSettings",
    "Description": "Retrieves account settings for the specified Amazon Chime account ID, such as remote control and dialout settings"
  },
  {
    "API": "chime:GetAppInstanceRetentionSettings",
    "EventSource": "chime",
    "EventName": "GetAppInstanceRetentionSettings",
    "Description": "Gets the retention settings for an ``AppInstance``"
  },
  {
    "API": "chime:GetAppInstanceStreamingConfigurations",
    "EventSource": "chime",
    "EventName": "GetAppInstanceStreamingConfigurations",
    "Description": "Gets the streaming settings for an ``AppInstance``"
  },
  {
    "API": "chime:GetAttendee",
    "EventSource": "chime",
    "EventName": "GetAttendee",
    "Description": "Gets the Amazon Chime SDK attendee details for a specified meeting ID and attendee ID"
  },
  {
    "API": "chime:GetBot",
    "EventSource": "chime",
    "EventName": "GetBot",
    "Description": "Retrieves details for the specified bot, such as bot email address, bot type, status, and display name"
  },
  {
    "API": "chime:GetChannelMessage",
    "EventSource": "chime",
    "EventName": "GetChannelMessage",
    "Description": "Gets the full details of a channel message"
  },
  {
    "API": "chime:GetEventsConfiguration",
    "EventSource": "chime",
    "EventName": "GetEventsConfiguration",
    "Description": "Gets details for an events configuration that allows a bot to receive outgoing events, such as an HTTPS endpoint or Lambda function ARN"
  },
  {
    "API": "chime:GetGlobalSettings",
    "EventSource": "chime",
    "EventName": "GetGlobalSettings",
    "Description": "Retrieves global settings for the administrator's AWS account, such as Amazon Chime Business Calling and Amazon Chime Voice Connector settings"
  },
  {
    "API": "chime:GetMediaCapturePipeline",
    "EventSource": "chime",
    "EventName": "GetMediaCapturePipeline",
    "Description": "Gets an existing media capture pipeline"
  },
  {
    "API": "chime:GetMeeting",
    "EventSource": "chime",
    "EventName": "GetMeeting",
    "Description": ""
  },
  {
    "API": "chime:GetMessagingSessionEndpoint",
    "EventSource": "chime",
    "EventName": "GetMessagingSessionEndpoint",
    "Description": "The details of the endpoint for the messaging session"
  },
  {
    "API": "chime:GetPhoneNumber",
    "EventSource": "chime",
    "EventName": "GetPhoneNumber",
    "Description": "Retrieves details for the specified phone number ID, such as associations, capabilities, and product type"
  },
  {
    "API": "chime:GetPhoneNumberOrder",
    "EventSource": "chime",
    "EventName": "GetPhoneNumberOrder",
    "Description": "Retrieves details for the specified phone number order, such as the order creation timestamp, phone numbers in E"
  },
  {
    "API": "chime:GetPhoneNumberSettings",
    "EventSource": "chime",
    "EventName": "GetPhoneNumberSettings",
    "Description": "Retrieves the phone number settings for the administrator's AWS account, such as the default outbound calling name"
  },
  {
    "API": "chime:GetProxySession",
    "EventSource": "chime",
    "EventName": "GetProxySession",
    "Description": "Gets the specified proxy session details for the specified Amazon Chime Voice Connector"
  },
  {
    "API": "chime:GetRetentionSettings",
    "EventSource": "chime",
    "EventName": "GetRetentionSettings",
    "Description": "Gets the retention settings for the specified Amazon Chime Enterprise account"
  },
  {
    "API": "chime:GetRoom",
    "EventSource": "chime",
    "EventName": "GetRoom",
    "Description": "Retrieves room details, such as the room name, for a room in an Amazon Chime Enterprise account"
  },
  {
    "API": "chime:GetSipMediaApplication",
    "EventSource": "chime",
    "EventName": "GetSipMediaApplication",
    "Description": "Retrieves the information for a SIP media application, including name, AWS Region, and endpoints"
  },
  {
    "API": "chime:GetSipMediaApplicationLoggingConfiguration",
    "EventSource": "chime",
    "EventName": "GetSipMediaApplicationLoggingConfiguration",
    "Description": "Returns the logging configuration for the specified SIP media application"
  },
  {
    "API": "chime:GetSipRule",
    "EventSource": "chime",
    "EventName": "GetSipRule",
    "Description": "Retrieves the details of a SIP rule, such as the rule ID, name, triggers, and target endpoints"
  },
  {
    "API": "chime:GetUser",
    "EventSource": "chime",
    "EventName": "GetUser",
    "Description": "Retrieves details for the specified user ID, such as primary email address, license type,and personal meeting PIN"
  },
  {
    "API": "chime:GetUserSettings",
    "EventSource": "chime",
    "EventName": "GetUserSettings",
    "Description": "Retrieves settings for the specified user ID, such as any associated phone number settings"
  },
  {
    "API": "chime:GetVoiceConnector",
    "EventSource": "chime",
    "EventName": "GetVoiceConnector",
    "Description": "Retrieves details for the specified Amazon Chime Voice Connector, such as timestamps,name, outbound host, and encryption requirements"
  },
  {
    "API": "chime:GetVoiceConnectorEmergencyCallingConfiguration",
    "EventSource": "chime",
    "EventName": "GetVoiceConnectorEmergencyCallingConfiguration",
    "Description": "Gets the emergency calling configuration details for the specified Amazon Chime Voice Connector"
  },
  {
    "API": "chime:GetVoiceConnectorGroup",
    "EventSource": "chime",
    "EventName": "GetVoiceConnectorGroup",
    "Description": "Retrieves details for the specified Amazon Chime Voice Connector group, such as timestamps,name, and associated ``VoiceConnectorItems``"
  },
  {
    "API": "chime:GetVoiceConnectorLoggingConfiguration",
    "EventSource": "chime",
    "EventName": "GetVoiceConnectorLoggingConfiguration",
    "Description": "Retrieves the logging configuration details for the specified Amazon Chime Voice Connector"
  },
  {
    "API": "chime:GetVoiceConnectorOrigination",
    "EventSource": "chime",
    "EventName": "GetVoiceConnectorOrigination",
    "Description": "Retrieves origination setting details for the specified Amazon Chime Voice Connector"
  },
  {
    "API": "chime:GetVoiceConnectorProxy",
    "EventSource": "chime",
    "EventName": "GetVoiceConnectorProxy",
    "Description": "Gets the proxy configuration details for the specified Amazon Chime Voice Connector"
  },
  {
    "API": "chime:GetVoiceConnectorStreamingConfiguration",
    "EventSource": "chime",
    "EventName": "GetVoiceConnectorStreamingConfiguration",
    "Description": "Retrieves the streaming configuration details for the specified Amazon Chime Voice Connector"
  },
  {
    "API": "chime:GetVoiceConnectorTermination",
    "EventSource": "chime",
    "EventName": "GetVoiceConnectorTermination",
    "Description": "Retrieves termination setting details for the specified Amazon Chime Voice Connector"
  },
  {
    "API": "chime:GetVoiceConnectorTerminationHealth",
    "EventSource": "chime",
    "EventName": "GetVoiceConnectorTerminationHealth",
    "Description": ""
  },
  {
    "API": "chime:InviteUsers",
    "EventSource": "chime",
    "EventName": "InviteUsers",
    "Description": "Sends email to a maximum of 50 users, inviting them to the specified Amazon Chime ``Team`` account"
  },
  {
    "API": "chime:ListAccounts",
    "EventSource": "chime",
    "EventName": "ListAccounts",
    "Description": "Lists the Amazon Chime accounts under the administrator's AWS account"
  },
  {
    "API": "chime:ListAppInstanceAdmins",
    "EventSource": "chime",
    "EventName": "ListAppInstanceAdmins",
    "Description": "Returns a list of the administrators in the ``AppInstance``"
  },
  {
    "API": "chime:ListAppInstanceUsers",
    "EventSource": "chime",
    "EventName": "ListAppInstanceUsers",
    "Description": "List all ``AppInstanceUsers`` created under a single ``AppInstance``"
  },
  {
    "API": "chime:ListAppInstances",
    "EventSource": "chime",
    "EventName": "ListAppInstances",
    "Description": "Lists all Amazon Chime ``AppInstance``s created under a single AWS account"
  },
  {
    "API": "chime:ListAttendeeTags",
    "EventSource": "chime",
    "EventName": "ListAttendeeTags",
    "Description": "Lists the tags applied to an Amazon Chime SDK attendee resource"
  },
  {
    "API": "chime:ListAttendees",
    "EventSource": "chime",
    "EventName": "ListAttendees",
    "Description": "Lists the attendees for the specified Amazon Chime SDK meeting"
  },
  {
    "API": "chime:ListBots",
    "EventSource": "chime",
    "EventName": "ListBots",
    "Description": "Lists the bots associated with the administrator's Amazon Chime Enterprise account ID"
  },
  {
    "API": "chime:ListChannelBans",
    "EventSource": "chime",
    "EventName": "ListChannelBans",
    "Description": "Lists all the users banned from a particular channel"
  },
  {
    "API": "chime:ListChannelMemberships",
    "EventSource": "chime",
    "EventName": "ListChannelMemberships",
    "Description": "Lists all channel memberships in a channel"
  },
  {
    "API": "chime:ListChannelMembershipsForAppInstanceUser",
    "EventSource": "chime",
    "EventName": "ListChannelMembershipsForAppInstanceUser",
    "Description": "Lists all channels that a particular ``AppInstanceUser`` is a part of"
  },
  {
    "API": "chime:ListChannelMessages",
    "EventSource": "chime",
    "EventName": "ListChannelMessages",
    "Description": "List all the messages in a channel"
  },
  {
    "API": "chime:ListChannelModerators",
    "EventSource": "chime",
    "EventName": "ListChannelModerators",
    "Description": "Lists all the moderators for a channel"
  },
  {
    "API": "chime:ListChannels",
    "EventSource": "chime",
    "EventName": "ListChannels",
    "Description": "Lists all Channels created under a single Chime App as a paginated list"
  },
  {
    "API": "chime:ListChannelsModeratedByAppInstanceUser",
    "EventSource": "chime",
    "EventName": "ListChannelsModeratedByAppInstanceUser",
    "Description": "A list of the channels moderated by an ``AppInstanceUser``"
  },
  {
    "API": "chime:ListMediaCapturePipelines",
    "EventSource": "chime",
    "EventName": "ListMediaCapturePipelines",
    "Description": "Returns a list of media capture pipelines"
  },
  {
    "API": "chime:ListMeetingTags",
    "EventSource": "chime",
    "EventName": "ListMeetingTags",
    "Description": "Lists the tags applied to an Amazon Chime SDK meeting resource"
  },
  {
    "API": "chime:ListMeetings",
    "EventSource": "chime",
    "EventName": "ListMeetings",
    "Description": "Lists up to 100 active Amazon Chime SDK meetings"
  },
  {
    "API": "chime:ListPhoneNumberOrders",
    "EventSource": "chime",
    "EventName": "ListPhoneNumberOrders",
    "Description": "Lists the phone number orders for the administrator's Amazon Chime account"
  },
  {
    "API": "chime:ListPhoneNumbers",
    "EventSource": "chime",
    "EventName": "ListPhoneNumbers",
    "Description": "Lists the phone numbers for the specified Amazon Chime account, Amazon Chime user, Amazon Chime Voice Connector, or Amazon Chime Voice Connector group"
  },
  {
    "API": "chime:ListProxySessions",
    "EventSource": "chime",
    "EventName": "ListProxySessions",
    "Description": "Lists the proxy sessions for the specified Amazon Chime Voice Connector"
  },
  {
    "API": "chime:ListRoomMemberships",
    "EventSource": "chime",
    "EventName": "ListRoomMemberships",
    "Description": "Lists the membership details for the specified room in an Amazon Chime Enterprise account, such as the members' IDs, email addresses, and names"
  },
  {
    "API": "chime:ListRooms",
    "EventSource": "chime",
    "EventName": "ListRooms",
    "Description": "Lists the room details for the specified Amazon Chime Enterprise account"
  },
  {
    "API": "chime:ListSipMediaApplications",
    "EventSource": "chime",
    "EventName": "ListSipMediaApplications",
    "Description": "Lists the SIP media applications under the administrator's AWS account"
  },
  {
    "API": "chime:ListSipRules",
    "EventSource": "chime",
    "EventName": "ListSipRules",
    "Description": "Lists the SIP rules under the administrator's AWS account"
  },
  {
    "API": "chime:ListSupportedPhoneNumberCountries",
    "EventSource": "chime",
    "EventName": "ListSupportedPhoneNumberCountries",
    "Description": "Lists supported phone number countries"
  },
  {
    "API": "chime:ListTagsForResource",
    "EventSource": "chime",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags applied to an Amazon Chime SDK meeting and messaging resources"
  },
  {
    "API": "chime:ListUsers",
    "EventSource": "chime",
    "EventName": "ListUsers",
    "Description": "Lists the users that belong to the specified Amazon Chime account"
  },
  {
    "API": "chime:ListVoiceConnectorGroups",
    "EventSource": "chime",
    "EventName": "ListVoiceConnectorGroups",
    "Description": "Lists the Amazon Chime Voice Connector groups for the administrator's AWS account"
  },
  {
    "API": "chime:ListVoiceConnectorTerminationCredentials",
    "EventSource": "chime",
    "EventName": "ListVoiceConnectorTerminationCredentials",
    "Description": "Lists the SIP credentials for the specified Amazon Chime Voice Connector"
  },
  {
    "API": "chime:ListVoiceConnectors",
    "EventSource": "chime",
    "EventName": "ListVoiceConnectors",
    "Description": "Lists the Amazon Chime Voice Connectors for the administrator's AWS account"
  },
  {
    "API": "chime:LogoutUser",
    "EventSource": "chime",
    "EventName": "LogoutUser",
    "Description": "Logs out the specified user from all of the devices they are currently logged into"
  },
  {
    "API": "chime:PutAppInstanceRetentionSettings",
    "EventSource": "chime",
    "EventName": "PutAppInstanceRetentionSettings",
    "Description": "Sets the amount of time in days that a given ``AppInstance`` retains data"
  },
  {
    "API": "chime:PutAppInstanceStreamingConfigurations",
    "EventSource": "chime",
    "EventName": "PutAppInstanceStreamingConfigurations",
    "Description": "The data streaming configurations of an ``AppInstance``"
  },
  {
    "API": "chime:PutEventsConfiguration",
    "EventSource": "chime",
    "EventName": "PutEventsConfiguration",
    "Description": "Creates an events configuration that allows a bot to receive outgoing events sent by Amazon Chime"
  },
  {
    "API": "chime:PutRetentionSettings",
    "EventSource": "chime",
    "EventName": "PutRetentionSettings",
    "Description": "Puts retention settings for the specified Amazon Chime Enterprise account"
  },
  {
    "API": "chime:PutSipMediaApplicationLoggingConfiguration",
    "EventSource": "chime",
    "EventName": "PutSipMediaApplicationLoggingConfiguration",
    "Description": "Updates the logging configuration for the specified SIP media application"
  },
  {
    "API": "chime:PutVoiceConnectorEmergencyCallingConfiguration",
    "EventSource": "chime",
    "EventName": "PutVoiceConnectorEmergencyCallingConfiguration",
    "Description": "Puts emergency calling configuration details to the specified Amazon Chime Voice Connector, such as emergency phone numbers and calling countries"
  },
  {
    "API": "chime:PutVoiceConnectorLoggingConfiguration",
    "EventSource": "chime",
    "EventName": "PutVoiceConnectorLoggingConfiguration",
    "Description": "Adds a logging configuration for the specified Amazon Chime Voice Connector"
  },
  {
    "API": "chime:PutVoiceConnectorOrigination",
    "EventSource": "chime",
    "EventName": "PutVoiceConnectorOrigination",
    "Description": "Adds origination settings for the specified Amazon Chime Voice Connector"
  },
  {
    "API": "chime:PutVoiceConnectorProxy",
    "EventSource": "chime",
    "EventName": "PutVoiceConnectorProxy",
    "Description": "Puts the specified proxy configuration to the specified Amazon Chime Voice Connector"
  },
  {
    "API": "chime:PutVoiceConnectorStreamingConfiguration",
    "EventSource": "chime",
    "EventName": "PutVoiceConnectorStreamingConfiguration",
    "Description": "Adds a streaming configuration for the specified Amazon Chime Voice Connector"
  },
  {
    "API": "chime:PutVoiceConnectorTermination",
    "EventSource": "chime",
    "EventName": "PutVoiceConnectorTermination",
    "Description": "Adds termination settings for the specified Amazon Chime Voice Connector"
  },
  {
    "API": "chime:PutVoiceConnectorTerminationCredentials",
    "EventSource": "chime",
    "EventName": "PutVoiceConnectorTerminationCredentials",
    "Description": "Adds termination SIP credentials for the specified Amazon Chime Voice Connector"
  },
  {
    "API": "chime:RedactChannelMessage",
    "EventSource": "chime",
    "EventName": "RedactChannelMessage",
    "Description": "Redacts message content, but not metadata"
  },
  {
    "API": "chime:RedactConversationMessage",
    "EventSource": "chime",
    "EventName": "RedactConversationMessage",
    "Description": "Redacts the specified message from the specified Amazon Chime conversation"
  },
  {
    "API": "chime:RedactRoomMessage",
    "EventSource": "chime",
    "EventName": "RedactRoomMessage",
    "Description": "Redacts the specified message from the specified Amazon Chime channel"
  },
  {
    "API": "chime:RegenerateSecurityToken",
    "EventSource": "chime",
    "EventName": "RegenerateSecurityToken",
    "Description": "Regenerates the security token for a bot"
  },
  {
    "API": "chime:ResetPersonalPin",
    "EventSource": "chime",
    "EventName": "ResetPersonalPin",
    "Description": "Resets the personal meeting PIN for the specified user on an Amazon Chime account"
  },
  {
    "API": "chime:RestorePhoneNumber",
    "EventSource": "chime",
    "EventName": "RestorePhoneNumber",
    "Description": "Moves a phone number from the **Deletion queue** back into the phone number **Inventory**"
  },
  {
    "API": "chime:SearchAvailablePhoneNumbers",
    "EventSource": "chime",
    "EventName": "SearchAvailablePhoneNumbers",
    "Description": "Searches for phone numbers that can be ordered"
  },
  {
    "API": "chime:SendChannelMessage",
    "EventSource": "chime",
    "EventName": "SendChannelMessage",
    "Description": "Sends a message to a particular channel that the member is a part of"
  },
  {
    "API": "chime:StartMeetingTranscription",
    "EventSource": "chime",
    "EventName": "StartMeetingTranscription",
    "Description": "Starts transcription for the specified ``meetingId``"
  },
  {
    "API": "chime:StopMeetingTranscription",
    "EventSource": "chime",
    "EventName": "StopMeetingTranscription",
    "Description": "Stops transcription for the specified ``meetingId``"
  },
  {
    "API": "chime:TagAttendee",
    "EventSource": "chime",
    "EventName": "TagAttendee",
    "Description": "Applies the specified tags to the specified Amazon Chime attendee"
  },
  {
    "API": "chime:TagMeeting",
    "EventSource": "chime",
    "EventName": "TagMeeting",
    "Description": "Applies the specified tags to the specified Amazon Chime SDK meeting"
  },
  {
    "API": "chime:TagResource",
    "EventSource": "chime",
    "EventName": "TagResource",
    "Description": "Applies the specified tags to the specified Amazon Chime SDK meeting resource"
  },
  {
    "API": "chime:UntagAttendee",
    "EventSource": "chime",
    "EventName": "UntagAttendee",
    "Description": "Untags the specified tags from the specified Amazon Chime SDK attendee"
  },
  {
    "API": "chime:UntagMeeting",
    "EventSource": "chime",
    "EventName": "UntagMeeting",
    "Description": "Untags the specified tags from the specified Amazon Chime SDK meeting"
  },
  {
    "API": "chime:UntagResource",
    "EventSource": "chime",
    "EventName": "UntagResource",
    "Description": "Untags the specified tags from the specified Amazon Chime SDK meeting resource"
  },
  {
    "API": "chime:UpdateAccount",
    "EventSource": "chime",
    "EventName": "UpdateAccount",
    "Description": "Updates account details for the specified Amazon Chime account"
  },
  {
    "API": "chime:UpdateAccountSettings",
    "EventSource": "chime",
    "EventName": "UpdateAccountSettings",
    "Description": "Updates the settings for the specified Amazon Chime account"
  },
  {
    "API": "chime:UpdateAppInstance",
    "EventSource": "chime",
    "EventName": "UpdateAppInstance",
    "Description": "Updates ``AppInstance`` metadata"
  },
  {
    "API": "chime:UpdateAppInstanceUser",
    "EventSource": "chime",
    "EventName": "UpdateAppInstanceUser",
    "Description": "Updates the details of an ``AppInstanceUser``"
  },
  {
    "API": "chime:UpdateBot",
    "EventSource": "chime",
    "EventName": "UpdateBot",
    "Description": "Updates the status of the specified bot, such as starting or stopping the bot from running in your Amazon Chime Enterprise account"
  },
  {
    "API": "chime:UpdateChannel",
    "EventSource": "chime",
    "EventName": "UpdateChannel",
    "Description": "Update a channel's attributes"
  },
  {
    "API": "chime:UpdateChannelMessage",
    "EventSource": "chime",
    "EventName": "UpdateChannelMessage",
    "Description": "Updates the content of a message"
  },
  {
    "API": "chime:UpdateChannelReadMarker",
    "EventSource": "chime",
    "EventName": "UpdateChannelReadMarker",
    "Description": "The details of the time when a user last read messages in a channel"
  },
  {
    "API": "chime:UpdateGlobalSettings",
    "EventSource": "chime",
    "EventName": "UpdateGlobalSettings",
    "Description": "Updates global settings for the administrator's AWS account, such as Amazon Chime Business Calling and Amazon Chime Voice Connector settings"
  },
  {
    "API": "chime:UpdatePhoneNumber",
    "EventSource": "chime",
    "EventName": "UpdatePhoneNumber",
    "Description": "Updates phone number details, such as product type or calling name, for the specified phone number ID"
  },
  {
    "API": "chime:UpdatePhoneNumberSettings",
    "EventSource": "chime",
    "EventName": "UpdatePhoneNumberSettings",
    "Description": "Updates the phone number settings for the administrator's AWS account, such as the default outbound calling name"
  },
  {
    "API": "chime:UpdateProxySession",
    "EventSource": "chime",
    "EventName": "UpdateProxySession",
    "Description": "Updates the specified proxy session details, such as voice or SMS capabilities"
  },
  {
    "API": "chime:UpdateRoom",
    "EventSource": "chime",
    "EventName": "UpdateRoom",
    "Description": "Updates room details, such as the room name, for a room in an Amazon Chime Enterprise account"
  },
  {
    "API": "chime:UpdateRoomMembership",
    "EventSource": "chime",
    "EventName": "UpdateRoomMembership",
    "Description": "Updates room membership details, such as the member role, for a room in an Amazon Chime Enterprise account"
  },
  {
    "API": "chime:UpdateSipMediaApplication",
    "EventSource": "chime",
    "EventName": "UpdateSipMediaApplication",
    "Description": "Updates the details of the specified SIP media application"
  },
  {
    "API": "chime:UpdateSipMediaApplicationCall",
    "EventSource": "chime",
    "EventName": "UpdateSipMediaApplicationCall",
    "Description": "Invokes the AWS Lambda function associated with the SIP media application and transaction ID in an update request"
  },
  {
    "API": "chime:UpdateSipRule",
    "EventSource": "chime",
    "EventName": "UpdateSipRule",
    "Description": "Updates the details of the specified SIP rule"
  },
  {
    "API": "chime:UpdateUser",
    "EventSource": "chime",
    "EventName": "UpdateUser",
    "Description": "Updates user details for a specified user ID"
  },
  {
    "API": "chime:UpdateUserSettings",
    "EventSource": "chime",
    "EventName": "UpdateUserSettings",
    "Description": "Updates the settings for the specified user, such as phone number settings"
  },
  {
    "API": "chime:UpdateVoiceConnector",
    "EventSource": "chime",
    "EventName": "UpdateVoiceConnector",
    "Description": "Updates details for the specified Amazon Chime Voice Connector"
  },
  {
    "API": "chime:UpdateVoiceConnectorGroup",
    "EventSource": "chime",
    "EventName": "UpdateVoiceConnectorGroup",
    "Description": "Updates details of the specified Amazon Chime Voice Connector group, such as the name and Amazon Chime Voice Connector priority ranking"
  },
  {
    "API": "chime:ValidateE911Address",
    "EventSource": "chime",
    "EventName": "ValidateE911Address",
    "Description": "Validates an address to be used for 911 calls made with Amazon Chime Voice Connectors"
  },
  {
    "API": "chime-sdk-identity:CreateAppInstance",
    "EventSource": "chime-sdk-identity",
    "EventName": "CreateAppInstance",
    "Description": "Creates an Amazon Chime SDK messaging ``AppInstance`` under an AWS account"
  },
  {
    "API": "chime-sdk-identity:CreateAppInstanceAdmin",
    "EventSource": "chime-sdk-identity",
    "EventName": "CreateAppInstanceAdmin",
    "Description": "Promotes an ``AppInstanceUser`` or ``AppInstanceBot`` to an ``AppInstanceAdmin``"
  },
  {
    "API": "chime-sdk-identity:CreateAppInstanceBot",
    "EventSource": "chime-sdk-identity",
    "EventName": "CreateAppInstanceBot",
    "Description": "Creates a bot under an Amazon Chime ``AppInstance``"
  },
  {
    "API": "chime-sdk-identity:CreateAppInstanceUser",
    "EventSource": "chime-sdk-identity",
    "EventName": "CreateAppInstanceUser",
    "Description": "Creates a user under an Amazon Chime ``AppInstance``"
  },
  {
    "API": "chime-sdk-identity:DeleteAppInstance",
    "EventSource": "chime-sdk-identity",
    "EventName": "DeleteAppInstance",
    "Description": "Deletes an ``AppInstance`` and all associated data asynchronously"
  },
  {
    "API": "chime-sdk-identity:DeleteAppInstanceAdmin",
    "EventSource": "chime-sdk-identity",
    "EventName": "DeleteAppInstanceAdmin",
    "Description": "Demotes an ``AppInstanceAdmin`` to an ``AppInstanceUser`` or ``AppInstanceBot``"
  },
  {
    "API": "chime-sdk-identity:DeleteAppInstanceBot",
    "EventSource": "chime-sdk-identity",
    "EventName": "DeleteAppInstanceBot",
    "Description": "Deletes an ``AppInstanceBot``"
  },
  {
    "API": "chime-sdk-identity:DeleteAppInstanceUser",
    "EventSource": "chime-sdk-identity",
    "EventName": "DeleteAppInstanceUser",
    "Description": "Deletes an ``AppInstanceUser``"
  },
  {
    "API": "chime-sdk-identity:DeregisterAppInstanceUserEndpoint",
    "EventSource": "chime-sdk-identity",
    "EventName": "DeregisterAppInstanceUserEndpoint",
    "Description": "Deregisters an ``AppInstanceUserEndpoint``"
  },
  {
    "API": "chime-sdk-identity:DescribeAppInstance",
    "EventSource": "chime-sdk-identity",
    "EventName": "DescribeAppInstance",
    "Description": "Returns the full details of an ``AppInstance``"
  },
  {
    "API": "chime-sdk-identity:DescribeAppInstanceAdmin",
    "EventSource": "chime-sdk-identity",
    "EventName": "DescribeAppInstanceAdmin",
    "Description": "Returns the full details of an ``AppInstanceAdmin``"
  },
  {
    "API": "chime-sdk-identity:DescribeAppInstanceBot",
    "EventSource": "chime-sdk-identity",
    "EventName": "DescribeAppInstanceBot",
    "Description": "The ``AppInstanceBot's`` information"
  },
  {
    "API": "chime-sdk-identity:DescribeAppInstanceUser",
    "EventSource": "chime-sdk-identity",
    "EventName": "DescribeAppInstanceUser",
    "Description": "Returns the full details of an ``AppInstanceUser``"
  },
  {
    "API": "chime-sdk-identity:DescribeAppInstanceUserEndpoint",
    "EventSource": "chime-sdk-identity",
    "EventName": "DescribeAppInstanceUserEndpoint",
    "Description": "Returns the full details of an ``AppInstanceUserEndpoint``"
  },
  {
    "API": "chime-sdk-identity:GeneratePresignedUrl",
    "EventSource": "chime-sdk-identity",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "chime-sdk-identity:GetAppInstanceRetentionSettings",
    "EventSource": "chime-sdk-identity",
    "EventName": "GetAppInstanceRetentionSettings",
    "Description": "Gets the retention settings for an ``AppInstance``"
  },
  {
    "API": "chime-sdk-identity:ListAppInstanceAdmins",
    "EventSource": "chime-sdk-identity",
    "EventName": "ListAppInstanceAdmins",
    "Description": "Returns a list of the administrators in the ``AppInstance``"
  },
  {
    "API": "chime-sdk-identity:ListAppInstanceBots",
    "EventSource": "chime-sdk-identity",
    "EventName": "ListAppInstanceBots",
    "Description": "Lists all ``AppInstanceBots`` created under a single ``AppInstance``"
  },
  {
    "API": "chime-sdk-identity:ListAppInstanceUserEndpoints",
    "EventSource": "chime-sdk-identity",
    "EventName": "ListAppInstanceUserEndpoints",
    "Description": "Lists all the ``AppInstanceUserEndpoints`` created under a single ``AppInstanceUser``"
  },
  {
    "API": "chime-sdk-identity:ListAppInstanceUsers",
    "EventSource": "chime-sdk-identity",
    "EventName": "ListAppInstanceUsers",
    "Description": "List all ``AppInstanceUsers`` created under a single ``AppInstance``"
  },
  {
    "API": "chime-sdk-identity:ListAppInstances",
    "EventSource": "chime-sdk-identity",
    "EventName": "ListAppInstances",
    "Description": "Lists all Amazon Chime ``AppInstance``s created under a single AWS account"
  },
  {
    "API": "chime-sdk-identity:ListTagsForResource",
    "EventSource": "chime-sdk-identity",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags applied to an Amazon Chime SDK identity resource"
  },
  {
    "API": "chime-sdk-identity:PutAppInstanceRetentionSettings",
    "EventSource": "chime-sdk-identity",
    "EventName": "PutAppInstanceRetentionSettings",
    "Description": "Sets the amount of time in days that a given ``AppInstance`` retains data"
  },
  {
    "API": "chime-sdk-identity:PutAppInstanceUserExpirationSettings",
    "EventSource": "chime-sdk-identity",
    "EventName": "PutAppInstanceUserExpirationSettings",
    "Description": "Sets the number of days before the ``AppInstanceUser`` is automatically deleted"
  },
  {
    "API": "chime-sdk-identity:RegisterAppInstanceUserEndpoint",
    "EventSource": "chime-sdk-identity",
    "EventName": "RegisterAppInstanceUserEndpoint",
    "Description": "Registers an endpoint under an Amazon Chime ``AppInstanceUser``"
  },
  {
    "API": "chime-sdk-identity:TagResource",
    "EventSource": "chime-sdk-identity",
    "EventName": "TagResource",
    "Description": "Applies the specified tags to the specified Amazon Chime SDK identity resource"
  },
  {
    "API": "chime-sdk-identity:UntagResource",
    "EventSource": "chime-sdk-identity",
    "EventName": "UntagResource",
    "Description": "Removes the specified tags from the specified Amazon Chime SDK identity resource"
  },
  {
    "API": "chime-sdk-identity:UpdateAppInstance",
    "EventSource": "chime-sdk-identity",
    "EventName": "UpdateAppInstance",
    "Description": "Updates ``AppInstance`` metadata"
  },
  {
    "API": "chime-sdk-identity:UpdateAppInstanceBot",
    "EventSource": "chime-sdk-identity",
    "EventName": "UpdateAppInstanceBot",
    "Description": "Updates the name and metadata of an ``AppInstanceBot``"
  },
  {
    "API": "chime-sdk-identity:UpdateAppInstanceUser",
    "EventSource": "chime-sdk-identity",
    "EventName": "UpdateAppInstanceUser",
    "Description": "Updates the details of an ``AppInstanceUser``"
  },
  {
    "API": "chime-sdk-identity:UpdateAppInstanceUserEndpoint",
    "EventSource": "chime-sdk-identity",
    "EventName": "UpdateAppInstanceUserEndpoint",
    "Description": "Updates the details of an ``AppInstanceUserEndpoint``"
  },
  {
    "API": "chime-sdk-media-pipelines:CreateMediaCapturePipeline",
    "EventSource": "chime-sdk-media-pipelines",
    "EventName": "CreateMediaCapturePipeline",
    "Description": "Creates a media pipeline"
  },
  {
    "API": "chime-sdk-media-pipelines:CreateMediaConcatenationPipeline",
    "EventSource": "chime-sdk-media-pipelines",
    "EventName": "CreateMediaConcatenationPipeline",
    "Description": "Creates a media concatenation pipeline"
  },
  {
    "API": "chime-sdk-media-pipelines:CreateMediaInsightsPipeline",
    "EventSource": "chime-sdk-media-pipelines",
    "EventName": "CreateMediaInsightsPipeline",
    "Description": "Creates a media insights pipeline"
  },
  {
    "API": "chime-sdk-media-pipelines:CreateMediaInsightsPipelineConfiguration",
    "EventSource": "chime-sdk-media-pipelines",
    "EventName": "CreateMediaInsightsPipelineConfiguration",
    "Description": "A structure that contains the static configurations for a media insights pipeline"
  },
  {
    "API": "chime-sdk-media-pipelines:CreateMediaLiveConnectorPipeline",
    "EventSource": "chime-sdk-media-pipelines",
    "EventName": "CreateMediaLiveConnectorPipeline",
    "Description": "Creates a media live connector pipeline in an Amazon Chime SDK meeting"
  },
  {
    "API": "chime-sdk-media-pipelines:CreateMediaPipelineKinesisVideoStreamPool",
    "EventSource": "chime-sdk-media-pipelines",
    "EventName": "CreateMediaPipelineKinesisVideoStreamPool",
    "Description": "Creates an Kinesis video stream pool for the media pipeline"
  },
  {
    "API": "chime-sdk-media-pipelines:CreateMediaStreamPipeline",
    "EventSource": "chime-sdk-media-pipelines",
    "EventName": "CreateMediaStreamPipeline",
    "Description": "Creates a streaming media pipeline"
  },
  {
    "API": "chime-sdk-media-pipelines:DeleteMediaCapturePipeline",
    "EventSource": "chime-sdk-media-pipelines",
    "EventName": "DeleteMediaCapturePipeline",
    "Description": "Deletes the media pipeline"
  },
  {
    "API": "chime-sdk-media-pipelines:DeleteMediaInsightsPipelineConfiguration",
    "EventSource": "chime-sdk-media-pipelines",
    "EventName": "DeleteMediaInsightsPipelineConfiguration",
    "Description": "Deletes the specified configuration settings"
  },
  {
    "API": "chime-sdk-media-pipelines:DeleteMediaPipeline",
    "EventSource": "chime-sdk-media-pipelines",
    "EventName": "DeleteMediaPipeline",
    "Description": "Deletes the media pipeline"
  },
  {
    "API": "chime-sdk-media-pipelines:DeleteMediaPipelineKinesisVideoStreamPool",
    "EventSource": "chime-sdk-media-pipelines",
    "EventName": "DeleteMediaPipelineKinesisVideoStreamPool",
    "Description": "Deletes an Kinesis video stream pool"
  },
  {
    "API": "chime-sdk-media-pipelines:GeneratePresignedUrl",
    "EventSource": "chime-sdk-media-pipelines",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "chime-sdk-media-pipelines:GetMediaCapturePipeline",
    "EventSource": "chime-sdk-media-pipelines",
    "EventName": "GetMediaCapturePipeline",
    "Description": "Gets an existing media pipeline"
  },
  {
    "API": "chime-sdk-media-pipelines:GetMediaInsightsPipelineConfiguration",
    "EventSource": "chime-sdk-media-pipelines",
    "EventName": "GetMediaInsightsPipelineConfiguration",
    "Description": "Gets the configuration settings for a media insights pipeline"
  },
  {
    "API": "chime-sdk-media-pipelines:GetMediaPipeline",
    "EventSource": "chime-sdk-media-pipelines",
    "EventName": "GetMediaPipeline",
    "Description": "Gets an existing media pipeline"
  },
  {
    "API": "chime-sdk-media-pipelines:GetMediaPipelineKinesisVideoStreamPool",
    "EventSource": "chime-sdk-media-pipelines",
    "EventName": "GetMediaPipelineKinesisVideoStreamPool",
    "Description": "Gets an Kinesis video stream pool"
  },
  {
    "API": "chime-sdk-media-pipelines:GetSpeakerSearchTask",
    "EventSource": "chime-sdk-media-pipelines",
    "EventName": "GetSpeakerSearchTask",
    "Description": "Retrieves the details of the specified speaker search task"
  },
  {
    "API": "chime-sdk-media-pipelines:GetVoiceToneAnalysisTask",
    "EventSource": "chime-sdk-media-pipelines",
    "EventName": "GetVoiceToneAnalysisTask",
    "Description": "Retrieves the details of a voice tone analysis task"
  },
  {
    "API": "chime-sdk-media-pipelines:ListMediaCapturePipelines",
    "EventSource": "chime-sdk-media-pipelines",
    "EventName": "ListMediaCapturePipelines",
    "Description": "Returns a list of media pipelines"
  },
  {
    "API": "chime-sdk-media-pipelines:ListMediaInsightsPipelineConfigurations",
    "EventSource": "chime-sdk-media-pipelines",
    "EventName": "ListMediaInsightsPipelineConfigurations",
    "Description": "Lists the available media insights pipeline configurations"
  },
  {
    "API": "chime-sdk-media-pipelines:ListMediaPipelineKinesisVideoStreamPools",
    "EventSource": "chime-sdk-media-pipelines",
    "EventName": "ListMediaPipelineKinesisVideoStreamPools",
    "Description": "Lists the video stream pools in the media pipeline"
  },
  {
    "API": "chime-sdk-media-pipelines:ListMediaPipelines",
    "EventSource": "chime-sdk-media-pipelines",
    "EventName": "ListMediaPipelines",
    "Description": "Returns a list of media pipelines"
  },
  {
    "API": "chime-sdk-media-pipelines:ListTagsForResource",
    "EventSource": "chime-sdk-media-pipelines",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags available for a media pipeline"
  },
  {
    "API": "chime-sdk-media-pipelines:StartSpeakerSearchTask",
    "EventSource": "chime-sdk-media-pipelines",
    "EventName": "StartSpeakerSearchTask",
    "Description": "Starts a speaker search task"
  },
  {
    "API": "chime-sdk-media-pipelines:StartVoiceToneAnalysisTask",
    "EventSource": "chime-sdk-media-pipelines",
    "EventName": "StartVoiceToneAnalysisTask",
    "Description": "Starts a voice tone analysis task"
  },
  {
    "API": "chime-sdk-media-pipelines:StopSpeakerSearchTask",
    "EventSource": "chime-sdk-media-pipelines",
    "EventName": "StopSpeakerSearchTask",
    "Description": "Stops a speaker search task"
  },
  {
    "API": "chime-sdk-media-pipelines:StopVoiceToneAnalysisTask",
    "EventSource": "chime-sdk-media-pipelines",
    "EventName": "StopVoiceToneAnalysisTask",
    "Description": "Stops a voice tone analysis task"
  },
  {
    "API": "chime-sdk-media-pipelines:TagResource",
    "EventSource": "chime-sdk-media-pipelines",
    "EventName": "TagResource",
    "Description": "The ARN of the media pipeline that you want to tag"
  },
  {
    "API": "chime-sdk-media-pipelines:UntagResource",
    "EventSource": "chime-sdk-media-pipelines",
    "EventName": "UntagResource",
    "Description": "Removes any tags from a media pipeline"
  },
  {
    "API": "chime-sdk-media-pipelines:UpdateMediaInsightsPipelineConfiguration",
    "EventSource": "chime-sdk-media-pipelines",
    "EventName": "UpdateMediaInsightsPipelineConfiguration",
    "Description": "Updates the media insights pipeline's configuration settings"
  },
  {
    "API": "chime-sdk-media-pipelines:UpdateMediaInsightsPipelineStatus",
    "EventSource": "chime-sdk-media-pipelines",
    "EventName": "UpdateMediaInsightsPipelineStatus",
    "Description": "Updates the status of a media insights pipeline"
  },
  {
    "API": "chime-sdk-media-pipelines:UpdateMediaPipelineKinesisVideoStreamPool",
    "EventSource": "chime-sdk-media-pipelines",
    "EventName": "UpdateMediaPipelineKinesisVideoStreamPool",
    "Description": "Updates an Kinesis video stream pool in a media pipeline"
  },
  {
    "API": "chime-sdk-meetings:BatchCreateAttendee",
    "EventSource": "chime-sdk-meetings",
    "EventName": "BatchCreateAttendee",
    "Description": "Creates up to 100 attendees for an active Amazon Chime SDK meeting"
  },
  {
    "API": "chime-sdk-meetings:BatchUpdateAttendeeCapabilitiesExcept",
    "EventSource": "chime-sdk-meetings",
    "EventName": "BatchUpdateAttendeeCapabilitiesExcept",
    "Description": "Updates ``AttendeeCapabilities`` except the capabilities listed in an ``ExcludedAttendeeIds`` table"
  },
  {
    "API": "chime-sdk-meetings:CreateAttendee",
    "EventSource": "chime-sdk-meetings",
    "EventName": "CreateAttendee",
    "Description": "Creates a new attendee for an active Amazon Chime SDK meeting"
  },
  {
    "API": "chime-sdk-meetings:CreateMeeting",
    "EventSource": "chime-sdk-meetings",
    "EventName": "CreateMeeting",
    "Description": "Creates a new Amazon Chime SDK meeting in the specified media Region with no initial attendees"
  },
  {
    "API": "chime-sdk-meetings:CreateMeetingWithAttendees",
    "EventSource": "chime-sdk-meetings",
    "EventName": "CreateMeetingWithAttendees",
    "Description": "Creates a new Amazon Chime SDK meeting in the specified media Region, with attendees"
  },
  {
    "API": "chime-sdk-meetings:DeleteAttendee",
    "EventSource": "chime-sdk-meetings",
    "EventName": "DeleteAttendee",
    "Description": "Deletes an attendee from the specified Amazon Chime SDK meeting and deletes their ``JoinToken``"
  },
  {
    "API": "chime-sdk-meetings:DeleteMeeting",
    "EventSource": "chime-sdk-meetings",
    "EventName": "DeleteMeeting",
    "Description": "Deletes the specified Amazon Chime SDK meeting"
  },
  {
    "API": "chime-sdk-meetings:GeneratePresignedUrl",
    "EventSource": "chime-sdk-meetings",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "chime-sdk-meetings:GetAttendee",
    "EventSource": "chime-sdk-meetings",
    "EventName": "GetAttendee",
    "Description": "Gets the Amazon Chime SDK attendee details for a specified meeting ID and attendee ID"
  },
  {
    "API": "chime-sdk-meetings:GetMeeting",
    "EventSource": "chime-sdk-meetings",
    "EventName": "GetMeeting",
    "Description": "Gets the Amazon Chime SDK meeting details for the specified meeting ID"
  },
  {
    "API": "chime-sdk-meetings:ListAttendees",
    "EventSource": "chime-sdk-meetings",
    "EventName": "ListAttendees",
    "Description": "Lists the attendees for the specified Amazon Chime SDK meeting"
  },
  {
    "API": "chime-sdk-meetings:ListTagsForResource",
    "EventSource": "chime-sdk-meetings",
    "EventName": "ListTagsForResource",
    "Description": "Returns a list of the tags available for the specified resource"
  },
  {
    "API": "chime-sdk-meetings:StartMeetingTranscription",
    "EventSource": "chime-sdk-meetings",
    "EventName": "StartMeetingTranscription",
    "Description": "Starts transcription for the specified ``meetingId``"
  },
  {
    "API": "chime-sdk-meetings:StopMeetingTranscription",
    "EventSource": "chime-sdk-meetings",
    "EventName": "StopMeetingTranscription",
    "Description": "Stops transcription for the specified ``meetingId``"
  },
  {
    "API": "chime-sdk-meetings:TagResource",
    "EventSource": "chime-sdk-meetings",
    "EventName": "TagResource",
    "Description": "The resource that supports tags"
  },
  {
    "API": "chime-sdk-meetings:UntagResource",
    "EventSource": "chime-sdk-meetings",
    "EventName": "UntagResource",
    "Description": "Removes the specified tags from the specified resources"
  },
  {
    "API": "chime-sdk-meetings:UpdateAttendeeCapabilities",
    "EventSource": "chime-sdk-meetings",
    "EventName": "UpdateAttendeeCapabilities",
    "Description": "The capabilities that you want to update"
  },
  {
    "API": "chime-sdk-messaging:AssociateChannelFlow",
    "EventSource": "chime-sdk-messaging",
    "EventName": "AssociateChannelFlow",
    "Description": "Associates a channel flow with a channel"
  },
  {
    "API": "chime-sdk-messaging:BatchCreateChannelMembership",
    "EventSource": "chime-sdk-messaging",
    "EventName": "BatchCreateChannelMembership",
    "Description": "Adds a specified number of users and bots to a channel"
  },
  {
    "API": "chime-sdk-messaging:ChannelFlowCallback",
    "EventSource": "chime-sdk-messaging",
    "EventName": "ChannelFlowCallback",
    "Description": "Calls back Amazon Chime SDK messaging with a processing response message"
  },
  {
    "API": "chime-sdk-messaging:CreateChannel",
    "EventSource": "chime-sdk-messaging",
    "EventName": "CreateChannel",
    "Description": "Creates a channel to which you can add users and send messages"
  },
  {
    "API": "chime-sdk-messaging:CreateChannelBan",
    "EventSource": "chime-sdk-messaging",
    "EventName": "CreateChannelBan",
    "Description": "Permanently bans a member from a channel"
  },
  {
    "API": "chime-sdk-messaging:CreateChannelFlow",
    "EventSource": "chime-sdk-messaging",
    "EventName": "CreateChannelFlow",
    "Description": "Creates a channel flow, a container for processors"
  },
  {
    "API": "chime-sdk-messaging:CreateChannelMembership",
    "EventSource": "chime-sdk-messaging",
    "EventName": "CreateChannelMembership",
    "Description": "Adds a member to a channel"
  },
  {
    "API": "chime-sdk-messaging:CreateChannelModerator",
    "EventSource": "chime-sdk-messaging",
    "EventName": "CreateChannelModerator",
    "Description": "Creates a new ``ChannelModerator``"
  },
  {
    "API": "chime-sdk-messaging:DeleteChannel",
    "EventSource": "chime-sdk-messaging",
    "EventName": "DeleteChannel",
    "Description": "Immediately makes a channel and its memberships inaccessible and marks them for deletion"
  },
  {
    "API": "chime-sdk-messaging:DeleteChannelBan",
    "EventSource": "chime-sdk-messaging",
    "EventName": "DeleteChannelBan",
    "Description": "Removes a member from a channel's ban list"
  },
  {
    "API": "chime-sdk-messaging:DeleteChannelFlow",
    "EventSource": "chime-sdk-messaging",
    "EventName": "DeleteChannelFlow",
    "Description": "Deletes a channel flow, an irreversible process"
  },
  {
    "API": "chime-sdk-messaging:DeleteChannelMembership",
    "EventSource": "chime-sdk-messaging",
    "EventName": "DeleteChannelMembership",
    "Description": "Removes a member from a channel"
  },
  {
    "API": "chime-sdk-messaging:DeleteChannelMessage",
    "EventSource": "chime-sdk-messaging",
    "EventName": "DeleteChannelMessage",
    "Description": "Deletes a channel message"
  },
  {
    "API": "chime-sdk-messaging:DeleteChannelModerator",
    "EventSource": "chime-sdk-messaging",
    "EventName": "DeleteChannelModerator",
    "Description": "Deletes a channel moderator"
  },
  {
    "API": "chime-sdk-messaging:DeleteMessagingStreamingConfigurations",
    "EventSource": "chime-sdk-messaging",
    "EventName": "DeleteMessagingStreamingConfigurations",
    "Description": "Deletes the streaming configurations for an ``AppInstance``"
  },
  {
    "API": "chime-sdk-messaging:DescribeChannel",
    "EventSource": "chime-sdk-messaging",
    "EventName": "DescribeChannel",
    "Description": "Returns the full details of a channel in an Amazon Chime ``AppInstance``"
  },
  {
    "API": "chime-sdk-messaging:DescribeChannelBan",
    "EventSource": "chime-sdk-messaging",
    "EventName": "DescribeChannelBan",
    "Description": "Returns the full details of a channel ban"
  },
  {
    "API": "chime-sdk-messaging:DescribeChannelFlow",
    "EventSource": "chime-sdk-messaging",
    "EventName": "DescribeChannelFlow",
    "Description": "Returns the full details of a channel flow in an Amazon Chime ``AppInstance``"
  },
  {
    "API": "chime-sdk-messaging:DescribeChannelMembership",
    "EventSource": "chime-sdk-messaging",
    "EventName": "DescribeChannelMembership",
    "Description": "Returns the full details of a user's channel membership"
  },
  {
    "API": "chime-sdk-messaging:DescribeChannelMembershipForAppInstanceUser",
    "EventSource": "chime-sdk-messaging",
    "EventName": "DescribeChannelMembershipForAppInstanceUser",
    "Description": "Returns the details of a channel based on the membership of the specified ``AppInstanceUser`` or ``AppInstanceBot``"
  },
  {
    "API": "chime-sdk-messaging:DescribeChannelModeratedByAppInstanceUser",
    "EventSource": "chime-sdk-messaging",
    "EventName": "DescribeChannelModeratedByAppInstanceUser",
    "Description": "Returns the full details of a channel moderated by the specified ``AppInstanceUser`` or ``AppInstanceBot``"
  },
  {
    "API": "chime-sdk-messaging:DescribeChannelModerator",
    "EventSource": "chime-sdk-messaging",
    "EventName": "DescribeChannelModerator",
    "Description": "Returns the full details of a single ChannelModerator"
  },
  {
    "API": "chime-sdk-messaging:DisassociateChannelFlow",
    "EventSource": "chime-sdk-messaging",
    "EventName": "DisassociateChannelFlow",
    "Description": "Disassociates a channel flow from all its channels"
  },
  {
    "API": "chime-sdk-messaging:GeneratePresignedUrl",
    "EventSource": "chime-sdk-messaging",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "chime-sdk-messaging:GetChannelMembershipPreferences",
    "EventSource": "chime-sdk-messaging",
    "EventName": "GetChannelMembershipPreferences",
    "Description": "Gets the membership preferences of an ``AppInstanceUser`` or ``AppInstanceBot`` for the specified channel"
  },
  {
    "API": "chime-sdk-messaging:GetChannelMessage",
    "EventSource": "chime-sdk-messaging",
    "EventName": "GetChannelMessage",
    "Description": "Gets the full details of a channel message"
  },
  {
    "API": "chime-sdk-messaging:GetChannelMessageStatus",
    "EventSource": "chime-sdk-messaging",
    "EventName": "GetChannelMessageStatus",
    "Description": "Gets message status for a specified ``messageId``"
  },
  {
    "API": "chime-sdk-messaging:GetMessagingSessionEndpoint",
    "EventSource": "chime-sdk-messaging",
    "EventName": "GetMessagingSessionEndpoint",
    "Description": "The details of the endpoint for the messaging session"
  },
  {
    "API": "chime-sdk-messaging:GetMessagingStreamingConfigurations",
    "EventSource": "chime-sdk-messaging",
    "EventName": "GetMessagingStreamingConfigurations",
    "Description": "Retrieves the data streaming configuration for an ``AppInstance``"
  },
  {
    "API": "chime-sdk-messaging:ListChannelBans",
    "EventSource": "chime-sdk-messaging",
    "EventName": "ListChannelBans",
    "Description": "Lists all the users and bots banned from a particular channel"
  },
  {
    "API": "chime-sdk-messaging:ListChannelFlows",
    "EventSource": "chime-sdk-messaging",
    "EventName": "ListChannelFlows",
    "Description": "Returns a paginated lists of all the channel flows created under a single Chime"
  },
  {
    "API": "chime-sdk-messaging:ListChannelMemberships",
    "EventSource": "chime-sdk-messaging",
    "EventName": "ListChannelMemberships",
    "Description": "Lists all channel memberships in a channel"
  },
  {
    "API": "chime-sdk-messaging:ListChannelMembershipsForAppInstanceUser",
    "EventSource": "chime-sdk-messaging",
    "EventName": "ListChannelMembershipsForAppInstanceUser",
    "Description": "Lists all channels that an ``AppInstanceUser`` or ``AppInstanceBot`` is a part of"
  },
  {
    "API": "chime-sdk-messaging:ListChannelMessages",
    "EventSource": "chime-sdk-messaging",
    "EventName": "ListChannelMessages",
    "Description": "List all the messages in a channel"
  },
  {
    "API": "chime-sdk-messaging:ListChannelModerators",
    "EventSource": "chime-sdk-messaging",
    "EventName": "ListChannelModerators",
    "Description": "Lists all the moderators for a channel"
  },
  {
    "API": "chime-sdk-messaging:ListChannels",
    "EventSource": "chime-sdk-messaging",
    "EventName": "ListChannels",
    "Description": "Lists all Channels created under a single Chime App as a paginated list"
  },
  {
    "API": "chime-sdk-messaging:ListChannelsAssociatedWithChannelFlow",
    "EventSource": "chime-sdk-messaging",
    "EventName": "ListChannelsAssociatedWithChannelFlow",
    "Description": "Lists all channels associated with a specified channel flow"
  },
  {
    "API": "chime-sdk-messaging:ListChannelsModeratedByAppInstanceUser",
    "EventSource": "chime-sdk-messaging",
    "EventName": "ListChannelsModeratedByAppInstanceUser",
    "Description": "A list of the channels moderated by an ``AppInstanceUser``"
  },
  {
    "API": "chime-sdk-messaging:ListSubChannels",
    "EventSource": "chime-sdk-messaging",
    "EventName": "ListSubChannels",
    "Description": "Lists all the SubChannels in an elastic channel when given a channel ID"
  },
  {
    "API": "chime-sdk-messaging:ListTagsForResource",
    "EventSource": "chime-sdk-messaging",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags applied to an Amazon Chime SDK messaging resource"
  },
  {
    "API": "chime-sdk-messaging:PutChannelExpirationSettings",
    "EventSource": "chime-sdk-messaging",
    "EventName": "PutChannelExpirationSettings",
    "Description": "Sets the number of days before the channel is automatically deleted"
  },
  {
    "API": "chime-sdk-messaging:PutChannelMembershipPreferences",
    "EventSource": "chime-sdk-messaging",
    "EventName": "PutChannelMembershipPreferences",
    "Description": "Sets the membership preferences of an ``AppInstanceUser`` or ``AppInstanceBot`` for the specified channel"
  },
  {
    "API": "chime-sdk-messaging:PutMessagingStreamingConfigurations",
    "EventSource": "chime-sdk-messaging",
    "EventName": "PutMessagingStreamingConfigurations",
    "Description": "Sets the data streaming configuration for an ``AppInstance``"
  },
  {
    "API": "chime-sdk-messaging:RedactChannelMessage",
    "EventSource": "chime-sdk-messaging",
    "EventName": "RedactChannelMessage",
    "Description": "Redacts message content, but not metadata"
  },
  {
    "API": "chime-sdk-messaging:SearchChannels",
    "EventSource": "chime-sdk-messaging",
    "EventName": "SearchChannels",
    "Description": "Allows the ``ChimeBearer`` to search channels by channel members"
  },
  {
    "API": "chime-sdk-messaging:SendChannelMessage",
    "EventSource": "chime-sdk-messaging",
    "EventName": "SendChannelMessage",
    "Description": "Sends a message to a particular channel that the member is a part of"
  },
  {
    "API": "chime-sdk-messaging:TagResource",
    "EventSource": "chime-sdk-messaging",
    "EventName": "TagResource",
    "Description": "Applies the specified tags to the specified Amazon Chime SDK messaging resource"
  },
  {
    "API": "chime-sdk-messaging:UntagResource",
    "EventSource": "chime-sdk-messaging",
    "EventName": "UntagResource",
    "Description": "Removes the specified tags from the specified Amazon Chime SDK messaging resource"
  },
  {
    "API": "chime-sdk-messaging:UpdateChannel",
    "EventSource": "chime-sdk-messaging",
    "EventName": "UpdateChannel",
    "Description": "Update a channel's attributes"
  },
  {
    "API": "chime-sdk-messaging:UpdateChannelFlow",
    "EventSource": "chime-sdk-messaging",
    "EventName": "UpdateChannelFlow",
    "Description": "Updates channel flow attributes"
  },
  {
    "API": "chime-sdk-messaging:UpdateChannelMessage",
    "EventSource": "chime-sdk-messaging",
    "EventName": "UpdateChannelMessage",
    "Description": "Updates the content of a message"
  },
  {
    "API": "chime-sdk-messaging:UpdateChannelReadMarker",
    "EventSource": "chime-sdk-messaging",
    "EventName": "UpdateChannelReadMarker",
    "Description": "The details of the time when a user last read messages in a channel"
  },
  {
    "API": "chime-sdk-voice:AssociatePhoneNumbersWithVoiceConnector",
    "EventSource": "chime-sdk-voice",
    "EventName": "AssociatePhoneNumbersWithVoiceConnector",
    "Description": "Associates phone numbers with the specified Amazon Chime SDK Voice Connector"
  },
  {
    "API": "chime-sdk-voice:AssociatePhoneNumbersWithVoiceConnectorGroup",
    "EventSource": "chime-sdk-voice",
    "EventName": "AssociatePhoneNumbersWithVoiceConnectorGroup",
    "Description": "Associates phone numbers with the specified Amazon Chime SDK Voice Connector group"
  },
  {
    "API": "chime-sdk-voice:BatchDeletePhoneNumber",
    "EventSource": "chime-sdk-voice",
    "EventName": "BatchDeletePhoneNumber",
    "Description": "Moves phone numbers into the **Deletion queue**"
  },
  {
    "API": "chime-sdk-voice:BatchUpdatePhoneNumber",
    "EventSource": "chime-sdk-voice",
    "EventName": "BatchUpdatePhoneNumber",
    "Description": "Updates phone number product types, calling names, or phone number names"
  },
  {
    "API": "chime-sdk-voice:CreatePhoneNumberOrder",
    "EventSource": "chime-sdk-voice",
    "EventName": "CreatePhoneNumberOrder",
    "Description": "Creates an order for phone numbers to be provisioned"
  },
  {
    "API": "chime-sdk-voice:CreateProxySession",
    "EventSource": "chime-sdk-voice",
    "EventName": "CreateProxySession",
    "Description": "Creates a proxy session for the specified Amazon Chime SDK Voice Connector for the specified participant phone numbers"
  },
  {
    "API": "chime-sdk-voice:CreateSipMediaApplication",
    "EventSource": "chime-sdk-voice",
    "EventName": "CreateSipMediaApplication",
    "Description": "Creates a SIP media application"
  },
  {
    "API": "chime-sdk-voice:CreateSipMediaApplicationCall",
    "EventSource": "chime-sdk-voice",
    "EventName": "CreateSipMediaApplicationCall",
    "Description": "Creates an outbound call to a phone number from the phone number specified in the request, and it invokes the endpoint of the specified ``sipMediaApplicationId``"
  },
  {
    "API": "chime-sdk-voice:CreateSipRule",
    "EventSource": "chime-sdk-voice",
    "EventName": "CreateSipRule",
    "Description": "Creates a SIP rule, which can be used to run a SIP media application as a target for a specific trigger type"
  },
  {
    "API": "chime-sdk-voice:CreateVoiceConnector",
    "EventSource": "chime-sdk-voice",
    "EventName": "CreateVoiceConnector",
    "Description": "Creates an Amazon Chime SDK Voice Connector"
  },
  {
    "API": "chime-sdk-voice:CreateVoiceConnectorGroup",
    "EventSource": "chime-sdk-voice",
    "EventName": "CreateVoiceConnectorGroup",
    "Description": "Creates an Amazon Chime SDK Voice Connector group under the administrator's AWS account"
  },
  {
    "API": "chime-sdk-voice:CreateVoiceProfile",
    "EventSource": "chime-sdk-voice",
    "EventName": "CreateVoiceProfile",
    "Description": "Creates a voice profile, which consists of an enrolled user and their latest voice print"
  },
  {
    "API": "chime-sdk-voice:CreateVoiceProfileDomain",
    "EventSource": "chime-sdk-voice",
    "EventName": "CreateVoiceProfileDomain",
    "Description": "Creates a voice profile domain, a collection of voice profiles, their voice prints, and encrypted enrollment audio"
  },
  {
    "API": "chime-sdk-voice:DeletePhoneNumber",
    "EventSource": "chime-sdk-voice",
    "EventName": "DeletePhoneNumber",
    "Description": "Moves the specified phone number into the **Deletion queue**"
  },
  {
    "API": "chime-sdk-voice:DeleteProxySession",
    "EventSource": "chime-sdk-voice",
    "EventName": "DeleteProxySession",
    "Description": "Deletes the specified proxy session from the specified Amazon Chime SDK Voice Connector"
  },
  {
    "API": "chime-sdk-voice:DeleteSipMediaApplication",
    "EventSource": "chime-sdk-voice",
    "EventName": "DeleteSipMediaApplication",
    "Description": "Deletes a SIP media application"
  },
  {
    "API": "chime-sdk-voice:DeleteSipRule",
    "EventSource": "chime-sdk-voice",
    "EventName": "DeleteSipRule",
    "Description": "Deletes a SIP rule"
  },
  {
    "API": "chime-sdk-voice:DeleteVoiceConnector",
    "EventSource": "chime-sdk-voice",
    "EventName": "DeleteVoiceConnector",
    "Description": "Deletes an Amazon Chime SDK Voice Connector"
  },
  {
    "API": "chime-sdk-voice:DeleteVoiceConnectorEmergencyCallingConfiguration",
    "EventSource": "chime-sdk-voice",
    "EventName": "DeleteVoiceConnectorEmergencyCallingConfiguration",
    "Description": "Deletes the emergency calling details from the specified Amazon Chime SDK Voice Connector"
  },
  {
    "API": "chime-sdk-voice:DeleteVoiceConnectorGroup",
    "EventSource": "chime-sdk-voice",
    "EventName": "DeleteVoiceConnectorGroup",
    "Description": "Deletes an Amazon Chime SDK Voice Connector group"
  },
  {
    "API": "chime-sdk-voice:DeleteVoiceConnectorOrigination",
    "EventSource": "chime-sdk-voice",
    "EventName": "DeleteVoiceConnectorOrigination",
    "Description": "Deletes the origination settings for the specified Amazon Chime SDK Voice Connector"
  },
  {
    "API": "chime-sdk-voice:DeleteVoiceConnectorProxy",
    "EventSource": "chime-sdk-voice",
    "EventName": "DeleteVoiceConnectorProxy",
    "Description": "Deletes the proxy configuration from the specified Amazon Chime SDK Voice Connector"
  },
  {
    "API": "chime-sdk-voice:DeleteVoiceConnectorStreamingConfiguration",
    "EventSource": "chime-sdk-voice",
    "EventName": "DeleteVoiceConnectorStreamingConfiguration",
    "Description": "Deletes a Voice Connector's streaming configuration"
  },
  {
    "API": "chime-sdk-voice:DeleteVoiceConnectorTermination",
    "EventSource": "chime-sdk-voice",
    "EventName": "DeleteVoiceConnectorTermination",
    "Description": "Deletes the termination settings for the specified Amazon Chime SDK Voice Connector"
  },
  {
    "API": "chime-sdk-voice:DeleteVoiceConnectorTerminationCredentials",
    "EventSource": "chime-sdk-voice",
    "EventName": "DeleteVoiceConnectorTerminationCredentials",
    "Description": "Deletes the specified SIP credentials used by your equipment to authenticate during call termination"
  },
  {
    "API": "chime-sdk-voice:DeleteVoiceProfile",
    "EventSource": "chime-sdk-voice",
    "EventName": "DeleteVoiceProfile",
    "Description": "Deletes a voice profile, including its voice print and enrollment data"
  },
  {
    "API": "chime-sdk-voice:DeleteVoiceProfileDomain",
    "EventSource": "chime-sdk-voice",
    "EventName": "DeleteVoiceProfileDomain",
    "Description": "Deletes all voice profiles in the domain"
  },
  {
    "API": "chime-sdk-voice:DisassociatePhoneNumbersFromVoiceConnector",
    "EventSource": "chime-sdk-voice",
    "EventName": "DisassociatePhoneNumbersFromVoiceConnector",
    "Description": "Disassociates the specified phone numbers from the specified Amazon Chime SDK Voice Connector"
  },
  {
    "API": "chime-sdk-voice:DisassociatePhoneNumbersFromVoiceConnectorGroup",
    "EventSource": "chime-sdk-voice",
    "EventName": "DisassociatePhoneNumbersFromVoiceConnectorGroup",
    "Description": "Disassociates the specified phone numbers from the specified Amazon Chime SDK Voice Connector group"
  },
  {
    "API": "chime-sdk-voice:GeneratePresignedUrl",
    "EventSource": "chime-sdk-voice",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "chime-sdk-voice:GetGlobalSettings",
    "EventSource": "chime-sdk-voice",
    "EventName": "GetGlobalSettings",
    "Description": "Retrieves the global settings for the Amazon Chime SDK Voice Connectors in an AWS account"
  },
  {
    "API": "chime-sdk-voice:GetPhoneNumber",
    "EventSource": "chime-sdk-voice",
    "EventName": "GetPhoneNumber",
    "Description": "Retrieves details for the specified phone number ID, such as associations, capabilities, and product type"
  },
  {
    "API": "chime-sdk-voice:GetPhoneNumberOrder",
    "EventSource": "chime-sdk-voice",
    "EventName": "GetPhoneNumberOrder",
    "Description": "Retrieves details for the specified phone number order, such as the order creation timestamp, phone numbers in E"
  },
  {
    "API": "chime-sdk-voice:GetPhoneNumberSettings",
    "EventSource": "chime-sdk-voice",
    "EventName": "GetPhoneNumberSettings",
    "Description": "Retrieves the phone number settings for the administrator's AWS account, such as the default outbound calling name"
  },
  {
    "API": "chime-sdk-voice:GetProxySession",
    "EventSource": "chime-sdk-voice",
    "EventName": "GetProxySession",
    "Description": "Retrieves the specified proxy session details for the specified Amazon Chime SDK Voice Connector"
  },
  {
    "API": "chime-sdk-voice:GetSipMediaApplication",
    "EventSource": "chime-sdk-voice",
    "EventName": "GetSipMediaApplication",
    "Description": "Retrieves the information for a SIP media application, including name, AWS Region, and endpoints"
  },
  {
    "API": "chime-sdk-voice:GetSipMediaApplicationAlexaSkillConfiguration",
    "EventSource": "chime-sdk-voice",
    "EventName": "GetSipMediaApplicationAlexaSkillConfiguration",
    "Description": "Gets the Alexa Skill configuration for the SIP media application"
  },
  {
    "API": "chime-sdk-voice:GetSipMediaApplicationLoggingConfiguration",
    "EventSource": "chime-sdk-voice",
    "EventName": "GetSipMediaApplicationLoggingConfiguration",
    "Description": "Retrieves the logging configuration for the specified SIP media application"
  },
  {
    "API": "chime-sdk-voice:GetSipRule",
    "EventSource": "chime-sdk-voice",
    "EventName": "GetSipRule",
    "Description": "Retrieves the details of a SIP rule, such as the rule ID, name, triggers, and target endpoints"
  },
  {
    "API": "chime-sdk-voice:GetSpeakerSearchTask",
    "EventSource": "chime-sdk-voice",
    "EventName": "GetSpeakerSearchTask",
    "Description": "Retrieves the details of the specified speaker search task"
  },
  {
    "API": "chime-sdk-voice:GetVoiceConnector",
    "EventSource": "chime-sdk-voice",
    "EventName": "GetVoiceConnector",
    "Description": "Retrieves details for the specified Amazon Chime SDK Voice Connector, such as timestamps,name, outbound host, and encryption requirements"
  },
  {
    "API": "chime-sdk-voice:GetVoiceConnectorEmergencyCallingConfiguration",
    "EventSource": "chime-sdk-voice",
    "EventName": "GetVoiceConnectorEmergencyCallingConfiguration",
    "Description": "Retrieves the emergency calling configuration details for the specified Voice Connector"
  },
  {
    "API": "chime-sdk-voice:GetVoiceConnectorGroup",
    "EventSource": "chime-sdk-voice",
    "EventName": "GetVoiceConnectorGroup",
    "Description": "Retrieves details for the specified Amazon Chime SDK Voice Connector group, such as timestamps,name, and associated ``VoiceConnectorItems``"
  },
  {
    "API": "chime-sdk-voice:GetVoiceConnectorLoggingConfiguration",
    "EventSource": "chime-sdk-voice",
    "EventName": "GetVoiceConnectorLoggingConfiguration",
    "Description": "Retrieves the logging configuration settings for the specified Voice Connector"
  },
  {
    "API": "chime-sdk-voice:GetVoiceConnectorOrigination",
    "EventSource": "chime-sdk-voice",
    "EventName": "GetVoiceConnectorOrigination",
    "Description": "Retrieves the origination settings for the specified Voice Connector"
  },
  {
    "API": "chime-sdk-voice:GetVoiceConnectorProxy",
    "EventSource": "chime-sdk-voice",
    "EventName": "GetVoiceConnectorProxy",
    "Description": "Retrieves the proxy configuration details for the specified Amazon Chime SDK Voice Connector"
  },
  {
    "API": "chime-sdk-voice:GetVoiceConnectorStreamingConfiguration",
    "EventSource": "chime-sdk-voice",
    "EventName": "GetVoiceConnectorStreamingConfiguration",
    "Description": "Retrieves the streaming configuration details for the specified Amazon Chime SDK Voice Connector"
  },
  {
    "API": "chime-sdk-voice:GetVoiceConnectorTermination",
    "EventSource": "chime-sdk-voice",
    "EventName": "GetVoiceConnectorTermination",
    "Description": "Retrieves the termination setting details for the specified Voice Connector"
  },
  {
    "API": "chime-sdk-voice:GetVoiceConnectorTerminationHealth",
    "EventSource": "chime-sdk-voice",
    "EventName": "GetVoiceConnectorTerminationHealth",
    "Description": "Retrieves information about the last time a ``SIP OPTIONS`` ping was received from your SIP infrastructure for the specified Amazon Chime SDK Voice Connector"
  },
  {
    "API": "chime-sdk-voice:GetVoiceProfile",
    "EventSource": "chime-sdk-voice",
    "EventName": "GetVoiceProfile",
    "Description": "Retrieves the details of the specified voice profile"
  },
  {
    "API": "chime-sdk-voice:GetVoiceProfileDomain",
    "EventSource": "chime-sdk-voice",
    "EventName": "GetVoiceProfileDomain",
    "Description": "Retrieves the details of the specified voice profile domain"
  },
  {
    "API": "chime-sdk-voice:GetVoiceToneAnalysisTask",
    "EventSource": "chime-sdk-voice",
    "EventName": "GetVoiceToneAnalysisTask",
    "Description": "Retrieves the details of a voice tone analysis task"
  },
  {
    "API": "chime-sdk-voice:ListAvailableVoiceConnectorRegions",
    "EventSource": "chime-sdk-voice",
    "EventName": "ListAvailableVoiceConnectorRegions",
    "Description": "Lists the available AWS Regions in which you can create an Amazon Chime SDK Voice Connector"
  },
  {
    "API": "chime-sdk-voice:ListPhoneNumberOrders",
    "EventSource": "chime-sdk-voice",
    "EventName": "ListPhoneNumberOrders",
    "Description": "Lists the phone numbers for an administrator's Amazon Chime SDK account"
  },
  {
    "API": "chime-sdk-voice:ListPhoneNumbers",
    "EventSource": "chime-sdk-voice",
    "EventName": "ListPhoneNumbers",
    "Description": "Lists the phone numbers for the specified Amazon Chime SDK account, Amazon Chime SDK user, Amazon Chime SDK Voice Connector, or Amazon Chime SDK Voice Connector group"
  },
  {
    "API": "chime-sdk-voice:ListProxySessions",
    "EventSource": "chime-sdk-voice",
    "EventName": "ListProxySessions",
    "Description": "Lists the proxy sessions for the specified Amazon Chime SDK Voice Connector"
  },
  {
    "API": "chime-sdk-voice:ListSipMediaApplications",
    "EventSource": "chime-sdk-voice",
    "EventName": "ListSipMediaApplications",
    "Description": "Lists the SIP media applications under the administrator's AWS account"
  },
  {
    "API": "chime-sdk-voice:ListSipRules",
    "EventSource": "chime-sdk-voice",
    "EventName": "ListSipRules",
    "Description": "Lists the SIP rules under the administrator's AWS account"
  },
  {
    "API": "chime-sdk-voice:ListSupportedPhoneNumberCountries",
    "EventSource": "chime-sdk-voice",
    "EventName": "ListSupportedPhoneNumberCountries",
    "Description": "Lists the countries that you can order phone numbers from"
  },
  {
    "API": "chime-sdk-voice:ListTagsForResource",
    "EventSource": "chime-sdk-voice",
    "EventName": "ListTagsForResource",
    "Description": "Returns a list of the tags in a given resource"
  },
  {
    "API": "chime-sdk-voice:ListVoiceConnectorGroups",
    "EventSource": "chime-sdk-voice",
    "EventName": "ListVoiceConnectorGroups",
    "Description": "Lists the Amazon Chime SDK Voice Connector groups in the administrator's AWS account"
  },
  {
    "API": "chime-sdk-voice:ListVoiceConnectorTerminationCredentials",
    "EventSource": "chime-sdk-voice",
    "EventName": "ListVoiceConnectorTerminationCredentials",
    "Description": "Lists the SIP credentials for the specified Amazon Chime SDK Voice Connector"
  },
  {
    "API": "chime-sdk-voice:ListVoiceConnectors",
    "EventSource": "chime-sdk-voice",
    "EventName": "ListVoiceConnectors",
    "Description": "Lists the Amazon Chime SDK Voice Connectors in the administrators AWS account"
  },
  {
    "API": "chime-sdk-voice:ListVoiceProfileDomains",
    "EventSource": "chime-sdk-voice",
    "EventName": "ListVoiceProfileDomains",
    "Description": "Lists the specified voice profile domains in the administrator's AWS account"
  },
  {
    "API": "chime-sdk-voice:ListVoiceProfiles",
    "EventSource": "chime-sdk-voice",
    "EventName": "ListVoiceProfiles",
    "Description": "Lists the voice profiles in a voice profile domain"
  },
  {
    "API": "chime-sdk-voice:PutSipMediaApplicationAlexaSkillConfiguration",
    "EventSource": "chime-sdk-voice",
    "EventName": "PutSipMediaApplicationAlexaSkillConfiguration",
    "Description": "Updates the Alexa Skill configuration for the SIP media application"
  },
  {
    "API": "chime-sdk-voice:PutSipMediaApplicationLoggingConfiguration",
    "EventSource": "chime-sdk-voice",
    "EventName": "PutSipMediaApplicationLoggingConfiguration",
    "Description": "Updates the logging configuration for the specified SIP media application"
  },
  {
    "API": "chime-sdk-voice:PutVoiceConnectorEmergencyCallingConfiguration",
    "EventSource": "chime-sdk-voice",
    "EventName": "PutVoiceConnectorEmergencyCallingConfiguration",
    "Description": "Updates a Voice Connector's emergency calling configuration"
  },
  {
    "API": "chime-sdk-voice:PutVoiceConnectorLoggingConfiguration",
    "EventSource": "chime-sdk-voice",
    "EventName": "PutVoiceConnectorLoggingConfiguration",
    "Description": "Updates a Voice Connector's logging configuration"
  },
  {
    "API": "chime-sdk-voice:PutVoiceConnectorOrigination",
    "EventSource": "chime-sdk-voice",
    "EventName": "PutVoiceConnectorOrigination",
    "Description": "Updates a Voice Connector's origination settings"
  },
  {
    "API": "chime-sdk-voice:PutVoiceConnectorProxy",
    "EventSource": "chime-sdk-voice",
    "EventName": "PutVoiceConnectorProxy",
    "Description": "Puts the specified proxy configuration to the specified Amazon Chime SDK Voice Connector"
  },
  {
    "API": "chime-sdk-voice:PutVoiceConnectorStreamingConfiguration",
    "EventSource": "chime-sdk-voice",
    "EventName": "PutVoiceConnectorStreamingConfiguration",
    "Description": "Updates a Voice Connector's streaming configuration settings"
  },
  {
    "API": "chime-sdk-voice:PutVoiceConnectorTermination",
    "EventSource": "chime-sdk-voice",
    "EventName": "PutVoiceConnectorTermination",
    "Description": "Updates a Voice Connector's termination settings"
  },
  {
    "API": "chime-sdk-voice:PutVoiceConnectorTerminationCredentials",
    "EventSource": "chime-sdk-voice",
    "EventName": "PutVoiceConnectorTerminationCredentials",
    "Description": "Updates a Voice Connector's termination credentials"
  },
  {
    "API": "chime-sdk-voice:RestorePhoneNumber",
    "EventSource": "chime-sdk-voice",
    "EventName": "RestorePhoneNumber",
    "Description": "Restores a deleted phone number"
  },
  {
    "API": "chime-sdk-voice:SearchAvailablePhoneNumbers",
    "EventSource": "chime-sdk-voice",
    "EventName": "SearchAvailablePhoneNumbers",
    "Description": "Searches the provisioned phone numbers in an organization"
  },
  {
    "API": "chime-sdk-voice:StartSpeakerSearchTask",
    "EventSource": "chime-sdk-voice",
    "EventName": "StartSpeakerSearchTask",
    "Description": "Starts a speaker search task"
  },
  {
    "API": "chime-sdk-voice:StartVoiceToneAnalysisTask",
    "EventSource": "chime-sdk-voice",
    "EventName": "StartVoiceToneAnalysisTask",
    "Description": "Starts a voice tone analysis task"
  },
  {
    "API": "chime-sdk-voice:StopSpeakerSearchTask",
    "EventSource": "chime-sdk-voice",
    "EventName": "StopSpeakerSearchTask",
    "Description": "Stops a speaker search task"
  },
  {
    "API": "chime-sdk-voice:StopVoiceToneAnalysisTask",
    "EventSource": "chime-sdk-voice",
    "EventName": "StopVoiceToneAnalysisTask",
    "Description": "Stops a voice tone analysis task"
  },
  {
    "API": "chime-sdk-voice:TagResource",
    "EventSource": "chime-sdk-voice",
    "EventName": "TagResource",
    "Description": "Adds a tag to the specified resource"
  },
  {
    "API": "chime-sdk-voice:UntagResource",
    "EventSource": "chime-sdk-voice",
    "EventName": "UntagResource",
    "Description": "Removes tags from a resource"
  },
  {
    "API": "chime-sdk-voice:UpdateGlobalSettings",
    "EventSource": "chime-sdk-voice",
    "EventName": "UpdateGlobalSettings",
    "Description": "Updates global settings for the Amazon Chime SDK Voice Connectors in an AWS account"
  },
  {
    "API": "chime-sdk-voice:UpdatePhoneNumber",
    "EventSource": "chime-sdk-voice",
    "EventName": "UpdatePhoneNumber",
    "Description": "Updates phone number details, such as product type, calling name, or phone number name for the specified phone number ID"
  },
  {
    "API": "chime-sdk-voice:UpdatePhoneNumberSettings",
    "EventSource": "chime-sdk-voice",
    "EventName": "UpdatePhoneNumberSettings",
    "Description": "Updates the phone number settings for the administrator's AWS account, such as the default outbound calling name"
  },
  {
    "API": "chime-sdk-voice:UpdateProxySession",
    "EventSource": "chime-sdk-voice",
    "EventName": "UpdateProxySession",
    "Description": "Updates the specified proxy session details, such as voice or SMS capabilities"
  },
  {
    "API": "chime-sdk-voice:UpdateSipMediaApplication",
    "EventSource": "chime-sdk-voice",
    "EventName": "UpdateSipMediaApplication",
    "Description": "Updates the details of the specified SIP media application"
  },
  {
    "API": "chime-sdk-voice:UpdateSipMediaApplicationCall",
    "EventSource": "chime-sdk-voice",
    "EventName": "UpdateSipMediaApplicationCall",
    "Description": "Invokes the AWS Lambda function associated with the SIP media application and transaction ID in an update request"
  },
  {
    "API": "chime-sdk-voice:UpdateSipRule",
    "EventSource": "chime-sdk-voice",
    "EventName": "UpdateSipRule",
    "Description": "Updates the details of the specified SIP rule"
  },
  {
    "API": "chime-sdk-voice:UpdateVoiceConnector",
    "EventSource": "chime-sdk-voice",
    "EventName": "UpdateVoiceConnector",
    "Description": "Updates the details for the specified Amazon Chime SDK Voice Connector"
  },
  {
    "API": "chime-sdk-voice:UpdateVoiceConnectorGroup",
    "EventSource": "chime-sdk-voice",
    "EventName": "UpdateVoiceConnectorGroup",
    "Description": "Updates the settings for the specified Amazon Chime SDK Voice Connector group"
  },
  {
    "API": "chime-sdk-voice:UpdateVoiceProfile",
    "EventSource": "chime-sdk-voice",
    "EventName": "UpdateVoiceProfile",
    "Description": "Updates the specified voice profile’s voice print and refreshes its expiration timestamp"
  },
  {
    "API": "chime-sdk-voice:UpdateVoiceProfileDomain",
    "EventSource": "chime-sdk-voice",
    "EventName": "UpdateVoiceProfileDomain",
    "Description": "Updates the settings for the specified voice profile domain"
  },
  {
    "API": "chime-sdk-voice:ValidateE911Address",
    "EventSource": "chime-sdk-voice",
    "EventName": "ValidateE911Address",
    "Description": "Validates an address to be used for 911 calls made with Amazon Chime SDK Voice Connectors"
  },
  {
    "API": "cleanrooms:BatchGetCollaborationAnalysisTemplate",
    "EventSource": "cleanrooms",
    "EventName": "BatchGetCollaborationAnalysisTemplate",
    "Description": "Retrieves multiple analysis templates within a collaboration by their Amazon Resource Names (ARNs)"
  },
  {
    "API": "cleanrooms:BatchGetSchema",
    "EventSource": "cleanrooms",
    "EventName": "BatchGetSchema",
    "Description": "Retrieves multiple schemas by their identifiers"
  },
  {
    "API": "cleanrooms:BatchGetSchemaAnalysisRule",
    "EventSource": "cleanrooms",
    "EventName": "BatchGetSchemaAnalysisRule",
    "Description": "Retrieves multiple analysis rule schemas"
  },
  {
    "API": "cleanrooms:CreateAnalysisTemplate",
    "EventSource": "cleanrooms",
    "EventName": "CreateAnalysisTemplate",
    "Description": "Creates a new analysis template"
  },
  {
    "API": "cleanrooms:CreateCollaboration",
    "EventSource": "cleanrooms",
    "EventName": "CreateCollaboration",
    "Description": "Creates a new collaboration"
  },
  {
    "API": "cleanrooms:CreateConfiguredAudienceModelAssociation",
    "EventSource": "cleanrooms",
    "EventName": "CreateConfiguredAudienceModelAssociation",
    "Description": "Provides the details necessary to create a configured audience model association"
  },
  {
    "API": "cleanrooms:CreateConfiguredTable",
    "EventSource": "cleanrooms",
    "EventName": "CreateConfiguredTable",
    "Description": "Creates a new configured table resource"
  },
  {
    "API": "cleanrooms:CreateConfiguredTableAnalysisRule",
    "EventSource": "cleanrooms",
    "EventName": "CreateConfiguredTableAnalysisRule",
    "Description": "Creates a new analysis rule for a configured table"
  },
  {
    "API": "cleanrooms:CreateConfiguredTableAssociation",
    "EventSource": "cleanrooms",
    "EventName": "CreateConfiguredTableAssociation",
    "Description": "Creates a configured table association"
  },
  {
    "API": "cleanrooms:CreateMembership",
    "EventSource": "cleanrooms",
    "EventName": "CreateMembership",
    "Description": "Creates a membership for a specific collaboration identifier and joins the collaboration"
  },
  {
    "API": "cleanrooms:CreatePrivacyBudgetTemplate",
    "EventSource": "cleanrooms",
    "EventName": "CreatePrivacyBudgetTemplate",
    "Description": "Creates a privacy budget template for a specified membership"
  },
  {
    "API": "cleanrooms:DeleteAnalysisTemplate",
    "EventSource": "cleanrooms",
    "EventName": "DeleteAnalysisTemplate",
    "Description": "Deletes an analysis template"
  },
  {
    "API": "cleanrooms:DeleteCollaboration",
    "EventSource": "cleanrooms",
    "EventName": "DeleteCollaboration",
    "Description": "Deletes a collaboration"
  },
  {
    "API": "cleanrooms:DeleteConfiguredAudienceModelAssociation",
    "EventSource": "cleanrooms",
    "EventName": "DeleteConfiguredAudienceModelAssociation",
    "Description": "Provides the information necessary to delete a configured audience model association"
  },
  {
    "API": "cleanrooms:DeleteConfiguredTable",
    "EventSource": "cleanrooms",
    "EventName": "DeleteConfiguredTable",
    "Description": "Deletes a configured table"
  },
  {
    "API": "cleanrooms:DeleteConfiguredTableAnalysisRule",
    "EventSource": "cleanrooms",
    "EventName": "DeleteConfiguredTableAnalysisRule",
    "Description": "Deletes a configured table analysis rule"
  },
  {
    "API": "cleanrooms:DeleteConfiguredTableAssociation",
    "EventSource": "cleanrooms",
    "EventName": "DeleteConfiguredTableAssociation",
    "Description": "Deletes a configured table association"
  },
  {
    "API": "cleanrooms:DeleteMember",
    "EventSource": "cleanrooms",
    "EventName": "DeleteMember",
    "Description": "Removes the specified member from a collaboration"
  },
  {
    "API": "cleanrooms:DeleteMembership",
    "EventSource": "cleanrooms",
    "EventName": "DeleteMembership",
    "Description": "Deletes a specified membership"
  },
  {
    "API": "cleanrooms:DeletePrivacyBudgetTemplate",
    "EventSource": "cleanrooms",
    "EventName": "DeletePrivacyBudgetTemplate",
    "Description": "Deletes a privacy budget template for a specified membership"
  },
  {
    "API": "cleanrooms:GeneratePresignedUrl",
    "EventSource": "cleanrooms",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "cleanrooms:GetAnalysisTemplate",
    "EventSource": "cleanrooms",
    "EventName": "GetAnalysisTemplate",
    "Description": "Retrieves an analysis template"
  },
  {
    "API": "cleanrooms:GetCollaboration",
    "EventSource": "cleanrooms",
    "EventName": "GetCollaboration",
    "Description": "Returns metadata about a collaboration"
  },
  {
    "API": "cleanrooms:GetCollaborationAnalysisTemplate",
    "EventSource": "cleanrooms",
    "EventName": "GetCollaborationAnalysisTemplate",
    "Description": "Retrieves an analysis template within a collaboration"
  },
  {
    "API": "cleanrooms:GetCollaborationConfiguredAudienceModelAssociation",
    "EventSource": "cleanrooms",
    "EventName": "GetCollaborationConfiguredAudienceModelAssociation",
    "Description": "Retrieves a configured audience model association within a collaboration"
  },
  {
    "API": "cleanrooms:GetCollaborationPrivacyBudgetTemplate",
    "EventSource": "cleanrooms",
    "EventName": "GetCollaborationPrivacyBudgetTemplate",
    "Description": "Returns details about a specified privacy budget template"
  },
  {
    "API": "cleanrooms:GetConfiguredAudienceModelAssociation",
    "EventSource": "cleanrooms",
    "EventName": "GetConfiguredAudienceModelAssociation",
    "Description": "Returns information about a configured audience model association"
  },
  {
    "API": "cleanrooms:GetConfiguredTable",
    "EventSource": "cleanrooms",
    "EventName": "GetConfiguredTable",
    "Description": "Retrieves a configured table"
  },
  {
    "API": "cleanrooms:GetConfiguredTableAnalysisRule",
    "EventSource": "cleanrooms",
    "EventName": "GetConfiguredTableAnalysisRule",
    "Description": "Retrieves a configured table analysis rule"
  },
  {
    "API": "cleanrooms:GetConfiguredTableAssociation",
    "EventSource": "cleanrooms",
    "EventName": "GetConfiguredTableAssociation",
    "Description": "Retrieves a configured table association"
  },
  {
    "API": "cleanrooms:GetMembership",
    "EventSource": "cleanrooms",
    "EventName": "GetMembership",
    "Description": "Retrieves a specified membership for an identifier"
  },
  {
    "API": "cleanrooms:GetPrivacyBudgetTemplate",
    "EventSource": "cleanrooms",
    "EventName": "GetPrivacyBudgetTemplate",
    "Description": "Returns details for a specified privacy budget template"
  },
  {
    "API": "cleanrooms:GetProtectedQuery",
    "EventSource": "cleanrooms",
    "EventName": "GetProtectedQuery",
    "Description": "Returns query processing metadata"
  },
  {
    "API": "cleanrooms:GetSchema",
    "EventSource": "cleanrooms",
    "EventName": "GetSchema",
    "Description": "Retrieves the schema for a relation within a collaboration"
  },
  {
    "API": "cleanrooms:GetSchemaAnalysisRule",
    "EventSource": "cleanrooms",
    "EventName": "GetSchemaAnalysisRule",
    "Description": "Retrieves a schema analysis rule"
  },
  {
    "API": "cleanrooms:ListAnalysisTemplates",
    "EventSource": "cleanrooms",
    "EventName": "ListAnalysisTemplates",
    "Description": "Lists analysis templates that the caller owns"
  },
  {
    "API": "cleanrooms:ListCollaborationAnalysisTemplates",
    "EventSource": "cleanrooms",
    "EventName": "ListCollaborationAnalysisTemplates",
    "Description": "Lists analysis templates within a collaboration"
  },
  {
    "API": "cleanrooms:ListCollaborationConfiguredAudienceModelAssociations",
    "EventSource": "cleanrooms",
    "EventName": "ListCollaborationConfiguredAudienceModelAssociations",
    "Description": "Lists configured audience model associations within a collaboration"
  },
  {
    "API": "cleanrooms:ListCollaborationPrivacyBudgetTemplates",
    "EventSource": "cleanrooms",
    "EventName": "ListCollaborationPrivacyBudgetTemplates",
    "Description": "Returns an array that summarizes each privacy budget template in a specified collaboration"
  },
  {
    "API": "cleanrooms:ListCollaborationPrivacyBudgets",
    "EventSource": "cleanrooms",
    "EventName": "ListCollaborationPrivacyBudgets",
    "Description": "Returns an array that summarizes each privacy budget in a specified collaboration"
  },
  {
    "API": "cleanrooms:ListCollaborations",
    "EventSource": "cleanrooms",
    "EventName": "ListCollaborations",
    "Description": "Lists collaborations the caller owns, is active in, or has been invited to"
  },
  {
    "API": "cleanrooms:ListConfiguredAudienceModelAssociations",
    "EventSource": "cleanrooms",
    "EventName": "ListConfiguredAudienceModelAssociations",
    "Description": "Lists information about requested configured audience model associations"
  },
  {
    "API": "cleanrooms:ListConfiguredTableAssociations",
    "EventSource": "cleanrooms",
    "EventName": "ListConfiguredTableAssociations",
    "Description": "Lists configured table associations for a membership"
  },
  {
    "API": "cleanrooms:ListConfiguredTables",
    "EventSource": "cleanrooms",
    "EventName": "ListConfiguredTables",
    "Description": "Lists configured tables"
  },
  {
    "API": "cleanrooms:ListMembers",
    "EventSource": "cleanrooms",
    "EventName": "ListMembers",
    "Description": "Lists all members within a collaboration"
  },
  {
    "API": "cleanrooms:ListMemberships",
    "EventSource": "cleanrooms",
    "EventName": "ListMemberships",
    "Description": "Lists all memberships resources within the caller's account"
  },
  {
    "API": "cleanrooms:ListPrivacyBudgetTemplates",
    "EventSource": "cleanrooms",
    "EventName": "ListPrivacyBudgetTemplates",
    "Description": "Returns detailed information about the privacy budget templates in a specified membership"
  },
  {
    "API": "cleanrooms:ListPrivacyBudgets",
    "EventSource": "cleanrooms",
    "EventName": "ListPrivacyBudgets",
    "Description": "Returns detailed information about the privacy budgets in a specified membership"
  },
  {
    "API": "cleanrooms:ListProtectedQueries",
    "EventSource": "cleanrooms",
    "EventName": "ListProtectedQueries",
    "Description": "Lists protected queries, sorted by the most recent query"
  },
  {
    "API": "cleanrooms:ListSchemas",
    "EventSource": "cleanrooms",
    "EventName": "ListSchemas",
    "Description": "Lists the schemas for relations within a collaboration"
  },
  {
    "API": "cleanrooms:ListTagsForResource",
    "EventSource": "cleanrooms",
    "EventName": "ListTagsForResource",
    "Description": "Lists all of the tags that have been added to a resource"
  },
  {
    "API": "cleanrooms:PreviewPrivacyImpact",
    "EventSource": "cleanrooms",
    "EventName": "PreviewPrivacyImpact",
    "Description": "An estimate of the number of aggregation functions that the member who can query can run given epsilon and noise parameters"
  },
  {
    "API": "cleanrooms:StartProtectedQuery",
    "EventSource": "cleanrooms",
    "EventName": "StartProtectedQuery",
    "Description": "Creates a protected query that is started by Clean Rooms"
  },
  {
    "API": "cleanrooms:TagResource",
    "EventSource": "cleanrooms",
    "EventName": "TagResource",
    "Description": "Tags a resource"
  },
  {
    "API": "cleanrooms:UntagResource",
    "EventSource": "cleanrooms",
    "EventName": "UntagResource",
    "Description": "Removes a tag or list of tags from a resource"
  },
  {
    "API": "cleanrooms:UpdateAnalysisTemplate",
    "EventSource": "cleanrooms",
    "EventName": "UpdateAnalysisTemplate",
    "Description": "Updates the analysis template metadata"
  },
  {
    "API": "cleanrooms:UpdateCollaboration",
    "EventSource": "cleanrooms",
    "EventName": "UpdateCollaboration",
    "Description": "Updates collaboration metadata and can only be called by the collaboration owner"
  },
  {
    "API": "cleanrooms:UpdateConfiguredAudienceModelAssociation",
    "EventSource": "cleanrooms",
    "EventName": "UpdateConfiguredAudienceModelAssociation",
    "Description": "Provides the details necessary to update a configured audience model association"
  },
  {
    "API": "cleanrooms:UpdateConfiguredTable",
    "EventSource": "cleanrooms",
    "EventName": "UpdateConfiguredTable",
    "Description": "Updates a configured table"
  },
  {
    "API": "cleanrooms:UpdateConfiguredTableAnalysisRule",
    "EventSource": "cleanrooms",
    "EventName": "UpdateConfiguredTableAnalysisRule",
    "Description": "Updates a configured table analysis rule"
  },
  {
    "API": "cleanrooms:UpdateConfiguredTableAssociation",
    "EventSource": "cleanrooms",
    "EventName": "UpdateConfiguredTableAssociation",
    "Description": "Updates a configured table association"
  },
  {
    "API": "cleanrooms:UpdateMembership",
    "EventSource": "cleanrooms",
    "EventName": "UpdateMembership",
    "Description": "Updates a membership"
  },
  {
    "API": "cleanrooms:UpdatePrivacyBudgetTemplate",
    "EventSource": "cleanrooms",
    "EventName": "UpdatePrivacyBudgetTemplate",
    "Description": "Updates the privacy budget template for the specified membership"
  },
  {
    "API": "cleanrooms:UpdateProtectedQuery",
    "EventSource": "cleanrooms",
    "EventName": "UpdateProtectedQuery",
    "Description": "Updates the processing of a currently running query"
  },
  {
    "API": "cleanroomsml:CreateAudienceModel",
    "EventSource": "cleanroomsml",
    "EventName": "CreateAudienceModel",
    "Description": "Defines the information necessary to create an audience model"
  },
  {
    "API": "cleanroomsml:CreateConfiguredAudienceModel",
    "EventSource": "cleanroomsml",
    "EventName": "CreateConfiguredAudienceModel",
    "Description": "Defines the information necessary to create a configured audience model"
  },
  {
    "API": "cleanroomsml:CreateTrainingDataset",
    "EventSource": "cleanroomsml",
    "EventName": "CreateTrainingDataset",
    "Description": "Defines the information necessary to create a training dataset"
  },
  {
    "API": "cleanroomsml:DeleteAudienceGenerationJob",
    "EventSource": "cleanroomsml",
    "EventName": "DeleteAudienceGenerationJob",
    "Description": "Deletes the specified audience generation job, and removes all data associated with the job"
  },
  {
    "API": "cleanroomsml:DeleteAudienceModel",
    "EventSource": "cleanroomsml",
    "EventName": "DeleteAudienceModel",
    "Description": "Specifies an audience model that you want to delete"
  },
  {
    "API": "cleanroomsml:DeleteConfiguredAudienceModel",
    "EventSource": "cleanroomsml",
    "EventName": "DeleteConfiguredAudienceModel",
    "Description": "Deletes the specified configured audience model"
  },
  {
    "API": "cleanroomsml:DeleteConfiguredAudienceModelPolicy",
    "EventSource": "cleanroomsml",
    "EventName": "DeleteConfiguredAudienceModelPolicy",
    "Description": "Deletes the specified configured audience model policy"
  },
  {
    "API": "cleanroomsml:DeleteTrainingDataset",
    "EventSource": "cleanroomsml",
    "EventName": "DeleteTrainingDataset",
    "Description": "Specifies a training dataset that you want to delete"
  },
  {
    "API": "cleanroomsml:GeneratePresignedUrl",
    "EventSource": "cleanroomsml",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "cleanroomsml:GetAudienceGenerationJob",
    "EventSource": "cleanroomsml",
    "EventName": "GetAudienceGenerationJob",
    "Description": "Returns information about an audience generation job"
  },
  {
    "API": "cleanroomsml:GetAudienceModel",
    "EventSource": "cleanroomsml",
    "EventName": "GetAudienceModel",
    "Description": "Returns information about an audience model"
  },
  {
    "API": "cleanroomsml:GetConfiguredAudienceModel",
    "EventSource": "cleanroomsml",
    "EventName": "GetConfiguredAudienceModel",
    "Description": "Returns information about a specified configured audience model"
  },
  {
    "API": "cleanroomsml:GetConfiguredAudienceModelPolicy",
    "EventSource": "cleanroomsml",
    "EventName": "GetConfiguredAudienceModelPolicy",
    "Description": "Returns information about a configured audience model policy"
  },
  {
    "API": "cleanroomsml:GetTrainingDataset",
    "EventSource": "cleanroomsml",
    "EventName": "GetTrainingDataset",
    "Description": "Returns information about a training dataset"
  },
  {
    "API": "cleanroomsml:ListAudienceExportJobs",
    "EventSource": "cleanroomsml",
    "EventName": "ListAudienceExportJobs",
    "Description": "Returns a list of the audience export jobs"
  },
  {
    "API": "cleanroomsml:ListAudienceGenerationJobs",
    "EventSource": "cleanroomsml",
    "EventName": "ListAudienceGenerationJobs",
    "Description": "Returns a list of audience generation jobs"
  },
  {
    "API": "cleanroomsml:ListAudienceModels",
    "EventSource": "cleanroomsml",
    "EventName": "ListAudienceModels",
    "Description": "Returns a list of audience models"
  },
  {
    "API": "cleanroomsml:ListConfiguredAudienceModels",
    "EventSource": "cleanroomsml",
    "EventName": "ListConfiguredAudienceModels",
    "Description": "Returns a list of the configured audience models"
  },
  {
    "API": "cleanroomsml:ListTagsForResource",
    "EventSource": "cleanroomsml",
    "EventName": "ListTagsForResource",
    "Description": "Returns a list of tags for a provided resource"
  },
  {
    "API": "cleanroomsml:ListTrainingDatasets",
    "EventSource": "cleanroomsml",
    "EventName": "ListTrainingDatasets",
    "Description": "Returns a list of training datasets"
  },
  {
    "API": "cleanroomsml:PutConfiguredAudienceModelPolicy",
    "EventSource": "cleanroomsml",
    "EventName": "PutConfiguredAudienceModelPolicy",
    "Description": "Create or update the resource policy for a configured audience model"
  },
  {
    "API": "cleanroomsml:StartAudienceExportJob",
    "EventSource": "cleanroomsml",
    "EventName": "StartAudienceExportJob",
    "Description": "Export an audience of a specified size after you have generated an audience"
  },
  {
    "API": "cleanroomsml:StartAudienceGenerationJob",
    "EventSource": "cleanroomsml",
    "EventName": "StartAudienceGenerationJob",
    "Description": "Information necessary to start the audience generation job"
  },
  {
    "API": "cleanroomsml:TagResource",
    "EventSource": "cleanroomsml",
    "EventName": "TagResource",
    "Description": "Adds metadata tags to a specified resource"
  },
  {
    "API": "cleanroomsml:UntagResource",
    "EventSource": "cleanroomsml",
    "EventName": "UntagResource",
    "Description": "Removes metadata tags from a specified resource"
  },
  {
    "API": "cleanroomsml:UpdateConfiguredAudienceModel",
    "EventSource": "cleanroomsml",
    "EventName": "UpdateConfiguredAudienceModel",
    "Description": "Provides the information necessary to update a configured audience model"
  },
  {
    "API": "cloud9:CreateEnvironmentEc2",
    "EventSource": "cloud9",
    "EventName": "CreateEnvironmentEc2",
    "Description": "Creates an Cloud9 development environment, launches an Amazon Elastic Compute Cloud (Amazon EC2) instance, and then connects from the instance to the environment"
  },
  {
    "API": "cloud9:CreateEnvironmentMembership",
    "EventSource": "cloud9",
    "EventName": "CreateEnvironmentMembership",
    "Description": "Adds an environment member to an Cloud9 development environment"
  },
  {
    "API": "cloud9:DeleteEnvironment",
    "EventSource": "cloud9",
    "EventName": "DeleteEnvironment",
    "Description": "Deletes an Cloud9 development environment"
  },
  {
    "API": "cloud9:DeleteEnvironmentMembership",
    "EventSource": "cloud9",
    "EventName": "DeleteEnvironmentMembership",
    "Description": "Deletes an environment member from a development environment"
  },
  {
    "API": "cloud9:DescribeEnvironmentMemberships",
    "EventSource": "cloud9",
    "EventName": "DescribeEnvironmentMemberships",
    "Description": "Gets information about environment members for an Cloud9 development environment"
  },
  {
    "API": "cloud9:DescribeEnvironmentStatus",
    "EventSource": "cloud9",
    "EventName": "DescribeEnvironmentStatus",
    "Description": "Gets status information for an Cloud9 development environment"
  },
  {
    "API": "cloud9:DescribeEnvironments",
    "EventSource": "cloud9",
    "EventName": "DescribeEnvironments",
    "Description": "Gets information about Cloud9 development environments"
  },
  {
    "API": "cloud9:GeneratePresignedUrl",
    "EventSource": "cloud9",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "cloud9:ListEnvironments",
    "EventSource": "cloud9",
    "EventName": "ListEnvironments",
    "Description": "Gets a list of Cloud9 development environment identifiers"
  },
  {
    "API": "cloud9:ListTagsForResource",
    "EventSource": "cloud9",
    "EventName": "ListTagsForResource",
    "Description": "Gets a list of the tags associated with an Cloud9 development environment"
  },
  {
    "API": "cloud9:TagResource",
    "EventSource": "cloud9",
    "EventName": "TagResource",
    "Description": "Adds tags to an Cloud9 development environment"
  },
  {
    "API": "cloud9:UntagResource",
    "EventSource": "cloud9",
    "EventName": "UntagResource",
    "Description": "Removes tags from an Cloud9 development environment"
  },
  {
    "API": "cloud9:UpdateEnvironment",
    "EventSource": "cloud9",
    "EventName": "UpdateEnvironment",
    "Description": "Changes the settings of an existing Cloud9 development environment"
  },
  {
    "API": "cloud9:UpdateEnvironmentMembership",
    "EventSource": "cloud9",
    "EventName": "UpdateEnvironmentMembership",
    "Description": "Changes the settings of an existing environment member for an Cloud9 development environment"
  },
  {
    "API": "cloudcontrol:CancelResourceRequest",
    "EventSource": "cloudcontrol",
    "EventName": "CancelResourceRequest",
    "Description": "Cancels the specified resource operation request"
  },
  {
    "API": "cloudcontrol:CreateResource",
    "EventSource": "cloudcontrol",
    "EventName": "CreateResource",
    "Description": "Creates the specified resource"
  },
  {
    "API": "cloudcontrol:DeleteResource",
    "EventSource": "cloudcontrol",
    "EventName": "DeleteResource",
    "Description": "Deletes the specified resource"
  },
  {
    "API": "cloudcontrol:GeneratePresignedUrl",
    "EventSource": "cloudcontrol",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "cloudcontrol:GetResource",
    "EventSource": "cloudcontrol",
    "EventName": "GetResource",
    "Description": "Returns information about the current state of the specified resource"
  },
  {
    "API": "cloudcontrol:GetResourceRequestStatus",
    "EventSource": "cloudcontrol",
    "EventName": "GetResourceRequestStatus",
    "Description": "Returns the current status of a resource operation request"
  },
  {
    "API": "cloudcontrol:ListResourceRequests",
    "EventSource": "cloudcontrol",
    "EventName": "ListResourceRequests",
    "Description": "Returns existing resource operation requests"
  },
  {
    "API": "cloudcontrol:ListResources",
    "EventSource": "cloudcontrol",
    "EventName": "ListResources",
    "Description": "Returns information about the specified resources"
  },
  {
    "API": "cloudcontrol:UpdateResource",
    "EventSource": "cloudcontrol",
    "EventName": "UpdateResource",
    "Description": "Updates the specified property values in the resource"
  },
  {
    "API": "clouddirectory:AddFacetToObject",
    "EventSource": "clouddirectory",
    "EventName": "AddFacetToObject",
    "Description": "Adds a new  Facet to an object"
  },
  {
    "API": "clouddirectory:ApplySchema",
    "EventSource": "clouddirectory",
    "EventName": "ApplySchema",
    "Description": "Copies the input published schema, at the specified version, into the  Directory with the same name and version as that of the published schema"
  },
  {
    "API": "clouddirectory:AttachObject",
    "EventSource": "clouddirectory",
    "EventName": "AttachObject",
    "Description": "Attaches an existing object to another object"
  },
  {
    "API": "clouddirectory:AttachPolicy",
    "EventSource": "clouddirectory",
    "EventName": "AttachPolicy",
    "Description": "Attaches a policy object to a regular object"
  },
  {
    "API": "clouddirectory:AttachToIndex",
    "EventSource": "clouddirectory",
    "EventName": "AttachToIndex",
    "Description": "Attaches the specified object to the specified index"
  },
  {
    "API": "clouddirectory:AttachTypedLink",
    "EventSource": "clouddirectory",
    "EventName": "AttachTypedLink",
    "Description": "Attaches a typed link to a specified source and target object"
  },
  {
    "API": "clouddirectory:BatchRead",
    "EventSource": "clouddirectory",
    "EventName": "BatchRead",
    "Description": "Performs all the read operations in a batch"
  },
  {
    "API": "clouddirectory:BatchWrite",
    "EventSource": "clouddirectory",
    "EventName": "BatchWrite",
    "Description": "Performs all the write operations in a batch"
  },
  {
    "API": "clouddirectory:CreateDirectory",
    "EventSource": "clouddirectory",
    "EventName": "CreateDirectory",
    "Description": "Creates a  Directory by copying the published schema into the directory"
  },
  {
    "API": "clouddirectory:CreateFacet",
    "EventSource": "clouddirectory",
    "EventName": "CreateFacet",
    "Description": "Creates a new  Facet in a schema"
  },
  {
    "API": "clouddirectory:CreateIndex",
    "EventSource": "clouddirectory",
    "EventName": "CreateIndex",
    "Description": "Creates an index object"
  },
  {
    "API": "clouddirectory:CreateObject",
    "EventSource": "clouddirectory",
    "EventName": "CreateObject",
    "Description": "Creates an object in a  Directory"
  },
  {
    "API": "clouddirectory:CreateSchema",
    "EventSource": "clouddirectory",
    "EventName": "CreateSchema",
    "Description": "Creates a new schema in a development state"
  },
  {
    "API": "clouddirectory:CreateTypedLinkFacet",
    "EventSource": "clouddirectory",
    "EventName": "CreateTypedLinkFacet",
    "Description": "Creates a  TypedLinkFacet"
  },
  {
    "API": "clouddirectory:DeleteDirectory",
    "EventSource": "clouddirectory",
    "EventName": "DeleteDirectory",
    "Description": "Deletes a directory"
  },
  {
    "API": "clouddirectory:DeleteFacet",
    "EventSource": "clouddirectory",
    "EventName": "DeleteFacet",
    "Description": "Deletes a given  Facet"
  },
  {
    "API": "clouddirectory:DeleteObject",
    "EventSource": "clouddirectory",
    "EventName": "DeleteObject",
    "Description": "Deletes an object and its associated attributes"
  },
  {
    "API": "clouddirectory:DeleteSchema",
    "EventSource": "clouddirectory",
    "EventName": "DeleteSchema",
    "Description": "Deletes a given schema"
  },
  {
    "API": "clouddirectory:DeleteTypedLinkFacet",
    "EventSource": "clouddirectory",
    "EventName": "DeleteTypedLinkFacet",
    "Description": "Deletes a  TypedLinkFacet"
  },
  {
    "API": "clouddirectory:DetachFromIndex",
    "EventSource": "clouddirectory",
    "EventName": "DetachFromIndex",
    "Description": "Detaches the specified object from the specified index"
  },
  {
    "API": "clouddirectory:DetachObject",
    "EventSource": "clouddirectory",
    "EventName": "DetachObject",
    "Description": "Detaches a given object from the parent object"
  },
  {
    "API": "clouddirectory:DetachPolicy",
    "EventSource": "clouddirectory",
    "EventName": "DetachPolicy",
    "Description": "Detaches a policy from an object"
  },
  {
    "API": "clouddirectory:DetachTypedLink",
    "EventSource": "clouddirectory",
    "EventName": "DetachTypedLink",
    "Description": "Detaches a typed link from a specified source and target object"
  },
  {
    "API": "clouddirectory:DisableDirectory",
    "EventSource": "clouddirectory",
    "EventName": "DisableDirectory",
    "Description": "Disables the specified directory"
  },
  {
    "API": "clouddirectory:EnableDirectory",
    "EventSource": "clouddirectory",
    "EventName": "EnableDirectory",
    "Description": "Enables the specified directory"
  },
  {
    "API": "clouddirectory:GeneratePresignedUrl",
    "EventSource": "clouddirectory",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "clouddirectory:GetAppliedSchemaVersion",
    "EventSource": "clouddirectory",
    "EventName": "GetAppliedSchemaVersion",
    "Description": "Returns current applied schema version ARN, including the minor version in use"
  },
  {
    "API": "clouddirectory:GetDirectory",
    "EventSource": "clouddirectory",
    "EventName": "GetDirectory",
    "Description": "Retrieves metadata about a directory"
  },
  {
    "API": "clouddirectory:GetFacet",
    "EventSource": "clouddirectory",
    "EventName": "GetFacet",
    "Description": "Gets details of the  Facet, such as facet name, attributes,  Rules, or ``ObjectType``"
  },
  {
    "API": "clouddirectory:GetLinkAttributes",
    "EventSource": "clouddirectory",
    "EventName": "GetLinkAttributes",
    "Description": "Retrieves attributes that are associated with a typed link"
  },
  {
    "API": "clouddirectory:GetObjectAttributes",
    "EventSource": "clouddirectory",
    "EventName": "GetObjectAttributes",
    "Description": "Retrieves attributes within a facet that are associated with an object"
  },
  {
    "API": "clouddirectory:GetObjectInformation",
    "EventSource": "clouddirectory",
    "EventName": "GetObjectInformation",
    "Description": "Retrieves metadata about an object"
  },
  {
    "API": "clouddirectory:GetSchemaAsJson",
    "EventSource": "clouddirectory",
    "EventName": "GetSchemaAsJson",
    "Description": "Retrieves a JSON representation of the schema"
  },
  {
    "API": "clouddirectory:GetTypedLinkFacetInformation",
    "EventSource": "clouddirectory",
    "EventName": "GetTypedLinkFacetInformation",
    "Description": "Returns the identity attribute order for a specific  TypedLinkFacet"
  },
  {
    "API": "clouddirectory:ListAppliedSchemaArns",
    "EventSource": "clouddirectory",
    "EventName": "ListAppliedSchemaArns",
    "Description": "Lists schema major versions applied to a directory"
  },
  {
    "API": "clouddirectory:ListAttachedIndices",
    "EventSource": "clouddirectory",
    "EventName": "ListAttachedIndices",
    "Description": "Lists indices attached to the specified object"
  },
  {
    "API": "clouddirectory:ListDevelopmentSchemaArns",
    "EventSource": "clouddirectory",
    "EventName": "ListDevelopmentSchemaArns",
    "Description": "Retrieves each Amazon Resource Name (ARN) of schemas in the development state"
  },
  {
    "API": "clouddirectory:ListDirectories",
    "EventSource": "clouddirectory",
    "EventName": "ListDirectories",
    "Description": "Lists directories created within an account"
  },
  {
    "API": "clouddirectory:ListFacetAttributes",
    "EventSource": "clouddirectory",
    "EventName": "ListFacetAttributes",
    "Description": "Retrieves attributes attached to the facet"
  },
  {
    "API": "clouddirectory:ListFacetNames",
    "EventSource": "clouddirectory",
    "EventName": "ListFacetNames",
    "Description": "Retrieves the names of facets that exist in a schema"
  },
  {
    "API": "clouddirectory:ListIncomingTypedLinks",
    "EventSource": "clouddirectory",
    "EventName": "ListIncomingTypedLinks",
    "Description": "Returns a paginated list of all the incoming  TypedLinkSpecifier information for an object"
  },
  {
    "API": "clouddirectory:ListIndex",
    "EventSource": "clouddirectory",
    "EventName": "ListIndex",
    "Description": "Lists objects attached to the specified index"
  },
  {
    "API": "clouddirectory:ListManagedSchemaArns",
    "EventSource": "clouddirectory",
    "EventName": "ListManagedSchemaArns",
    "Description": "Lists the major version families of each managed schema"
  },
  {
    "API": "clouddirectory:ListObjectAttributes",
    "EventSource": "clouddirectory",
    "EventName": "ListObjectAttributes",
    "Description": "Lists all attributes that are associated with an object"
  },
  {
    "API": "clouddirectory:ListObjectChildren",
    "EventSource": "clouddirectory",
    "EventName": "ListObjectChildren",
    "Description": "Returns a paginated list of child objects that are associated with a given object"
  },
  {
    "API": "clouddirectory:ListObjectParentPaths",
    "EventSource": "clouddirectory",
    "EventName": "ListObjectParentPaths",
    "Description": "Retrieves all available parent paths for any object type such as node, leaf node, policy node, and index node objects"
  },
  {
    "API": "clouddirectory:ListObjectParents",
    "EventSource": "clouddirectory",
    "EventName": "ListObjectParents",
    "Description": "Lists parent objects that are associated with a given object in pagination fashion"
  },
  {
    "API": "clouddirectory:ListObjectPolicies",
    "EventSource": "clouddirectory",
    "EventName": "ListObjectPolicies",
    "Description": "Returns policies attached to an object in pagination fashion"
  },
  {
    "API": "clouddirectory:ListOutgoingTypedLinks",
    "EventSource": "clouddirectory",
    "EventName": "ListOutgoingTypedLinks",
    "Description": "Returns a paginated list of all the outgoing  TypedLinkSpecifier information for an object"
  },
  {
    "API": "clouddirectory:ListPolicyAttachments",
    "EventSource": "clouddirectory",
    "EventName": "ListPolicyAttachments",
    "Description": "Returns all of the ``ObjectIdentifiers`` to which a given policy is attached"
  },
  {
    "API": "clouddirectory:ListPublishedSchemaArns",
    "EventSource": "clouddirectory",
    "EventName": "ListPublishedSchemaArns",
    "Description": "Lists the major version families of each published schema"
  },
  {
    "API": "clouddirectory:ListTagsForResource",
    "EventSource": "clouddirectory",
    "EventName": "ListTagsForResource",
    "Description": "Returns tags for a resource"
  },
  {
    "API": "clouddirectory:ListTypedLinkFacetAttributes",
    "EventSource": "clouddirectory",
    "EventName": "ListTypedLinkFacetAttributes",
    "Description": "Returns a paginated list of all attribute definitions for a particular  TypedLinkFacet"
  },
  {
    "API": "clouddirectory:ListTypedLinkFacetNames",
    "EventSource": "clouddirectory",
    "EventName": "ListTypedLinkFacetNames",
    "Description": "Returns a paginated list of ``TypedLink`` facet names for a particular schema"
  },
  {
    "API": "clouddirectory:LookupPolicy",
    "EventSource": "clouddirectory",
    "EventName": "LookupPolicy",
    "Description": "Lists all policies from the root of the  Directory to the object specified"
  },
  {
    "API": "clouddirectory:PublishSchema",
    "EventSource": "clouddirectory",
    "EventName": "PublishSchema",
    "Description": "Publishes a development schema with a major version and a recommended minor version"
  },
  {
    "API": "clouddirectory:PutSchemaFromJson",
    "EventSource": "clouddirectory",
    "EventName": "PutSchemaFromJson",
    "Description": "Allows a schema to be updated using JSON upload"
  },
  {
    "API": "clouddirectory:RemoveFacetFromObject",
    "EventSource": "clouddirectory",
    "EventName": "RemoveFacetFromObject",
    "Description": "Removes the specified facet from the specified object"
  },
  {
    "API": "clouddirectory:TagResource",
    "EventSource": "clouddirectory",
    "EventName": "TagResource",
    "Description": "An API operation for adding tags to a resource"
  },
  {
    "API": "clouddirectory:UntagResource",
    "EventSource": "clouddirectory",
    "EventName": "UntagResource",
    "Description": "An API operation for removing tags from a resource"
  },
  {
    "API": "clouddirectory:UpdateFacet",
    "EventSource": "clouddirectory",
    "EventName": "UpdateFacet",
    "Description": "Does the following:"
  },
  {
    "API": "clouddirectory:UpdateLinkAttributes",
    "EventSource": "clouddirectory",
    "EventName": "UpdateLinkAttributes",
    "Description": "Updates a given typed link’s attributes"
  },
  {
    "API": "clouddirectory:UpdateObjectAttributes",
    "EventSource": "clouddirectory",
    "EventName": "UpdateObjectAttributes",
    "Description": "Updates a given object's attributes"
  },
  {
    "API": "clouddirectory:UpdateSchema",
    "EventSource": "clouddirectory",
    "EventName": "UpdateSchema",
    "Description": "Updates the schema name with a new name"
  },
  {
    "API": "clouddirectory:UpdateTypedLinkFacet",
    "EventSource": "clouddirectory",
    "EventName": "UpdateTypedLinkFacet",
    "Description": "Updates a  TypedLinkFacet"
  },
  {
    "API": "clouddirectory:UpgradeAppliedSchema",
    "EventSource": "clouddirectory",
    "EventName": "UpgradeAppliedSchema",
    "Description": "Upgrades a single directory in-place using the ``PublishedSchemaArn`` with schema updates found in ``MinorVersion``"
  },
  {
    "API": "clouddirectory:UpgradePublishedSchema",
    "EventSource": "clouddirectory",
    "EventName": "UpgradePublishedSchema",
    "Description": "Upgrades a published schema under a new minor version revision using the current contents of ``DevelopmentSchemaArn``"
  },
  {
    "API": "cloudformation:ActivateOrganizationsAccess",
    "EventSource": "cloudformation",
    "EventName": "ActivateOrganizationsAccess",
    "Description": "Activate trusted access with Organizations"
  },
  {
    "API": "cloudformation:ActivateType",
    "EventSource": "cloudformation",
    "EventName": "ActivateType",
    "Description": "Activates a public third-party extension, making it available for use in stack templates"
  },
  {
    "API": "cloudformation:BatchDescribeTypeConfigurations",
    "EventSource": "cloudformation",
    "EventName": "BatchDescribeTypeConfigurations",
    "Description": "Returns configuration data for the specified CloudFormation extensions, from the CloudFormation registry for the account and Region"
  },
  {
    "API": "cloudformation:CancelUpdateStack",
    "EventSource": "cloudformation",
    "EventName": "CancelUpdateStack",
    "Description": "Cancels an update on the specified stack"
  },
  {
    "API": "cloudformation:ContinueUpdateRollback",
    "EventSource": "cloudformation",
    "EventName": "ContinueUpdateRollback",
    "Description": "For a specified stack that's in the ``UPDATE_ROLLBACK_FAILED`` state, continues rolling it back to the ``UPDATE_ROLLBACK_COMPLETE`` state"
  },
  {
    "API": "cloudformation:CreateChangeSet",
    "EventSource": "cloudformation",
    "EventName": "CreateChangeSet",
    "Description": "Creates a list of changes that will be applied to a stack so that you can review the changes before executing them"
  },
  {
    "API": "cloudformation:CreateGeneratedTemplate",
    "EventSource": "cloudformation",
    "EventName": "CreateGeneratedTemplate",
    "Description": "Creates a template from existing resources that are not already managed with CloudFormation"
  },
  {
    "API": "cloudformation:CreateStack",
    "EventSource": "cloudformation",
    "EventName": "CreateStack",
    "Description": "Creates a stack as specified in the template"
  },
  {
    "API": "cloudformation:CreateStackInstances",
    "EventSource": "cloudformation",
    "EventName": "CreateStackInstances",
    "Description": "Creates stack instances for the specified accounts, within the specified Amazon Web Services Regions"
  },
  {
    "API": "cloudformation:CreateStackSet",
    "EventSource": "cloudformation",
    "EventName": "CreateStackSet",
    "Description": "Creates a stack set"
  },
  {
    "API": "cloudformation:DeactivateOrganizationsAccess",
    "EventSource": "cloudformation",
    "EventName": "DeactivateOrganizationsAccess",
    "Description": "Deactivates trusted access with Organizations"
  },
  {
    "API": "cloudformation:DeactivateType",
    "EventSource": "cloudformation",
    "EventName": "DeactivateType",
    "Description": "Deactivates a public extension that was previously activated in this account and Region"
  },
  {
    "API": "cloudformation:DeleteChangeSet",
    "EventSource": "cloudformation",
    "EventName": "DeleteChangeSet",
    "Description": "Deletes the specified change set"
  },
  {
    "API": "cloudformation:DeleteGeneratedTemplate",
    "EventSource": "cloudformation",
    "EventName": "DeleteGeneratedTemplate",
    "Description": "Deleted a generated template"
  },
  {
    "API": "cloudformation:DeleteStack",
    "EventSource": "cloudformation",
    "EventName": "DeleteStack",
    "Description": "Deletes a specified stack"
  },
  {
    "API": "cloudformation:DeleteStackInstances",
    "EventSource": "cloudformation",
    "EventName": "DeleteStackInstances",
    "Description": "Deletes stack instances for the specified accounts, in the specified Amazon Web Services Regions"
  },
  {
    "API": "cloudformation:DeleteStackSet",
    "EventSource": "cloudformation",
    "EventName": "DeleteStackSet",
    "Description": "Deletes a stack set"
  },
  {
    "API": "cloudformation:DeregisterType",
    "EventSource": "cloudformation",
    "EventName": "DeregisterType",
    "Description": "Marks an extension or extension version as ``DEPRECATED`` in the CloudFormation registry, removing it from active use"
  },
  {
    "API": "cloudformation:DescribeAccountLimits",
    "EventSource": "cloudformation",
    "EventName": "DescribeAccountLimits",
    "Description": "Retrieves your account's CloudFormation limits, such as the maximum number of stacks that you can create in your account"
  },
  {
    "API": "cloudformation:DescribeChangeSet",
    "EventSource": "cloudformation",
    "EventName": "DescribeChangeSet",
    "Description": "Returns the inputs for the change set and a list of changes that CloudFormation will make if you execute the change set"
  },
  {
    "API": "cloudformation:DescribeChangeSetHooks",
    "EventSource": "cloudformation",
    "EventName": "DescribeChangeSetHooks",
    "Description": "Returns hook-related information for the change set and a list of changes that CloudFormation makes when you run the change set"
  },
  {
    "API": "cloudformation:DescribeGeneratedTemplate",
    "EventSource": "cloudformation",
    "EventName": "DescribeGeneratedTemplate",
    "Description": "Describes a generated template"
  },
  {
    "API": "cloudformation:DescribeOrganizationsAccess",
    "EventSource": "cloudformation",
    "EventName": "DescribeOrganizationsAccess",
    "Description": "Retrieves information about the account's ``OrganizationAccess`` status"
  },
  {
    "API": "cloudformation:DescribePublisher",
    "EventSource": "cloudformation",
    "EventName": "DescribePublisher",
    "Description": "Returns information about a CloudFormation extension publisher"
  },
  {
    "API": "cloudformation:DescribeResourceScan",
    "EventSource": "cloudformation",
    "EventName": "DescribeResourceScan",
    "Description": "Describes details of a resource scan"
  },
  {
    "API": "cloudformation:DescribeStackDriftDetectionStatus",
    "EventSource": "cloudformation",
    "EventName": "DescribeStackDriftDetectionStatus",
    "Description": "Returns information about a stack drift detection operation"
  },
  {
    "API": "cloudformation:DescribeStackEvents",
    "EventSource": "cloudformation",
    "EventName": "DescribeStackEvents",
    "Description": "Returns all stack related events for a specified stack in reverse chronological order"
  },
  {
    "API": "cloudformation:DescribeStackInstance",
    "EventSource": "cloudformation",
    "EventName": "DescribeStackInstance",
    "Description": "Returns the stack instance that's associated with the specified StackSet, Amazon Web Services account, and Amazon Web Services Region"
  },
  {
    "API": "cloudformation:DescribeStackResource",
    "EventSource": "cloudformation",
    "EventName": "DescribeStackResource",
    "Description": "Returns a description of the specified resource in the specified stack"
  },
  {
    "API": "cloudformation:DescribeStackResourceDrifts",
    "EventSource": "cloudformation",
    "EventName": "DescribeStackResourceDrifts",
    "Description": "Returns drift information for the resources that have been checked for drift in the specified stack"
  },
  {
    "API": "cloudformation:DescribeStackResources",
    "EventSource": "cloudformation",
    "EventName": "DescribeStackResources",
    "Description": "Returns Amazon Web Services resource descriptions for running and deleted stacks"
  },
  {
    "API": "cloudformation:DescribeStackSet",
    "EventSource": "cloudformation",
    "EventName": "DescribeStackSet",
    "Description": "Returns the description of the specified StackSet"
  },
  {
    "API": "cloudformation:DescribeStackSetOperation",
    "EventSource": "cloudformation",
    "EventName": "DescribeStackSetOperation",
    "Description": "Returns the description of the specified StackSet operation"
  },
  {
    "API": "cloudformation:DescribeStacks",
    "EventSource": "cloudformation",
    "EventName": "DescribeStacks",
    "Description": "Returns the description for the specified stack; if no stack name was specified, then it returns the description for all the stacks created"
  },
  {
    "API": "cloudformation:DescribeType",
    "EventSource": "cloudformation",
    "EventName": "DescribeType",
    "Description": "Returns detailed information about an extension that has been registered"
  },
  {
    "API": "cloudformation:DescribeTypeRegistration",
    "EventSource": "cloudformation",
    "EventName": "DescribeTypeRegistration",
    "Description": "Returns information about an extension's registration, including its current status and type and version identifiers"
  },
  {
    "API": "cloudformation:DetectStackDrift",
    "EventSource": "cloudformation",
    "EventName": "DetectStackDrift",
    "Description": "Detects whether a stack's actual configuration differs, or has *drifted*, from its expected configuration, as defined in the stack template and any values specified as template parameters"
  },
  {
    "API": "cloudformation:DetectStackResourceDrift",
    "EventSource": "cloudformation",
    "EventName": "DetectStackResourceDrift",
    "Description": "Returns information about whether a resource's actual configuration differs, or has *drifted*, from its expected configuration, as defined in the stack template and any values specified as template parameters"
  },
  {
    "API": "cloudformation:DetectStackSetDrift",
    "EventSource": "cloudformation",
    "EventName": "DetectStackSetDrift",
    "Description": "Detect drift on a stack set"
  },
  {
    "API": "cloudformation:EstimateTemplateCost",
    "EventSource": "cloudformation",
    "EventName": "EstimateTemplateCost",
    "Description": "Returns the estimated monthly cost of a template"
  },
  {
    "API": "cloudformation:ExecuteChangeSet",
    "EventSource": "cloudformation",
    "EventName": "ExecuteChangeSet",
    "Description": "Updates a stack using the input information that was provided when the specified change set was created"
  },
  {
    "API": "cloudformation:GeneratePresignedUrl",
    "EventSource": "cloudformation",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "cloudformation:GetGeneratedTemplate",
    "EventSource": "cloudformation",
    "EventName": "GetGeneratedTemplate",
    "Description": "Retrieves a generated template"
  },
  {
    "API": "cloudformation:GetStackPolicy",
    "EventSource": "cloudformation",
    "EventName": "GetStackPolicy",
    "Description": "Returns the stack policy for a specified stack"
  },
  {
    "API": "cloudformation:GetTemplate",
    "EventSource": "cloudformation",
    "EventName": "GetTemplate",
    "Description": "Returns the template body for a specified stack"
  },
  {
    "API": "cloudformation:GetTemplateSummary",
    "EventSource": "cloudformation",
    "EventName": "GetTemplateSummary",
    "Description": "Returns information about a new or existing template"
  },
  {
    "API": "cloudformation:ImportStacksToStackSet",
    "EventSource": "cloudformation",
    "EventName": "ImportStacksToStackSet",
    "Description": "Import existing stacks into a new stack sets"
  },
  {
    "API": "cloudformation:ListChangeSets",
    "EventSource": "cloudformation",
    "EventName": "ListChangeSets",
    "Description": "Returns the ID and status of each active change set for a stack"
  },
  {
    "API": "cloudformation:ListExports",
    "EventSource": "cloudformation",
    "EventName": "ListExports",
    "Description": "Lists all exported output values in the account and Region in which you call this action"
  },
  {
    "API": "cloudformation:ListGeneratedTemplates",
    "EventSource": "cloudformation",
    "EventName": "ListGeneratedTemplates",
    "Description": "Lists your generated templates in this Region"
  },
  {
    "API": "cloudformation:ListImports",
    "EventSource": "cloudformation",
    "EventName": "ListImports",
    "Description": "Lists all stacks that are importing an exported output value"
  },
  {
    "API": "cloudformation:ListResourceScanRelatedResources",
    "EventSource": "cloudformation",
    "EventName": "ListResourceScanRelatedResources",
    "Description": "Lists the related resources for a list of resources from a resource scan"
  },
  {
    "API": "cloudformation:ListResourceScanResources",
    "EventSource": "cloudformation",
    "EventName": "ListResourceScanResources",
    "Description": "Lists the resources from a resource scan"
  },
  {
    "API": "cloudformation:ListResourceScans",
    "EventSource": "cloudformation",
    "EventName": "ListResourceScans",
    "Description": "List the resource scans from newest to oldest"
  },
  {
    "API": "cloudformation:ListStackInstanceResourceDrifts",
    "EventSource": "cloudformation",
    "EventName": "ListStackInstanceResourceDrifts",
    "Description": "Returns drift information for resources in a stack instance"
  },
  {
    "API": "cloudformation:ListStackInstances",
    "EventSource": "cloudformation",
    "EventName": "ListStackInstances",
    "Description": "Returns summary information about stack instances that are associated with the specified stack set"
  },
  {
    "API": "cloudformation:ListStackResources",
    "EventSource": "cloudformation",
    "EventName": "ListStackResources",
    "Description": "Returns descriptions of all resources of the specified stack"
  },
  {
    "API": "cloudformation:ListStackSetAutoDeploymentTargets",
    "EventSource": "cloudformation",
    "EventName": "ListStackSetAutoDeploymentTargets",
    "Description": "Returns summary information about deployment targets for a stack set"
  },
  {
    "API": "cloudformation:ListStackSetOperationResults",
    "EventSource": "cloudformation",
    "EventName": "ListStackSetOperationResults",
    "Description": "Returns summary information about the results of a stack set operation"
  },
  {
    "API": "cloudformation:ListStackSetOperations",
    "EventSource": "cloudformation",
    "EventName": "ListStackSetOperations",
    "Description": "Returns summary information about operations performed on a stack set"
  },
  {
    "API": "cloudformation:ListStackSets",
    "EventSource": "cloudformation",
    "EventName": "ListStackSets",
    "Description": "Returns summary information about stack sets that are associated with the user"
  },
  {
    "API": "cloudformation:ListStacks",
    "EventSource": "cloudformation",
    "EventName": "ListStacks",
    "Description": "Returns the summary information for stacks whose status matches the specified StackStatusFilter"
  },
  {
    "API": "cloudformation:ListTypeRegistrations",
    "EventSource": "cloudformation",
    "EventName": "ListTypeRegistrations",
    "Description": "Returns a list of registration tokens for the specified extension(s)"
  },
  {
    "API": "cloudformation:ListTypeVersions",
    "EventSource": "cloudformation",
    "EventName": "ListTypeVersions",
    "Description": "Returns summary information about the versions of an extension"
  },
  {
    "API": "cloudformation:ListTypes",
    "EventSource": "cloudformation",
    "EventName": "ListTypes",
    "Description": "Returns summary information about extension that have been registered with CloudFormation"
  },
  {
    "API": "cloudformation:PublishType",
    "EventSource": "cloudformation",
    "EventName": "PublishType",
    "Description": "Publishes the specified extension to the CloudFormation registry as a public extension in this Region"
  },
  {
    "API": "cloudformation:RecordHandlerProgress",
    "EventSource": "cloudformation",
    "EventName": "RecordHandlerProgress",
    "Description": "Reports progress of a resource handler to CloudFormation"
  },
  {
    "API": "cloudformation:RegisterPublisher",
    "EventSource": "cloudformation",
    "EventName": "RegisterPublisher",
    "Description": "Registers your account as a publisher of public extensions in the CloudFormation registry"
  },
  {
    "API": "cloudformation:RegisterType",
    "EventSource": "cloudformation",
    "EventName": "RegisterType",
    "Description": "Registers an extension with the CloudFormation service"
  },
  {
    "API": "cloudformation:RollbackStack",
    "EventSource": "cloudformation",
    "EventName": "RollbackStack",
    "Description": "When specifying ``RollbackStack``, you preserve the state of previously provisioned resources when an operation fails"
  },
  {
    "API": "cloudformation:SetStackPolicy",
    "EventSource": "cloudformation",
    "EventName": "SetStackPolicy",
    "Description": "Sets a stack policy for a specified stack"
  },
  {
    "API": "cloudformation:SetTypeConfiguration",
    "EventSource": "cloudformation",
    "EventName": "SetTypeConfiguration",
    "Description": "Specifies the configuration data for a registered CloudFormation extension, in the given account and Region"
  },
  {
    "API": "cloudformation:SetTypeDefaultVersion",
    "EventSource": "cloudformation",
    "EventName": "SetTypeDefaultVersion",
    "Description": "Specify the default version of an extension"
  },
  {
    "API": "cloudformation:SignalResource",
    "EventSource": "cloudformation",
    "EventName": "SignalResource",
    "Description": "Sends a signal to the specified resource with a success or failure status"
  },
  {
    "API": "cloudformation:StartResourceScan",
    "EventSource": "cloudformation",
    "EventName": "StartResourceScan",
    "Description": "Starts a scan of the resources in this account in this Region"
  },
  {
    "API": "cloudformation:StopStackSetOperation",
    "EventSource": "cloudformation",
    "EventName": "StopStackSetOperation",
    "Description": "Stops an in-progress operation on a stack set and its associated stack instances"
  },
  {
    "API": "cloudformation:TestType",
    "EventSource": "cloudformation",
    "EventName": "TestType",
    "Description": "Tests a registered extension to make sure it meets all necessary requirements for being published in the CloudFormation registry"
  },
  {
    "API": "cloudformation:UpdateGeneratedTemplate",
    "EventSource": "cloudformation",
    "EventName": "UpdateGeneratedTemplate",
    "Description": "Updates a generated template"
  },
  {
    "API": "cloudformation:UpdateStack",
    "EventSource": "cloudformation",
    "EventName": "UpdateStack",
    "Description": "Updates a stack as specified in the template"
  },
  {
    "API": "cloudformation:UpdateStackInstances",
    "EventSource": "cloudformation",
    "EventName": "UpdateStackInstances",
    "Description": "Updates the parameter values for stack instances for the specified accounts, within the specified Amazon Web Services Regions"
  },
  {
    "API": "cloudformation:UpdateStackSet",
    "EventSource": "cloudformation",
    "EventName": "UpdateStackSet",
    "Description": "Updates the stack set, and associated stack instances in the specified accounts and Amazon Web Services Regions"
  },
  {
    "API": "cloudformation:UpdateTerminationProtection",
    "EventSource": "cloudformation",
    "EventName": "UpdateTerminationProtection",
    "Description": "Updates termination protection for the specified stack"
  },
  {
    "API": "cloudformation:ValidateTemplate",
    "EventSource": "cloudformation",
    "EventName": "ValidateTemplate",
    "Description": "Validates a specified template"
  },
  {
    "API": "cloudfront:AssociateAlias",
    "EventSource": "cloudfront",
    "EventName": "AssociateAlias",
    "Description": "Associates an alias (also known as a CNAME or an alternate domain name) with a CloudFront distribution"
  },
  {
    "API": "cloudfront:CopyDistribution",
    "EventSource": "cloudfront",
    "EventName": "CopyDistribution",
    "Description": "Creates a staging distribution using the configuration of the provided primary distribution"
  },
  {
    "API": "cloudfront:CreateCachePolicy",
    "EventSource": "cloudfront",
    "EventName": "CreateCachePolicy",
    "Description": "Creates a cache policy"
  },
  {
    "API": "cloudfront:CreateCloudFrontOriginAccessIdentity",
    "EventSource": "cloudfront",
    "EventName": "CreateCloudFrontOriginAccessIdentity",
    "Description": "Creates a new origin access identity"
  },
  {
    "API": "cloudfront:CreateContinuousDeploymentPolicy",
    "EventSource": "cloudfront",
    "EventName": "CreateContinuousDeploymentPolicy",
    "Description": "Creates a continuous deployment policy that distributes traffic for a custom domain name to two different CloudFront distributions"
  },
  {
    "API": "cloudfront:CreateDistribution",
    "EventSource": "cloudfront",
    "EventName": "CreateDistribution",
    "Description": "Creates a CloudFront distribution"
  },
  {
    "API": "cloudfront:CreateDistributionWithTags",
    "EventSource": "cloudfront",
    "EventName": "CreateDistributionWithTags",
    "Description": "Create a new distribution with tags"
  },
  {
    "API": "cloudfront:CreateFieldLevelEncryptionConfig",
    "EventSource": "cloudfront",
    "EventName": "CreateFieldLevelEncryptionConfig",
    "Description": "Create a new field-level encryption configuration"
  },
  {
    "API": "cloudfront:CreateFieldLevelEncryptionProfile",
    "EventSource": "cloudfront",
    "EventName": "CreateFieldLevelEncryptionProfile",
    "Description": "Create a field-level encryption profile"
  },
  {
    "API": "cloudfront:CreateFunction",
    "EventSource": "cloudfront",
    "EventName": "CreateFunction",
    "Description": "Creates a CloudFront function"
  },
  {
    "API": "cloudfront:CreateInvalidation",
    "EventSource": "cloudfront",
    "EventName": "CreateInvalidation",
    "Description": "Create a new invalidation"
  },
  {
    "API": "cloudfront:CreateKeyGroup",
    "EventSource": "cloudfront",
    "EventName": "CreateKeyGroup",
    "Description": "Creates a key group that you can use with `CloudFront signed URLs and signed cookies <https://docs"
  },
  {
    "API": "cloudfront:CreateKeyValueStore",
    "EventSource": "cloudfront",
    "EventName": "CreateKeyValueStore",
    "Description": "Specifies the key value store resource to add to your account"
  },
  {
    "API": "cloudfront:CreateMonitoringSubscription",
    "EventSource": "cloudfront",
    "EventName": "CreateMonitoringSubscription",
    "Description": "Enables additional CloudWatch metrics for the specified CloudFront distribution"
  },
  {
    "API": "cloudfront:CreateOriginAccessControl",
    "EventSource": "cloudfront",
    "EventName": "CreateOriginAccessControl",
    "Description": "Creates a new origin access control in CloudFront"
  },
  {
    "API": "cloudfront:CreateOriginRequestPolicy",
    "EventSource": "cloudfront",
    "EventName": "CreateOriginRequestPolicy",
    "Description": "Creates an origin request policy"
  },
  {
    "API": "cloudfront:CreatePublicKey",
    "EventSource": "cloudfront",
    "EventName": "CreatePublicKey",
    "Description": "Uploads a public key to CloudFront that you can use with `signed URLs and signed cookies <https://docs"
  },
  {
    "API": "cloudfront:CreateRealtimeLogConfig",
    "EventSource": "cloudfront",
    "EventName": "CreateRealtimeLogConfig",
    "Description": "Creates a real-time log configuration"
  },
  {
    "API": "cloudfront:CreateResponseHeadersPolicy",
    "EventSource": "cloudfront",
    "EventName": "CreateResponseHeadersPolicy",
    "Description": "Creates a response headers policy"
  },
  {
    "API": "cloudfront:CreateStreamingDistribution",
    "EventSource": "cloudfront",
    "EventName": "CreateStreamingDistribution",
    "Description": "This API is deprecated"
  },
  {
    "API": "cloudfront:CreateStreamingDistributionWithTags",
    "EventSource": "cloudfront",
    "EventName": "CreateStreamingDistributionWithTags",
    "Description": "This API is deprecated"
  },
  {
    "API": "cloudfront:DeleteCachePolicy",
    "EventSource": "cloudfront",
    "EventName": "DeleteCachePolicy",
    "Description": "Deletes a cache policy"
  },
  {
    "API": "cloudfront:DeleteCloudFrontOriginAccessIdentity",
    "EventSource": "cloudfront",
    "EventName": "DeleteCloudFrontOriginAccessIdentity",
    "Description": "Delete an origin access identity"
  },
  {
    "API": "cloudfront:DeleteContinuousDeploymentPolicy",
    "EventSource": "cloudfront",
    "EventName": "DeleteContinuousDeploymentPolicy",
    "Description": "Deletes a continuous deployment policy"
  },
  {
    "API": "cloudfront:DeleteDistribution",
    "EventSource": "cloudfront",
    "EventName": "DeleteDistribution",
    "Description": "Delete a distribution"
  },
  {
    "API": "cloudfront:DeleteFieldLevelEncryptionConfig",
    "EventSource": "cloudfront",
    "EventName": "DeleteFieldLevelEncryptionConfig",
    "Description": "Remove a field-level encryption configuration"
  },
  {
    "API": "cloudfront:DeleteFieldLevelEncryptionProfile",
    "EventSource": "cloudfront",
    "EventName": "DeleteFieldLevelEncryptionProfile",
    "Description": "Remove a field-level encryption profile"
  },
  {
    "API": "cloudfront:DeleteFunction",
    "EventSource": "cloudfront",
    "EventName": "DeleteFunction",
    "Description": "Deletes a CloudFront function"
  },
  {
    "API": "cloudfront:DeleteKeyGroup",
    "EventSource": "cloudfront",
    "EventName": "DeleteKeyGroup",
    "Description": "Deletes a key group"
  },
  {
    "API": "cloudfront:DeleteKeyValueStore",
    "EventSource": "cloudfront",
    "EventName": "DeleteKeyValueStore",
    "Description": "Specifies the key value store to delete"
  },
  {
    "API": "cloudfront:DeleteMonitoringSubscription",
    "EventSource": "cloudfront",
    "EventName": "DeleteMonitoringSubscription",
    "Description": "Disables additional CloudWatch metrics for the specified CloudFront distribution"
  },
  {
    "API": "cloudfront:DeleteOriginAccessControl",
    "EventSource": "cloudfront",
    "EventName": "DeleteOriginAccessControl",
    "Description": "Deletes a CloudFront origin access control"
  },
  {
    "API": "cloudfront:DeleteOriginRequestPolicy",
    "EventSource": "cloudfront",
    "EventName": "DeleteOriginRequestPolicy",
    "Description": "Deletes an origin request policy"
  },
  {
    "API": "cloudfront:DeletePublicKey",
    "EventSource": "cloudfront",
    "EventName": "DeletePublicKey",
    "Description": "Remove a public key you previously added to CloudFront"
  },
  {
    "API": "cloudfront:DeleteRealtimeLogConfig",
    "EventSource": "cloudfront",
    "EventName": "DeleteRealtimeLogConfig",
    "Description": "Deletes a real-time log configuration"
  },
  {
    "API": "cloudfront:DeleteResponseHeadersPolicy",
    "EventSource": "cloudfront",
    "EventName": "DeleteResponseHeadersPolicy",
    "Description": "Deletes a response headers policy"
  },
  {
    "API": "cloudfront:DeleteStreamingDistribution",
    "EventSource": "cloudfront",
    "EventName": "DeleteStreamingDistribution",
    "Description": "Delete a streaming distribution"
  },
  {
    "API": "cloudfront:DescribeFunction",
    "EventSource": "cloudfront",
    "EventName": "DescribeFunction",
    "Description": "Gets configuration information and metadata about a CloudFront function, but not the function's code"
  },
  {
    "API": "cloudfront:DescribeKeyValueStore",
    "EventSource": "cloudfront",
    "EventName": "DescribeKeyValueStore",
    "Description": "Specifies the key value store and its configuration"
  },
  {
    "API": "cloudfront:GeneratePresignedUrl",
    "EventSource": "cloudfront",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "cloudfront:GetCachePolicy",
    "EventSource": "cloudfront",
    "EventName": "GetCachePolicy",
    "Description": "Gets a cache policy, including the following metadata:"
  },
  {
    "API": "cloudfront:GetCachePolicyConfig",
    "EventSource": "cloudfront",
    "EventName": "GetCachePolicyConfig",
    "Description": "Gets a cache policy configuration"
  },
  {
    "API": "cloudfront:GetCloudFrontOriginAccessIdentity",
    "EventSource": "cloudfront",
    "EventName": "GetCloudFrontOriginAccessIdentity",
    "Description": "Get the information about an origin access identity"
  },
  {
    "API": "cloudfront:GetCloudFrontOriginAccessIdentityConfig",
    "EventSource": "cloudfront",
    "EventName": "GetCloudFrontOriginAccessIdentityConfig",
    "Description": "Get the configuration information about an origin access identity"
  },
  {
    "API": "cloudfront:GetContinuousDeploymentPolicy",
    "EventSource": "cloudfront",
    "EventName": "GetContinuousDeploymentPolicy",
    "Description": "Gets a continuous deployment policy, including metadata (the policy's identifier and the date and time when the policy was last modified)"
  },
  {
    "API": "cloudfront:GetContinuousDeploymentPolicyConfig",
    "EventSource": "cloudfront",
    "EventName": "GetContinuousDeploymentPolicyConfig",
    "Description": "Gets configuration information about a continuous deployment policy"
  },
  {
    "API": "cloudfront:GetDistribution",
    "EventSource": "cloudfront",
    "EventName": "GetDistribution",
    "Description": "Get the information about a distribution"
  },
  {
    "API": "cloudfront:GetDistributionConfig",
    "EventSource": "cloudfront",
    "EventName": "GetDistributionConfig",
    "Description": "Get the configuration information about a distribution"
  },
  {
    "API": "cloudfront:GetFieldLevelEncryption",
    "EventSource": "cloudfront",
    "EventName": "GetFieldLevelEncryption",
    "Description": "Get the field-level encryption configuration information"
  },
  {
    "API": "cloudfront:GetFieldLevelEncryptionConfig",
    "EventSource": "cloudfront",
    "EventName": "GetFieldLevelEncryptionConfig",
    "Description": "Get the field-level encryption configuration information"
  },
  {
    "API": "cloudfront:GetFieldLevelEncryptionProfile",
    "EventSource": "cloudfront",
    "EventName": "GetFieldLevelEncryptionProfile",
    "Description": "Get the field-level encryption profile information"
  },
  {
    "API": "cloudfront:GetFieldLevelEncryptionProfileConfig",
    "EventSource": "cloudfront",
    "EventName": "GetFieldLevelEncryptionProfileConfig",
    "Description": "Get the field-level encryption profile configuration information"
  },
  {
    "API": "cloudfront:GetFunction",
    "EventSource": "cloudfront",
    "EventName": "GetFunction",
    "Description": "Gets the code of a CloudFront function"
  },
  {
    "API": "cloudfront:GetInvalidation",
    "EventSource": "cloudfront",
    "EventName": "GetInvalidation",
    "Description": "Get the information about an invalidation"
  },
  {
    "API": "cloudfront:GetKeyGroup",
    "EventSource": "cloudfront",
    "EventName": "GetKeyGroup",
    "Description": "Gets a key group, including the date and time when the key group was last modified"
  },
  {
    "API": "cloudfront:GetKeyGroupConfig",
    "EventSource": "cloudfront",
    "EventName": "GetKeyGroupConfig",
    "Description": "Gets a key group configuration"
  },
  {
    "API": "cloudfront:GetMonitoringSubscription",
    "EventSource": "cloudfront",
    "EventName": "GetMonitoringSubscription",
    "Description": "Gets information about whether additional CloudWatch metrics are enabled for the specified CloudFront distribution"
  },
  {
    "API": "cloudfront:GetOriginAccessControl",
    "EventSource": "cloudfront",
    "EventName": "GetOriginAccessControl",
    "Description": "Gets a CloudFront origin access control, including its unique identifier"
  },
  {
    "API": "cloudfront:GetOriginAccessControlConfig",
    "EventSource": "cloudfront",
    "EventName": "GetOriginAccessControlConfig",
    "Description": "Gets a CloudFront origin access control configuration"
  },
  {
    "API": "cloudfront:GetOriginRequestPolicy",
    "EventSource": "cloudfront",
    "EventName": "GetOriginRequestPolicy",
    "Description": "Gets an origin request policy, including the following metadata:"
  },
  {
    "API": "cloudfront:GetOriginRequestPolicyConfig",
    "EventSource": "cloudfront",
    "EventName": "GetOriginRequestPolicyConfig",
    "Description": "Gets an origin request policy configuration"
  },
  {
    "API": "cloudfront:GetPublicKey",
    "EventSource": "cloudfront",
    "EventName": "GetPublicKey",
    "Description": "Gets a public key"
  },
  {
    "API": "cloudfront:GetPublicKeyConfig",
    "EventSource": "cloudfront",
    "EventName": "GetPublicKeyConfig",
    "Description": "Gets a public key configuration"
  },
  {
    "API": "cloudfront:GetRealtimeLogConfig",
    "EventSource": "cloudfront",
    "EventName": "GetRealtimeLogConfig",
    "Description": "Gets a real-time log configuration"
  },
  {
    "API": "cloudfront:GetResponseHeadersPolicy",
    "EventSource": "cloudfront",
    "EventName": "GetResponseHeadersPolicy",
    "Description": "Gets a response headers policy, including metadata (the policy's identifier and the date and time when the policy was last modified)"
  },
  {
    "API": "cloudfront:GetResponseHeadersPolicyConfig",
    "EventSource": "cloudfront",
    "EventName": "GetResponseHeadersPolicyConfig",
    "Description": "Gets a response headers policy configuration"
  },
  {
    "API": "cloudfront:GetStreamingDistribution",
    "EventSource": "cloudfront",
    "EventName": "GetStreamingDistribution",
    "Description": "Gets information about a specified RTMP distribution, including the distribution configuration"
  },
  {
    "API": "cloudfront:GetStreamingDistributionConfig",
    "EventSource": "cloudfront",
    "EventName": "GetStreamingDistributionConfig",
    "Description": "Get the configuration information about a streaming distribution"
  },
  {
    "API": "cloudfront:ListCachePolicies",
    "EventSource": "cloudfront",
    "EventName": "ListCachePolicies",
    "Description": "Gets a list of cache policies"
  },
  {
    "API": "cloudfront:ListCloudFrontOriginAccessIdentities",
    "EventSource": "cloudfront",
    "EventName": "ListCloudFrontOriginAccessIdentities",
    "Description": "Lists origin access identities"
  },
  {
    "API": "cloudfront:ListConflictingAliases",
    "EventSource": "cloudfront",
    "EventName": "ListConflictingAliases",
    "Description": "Gets a list of aliases (also called CNAMEs or alternate domain names) that conflict or overlap with the provided alias, and the associated CloudFront distributions and Amazon Web Services accounts for each conflicting alias"
  },
  {
    "API": "cloudfront:ListContinuousDeploymentPolicies",
    "EventSource": "cloudfront",
    "EventName": "ListContinuousDeploymentPolicies",
    "Description": "Gets a list of the continuous deployment policies in your Amazon Web Services account"
  },
  {
    "API": "cloudfront:ListDistributions",
    "EventSource": "cloudfront",
    "EventName": "ListDistributions",
    "Description": "List CloudFront distributions"
  },
  {
    "API": "cloudfront:ListDistributionsByCachePolicyId",
    "EventSource": "cloudfront",
    "EventName": "ListDistributionsByCachePolicyId",
    "Description": "Gets a list of distribution IDs for distributions that have a cache behavior that's associated with the specified cache policy"
  },
  {
    "API": "cloudfront:ListDistributionsByKeyGroup",
    "EventSource": "cloudfront",
    "EventName": "ListDistributionsByKeyGroup",
    "Description": "Gets a list of distribution IDs for distributions that have a cache behavior that references the specified key group"
  },
  {
    "API": "cloudfront:ListDistributionsByOriginRequestPolicyId",
    "EventSource": "cloudfront",
    "EventName": "ListDistributionsByOriginRequestPolicyId",
    "Description": "Gets a list of distribution IDs for distributions that have a cache behavior that's associated with the specified origin request policy"
  },
  {
    "API": "cloudfront:ListDistributionsByRealtimeLogConfig",
    "EventSource": "cloudfront",
    "EventName": "ListDistributionsByRealtimeLogConfig",
    "Description": "Gets a list of distributions that have a cache behavior that's associated with the specified real-time log configuration"
  },
  {
    "API": "cloudfront:ListDistributionsByResponseHeadersPolicyId",
    "EventSource": "cloudfront",
    "EventName": "ListDistributionsByResponseHeadersPolicyId",
    "Description": "Gets a list of distribution IDs for distributions that have a cache behavior that's associated with the specified response headers policy"
  },
  {
    "API": "cloudfront:ListDistributionsByWebAclId",
    "EventSource": "cloudfront",
    "EventName": "ListDistributionsByWebAclId",
    "Description": "List the distributions that are associated with a specified WAF web ACL"
  },
  {
    "API": "cloudfront:ListFieldLevelEncryptionConfigs",
    "EventSource": "cloudfront",
    "EventName": "ListFieldLevelEncryptionConfigs",
    "Description": "List all field-level encryption configurations that have been created in CloudFront for this account"
  },
  {
    "API": "cloudfront:ListFieldLevelEncryptionProfiles",
    "EventSource": "cloudfront",
    "EventName": "ListFieldLevelEncryptionProfiles",
    "Description": "Request a list of field-level encryption profiles that have been created in CloudFront for this account"
  },
  {
    "API": "cloudfront:ListFunctions",
    "EventSource": "cloudfront",
    "EventName": "ListFunctions",
    "Description": "Gets a list of all CloudFront functions in your Amazon Web Services account"
  },
  {
    "API": "cloudfront:ListInvalidations",
    "EventSource": "cloudfront",
    "EventName": "ListInvalidations",
    "Description": "Lists invalidation batches"
  },
  {
    "API": "cloudfront:ListKeyGroups",
    "EventSource": "cloudfront",
    "EventName": "ListKeyGroups",
    "Description": "Gets a list of key groups"
  },
  {
    "API": "cloudfront:ListKeyValueStores",
    "EventSource": "cloudfront",
    "EventName": "ListKeyValueStores",
    "Description": "Specifies the key value stores to list"
  },
  {
    "API": "cloudfront:ListOriginAccessControls",
    "EventSource": "cloudfront",
    "EventName": "ListOriginAccessControls",
    "Description": "Gets the list of CloudFront origin access controls in this Amazon Web Services account"
  },
  {
    "API": "cloudfront:ListOriginRequestPolicies",
    "EventSource": "cloudfront",
    "EventName": "ListOriginRequestPolicies",
    "Description": "Gets a list of origin request policies"
  },
  {
    "API": "cloudfront:ListPublicKeys",
    "EventSource": "cloudfront",
    "EventName": "ListPublicKeys",
    "Description": "List all public keys that have been added to CloudFront for this account"
  },
  {
    "API": "cloudfront:ListRealtimeLogConfigs",
    "EventSource": "cloudfront",
    "EventName": "ListRealtimeLogConfigs",
    "Description": "Gets a list of real-time log configurations"
  },
  {
    "API": "cloudfront:ListResponseHeadersPolicies",
    "EventSource": "cloudfront",
    "EventName": "ListResponseHeadersPolicies",
    "Description": "Gets a list of response headers policies"
  },
  {
    "API": "cloudfront:ListStreamingDistributions",
    "EventSource": "cloudfront",
    "EventName": "ListStreamingDistributions",
    "Description": "List streaming distributions"
  },
  {
    "API": "cloudfront:ListTagsForResource",
    "EventSource": "cloudfront",
    "EventName": "ListTagsForResource",
    "Description": "List tags for a CloudFront resource"
  },
  {
    "API": "cloudfront:PublishFunction",
    "EventSource": "cloudfront",
    "EventName": "PublishFunction",
    "Description": "Publishes a CloudFront function by copying the function code from the ``DEVELOPMENT`` stage to ``LIVE``"
  },
  {
    "API": "cloudfront:TagResource",
    "EventSource": "cloudfront",
    "EventName": "TagResource",
    "Description": "Add tags to a CloudFront resource"
  },
  {
    "API": "cloudfront:TestFunction",
    "EventSource": "cloudfront",
    "EventName": "TestFunction",
    "Description": "Tests a CloudFront function"
  },
  {
    "API": "cloudfront:UntagResource",
    "EventSource": "cloudfront",
    "EventName": "UntagResource",
    "Description": "Remove tags from a CloudFront resource"
  },
  {
    "API": "cloudfront:UpdateCachePolicy",
    "EventSource": "cloudfront",
    "EventName": "UpdateCachePolicy",
    "Description": "Updates a cache policy configuration"
  },
  {
    "API": "cloudfront:UpdateCloudFrontOriginAccessIdentity",
    "EventSource": "cloudfront",
    "EventName": "UpdateCloudFrontOriginAccessIdentity",
    "Description": "Update an origin access identity"
  },
  {
    "API": "cloudfront:UpdateContinuousDeploymentPolicy",
    "EventSource": "cloudfront",
    "EventName": "UpdateContinuousDeploymentPolicy",
    "Description": "Updates a continuous deployment policy"
  },
  {
    "API": "cloudfront:UpdateDistribution",
    "EventSource": "cloudfront",
    "EventName": "UpdateDistribution",
    "Description": "Updates the configuration for a CloudFront distribution"
  },
  {
    "API": "cloudfront:UpdateDistributionWithStagingConfig",
    "EventSource": "cloudfront",
    "EventName": "UpdateDistributionWithStagingConfig",
    "Description": "Copies the staging distribution's configuration to its corresponding primary distribution"
  },
  {
    "API": "cloudfront:UpdateFieldLevelEncryptionConfig",
    "EventSource": "cloudfront",
    "EventName": "UpdateFieldLevelEncryptionConfig",
    "Description": "Update a field-level encryption configuration"
  },
  {
    "API": "cloudfront:UpdateFieldLevelEncryptionProfile",
    "EventSource": "cloudfront",
    "EventName": "UpdateFieldLevelEncryptionProfile",
    "Description": "Update a field-level encryption profile"
  },
  {
    "API": "cloudfront:UpdateFunction",
    "EventSource": "cloudfront",
    "EventName": "UpdateFunction",
    "Description": "Updates a CloudFront function"
  },
  {
    "API": "cloudfront:UpdateKeyGroup",
    "EventSource": "cloudfront",
    "EventName": "UpdateKeyGroup",
    "Description": "Updates a key group"
  },
  {
    "API": "cloudfront:UpdateKeyValueStore",
    "EventSource": "cloudfront",
    "EventName": "UpdateKeyValueStore",
    "Description": "Specifies the key value store to update"
  },
  {
    "API": "cloudfront:UpdateOriginAccessControl",
    "EventSource": "cloudfront",
    "EventName": "UpdateOriginAccessControl",
    "Description": "Updates a CloudFront origin access control"
  },
  {
    "API": "cloudfront:UpdateOriginRequestPolicy",
    "EventSource": "cloudfront",
    "EventName": "UpdateOriginRequestPolicy",
    "Description": "Updates an origin request policy configuration"
  },
  {
    "API": "cloudfront:UpdatePublicKey",
    "EventSource": "cloudfront",
    "EventName": "UpdatePublicKey",
    "Description": "Update public key information"
  },
  {
    "API": "cloudfront:UpdateRealtimeLogConfig",
    "EventSource": "cloudfront",
    "EventName": "UpdateRealtimeLogConfig",
    "Description": "Updates a real-time log configuration"
  },
  {
    "API": "cloudfront:UpdateResponseHeadersPolicy",
    "EventSource": "cloudfront",
    "EventName": "UpdateResponseHeadersPolicy",
    "Description": "Updates a response headers policy"
  },
  {
    "API": "cloudfront:UpdateStreamingDistribution",
    "EventSource": "cloudfront",
    "EventName": "UpdateStreamingDistribution",
    "Description": "Update a streaming distribution"
  },
  {
    "API": "cloudfront-keyvaluestore:DeleteKey",
    "EventSource": "cloudfront-keyvaluestore",
    "EventName": "DeleteKey",
    "Description": "Deletes the key value pair specified by the key"
  },
  {
    "API": "cloudfront-keyvaluestore:DescribeKeyValueStore",
    "EventSource": "cloudfront-keyvaluestore",
    "EventName": "DescribeKeyValueStore",
    "Description": "Returns metadata information about Key Value Store"
  },
  {
    "API": "cloudfront-keyvaluestore:GeneratePresignedUrl",
    "EventSource": "cloudfront-keyvaluestore",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "cloudfront-keyvaluestore:GetKey",
    "EventSource": "cloudfront-keyvaluestore",
    "EventName": "GetKey",
    "Description": "Returns a key value pair"
  },
  {
    "API": "cloudfront-keyvaluestore:ListKeys",
    "EventSource": "cloudfront-keyvaluestore",
    "EventName": "ListKeys",
    "Description": "Returns a list of key value pairs"
  },
  {
    "API": "cloudfront-keyvaluestore:PutKey",
    "EventSource": "cloudfront-keyvaluestore",
    "EventName": "PutKey",
    "Description": "Creates a new key value pair or replaces the value of an existing key"
  },
  {
    "API": "cloudfront-keyvaluestore:UpdateKeys",
    "EventSource": "cloudfront-keyvaluestore",
    "EventName": "UpdateKeys",
    "Description": "Puts or Deletes multiple key value pairs in a single, all-or-nothing operation"
  },
  {
    "API": "cloudhsm:AddTagsToResource",
    "EventSource": "cloudhsm",
    "EventName": "AddTagsToResource",
    "Description": "This is documentation for **AWS CloudHSM Classic**"
  },
  {
    "API": "cloudhsm:CreateHapg",
    "EventSource": "cloudhsm",
    "EventName": "CreateHapg",
    "Description": "This is documentation for **AWS CloudHSM Classic**"
  },
  {
    "API": "cloudhsm:CreateHsm",
    "EventSource": "cloudhsm",
    "EventName": "CreateHsm",
    "Description": "This is documentation for **AWS CloudHSM Classic**"
  },
  {
    "API": "cloudhsm:CreateLunaClient",
    "EventSource": "cloudhsm",
    "EventName": "CreateLunaClient",
    "Description": "This is documentation for **AWS CloudHSM Classic**"
  },
  {
    "API": "cloudhsm:DeleteHapg",
    "EventSource": "cloudhsm",
    "EventName": "DeleteHapg",
    "Description": "This is documentation for **AWS CloudHSM Classic**"
  },
  {
    "API": "cloudhsm:DeleteHsm",
    "EventSource": "cloudhsm",
    "EventName": "DeleteHsm",
    "Description": "This is documentation for **AWS CloudHSM Classic**"
  },
  {
    "API": "cloudhsm:DeleteLunaClient",
    "EventSource": "cloudhsm",
    "EventName": "DeleteLunaClient",
    "Description": "This is documentation for **AWS CloudHSM Classic**"
  },
  {
    "API": "cloudhsm:DescribeHapg",
    "EventSource": "cloudhsm",
    "EventName": "DescribeHapg",
    "Description": "This is documentation for **AWS CloudHSM Classic**"
  },
  {
    "API": "cloudhsm:DescribeHsm",
    "EventSource": "cloudhsm",
    "EventName": "DescribeHsm",
    "Description": "This is documentation for **AWS CloudHSM Classic**"
  },
  {
    "API": "cloudhsm:DescribeLunaClient",
    "EventSource": "cloudhsm",
    "EventName": "DescribeLunaClient",
    "Description": "This is documentation for **AWS CloudHSM Classic**"
  },
  {
    "API": "cloudhsm:GeneratePresignedUrl",
    "EventSource": "cloudhsm",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "cloudhsm:GetConfig",
    "EventSource": "cloudhsm",
    "EventName": "GetConfig",
    "Description": "This is documentation for **AWS CloudHSM Classic**"
  },
  {
    "API": "cloudhsm:ListAvailableZones",
    "EventSource": "cloudhsm",
    "EventName": "ListAvailableZones",
    "Description": "This is documentation for **AWS CloudHSM Classic**"
  },
  {
    "API": "cloudhsm:ListHapgs",
    "EventSource": "cloudhsm",
    "EventName": "ListHapgs",
    "Description": "This is documentation for **AWS CloudHSM Classic**"
  },
  {
    "API": "cloudhsm:ListHsms",
    "EventSource": "cloudhsm",
    "EventName": "ListHsms",
    "Description": "This is documentation for **AWS CloudHSM Classic**"
  },
  {
    "API": "cloudhsm:ListLunaClients",
    "EventSource": "cloudhsm",
    "EventName": "ListLunaClients",
    "Description": "This is documentation for **AWS CloudHSM Classic**"
  },
  {
    "API": "cloudhsm:ListTagsForResource",
    "EventSource": "cloudhsm",
    "EventName": "ListTagsForResource",
    "Description": "This is documentation for **AWS CloudHSM Classic**"
  },
  {
    "API": "cloudhsm:ModifyHapg",
    "EventSource": "cloudhsm",
    "EventName": "ModifyHapg",
    "Description": "This is documentation for **AWS CloudHSM Classic**"
  },
  {
    "API": "cloudhsm:ModifyHsm",
    "EventSource": "cloudhsm",
    "EventName": "ModifyHsm",
    "Description": "This is documentation for **AWS CloudHSM Classic**"
  },
  {
    "API": "cloudhsm:ModifyLunaClient",
    "EventSource": "cloudhsm",
    "EventName": "ModifyLunaClient",
    "Description": "This is documentation for **AWS CloudHSM Classic**"
  },
  {
    "API": "cloudhsm:RemoveTagsFromResource",
    "EventSource": "cloudhsm",
    "EventName": "RemoveTagsFromResource",
    "Description": "This is documentation for **AWS CloudHSM Classic**"
  },
  {
    "API": "cloudhsmv2:CopyBackupToRegion",
    "EventSource": "cloudhsmv2",
    "EventName": "CopyBackupToRegion",
    "Description": "Copy an AWS CloudHSM cluster backup to a different region"
  },
  {
    "API": "cloudhsmv2:CreateCluster",
    "EventSource": "cloudhsmv2",
    "EventName": "CreateCluster",
    "Description": "Creates a new AWS CloudHSM cluster"
  },
  {
    "API": "cloudhsmv2:CreateHsm",
    "EventSource": "cloudhsmv2",
    "EventName": "CreateHsm",
    "Description": "Creates a new hardware security module (HSM) in the specified AWS CloudHSM cluster"
  },
  {
    "API": "cloudhsmv2:DeleteBackup",
    "EventSource": "cloudhsmv2",
    "EventName": "DeleteBackup",
    "Description": "Deletes a specified AWS CloudHSM backup"
  },
  {
    "API": "cloudhsmv2:DeleteCluster",
    "EventSource": "cloudhsmv2",
    "EventName": "DeleteCluster",
    "Description": "Deletes the specified AWS CloudHSM cluster"
  },
  {
    "API": "cloudhsmv2:DeleteHsm",
    "EventSource": "cloudhsmv2",
    "EventName": "DeleteHsm",
    "Description": "Deletes the specified HSM"
  },
  {
    "API": "cloudhsmv2:DescribeBackups",
    "EventSource": "cloudhsmv2",
    "EventName": "DescribeBackups",
    "Description": "Gets information about backups of AWS CloudHSM clusters"
  },
  {
    "API": "cloudhsmv2:DescribeClusters",
    "EventSource": "cloudhsmv2",
    "EventName": "DescribeClusters",
    "Description": "Gets information about AWS CloudHSM clusters"
  },
  {
    "API": "cloudhsmv2:GeneratePresignedUrl",
    "EventSource": "cloudhsmv2",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "cloudhsmv2:InitializeCluster",
    "EventSource": "cloudhsmv2",
    "EventName": "InitializeCluster",
    "Description": "Claims an AWS CloudHSM cluster by submitting the cluster certificate issued by your issuing certificate authority (CA) and the CA's root certificate"
  },
  {
    "API": "cloudhsmv2:ListTags",
    "EventSource": "cloudhsmv2",
    "EventName": "ListTags",
    "Description": "Gets a list of tags for the specified AWS CloudHSM cluster"
  },
  {
    "API": "cloudhsmv2:ModifyBackupAttributes",
    "EventSource": "cloudhsmv2",
    "EventName": "ModifyBackupAttributes",
    "Description": "Modifies attributes for AWS CloudHSM backup"
  },
  {
    "API": "cloudhsmv2:ModifyCluster",
    "EventSource": "cloudhsmv2",
    "EventName": "ModifyCluster",
    "Description": "Modifies AWS CloudHSM cluster"
  },
  {
    "API": "cloudhsmv2:RestoreBackup",
    "EventSource": "cloudhsmv2",
    "EventName": "RestoreBackup",
    "Description": "Restores a specified AWS CloudHSM backup that is in the ``PENDING_DELETION`` state"
  },
  {
    "API": "cloudhsmv2:TagResource",
    "EventSource": "cloudhsmv2",
    "EventName": "TagResource",
    "Description": "Adds or overwrites one or more tags for the specified AWS CloudHSM cluster"
  },
  {
    "API": "cloudhsmv2:UntagResource",
    "EventSource": "cloudhsmv2",
    "EventName": "UntagResource",
    "Description": "Removes the specified tag or tags from the specified AWS CloudHSM cluster"
  },
  {
    "API": "cloudsearch:BuildSuggesters",
    "EventSource": "cloudsearch",
    "EventName": "BuildSuggesters",
    "Description": "Indexes the search suggestions"
  },
  {
    "API": "cloudsearch:CreateDomain",
    "EventSource": "cloudsearch",
    "EventName": "CreateDomain",
    "Description": "Creates a new search domain"
  },
  {
    "API": "cloudsearch:DefineAnalysisScheme",
    "EventSource": "cloudsearch",
    "EventName": "DefineAnalysisScheme",
    "Description": "Configures an analysis scheme that can be applied to a ``text`` or ``text-array`` field to define language-specific text processing options"
  },
  {
    "API": "cloudsearch:DefineExpression",
    "EventSource": "cloudsearch",
    "EventName": "DefineExpression",
    "Description": "Configures an ``Expression`` for the search domain"
  },
  {
    "API": "cloudsearch:DefineIndexField",
    "EventSource": "cloudsearch",
    "EventName": "DefineIndexField",
    "Description": "Configures an ``IndexField`` for the search domain"
  },
  {
    "API": "cloudsearch:DefineSuggester",
    "EventSource": "cloudsearch",
    "EventName": "DefineSuggester",
    "Description": "Configures a suggester for a domain"
  },
  {
    "API": "cloudsearch:DeleteAnalysisScheme",
    "EventSource": "cloudsearch",
    "EventName": "DeleteAnalysisScheme",
    "Description": "Deletes an analysis scheme"
  },
  {
    "API": "cloudsearch:DeleteDomain",
    "EventSource": "cloudsearch",
    "EventName": "DeleteDomain",
    "Description": "Permanently deletes a search domain and all of its data"
  },
  {
    "API": "cloudsearch:DeleteExpression",
    "EventSource": "cloudsearch",
    "EventName": "DeleteExpression",
    "Description": "Removes an ``Expression`` from the search domain"
  },
  {
    "API": "cloudsearch:DeleteIndexField",
    "EventSource": "cloudsearch",
    "EventName": "DeleteIndexField",
    "Description": "Removes an ``IndexField`` from the search domain"
  },
  {
    "API": "cloudsearch:DeleteSuggester",
    "EventSource": "cloudsearch",
    "EventName": "DeleteSuggester",
    "Description": "Deletes a suggester"
  },
  {
    "API": "cloudsearch:DescribeAnalysisSchemes",
    "EventSource": "cloudsearch",
    "EventName": "DescribeAnalysisSchemes",
    "Description": "Gets the analysis schemes configured for a domain"
  },
  {
    "API": "cloudsearch:DescribeAvailabilityOptions",
    "EventSource": "cloudsearch",
    "EventName": "DescribeAvailabilityOptions",
    "Description": "Gets the availability options configured for a domain"
  },
  {
    "API": "cloudsearch:DescribeDomainEndpointOptions",
    "EventSource": "cloudsearch",
    "EventName": "DescribeDomainEndpointOptions",
    "Description": "Returns the domain's endpoint options, specifically whether all requests to the domain must arrive over HTTPS"
  },
  {
    "API": "cloudsearch:DescribeDomains",
    "EventSource": "cloudsearch",
    "EventName": "DescribeDomains",
    "Description": "Gets information about the search domains owned by this account"
  },
  {
    "API": "cloudsearch:DescribeExpressions",
    "EventSource": "cloudsearch",
    "EventName": "DescribeExpressions",
    "Description": "Gets the expressions configured for the search domain"
  },
  {
    "API": "cloudsearch:DescribeIndexFields",
    "EventSource": "cloudsearch",
    "EventName": "DescribeIndexFields",
    "Description": "Gets information about the index fields configured for the search domain"
  },
  {
    "API": "cloudsearch:DescribeScalingParameters",
    "EventSource": "cloudsearch",
    "EventName": "DescribeScalingParameters",
    "Description": "Gets the scaling parameters configured for a domain"
  },
  {
    "API": "cloudsearch:DescribeServiceAccessPolicies",
    "EventSource": "cloudsearch",
    "EventName": "DescribeServiceAccessPolicies",
    "Description": "Gets information about the access policies that control access to the domain's document and search endpoints"
  },
  {
    "API": "cloudsearch:DescribeSuggesters",
    "EventSource": "cloudsearch",
    "EventName": "DescribeSuggesters",
    "Description": "Gets the suggesters configured for a domain"
  },
  {
    "API": "cloudsearch:GeneratePresignedUrl",
    "EventSource": "cloudsearch",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "cloudsearch:IndexDocuments",
    "EventSource": "cloudsearch",
    "EventName": "IndexDocuments",
    "Description": "Tells the search domain to start indexing its documents using the latest indexing options"
  },
  {
    "API": "cloudsearch:ListDomainNames",
    "EventSource": "cloudsearch",
    "EventName": "ListDomainNames",
    "Description": "Lists all search domains owned by an account"
  },
  {
    "API": "cloudsearch:UpdateAvailabilityOptions",
    "EventSource": "cloudsearch",
    "EventName": "UpdateAvailabilityOptions",
    "Description": "Configures the availability options for a domain"
  },
  {
    "API": "cloudsearch:UpdateDomainEndpointOptions",
    "EventSource": "cloudsearch",
    "EventName": "UpdateDomainEndpointOptions",
    "Description": "Updates the domain's endpoint options, specifically whether all requests to the domain must arrive over HTTPS"
  },
  {
    "API": "cloudsearch:UpdateScalingParameters",
    "EventSource": "cloudsearch",
    "EventName": "UpdateScalingParameters",
    "Description": "Configures scaling parameters for a domain"
  },
  {
    "API": "cloudsearch:UpdateServiceAccessPolicies",
    "EventSource": "cloudsearch",
    "EventName": "UpdateServiceAccessPolicies",
    "Description": "Configures the access rules that control access to the domain's document and search endpoints"
  },
  {
    "API": "cloudsearchdomain:GeneratePresignedUrl",
    "EventSource": "cloudsearchdomain",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "cloudsearchdomain:UploadDocuments",
    "EventSource": "cloudsearchdomain",
    "EventName": "UploadDocuments",
    "Description": "Posts a batch of documents to a search domain for indexing"
  },
  {
    "API": "cloudtrail:AddTags",
    "EventSource": "cloudtrail",
    "EventName": "AddTags",
    "Description": "Adds one or more tags to a trail, event data store, or channel, up to a limit of 50"
  },
  {
    "API": "cloudtrail:CancelQuery",
    "EventSource": "cloudtrail",
    "EventName": "CancelQuery",
    "Description": "Cancels a query if the query is not in a terminated state, such as ``CANCELLED``, ``FAILED``, ``TIMED_OUT``, or ``FINISHED``"
  },
  {
    "API": "cloudtrail:CreateChannel",
    "EventSource": "cloudtrail",
    "EventName": "CreateChannel",
    "Description": "Creates a channel for CloudTrail to ingest events from a partner or external source"
  },
  {
    "API": "cloudtrail:CreateEventDataStore",
    "EventSource": "cloudtrail",
    "EventName": "CreateEventDataStore",
    "Description": "Creates a new event data store"
  },
  {
    "API": "cloudtrail:CreateTrail",
    "EventSource": "cloudtrail",
    "EventName": "CreateTrail",
    "Description": "Creates a trail that specifies the settings for delivery of log data to an Amazon S3 bucket"
  },
  {
    "API": "cloudtrail:DeleteChannel",
    "EventSource": "cloudtrail",
    "EventName": "DeleteChannel",
    "Description": "Deletes a channel"
  },
  {
    "API": "cloudtrail:DeleteEventDataStore",
    "EventSource": "cloudtrail",
    "EventName": "DeleteEventDataStore",
    "Description": "Disables the event data store specified by ``EventDataStore``, which accepts an event data store ARN"
  },
  {
    "API": "cloudtrail:DeleteResourcePolicy",
    "EventSource": "cloudtrail",
    "EventName": "DeleteResourcePolicy",
    "Description": "Deletes the resource-based policy attached to the CloudTrail channel"
  },
  {
    "API": "cloudtrail:DeleteTrail",
    "EventSource": "cloudtrail",
    "EventName": "DeleteTrail",
    "Description": "Deletes a trail"
  },
  {
    "API": "cloudtrail:DeregisterOrganizationDelegatedAdmin",
    "EventSource": "cloudtrail",
    "EventName": "DeregisterOrganizationDelegatedAdmin",
    "Description": "Removes CloudTrail delegated administrator permissions from a member account in an organization"
  },
  {
    "API": "cloudtrail:DescribeQuery",
    "EventSource": "cloudtrail",
    "EventName": "DescribeQuery",
    "Description": "Returns metadata about a query, including query run time in milliseconds, number of events scanned and matched, and query status"
  },
  {
    "API": "cloudtrail:DescribeTrails",
    "EventSource": "cloudtrail",
    "EventName": "DescribeTrails",
    "Description": "Retrieves settings for one or more trails associated with the current Region for your account"
  },
  {
    "API": "cloudtrail:DisableFederation",
    "EventSource": "cloudtrail",
    "EventName": "DisableFederation",
    "Description": "Disables Lake query federation on the specified event data store"
  },
  {
    "API": "cloudtrail:EnableFederation",
    "EventSource": "cloudtrail",
    "EventName": "EnableFederation",
    "Description": "Enables Lake query federation on the specified event data store"
  },
  {
    "API": "cloudtrail:GeneratePresignedUrl",
    "EventSource": "cloudtrail",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "cloudtrail:GetChannel",
    "EventSource": "cloudtrail",
    "EventName": "GetChannel",
    "Description": "Returns information about a specific channel"
  },
  {
    "API": "cloudtrail:GetEventDataStore",
    "EventSource": "cloudtrail",
    "EventName": "GetEventDataStore",
    "Description": "Returns information about an event data store specified as either an ARN or the ID portion of the ARN"
  },
  {
    "API": "cloudtrail:GetEventSelectors",
    "EventSource": "cloudtrail",
    "EventName": "GetEventSelectors",
    "Description": "Describes the settings for the event selectors that you configured for your trail"
  },
  {
    "API": "cloudtrail:GetImport",
    "EventSource": "cloudtrail",
    "EventName": "GetImport",
    "Description": "Returns information about a specific import"
  },
  {
    "API": "cloudtrail:GetInsightSelectors",
    "EventSource": "cloudtrail",
    "EventName": "GetInsightSelectors",
    "Description": "Describes the settings for the Insights event selectors that you configured for your trail or event data store"
  },
  {
    "API": "cloudtrail:GetQueryResults",
    "EventSource": "cloudtrail",
    "EventName": "GetQueryResults",
    "Description": "Gets event data results of a query"
  },
  {
    "API": "cloudtrail:GetResourcePolicy",
    "EventSource": "cloudtrail",
    "EventName": "GetResourcePolicy",
    "Description": "Retrieves the JSON text of the resource-based policy document attached to the CloudTrail channel"
  },
  {
    "API": "cloudtrail:GetTrail",
    "EventSource": "cloudtrail",
    "EventName": "GetTrail",
    "Description": "Returns settings information for a specified trail"
  },
  {
    "API": "cloudtrail:GetTrailStatus",
    "EventSource": "cloudtrail",
    "EventName": "GetTrailStatus",
    "Description": "Returns a JSON-formatted list of information about the specified trail"
  },
  {
    "API": "cloudtrail:ListChannels",
    "EventSource": "cloudtrail",
    "EventName": "ListChannels",
    "Description": "Lists the channels in the current account, and their source names"
  },
  {
    "API": "cloudtrail:ListEventDataStores",
    "EventSource": "cloudtrail",
    "EventName": "ListEventDataStores",
    "Description": "Returns information about all event data stores in the account, in the current Region"
  },
  {
    "API": "cloudtrail:ListImportFailures",
    "EventSource": "cloudtrail",
    "EventName": "ListImportFailures",
    "Description": "Returns a list of failures for the specified import"
  },
  {
    "API": "cloudtrail:ListImports",
    "EventSource": "cloudtrail",
    "EventName": "ListImports",
    "Description": "Returns information on all imports, or a select set of imports by ``ImportStatus`` or ``Destination``"
  },
  {
    "API": "cloudtrail:ListInsightsMetricData",
    "EventSource": "cloudtrail",
    "EventName": "ListInsightsMetricData",
    "Description": "Returns Insights metrics data for trails that have enabled Insights"
  },
  {
    "API": "cloudtrail:ListPublicKeys",
    "EventSource": "cloudtrail",
    "EventName": "ListPublicKeys",
    "Description": "Returns all public keys whose private keys were used to sign the digest files within the specified time range"
  },
  {
    "API": "cloudtrail:ListQueries",
    "EventSource": "cloudtrail",
    "EventName": "ListQueries",
    "Description": "Returns a list of queries and query statuses for the past seven days"
  },
  {
    "API": "cloudtrail:ListTags",
    "EventSource": "cloudtrail",
    "EventName": "ListTags",
    "Description": "Lists the tags for the specified trails, event data stores, or channels in the current Region"
  },
  {
    "API": "cloudtrail:ListTrails",
    "EventSource": "cloudtrail",
    "EventName": "ListTrails",
    "Description": "Lists trails that are in the current account"
  },
  {
    "API": "cloudtrail:LookupEvents",
    "EventSource": "cloudtrail",
    "EventName": "LookupEvents",
    "Description": "Looks up `management events <https://docs"
  },
  {
    "API": "cloudtrail:PutEventSelectors",
    "EventSource": "cloudtrail",
    "EventName": "PutEventSelectors",
    "Description": "Configures an event selector or advanced event selectors for your trail"
  },
  {
    "API": "cloudtrail:PutInsightSelectors",
    "EventSource": "cloudtrail",
    "EventName": "PutInsightSelectors",
    "Description": "Lets you enable Insights event logging by specifying the Insights selectors that you want to enable on an existing trail or event data store"
  },
  {
    "API": "cloudtrail:PutResourcePolicy",
    "EventSource": "cloudtrail",
    "EventName": "PutResourcePolicy",
    "Description": "Attaches a resource-based permission policy to a CloudTrail channel that is used for an integration with an event source outside of Amazon Web Services"
  },
  {
    "API": "cloudtrail:RegisterOrganizationDelegatedAdmin",
    "EventSource": "cloudtrail",
    "EventName": "RegisterOrganizationDelegatedAdmin",
    "Description": "Registers an organization’s member account as the CloudTrail `delegated administrator <https://docs"
  },
  {
    "API": "cloudtrail:RemoveTags",
    "EventSource": "cloudtrail",
    "EventName": "RemoveTags",
    "Description": "Removes the specified tags from a trail, event data store, or channel"
  },
  {
    "API": "cloudtrail:RestoreEventDataStore",
    "EventSource": "cloudtrail",
    "EventName": "RestoreEventDataStore",
    "Description": "Restores a deleted event data store specified by ``EventDataStore``, which accepts an event data store ARN"
  },
  {
    "API": "cloudtrail:StartEventDataStoreIngestion",
    "EventSource": "cloudtrail",
    "EventName": "StartEventDataStoreIngestion",
    "Description": "Starts the ingestion of live events on an event data store specified as either an ARN or the ID portion of the ARN"
  },
  {
    "API": "cloudtrail:StartImport",
    "EventSource": "cloudtrail",
    "EventName": "StartImport",
    "Description": "Starts an import of logged trail events from a source S3 bucket to a destination event data store"
  },
  {
    "API": "cloudtrail:StartLogging",
    "EventSource": "cloudtrail",
    "EventName": "StartLogging",
    "Description": "Starts the recording of Amazon Web Services API calls and log file delivery for a trail"
  },
  {
    "API": "cloudtrail:StartQuery",
    "EventSource": "cloudtrail",
    "EventName": "StartQuery",
    "Description": "Starts a CloudTrail Lake query"
  },
  {
    "API": "cloudtrail:StopEventDataStoreIngestion",
    "EventSource": "cloudtrail",
    "EventName": "StopEventDataStoreIngestion",
    "Description": "Stops the ingestion of live events on an event data store specified as either an ARN or the ID portion of the ARN"
  },
  {
    "API": "cloudtrail:StopImport",
    "EventSource": "cloudtrail",
    "EventName": "StopImport",
    "Description": "Stops a specified import"
  },
  {
    "API": "cloudtrail:StopLogging",
    "EventSource": "cloudtrail",
    "EventName": "StopLogging",
    "Description": "Suspends the recording of Amazon Web Services API calls and log file delivery for the specified trail"
  },
  {
    "API": "cloudtrail:UpdateChannel",
    "EventSource": "cloudtrail",
    "EventName": "UpdateChannel",
    "Description": "Updates a channel specified by a required channel ARN or UUID"
  },
  {
    "API": "cloudtrail:UpdateEventDataStore",
    "EventSource": "cloudtrail",
    "EventName": "UpdateEventDataStore",
    "Description": "Updates an event data store"
  },
  {
    "API": "cloudtrail:UpdateTrail",
    "EventSource": "cloudtrail",
    "EventName": "UpdateTrail",
    "Description": "Updates trail settings that control what events you are logging, and how to handle log files"
  },
  {
    "API": "cloudtrail-data:GeneratePresignedUrl",
    "EventSource": "cloudtrail-data",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "cloudtrail-data:PutAuditEvents",
    "EventSource": "cloudtrail-data",
    "EventName": "PutAuditEvents",
    "Description": "Ingests your application events into CloudTrail Lake"
  },
  {
    "API": "cloudwatch:DeleteAlarms",
    "EventSource": "cloudwatch",
    "EventName": "DeleteAlarms",
    "Description": "Deletes the specified alarms"
  },
  {
    "API": "cloudwatch:DeleteAnomalyDetector",
    "EventSource": "cloudwatch",
    "EventName": "DeleteAnomalyDetector",
    "Description": "Deletes the specified anomaly detection model from your account"
  },
  {
    "API": "cloudwatch:DeleteDashboards",
    "EventSource": "cloudwatch",
    "EventName": "DeleteDashboards",
    "Description": "Deletes all dashboards that you specify"
  },
  {
    "API": "cloudwatch:DeleteInsightRules",
    "EventSource": "cloudwatch",
    "EventName": "DeleteInsightRules",
    "Description": "Permanently deletes the specified Contributor Insights rules"
  },
  {
    "API": "cloudwatch:DeleteMetricStream",
    "EventSource": "cloudwatch",
    "EventName": "DeleteMetricStream",
    "Description": "Permanently deletes the metric stream that you specify"
  },
  {
    "API": "cloudwatch:DescribeAlarmHistory",
    "EventSource": "cloudwatch",
    "EventName": "DescribeAlarmHistory",
    "Description": "Retrieves the history for the specified alarm"
  },
  {
    "API": "cloudwatch:DescribeAlarms",
    "EventSource": "cloudwatch",
    "EventName": "DescribeAlarms",
    "Description": "Retrieves the specified alarms"
  },
  {
    "API": "cloudwatch:DescribeAlarmsForMetric",
    "EventSource": "cloudwatch",
    "EventName": "DescribeAlarmsForMetric",
    "Description": "Retrieves the alarms for the specified metric"
  },
  {
    "API": "cloudwatch:DescribeAnomalyDetectors",
    "EventSource": "cloudwatch",
    "EventName": "DescribeAnomalyDetectors",
    "Description": "Lists the anomaly detection models that you have created in your account"
  },
  {
    "API": "cloudwatch:DescribeInsightRules",
    "EventSource": "cloudwatch",
    "EventName": "DescribeInsightRules",
    "Description": "Returns a list of all the Contributor Insights rules in your account"
  },
  {
    "API": "cloudwatch:DisableAlarmActions",
    "EventSource": "cloudwatch",
    "EventName": "DisableAlarmActions",
    "Description": "Disables the actions for the specified alarms"
  },
  {
    "API": "cloudwatch:DisableInsightRules",
    "EventSource": "cloudwatch",
    "EventName": "DisableInsightRules",
    "Description": "Disables the specified Contributor Insights rules"
  },
  {
    "API": "cloudwatch:EnableAlarmActions",
    "EventSource": "cloudwatch",
    "EventName": "EnableAlarmActions",
    "Description": "Enables the actions for the specified alarms"
  },
  {
    "API": "cloudwatch:EnableInsightRules",
    "EventSource": "cloudwatch",
    "EventName": "EnableInsightRules",
    "Description": "Enables the specified Contributor Insights rules"
  },
  {
    "API": "cloudwatch:GeneratePresignedUrl",
    "EventSource": "cloudwatch",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "cloudwatch:GetDashboard",
    "EventSource": "cloudwatch",
    "EventName": "GetDashboard",
    "Description": "Displays the details of the dashboard that you specify"
  },
  {
    "API": "cloudwatch:GetInsightRuleReport",
    "EventSource": "cloudwatch",
    "EventName": "GetInsightRuleReport",
    "Description": "This operation returns the time series data collected by a Contributor Insights rule"
  },
  {
    "API": "cloudwatch:GetMetricData",
    "EventSource": "cloudwatch",
    "EventName": "GetMetricData",
    "Description": "You can use the ``GetMetricData`` API to retrieve CloudWatch metric values"
  },
  {
    "API": "cloudwatch:GetMetricStatistics",
    "EventSource": "cloudwatch",
    "EventName": "GetMetricStatistics",
    "Description": "Gets statistics for the specified metric"
  },
  {
    "API": "cloudwatch:GetMetricStream",
    "EventSource": "cloudwatch",
    "EventName": "GetMetricStream",
    "Description": "Returns information about the metric stream that you specify"
  },
  {
    "API": "cloudwatch:GetMetricWidgetImage",
    "EventSource": "cloudwatch",
    "EventName": "GetMetricWidgetImage",
    "Description": "You can use the ``GetMetricWidgetImage`` API to retrieve a snapshot graph of one or more Amazon CloudWatch metrics as a bitmap image"
  },
  {
    "API": "cloudwatch:ListDashboards",
    "EventSource": "cloudwatch",
    "EventName": "ListDashboards",
    "Description": "Returns a list of the dashboards for your account"
  },
  {
    "API": "cloudwatch:ListManagedInsightRules",
    "EventSource": "cloudwatch",
    "EventName": "ListManagedInsightRules",
    "Description": "Returns a list that contains the number of managed Contributor Insights rules in your account"
  },
  {
    "API": "cloudwatch:ListMetricStreams",
    "EventSource": "cloudwatch",
    "EventName": "ListMetricStreams",
    "Description": "Returns a list of metric streams in this account"
  },
  {
    "API": "cloudwatch:ListMetrics",
    "EventSource": "cloudwatch",
    "EventName": "ListMetrics",
    "Description": "List the specified metrics"
  },
  {
    "API": "cloudwatch:ListTagsForResource",
    "EventSource": "cloudwatch",
    "EventName": "ListTagsForResource",
    "Description": "Displays the tags associated with a CloudWatch resource"
  },
  {
    "API": "cloudwatch:PutAnomalyDetector",
    "EventSource": "cloudwatch",
    "EventName": "PutAnomalyDetector",
    "Description": "Creates an anomaly detection model for a CloudWatch metric"
  },
  {
    "API": "cloudwatch:PutCompositeAlarm",
    "EventSource": "cloudwatch",
    "EventName": "PutCompositeAlarm",
    "Description": "Creates or updates a *composite alarm*"
  },
  {
    "API": "cloudwatch:PutDashboard",
    "EventSource": "cloudwatch",
    "EventName": "PutDashboard",
    "Description": "Creates a dashboard if it does not already exist, or updates an existing dashboard"
  },
  {
    "API": "cloudwatch:PutInsightRule",
    "EventSource": "cloudwatch",
    "EventName": "PutInsightRule",
    "Description": "Creates a Contributor Insights rule"
  },
  {
    "API": "cloudwatch:PutManagedInsightRules",
    "EventSource": "cloudwatch",
    "EventName": "PutManagedInsightRules",
    "Description": "Creates a managed Contributor Insights rule for a specified Amazon Web Services resource"
  },
  {
    "API": "cloudwatch:PutMetricAlarm",
    "EventSource": "cloudwatch",
    "EventName": "PutMetricAlarm",
    "Description": "Creates or updates an alarm and associates it with the specified metric, metric math expression, anomaly detection model, or Metrics Insights query"
  },
  {
    "API": "cloudwatch:PutMetricData",
    "EventSource": "cloudwatch",
    "EventName": "PutMetricData",
    "Description": "Publishes metric data points to Amazon CloudWatch"
  },
  {
    "API": "cloudwatch:PutMetricStream",
    "EventSource": "cloudwatch",
    "EventName": "PutMetricStream",
    "Description": "Creates or updates a metric stream"
  },
  {
    "API": "cloudwatch:SetAlarmState",
    "EventSource": "cloudwatch",
    "EventName": "SetAlarmState",
    "Description": "Temporarily sets the state of an alarm for testing purposes"
  },
  {
    "API": "cloudwatch:StartMetricStreams",
    "EventSource": "cloudwatch",
    "EventName": "StartMetricStreams",
    "Description": "Starts the streaming of metrics for one or more of your metric streams"
  },
  {
    "API": "cloudwatch:StopMetricStreams",
    "EventSource": "cloudwatch",
    "EventName": "StopMetricStreams",
    "Description": "Stops the streaming of metrics for one or more of your metric streams"
  },
  {
    "API": "cloudwatch:TagResource",
    "EventSource": "cloudwatch",
    "EventName": "TagResource",
    "Description": "Assigns one or more tags (key-value pairs) to the specified CloudWatch resource"
  },
  {
    "API": "cloudwatch:UntagResource",
    "EventSource": "cloudwatch",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags from the specified resource"
  },
  {
    "API": "codeartifact:AssociateExternalConnection",
    "EventSource": "codeartifact",
    "EventName": "AssociateExternalConnection",
    "Description": "Adds an existing external connection to a repository"
  },
  {
    "API": "codeartifact:CopyPackageVersions",
    "EventSource": "codeartifact",
    "EventName": "CopyPackageVersions",
    "Description": "Copies package versions from one repository to another repository in the same domain"
  },
  {
    "API": "codeartifact:CreateDomain",
    "EventSource": "codeartifact",
    "EventName": "CreateDomain",
    "Description": "Creates a domain"
  },
  {
    "API": "codeartifact:CreatePackageGroup",
    "EventSource": "codeartifact",
    "EventName": "CreatePackageGroup",
    "Description": "Creates a package group"
  },
  {
    "API": "codeartifact:CreateRepository",
    "EventSource": "codeartifact",
    "EventName": "CreateRepository",
    "Description": "Creates a repository"
  },
  {
    "API": "codeartifact:DeleteDomain",
    "EventSource": "codeartifact",
    "EventName": "DeleteDomain",
    "Description": "Deletes a domain"
  },
  {
    "API": "codeartifact:DeleteDomainPermissionsPolicy",
    "EventSource": "codeartifact",
    "EventName": "DeleteDomainPermissionsPolicy",
    "Description": "Deletes the resource policy set on a domain"
  },
  {
    "API": "codeartifact:DeletePackage",
    "EventSource": "codeartifact",
    "EventName": "DeletePackage",
    "Description": "Deletes a package and all associated package versions"
  },
  {
    "API": "codeartifact:DeletePackageGroup",
    "EventSource": "codeartifact",
    "EventName": "DeletePackageGroup",
    "Description": "Deletes a package group"
  },
  {
    "API": "codeartifact:DeletePackageVersions",
    "EventSource": "codeartifact",
    "EventName": "DeletePackageVersions",
    "Description": "Deletes one or more versions of a package"
  },
  {
    "API": "codeartifact:DeleteRepository",
    "EventSource": "codeartifact",
    "EventName": "DeleteRepository",
    "Description": "Deletes a repository"
  },
  {
    "API": "codeartifact:DeleteRepositoryPermissionsPolicy",
    "EventSource": "codeartifact",
    "EventName": "DeleteRepositoryPermissionsPolicy",
    "Description": "Deletes the resource policy that is set on a repository"
  },
  {
    "API": "codeartifact:DescribeDomain",
    "EventSource": "codeartifact",
    "EventName": "DescribeDomain",
    "Description": "Returns a `DomainDescription <https://docs"
  },
  {
    "API": "codeartifact:DescribePackage",
    "EventSource": "codeartifact",
    "EventName": "DescribePackage",
    "Description": "Returns a `PackageDescription <https://docs"
  },
  {
    "API": "codeartifact:DescribePackageGroup",
    "EventSource": "codeartifact",
    "EventName": "DescribePackageGroup",
    "Description": "Returns a `PackageGroupDescription <https://docs"
  },
  {
    "API": "codeartifact:DescribePackageVersion",
    "EventSource": "codeartifact",
    "EventName": "DescribePackageVersion",
    "Description": "Returns a `PackageVersionDescription <https://docs"
  },
  {
    "API": "codeartifact:DescribeRepository",
    "EventSource": "codeartifact",
    "EventName": "DescribeRepository",
    "Description": "Returns a ``RepositoryDescription`` object that contains detailed information about the requested repository"
  },
  {
    "API": "codeartifact:DisassociateExternalConnection",
    "EventSource": "codeartifact",
    "EventName": "DisassociateExternalConnection",
    "Description": "Removes an existing external connection from a repository"
  },
  {
    "API": "codeartifact:DisposePackageVersions",
    "EventSource": "codeartifact",
    "EventName": "DisposePackageVersions",
    "Description": "Deletes the assets in package versions and sets the package versions' status to ``Disposed``"
  },
  {
    "API": "codeartifact:GeneratePresignedUrl",
    "EventSource": "codeartifact",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "codeartifact:GetAssociatedPackageGroup",
    "EventSource": "codeartifact",
    "EventName": "GetAssociatedPackageGroup",
    "Description": "Returns the most closely associated package group to the specified package"
  },
  {
    "API": "codeartifact:GetAuthorizationToken",
    "EventSource": "codeartifact",
    "EventName": "GetAuthorizationToken",
    "Description": "Generates a temporary authorization token for accessing repositories in the domain"
  },
  {
    "API": "codeartifact:GetDomainPermissionsPolicy",
    "EventSource": "codeartifact",
    "EventName": "GetDomainPermissionsPolicy",
    "Description": "Returns the resource policy attached to the specified domain"
  },
  {
    "API": "codeartifact:GetPackageVersionAsset",
    "EventSource": "codeartifact",
    "EventName": "GetPackageVersionAsset",
    "Description": "Returns an asset (or file) that is in a package"
  },
  {
    "API": "codeartifact:GetPackageVersionReadme",
    "EventSource": "codeartifact",
    "EventName": "GetPackageVersionReadme",
    "Description": "Gets the readme file or descriptive text for a package version"
  },
  {
    "API": "codeartifact:GetRepositoryEndpoint",
    "EventSource": "codeartifact",
    "EventName": "GetRepositoryEndpoint",
    "Description": "Returns the endpoint of a repository for a specific package format"
  },
  {
    "API": "codeartifact:GetRepositoryPermissionsPolicy",
    "EventSource": "codeartifact",
    "EventName": "GetRepositoryPermissionsPolicy",
    "Description": "Returns the resource policy that is set on a repository"
  },
  {
    "API": "codeartifact:ListAllowedRepositoriesForGroup",
    "EventSource": "codeartifact",
    "EventName": "ListAllowedRepositoriesForGroup",
    "Description": "Lists the repositories in the added repositories list of the specified restriction type for a package group"
  },
  {
    "API": "codeartifact:ListAssociatedPackages",
    "EventSource": "codeartifact",
    "EventName": "ListAssociatedPackages",
    "Description": "Returns a list of packages associated with the requested package group"
  },
  {
    "API": "codeartifact:ListDomains",
    "EventSource": "codeartifact",
    "EventName": "ListDomains",
    "Description": "Returns a list of `DomainSummary <https://docs"
  },
  {
    "API": "codeartifact:ListPackageGroups",
    "EventSource": "codeartifact",
    "EventName": "ListPackageGroups",
    "Description": "Returns a list of package groups in the requested domain"
  },
  {
    "API": "codeartifact:ListPackageVersionAssets",
    "EventSource": "codeartifact",
    "EventName": "ListPackageVersionAssets",
    "Description": "Returns a list of `AssetSummary <https://docs"
  },
  {
    "API": "codeartifact:ListPackageVersionDependencies",
    "EventSource": "codeartifact",
    "EventName": "ListPackageVersionDependencies",
    "Description": "Returns the direct dependencies for a package version"
  },
  {
    "API": "codeartifact:ListPackageVersions",
    "EventSource": "codeartifact",
    "EventName": "ListPackageVersions",
    "Description": "Returns a list of `PackageVersionSummary <https://docs"
  },
  {
    "API": "codeartifact:ListPackages",
    "EventSource": "codeartifact",
    "EventName": "ListPackages",
    "Description": "Returns a list of `PackageSummary <https://docs"
  },
  {
    "API": "codeartifact:ListRepositories",
    "EventSource": "codeartifact",
    "EventName": "ListRepositories",
    "Description": "Returns a list of `RepositorySummary <https://docs"
  },
  {
    "API": "codeartifact:ListRepositoriesInDomain",
    "EventSource": "codeartifact",
    "EventName": "ListRepositoriesInDomain",
    "Description": "Returns a list of `RepositorySummary <https://docs"
  },
  {
    "API": "codeartifact:ListSubPackageGroups",
    "EventSource": "codeartifact",
    "EventName": "ListSubPackageGroups",
    "Description": "Returns a list of direct children of the specified package group"
  },
  {
    "API": "codeartifact:ListTagsForResource",
    "EventSource": "codeartifact",
    "EventName": "ListTagsForResource",
    "Description": "Gets information about Amazon Web Services tags for a specified Amazon Resource Name (ARN) in CodeArtifact"
  },
  {
    "API": "codeartifact:PublishPackageVersion",
    "EventSource": "codeartifact",
    "EventName": "PublishPackageVersion",
    "Description": "Creates a new package version containing one or more assets (or files)"
  },
  {
    "API": "codeartifact:PutDomainPermissionsPolicy",
    "EventSource": "codeartifact",
    "EventName": "PutDomainPermissionsPolicy",
    "Description": "Sets a resource policy on a domain that specifies permissions to access it"
  },
  {
    "API": "codeartifact:PutPackageOriginConfiguration",
    "EventSource": "codeartifact",
    "EventName": "PutPackageOriginConfiguration",
    "Description": "Sets the package origin configuration for a package"
  },
  {
    "API": "codeartifact:PutRepositoryPermissionsPolicy",
    "EventSource": "codeartifact",
    "EventName": "PutRepositoryPermissionsPolicy",
    "Description": "Sets the resource policy on a repository that specifies permissions to access it"
  },
  {
    "API": "codeartifact:TagResource",
    "EventSource": "codeartifact",
    "EventName": "TagResource",
    "Description": "Adds or updates tags for a resource in CodeArtifact"
  },
  {
    "API": "codeartifact:UntagResource",
    "EventSource": "codeartifact",
    "EventName": "UntagResource",
    "Description": "Removes tags from a resource in CodeArtifact"
  },
  {
    "API": "codeartifact:UpdatePackageGroup",
    "EventSource": "codeartifact",
    "EventName": "UpdatePackageGroup",
    "Description": "Updates a package group"
  },
  {
    "API": "codeartifact:UpdatePackageGroupOriginConfiguration",
    "EventSource": "codeartifact",
    "EventName": "UpdatePackageGroupOriginConfiguration",
    "Description": "Updates the package origin configuration for a package group"
  },
  {
    "API": "codeartifact:UpdatePackageVersionsStatus",
    "EventSource": "codeartifact",
    "EventName": "UpdatePackageVersionsStatus",
    "Description": "Updates the status of one or more versions of a package"
  },
  {
    "API": "codeartifact:UpdateRepository",
    "EventSource": "codeartifact",
    "EventName": "UpdateRepository",
    "Description": "Update the properties of a repository"
  },
  {
    "API": "codebuild:BatchDeleteBuilds",
    "EventSource": "codebuild",
    "EventName": "BatchDeleteBuilds",
    "Description": "Deletes one or more builds"
  },
  {
    "API": "codebuild:BatchGetBuildBatches",
    "EventSource": "codebuild",
    "EventName": "BatchGetBuildBatches",
    "Description": "Retrieves information about one or more batch builds"
  },
  {
    "API": "codebuild:BatchGetBuilds",
    "EventSource": "codebuild",
    "EventName": "BatchGetBuilds",
    "Description": "Gets information about one or more builds"
  },
  {
    "API": "codebuild:BatchGetFleets",
    "EventSource": "codebuild",
    "EventName": "BatchGetFleets",
    "Description": "Gets information about one or more compute fleets"
  },
  {
    "API": "codebuild:BatchGetProjects",
    "EventSource": "codebuild",
    "EventName": "BatchGetProjects",
    "Description": "Gets information about one or more build projects"
  },
  {
    "API": "codebuild:BatchGetReportGroups",
    "EventSource": "codebuild",
    "EventName": "BatchGetReportGroups",
    "Description": "Returns an array of report groups"
  },
  {
    "API": "codebuild:BatchGetReports",
    "EventSource": "codebuild",
    "EventName": "BatchGetReports",
    "Description": "Returns an array of reports"
  },
  {
    "API": "codebuild:CreateFleet",
    "EventSource": "codebuild",
    "EventName": "CreateFleet",
    "Description": "Creates a compute fleet"
  },
  {
    "API": "codebuild:CreateProject",
    "EventSource": "codebuild",
    "EventName": "CreateProject",
    "Description": "Creates a build project"
  },
  {
    "API": "codebuild:CreateReportGroup",
    "EventSource": "codebuild",
    "EventName": "CreateReportGroup",
    "Description": "Creates a report group"
  },
  {
    "API": "codebuild:CreateWebhook",
    "EventSource": "codebuild",
    "EventName": "CreateWebhook",
    "Description": "For an existing CodeBuild build project that has its source code stored in a GitHub or Bitbucket repository, enables CodeBuild to start rebuilding the source code every time a code change is pushed to the repository"
  },
  {
    "API": "codebuild:DeleteBuildBatch",
    "EventSource": "codebuild",
    "EventName": "DeleteBuildBatch",
    "Description": "Deletes a batch build"
  },
  {
    "API": "codebuild:DeleteFleet",
    "EventSource": "codebuild",
    "EventName": "DeleteFleet",
    "Description": "Deletes a compute fleet"
  },
  {
    "API": "codebuild:DeleteProject",
    "EventSource": "codebuild",
    "EventName": "DeleteProject",
    "Description": "Deletes a build project"
  },
  {
    "API": "codebuild:DeleteReport",
    "EventSource": "codebuild",
    "EventName": "DeleteReport",
    "Description": "Deletes a report"
  },
  {
    "API": "codebuild:DeleteReportGroup",
    "EventSource": "codebuild",
    "EventName": "DeleteReportGroup",
    "Description": "Deletes a report group"
  },
  {
    "API": "codebuild:DeleteResourcePolicy",
    "EventSource": "codebuild",
    "EventName": "DeleteResourcePolicy",
    "Description": "Deletes a resource policy that is identified by its resource ARN"
  },
  {
    "API": "codebuild:DeleteSourceCredentials",
    "EventSource": "codebuild",
    "EventName": "DeleteSourceCredentials",
    "Description": "Deletes a set of GitHub, GitHub Enterprise, or Bitbucket source credentials"
  },
  {
    "API": "codebuild:DeleteWebhook",
    "EventSource": "codebuild",
    "EventName": "DeleteWebhook",
    "Description": "For an existing CodeBuild build project that has its source code stored in a GitHub or Bitbucket repository, stops CodeBuild from rebuilding the source code every time a code change is pushed to the repository"
  },
  {
    "API": "codebuild:DescribeCodeCoverages",
    "EventSource": "codebuild",
    "EventName": "DescribeCodeCoverages",
    "Description": "Retrieves one or more code coverage reports"
  },
  {
    "API": "codebuild:DescribeTestCases",
    "EventSource": "codebuild",
    "EventName": "DescribeTestCases",
    "Description": "Returns a list of details about test cases for a report"
  },
  {
    "API": "codebuild:GeneratePresignedUrl",
    "EventSource": "codebuild",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "codebuild:GetReportGroupTrend",
    "EventSource": "codebuild",
    "EventName": "GetReportGroupTrend",
    "Description": "Analyzes and accumulates test report values for the specified test reports"
  },
  {
    "API": "codebuild:GetResourcePolicy",
    "EventSource": "codebuild",
    "EventName": "GetResourcePolicy",
    "Description": "Gets a resource policy that is identified by its resource ARN"
  },
  {
    "API": "codebuild:ImportSourceCredentials",
    "EventSource": "codebuild",
    "EventName": "ImportSourceCredentials",
    "Description": "Imports the source repository credentials for an CodeBuild project that has its source code stored in a GitHub, GitHub Enterprise, or Bitbucket repository"
  },
  {
    "API": "codebuild:InvalidateProjectCache",
    "EventSource": "codebuild",
    "EventName": "InvalidateProjectCache",
    "Description": "Resets the cache for a project"
  },
  {
    "API": "codebuild:ListBuildBatches",
    "EventSource": "codebuild",
    "EventName": "ListBuildBatches",
    "Description": "Retrieves the identifiers of your build batches in the current region"
  },
  {
    "API": "codebuild:ListBuildBatchesForProject",
    "EventSource": "codebuild",
    "EventName": "ListBuildBatchesForProject",
    "Description": "Retrieves the identifiers of the build batches for a specific project"
  },
  {
    "API": "codebuild:ListBuilds",
    "EventSource": "codebuild",
    "EventName": "ListBuilds",
    "Description": "Gets a list of build IDs, with each build ID representing a single build"
  },
  {
    "API": "codebuild:ListBuildsForProject",
    "EventSource": "codebuild",
    "EventName": "ListBuildsForProject",
    "Description": "Gets a list of build identifiers for the specified build project, with each build identifier representing a single build"
  },
  {
    "API": "codebuild:ListCuratedEnvironmentImages",
    "EventSource": "codebuild",
    "EventName": "ListCuratedEnvironmentImages",
    "Description": "Gets information about Docker images that are managed by CodeBuild"
  },
  {
    "API": "codebuild:ListFleets",
    "EventSource": "codebuild",
    "EventName": "ListFleets",
    "Description": "Gets a list of compute fleet names with each compute fleet name representing a single compute fleet"
  },
  {
    "API": "codebuild:ListProjects",
    "EventSource": "codebuild",
    "EventName": "ListProjects",
    "Description": "Gets a list of build project names, with each build project name representing a single build project"
  },
  {
    "API": "codebuild:ListReportGroups",
    "EventSource": "codebuild",
    "EventName": "ListReportGroups",
    "Description": "Gets a list ARNs for the report groups in the current Amazon Web Services account"
  },
  {
    "API": "codebuild:ListReports",
    "EventSource": "codebuild",
    "EventName": "ListReports",
    "Description": "Returns a list of ARNs for the reports in the current Amazon Web Services account"
  },
  {
    "API": "codebuild:ListReportsForReportGroup",
    "EventSource": "codebuild",
    "EventName": "ListReportsForReportGroup",
    "Description": "Returns a list of ARNs for the reports that belong to a ``ReportGroup``"
  },
  {
    "API": "codebuild:ListSharedProjects",
    "EventSource": "codebuild",
    "EventName": "ListSharedProjects",
    "Description": "Gets a list of projects that are shared with other Amazon Web Services accounts or users"
  },
  {
    "API": "codebuild:ListSharedReportGroups",
    "EventSource": "codebuild",
    "EventName": "ListSharedReportGroups",
    "Description": "Gets a list of report groups that are shared with other Amazon Web Services accounts or users"
  },
  {
    "API": "codebuild:ListSourceCredentials",
    "EventSource": "codebuild",
    "EventName": "ListSourceCredentials",
    "Description": "Returns a list of ``SourceCredentialsInfo`` objects"
  },
  {
    "API": "codebuild:PutResourcePolicy",
    "EventSource": "codebuild",
    "EventName": "PutResourcePolicy",
    "Description": "Stores a resource policy for the ARN of a ``Project`` or ``ReportGroup`` object"
  },
  {
    "API": "codebuild:RetryBuild",
    "EventSource": "codebuild",
    "EventName": "RetryBuild",
    "Description": "Restarts a build"
  },
  {
    "API": "codebuild:RetryBuildBatch",
    "EventSource": "codebuild",
    "EventName": "RetryBuildBatch",
    "Description": "Restarts a failed batch build"
  },
  {
    "API": "codebuild:StartBuild",
    "EventSource": "codebuild",
    "EventName": "StartBuild",
    "Description": "Starts running a build with the settings defined in the project"
  },
  {
    "API": "codebuild:StartBuildBatch",
    "EventSource": "codebuild",
    "EventName": "StartBuildBatch",
    "Description": "Starts a batch build for a project"
  },
  {
    "API": "codebuild:StopBuild",
    "EventSource": "codebuild",
    "EventName": "StopBuild",
    "Description": "Attempts to stop running a build"
  },
  {
    "API": "codebuild:StopBuildBatch",
    "EventSource": "codebuild",
    "EventName": "StopBuildBatch",
    "Description": "Stops a running batch build"
  },
  {
    "API": "codebuild:UpdateFleet",
    "EventSource": "codebuild",
    "EventName": "UpdateFleet",
    "Description": "Updates a compute fleet"
  },
  {
    "API": "codebuild:UpdateProject",
    "EventSource": "codebuild",
    "EventName": "UpdateProject",
    "Description": "Changes the settings of a build project"
  },
  {
    "API": "codebuild:UpdateProjectVisibility",
    "EventSource": "codebuild",
    "EventName": "UpdateProjectVisibility",
    "Description": "Changes the public visibility for a project"
  },
  {
    "API": "codebuild:UpdateReportGroup",
    "EventSource": "codebuild",
    "EventName": "UpdateReportGroup",
    "Description": "Updates a report group"
  },
  {
    "API": "codebuild:UpdateWebhook",
    "EventSource": "codebuild",
    "EventName": "UpdateWebhook",
    "Description": "Updates the webhook associated with an CodeBuild build project"
  },
  {
    "API": "codecatalyst:CreateAccessToken",
    "EventSource": "codecatalyst",
    "EventName": "CreateAccessToken",
    "Description": "Creates a personal access token (PAT) for the current user"
  },
  {
    "API": "codecatalyst:CreateDevEnvironment",
    "EventSource": "codecatalyst",
    "EventName": "CreateDevEnvironment",
    "Description": "Creates a Dev Environment in Amazon CodeCatalyst, a cloud-based development environment that you can use to quickly work on the code stored in the source repositories of your project"
  },
  {
    "API": "codecatalyst:CreateProject",
    "EventSource": "codecatalyst",
    "EventName": "CreateProject",
    "Description": "Creates a project in a specified space"
  },
  {
    "API": "codecatalyst:CreateSourceRepository",
    "EventSource": "codecatalyst",
    "EventName": "CreateSourceRepository",
    "Description": "Creates an empty Git-based source repository in a specified project"
  },
  {
    "API": "codecatalyst:CreateSourceRepositoryBranch",
    "EventSource": "codecatalyst",
    "EventName": "CreateSourceRepositoryBranch",
    "Description": "Creates a branch in a specified source repository in Amazon CodeCatalyst"
  },
  {
    "API": "codecatalyst:DeleteAccessToken",
    "EventSource": "codecatalyst",
    "EventName": "DeleteAccessToken",
    "Description": "Deletes a specified personal access token (PAT)"
  },
  {
    "API": "codecatalyst:DeleteDevEnvironment",
    "EventSource": "codecatalyst",
    "EventName": "DeleteDevEnvironment",
    "Description": "Deletes a Dev Environment"
  },
  {
    "API": "codecatalyst:DeleteProject",
    "EventSource": "codecatalyst",
    "EventName": "DeleteProject",
    "Description": "Deletes a project in a space"
  },
  {
    "API": "codecatalyst:DeleteSourceRepository",
    "EventSource": "codecatalyst",
    "EventName": "DeleteSourceRepository",
    "Description": "Deletes a source repository in Amazon CodeCatalyst"
  },
  {
    "API": "codecatalyst:DeleteSpace",
    "EventSource": "codecatalyst",
    "EventName": "DeleteSpace",
    "Description": "Deletes a space"
  },
  {
    "API": "codecatalyst:GeneratePresignedUrl",
    "EventSource": "codecatalyst",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "codecatalyst:GetDevEnvironment",
    "EventSource": "codecatalyst",
    "EventName": "GetDevEnvironment",
    "Description": "Returns information about a Dev Environment for a source repository in a project"
  },
  {
    "API": "codecatalyst:GetProject",
    "EventSource": "codecatalyst",
    "EventName": "GetProject",
    "Description": "Returns information about a project"
  },
  {
    "API": "codecatalyst:GetSourceRepository",
    "EventSource": "codecatalyst",
    "EventName": "GetSourceRepository",
    "Description": "Returns information about a source repository"
  },
  {
    "API": "codecatalyst:GetSourceRepositoryCloneUrls",
    "EventSource": "codecatalyst",
    "EventName": "GetSourceRepositoryCloneUrls",
    "Description": "Returns information about the URLs that can be used with a Git client to clone a source repository"
  },
  {
    "API": "codecatalyst:GetSpace",
    "EventSource": "codecatalyst",
    "EventName": "GetSpace",
    "Description": "Returns information about an space"
  },
  {
    "API": "codecatalyst:GetSubscription",
    "EventSource": "codecatalyst",
    "EventName": "GetSubscription",
    "Description": "Returns information about the Amazon Web Services account used for billing purposes and the billing plan for the space"
  },
  {
    "API": "codecatalyst:GetUserDetails",
    "EventSource": "codecatalyst",
    "EventName": "GetUserDetails",
    "Description": "Returns information about a user"
  },
  {
    "API": "codecatalyst:GetWorkflow",
    "EventSource": "codecatalyst",
    "EventName": "GetWorkflow",
    "Description": "Returns information about a workflow"
  },
  {
    "API": "codecatalyst:GetWorkflowRun",
    "EventSource": "codecatalyst",
    "EventName": "GetWorkflowRun",
    "Description": "Returns information about a specified run of a workflow"
  },
  {
    "API": "codecatalyst:ListAccessTokens",
    "EventSource": "codecatalyst",
    "EventName": "ListAccessTokens",
    "Description": "Lists all personal access tokens (PATs) associated with the user who calls the API"
  },
  {
    "API": "codecatalyst:ListDevEnvironmentSessions",
    "EventSource": "codecatalyst",
    "EventName": "ListDevEnvironmentSessions",
    "Description": "Retrieves a list of active sessions for a Dev Environment in a project"
  },
  {
    "API": "codecatalyst:ListDevEnvironments",
    "EventSource": "codecatalyst",
    "EventName": "ListDevEnvironments",
    "Description": "Retrieves a list of Dev Environments in a project"
  },
  {
    "API": "codecatalyst:ListEventLogs",
    "EventSource": "codecatalyst",
    "EventName": "ListEventLogs",
    "Description": "Retrieves a list of events that occurred during a specific time in a space"
  },
  {
    "API": "codecatalyst:ListProjects",
    "EventSource": "codecatalyst",
    "EventName": "ListProjects",
    "Description": "Retrieves a list of projects"
  },
  {
    "API": "codecatalyst:ListSourceRepositories",
    "EventSource": "codecatalyst",
    "EventName": "ListSourceRepositories",
    "Description": "Retrieves a list of source repositories in a project"
  },
  {
    "API": "codecatalyst:ListSourceRepositoryBranches",
    "EventSource": "codecatalyst",
    "EventName": "ListSourceRepositoryBranches",
    "Description": "Retrieves a list of branches in a specified source repository"
  },
  {
    "API": "codecatalyst:ListSpaces",
    "EventSource": "codecatalyst",
    "EventName": "ListSpaces",
    "Description": "Retrieves a list of spaces"
  },
  {
    "API": "codecatalyst:ListWorkflowRuns",
    "EventSource": "codecatalyst",
    "EventName": "ListWorkflowRuns",
    "Description": "Retrieves a list of workflow runs of a specified workflow"
  },
  {
    "API": "codecatalyst:ListWorkflows",
    "EventSource": "codecatalyst",
    "EventName": "ListWorkflows",
    "Description": "Retrieves a list of workflows in a specified project"
  },
  {
    "API": "codecatalyst:StartDevEnvironment",
    "EventSource": "codecatalyst",
    "EventName": "StartDevEnvironment",
    "Description": "Starts a specified Dev Environment and puts it into an active state"
  },
  {
    "API": "codecatalyst:StartDevEnvironmentSession",
    "EventSource": "codecatalyst",
    "EventName": "StartDevEnvironmentSession",
    "Description": "Starts a session for a specified Dev Environment"
  },
  {
    "API": "codecatalyst:StartWorkflowRun",
    "EventSource": "codecatalyst",
    "EventName": "StartWorkflowRun",
    "Description": "Begins a run of a specified workflow"
  },
  {
    "API": "codecatalyst:StopDevEnvironment",
    "EventSource": "codecatalyst",
    "EventName": "StopDevEnvironment",
    "Description": "Pauses a specified Dev Environment and places it in a non-running state"
  },
  {
    "API": "codecatalyst:StopDevEnvironmentSession",
    "EventSource": "codecatalyst",
    "EventName": "StopDevEnvironmentSession",
    "Description": "Stops a session for a specified Dev Environment"
  },
  {
    "API": "codecatalyst:UpdateDevEnvironment",
    "EventSource": "codecatalyst",
    "EventName": "UpdateDevEnvironment",
    "Description": "Changes one or more values for a Dev Environment"
  },
  {
    "API": "codecatalyst:UpdateProject",
    "EventSource": "codecatalyst",
    "EventName": "UpdateProject",
    "Description": "Changes one or more values for a project"
  },
  {
    "API": "codecatalyst:UpdateSpace",
    "EventSource": "codecatalyst",
    "EventName": "UpdateSpace",
    "Description": "Changes one or more values for a space"
  },
  {
    "API": "codecatalyst:VerifySession",
    "EventSource": "codecatalyst",
    "EventName": "VerifySession",
    "Description": "Verifies whether the calling user has a valid Amazon CodeCatalyst login and session"
  },
  {
    "API": "codecommit:AssociateApprovalRuleTemplateWithRepository",
    "EventSource": "codecommit",
    "EventName": "AssociateApprovalRuleTemplateWithRepository",
    "Description": "Creates an association between an approval rule template and a specified repository"
  },
  {
    "API": "codecommit:BatchAssociateApprovalRuleTemplateWithRepositories",
    "EventSource": "codecommit",
    "EventName": "BatchAssociateApprovalRuleTemplateWithRepositories",
    "Description": "Creates an association between an approval rule template and one or more specified repositories"
  },
  {
    "API": "codecommit:BatchDescribeMergeConflicts",
    "EventSource": "codecommit",
    "EventName": "BatchDescribeMergeConflicts",
    "Description": "Returns information about one or more merge conflicts in the attempted merge of two commit specifiers using the squash or three-way merge strategy"
  },
  {
    "API": "codecommit:BatchDisassociateApprovalRuleTemplateFromRepositories",
    "EventSource": "codecommit",
    "EventName": "BatchDisassociateApprovalRuleTemplateFromRepositories",
    "Description": "Removes the association between an approval rule template and one or more specified repositories"
  },
  {
    "API": "codecommit:BatchGetCommits",
    "EventSource": "codecommit",
    "EventName": "BatchGetCommits",
    "Description": "Returns information about the contents of one or more commits in a repository"
  },
  {
    "API": "codecommit:BatchGetRepositories",
    "EventSource": "codecommit",
    "EventName": "BatchGetRepositories",
    "Description": "Returns information about one or more repositories"
  },
  {
    "API": "codecommit:CreateApprovalRuleTemplate",
    "EventSource": "codecommit",
    "EventName": "CreateApprovalRuleTemplate",
    "Description": "Creates a template for approval rules that can then be associated with one or more repositories in your Amazon Web Services account"
  },
  {
    "API": "codecommit:CreateBranch",
    "EventSource": "codecommit",
    "EventName": "CreateBranch",
    "Description": "Creates a branch in a repository and points the branch to a commit"
  },
  {
    "API": "codecommit:CreateCommit",
    "EventSource": "codecommit",
    "EventName": "CreateCommit",
    "Description": "Creates a commit for a repository on the tip of a specified branch"
  },
  {
    "API": "codecommit:CreatePullRequest",
    "EventSource": "codecommit",
    "EventName": "CreatePullRequest",
    "Description": "Creates a pull request in the specified repository"
  },
  {
    "API": "codecommit:CreatePullRequestApprovalRule",
    "EventSource": "codecommit",
    "EventName": "CreatePullRequestApprovalRule",
    "Description": "Creates an approval rule for a pull request"
  },
  {
    "API": "codecommit:CreateRepository",
    "EventSource": "codecommit",
    "EventName": "CreateRepository",
    "Description": "Creates a new, empty repository"
  },
  {
    "API": "codecommit:CreateUnreferencedMergeCommit",
    "EventSource": "codecommit",
    "EventName": "CreateUnreferencedMergeCommit",
    "Description": "Creates an unreferenced commit that represents the result of merging two branches using a specified merge strategy"
  },
  {
    "API": "codecommit:DeleteApprovalRuleTemplate",
    "EventSource": "codecommit",
    "EventName": "DeleteApprovalRuleTemplate",
    "Description": "Deletes a specified approval rule template"
  },
  {
    "API": "codecommit:DeleteBranch",
    "EventSource": "codecommit",
    "EventName": "DeleteBranch",
    "Description": "Deletes a branch from a repository, unless that branch is the default branch for the repository"
  },
  {
    "API": "codecommit:DeleteCommentContent",
    "EventSource": "codecommit",
    "EventName": "DeleteCommentContent",
    "Description": "Deletes the content of a comment made on a change, file, or commit in a repository"
  },
  {
    "API": "codecommit:DeleteFile",
    "EventSource": "codecommit",
    "EventName": "DeleteFile",
    "Description": "Deletes a specified file from a specified branch"
  },
  {
    "API": "codecommit:DeletePullRequestApprovalRule",
    "EventSource": "codecommit",
    "EventName": "DeletePullRequestApprovalRule",
    "Description": "Deletes an approval rule from a specified pull request"
  },
  {
    "API": "codecommit:DeleteRepository",
    "EventSource": "codecommit",
    "EventName": "DeleteRepository",
    "Description": "Deletes a repository"
  },
  {
    "API": "codecommit:DescribeMergeConflicts",
    "EventSource": "codecommit",
    "EventName": "DescribeMergeConflicts",
    "Description": "Returns information about one or more merge conflicts in the attempted merge of two commit specifiers using the squash or three-way merge strategy"
  },
  {
    "API": "codecommit:DescribePullRequestEvents",
    "EventSource": "codecommit",
    "EventName": "DescribePullRequestEvents",
    "Description": "Returns information about one or more pull request events"
  },
  {
    "API": "codecommit:DisassociateApprovalRuleTemplateFromRepository",
    "EventSource": "codecommit",
    "EventName": "DisassociateApprovalRuleTemplateFromRepository",
    "Description": "Removes the association between a template and a repository so that approval rules based on the template are not automatically created when pull requests are created in the specified repository"
  },
  {
    "API": "codecommit:EvaluatePullRequestApprovalRules",
    "EventSource": "codecommit",
    "EventName": "EvaluatePullRequestApprovalRules",
    "Description": "Evaluates whether a pull request has met all the conditions specified in its associated approval rules"
  },
  {
    "API": "codecommit:GeneratePresignedUrl",
    "EventSource": "codecommit",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "codecommit:GetApprovalRuleTemplate",
    "EventSource": "codecommit",
    "EventName": "GetApprovalRuleTemplate",
    "Description": "Returns information about a specified approval rule template"
  },
  {
    "API": "codecommit:GetBlob",
    "EventSource": "codecommit",
    "EventName": "GetBlob",
    "Description": "Returns the base-64 encoded content of an individual blob in a repository"
  },
  {
    "API": "codecommit:GetBranch",
    "EventSource": "codecommit",
    "EventName": "GetBranch",
    "Description": "Returns information about a repository branch, including its name and the last commit ID"
  },
  {
    "API": "codecommit:GetComment",
    "EventSource": "codecommit",
    "EventName": "GetComment",
    "Description": "Returns the content of a comment made on a change, file, or commit in a repository"
  },
  {
    "API": "codecommit:GetCommentReactions",
    "EventSource": "codecommit",
    "EventName": "GetCommentReactions",
    "Description": "Returns information about reactions to a specified comment ID"
  },
  {
    "API": "codecommit:GetCommentsForComparedCommit",
    "EventSource": "codecommit",
    "EventName": "GetCommentsForComparedCommit",
    "Description": "Returns information about comments made on the comparison between two commits"
  },
  {
    "API": "codecommit:GetCommentsForPullRequest",
    "EventSource": "codecommit",
    "EventName": "GetCommentsForPullRequest",
    "Description": "Returns comments made on a pull request"
  },
  {
    "API": "codecommit:GetCommit",
    "EventSource": "codecommit",
    "EventName": "GetCommit",
    "Description": "Returns information about a commit, including commit message and committer information"
  },
  {
    "API": "codecommit:GetDifferences",
    "EventSource": "codecommit",
    "EventName": "GetDifferences",
    "Description": "Returns information about the differences in a valid commit specifier (such as a branch, tag, HEAD, commit ID, or other fully qualified reference)"
  },
  {
    "API": "codecommit:GetFile",
    "EventSource": "codecommit",
    "EventName": "GetFile",
    "Description": "Returns the base-64 encoded contents of a specified file and its metadata"
  },
  {
    "API": "codecommit:GetFolder",
    "EventSource": "codecommit",
    "EventName": "GetFolder",
    "Description": "Returns the contents of a specified folder in a repository"
  },
  {
    "API": "codecommit:GetMergeCommit",
    "EventSource": "codecommit",
    "EventName": "GetMergeCommit",
    "Description": "Returns information about a specified merge commit"
  },
  {
    "API": "codecommit:GetMergeConflicts",
    "EventSource": "codecommit",
    "EventName": "GetMergeConflicts",
    "Description": "Returns information about merge conflicts between the before and after commit IDs for a pull request in a repository"
  },
  {
    "API": "codecommit:GetMergeOptions",
    "EventSource": "codecommit",
    "EventName": "GetMergeOptions",
    "Description": "Returns information about the merge options available for merging two specified branches"
  },
  {
    "API": "codecommit:GetPullRequest",
    "EventSource": "codecommit",
    "EventName": "GetPullRequest",
    "Description": "Gets information about a pull request in a specified repository"
  },
  {
    "API": "codecommit:GetPullRequestApprovalStates",
    "EventSource": "codecommit",
    "EventName": "GetPullRequestApprovalStates",
    "Description": "Gets information about the approval states for a specified pull request"
  },
  {
    "API": "codecommit:GetPullRequestOverrideState",
    "EventSource": "codecommit",
    "EventName": "GetPullRequestOverrideState",
    "Description": "Returns information about whether approval rules have been set aside (overridden) for a pull request, and if so, the Amazon Resource Name (ARN) of the user or identity that overrode the rules and their requirements for the pull request"
  },
  {
    "API": "codecommit:GetRepository",
    "EventSource": "codecommit",
    "EventName": "GetRepository",
    "Description": "Returns information about a repository"
  },
  {
    "API": "codecommit:GetRepositoryTriggers",
    "EventSource": "codecommit",
    "EventName": "GetRepositoryTriggers",
    "Description": "Gets information about triggers configured for a repository"
  },
  {
    "API": "codecommit:ListApprovalRuleTemplates",
    "EventSource": "codecommit",
    "EventName": "ListApprovalRuleTemplates",
    "Description": "Lists all approval rule templates in the specified Amazon Web Services Region in your Amazon Web Services account"
  },
  {
    "API": "codecommit:ListAssociatedApprovalRuleTemplatesForRepository",
    "EventSource": "codecommit",
    "EventName": "ListAssociatedApprovalRuleTemplatesForRepository",
    "Description": "Lists all approval rule templates that are associated with a specified repository"
  },
  {
    "API": "codecommit:ListBranches",
    "EventSource": "codecommit",
    "EventName": "ListBranches",
    "Description": "Gets information about one or more branches in a repository"
  },
  {
    "API": "codecommit:ListFileCommitHistory",
    "EventSource": "codecommit",
    "EventName": "ListFileCommitHistory",
    "Description": "Retrieves a list of commits and changes to a specified file"
  },
  {
    "API": "codecommit:ListPullRequests",
    "EventSource": "codecommit",
    "EventName": "ListPullRequests",
    "Description": "Returns a list of pull requests for a specified repository"
  },
  {
    "API": "codecommit:ListRepositories",
    "EventSource": "codecommit",
    "EventName": "ListRepositories",
    "Description": "Gets information about one or more repositories"
  },
  {
    "API": "codecommit:ListRepositoriesForApprovalRuleTemplate",
    "EventSource": "codecommit",
    "EventName": "ListRepositoriesForApprovalRuleTemplate",
    "Description": "Lists all repositories associated with the specified approval rule template"
  },
  {
    "API": "codecommit:ListTagsForResource",
    "EventSource": "codecommit",
    "EventName": "ListTagsForResource",
    "Description": "Gets information about Amazon Web Servicestags for a specified Amazon Resource Name (ARN) in CodeCommit"
  },
  {
    "API": "codecommit:MergeBranchesByFastForward",
    "EventSource": "codecommit",
    "EventName": "MergeBranchesByFastForward",
    "Description": "Merges two branches using the fast-forward merge strategy"
  },
  {
    "API": "codecommit:MergeBranchesBySquash",
    "EventSource": "codecommit",
    "EventName": "MergeBranchesBySquash",
    "Description": "Merges two branches using the squash merge strategy"
  },
  {
    "API": "codecommit:MergeBranchesByThreeWay",
    "EventSource": "codecommit",
    "EventName": "MergeBranchesByThreeWay",
    "Description": "Merges two specified branches using the three-way merge strategy"
  },
  {
    "API": "codecommit:MergePullRequestByFastForward",
    "EventSource": "codecommit",
    "EventName": "MergePullRequestByFastForward",
    "Description": "Attempts to merge the source commit of a pull request into the specified destination branch for that pull request at the specified commit using the fast-forward merge strategy"
  },
  {
    "API": "codecommit:MergePullRequestBySquash",
    "EventSource": "codecommit",
    "EventName": "MergePullRequestBySquash",
    "Description": "Attempts to merge the source commit of a pull request into the specified destination branch for that pull request at the specified commit using the squash merge strategy"
  },
  {
    "API": "codecommit:MergePullRequestByThreeWay",
    "EventSource": "codecommit",
    "EventName": "MergePullRequestByThreeWay",
    "Description": "Attempts to merge the source commit of a pull request into the specified destination branch for that pull request at the specified commit using the three-way merge strategy"
  },
  {
    "API": "codecommit:OverridePullRequestApprovalRules",
    "EventSource": "codecommit",
    "EventName": "OverridePullRequestApprovalRules",
    "Description": "Sets aside (overrides) all approval rule requirements for a specified pull request"
  },
  {
    "API": "codecommit:PostCommentForComparedCommit",
    "EventSource": "codecommit",
    "EventName": "PostCommentForComparedCommit",
    "Description": "Posts a comment on the comparison between two commits"
  },
  {
    "API": "codecommit:PostCommentForPullRequest",
    "EventSource": "codecommit",
    "EventName": "PostCommentForPullRequest",
    "Description": "Posts a comment on a pull request"
  },
  {
    "API": "codecommit:PostCommentReply",
    "EventSource": "codecommit",
    "EventName": "PostCommentReply",
    "Description": "Posts a comment in reply to an existing comment on a comparison between commits or a pull request"
  },
  {
    "API": "codecommit:PutCommentReaction",
    "EventSource": "codecommit",
    "EventName": "PutCommentReaction",
    "Description": "Adds or updates a reaction to a specified comment for the user whose identity is used to make the request"
  },
  {
    "API": "codecommit:PutFile",
    "EventSource": "codecommit",
    "EventName": "PutFile",
    "Description": "Adds or updates a file in a branch in an CodeCommit repository, and generates a commit for the addition in the specified branch"
  },
  {
    "API": "codecommit:PutRepositoryTriggers",
    "EventSource": "codecommit",
    "EventName": "PutRepositoryTriggers",
    "Description": "Replaces all triggers for a repository"
  },
  {
    "API": "codecommit:TagResource",
    "EventSource": "codecommit",
    "EventName": "TagResource",
    "Description": "Adds or updates tags for a resource in CodeCommit"
  },
  {
    "API": "codecommit:TestRepositoryTriggers",
    "EventSource": "codecommit",
    "EventName": "TestRepositoryTriggers",
    "Description": "Tests the functionality of repository triggers by sending information to the trigger target"
  },
  {
    "API": "codecommit:UntagResource",
    "EventSource": "codecommit",
    "EventName": "UntagResource",
    "Description": "Removes tags for a resource in CodeCommit"
  },
  {
    "API": "codecommit:UpdateApprovalRuleTemplateContent",
    "EventSource": "codecommit",
    "EventName": "UpdateApprovalRuleTemplateContent",
    "Description": "Updates the content of an approval rule template"
  },
  {
    "API": "codecommit:UpdateApprovalRuleTemplateDescription",
    "EventSource": "codecommit",
    "EventName": "UpdateApprovalRuleTemplateDescription",
    "Description": "Updates the description for a specified approval rule template"
  },
  {
    "API": "codecommit:UpdateApprovalRuleTemplateName",
    "EventSource": "codecommit",
    "EventName": "UpdateApprovalRuleTemplateName",
    "Description": "Updates the name of a specified approval rule template"
  },
  {
    "API": "codecommit:UpdateComment",
    "EventSource": "codecommit",
    "EventName": "UpdateComment",
    "Description": "Replaces the contents of a comment"
  },
  {
    "API": "codecommit:UpdateDefaultBranch",
    "EventSource": "codecommit",
    "EventName": "UpdateDefaultBranch",
    "Description": "Sets or changes the default branch name for the specified repository"
  },
  {
    "API": "codecommit:UpdatePullRequestApprovalRuleContent",
    "EventSource": "codecommit",
    "EventName": "UpdatePullRequestApprovalRuleContent",
    "Description": "Updates the structure of an approval rule created specifically for a pull request"
  },
  {
    "API": "codecommit:UpdatePullRequestApprovalState",
    "EventSource": "codecommit",
    "EventName": "UpdatePullRequestApprovalState",
    "Description": "Updates the state of a user's approval on a pull request"
  },
  {
    "API": "codecommit:UpdatePullRequestDescription",
    "EventSource": "codecommit",
    "EventName": "UpdatePullRequestDescription",
    "Description": "Replaces the contents of the description of a pull request"
  },
  {
    "API": "codecommit:UpdatePullRequestStatus",
    "EventSource": "codecommit",
    "EventName": "UpdatePullRequestStatus",
    "Description": "Updates the status of a pull request"
  },
  {
    "API": "codecommit:UpdatePullRequestTitle",
    "EventSource": "codecommit",
    "EventName": "UpdatePullRequestTitle",
    "Description": "Replaces the title of a pull request"
  },
  {
    "API": "codecommit:UpdateRepositoryDescription",
    "EventSource": "codecommit",
    "EventName": "UpdateRepositoryDescription",
    "Description": "Sets or changes the comment or description for a repository"
  },
  {
    "API": "codecommit:UpdateRepositoryEncryptionKey",
    "EventSource": "codecommit",
    "EventName": "UpdateRepositoryEncryptionKey",
    "Description": "Updates the Key Management Service encryption key used to encrypt and decrypt a CodeCommit repository"
  },
  {
    "API": "codecommit:UpdateRepositoryName",
    "EventSource": "codecommit",
    "EventName": "UpdateRepositoryName",
    "Description": "Renames a repository"
  },
  {
    "API": "codeconnections:CreateConnection",
    "EventSource": "codeconnections",
    "EventName": "CreateConnection",
    "Description": "Creates a connection that can then be given to other Amazon Web Services services like CodePipeline so that it can access third-party code repositories"
  },
  {
    "API": "codeconnections:CreateHost",
    "EventSource": "codeconnections",
    "EventName": "CreateHost",
    "Description": "Creates a resource that represents the infrastructure where a third-party provider is installed"
  },
  {
    "API": "codeconnections:CreateRepositoryLink",
    "EventSource": "codeconnections",
    "EventName": "CreateRepositoryLink",
    "Description": "Creates a link to a specified external Git repository"
  },
  {
    "API": "codeconnections:CreateSyncConfiguration",
    "EventSource": "codeconnections",
    "EventName": "CreateSyncConfiguration",
    "Description": "Creates a sync configuration which allows Amazon Web Services to sync content from a Git repository to update a specified Amazon Web Services resource"
  },
  {
    "API": "codeconnections:DeleteConnection",
    "EventSource": "codeconnections",
    "EventName": "DeleteConnection",
    "Description": "The connection to be deleted"
  },
  {
    "API": "codeconnections:DeleteHost",
    "EventSource": "codeconnections",
    "EventName": "DeleteHost",
    "Description": "The host to be deleted"
  },
  {
    "API": "codeconnections:DeleteRepositoryLink",
    "EventSource": "codeconnections",
    "EventName": "DeleteRepositoryLink",
    "Description": "Deletes the association between your connection and a specified external Git repository"
  },
  {
    "API": "codeconnections:DeleteSyncConfiguration",
    "EventSource": "codeconnections",
    "EventName": "DeleteSyncConfiguration",
    "Description": "Deletes the sync configuration for a specified repository and connection"
  },
  {
    "API": "codeconnections:GeneratePresignedUrl",
    "EventSource": "codeconnections",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "codeconnections:GetConnection",
    "EventSource": "codeconnections",
    "EventName": "GetConnection",
    "Description": "Returns the connection ARN and details such as status, owner, and provider type"
  },
  {
    "API": "codeconnections:GetHost",
    "EventSource": "codeconnections",
    "EventName": "GetHost",
    "Description": "Returns the host ARN and details such as status, provider type, endpoint, and, if applicable, the VPC configuration"
  },
  {
    "API": "codeconnections:GetRepositoryLink",
    "EventSource": "codeconnections",
    "EventName": "GetRepositoryLink",
    "Description": "Returns details about a repository link"
  },
  {
    "API": "codeconnections:GetRepositorySyncStatus",
    "EventSource": "codeconnections",
    "EventName": "GetRepositorySyncStatus",
    "Description": "Returns details about the sync status for a repository"
  },
  {
    "API": "codeconnections:GetResourceSyncStatus",
    "EventSource": "codeconnections",
    "EventName": "GetResourceSyncStatus",
    "Description": "Returns the status of the sync with the Git repository for a specific Amazon Web Services resource"
  },
  {
    "API": "codeconnections:GetSyncBlockerSummary",
    "EventSource": "codeconnections",
    "EventName": "GetSyncBlockerSummary",
    "Description": "Returns a list of the most recent sync blockers"
  },
  {
    "API": "codeconnections:GetSyncConfiguration",
    "EventSource": "codeconnections",
    "EventName": "GetSyncConfiguration",
    "Description": "Returns details about a sync configuration, including the sync type and resource name"
  },
  {
    "API": "codeconnections:ListConnections",
    "EventSource": "codeconnections",
    "EventName": "ListConnections",
    "Description": "Lists the connections associated with your account"
  },
  {
    "API": "codeconnections:ListHosts",
    "EventSource": "codeconnections",
    "EventName": "ListHosts",
    "Description": "Lists the hosts associated with your account"
  },
  {
    "API": "codeconnections:ListRepositoryLinks",
    "EventSource": "codeconnections",
    "EventName": "ListRepositoryLinks",
    "Description": "Lists the repository links created for connections in your account"
  },
  {
    "API": "codeconnections:ListRepositorySyncDefinitions",
    "EventSource": "codeconnections",
    "EventName": "ListRepositorySyncDefinitions",
    "Description": "Lists the repository sync definitions for repository links in your account"
  },
  {
    "API": "codeconnections:ListSyncConfigurations",
    "EventSource": "codeconnections",
    "EventName": "ListSyncConfigurations",
    "Description": "Returns a list of sync configurations for a specified repository"
  },
  {
    "API": "codeconnections:ListTagsForResource",
    "EventSource": "codeconnections",
    "EventName": "ListTagsForResource",
    "Description": "Gets the set of key-value pairs (metadata) that are used to manage the resource"
  },
  {
    "API": "codeconnections:TagResource",
    "EventSource": "codeconnections",
    "EventName": "TagResource",
    "Description": "Adds to or modifies the tags of the given resource"
  },
  {
    "API": "codeconnections:UntagResource",
    "EventSource": "codeconnections",
    "EventName": "UntagResource",
    "Description": "Removes tags from an Amazon Web Services resource"
  },
  {
    "API": "codeconnections:UpdateHost",
    "EventSource": "codeconnections",
    "EventName": "UpdateHost",
    "Description": "Updates a specified host with the provided configurations"
  },
  {
    "API": "codeconnections:UpdateRepositoryLink",
    "EventSource": "codeconnections",
    "EventName": "UpdateRepositoryLink",
    "Description": "Updates the association between your connection and a specified external Git repository"
  },
  {
    "API": "codeconnections:UpdateSyncBlocker",
    "EventSource": "codeconnections",
    "EventName": "UpdateSyncBlocker",
    "Description": "Allows you to update the status of a sync blocker, resolving the blocker and allowing syncing to continue"
  },
  {
    "API": "codeconnections:UpdateSyncConfiguration",
    "EventSource": "codeconnections",
    "EventName": "UpdateSyncConfiguration",
    "Description": "Updates the sync configuration for your connection and a specified external Git repository"
  },
  {
    "API": "codedeploy:AddTagsToOnPremisesInstances",
    "EventSource": "codedeploy",
    "EventName": "AddTagsToOnPremisesInstances",
    "Description": "Adds tags to on-premises instances"
  },
  {
    "API": "codedeploy:BatchGetApplicationRevisions",
    "EventSource": "codedeploy",
    "EventName": "BatchGetApplicationRevisions",
    "Description": "Gets information about one or more application revisions"
  },
  {
    "API": "codedeploy:BatchGetApplications",
    "EventSource": "codedeploy",
    "EventName": "BatchGetApplications",
    "Description": "Gets information about one or more applications"
  },
  {
    "API": "codedeploy:BatchGetDeploymentGroups",
    "EventSource": "codedeploy",
    "EventName": "BatchGetDeploymentGroups",
    "Description": "Gets information about one or more deployment groups"
  },
  {
    "API": "codedeploy:BatchGetDeploymentInstances",
    "EventSource": "codedeploy",
    "EventName": "BatchGetDeploymentInstances",
    "Description": ""
  },
  {
    "API": "codedeploy:BatchGetDeploymentTargets",
    "EventSource": "codedeploy",
    "EventName": "BatchGetDeploymentTargets",
    "Description": "Returns an array of one or more targets associated with a deployment"
  },
  {
    "API": "codedeploy:BatchGetDeployments",
    "EventSource": "codedeploy",
    "EventName": "BatchGetDeployments",
    "Description": "Gets information about one or more deployments"
  },
  {
    "API": "codedeploy:BatchGetOnPremisesInstances",
    "EventSource": "codedeploy",
    "EventName": "BatchGetOnPremisesInstances",
    "Description": "Gets information about one or more on-premises instances"
  },
  {
    "API": "codedeploy:ContinueDeployment",
    "EventSource": "codedeploy",
    "EventName": "ContinueDeployment",
    "Description": "For a blue/green deployment, starts the process of rerouting traffic from instances in the original environment to instances in the replacement environment without waiting for a specified wait time to elapse"
  },
  {
    "API": "codedeploy:CreateApplication",
    "EventSource": "codedeploy",
    "EventName": "CreateApplication",
    "Description": "Creates an application"
  },
  {
    "API": "codedeploy:CreateDeployment",
    "EventSource": "codedeploy",
    "EventName": "CreateDeployment",
    "Description": "Deploys an application revision through the specified deployment group"
  },
  {
    "API": "codedeploy:CreateDeploymentConfig",
    "EventSource": "codedeploy",
    "EventName": "CreateDeploymentConfig",
    "Description": "Creates a deployment configuration"
  },
  {
    "API": "codedeploy:CreateDeploymentGroup",
    "EventSource": "codedeploy",
    "EventName": "CreateDeploymentGroup",
    "Description": "Creates a deployment group to which application revisions are deployed"
  },
  {
    "API": "codedeploy:DeleteApplication",
    "EventSource": "codedeploy",
    "EventName": "DeleteApplication",
    "Description": "Deletes an application"
  },
  {
    "API": "codedeploy:DeleteDeploymentConfig",
    "EventSource": "codedeploy",
    "EventName": "DeleteDeploymentConfig",
    "Description": "Deletes a deployment configuration"
  },
  {
    "API": "codedeploy:DeleteDeploymentGroup",
    "EventSource": "codedeploy",
    "EventName": "DeleteDeploymentGroup",
    "Description": "Deletes a deployment group"
  },
  {
    "API": "codedeploy:DeleteGitHubAccountToken",
    "EventSource": "codedeploy",
    "EventName": "DeleteGitHubAccountToken",
    "Description": "Deletes a GitHub account connection"
  },
  {
    "API": "codedeploy:DeleteResourcesByExternalId",
    "EventSource": "codedeploy",
    "EventName": "DeleteResourcesByExternalId",
    "Description": "Deletes resources linked to an external ID"
  },
  {
    "API": "codedeploy:DeregisterOnPremisesInstance",
    "EventSource": "codedeploy",
    "EventName": "DeregisterOnPremisesInstance",
    "Description": "Deregisters an on-premises instance"
  },
  {
    "API": "codedeploy:GeneratePresignedUrl",
    "EventSource": "codedeploy",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "codedeploy:GetApplication",
    "EventSource": "codedeploy",
    "EventName": "GetApplication",
    "Description": "Gets information about an application"
  },
  {
    "API": "codedeploy:GetApplicationRevision",
    "EventSource": "codedeploy",
    "EventName": "GetApplicationRevision",
    "Description": "Gets information about an application revision"
  },
  {
    "API": "codedeploy:GetDeployment",
    "EventSource": "codedeploy",
    "EventName": "GetDeployment",
    "Description": "Gets information about a deployment"
  },
  {
    "API": "codedeploy:GetDeploymentConfig",
    "EventSource": "codedeploy",
    "EventName": "GetDeploymentConfig",
    "Description": "Gets information about a deployment configuration"
  },
  {
    "API": "codedeploy:GetDeploymentGroup",
    "EventSource": "codedeploy",
    "EventName": "GetDeploymentGroup",
    "Description": "Gets information about a deployment group"
  },
  {
    "API": "codedeploy:GetDeploymentInstance",
    "EventSource": "codedeploy",
    "EventName": "GetDeploymentInstance",
    "Description": "Gets information about an instance as part of a deployment"
  },
  {
    "API": "codedeploy:GetDeploymentTarget",
    "EventSource": "codedeploy",
    "EventName": "GetDeploymentTarget",
    "Description": "Returns information about a deployment target"
  },
  {
    "API": "codedeploy:GetOnPremisesInstance",
    "EventSource": "codedeploy",
    "EventName": "GetOnPremisesInstance",
    "Description": "Gets information about an on-premises instance"
  },
  {
    "API": "codedeploy:ListApplicationRevisions",
    "EventSource": "codedeploy",
    "EventName": "ListApplicationRevisions",
    "Description": "Lists information about revisions for an application"
  },
  {
    "API": "codedeploy:ListApplications",
    "EventSource": "codedeploy",
    "EventName": "ListApplications",
    "Description": "Lists the applications registered with the user or Amazon Web Services account"
  },
  {
    "API": "codedeploy:ListDeploymentConfigs",
    "EventSource": "codedeploy",
    "EventName": "ListDeploymentConfigs",
    "Description": "Lists the deployment configurations with the user or Amazon Web Services account"
  },
  {
    "API": "codedeploy:ListDeploymentGroups",
    "EventSource": "codedeploy",
    "EventName": "ListDeploymentGroups",
    "Description": "Lists the deployment groups for an application registered with the Amazon Web Services user or Amazon Web Services account"
  },
  {
    "API": "codedeploy:ListDeploymentInstances",
    "EventSource": "codedeploy",
    "EventName": "ListDeploymentInstances",
    "Description": ""
  },
  {
    "API": "codedeploy:ListDeploymentTargets",
    "EventSource": "codedeploy",
    "EventName": "ListDeploymentTargets",
    "Description": "Returns an array of target IDs that are associated a deployment"
  },
  {
    "API": "codedeploy:ListDeployments",
    "EventSource": "codedeploy",
    "EventName": "ListDeployments",
    "Description": "Lists the deployments in a deployment group for an application registered with the user or Amazon Web Services account"
  },
  {
    "API": "codedeploy:ListGitHubAccountTokenNames",
    "EventSource": "codedeploy",
    "EventName": "ListGitHubAccountTokenNames",
    "Description": "Lists the names of stored connections to GitHub accounts"
  },
  {
    "API": "codedeploy:ListOnPremisesInstances",
    "EventSource": "codedeploy",
    "EventName": "ListOnPremisesInstances",
    "Description": "Gets a list of names for one or more on-premises instances"
  },
  {
    "API": "codedeploy:ListTagsForResource",
    "EventSource": "codedeploy",
    "EventName": "ListTagsForResource",
    "Description": "Returns a list of tags for the resource identified by a specified Amazon Resource Name (ARN)"
  },
  {
    "API": "codedeploy:PutLifecycleEventHookExecutionStatus",
    "EventSource": "codedeploy",
    "EventName": "PutLifecycleEventHookExecutionStatus",
    "Description": "Sets the result of a Lambda validation function"
  },
  {
    "API": "codedeploy:RegisterApplicationRevision",
    "EventSource": "codedeploy",
    "EventName": "RegisterApplicationRevision",
    "Description": "Registers with CodeDeploy a revision for the specified application"
  },
  {
    "API": "codedeploy:RegisterOnPremisesInstance",
    "EventSource": "codedeploy",
    "EventName": "RegisterOnPremisesInstance",
    "Description": "Registers an on-premises instance"
  },
  {
    "API": "codedeploy:RemoveTagsFromOnPremisesInstances",
    "EventSource": "codedeploy",
    "EventName": "RemoveTagsFromOnPremisesInstances",
    "Description": "Removes one or more tags from one or more on-premises instances"
  },
  {
    "API": "codedeploy:SkipWaitTimeForInstanceTermination",
    "EventSource": "codedeploy",
    "EventName": "SkipWaitTimeForInstanceTermination",
    "Description": "In a blue/green deployment, overrides any specified wait time and starts terminating instances immediately after the traffic routing is complete"
  },
  {
    "API": "codedeploy:StopDeployment",
    "EventSource": "codedeploy",
    "EventName": "StopDeployment",
    "Description": "Attempts to stop an ongoing deployment"
  },
  {
    "API": "codedeploy:TagResource",
    "EventSource": "codedeploy",
    "EventName": "TagResource",
    "Description": "Associates the list of tags in the input ``Tags`` parameter with the resource identified by the ``ResourceArn`` input parameter"
  },
  {
    "API": "codedeploy:UntagResource",
    "EventSource": "codedeploy",
    "EventName": "UntagResource",
    "Description": "Disassociates a resource from a list of tags"
  },
  {
    "API": "codedeploy:UpdateApplication",
    "EventSource": "codedeploy",
    "EventName": "UpdateApplication",
    "Description": "Changes the name of an application"
  },
  {
    "API": "codedeploy:UpdateDeploymentGroup",
    "EventSource": "codedeploy",
    "EventName": "UpdateDeploymentGroup",
    "Description": "Changes information about a deployment group"
  },
  {
    "API": "codeguru-reviewer:AssociateRepository",
    "EventSource": "codeguru-reviewer",
    "EventName": "AssociateRepository",
    "Description": "Use to associate an Amazon Web Services CodeCommit repository or a repository managed by Amazon Web Services CodeStar Connections with Amazon CodeGuru Reviewer"
  },
  {
    "API": "codeguru-reviewer:CreateCodeReview",
    "EventSource": "codeguru-reviewer",
    "EventName": "CreateCodeReview",
    "Description": "Use to create a code review with a `CodeReviewType <https://docs"
  },
  {
    "API": "codeguru-reviewer:DescribeCodeReview",
    "EventSource": "codeguru-reviewer",
    "EventName": "DescribeCodeReview",
    "Description": "Returns the metadata associated with the code review along with its status"
  },
  {
    "API": "codeguru-reviewer:DescribeRecommendationFeedback",
    "EventSource": "codeguru-reviewer",
    "EventName": "DescribeRecommendationFeedback",
    "Description": "Describes the customer feedback for a CodeGuru Reviewer recommendation"
  },
  {
    "API": "codeguru-reviewer:DescribeRepositoryAssociation",
    "EventSource": "codeguru-reviewer",
    "EventName": "DescribeRepositoryAssociation",
    "Description": "Returns a `RepositoryAssociation <https://docs"
  },
  {
    "API": "codeguru-reviewer:DisassociateRepository",
    "EventSource": "codeguru-reviewer",
    "EventName": "DisassociateRepository",
    "Description": "Removes the association between Amazon CodeGuru Reviewer and a repository"
  },
  {
    "API": "codeguru-reviewer:GeneratePresignedUrl",
    "EventSource": "codeguru-reviewer",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "codeguru-reviewer:ListCodeReviews",
    "EventSource": "codeguru-reviewer",
    "EventName": "ListCodeReviews",
    "Description": "Lists all the code reviews that the customer has created in the past 90 days"
  },
  {
    "API": "codeguru-reviewer:ListRecommendationFeedback",
    "EventSource": "codeguru-reviewer",
    "EventName": "ListRecommendationFeedback",
    "Description": "Returns a list of `RecommendationFeedbackSummary <https://docs"
  },
  {
    "API": "codeguru-reviewer:ListRecommendations",
    "EventSource": "codeguru-reviewer",
    "EventName": "ListRecommendations",
    "Description": "Returns the list of all recommendations for a completed code review"
  },
  {
    "API": "codeguru-reviewer:ListRepositoryAssociations",
    "EventSource": "codeguru-reviewer",
    "EventName": "ListRepositoryAssociations",
    "Description": "Returns a list of `RepositoryAssociationSummary <https://docs"
  },
  {
    "API": "codeguru-reviewer:ListTagsForResource",
    "EventSource": "codeguru-reviewer",
    "EventName": "ListTagsForResource",
    "Description": "Returns the list of tags associated with an associated repository resource"
  },
  {
    "API": "codeguru-reviewer:PutRecommendationFeedback",
    "EventSource": "codeguru-reviewer",
    "EventName": "PutRecommendationFeedback",
    "Description": "Stores customer feedback for a CodeGuru Reviewer recommendation"
  },
  {
    "API": "codeguru-reviewer:TagResource",
    "EventSource": "codeguru-reviewer",
    "EventName": "TagResource",
    "Description": "Adds one or more tags to an associated repository"
  },
  {
    "API": "codeguru-reviewer:UntagResource",
    "EventSource": "codeguru-reviewer",
    "EventName": "UntagResource",
    "Description": "Removes a tag from an associated repository"
  },
  {
    "API": "codeguru-security:BatchGetFindings",
    "EventSource": "codeguru-security",
    "EventName": "BatchGetFindings",
    "Description": "Returns a list of requested findings from standard scans"
  },
  {
    "API": "codeguru-security:CreateScan",
    "EventSource": "codeguru-security",
    "EventName": "CreateScan",
    "Description": "Use to create a scan using code uploaded to an Amazon S3 bucket"
  },
  {
    "API": "codeguru-security:CreateUploadUrl",
    "EventSource": "codeguru-security",
    "EventName": "CreateUploadUrl",
    "Description": "Generates a pre-signed URL, request headers used to upload a code resource, and code artifact identifier for the uploaded resource"
  },
  {
    "API": "codeguru-security:GeneratePresignedUrl",
    "EventSource": "codeguru-security",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "codeguru-security:GetAccountConfiguration",
    "EventSource": "codeguru-security",
    "EventName": "GetAccountConfiguration",
    "Description": "Use to get the encryption configuration for an account"
  },
  {
    "API": "codeguru-security:GetFindings",
    "EventSource": "codeguru-security",
    "EventName": "GetFindings",
    "Description": "Returns a list of all findings generated by a particular scan"
  },
  {
    "API": "codeguru-security:GetMetricsSummary",
    "EventSource": "codeguru-security",
    "EventName": "GetMetricsSummary",
    "Description": "Returns a summary of metrics for an account from a specified date, including number of open findings, the categories with most findings, the scans with most open findings, and scans with most open critical findings"
  },
  {
    "API": "codeguru-security:GetScan",
    "EventSource": "codeguru-security",
    "EventName": "GetScan",
    "Description": "Returns details about a scan, including whether or not a scan has completed"
  },
  {
    "API": "codeguru-security:ListFindingsMetrics",
    "EventSource": "codeguru-security",
    "EventName": "ListFindingsMetrics",
    "Description": "Returns metrics about all findings in an account within a specified time range"
  },
  {
    "API": "codeguru-security:ListScans",
    "EventSource": "codeguru-security",
    "EventName": "ListScans",
    "Description": "Returns a list of all scans in an account"
  },
  {
    "API": "codeguru-security:ListTagsForResource",
    "EventSource": "codeguru-security",
    "EventName": "ListTagsForResource",
    "Description": "Returns a list of all tags associated with a scan"
  },
  {
    "API": "codeguru-security:TagResource",
    "EventSource": "codeguru-security",
    "EventName": "TagResource",
    "Description": "Use to add one or more tags to an existing scan"
  },
  {
    "API": "codeguru-security:UntagResource",
    "EventSource": "codeguru-security",
    "EventName": "UntagResource",
    "Description": "Use to remove one or more tags from an existing scan"
  },
  {
    "API": "codeguru-security:UpdateAccountConfiguration",
    "EventSource": "codeguru-security",
    "EventName": "UpdateAccountConfiguration",
    "Description": "Use to update the encryption configuration for an account"
  },
  {
    "API": "codeguruprofiler:AddNotificationChannels",
    "EventSource": "codeguruprofiler",
    "EventName": "AddNotificationChannels",
    "Description": "Add up to 2 anomaly notifications channels for a profiling group"
  },
  {
    "API": "codeguruprofiler:BatchGetFrameMetricData",
    "EventSource": "codeguruprofiler",
    "EventName": "BatchGetFrameMetricData",
    "Description": "Returns the time series of values for a requested list of frame metrics from a time period"
  },
  {
    "API": "codeguruprofiler:ConfigureAgent",
    "EventSource": "codeguruprofiler",
    "EventName": "ConfigureAgent",
    "Description": "Used by profiler agents to report their current state and to receive remote configuration updates"
  },
  {
    "API": "codeguruprofiler:CreateProfilingGroup",
    "EventSource": "codeguruprofiler",
    "EventName": "CreateProfilingGroup",
    "Description": "Creates a profiling group"
  },
  {
    "API": "codeguruprofiler:DeleteProfilingGroup",
    "EventSource": "codeguruprofiler",
    "EventName": "DeleteProfilingGroup",
    "Description": "Deletes a profiling group"
  },
  {
    "API": "codeguruprofiler:DescribeProfilingGroup",
    "EventSource": "codeguruprofiler",
    "EventName": "DescribeProfilingGroup",
    "Description": "Returns a `ProfilingGroupDescription <https://docs"
  },
  {
    "API": "codeguruprofiler:GeneratePresignedUrl",
    "EventSource": "codeguruprofiler",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "codeguruprofiler:GetFindingsReportAccountSummary",
    "EventSource": "codeguruprofiler",
    "EventName": "GetFindingsReportAccountSummary",
    "Description": "Returns a list of `FindingsReportSummary <https://docs"
  },
  {
    "API": "codeguruprofiler:GetNotificationConfiguration",
    "EventSource": "codeguruprofiler",
    "EventName": "GetNotificationConfiguration",
    "Description": "Get the current configuration for anomaly notifications for a profiling group"
  },
  {
    "API": "codeguruprofiler:GetPolicy",
    "EventSource": "codeguruprofiler",
    "EventName": "GetPolicy",
    "Description": "Returns the JSON-formatted resource-based policy on a profiling group"
  },
  {
    "API": "codeguruprofiler:GetProfile",
    "EventSource": "codeguruprofiler",
    "EventName": "GetProfile",
    "Description": "Gets the aggregated profile of a profiling group for a specified time range"
  },
  {
    "API": "codeguruprofiler:GetRecommendations",
    "EventSource": "codeguruprofiler",
    "EventName": "GetRecommendations",
    "Description": "Returns a list of `Recommendation <https://docs"
  },
  {
    "API": "codeguruprofiler:ListFindingsReports",
    "EventSource": "codeguruprofiler",
    "EventName": "ListFindingsReports",
    "Description": "List the available reports for a given profiling group and time range"
  },
  {
    "API": "codeguruprofiler:ListProfileTimes",
    "EventSource": "codeguruprofiler",
    "EventName": "ListProfileTimes",
    "Description": "Lists the start times of the available aggregated profiles of a profiling group for an aggregation period within the specified time range"
  },
  {
    "API": "codeguruprofiler:ListProfilingGroups",
    "EventSource": "codeguruprofiler",
    "EventName": "ListProfilingGroups",
    "Description": "Returns a list of profiling groups"
  },
  {
    "API": "codeguruprofiler:ListTagsForResource",
    "EventSource": "codeguruprofiler",
    "EventName": "ListTagsForResource",
    "Description": "Returns a list of the tags that are assigned to a specified resource"
  },
  {
    "API": "codeguruprofiler:PostAgentProfile",
    "EventSource": "codeguruprofiler",
    "EventName": "PostAgentProfile",
    "Description": "Submits profiling data to an aggregated profile of a profiling group"
  },
  {
    "API": "codeguruprofiler:PutPermission",
    "EventSource": "codeguruprofiler",
    "EventName": "PutPermission",
    "Description": "Adds permissions to a profiling group's resource-based policy that are provided using an action group"
  },
  {
    "API": "codeguruprofiler:RemoveNotificationChannel",
    "EventSource": "codeguruprofiler",
    "EventName": "RemoveNotificationChannel",
    "Description": "Remove one anomaly notifications channel for a profiling group"
  },
  {
    "API": "codeguruprofiler:RemovePermission",
    "EventSource": "codeguruprofiler",
    "EventName": "RemovePermission",
    "Description": "Removes permissions from a profiling group's resource-based policy that are provided using an action group"
  },
  {
    "API": "codeguruprofiler:SubmitFeedback",
    "EventSource": "codeguruprofiler",
    "EventName": "SubmitFeedback",
    "Description": "Sends feedback to CodeGuru Profiler about whether the anomaly detected by the analysis is useful or not"
  },
  {
    "API": "codeguruprofiler:TagResource",
    "EventSource": "codeguruprofiler",
    "EventName": "TagResource",
    "Description": "Use to assign one or more tags to a resource"
  },
  {
    "API": "codeguruprofiler:UntagResource",
    "EventSource": "codeguruprofiler",
    "EventName": "UntagResource",
    "Description": "Use to remove one or more tags from a resource"
  },
  {
    "API": "codeguruprofiler:UpdateProfilingGroup",
    "EventSource": "codeguruprofiler",
    "EventName": "UpdateProfilingGroup",
    "Description": "Updates a profiling group"
  },
  {
    "API": "codepipeline:AcknowledgeJob",
    "EventSource": "codepipeline",
    "EventName": "AcknowledgeJob",
    "Description": "Returns information about a specified job and whether that job has been received by the job worker"
  },
  {
    "API": "codepipeline:AcknowledgeThirdPartyJob",
    "EventSource": "codepipeline",
    "EventName": "AcknowledgeThirdPartyJob",
    "Description": "Confirms a job worker has received the specified job"
  },
  {
    "API": "codepipeline:CreateCustomActionType",
    "EventSource": "codepipeline",
    "EventName": "CreateCustomActionType",
    "Description": "Creates a new custom action that can be used in all pipelines associated with the Amazon Web Services account"
  },
  {
    "API": "codepipeline:CreatePipeline",
    "EventSource": "codepipeline",
    "EventName": "CreatePipeline",
    "Description": "Creates a pipeline"
  },
  {
    "API": "codepipeline:DeleteCustomActionType",
    "EventSource": "codepipeline",
    "EventName": "DeleteCustomActionType",
    "Description": "Marks a custom action as deleted"
  },
  {
    "API": "codepipeline:DeletePipeline",
    "EventSource": "codepipeline",
    "EventName": "DeletePipeline",
    "Description": "Deletes the specified pipeline"
  },
  {
    "API": "codepipeline:DeleteWebhook",
    "EventSource": "codepipeline",
    "EventName": "DeleteWebhook",
    "Description": "Deletes a previously created webhook by name"
  },
  {
    "API": "codepipeline:DeregisterWebhookWithThirdParty",
    "EventSource": "codepipeline",
    "EventName": "DeregisterWebhookWithThirdParty",
    "Description": "Removes the connection between the webhook that was created by CodePipeline and the external tool with events to be detected"
  },
  {
    "API": "codepipeline:DisableStageTransition",
    "EventSource": "codepipeline",
    "EventName": "DisableStageTransition",
    "Description": "Prevents artifacts in a pipeline from transitioning to the next stage in the pipeline"
  },
  {
    "API": "codepipeline:EnableStageTransition",
    "EventSource": "codepipeline",
    "EventName": "EnableStageTransition",
    "Description": "Enables artifacts in a pipeline to transition to a stage in a pipeline"
  },
  {
    "API": "codepipeline:GeneratePresignedUrl",
    "EventSource": "codepipeline",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "codepipeline:GetActionType",
    "EventSource": "codepipeline",
    "EventName": "GetActionType",
    "Description": "Returns information about an action type created for an external provider, where the action is to be used by customers of the external provider"
  },
  {
    "API": "codepipeline:GetJobDetails",
    "EventSource": "codepipeline",
    "EventName": "GetJobDetails",
    "Description": "Returns information about a job"
  },
  {
    "API": "codepipeline:GetPipeline",
    "EventSource": "codepipeline",
    "EventName": "GetPipeline",
    "Description": "Returns the metadata, structure, stages, and actions of a pipeline"
  },
  {
    "API": "codepipeline:GetPipelineExecution",
    "EventSource": "codepipeline",
    "EventName": "GetPipelineExecution",
    "Description": "Returns information about an execution of a pipeline, including details about artifacts, the pipeline execution ID, and the name, version, and status of the pipeline"
  },
  {
    "API": "codepipeline:GetPipelineState",
    "EventSource": "codepipeline",
    "EventName": "GetPipelineState",
    "Description": "Returns information about the state of a pipeline, including the stages and actions"
  },
  {
    "API": "codepipeline:GetThirdPartyJobDetails",
    "EventSource": "codepipeline",
    "EventName": "GetThirdPartyJobDetails",
    "Description": "Requests the details of a job for a third party action"
  },
  {
    "API": "codepipeline:ListActionExecutions",
    "EventSource": "codepipeline",
    "EventName": "ListActionExecutions",
    "Description": "Lists the action executions that have occurred in a pipeline"
  },
  {
    "API": "codepipeline:ListActionTypes",
    "EventSource": "codepipeline",
    "EventName": "ListActionTypes",
    "Description": "Gets a summary of all CodePipeline action types associated with your account"
  },
  {
    "API": "codepipeline:ListPipelineExecutions",
    "EventSource": "codepipeline",
    "EventName": "ListPipelineExecutions",
    "Description": "Gets a summary of the most recent executions for a pipeline"
  },
  {
    "API": "codepipeline:ListPipelines",
    "EventSource": "codepipeline",
    "EventName": "ListPipelines",
    "Description": "Gets a summary of all of the pipelines associated with your account"
  },
  {
    "API": "codepipeline:ListTagsForResource",
    "EventSource": "codepipeline",
    "EventName": "ListTagsForResource",
    "Description": "Gets the set of key-value pairs (metadata) that are used to manage the resource"
  },
  {
    "API": "codepipeline:ListWebhooks",
    "EventSource": "codepipeline",
    "EventName": "ListWebhooks",
    "Description": "Gets a listing of all the webhooks in this Amazon Web Services Region for this account"
  },
  {
    "API": "codepipeline:PollForJobs",
    "EventSource": "codepipeline",
    "EventName": "PollForJobs",
    "Description": "Returns information about any jobs for CodePipeline to act on"
  },
  {
    "API": "codepipeline:PollForThirdPartyJobs",
    "EventSource": "codepipeline",
    "EventName": "PollForThirdPartyJobs",
    "Description": "Determines whether there are any third party jobs for a job worker to act on"
  },
  {
    "API": "codepipeline:PutActionRevision",
    "EventSource": "codepipeline",
    "EventName": "PutActionRevision",
    "Description": "Provides information to CodePipeline about new revisions to a source"
  },
  {
    "API": "codepipeline:PutApprovalResult",
    "EventSource": "codepipeline",
    "EventName": "PutApprovalResult",
    "Description": "Provides the response to a manual approval request to CodePipeline"
  },
  {
    "API": "codepipeline:PutJobFailureResult",
    "EventSource": "codepipeline",
    "EventName": "PutJobFailureResult",
    "Description": "Represents the failure of a job as returned to the pipeline by a job worker"
  },
  {
    "API": "codepipeline:PutJobSuccessResult",
    "EventSource": "codepipeline",
    "EventName": "PutJobSuccessResult",
    "Description": "Represents the success of a job as returned to the pipeline by a job worker"
  },
  {
    "API": "codepipeline:PutThirdPartyJobFailureResult",
    "EventSource": "codepipeline",
    "EventName": "PutThirdPartyJobFailureResult",
    "Description": "Represents the failure of a third party job as returned to the pipeline by a job worker"
  },
  {
    "API": "codepipeline:PutThirdPartyJobSuccessResult",
    "EventSource": "codepipeline",
    "EventName": "PutThirdPartyJobSuccessResult",
    "Description": "Represents the success of a third party job as returned to the pipeline by a job worker"
  },
  {
    "API": "codepipeline:PutWebhook",
    "EventSource": "codepipeline",
    "EventName": "PutWebhook",
    "Description": "Defines a webhook and returns a unique webhook URL generated by CodePipeline"
  },
  {
    "API": "codepipeline:RegisterWebhookWithThirdParty",
    "EventSource": "codepipeline",
    "EventName": "RegisterWebhookWithThirdParty",
    "Description": "Configures a connection between the webhook that was created and the external tool with events to be detected"
  },
  {
    "API": "codepipeline:RetryStageExecution",
    "EventSource": "codepipeline",
    "EventName": "RetryStageExecution",
    "Description": "You can retry a stage that has failed without having to run a pipeline again from the beginning"
  },
  {
    "API": "codepipeline:RollbackStage",
    "EventSource": "codepipeline",
    "EventName": "RollbackStage",
    "Description": "Rolls back a stage execution"
  },
  {
    "API": "codepipeline:StartPipelineExecution",
    "EventSource": "codepipeline",
    "EventName": "StartPipelineExecution",
    "Description": "Starts the specified pipeline"
  },
  {
    "API": "codepipeline:StopPipelineExecution",
    "EventSource": "codepipeline",
    "EventName": "StopPipelineExecution",
    "Description": "Stops the specified pipeline execution"
  },
  {
    "API": "codepipeline:TagResource",
    "EventSource": "codepipeline",
    "EventName": "TagResource",
    "Description": "Adds to or modifies the tags of the given resource"
  },
  {
    "API": "codepipeline:UntagResource",
    "EventSource": "codepipeline",
    "EventName": "UntagResource",
    "Description": "Removes tags from an Amazon Web Services resource"
  },
  {
    "API": "codepipeline:UpdateActionType",
    "EventSource": "codepipeline",
    "EventName": "UpdateActionType",
    "Description": "Updates an action type that was created with any supported integration model, where the action type is to be used by customers of the action type provider"
  },
  {
    "API": "codepipeline:UpdatePipeline",
    "EventSource": "codepipeline",
    "EventName": "UpdatePipeline",
    "Description": "Updates a specified pipeline with edits or changes to its structure"
  },
  {
    "API": "codestar:AssociateTeamMember",
    "EventSource": "codestar",
    "EventName": "AssociateTeamMember",
    "Description": "Adds an IAM user to the team for an AWS CodeStar project"
  },
  {
    "API": "codestar:CreateProject",
    "EventSource": "codestar",
    "EventName": "CreateProject",
    "Description": "Creates a project, including project resources"
  },
  {
    "API": "codestar:CreateUserProfile",
    "EventSource": "codestar",
    "EventName": "CreateUserProfile",
    "Description": "Creates a profile for a user that includes user preferences, such as the display name and email address assocciated with the user, in AWS CodeStar"
  },
  {
    "API": "codestar:DeleteProject",
    "EventSource": "codestar",
    "EventName": "DeleteProject",
    "Description": "Deletes a project, including project resources"
  },
  {
    "API": "codestar:DeleteUserProfile",
    "EventSource": "codestar",
    "EventName": "DeleteUserProfile",
    "Description": "Deletes a user profile in AWS CodeStar, including all personal preference data associated with that profile, such as display name and email address"
  },
  {
    "API": "codestar:DescribeProject",
    "EventSource": "codestar",
    "EventName": "DescribeProject",
    "Description": "Describes a project and its resources"
  },
  {
    "API": "codestar:DescribeUserProfile",
    "EventSource": "codestar",
    "EventName": "DescribeUserProfile",
    "Description": "Describes a user in AWS CodeStar and the user attributes across all projects"
  },
  {
    "API": "codestar:DisassociateTeamMember",
    "EventSource": "codestar",
    "EventName": "DisassociateTeamMember",
    "Description": "Removes a user from a project"
  },
  {
    "API": "codestar:GeneratePresignedUrl",
    "EventSource": "codestar",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "codestar:ListProjects",
    "EventSource": "codestar",
    "EventName": "ListProjects",
    "Description": "Lists all projects in AWS CodeStar associated with your AWS account"
  },
  {
    "API": "codestar:ListResources",
    "EventSource": "codestar",
    "EventName": "ListResources",
    "Description": "Lists resources associated with a project in AWS CodeStar"
  },
  {
    "API": "codestar:ListTagsForProject",
    "EventSource": "codestar",
    "EventName": "ListTagsForProject",
    "Description": "Gets the tags for a project"
  },
  {
    "API": "codestar:ListTeamMembers",
    "EventSource": "codestar",
    "EventName": "ListTeamMembers",
    "Description": "Lists all team members associated with a project"
  },
  {
    "API": "codestar:ListUserProfiles",
    "EventSource": "codestar",
    "EventName": "ListUserProfiles",
    "Description": "Lists all the user profiles configured for your AWS account in AWS CodeStar"
  },
  {
    "API": "codestar:TagProject",
    "EventSource": "codestar",
    "EventName": "TagProject",
    "Description": "Adds tags to a project"
  },
  {
    "API": "codestar:UntagProject",
    "EventSource": "codestar",
    "EventName": "UntagProject",
    "Description": "Removes tags from a project"
  },
  {
    "API": "codestar:UpdateProject",
    "EventSource": "codestar",
    "EventName": "UpdateProject",
    "Description": "Updates a project in AWS CodeStar"
  },
  {
    "API": "codestar:UpdateTeamMember",
    "EventSource": "codestar",
    "EventName": "UpdateTeamMember",
    "Description": "Updates a team member's attributes in an AWS CodeStar project"
  },
  {
    "API": "codestar:UpdateUserProfile",
    "EventSource": "codestar",
    "EventName": "UpdateUserProfile",
    "Description": "Updates a user's profile in AWS CodeStar"
  },
  {
    "API": "codestar-connections:CreateConnection",
    "EventSource": "codestar-connections",
    "EventName": "CreateConnection",
    "Description": "Creates a connection that can then be given to other Amazon Web Services services like CodePipeline so that it can access third-party code repositories"
  },
  {
    "API": "codestar-connections:CreateHost",
    "EventSource": "codestar-connections",
    "EventName": "CreateHost",
    "Description": "Creates a resource that represents the infrastructure where a third-party provider is installed"
  },
  {
    "API": "codestar-connections:CreateRepositoryLink",
    "EventSource": "codestar-connections",
    "EventName": "CreateRepositoryLink",
    "Description": "Creates a link to a specified external Git repository"
  },
  {
    "API": "codestar-connections:CreateSyncConfiguration",
    "EventSource": "codestar-connections",
    "EventName": "CreateSyncConfiguration",
    "Description": "Creates a sync configuration which allows Amazon Web Services to sync content from a Git repository to update a specified Amazon Web Services resource"
  },
  {
    "API": "codestar-connections:DeleteConnection",
    "EventSource": "codestar-connections",
    "EventName": "DeleteConnection",
    "Description": "The connection to be deleted"
  },
  {
    "API": "codestar-connections:DeleteHost",
    "EventSource": "codestar-connections",
    "EventName": "DeleteHost",
    "Description": "The host to be deleted"
  },
  {
    "API": "codestar-connections:DeleteRepositoryLink",
    "EventSource": "codestar-connections",
    "EventName": "DeleteRepositoryLink",
    "Description": "Deletes the association between your connection and a specified external Git repository"
  },
  {
    "API": "codestar-connections:DeleteSyncConfiguration",
    "EventSource": "codestar-connections",
    "EventName": "DeleteSyncConfiguration",
    "Description": "Deletes the sync configuration for a specified repository and connection"
  },
  {
    "API": "codestar-connections:GeneratePresignedUrl",
    "EventSource": "codestar-connections",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "codestar-connections:GetConnection",
    "EventSource": "codestar-connections",
    "EventName": "GetConnection",
    "Description": "Returns the connection ARN and details such as status, owner, and provider type"
  },
  {
    "API": "codestar-connections:GetHost",
    "EventSource": "codestar-connections",
    "EventName": "GetHost",
    "Description": "Returns the host ARN and details such as status, provider type, endpoint, and, if applicable, the VPC configuration"
  },
  {
    "API": "codestar-connections:GetRepositoryLink",
    "EventSource": "codestar-connections",
    "EventName": "GetRepositoryLink",
    "Description": "Returns details about a repository link"
  },
  {
    "API": "codestar-connections:GetRepositorySyncStatus",
    "EventSource": "codestar-connections",
    "EventName": "GetRepositorySyncStatus",
    "Description": "Returns details about the sync status for a repository"
  },
  {
    "API": "codestar-connections:GetResourceSyncStatus",
    "EventSource": "codestar-connections",
    "EventName": "GetResourceSyncStatus",
    "Description": "Returns the status of the sync with the Git repository for a specific Amazon Web Services resource"
  },
  {
    "API": "codestar-connections:GetSyncBlockerSummary",
    "EventSource": "codestar-connections",
    "EventName": "GetSyncBlockerSummary",
    "Description": "Returns a list of the most recent sync blockers"
  },
  {
    "API": "codestar-connections:GetSyncConfiguration",
    "EventSource": "codestar-connections",
    "EventName": "GetSyncConfiguration",
    "Description": "Returns details about a sync configuration, including the sync type and resource name"
  },
  {
    "API": "codestar-connections:ListConnections",
    "EventSource": "codestar-connections",
    "EventName": "ListConnections",
    "Description": "Lists the connections associated with your account"
  },
  {
    "API": "codestar-connections:ListHosts",
    "EventSource": "codestar-connections",
    "EventName": "ListHosts",
    "Description": "Lists the hosts associated with your account"
  },
  {
    "API": "codestar-connections:ListRepositoryLinks",
    "EventSource": "codestar-connections",
    "EventName": "ListRepositoryLinks",
    "Description": "Lists the repository links created for connections in your account"
  },
  {
    "API": "codestar-connections:ListRepositorySyncDefinitions",
    "EventSource": "codestar-connections",
    "EventName": "ListRepositorySyncDefinitions",
    "Description": "Lists the repository sync definitions for repository links in your account"
  },
  {
    "API": "codestar-connections:ListSyncConfigurations",
    "EventSource": "codestar-connections",
    "EventName": "ListSyncConfigurations",
    "Description": "Returns a list of sync configurations for a specified repository"
  },
  {
    "API": "codestar-connections:ListTagsForResource",
    "EventSource": "codestar-connections",
    "EventName": "ListTagsForResource",
    "Description": "Gets the set of key-value pairs (metadata) that are used to manage the resource"
  },
  {
    "API": "codestar-connections:TagResource",
    "EventSource": "codestar-connections",
    "EventName": "TagResource",
    "Description": "Adds to or modifies the tags of the given resource"
  },
  {
    "API": "codestar-connections:UntagResource",
    "EventSource": "codestar-connections",
    "EventName": "UntagResource",
    "Description": "Removes tags from an Amazon Web Services resource"
  },
  {
    "API": "codestar-connections:UpdateHost",
    "EventSource": "codestar-connections",
    "EventName": "UpdateHost",
    "Description": "Updates a specified host with the provided configurations"
  },
  {
    "API": "codestar-connections:UpdateRepositoryLink",
    "EventSource": "codestar-connections",
    "EventName": "UpdateRepositoryLink",
    "Description": "Updates the association between your connection and a specified external Git repository"
  },
  {
    "API": "codestar-connections:UpdateSyncBlocker",
    "EventSource": "codestar-connections",
    "EventName": "UpdateSyncBlocker",
    "Description": "Allows you to update the status of a sync blocker, resolving the blocker and allowing syncing to continue"
  },
  {
    "API": "codestar-connections:UpdateSyncConfiguration",
    "EventSource": "codestar-connections",
    "EventName": "UpdateSyncConfiguration",
    "Description": "Updates the sync configuration for your connection and a specified external Git repository"
  },
  {
    "API": "codestar-notifications:CreateNotificationRule",
    "EventSource": "codestar-notifications",
    "EventName": "CreateNotificationRule",
    "Description": "Creates a notification rule for a resource"
  },
  {
    "API": "codestar-notifications:DeleteNotificationRule",
    "EventSource": "codestar-notifications",
    "EventName": "DeleteNotificationRule",
    "Description": "Deletes a notification rule for a resource"
  },
  {
    "API": "codestar-notifications:DeleteTarget",
    "EventSource": "codestar-notifications",
    "EventName": "DeleteTarget",
    "Description": "Deletes a specified target for notifications"
  },
  {
    "API": "codestar-notifications:DescribeNotificationRule",
    "EventSource": "codestar-notifications",
    "EventName": "DescribeNotificationRule",
    "Description": "Returns information about a specified notification rule"
  },
  {
    "API": "codestar-notifications:GeneratePresignedUrl",
    "EventSource": "codestar-notifications",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "codestar-notifications:ListEventTypes",
    "EventSource": "codestar-notifications",
    "EventName": "ListEventTypes",
    "Description": "Returns information about the event types available for configuring notifications"
  },
  {
    "API": "codestar-notifications:ListNotificationRules",
    "EventSource": "codestar-notifications",
    "EventName": "ListNotificationRules",
    "Description": "Returns a list of the notification rules for an Amazon Web Services account"
  },
  {
    "API": "codestar-notifications:ListTagsForResource",
    "EventSource": "codestar-notifications",
    "EventName": "ListTagsForResource",
    "Description": "Returns a list of the tags associated with a notification rule"
  },
  {
    "API": "codestar-notifications:ListTargets",
    "EventSource": "codestar-notifications",
    "EventName": "ListTargets",
    "Description": "Returns a list of the notification rule targets for an Amazon Web Services account"
  },
  {
    "API": "codestar-notifications:TagResource",
    "EventSource": "codestar-notifications",
    "EventName": "TagResource",
    "Description": "Associates a set of provided tags with a notification rule"
  },
  {
    "API": "codestar-notifications:UntagResource",
    "EventSource": "codestar-notifications",
    "EventName": "UntagResource",
    "Description": "Removes the association between one or more provided tags and a notification rule"
  },
  {
    "API": "codestar-notifications:UpdateNotificationRule",
    "EventSource": "codestar-notifications",
    "EventName": "UpdateNotificationRule",
    "Description": "Updates a notification rule for a resource"
  },
  {
    "API": "cognito-identity:CreateIdentityPool",
    "EventSource": "cognito-identity",
    "EventName": "CreateIdentityPool",
    "Description": "Creates a new identity pool"
  },
  {
    "API": "cognito-identity:DeleteIdentities",
    "EventSource": "cognito-identity",
    "EventName": "DeleteIdentities",
    "Description": "Deletes identities from an identity pool"
  },
  {
    "API": "cognito-identity:DeleteIdentityPool",
    "EventSource": "cognito-identity",
    "EventName": "DeleteIdentityPool",
    "Description": "Deletes an identity pool"
  },
  {
    "API": "cognito-identity:DescribeIdentity",
    "EventSource": "cognito-identity",
    "EventName": "DescribeIdentity",
    "Description": "Returns metadata related to the given identity, including when the identity was created and any associated linked logins"
  },
  {
    "API": "cognito-identity:DescribeIdentityPool",
    "EventSource": "cognito-identity",
    "EventName": "DescribeIdentityPool",
    "Description": "Gets details about a particular identity pool, including the pool name, ID description, creation date, and current number of users"
  },
  {
    "API": "cognito-identity:GeneratePresignedUrl",
    "EventSource": "cognito-identity",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "cognito-identity:GetCredentialsForIdentity",
    "EventSource": "cognito-identity",
    "EventName": "GetCredentialsForIdentity",
    "Description": "Returns credentials for the provided identity ID"
  },
  {
    "API": "cognito-identity:GetId",
    "EventSource": "cognito-identity",
    "EventName": "GetId",
    "Description": "Generates (or retrieves) a Cognito ID"
  },
  {
    "API": "cognito-identity:GetIdentityPoolRoles",
    "EventSource": "cognito-identity",
    "EventName": "GetIdentityPoolRoles",
    "Description": "Gets the roles for an identity pool"
  },
  {
    "API": "cognito-identity:GetOpenIdToken",
    "EventSource": "cognito-identity",
    "EventName": "GetOpenIdToken",
    "Description": "Gets an OpenID token, using a known Cognito ID"
  },
  {
    "API": "cognito-identity:GetOpenIdTokenForDeveloperIdentity",
    "EventSource": "cognito-identity",
    "EventName": "GetOpenIdTokenForDeveloperIdentity",
    "Description": "Registers (or retrieves) a Cognito ``IdentityId`` and an OpenID Connect token for a user authenticated by your backend authentication process"
  },
  {
    "API": "cognito-identity:GetPrincipalTagAttributeMap",
    "EventSource": "cognito-identity",
    "EventName": "GetPrincipalTagAttributeMap",
    "Description": "Use ``GetPrincipalTagAttributeMap`` to list all mappings between ``PrincipalTags`` and user attributes"
  },
  {
    "API": "cognito-identity:ListIdentities",
    "EventSource": "cognito-identity",
    "EventName": "ListIdentities",
    "Description": "Lists the identities in an identity pool"
  },
  {
    "API": "cognito-identity:ListIdentityPools",
    "EventSource": "cognito-identity",
    "EventName": "ListIdentityPools",
    "Description": "Lists all of the Cognito identity pools registered for your account"
  },
  {
    "API": "cognito-identity:ListTagsForResource",
    "EventSource": "cognito-identity",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags that are assigned to an Amazon Cognito identity pool"
  },
  {
    "API": "cognito-identity:LookupDeveloperIdentity",
    "EventSource": "cognito-identity",
    "EventName": "LookupDeveloperIdentity",
    "Description": "Retrieves the ``IdentityID`` associated with a ``DeveloperUserIdentifier`` or the list of ``DeveloperUserIdentifier`` values associated with an ``IdentityId`` for an existing identity"
  },
  {
    "API": "cognito-identity:MergeDeveloperIdentities",
    "EventSource": "cognito-identity",
    "EventName": "MergeDeveloperIdentities",
    "Description": "Merges two users having different ``IdentityId``s, existing in the same identity pool, and identified by the same developer provider"
  },
  {
    "API": "cognito-identity:SetIdentityPoolRoles",
    "EventSource": "cognito-identity",
    "EventName": "SetIdentityPoolRoles",
    "Description": "Sets the roles for an identity pool"
  },
  {
    "API": "cognito-identity:SetPrincipalTagAttributeMap",
    "EventSource": "cognito-identity",
    "EventName": "SetPrincipalTagAttributeMap",
    "Description": "You can use this operation to use default (username and clientID) attribute or custom attribute mappings"
  },
  {
    "API": "cognito-identity:TagResource",
    "EventSource": "cognito-identity",
    "EventName": "TagResource",
    "Description": "Assigns a set of tags to the specified Amazon Cognito identity pool"
  },
  {
    "API": "cognito-identity:UnlinkDeveloperIdentity",
    "EventSource": "cognito-identity",
    "EventName": "UnlinkDeveloperIdentity",
    "Description": "Unlinks a ``DeveloperUserIdentifier`` from an existing identity"
  },
  {
    "API": "cognito-identity:UnlinkIdentity",
    "EventSource": "cognito-identity",
    "EventName": "UnlinkIdentity",
    "Description": "Unlinks a federated identity from an existing account"
  },
  {
    "API": "cognito-identity:UntagResource",
    "EventSource": "cognito-identity",
    "EventName": "UntagResource",
    "Description": "Removes the specified tags from the specified Amazon Cognito identity pool"
  },
  {
    "API": "cognito-identity:UpdateIdentityPool",
    "EventSource": "cognito-identity",
    "EventName": "UpdateIdentityPool",
    "Description": "Updates an identity pool"
  },
  {
    "API": "cognito-idp:AddCustomAttributes",
    "EventSource": "cognito-idp",
    "EventName": "AddCustomAttributes",
    "Description": "Adds additional user attributes to the user pool schema"
  },
  {
    "API": "cognito-idp:AdminAddUserToGroup",
    "EventSource": "cognito-idp",
    "EventName": "AdminAddUserToGroup",
    "Description": "Adds a user to a group"
  },
  {
    "API": "cognito-idp:AdminConfirmSignUp",
    "EventSource": "cognito-idp",
    "EventName": "AdminConfirmSignUp",
    "Description": "This IAM-authenticated API operation provides a code that Amazon Cognito sent to your user when they signed up in your user pool"
  },
  {
    "API": "cognito-idp:AdminCreateUser",
    "EventSource": "cognito-idp",
    "EventName": "AdminCreateUser",
    "Description": "Creates a new user in the specified user pool"
  },
  {
    "API": "cognito-idp:AdminDeleteUser",
    "EventSource": "cognito-idp",
    "EventName": "AdminDeleteUser",
    "Description": "Deletes a user as an administrator"
  },
  {
    "API": "cognito-idp:AdminDeleteUserAttributes",
    "EventSource": "cognito-idp",
    "EventName": "AdminDeleteUserAttributes",
    "Description": "Deletes the user attributes in a user pool as an administrator"
  },
  {
    "API": "cognito-idp:AdminDisableProviderForUser",
    "EventSource": "cognito-idp",
    "EventName": "AdminDisableProviderForUser",
    "Description": "Prevents the user from signing in with the specified external (SAML or social) identity provider (IdP)"
  },
  {
    "API": "cognito-idp:AdminDisableUser",
    "EventSource": "cognito-idp",
    "EventName": "AdminDisableUser",
    "Description": "Deactivates a user and revokes all access tokens for the user"
  },
  {
    "API": "cognito-idp:AdminEnableUser",
    "EventSource": "cognito-idp",
    "EventName": "AdminEnableUser",
    "Description": "Enables the specified user as an administrator"
  },
  {
    "API": "cognito-idp:AdminForgetDevice",
    "EventSource": "cognito-idp",
    "EventName": "AdminForgetDevice",
    "Description": "Forgets the device, as an administrator"
  },
  {
    "API": "cognito-idp:AdminGetDevice",
    "EventSource": "cognito-idp",
    "EventName": "AdminGetDevice",
    "Description": "Gets the device, as an administrator"
  },
  {
    "API": "cognito-idp:AdminGetUser",
    "EventSource": "cognito-idp",
    "EventName": "AdminGetUser",
    "Description": "Gets the specified user by user name in a user pool as an administrator"
  },
  {
    "API": "cognito-idp:AdminInitiateAuth",
    "EventSource": "cognito-idp",
    "EventName": "AdminInitiateAuth",
    "Description": "Initiates the authentication flow, as an administrator"
  },
  {
    "API": "cognito-idp:AdminLinkProviderForUser",
    "EventSource": "cognito-idp",
    "EventName": "AdminLinkProviderForUser",
    "Description": "Links an existing user account in a user pool ( ``DestinationUser``) to an identity from an external IdP ( ``SourceUser``) based on a specified attribute name and value from the external IdP"
  },
  {
    "API": "cognito-idp:AdminListDevices",
    "EventSource": "cognito-idp",
    "EventName": "AdminListDevices",
    "Description": "Lists devices, as an administrator"
  },
  {
    "API": "cognito-idp:AdminListGroupsForUser",
    "EventSource": "cognito-idp",
    "EventName": "AdminListGroupsForUser",
    "Description": "Lists the groups that a user belongs to"
  },
  {
    "API": "cognito-idp:AdminListUserAuthEvents",
    "EventSource": "cognito-idp",
    "EventName": "AdminListUserAuthEvents",
    "Description": "A history of user activity and any risks detected as part of Amazon Cognito advanced security"
  },
  {
    "API": "cognito-idp:AdminRemoveUserFromGroup",
    "EventSource": "cognito-idp",
    "EventName": "AdminRemoveUserFromGroup",
    "Description": "Removes the specified user from the specified group"
  },
  {
    "API": "cognito-idp:AdminResetUserPassword",
    "EventSource": "cognito-idp",
    "EventName": "AdminResetUserPassword",
    "Description": "Resets the specified user's password in a user pool as an administrator"
  },
  {
    "API": "cognito-idp:AdminRespondToAuthChallenge",
    "EventSource": "cognito-idp",
    "EventName": "AdminRespondToAuthChallenge",
    "Description": "Some API operations in a user pool generate a challenge, like a prompt for an MFA code, for device authentication that bypasses MFA, or for a custom authentication challenge"
  },
  {
    "API": "cognito-idp:AdminSetUserMfaPreference",
    "EventSource": "cognito-idp",
    "EventName": "AdminSetUserMfaPreference",
    "Description": "The user's multi-factor authentication (MFA) preference, including which MFA options are activated, and if any are preferred"
  },
  {
    "API": "cognito-idp:AdminSetUserPassword",
    "EventSource": "cognito-idp",
    "EventName": "AdminSetUserPassword",
    "Description": "Sets the specified user's password in a user pool as an administrator"
  },
  {
    "API": "cognito-idp:AdminSetUserSettings",
    "EventSource": "cognito-idp",
    "EventName": "AdminSetUserSettings",
    "Description": "*This action is no longer supported"
  },
  {
    "API": "cognito-idp:AdminUpdateAuthEventFeedback",
    "EventSource": "cognito-idp",
    "EventName": "AdminUpdateAuthEventFeedback",
    "Description": "Provides feedback for an authentication event indicating if it was from a valid user"
  },
  {
    "API": "cognito-idp:AdminUpdateDeviceStatus",
    "EventSource": "cognito-idp",
    "EventName": "AdminUpdateDeviceStatus",
    "Description": "Updates the device status as an administrator"
  },
  {
    "API": "cognito-idp:AdminUpdateUserAttributes",
    "EventSource": "cognito-idp",
    "EventName": "AdminUpdateUserAttributes",
    "Description": ""
  },
  {
    "API": "cognito-idp:AdminUserGlobalSignOut",
    "EventSource": "cognito-idp",
    "EventName": "AdminUserGlobalSignOut",
    "Description": "Invalidates the identity, access, and refresh tokens that Amazon Cognito issued to a user"
  },
  {
    "API": "cognito-idp:AssociateSoftwareToken",
    "EventSource": "cognito-idp",
    "EventName": "AssociateSoftwareToken",
    "Description": "Begins setup of time-based one-time password (TOTP) multi-factor authentication (MFA) for a user, with a unique private key that Amazon Cognito generates and returns in the API response"
  },
  {
    "API": "cognito-idp:ChangePassword",
    "EventSource": "cognito-idp",
    "EventName": "ChangePassword",
    "Description": "Changes the password for a specified user in a user pool"
  },
  {
    "API": "cognito-idp:ConfirmDevice",
    "EventSource": "cognito-idp",
    "EventName": "ConfirmDevice",
    "Description": "Confirms tracking of the device"
  },
  {
    "API": "cognito-idp:ConfirmForgotPassword",
    "EventSource": "cognito-idp",
    "EventName": "ConfirmForgotPassword",
    "Description": "Allows a user to enter a confirmation code to reset a forgotten password"
  },
  {
    "API": "cognito-idp:ConfirmSignUp",
    "EventSource": "cognito-idp",
    "EventName": "ConfirmSignUp",
    "Description": "This public API operation provides a code that Amazon Cognito sent to your user when they signed up in your user pool via the `SignUp <https://docs"
  },
  {
    "API": "cognito-idp:CreateGroup",
    "EventSource": "cognito-idp",
    "EventName": "CreateGroup",
    "Description": "Creates a new group in the specified user pool"
  },
  {
    "API": "cognito-idp:CreateIdentityProvider",
    "EventSource": "cognito-idp",
    "EventName": "CreateIdentityProvider",
    "Description": "Adds a configuration and trust relationship between a third-party identity provider (IdP) and a user pool"
  },
  {
    "API": "cognito-idp:CreateResourceServer",
    "EventSource": "cognito-idp",
    "EventName": "CreateResourceServer",
    "Description": "Creates a new OAuth2"
  },
  {
    "API": "cognito-idp:CreateUserImportJob",
    "EventSource": "cognito-idp",
    "EventName": "CreateUserImportJob",
    "Description": "Creates a user import job"
  },
  {
    "API": "cognito-idp:CreateUserPool",
    "EventSource": "cognito-idp",
    "EventName": "CreateUserPool",
    "Description": ""
  },
  {
    "API": "cognito-idp:CreateUserPoolClient",
    "EventSource": "cognito-idp",
    "EventName": "CreateUserPoolClient",
    "Description": "Creates the user pool client"
  },
  {
    "API": "cognito-idp:CreateUserPoolDomain",
    "EventSource": "cognito-idp",
    "EventName": "CreateUserPoolDomain",
    "Description": "Creates a new domain for a user pool"
  },
  {
    "API": "cognito-idp:DeleteGroup",
    "EventSource": "cognito-idp",
    "EventName": "DeleteGroup",
    "Description": "Deletes a group"
  },
  {
    "API": "cognito-idp:DeleteIdentityProvider",
    "EventSource": "cognito-idp",
    "EventName": "DeleteIdentityProvider",
    "Description": "Deletes an IdP for a user pool"
  },
  {
    "API": "cognito-idp:DeleteResourceServer",
    "EventSource": "cognito-idp",
    "EventName": "DeleteResourceServer",
    "Description": "Deletes a resource server"
  },
  {
    "API": "cognito-idp:DeleteUser",
    "EventSource": "cognito-idp",
    "EventName": "DeleteUser",
    "Description": "Allows a user to delete their own user profile"
  },
  {
    "API": "cognito-idp:DeleteUserAttributes",
    "EventSource": "cognito-idp",
    "EventName": "DeleteUserAttributes",
    "Description": "Deletes the attributes for a user"
  },
  {
    "API": "cognito-idp:DeleteUserPool",
    "EventSource": "cognito-idp",
    "EventName": "DeleteUserPool",
    "Description": "Deletes the specified Amazon Cognito user pool"
  },
  {
    "API": "cognito-idp:DeleteUserPoolClient",
    "EventSource": "cognito-idp",
    "EventName": "DeleteUserPoolClient",
    "Description": "Allows the developer to delete the user pool client"
  },
  {
    "API": "cognito-idp:DeleteUserPoolDomain",
    "EventSource": "cognito-idp",
    "EventName": "DeleteUserPoolDomain",
    "Description": "Deletes a domain for a user pool"
  },
  {
    "API": "cognito-idp:DescribeIdentityProvider",
    "EventSource": "cognito-idp",
    "EventName": "DescribeIdentityProvider",
    "Description": "Gets information about a specific IdP"
  },
  {
    "API": "cognito-idp:DescribeResourceServer",
    "EventSource": "cognito-idp",
    "EventName": "DescribeResourceServer",
    "Description": "Describes a resource server"
  },
  {
    "API": "cognito-idp:DescribeRiskConfiguration",
    "EventSource": "cognito-idp",
    "EventName": "DescribeRiskConfiguration",
    "Description": "Describes the risk configuration"
  },
  {
    "API": "cognito-idp:DescribeUserImportJob",
    "EventSource": "cognito-idp",
    "EventName": "DescribeUserImportJob",
    "Description": "Describes the user import job"
  },
  {
    "API": "cognito-idp:DescribeUserPool",
    "EventSource": "cognito-idp",
    "EventName": "DescribeUserPool",
    "Description": "Returns the configuration information and metadata of the specified user pool"
  },
  {
    "API": "cognito-idp:DescribeUserPoolClient",
    "EventSource": "cognito-idp",
    "EventName": "DescribeUserPoolClient",
    "Description": "Client method for returning the configuration information and metadata of the specified user pool app client"
  },
  {
    "API": "cognito-idp:DescribeUserPoolDomain",
    "EventSource": "cognito-idp",
    "EventName": "DescribeUserPoolDomain",
    "Description": "Gets information about a domain"
  },
  {
    "API": "cognito-idp:ForgetDevice",
    "EventSource": "cognito-idp",
    "EventName": "ForgetDevice",
    "Description": "Forgets the specified device"
  },
  {
    "API": "cognito-idp:ForgotPassword",
    "EventSource": "cognito-idp",
    "EventName": "ForgotPassword",
    "Description": "Calling this API causes a message to be sent to the end user with a confirmation code that is required to change the user's password"
  },
  {
    "API": "cognito-idp:GeneratePresignedUrl",
    "EventSource": "cognito-idp",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "cognito-idp:GetCsvHeader",
    "EventSource": "cognito-idp",
    "EventName": "GetCsvHeader",
    "Description": "Gets the header information for the comma-separated value (CSV) file to be used as input for the user import job"
  },
  {
    "API": "cognito-idp:GetDevice",
    "EventSource": "cognito-idp",
    "EventName": "GetDevice",
    "Description": "Gets the device"
  },
  {
    "API": "cognito-idp:GetGroup",
    "EventSource": "cognito-idp",
    "EventName": "GetGroup",
    "Description": "Gets a group"
  },
  {
    "API": "cognito-idp:GetIdentityProviderByIdentifier",
    "EventSource": "cognito-idp",
    "EventName": "GetIdentityProviderByIdentifier",
    "Description": "Gets the specified IdP"
  },
  {
    "API": "cognito-idp:GetLogDeliveryConfiguration",
    "EventSource": "cognito-idp",
    "EventName": "GetLogDeliveryConfiguration",
    "Description": "Gets the detailed activity logging configuration for a user pool"
  },
  {
    "API": "cognito-idp:GetSigningCertificate",
    "EventSource": "cognito-idp",
    "EventName": "GetSigningCertificate",
    "Description": "This method takes a user pool ID, and returns the signing certificate"
  },
  {
    "API": "cognito-idp:GetUiCustomization",
    "EventSource": "cognito-idp",
    "EventName": "GetUiCustomization",
    "Description": "Gets the user interface (UI) Customization information for a particular app client's app UI, if any such information exists for the client"
  },
  {
    "API": "cognito-idp:GetUser",
    "EventSource": "cognito-idp",
    "EventName": "GetUser",
    "Description": "Gets the user attributes and metadata for a user"
  },
  {
    "API": "cognito-idp:GetUserAttributeVerificationCode",
    "EventSource": "cognito-idp",
    "EventName": "GetUserAttributeVerificationCode",
    "Description": "Generates a user attribute verification code for the specified attribute name"
  },
  {
    "API": "cognito-idp:GetUserPoolMfaConfig",
    "EventSource": "cognito-idp",
    "EventName": "GetUserPoolMfaConfig",
    "Description": "Gets the user pool multi-factor authentication (MFA) configuration"
  },
  {
    "API": "cognito-idp:GlobalSignOut",
    "EventSource": "cognito-idp",
    "EventName": "GlobalSignOut",
    "Description": "Invalidates the identity, access, and refresh tokens that Amazon Cognito issued to a user"
  },
  {
    "API": "cognito-idp:InitiateAuth",
    "EventSource": "cognito-idp",
    "EventName": "InitiateAuth",
    "Description": "Initiates sign-in for a user in the Amazon Cognito user directory"
  },
  {
    "API": "cognito-idp:ListDevices",
    "EventSource": "cognito-idp",
    "EventName": "ListDevices",
    "Description": "Lists the sign-in devices that Amazon Cognito has registered to the current user"
  },
  {
    "API": "cognito-idp:ListGroups",
    "EventSource": "cognito-idp",
    "EventName": "ListGroups",
    "Description": "Lists the groups associated with a user pool"
  },
  {
    "API": "cognito-idp:ListIdentityProviders",
    "EventSource": "cognito-idp",
    "EventName": "ListIdentityProviders",
    "Description": "Lists information about all IdPs for a user pool"
  },
  {
    "API": "cognito-idp:ListResourceServers",
    "EventSource": "cognito-idp",
    "EventName": "ListResourceServers",
    "Description": "Lists the resource servers for a user pool"
  },
  {
    "API": "cognito-idp:ListTagsForResource",
    "EventSource": "cognito-idp",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags that are assigned to an Amazon Cognito user pool"
  },
  {
    "API": "cognito-idp:ListUserImportJobs",
    "EventSource": "cognito-idp",
    "EventName": "ListUserImportJobs",
    "Description": "Lists user import jobs for a user pool"
  },
  {
    "API": "cognito-idp:ListUserPoolClients",
    "EventSource": "cognito-idp",
    "EventName": "ListUserPoolClients",
    "Description": "Lists the clients that have been created for the specified user pool"
  },
  {
    "API": "cognito-idp:ListUserPools",
    "EventSource": "cognito-idp",
    "EventName": "ListUserPools",
    "Description": "Lists the user pools associated with an Amazon Web Services account"
  },
  {
    "API": "cognito-idp:ListUsers",
    "EventSource": "cognito-idp",
    "EventName": "ListUsers",
    "Description": "Lists users and their basic details in a user pool"
  },
  {
    "API": "cognito-idp:ListUsersInGroup",
    "EventSource": "cognito-idp",
    "EventName": "ListUsersInGroup",
    "Description": "Lists the users in the specified group"
  },
  {
    "API": "cognito-idp:ResendConfirmationCode",
    "EventSource": "cognito-idp",
    "EventName": "ResendConfirmationCode",
    "Description": "Resends the confirmation (for confirmation of registration) to a specific user in the user pool"
  },
  {
    "API": "cognito-idp:RespondToAuthChallenge",
    "EventSource": "cognito-idp",
    "EventName": "RespondToAuthChallenge",
    "Description": "Some API operations in a user pool generate a challenge, like a prompt for an MFA code, for device authentication that bypasses MFA, or for a custom authentication challenge"
  },
  {
    "API": "cognito-idp:RevokeToken",
    "EventSource": "cognito-idp",
    "EventName": "RevokeToken",
    "Description": "Revokes all of the access tokens generated by, and at the same time as, the specified refresh token"
  },
  {
    "API": "cognito-idp:SetLogDeliveryConfiguration",
    "EventSource": "cognito-idp",
    "EventName": "SetLogDeliveryConfiguration",
    "Description": "Sets up or modifies the detailed activity logging configuration of a user pool"
  },
  {
    "API": "cognito-idp:SetRiskConfiguration",
    "EventSource": "cognito-idp",
    "EventName": "SetRiskConfiguration",
    "Description": "Configures actions on detected risks"
  },
  {
    "API": "cognito-idp:SetUiCustomization",
    "EventSource": "cognito-idp",
    "EventName": "SetUiCustomization",
    "Description": "Sets the user interface (UI) customization information for a user pool's built-in app UI"
  },
  {
    "API": "cognito-idp:SetUserMfaPreference",
    "EventSource": "cognito-idp",
    "EventName": "SetUserMfaPreference",
    "Description": "Set the user's multi-factor authentication (MFA) method preference, including which MFA factors are activated and if any are preferred"
  },
  {
    "API": "cognito-idp:SetUserPoolMfaConfig",
    "EventSource": "cognito-idp",
    "EventName": "SetUserPoolMfaConfig",
    "Description": "Sets the user pool multi-factor authentication (MFA) configuration"
  },
  {
    "API": "cognito-idp:SetUserSettings",
    "EventSource": "cognito-idp",
    "EventName": "SetUserSettings",
    "Description": "*This action is no longer supported"
  },
  {
    "API": "cognito-idp:SignUp",
    "EventSource": "cognito-idp",
    "EventName": "SignUp",
    "Description": "Registers the user in the specified user pool and creates a user name, password, and user attributes"
  },
  {
    "API": "cognito-idp:StartUserImportJob",
    "EventSource": "cognito-idp",
    "EventName": "StartUserImportJob",
    "Description": "Starts the user import"
  },
  {
    "API": "cognito-idp:StopUserImportJob",
    "EventSource": "cognito-idp",
    "EventName": "StopUserImportJob",
    "Description": "Stops the user import job"
  },
  {
    "API": "cognito-idp:TagResource",
    "EventSource": "cognito-idp",
    "EventName": "TagResource",
    "Description": "Assigns a set of tags to an Amazon Cognito user pool"
  },
  {
    "API": "cognito-idp:UntagResource",
    "EventSource": "cognito-idp",
    "EventName": "UntagResource",
    "Description": "Removes the specified tags from an Amazon Cognito user pool"
  },
  {
    "API": "cognito-idp:UpdateAuthEventFeedback",
    "EventSource": "cognito-idp",
    "EventName": "UpdateAuthEventFeedback",
    "Description": "Provides the feedback for an authentication event, whether it was from a valid user or not"
  },
  {
    "API": "cognito-idp:UpdateDeviceStatus",
    "EventSource": "cognito-idp",
    "EventName": "UpdateDeviceStatus",
    "Description": "Updates the device status"
  },
  {
    "API": "cognito-idp:UpdateGroup",
    "EventSource": "cognito-idp",
    "EventName": "UpdateGroup",
    "Description": "Updates the specified group with the specified attributes"
  },
  {
    "API": "cognito-idp:UpdateIdentityProvider",
    "EventSource": "cognito-idp",
    "EventName": "UpdateIdentityProvider",
    "Description": "Updates IdP information for a user pool"
  },
  {
    "API": "cognito-idp:UpdateResourceServer",
    "EventSource": "cognito-idp",
    "EventName": "UpdateResourceServer",
    "Description": "Updates the name and scopes of resource server"
  },
  {
    "API": "cognito-idp:UpdateUserAttributes",
    "EventSource": "cognito-idp",
    "EventName": "UpdateUserAttributes",
    "Description": "With this operation, your users can update one or more of their attributes with their own credentials"
  },
  {
    "API": "cognito-idp:UpdateUserPool",
    "EventSource": "cognito-idp",
    "EventName": "UpdateUserPool",
    "Description": ""
  },
  {
    "API": "cognito-idp:UpdateUserPoolClient",
    "EventSource": "cognito-idp",
    "EventName": "UpdateUserPoolClient",
    "Description": "Updates the specified user pool app client with the specified attributes"
  },
  {
    "API": "cognito-idp:UpdateUserPoolDomain",
    "EventSource": "cognito-idp",
    "EventName": "UpdateUserPoolDomain",
    "Description": "Updates the Secure Sockets Layer (SSL) certificate for the custom domain for your user pool"
  },
  {
    "API": "cognito-idp:VerifySoftwareToken",
    "EventSource": "cognito-idp",
    "EventName": "VerifySoftwareToken",
    "Description": "Use this API to register a user's entered time-based one-time password (TOTP) code and mark the user's software token MFA status as \"verified\" if successful"
  },
  {
    "API": "cognito-idp:VerifyUserAttribute",
    "EventSource": "cognito-idp",
    "EventName": "VerifyUserAttribute",
    "Description": "Verifies the specified user attributes in the user pool"
  },
  {
    "API": "cognito-sync:BulkPublish",
    "EventSource": "cognito-sync",
    "EventName": "BulkPublish",
    "Description": "Initiates a bulk publish of all existing datasets for an Identity Pool to the configured stream"
  },
  {
    "API": "cognito-sync:DeleteDataset",
    "EventSource": "cognito-sync",
    "EventName": "DeleteDataset",
    "Description": "Deletes the specific dataset"
  },
  {
    "API": "cognito-sync:DescribeDataset",
    "EventSource": "cognito-sync",
    "EventName": "DescribeDataset",
    "Description": "Gets meta data about a dataset by identity and dataset name"
  },
  {
    "API": "cognito-sync:DescribeIdentityPoolUsage",
    "EventSource": "cognito-sync",
    "EventName": "DescribeIdentityPoolUsage",
    "Description": "Gets usage details (for example, data storage) about a particular identity pool"
  },
  {
    "API": "cognito-sync:DescribeIdentityUsage",
    "EventSource": "cognito-sync",
    "EventName": "DescribeIdentityUsage",
    "Description": "Gets usage information for an identity, including number of datasets and data usage"
  },
  {
    "API": "cognito-sync:GeneratePresignedUrl",
    "EventSource": "cognito-sync",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "cognito-sync:GetBulkPublishDetails",
    "EventSource": "cognito-sync",
    "EventName": "GetBulkPublishDetails",
    "Description": "Get the status of the last BulkPublish operation for an identity pool"
  },
  {
    "API": "cognito-sync:GetCognitoEvents",
    "EventSource": "cognito-sync",
    "EventName": "GetCognitoEvents",
    "Description": "Gets the events and the corresponding Lambda functions associated with an identity pool"
  },
  {
    "API": "cognito-sync:GetIdentityPoolConfiguration",
    "EventSource": "cognito-sync",
    "EventName": "GetIdentityPoolConfiguration",
    "Description": "Gets the configuration settings of an identity pool"
  },
  {
    "API": "cognito-sync:ListDatasets",
    "EventSource": "cognito-sync",
    "EventName": "ListDatasets",
    "Description": "Lists datasets for an identity"
  },
  {
    "API": "cognito-sync:ListIdentityPoolUsage",
    "EventSource": "cognito-sync",
    "EventName": "ListIdentityPoolUsage",
    "Description": "Gets a list of identity pools registered with Cognito"
  },
  {
    "API": "cognito-sync:ListRecords",
    "EventSource": "cognito-sync",
    "EventName": "ListRecords",
    "Description": "Gets paginated records, optionally changed after a particular sync count for a dataset and identity"
  },
  {
    "API": "cognito-sync:RegisterDevice",
    "EventSource": "cognito-sync",
    "EventName": "RegisterDevice",
    "Description": "Registers a device to receive push sync notifications"
  },
  {
    "API": "cognito-sync:SetCognitoEvents",
    "EventSource": "cognito-sync",
    "EventName": "SetCognitoEvents",
    "Description": "Sets the AWS Lambda function for a given event type for an identity pool"
  },
  {
    "API": "cognito-sync:SetIdentityPoolConfiguration",
    "EventSource": "cognito-sync",
    "EventName": "SetIdentityPoolConfiguration",
    "Description": "Sets the necessary configuration for push sync"
  },
  {
    "API": "cognito-sync:SubscribeToDataset",
    "EventSource": "cognito-sync",
    "EventName": "SubscribeToDataset",
    "Description": "Subscribes to receive notifications when a dataset is modified by another device"
  },
  {
    "API": "cognito-sync:UnsubscribeFromDataset",
    "EventSource": "cognito-sync",
    "EventName": "UnsubscribeFromDataset",
    "Description": "Unsubscribes from receiving notifications when a dataset is modified by another device"
  },
  {
    "API": "cognito-sync:UpdateRecords",
    "EventSource": "cognito-sync",
    "EventName": "UpdateRecords",
    "Description": "Posts updates to records and adds and deletes records for a dataset and user"
  },
  {
    "API": "comprehend:BatchDetectDominantLanguage",
    "EventSource": "comprehend",
    "EventName": "BatchDetectDominantLanguage",
    "Description": "Determines the dominant language of the input text for a batch of documents"
  },
  {
    "API": "comprehend:BatchDetectEntities",
    "EventSource": "comprehend",
    "EventName": "BatchDetectEntities",
    "Description": "Inspects the text of a batch of documents for named entities and returns information about them"
  },
  {
    "API": "comprehend:BatchDetectKeyPhrases",
    "EventSource": "comprehend",
    "EventName": "BatchDetectKeyPhrases",
    "Description": "Detects the key noun phrases found in a batch of documents"
  },
  {
    "API": "comprehend:BatchDetectSentiment",
    "EventSource": "comprehend",
    "EventName": "BatchDetectSentiment",
    "Description": "Inspects a batch of documents and returns an inference of the prevailing sentiment, ``POSITIVE``, ``NEUTRAL``, ``MIXED``, or ``NEGATIVE``, in each one"
  },
  {
    "API": "comprehend:BatchDetectSyntax",
    "EventSource": "comprehend",
    "EventName": "BatchDetectSyntax",
    "Description": "Inspects the text of a batch of documents for the syntax and part of speech of the words in the document and returns information about them"
  },
  {
    "API": "comprehend:BatchDetectTargetedSentiment",
    "EventSource": "comprehend",
    "EventName": "BatchDetectTargetedSentiment",
    "Description": "Inspects a batch of documents and returns a sentiment analysis for each entity identified in the documents"
  },
  {
    "API": "comprehend:ClassifyDocument",
    "EventSource": "comprehend",
    "EventName": "ClassifyDocument",
    "Description": "Creates a classification request to analyze a single document in real-time"
  },
  {
    "API": "comprehend:ContainsPiiEntities",
    "EventSource": "comprehend",
    "EventName": "ContainsPiiEntities",
    "Description": "Analyzes input text for the presence of personally identifiable information (PII) and returns the labels of identified PII entity types such as name, address, bank account number, or phone number"
  },
  {
    "API": "comprehend:CreateDataset",
    "EventSource": "comprehend",
    "EventName": "CreateDataset",
    "Description": "Creates a dataset to upload training or test data for a model associated with a flywheel"
  },
  {
    "API": "comprehend:CreateDocumentClassifier",
    "EventSource": "comprehend",
    "EventName": "CreateDocumentClassifier",
    "Description": "Creates a new document classifier that you can use to categorize documents"
  },
  {
    "API": "comprehend:CreateEndpoint",
    "EventSource": "comprehend",
    "EventName": "CreateEndpoint",
    "Description": "Creates a model-specific endpoint for synchronous inference for a previously trained custom model For information about endpoints, see `Managing endpoints <https://docs"
  },
  {
    "API": "comprehend:CreateEntityRecognizer",
    "EventSource": "comprehend",
    "EventName": "CreateEntityRecognizer",
    "Description": "Creates an entity recognizer using submitted files"
  },
  {
    "API": "comprehend:CreateFlywheel",
    "EventSource": "comprehend",
    "EventName": "CreateFlywheel",
    "Description": "A flywheel is an Amazon Web Services resource that orchestrates the ongoing training of a model for custom classification or custom entity recognition"
  },
  {
    "API": "comprehend:DeleteDocumentClassifier",
    "EventSource": "comprehend",
    "EventName": "DeleteDocumentClassifier",
    "Description": "Deletes a previously created document classifier"
  },
  {
    "API": "comprehend:DeleteEndpoint",
    "EventSource": "comprehend",
    "EventName": "DeleteEndpoint",
    "Description": "Deletes a model-specific endpoint for a previously-trained custom model"
  },
  {
    "API": "comprehend:DeleteEntityRecognizer",
    "EventSource": "comprehend",
    "EventName": "DeleteEntityRecognizer",
    "Description": "Deletes an entity recognizer"
  },
  {
    "API": "comprehend:DeleteFlywheel",
    "EventSource": "comprehend",
    "EventName": "DeleteFlywheel",
    "Description": "Deletes a flywheel"
  },
  {
    "API": "comprehend:DeleteResourcePolicy",
    "EventSource": "comprehend",
    "EventName": "DeleteResourcePolicy",
    "Description": "Deletes a resource-based policy that is attached to a custom model"
  },
  {
    "API": "comprehend:DescribeDataset",
    "EventSource": "comprehend",
    "EventName": "DescribeDataset",
    "Description": "Returns information about the dataset that you specify"
  },
  {
    "API": "comprehend:DescribeDocumentClassificationJob",
    "EventSource": "comprehend",
    "EventName": "DescribeDocumentClassificationJob",
    "Description": "Gets the properties associated with a document classification job"
  },
  {
    "API": "comprehend:DescribeDocumentClassifier",
    "EventSource": "comprehend",
    "EventName": "DescribeDocumentClassifier",
    "Description": "Gets the properties associated with a document classifier"
  },
  {
    "API": "comprehend:DescribeDominantLanguageDetectionJob",
    "EventSource": "comprehend",
    "EventName": "DescribeDominantLanguageDetectionJob",
    "Description": "Gets the properties associated with a dominant language detection job"
  },
  {
    "API": "comprehend:DescribeEndpoint",
    "EventSource": "comprehend",
    "EventName": "DescribeEndpoint",
    "Description": "Gets the properties associated with a specific endpoint"
  },
  {
    "API": "comprehend:DescribeEntitiesDetectionJob",
    "EventSource": "comprehend",
    "EventName": "DescribeEntitiesDetectionJob",
    "Description": "Gets the properties associated with an entities detection job"
  },
  {
    "API": "comprehend:DescribeEntityRecognizer",
    "EventSource": "comprehend",
    "EventName": "DescribeEntityRecognizer",
    "Description": "Provides details about an entity recognizer including status, S3 buckets containing training data, recognizer metadata, metrics, and so on"
  },
  {
    "API": "comprehend:DescribeEventsDetectionJob",
    "EventSource": "comprehend",
    "EventName": "DescribeEventsDetectionJob",
    "Description": "Gets the status and details of an events detection job"
  },
  {
    "API": "comprehend:DescribeFlywheel",
    "EventSource": "comprehend",
    "EventName": "DescribeFlywheel",
    "Description": "Provides configuration information about the flywheel"
  },
  {
    "API": "comprehend:DescribeFlywheelIteration",
    "EventSource": "comprehend",
    "EventName": "DescribeFlywheelIteration",
    "Description": "Retrieve the configuration properties of a flywheel iteration"
  },
  {
    "API": "comprehend:DescribeKeyPhrasesDetectionJob",
    "EventSource": "comprehend",
    "EventName": "DescribeKeyPhrasesDetectionJob",
    "Description": "Gets the properties associated with a key phrases detection job"
  },
  {
    "API": "comprehend:DescribePiiEntitiesDetectionJob",
    "EventSource": "comprehend",
    "EventName": "DescribePiiEntitiesDetectionJob",
    "Description": "Gets the properties associated with a PII entities detection job"
  },
  {
    "API": "comprehend:DescribeResourcePolicy",
    "EventSource": "comprehend",
    "EventName": "DescribeResourcePolicy",
    "Description": "Gets the details of a resource-based policy that is attached to a custom model, including the JSON body of the policy"
  },
  {
    "API": "comprehend:DescribeSentimentDetectionJob",
    "EventSource": "comprehend",
    "EventName": "DescribeSentimentDetectionJob",
    "Description": "Gets the properties associated with a sentiment detection job"
  },
  {
    "API": "comprehend:DescribeTargetedSentimentDetectionJob",
    "EventSource": "comprehend",
    "EventName": "DescribeTargetedSentimentDetectionJob",
    "Description": "Gets the properties associated with a targeted sentiment detection job"
  },
  {
    "API": "comprehend:DescribeTopicsDetectionJob",
    "EventSource": "comprehend",
    "EventName": "DescribeTopicsDetectionJob",
    "Description": "Gets the properties associated with a topic detection job"
  },
  {
    "API": "comprehend:DetectDominantLanguage",
    "EventSource": "comprehend",
    "EventName": "DetectDominantLanguage",
    "Description": "Determines the dominant language of the input text"
  },
  {
    "API": "comprehend:DetectEntities",
    "EventSource": "comprehend",
    "EventName": "DetectEntities",
    "Description": "Detects named entities in input text when you use the pre-trained model"
  },
  {
    "API": "comprehend:DetectKeyPhrases",
    "EventSource": "comprehend",
    "EventName": "DetectKeyPhrases",
    "Description": "Detects the key noun phrases found in the text"
  },
  {
    "API": "comprehend:DetectPiiEntities",
    "EventSource": "comprehend",
    "EventName": "DetectPiiEntities",
    "Description": "Inspects the input text for entities that contain personally identifiable information (PII) and returns information about them"
  },
  {
    "API": "comprehend:DetectSentiment",
    "EventSource": "comprehend",
    "EventName": "DetectSentiment",
    "Description": "Inspects text and returns an inference of the prevailing sentiment ( ``POSITIVE``, ``NEUTRAL``, ``MIXED``, or ``NEGATIVE``)"
  },
  {
    "API": "comprehend:DetectSyntax",
    "EventSource": "comprehend",
    "EventName": "DetectSyntax",
    "Description": "Inspects text for syntax and the part of speech of words in the document"
  },
  {
    "API": "comprehend:DetectTargetedSentiment",
    "EventSource": "comprehend",
    "EventName": "DetectTargetedSentiment",
    "Description": "Inspects the input text and returns a sentiment analysis for each entity identified in the text"
  },
  {
    "API": "comprehend:DetectToxicContent",
    "EventSource": "comprehend",
    "EventName": "DetectToxicContent",
    "Description": "Performs toxicity analysis on the list of text strings that you provide as input"
  },
  {
    "API": "comprehend:GeneratePresignedUrl",
    "EventSource": "comprehend",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "comprehend:ImportModel",
    "EventSource": "comprehend",
    "EventName": "ImportModel",
    "Description": "Creates a new custom model that replicates a source custom model that you import"
  },
  {
    "API": "comprehend:ListDatasets",
    "EventSource": "comprehend",
    "EventName": "ListDatasets",
    "Description": "List the datasets that you have configured in this Region"
  },
  {
    "API": "comprehend:ListDocumentClassificationJobs",
    "EventSource": "comprehend",
    "EventName": "ListDocumentClassificationJobs",
    "Description": "Gets a list of the documentation classification jobs that you have submitted"
  },
  {
    "API": "comprehend:ListDocumentClassifierSummaries",
    "EventSource": "comprehend",
    "EventName": "ListDocumentClassifierSummaries",
    "Description": "Gets a list of summaries of the document classifiers that you have created"
  },
  {
    "API": "comprehend:ListDocumentClassifiers",
    "EventSource": "comprehend",
    "EventName": "ListDocumentClassifiers",
    "Description": "Gets a list of the document classifiers that you have created"
  },
  {
    "API": "comprehend:ListDominantLanguageDetectionJobs",
    "EventSource": "comprehend",
    "EventName": "ListDominantLanguageDetectionJobs",
    "Description": "Gets a list of the dominant language detection jobs that you have submitted"
  },
  {
    "API": "comprehend:ListEndpoints",
    "EventSource": "comprehend",
    "EventName": "ListEndpoints",
    "Description": "Gets a list of all existing endpoints that you've created"
  },
  {
    "API": "comprehend:ListEntitiesDetectionJobs",
    "EventSource": "comprehend",
    "EventName": "ListEntitiesDetectionJobs",
    "Description": "Gets a list of the entity detection jobs that you have submitted"
  },
  {
    "API": "comprehend:ListEntityRecognizerSummaries",
    "EventSource": "comprehend",
    "EventName": "ListEntityRecognizerSummaries",
    "Description": "Gets a list of summaries for the entity recognizers that you have created"
  },
  {
    "API": "comprehend:ListEntityRecognizers",
    "EventSource": "comprehend",
    "EventName": "ListEntityRecognizers",
    "Description": "Gets a list of the properties of all entity recognizers that you created, including recognizers currently in training"
  },
  {
    "API": "comprehend:ListEventsDetectionJobs",
    "EventSource": "comprehend",
    "EventName": "ListEventsDetectionJobs",
    "Description": "Gets a list of the events detection jobs that you have submitted"
  },
  {
    "API": "comprehend:ListFlywheelIterationHistory",
    "EventSource": "comprehend",
    "EventName": "ListFlywheelIterationHistory",
    "Description": "Information about the history of a flywheel iteration"
  },
  {
    "API": "comprehend:ListFlywheels",
    "EventSource": "comprehend",
    "EventName": "ListFlywheels",
    "Description": "Gets a list of the flywheels that you have created"
  },
  {
    "API": "comprehend:ListKeyPhrasesDetectionJobs",
    "EventSource": "comprehend",
    "EventName": "ListKeyPhrasesDetectionJobs",
    "Description": "Get a list of key phrase detection jobs that you have submitted"
  },
  {
    "API": "comprehend:ListPiiEntitiesDetectionJobs",
    "EventSource": "comprehend",
    "EventName": "ListPiiEntitiesDetectionJobs",
    "Description": "Gets a list of the PII entity detection jobs that you have submitted"
  },
  {
    "API": "comprehend:ListSentimentDetectionJobs",
    "EventSource": "comprehend",
    "EventName": "ListSentimentDetectionJobs",
    "Description": "Gets a list of sentiment detection jobs that you have submitted"
  },
  {
    "API": "comprehend:ListTagsForResource",
    "EventSource": "comprehend",
    "EventName": "ListTagsForResource",
    "Description": "Lists all tags associated with a given Amazon Comprehend resource"
  },
  {
    "API": "comprehend:ListTargetedSentimentDetectionJobs",
    "EventSource": "comprehend",
    "EventName": "ListTargetedSentimentDetectionJobs",
    "Description": "Gets a list of targeted sentiment detection jobs that you have submitted"
  },
  {
    "API": "comprehend:ListTopicsDetectionJobs",
    "EventSource": "comprehend",
    "EventName": "ListTopicsDetectionJobs",
    "Description": "Gets a list of the topic detection jobs that you have submitted"
  },
  {
    "API": "comprehend:PutResourcePolicy",
    "EventSource": "comprehend",
    "EventName": "PutResourcePolicy",
    "Description": "Attaches a resource-based policy to a custom model"
  },
  {
    "API": "comprehend:StartDocumentClassificationJob",
    "EventSource": "comprehend",
    "EventName": "StartDocumentClassificationJob",
    "Description": "Starts an asynchronous document classification job using a custom classification model"
  },
  {
    "API": "comprehend:StartDominantLanguageDetectionJob",
    "EventSource": "comprehend",
    "EventName": "StartDominantLanguageDetectionJob",
    "Description": "Starts an asynchronous dominant language detection job for a collection of documents"
  },
  {
    "API": "comprehend:StartEntitiesDetectionJob",
    "EventSource": "comprehend",
    "EventName": "StartEntitiesDetectionJob",
    "Description": "Starts an asynchronous entity detection job for a collection of documents"
  },
  {
    "API": "comprehend:StartEventsDetectionJob",
    "EventSource": "comprehend",
    "EventName": "StartEventsDetectionJob",
    "Description": "Starts an asynchronous event detection job for a collection of documents"
  },
  {
    "API": "comprehend:StartFlywheelIteration",
    "EventSource": "comprehend",
    "EventName": "StartFlywheelIteration",
    "Description": "Start the flywheel iteration"
  },
  {
    "API": "comprehend:StartKeyPhrasesDetectionJob",
    "EventSource": "comprehend",
    "EventName": "StartKeyPhrasesDetectionJob",
    "Description": "Starts an asynchronous key phrase detection job for a collection of documents"
  },
  {
    "API": "comprehend:StartPiiEntitiesDetectionJob",
    "EventSource": "comprehend",
    "EventName": "StartPiiEntitiesDetectionJob",
    "Description": "Starts an asynchronous PII entity detection job for a collection of documents"
  },
  {
    "API": "comprehend:StartSentimentDetectionJob",
    "EventSource": "comprehend",
    "EventName": "StartSentimentDetectionJob",
    "Description": "Starts an asynchronous sentiment detection job for a collection of documents"
  },
  {
    "API": "comprehend:StartTargetedSentimentDetectionJob",
    "EventSource": "comprehend",
    "EventName": "StartTargetedSentimentDetectionJob",
    "Description": "Starts an asynchronous targeted sentiment detection job for a collection of documents"
  },
  {
    "API": "comprehend:StartTopicsDetectionJob",
    "EventSource": "comprehend",
    "EventName": "StartTopicsDetectionJob",
    "Description": "Starts an asynchronous topic detection job"
  },
  {
    "API": "comprehend:StopDominantLanguageDetectionJob",
    "EventSource": "comprehend",
    "EventName": "StopDominantLanguageDetectionJob",
    "Description": "Stops a dominant language detection job in progress"
  },
  {
    "API": "comprehend:StopEntitiesDetectionJob",
    "EventSource": "comprehend",
    "EventName": "StopEntitiesDetectionJob",
    "Description": "Stops an entities detection job in progress"
  },
  {
    "API": "comprehend:StopEventsDetectionJob",
    "EventSource": "comprehend",
    "EventName": "StopEventsDetectionJob",
    "Description": "Stops an events detection job in progress"
  },
  {
    "API": "comprehend:StopKeyPhrasesDetectionJob",
    "EventSource": "comprehend",
    "EventName": "StopKeyPhrasesDetectionJob",
    "Description": "Stops a key phrases detection job in progress"
  },
  {
    "API": "comprehend:StopPiiEntitiesDetectionJob",
    "EventSource": "comprehend",
    "EventName": "StopPiiEntitiesDetectionJob",
    "Description": "Stops a PII entities detection job in progress"
  },
  {
    "API": "comprehend:StopSentimentDetectionJob",
    "EventSource": "comprehend",
    "EventName": "StopSentimentDetectionJob",
    "Description": "Stops a sentiment detection job in progress"
  },
  {
    "API": "comprehend:StopTargetedSentimentDetectionJob",
    "EventSource": "comprehend",
    "EventName": "StopTargetedSentimentDetectionJob",
    "Description": "Stops a targeted sentiment detection job in progress"
  },
  {
    "API": "comprehend:StopTrainingDocumentClassifier",
    "EventSource": "comprehend",
    "EventName": "StopTrainingDocumentClassifier",
    "Description": "Stops a document classifier training job while in progress"
  },
  {
    "API": "comprehend:StopTrainingEntityRecognizer",
    "EventSource": "comprehend",
    "EventName": "StopTrainingEntityRecognizer",
    "Description": "Stops an entity recognizer training job while in progress"
  },
  {
    "API": "comprehend:TagResource",
    "EventSource": "comprehend",
    "EventName": "TagResource",
    "Description": "Associates a specific tag with an Amazon Comprehend resource"
  },
  {
    "API": "comprehend:UntagResource",
    "EventSource": "comprehend",
    "EventName": "UntagResource",
    "Description": "Removes a specific tag associated with an Amazon Comprehend resource"
  },
  {
    "API": "comprehend:UpdateEndpoint",
    "EventSource": "comprehend",
    "EventName": "UpdateEndpoint",
    "Description": "Updates information about the specified endpoint"
  },
  {
    "API": "comprehend:UpdateFlywheel",
    "EventSource": "comprehend",
    "EventName": "UpdateFlywheel",
    "Description": "Update the configuration information for an existing flywheel"
  },
  {
    "API": "comprehendmedical:DescribeEntitiesDetectionV2Job",
    "EventSource": "comprehendmedical",
    "EventName": "DescribeEntitiesDetectionV2Job",
    "Description": "Gets the properties associated with a medical entities detection job"
  },
  {
    "API": "comprehendmedical:DescribeIcd10CmInferenceJob",
    "EventSource": "comprehendmedical",
    "EventName": "DescribeIcd10CmInferenceJob",
    "Description": "Gets the properties associated with an InferICD10CM job"
  },
  {
    "API": "comprehendmedical:DescribePhiDetectionJob",
    "EventSource": "comprehendmedical",
    "EventName": "DescribePhiDetectionJob",
    "Description": "Gets the properties associated with a protected health information (PHI) detection job"
  },
  {
    "API": "comprehendmedical:DescribeRxNormInferenceJob",
    "EventSource": "comprehendmedical",
    "EventName": "DescribeRxNormInferenceJob",
    "Description": "Gets the properties associated with an InferRxNorm job"
  },
  {
    "API": "comprehendmedical:DescribeSnomedctInferenceJob",
    "EventSource": "comprehendmedical",
    "EventName": "DescribeSnomedctInferenceJob",
    "Description": "Gets the properties associated with an InferSNOMEDCT job"
  },
  {
    "API": "comprehendmedical:DetectEntities",
    "EventSource": "comprehendmedical",
    "EventName": "DetectEntities",
    "Description": "The ``DetectEntities`` operation is deprecated"
  },
  {
    "API": "comprehendmedical:DetectEntitiesV2",
    "EventSource": "comprehendmedical",
    "EventName": "DetectEntitiesV2",
    "Description": "Inspects the clinical text for a variety of medical entities and returns specific information about them such as entity category, location, and confidence score on that information"
  },
  {
    "API": "comprehendmedical:DetectPhi",
    "EventSource": "comprehendmedical",
    "EventName": "DetectPhi",
    "Description": "Inspects the clinical text for protected health information (PHI) entities and returns the entity category, location, and confidence score for each entity"
  },
  {
    "API": "comprehendmedical:GeneratePresignedUrl",
    "EventSource": "comprehendmedical",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "comprehendmedical:InferIcd10Cm",
    "EventSource": "comprehendmedical",
    "EventName": "InferIcd10Cm",
    "Description": "InferICD10CM detects medical conditions as entities listed in a patient record and links those entities to normalized concept identifiers in the ICD-10-CM knowledge base from the Centers for Disease Control"
  },
  {
    "API": "comprehendmedical:InferRxNorm",
    "EventSource": "comprehendmedical",
    "EventName": "InferRxNorm",
    "Description": "InferRxNorm detects medications as entities listed in a patient record and links to the normalized concept identifiers in the RxNorm database from the National Library of Medicine"
  },
  {
    "API": "comprehendmedical:InferSnomedct",
    "EventSource": "comprehendmedical",
    "EventName": "InferSnomedct",
    "Description": "InferSNOMEDCT detects possible medical concepts as entities and links them to codes from the Systematized Nomenclature of Medicine, Clinical Terms (SNOMED-CT) ontology"
  },
  {
    "API": "comprehendmedical:ListEntitiesDetectionV2Jobs",
    "EventSource": "comprehendmedical",
    "EventName": "ListEntitiesDetectionV2Jobs",
    "Description": "Gets a list of medical entity detection jobs that you have submitted"
  },
  {
    "API": "comprehendmedical:ListIcd10CmInferenceJobs",
    "EventSource": "comprehendmedical",
    "EventName": "ListIcd10CmInferenceJobs",
    "Description": "Gets a list of InferICD10CM jobs that you have submitted"
  },
  {
    "API": "comprehendmedical:ListPhiDetectionJobs",
    "EventSource": "comprehendmedical",
    "EventName": "ListPhiDetectionJobs",
    "Description": "Gets a list of protected health information (PHI) detection jobs you have submitted"
  },
  {
    "API": "comprehendmedical:ListRxNormInferenceJobs",
    "EventSource": "comprehendmedical",
    "EventName": "ListRxNormInferenceJobs",
    "Description": "Gets a list of InferRxNorm jobs that you have submitted"
  },
  {
    "API": "comprehendmedical:ListSnomedctInferenceJobs",
    "EventSource": "comprehendmedical",
    "EventName": "ListSnomedctInferenceJobs",
    "Description": "Gets a list of InferSNOMEDCT jobs a user has submitted"
  },
  {
    "API": "comprehendmedical:StartEntitiesDetectionV2Job",
    "EventSource": "comprehendmedical",
    "EventName": "StartEntitiesDetectionV2Job",
    "Description": "Starts an asynchronous medical entity detection job for a collection of documents"
  },
  {
    "API": "comprehendmedical:StartIcd10CmInferenceJob",
    "EventSource": "comprehendmedical",
    "EventName": "StartIcd10CmInferenceJob",
    "Description": "Starts an asynchronous job to detect medical conditions and link them to the ICD-10-CM ontology"
  },
  {
    "API": "comprehendmedical:StartPhiDetectionJob",
    "EventSource": "comprehendmedical",
    "EventName": "StartPhiDetectionJob",
    "Description": "Starts an asynchronous job to detect protected health information (PHI)"
  },
  {
    "API": "comprehendmedical:StartRxNormInferenceJob",
    "EventSource": "comprehendmedical",
    "EventName": "StartRxNormInferenceJob",
    "Description": "Starts an asynchronous job to detect medication entities and link them to the RxNorm ontology"
  },
  {
    "API": "comprehendmedical:StartSnomedctInferenceJob",
    "EventSource": "comprehendmedical",
    "EventName": "StartSnomedctInferenceJob",
    "Description": "Starts an asynchronous job to detect medical concepts and link them to the SNOMED-CT ontology"
  },
  {
    "API": "comprehendmedical:StopEntitiesDetectionV2Job",
    "EventSource": "comprehendmedical",
    "EventName": "StopEntitiesDetectionV2Job",
    "Description": "Stops a medical entities detection job in progress"
  },
  {
    "API": "comprehendmedical:StopIcd10CmInferenceJob",
    "EventSource": "comprehendmedical",
    "EventName": "StopIcd10CmInferenceJob",
    "Description": "Stops an InferICD10CM inference job in progress"
  },
  {
    "API": "comprehendmedical:StopPhiDetectionJob",
    "EventSource": "comprehendmedical",
    "EventName": "StopPhiDetectionJob",
    "Description": "Stops a protected health information (PHI) detection job in progress"
  },
  {
    "API": "comprehendmedical:StopRxNormInferenceJob",
    "EventSource": "comprehendmedical",
    "EventName": "StopRxNormInferenceJob",
    "Description": "Stops an InferRxNorm inference job in progress"
  },
  {
    "API": "comprehendmedical:StopSnomedctInferenceJob",
    "EventSource": "comprehendmedical",
    "EventName": "StopSnomedctInferenceJob",
    "Description": "Stops an InferSNOMEDCT inference job in progress"
  },
  {
    "API": "compute-optimizer:DeleteRecommendationPreferences",
    "EventSource": "compute-optimizer",
    "EventName": "DeleteRecommendationPreferences",
    "Description": "Deletes a recommendation preference, such as enhanced infrastructure metrics"
  },
  {
    "API": "compute-optimizer:DescribeRecommendationExportJobs",
    "EventSource": "compute-optimizer",
    "EventName": "DescribeRecommendationExportJobs",
    "Description": "Describes recommendation export jobs created in the last seven days"
  },
  {
    "API": "compute-optimizer:ExportAutoScalingGroupRecommendations",
    "EventSource": "compute-optimizer",
    "EventName": "ExportAutoScalingGroupRecommendations",
    "Description": "Exports optimization recommendations for Auto Scaling groups"
  },
  {
    "API": "compute-optimizer:ExportEbsVolumeRecommendations",
    "EventSource": "compute-optimizer",
    "EventName": "ExportEbsVolumeRecommendations",
    "Description": "Exports optimization recommendations for Amazon EBS volumes"
  },
  {
    "API": "compute-optimizer:ExportEc2InstanceRecommendations",
    "EventSource": "compute-optimizer",
    "EventName": "ExportEc2InstanceRecommendations",
    "Description": "Exports optimization recommendations for Amazon EC2 instances"
  },
  {
    "API": "compute-optimizer:ExportEcsServiceRecommendations",
    "EventSource": "compute-optimizer",
    "EventName": "ExportEcsServiceRecommendations",
    "Description": "Exports optimization recommendations for Amazon ECS services on Fargate"
  },
  {
    "API": "compute-optimizer:ExportLambdaFunctionRecommendations",
    "EventSource": "compute-optimizer",
    "EventName": "ExportLambdaFunctionRecommendations",
    "Description": "Exports optimization recommendations for Lambda functions"
  },
  {
    "API": "compute-optimizer:ExportLicenseRecommendations",
    "EventSource": "compute-optimizer",
    "EventName": "ExportLicenseRecommendations",
    "Description": "Export optimization recommendations for your licenses"
  },
  {
    "API": "compute-optimizer:GeneratePresignedUrl",
    "EventSource": "compute-optimizer",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "compute-optimizer:GetAutoScalingGroupRecommendations",
    "EventSource": "compute-optimizer",
    "EventName": "GetAutoScalingGroupRecommendations",
    "Description": "Returns Auto Scaling group recommendations"
  },
  {
    "API": "compute-optimizer:GetEbsVolumeRecommendations",
    "EventSource": "compute-optimizer",
    "EventName": "GetEbsVolumeRecommendations",
    "Description": "Returns Amazon Elastic Block Store (Amazon EBS) volume recommendations"
  },
  {
    "API": "compute-optimizer:GetEc2InstanceRecommendations",
    "EventSource": "compute-optimizer",
    "EventName": "GetEc2InstanceRecommendations",
    "Description": "Returns Amazon EC2 instance recommendations"
  },
  {
    "API": "compute-optimizer:GetEc2RecommendationProjectedMetrics",
    "EventSource": "compute-optimizer",
    "EventName": "GetEc2RecommendationProjectedMetrics",
    "Description": "Returns the projected utilization metrics of Amazon EC2 instance recommendations"
  },
  {
    "API": "compute-optimizer:GetEcsServiceRecommendationProjectedMetrics",
    "EventSource": "compute-optimizer",
    "EventName": "GetEcsServiceRecommendationProjectedMetrics",
    "Description": "Returns the projected metrics of Amazon ECS service recommendations"
  },
  {
    "API": "compute-optimizer:GetEcsServiceRecommendations",
    "EventSource": "compute-optimizer",
    "EventName": "GetEcsServiceRecommendations",
    "Description": "Returns Amazon ECS service recommendations"
  },
  {
    "API": "compute-optimizer:GetEffectiveRecommendationPreferences",
    "EventSource": "compute-optimizer",
    "EventName": "GetEffectiveRecommendationPreferences",
    "Description": "Returns the recommendation preferences that are in effect for a given resource, such as enhanced infrastructure metrics"
  },
  {
    "API": "compute-optimizer:GetEnrollmentStatus",
    "EventSource": "compute-optimizer",
    "EventName": "GetEnrollmentStatus",
    "Description": "Returns the enrollment (opt in) status of an account to the Compute Optimizer service"
  },
  {
    "API": "compute-optimizer:GetEnrollmentStatusesForOrganization",
    "EventSource": "compute-optimizer",
    "EventName": "GetEnrollmentStatusesForOrganization",
    "Description": "Returns the Compute Optimizer enrollment (opt-in) status of organization member accounts, if your account is an organization management account"
  },
  {
    "API": "compute-optimizer:GetLambdaFunctionRecommendations",
    "EventSource": "compute-optimizer",
    "EventName": "GetLambdaFunctionRecommendations",
    "Description": "Returns Lambda function recommendations"
  },
  {
    "API": "compute-optimizer:GetLicenseRecommendations",
    "EventSource": "compute-optimizer",
    "EventName": "GetLicenseRecommendations",
    "Description": "Returns license recommendations for Amazon EC2 instances that run on a specific license"
  },
  {
    "API": "compute-optimizer:GetRecommendationPreferences",
    "EventSource": "compute-optimizer",
    "EventName": "GetRecommendationPreferences",
    "Description": "Returns existing recommendation preferences, such as enhanced infrastructure metrics"
  },
  {
    "API": "compute-optimizer:GetRecommendationSummaries",
    "EventSource": "compute-optimizer",
    "EventName": "GetRecommendationSummaries",
    "Description": "Returns the optimization findings for an account"
  },
  {
    "API": "compute-optimizer:PutRecommendationPreferences",
    "EventSource": "compute-optimizer",
    "EventName": "PutRecommendationPreferences",
    "Description": "Creates a new recommendation preference or updates an existing recommendation preference, such as enhanced infrastructure metrics"
  },
  {
    "API": "compute-optimizer:UpdateEnrollmentStatus",
    "EventSource": "compute-optimizer",
    "EventName": "UpdateEnrollmentStatus",
    "Description": "Updates the enrollment (opt in and opt out) status of an account to the Compute Optimizer service"
  },
  {
    "API": "config:BatchGetAggregateResourceConfig",
    "EventSource": "config",
    "EventName": "BatchGetAggregateResourceConfig",
    "Description": "Returns the current configuration items for resources that are present in your Config aggregator"
  },
  {
    "API": "config:BatchGetResourceConfig",
    "EventSource": "config",
    "EventName": "BatchGetResourceConfig",
    "Description": "Returns the ``BaseConfigurationItem`` for one or more requested resources"
  },
  {
    "API": "config:DeleteAggregationAuthorization",
    "EventSource": "config",
    "EventName": "DeleteAggregationAuthorization",
    "Description": "Deletes the authorization granted to the specified configuration aggregator account in a specified region"
  },
  {
    "API": "config:DeleteConfigRule",
    "EventSource": "config",
    "EventName": "DeleteConfigRule",
    "Description": "Deletes the specified Config rule and all of its evaluation results"
  },
  {
    "API": "config:DeleteConfigurationAggregator",
    "EventSource": "config",
    "EventName": "DeleteConfigurationAggregator",
    "Description": "Deletes the specified configuration aggregator and the aggregated data associated with the aggregator"
  },
  {
    "API": "config:DeleteConfigurationRecorder",
    "EventSource": "config",
    "EventName": "DeleteConfigurationRecorder",
    "Description": "Deletes the configuration recorder"
  },
  {
    "API": "config:DeleteConformancePack",
    "EventSource": "config",
    "EventName": "DeleteConformancePack",
    "Description": "Deletes the specified conformance pack and all the Config rules, remediation actions, and all evaluation results within that conformance pack"
  },
  {
    "API": "config:DeleteDeliveryChannel",
    "EventSource": "config",
    "EventName": "DeleteDeliveryChannel",
    "Description": "Deletes the delivery channel"
  },
  {
    "API": "config:DeleteEvaluationResults",
    "EventSource": "config",
    "EventName": "DeleteEvaluationResults",
    "Description": "Deletes the evaluation results for the specified Config rule"
  },
  {
    "API": "config:DeleteOrganizationConfigRule",
    "EventSource": "config",
    "EventName": "DeleteOrganizationConfigRule",
    "Description": "Deletes the specified organization Config rule and all of its evaluation results from all member accounts in that organization"
  },
  {
    "API": "config:DeleteOrganizationConformancePack",
    "EventSource": "config",
    "EventName": "DeleteOrganizationConformancePack",
    "Description": "Deletes the specified organization conformance pack and all of the Config rules and remediation actions from all member accounts in that organization"
  },
  {
    "API": "config:DeletePendingAggregationRequest",
    "EventSource": "config",
    "EventName": "DeletePendingAggregationRequest",
    "Description": "Deletes pending authorization requests for a specified aggregator account in a specified region"
  },
  {
    "API": "config:DeleteRemediationConfiguration",
    "EventSource": "config",
    "EventName": "DeleteRemediationConfiguration",
    "Description": "Deletes the remediation configuration"
  },
  {
    "API": "config:DeleteRemediationExceptions",
    "EventSource": "config",
    "EventName": "DeleteRemediationExceptions",
    "Description": "Deletes one or more remediation exceptions mentioned in the resource keys"
  },
  {
    "API": "config:DeleteResourceConfig",
    "EventSource": "config",
    "EventName": "DeleteResourceConfig",
    "Description": "Records the configuration state for a custom resource that has been deleted"
  },
  {
    "API": "config:DeleteRetentionConfiguration",
    "EventSource": "config",
    "EventName": "DeleteRetentionConfiguration",
    "Description": "Deletes the retention configuration"
  },
  {
    "API": "config:DeleteStoredQuery",
    "EventSource": "config",
    "EventName": "DeleteStoredQuery",
    "Description": "Deletes the stored query for a single Amazon Web Services account and a single Amazon Web Services Region"
  },
  {
    "API": "config:DeliverConfigSnapshot",
    "EventSource": "config",
    "EventName": "DeliverConfigSnapshot",
    "Description": "Schedules delivery of a configuration snapshot to the Amazon S3 bucket in the specified delivery channel"
  },
  {
    "API": "config:DescribeAggregateComplianceByConfigRules",
    "EventSource": "config",
    "EventName": "DescribeAggregateComplianceByConfigRules",
    "Description": "Returns a list of compliant and noncompliant rules with the number of resources for compliant and noncompliant rules"
  },
  {
    "API": "config:DescribeAggregateComplianceByConformancePacks",
    "EventSource": "config",
    "EventName": "DescribeAggregateComplianceByConformancePacks",
    "Description": "Returns a list of the conformance packs and their associated compliance status with the count of compliant and noncompliant Config rules within each conformance pack"
  },
  {
    "API": "config:DescribeAggregationAuthorizations",
    "EventSource": "config",
    "EventName": "DescribeAggregationAuthorizations",
    "Description": "Returns a list of authorizations granted to various aggregator accounts and regions"
  },
  {
    "API": "config:DescribeComplianceByConfigRule",
    "EventSource": "config",
    "EventName": "DescribeComplianceByConfigRule",
    "Description": "Indicates whether the specified Config rules are compliant"
  },
  {
    "API": "config:DescribeComplianceByResource",
    "EventSource": "config",
    "EventName": "DescribeComplianceByResource",
    "Description": "Indicates whether the specified Amazon Web Services resources are compliant"
  },
  {
    "API": "config:DescribeConfigRuleEvaluationStatus",
    "EventSource": "config",
    "EventName": "DescribeConfigRuleEvaluationStatus",
    "Description": "Returns status information for each of your Config managed rules"
  },
  {
    "API": "config:DescribeConfigRules",
    "EventSource": "config",
    "EventName": "DescribeConfigRules",
    "Description": "Returns details about your Config rules"
  },
  {
    "API": "config:DescribeConfigurationAggregatorSourcesStatus",
    "EventSource": "config",
    "EventName": "DescribeConfigurationAggregatorSourcesStatus",
    "Description": "Returns status information for sources within an aggregator"
  },
  {
    "API": "config:DescribeConfigurationAggregators",
    "EventSource": "config",
    "EventName": "DescribeConfigurationAggregators",
    "Description": "Returns the details of one or more configuration aggregators"
  },
  {
    "API": "config:DescribeConfigurationRecorderStatus",
    "EventSource": "config",
    "EventName": "DescribeConfigurationRecorderStatus",
    "Description": "Returns the current status of the specified configuration recorder as well as the status of the last recording event for the recorder"
  },
  {
    "API": "config:DescribeConfigurationRecorders",
    "EventSource": "config",
    "EventName": "DescribeConfigurationRecorders",
    "Description": "Returns the details for the specified configuration recorders"
  },
  {
    "API": "config:DescribeConformancePackCompliance",
    "EventSource": "config",
    "EventName": "DescribeConformancePackCompliance",
    "Description": "Returns compliance details for each rule in that conformance pack"
  },
  {
    "API": "config:DescribeConformancePackStatus",
    "EventSource": "config",
    "EventName": "DescribeConformancePackStatus",
    "Description": "Provides one or more conformance packs deployment status"
  },
  {
    "API": "config:DescribeConformancePacks",
    "EventSource": "config",
    "EventName": "DescribeConformancePacks",
    "Description": "Returns a list of one or more conformance packs"
  },
  {
    "API": "config:DescribeDeliveryChannelStatus",
    "EventSource": "config",
    "EventName": "DescribeDeliveryChannelStatus",
    "Description": "Returns the current status of the specified delivery channel"
  },
  {
    "API": "config:DescribeDeliveryChannels",
    "EventSource": "config",
    "EventName": "DescribeDeliveryChannels",
    "Description": "Returns details about the specified delivery channel"
  },
  {
    "API": "config:DescribeOrganizationConfigRuleStatuses",
    "EventSource": "config",
    "EventName": "DescribeOrganizationConfigRuleStatuses",
    "Description": "Provides organization Config rule deployment status for an organization"
  },
  {
    "API": "config:DescribeOrganizationConfigRules",
    "EventSource": "config",
    "EventName": "DescribeOrganizationConfigRules",
    "Description": "Returns a list of organization Config rules"
  },
  {
    "API": "config:DescribeOrganizationConformancePackStatuses",
    "EventSource": "config",
    "EventName": "DescribeOrganizationConformancePackStatuses",
    "Description": "Provides organization conformance pack deployment status for an organization"
  },
  {
    "API": "config:DescribeOrganizationConformancePacks",
    "EventSource": "config",
    "EventName": "DescribeOrganizationConformancePacks",
    "Description": "Returns a list of organization conformance packs"
  },
  {
    "API": "config:DescribePendingAggregationRequests",
    "EventSource": "config",
    "EventName": "DescribePendingAggregationRequests",
    "Description": "Returns a list of all pending aggregation requests"
  },
  {
    "API": "config:DescribeRemediationConfigurations",
    "EventSource": "config",
    "EventName": "DescribeRemediationConfigurations",
    "Description": "Returns the details of one or more remediation configurations"
  },
  {
    "API": "config:DescribeRemediationExceptions",
    "EventSource": "config",
    "EventName": "DescribeRemediationExceptions",
    "Description": "Returns the details of one or more remediation exceptions"
  },
  {
    "API": "config:DescribeRemediationExecutionStatus",
    "EventSource": "config",
    "EventName": "DescribeRemediationExecutionStatus",
    "Description": "Provides a detailed view of a Remediation Execution for a set of resources including state, timestamps for when steps for the remediation execution occur, and any error messages for steps that have failed"
  },
  {
    "API": "config:DescribeRetentionConfigurations",
    "EventSource": "config",
    "EventName": "DescribeRetentionConfigurations",
    "Description": "Returns the details of one or more retention configurations"
  },
  {
    "API": "config:GeneratePresignedUrl",
    "EventSource": "config",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "config:GetAggregateComplianceDetailsByConfigRule",
    "EventSource": "config",
    "EventName": "GetAggregateComplianceDetailsByConfigRule",
    "Description": "Returns the evaluation results for the specified Config rule for a specific resource in a rule"
  },
  {
    "API": "config:GetAggregateConfigRuleComplianceSummary",
    "EventSource": "config",
    "EventName": "GetAggregateConfigRuleComplianceSummary",
    "Description": "Returns the number of compliant and noncompliant rules for one or more accounts and regions in an aggregator"
  },
  {
    "API": "config:GetAggregateConformancePackComplianceSummary",
    "EventSource": "config",
    "EventName": "GetAggregateConformancePackComplianceSummary",
    "Description": "Returns the count of compliant and noncompliant conformance packs across all Amazon Web Services accounts and Amazon Web Services Regions in an aggregator"
  },
  {
    "API": "config:GetAggregateDiscoveredResourceCounts",
    "EventSource": "config",
    "EventName": "GetAggregateDiscoveredResourceCounts",
    "Description": "Returns the resource counts across accounts and regions that are present in your Config aggregator"
  },
  {
    "API": "config:GetAggregateResourceConfig",
    "EventSource": "config",
    "EventName": "GetAggregateResourceConfig",
    "Description": "Returns configuration item that is aggregated for your specific resource in a specific source account and region"
  },
  {
    "API": "config:GetComplianceDetailsByConfigRule",
    "EventSource": "config",
    "EventName": "GetComplianceDetailsByConfigRule",
    "Description": "Returns the evaluation results for the specified Config rule"
  },
  {
    "API": "config:GetComplianceDetailsByResource",
    "EventSource": "config",
    "EventName": "GetComplianceDetailsByResource",
    "Description": "Returns the evaluation results for the specified Amazon Web Services resource"
  },
  {
    "API": "config:GetComplianceSummaryByConfigRule",
    "EventSource": "config",
    "EventName": "GetComplianceSummaryByConfigRule",
    "Description": "Returns the number of Config rules that are compliant and noncompliant, up to a maximum of 25 for each"
  },
  {
    "API": "config:GetComplianceSummaryByResourceType",
    "EventSource": "config",
    "EventName": "GetComplianceSummaryByResourceType",
    "Description": "Returns the number of resources that are compliant and the number that are noncompliant"
  },
  {
    "API": "config:GetConformancePackComplianceDetails",
    "EventSource": "config",
    "EventName": "GetConformancePackComplianceDetails",
    "Description": "Returns compliance details of a conformance pack for all Amazon Web Services resources that are monitered by conformance pack"
  },
  {
    "API": "config:GetConformancePackComplianceSummary",
    "EventSource": "config",
    "EventName": "GetConformancePackComplianceSummary",
    "Description": "Returns compliance details for the conformance pack based on the cumulative compliance results of all the rules in that conformance pack"
  },
  {
    "API": "config:GetCustomRulePolicy",
    "EventSource": "config",
    "EventName": "GetCustomRulePolicy",
    "Description": "Returns the policy definition containing the logic for your Config Custom Policy rule"
  },
  {
    "API": "config:GetDiscoveredResourceCounts",
    "EventSource": "config",
    "EventName": "GetDiscoveredResourceCounts",
    "Description": "Returns the resource types, the number of each resource type, and the total number of resources that Config is recording in this region for your Amazon Web Services account"
  },
  {
    "API": "config:GetOrganizationConfigRuleDetailedStatus",
    "EventSource": "config",
    "EventName": "GetOrganizationConfigRuleDetailedStatus",
    "Description": "Returns detailed status for each member account within an organization for a given organization Config rule"
  },
  {
    "API": "config:GetOrganizationConformancePackDetailedStatus",
    "EventSource": "config",
    "EventName": "GetOrganizationConformancePackDetailedStatus",
    "Description": "Returns detailed status for each member account within an organization for a given organization conformance pack"
  },
  {
    "API": "config:GetOrganizationCustomRulePolicy",
    "EventSource": "config",
    "EventName": "GetOrganizationCustomRulePolicy",
    "Description": "Returns the policy definition containing the logic for your organization Config Custom Policy rule"
  },
  {
    "API": "config:GetResourceConfigHistory",
    "EventSource": "config",
    "EventName": "GetResourceConfigHistory",
    "Description": ""
  },
  {
    "API": "config:GetResourceEvaluationSummary",
    "EventSource": "config",
    "EventName": "GetResourceEvaluationSummary",
    "Description": "Returns a summary of resource evaluation for the specified resource evaluation ID from the proactive rules that were run"
  },
  {
    "API": "config:GetStoredQuery",
    "EventSource": "config",
    "EventName": "GetStoredQuery",
    "Description": "Returns the details of a specific stored query"
  },
  {
    "API": "config:ListAggregateDiscoveredResources",
    "EventSource": "config",
    "EventName": "ListAggregateDiscoveredResources",
    "Description": "Accepts a resource type and returns a list of resource identifiers that are aggregated for a specific resource type across accounts and regions"
  },
  {
    "API": "config:ListConformancePackComplianceScores",
    "EventSource": "config",
    "EventName": "ListConformancePackComplianceScores",
    "Description": "Returns a list of conformance pack compliance scores"
  },
  {
    "API": "config:ListDiscoveredResources",
    "EventSource": "config",
    "EventName": "ListDiscoveredResources",
    "Description": "Accepts a resource type and returns a list of resource identifiers for the resources of that type"
  },
  {
    "API": "config:ListResourceEvaluations",
    "EventSource": "config",
    "EventName": "ListResourceEvaluations",
    "Description": "Returns a list of proactive resource evaluations"
  },
  {
    "API": "config:ListStoredQueries",
    "EventSource": "config",
    "EventName": "ListStoredQueries",
    "Description": "Lists the stored queries for a single Amazon Web Services account and a single Amazon Web Services Region"
  },
  {
    "API": "config:ListTagsForResource",
    "EventSource": "config",
    "EventName": "ListTagsForResource",
    "Description": "List the tags for Config resource"
  },
  {
    "API": "config:PutAggregationAuthorization",
    "EventSource": "config",
    "EventName": "PutAggregationAuthorization",
    "Description": "Authorizes the aggregator account and region to collect data from the source account and region"
  },
  {
    "API": "config:PutConfigRule",
    "EventSource": "config",
    "EventName": "PutConfigRule",
    "Description": "Adds or updates an Config rule to evaluate if your Amazon Web Services resources comply with your desired configurations"
  },
  {
    "API": "config:PutConfigurationAggregator",
    "EventSource": "config",
    "EventName": "PutConfigurationAggregator",
    "Description": "Creates and updates the configuration aggregator with the selected source accounts and regions"
  },
  {
    "API": "config:PutConfigurationRecorder",
    "EventSource": "config",
    "EventName": "PutConfigurationRecorder",
    "Description": "Creates a new configuration recorder to record configuration changes for specified resource types"
  },
  {
    "API": "config:PutConformancePack",
    "EventSource": "config",
    "EventName": "PutConformancePack",
    "Description": "Creates or updates a conformance pack"
  },
  {
    "API": "config:PutDeliveryChannel",
    "EventSource": "config",
    "EventName": "PutDeliveryChannel",
    "Description": "Creates a delivery channel object to deliver configuration information and other compliance information to an Amazon S3 bucket and Amazon SNS topic"
  },
  {
    "API": "config:PutEvaluations",
    "EventSource": "config",
    "EventName": "PutEvaluations",
    "Description": "Used by an Lambda function to deliver evaluation results to Config"
  },
  {
    "API": "config:PutExternalEvaluation",
    "EventSource": "config",
    "EventName": "PutExternalEvaluation",
    "Description": "Add or updates the evaluations for process checks"
  },
  {
    "API": "config:PutOrganizationConfigRule",
    "EventSource": "config",
    "EventName": "PutOrganizationConfigRule",
    "Description": "Adds or updates an Config rule for your entire organization to evaluate if your Amazon Web Services resources comply with your desired configurations"
  },
  {
    "API": "config:PutOrganizationConformancePack",
    "EventSource": "config",
    "EventName": "PutOrganizationConformancePack",
    "Description": "Deploys conformance packs across member accounts in an Amazon Web Services Organization"
  },
  {
    "API": "config:PutRemediationConfigurations",
    "EventSource": "config",
    "EventName": "PutRemediationConfigurations",
    "Description": "Adds or updates the remediation configuration with a specific Config rule with the selected target or action"
  },
  {
    "API": "config:PutRemediationExceptions",
    "EventSource": "config",
    "EventName": "PutRemediationExceptions",
    "Description": "A remediation exception is when a specified resource is no longer considered for auto-remediation"
  },
  {
    "API": "config:PutResourceConfig",
    "EventSource": "config",
    "EventName": "PutResourceConfig",
    "Description": "Records the configuration state for the resource provided in the request"
  },
  {
    "API": "config:PutRetentionConfiguration",
    "EventSource": "config",
    "EventName": "PutRetentionConfiguration",
    "Description": "Creates and updates the retention configuration with details about retention period (number of days) that Config stores your historical information"
  },
  {
    "API": "config:PutStoredQuery",
    "EventSource": "config",
    "EventName": "PutStoredQuery",
    "Description": "Saves a new query or updates an existing saved query"
  },
  {
    "API": "config:SelectAggregateResourceConfig",
    "EventSource": "config",
    "EventName": "SelectAggregateResourceConfig",
    "Description": "Accepts a structured query language (SQL) SELECT command and an aggregator to query configuration state of Amazon Web Services resources across multiple accounts and regions, performs the corresponding search, and returns resource configurations matching the properties"
  },
  {
    "API": "config:SelectResourceConfig",
    "EventSource": "config",
    "EventName": "SelectResourceConfig",
    "Description": "Accepts a structured query language (SQL) ``SELECT`` command, performs the corresponding search, and returns resource configurations matching the properties"
  },
  {
    "API": "config:StartConfigRulesEvaluation",
    "EventSource": "config",
    "EventName": "StartConfigRulesEvaluation",
    "Description": "Runs an on-demand evaluation for the specified Config rules against the last known configuration state of the resources"
  },
  {
    "API": "config:StartConfigurationRecorder",
    "EventSource": "config",
    "EventName": "StartConfigurationRecorder",
    "Description": "Starts recording configurations of the Amazon Web Services resources you have selected to record in your Amazon Web Services account"
  },
  {
    "API": "config:StartRemediationExecution",
    "EventSource": "config",
    "EventName": "StartRemediationExecution",
    "Description": "Runs an on-demand remediation for the specified Config rules against the last known remediation configuration"
  },
  {
    "API": "config:StartResourceEvaluation",
    "EventSource": "config",
    "EventName": "StartResourceEvaluation",
    "Description": "Runs an on-demand evaluation for the specified resource to determine whether the resource details will comply with configured Config rules"
  },
  {
    "API": "config:StopConfigurationRecorder",
    "EventSource": "config",
    "EventName": "StopConfigurationRecorder",
    "Description": "Stops recording configurations of the Amazon Web Services resources you have selected to record in your Amazon Web Services account"
  },
  {
    "API": "config:TagResource",
    "EventSource": "config",
    "EventName": "TagResource",
    "Description": "Associates the specified tags to a resource with the specified resourceArn"
  },
  {
    "API": "config:UntagResource",
    "EventSource": "config",
    "EventName": "UntagResource",
    "Description": "Deletes specified tags from a resource"
  },
  {
    "API": "connect:ActivateEvaluationForm",
    "EventSource": "connect",
    "EventName": "ActivateEvaluationForm",
    "Description": "Activates an evaluation form in the specified Amazon Connect instance"
  },
  {
    "API": "connect:AssociateAnalyticsDataSet",
    "EventSource": "connect",
    "EventName": "AssociateAnalyticsDataSet",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:AssociateApprovedOrigin",
    "EventSource": "connect",
    "EventName": "AssociateApprovedOrigin",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:AssociateBot",
    "EventSource": "connect",
    "EventName": "AssociateBot",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:AssociateDefaultVocabulary",
    "EventSource": "connect",
    "EventName": "AssociateDefaultVocabulary",
    "Description": "Associates an existing vocabulary as the default"
  },
  {
    "API": "connect:AssociateFlow",
    "EventSource": "connect",
    "EventName": "AssociateFlow",
    "Description": "Associates a connect resource to a flow"
  },
  {
    "API": "connect:AssociateInstanceStorageConfig",
    "EventSource": "connect",
    "EventName": "AssociateInstanceStorageConfig",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:AssociateLambdaFunction",
    "EventSource": "connect",
    "EventName": "AssociateLambdaFunction",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:AssociateLexBot",
    "EventSource": "connect",
    "EventName": "AssociateLexBot",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:AssociatePhoneNumberContactFlow",
    "EventSource": "connect",
    "EventName": "AssociatePhoneNumberContactFlow",
    "Description": "Associates a flow with a phone number claimed to your Amazon Connect instance"
  },
  {
    "API": "connect:AssociateQueueQuickConnects",
    "EventSource": "connect",
    "EventName": "AssociateQueueQuickConnects",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:AssociateRoutingProfileQueues",
    "EventSource": "connect",
    "EventName": "AssociateRoutingProfileQueues",
    "Description": "Associates a set of queues with a routing profile"
  },
  {
    "API": "connect:AssociateSecurityKey",
    "EventSource": "connect",
    "EventName": "AssociateSecurityKey",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:AssociateTrafficDistributionGroupUser",
    "EventSource": "connect",
    "EventName": "AssociateTrafficDistributionGroupUser",
    "Description": "Associates an agent with a traffic distribution group"
  },
  {
    "API": "connect:AssociateUserProficiencies",
    "EventSource": "connect",
    "EventName": "AssociateUserProficiencies",
    "Description": ">Associates a set of proficiencies with a user"
  },
  {
    "API": "connect:BatchAssociateAnalyticsDataSet",
    "EventSource": "connect",
    "EventName": "BatchAssociateAnalyticsDataSet",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:BatchDisassociateAnalyticsDataSet",
    "EventSource": "connect",
    "EventName": "BatchDisassociateAnalyticsDataSet",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:BatchGetAttachedFileMetadata",
    "EventSource": "connect",
    "EventName": "BatchGetAttachedFileMetadata",
    "Description": "Allows you to retrieve metadata about multiple attached files on an associated resource"
  },
  {
    "API": "connect:BatchGetFlowAssociation",
    "EventSource": "connect",
    "EventName": "BatchGetFlowAssociation",
    "Description": "Retrieve the flow associations for the given resources"
  },
  {
    "API": "connect:BatchPutContact",
    "EventSource": "connect",
    "EventName": "BatchPutContact",
    "Description": ""
  },
  {
    "API": "connect:ClaimPhoneNumber",
    "EventSource": "connect",
    "EventName": "ClaimPhoneNumber",
    "Description": "Claims an available phone number to your Amazon Connect instance or traffic distribution group"
  },
  {
    "API": "connect:CompleteAttachedFileUpload",
    "EventSource": "connect",
    "EventName": "CompleteAttachedFileUpload",
    "Description": "Allows you to confirm that the attached file has been uploaded using the pre-signed URL provided in the StartAttachedFileUpload API"
  },
  {
    "API": "connect:CreateAgentStatus",
    "EventSource": "connect",
    "EventName": "CreateAgentStatus",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:CreateContactFlow",
    "EventSource": "connect",
    "EventName": "CreateContactFlow",
    "Description": "Creates a flow for the specified Amazon Connect instance"
  },
  {
    "API": "connect:CreateContactFlowModule",
    "EventSource": "connect",
    "EventName": "CreateContactFlowModule",
    "Description": "Creates a flow module for the specified Amazon Connect instance"
  },
  {
    "API": "connect:CreateEvaluationForm",
    "EventSource": "connect",
    "EventName": "CreateEvaluationForm",
    "Description": "Creates an evaluation form in the specified Amazon Connect instance"
  },
  {
    "API": "connect:CreateHoursOfOperation",
    "EventSource": "connect",
    "EventName": "CreateHoursOfOperation",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:CreateInstance",
    "EventSource": "connect",
    "EventName": "CreateInstance",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:CreateIntegrationAssociation",
    "EventSource": "connect",
    "EventName": "CreateIntegrationAssociation",
    "Description": "Creates an Amazon Web Services resource association with an Amazon Connect instance"
  },
  {
    "API": "connect:CreateParticipant",
    "EventSource": "connect",
    "EventName": "CreateParticipant",
    "Description": "Adds a new participant into an on-going chat contact"
  },
  {
    "API": "connect:CreatePersistentContactAssociation",
    "EventSource": "connect",
    "EventName": "CreatePersistentContactAssociation",
    "Description": "Enables rehydration of chats for the lifespan of a contact"
  },
  {
    "API": "connect:CreatePredefinedAttribute",
    "EventSource": "connect",
    "EventName": "CreatePredefinedAttribute",
    "Description": "Creates a new predefined attribute for the specified Amazon Connect instance"
  },
  {
    "API": "connect:CreatePrompt",
    "EventSource": "connect",
    "EventName": "CreatePrompt",
    "Description": "Creates a prompt"
  },
  {
    "API": "connect:CreateQueue",
    "EventSource": "connect",
    "EventName": "CreateQueue",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:CreateQuickConnect",
    "EventSource": "connect",
    "EventName": "CreateQuickConnect",
    "Description": "Creates a quick connect for the specified Amazon Connect instance"
  },
  {
    "API": "connect:CreateRoutingProfile",
    "EventSource": "connect",
    "EventName": "CreateRoutingProfile",
    "Description": "Creates a new routing profile"
  },
  {
    "API": "connect:CreateRule",
    "EventSource": "connect",
    "EventName": "CreateRule",
    "Description": "Creates a rule for the specified Amazon Connect instance"
  },
  {
    "API": "connect:CreateSecurityProfile",
    "EventSource": "connect",
    "EventName": "CreateSecurityProfile",
    "Description": "Creates a security profile"
  },
  {
    "API": "connect:CreateTaskTemplate",
    "EventSource": "connect",
    "EventName": "CreateTaskTemplate",
    "Description": "Creates a new task template in the specified Amazon Connect instance"
  },
  {
    "API": "connect:CreateTrafficDistributionGroup",
    "EventSource": "connect",
    "EventName": "CreateTrafficDistributionGroup",
    "Description": "Creates a traffic distribution group given an Amazon Connect instance that has been replicated"
  },
  {
    "API": "connect:CreateUseCase",
    "EventSource": "connect",
    "EventName": "CreateUseCase",
    "Description": "Creates a use case for an integration association"
  },
  {
    "API": "connect:CreateUser",
    "EventSource": "connect",
    "EventName": "CreateUser",
    "Description": "Creates a user account for the specified Amazon Connect instance"
  },
  {
    "API": "connect:CreateUserHierarchyGroup",
    "EventSource": "connect",
    "EventName": "CreateUserHierarchyGroup",
    "Description": "Creates a new user hierarchy group"
  },
  {
    "API": "connect:CreateView",
    "EventSource": "connect",
    "EventName": "CreateView",
    "Description": "Creates a new view with the possible status of ``SAVED`` or ``PUBLISHED``"
  },
  {
    "API": "connect:CreateViewVersion",
    "EventSource": "connect",
    "EventName": "CreateViewVersion",
    "Description": "Publishes a new version of the view identifier"
  },
  {
    "API": "connect:CreateVocabulary",
    "EventSource": "connect",
    "EventName": "CreateVocabulary",
    "Description": "Creates a custom vocabulary associated with your Amazon Connect instance"
  },
  {
    "API": "connect:DeactivateEvaluationForm",
    "EventSource": "connect",
    "EventName": "DeactivateEvaluationForm",
    "Description": "Deactivates an evaluation form in the specified Amazon Connect instance"
  },
  {
    "API": "connect:DeleteAttachedFile",
    "EventSource": "connect",
    "EventName": "DeleteAttachedFile",
    "Description": "Deletes an attached file along with the underlying S3 Object"
  },
  {
    "API": "connect:DeleteContactEvaluation",
    "EventSource": "connect",
    "EventName": "DeleteContactEvaluation",
    "Description": "Deletes a contact evaluation in the specified Amazon Connect instance"
  },
  {
    "API": "connect:DeleteContactFlow",
    "EventSource": "connect",
    "EventName": "DeleteContactFlow",
    "Description": "Deletes a flow for the specified Amazon Connect instance"
  },
  {
    "API": "connect:DeleteContactFlowModule",
    "EventSource": "connect",
    "EventName": "DeleteContactFlowModule",
    "Description": "Deletes the specified flow module"
  },
  {
    "API": "connect:DeleteEvaluationForm",
    "EventSource": "connect",
    "EventName": "DeleteEvaluationForm",
    "Description": "Deletes an evaluation form in the specified Amazon Connect instance"
  },
  {
    "API": "connect:DeleteHoursOfOperation",
    "EventSource": "connect",
    "EventName": "DeleteHoursOfOperation",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:DeleteInstance",
    "EventSource": "connect",
    "EventName": "DeleteInstance",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:DeleteIntegrationAssociation",
    "EventSource": "connect",
    "EventName": "DeleteIntegrationAssociation",
    "Description": "Deletes an Amazon Web Services resource association from an Amazon Connect instance"
  },
  {
    "API": "connect:DeletePredefinedAttribute",
    "EventSource": "connect",
    "EventName": "DeletePredefinedAttribute",
    "Description": "Deletes a predefined attribute from the specified Amazon Connect instance"
  },
  {
    "API": "connect:DeletePrompt",
    "EventSource": "connect",
    "EventName": "DeletePrompt",
    "Description": "Deletes a prompt"
  },
  {
    "API": "connect:DeleteQueue",
    "EventSource": "connect",
    "EventName": "DeleteQueue",
    "Description": "Deletes a queue"
  },
  {
    "API": "connect:DeleteQuickConnect",
    "EventSource": "connect",
    "EventName": "DeleteQuickConnect",
    "Description": "Deletes a quick connect"
  },
  {
    "API": "connect:DeleteRoutingProfile",
    "EventSource": "connect",
    "EventName": "DeleteRoutingProfile",
    "Description": "Deletes a routing profile"
  },
  {
    "API": "connect:DeleteRule",
    "EventSource": "connect",
    "EventName": "DeleteRule",
    "Description": "Deletes a rule for the specified Amazon Connect instance"
  },
  {
    "API": "connect:DeleteSecurityProfile",
    "EventSource": "connect",
    "EventName": "DeleteSecurityProfile",
    "Description": "Deletes a security profile"
  },
  {
    "API": "connect:DeleteTaskTemplate",
    "EventSource": "connect",
    "EventName": "DeleteTaskTemplate",
    "Description": "Deletes the task template"
  },
  {
    "API": "connect:DeleteTrafficDistributionGroup",
    "EventSource": "connect",
    "EventName": "DeleteTrafficDistributionGroup",
    "Description": "Deletes a traffic distribution group"
  },
  {
    "API": "connect:DeleteUseCase",
    "EventSource": "connect",
    "EventName": "DeleteUseCase",
    "Description": "Deletes a use case from an integration association"
  },
  {
    "API": "connect:DeleteUser",
    "EventSource": "connect",
    "EventName": "DeleteUser",
    "Description": "Deletes a user account from the specified Amazon Connect instance"
  },
  {
    "API": "connect:DeleteUserHierarchyGroup",
    "EventSource": "connect",
    "EventName": "DeleteUserHierarchyGroup",
    "Description": "Deletes an existing user hierarchy group"
  },
  {
    "API": "connect:DeleteView",
    "EventSource": "connect",
    "EventName": "DeleteView",
    "Description": "Deletes the view entirely"
  },
  {
    "API": "connect:DeleteViewVersion",
    "EventSource": "connect",
    "EventName": "DeleteViewVersion",
    "Description": "Deletes the particular version specified in ``ViewVersion`` identifier"
  },
  {
    "API": "connect:DeleteVocabulary",
    "EventSource": "connect",
    "EventName": "DeleteVocabulary",
    "Description": "Deletes the vocabulary that has the given identifier"
  },
  {
    "API": "connect:DescribeAgentStatus",
    "EventSource": "connect",
    "EventName": "DescribeAgentStatus",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:DescribeContact",
    "EventSource": "connect",
    "EventName": "DescribeContact",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:DescribeContactEvaluation",
    "EventSource": "connect",
    "EventName": "DescribeContactEvaluation",
    "Description": "Describes a contact evaluation in the specified Amazon Connect instance"
  },
  {
    "API": "connect:DescribeContactFlow",
    "EventSource": "connect",
    "EventName": "DescribeContactFlow",
    "Description": "Describes the specified flow"
  },
  {
    "API": "connect:DescribeContactFlowModule",
    "EventSource": "connect",
    "EventName": "DescribeContactFlowModule",
    "Description": "Describes the specified flow module"
  },
  {
    "API": "connect:DescribeEvaluationForm",
    "EventSource": "connect",
    "EventName": "DescribeEvaluationForm",
    "Description": "Describes an evaluation form in the specified Amazon Connect instance"
  },
  {
    "API": "connect:DescribeHoursOfOperation",
    "EventSource": "connect",
    "EventName": "DescribeHoursOfOperation",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:DescribeInstance",
    "EventSource": "connect",
    "EventName": "DescribeInstance",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:DescribeInstanceAttribute",
    "EventSource": "connect",
    "EventName": "DescribeInstanceAttribute",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:DescribeInstanceStorageConfig",
    "EventSource": "connect",
    "EventName": "DescribeInstanceStorageConfig",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:DescribePhoneNumber",
    "EventSource": "connect",
    "EventName": "DescribePhoneNumber",
    "Description": "Gets details and status of a phone number that’s claimed to your Amazon Connect instance or traffic distribution group"
  },
  {
    "API": "connect:DescribePredefinedAttribute",
    "EventSource": "connect",
    "EventName": "DescribePredefinedAttribute",
    "Description": "Describes a predefined attribute for the specified Amazon Connect instance"
  },
  {
    "API": "connect:DescribePrompt",
    "EventSource": "connect",
    "EventName": "DescribePrompt",
    "Description": "Describes the prompt"
  },
  {
    "API": "connect:DescribeQueue",
    "EventSource": "connect",
    "EventName": "DescribeQueue",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:DescribeQuickConnect",
    "EventSource": "connect",
    "EventName": "DescribeQuickConnect",
    "Description": "Describes the quick connect"
  },
  {
    "API": "connect:DescribeRoutingProfile",
    "EventSource": "connect",
    "EventName": "DescribeRoutingProfile",
    "Description": "Describes the specified routing profile"
  },
  {
    "API": "connect:DescribeRule",
    "EventSource": "connect",
    "EventName": "DescribeRule",
    "Description": "Describes a rule for the specified Amazon Connect instance"
  },
  {
    "API": "connect:DescribeSecurityProfile",
    "EventSource": "connect",
    "EventName": "DescribeSecurityProfile",
    "Description": "Gets basic information about the security profle"
  },
  {
    "API": "connect:DescribeTrafficDistributionGroup",
    "EventSource": "connect",
    "EventName": "DescribeTrafficDistributionGroup",
    "Description": "Gets details and status of a traffic distribution group"
  },
  {
    "API": "connect:DescribeUser",
    "EventSource": "connect",
    "EventName": "DescribeUser",
    "Description": "Describes the specified user"
  },
  {
    "API": "connect:DescribeUserHierarchyGroup",
    "EventSource": "connect",
    "EventName": "DescribeUserHierarchyGroup",
    "Description": "Describes the specified hierarchy group"
  },
  {
    "API": "connect:DescribeUserHierarchyStructure",
    "EventSource": "connect",
    "EventName": "DescribeUserHierarchyStructure",
    "Description": "Describes the hierarchy structure of the specified Amazon Connect instance"
  },
  {
    "API": "connect:DescribeView",
    "EventSource": "connect",
    "EventName": "DescribeView",
    "Description": "Retrieves the view for the specified Amazon Connect instance and view identifier"
  },
  {
    "API": "connect:DescribeVocabulary",
    "EventSource": "connect",
    "EventName": "DescribeVocabulary",
    "Description": "Describes the specified vocabulary"
  },
  {
    "API": "connect:DisassociateAnalyticsDataSet",
    "EventSource": "connect",
    "EventName": "DisassociateAnalyticsDataSet",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:DisassociateApprovedOrigin",
    "EventSource": "connect",
    "EventName": "DisassociateApprovedOrigin",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:DisassociateBot",
    "EventSource": "connect",
    "EventName": "DisassociateBot",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:DisassociateFlow",
    "EventSource": "connect",
    "EventName": "DisassociateFlow",
    "Description": "Disassociates a connect resource from a flow"
  },
  {
    "API": "connect:DisassociateInstanceStorageConfig",
    "EventSource": "connect",
    "EventName": "DisassociateInstanceStorageConfig",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:DisassociateLambdaFunction",
    "EventSource": "connect",
    "EventName": "DisassociateLambdaFunction",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:DisassociateLexBot",
    "EventSource": "connect",
    "EventName": "DisassociateLexBot",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:DisassociatePhoneNumberContactFlow",
    "EventSource": "connect",
    "EventName": "DisassociatePhoneNumberContactFlow",
    "Description": "Removes the flow association from a phone number claimed to your Amazon Connect instance"
  },
  {
    "API": "connect:DisassociateQueueQuickConnects",
    "EventSource": "connect",
    "EventName": "DisassociateQueueQuickConnects",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:DisassociateRoutingProfileQueues",
    "EventSource": "connect",
    "EventName": "DisassociateRoutingProfileQueues",
    "Description": "Disassociates a set of queues from a routing profile"
  },
  {
    "API": "connect:DisassociateSecurityKey",
    "EventSource": "connect",
    "EventName": "DisassociateSecurityKey",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:DisassociateTrafficDistributionGroupUser",
    "EventSource": "connect",
    "EventName": "DisassociateTrafficDistributionGroupUser",
    "Description": "Disassociates an agent from a traffic distribution group"
  },
  {
    "API": "connect:DisassociateUserProficiencies",
    "EventSource": "connect",
    "EventName": "DisassociateUserProficiencies",
    "Description": "Disassociates a set of proficiencies from a user"
  },
  {
    "API": "connect:DismissUserContact",
    "EventSource": "connect",
    "EventName": "DismissUserContact",
    "Description": "Dismisses contacts from an agent’s CCP and returns the agent to an available state, which allows the agent to receive a new routed contact"
  },
  {
    "API": "connect:GeneratePresignedUrl",
    "EventSource": "connect",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "connect:GetAttachedFile",
    "EventSource": "connect",
    "EventName": "GetAttachedFile",
    "Description": "Provides a pre-signed URL for download of an approved attached file"
  },
  {
    "API": "connect:GetContactAttributes",
    "EventSource": "connect",
    "EventName": "GetContactAttributes",
    "Description": "Retrieves the contact attributes for the specified contact"
  },
  {
    "API": "connect:GetCurrentMetricData",
    "EventSource": "connect",
    "EventName": "GetCurrentMetricData",
    "Description": "Gets the real-time metric data from the specified Amazon Connect instance"
  },
  {
    "API": "connect:GetCurrentUserData",
    "EventSource": "connect",
    "EventName": "GetCurrentUserData",
    "Description": "Gets the real-time active user data from the specified Amazon Connect instance"
  },
  {
    "API": "connect:GetFederationToken",
    "EventSource": "connect",
    "EventName": "GetFederationToken",
    "Description": "Supports SAML sign-in for Amazon Connect"
  },
  {
    "API": "connect:GetFlowAssociation",
    "EventSource": "connect",
    "EventName": "GetFlowAssociation",
    "Description": "Retrieves the flow associated for a given resource"
  },
  {
    "API": "connect:GetMetricData",
    "EventSource": "connect",
    "EventName": "GetMetricData",
    "Description": "Gets historical metric data from the specified Amazon Connect instance"
  },
  {
    "API": "connect:GetMetricDataV2",
    "EventSource": "connect",
    "EventName": "GetMetricDataV2",
    "Description": "Gets metric data from the specified Amazon Connect instance"
  },
  {
    "API": "connect:GetPromptFile",
    "EventSource": "connect",
    "EventName": "GetPromptFile",
    "Description": "Gets the prompt file"
  },
  {
    "API": "connect:GetTaskTemplate",
    "EventSource": "connect",
    "EventName": "GetTaskTemplate",
    "Description": "Gets details about a specific task template in the specified Amazon Connect instance"
  },
  {
    "API": "connect:GetTrafficDistribution",
    "EventSource": "connect",
    "EventName": "GetTrafficDistribution",
    "Description": "Retrieves the current traffic distribution for a given traffic distribution group"
  },
  {
    "API": "connect:ImportPhoneNumber",
    "EventSource": "connect",
    "EventName": "ImportPhoneNumber",
    "Description": "Imports a claimed phone number from an external service, such as Amazon Pinpoint, into an Amazon Connect instance"
  },
  {
    "API": "connect:ListAgentStatuses",
    "EventSource": "connect",
    "EventName": "ListAgentStatuses",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:ListAnalyticsDataAssociations",
    "EventSource": "connect",
    "EventName": "ListAnalyticsDataAssociations",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:ListApprovedOrigins",
    "EventSource": "connect",
    "EventName": "ListApprovedOrigins",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:ListBots",
    "EventSource": "connect",
    "EventName": "ListBots",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:ListContactEvaluations",
    "EventSource": "connect",
    "EventName": "ListContactEvaluations",
    "Description": "Lists contact evaluations in the specified Amazon Connect instance"
  },
  {
    "API": "connect:ListContactFlowModules",
    "EventSource": "connect",
    "EventName": "ListContactFlowModules",
    "Description": "Provides information about the flow modules for the specified Amazon Connect instance"
  },
  {
    "API": "connect:ListContactFlows",
    "EventSource": "connect",
    "EventName": "ListContactFlows",
    "Description": "Provides information about the flows for the specified Amazon Connect instance"
  },
  {
    "API": "connect:ListContactReferences",
    "EventSource": "connect",
    "EventName": "ListContactReferences",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:ListDefaultVocabularies",
    "EventSource": "connect",
    "EventName": "ListDefaultVocabularies",
    "Description": "Lists the default vocabularies for the specified Amazon Connect instance"
  },
  {
    "API": "connect:ListEvaluationFormVersions",
    "EventSource": "connect",
    "EventName": "ListEvaluationFormVersions",
    "Description": "Lists versions of an evaluation form in the specified Amazon Connect instance"
  },
  {
    "API": "connect:ListEvaluationForms",
    "EventSource": "connect",
    "EventName": "ListEvaluationForms",
    "Description": "Lists evaluation forms in the specified Amazon Connect instance"
  },
  {
    "API": "connect:ListFlowAssociations",
    "EventSource": "connect",
    "EventName": "ListFlowAssociations",
    "Description": "List the flow association based on the filters"
  },
  {
    "API": "connect:ListHoursOfOperations",
    "EventSource": "connect",
    "EventName": "ListHoursOfOperations",
    "Description": "Provides information about the hours of operation for the specified Amazon Connect instance"
  },
  {
    "API": "connect:ListInstanceAttributes",
    "EventSource": "connect",
    "EventName": "ListInstanceAttributes",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:ListInstanceStorageConfigs",
    "EventSource": "connect",
    "EventName": "ListInstanceStorageConfigs",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:ListInstances",
    "EventSource": "connect",
    "EventName": "ListInstances",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:ListIntegrationAssociations",
    "EventSource": "connect",
    "EventName": "ListIntegrationAssociations",
    "Description": "Provides summary information about the Amazon Web Services resource associations for the specified Amazon Connect instance"
  },
  {
    "API": "connect:ListLambdaFunctions",
    "EventSource": "connect",
    "EventName": "ListLambdaFunctions",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:ListLexBots",
    "EventSource": "connect",
    "EventName": "ListLexBots",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:ListPhoneNumbers",
    "EventSource": "connect",
    "EventName": "ListPhoneNumbers",
    "Description": "Provides information about the phone numbers for the specified Amazon Connect instance"
  },
  {
    "API": "connect:ListPhoneNumbersV2",
    "EventSource": "connect",
    "EventName": "ListPhoneNumbersV2",
    "Description": "Lists phone numbers claimed to your Amazon Connect instance or traffic distribution group"
  },
  {
    "API": "connect:ListPredefinedAttributes",
    "EventSource": "connect",
    "EventName": "ListPredefinedAttributes",
    "Description": "Lists predefined attributes for the specified Amazon Connect instance"
  },
  {
    "API": "connect:ListPrompts",
    "EventSource": "connect",
    "EventName": "ListPrompts",
    "Description": "Provides information about the prompts for the specified Amazon Connect instance"
  },
  {
    "API": "connect:ListQueueQuickConnects",
    "EventSource": "connect",
    "EventName": "ListQueueQuickConnects",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:ListQueues",
    "EventSource": "connect",
    "EventName": "ListQueues",
    "Description": "Provides information about the queues for the specified Amazon Connect instance"
  },
  {
    "API": "connect:ListQuickConnects",
    "EventSource": "connect",
    "EventName": "ListQuickConnects",
    "Description": "Provides information about the quick connects for the specified Amazon Connect instance"
  },
  {
    "API": "connect:ListRealtimeContactAnalysisSegmentsV2",
    "EventSource": "connect",
    "EventName": "ListRealtimeContactAnalysisSegmentsV2",
    "Description": "Provides a list of analysis segments for a real-time analysis session"
  },
  {
    "API": "connect:ListRoutingProfileQueues",
    "EventSource": "connect",
    "EventName": "ListRoutingProfileQueues",
    "Description": "Lists the queues associated with a routing profile"
  },
  {
    "API": "connect:ListRoutingProfiles",
    "EventSource": "connect",
    "EventName": "ListRoutingProfiles",
    "Description": "Provides summary information about the routing profiles for the specified Amazon Connect instance"
  },
  {
    "API": "connect:ListRules",
    "EventSource": "connect",
    "EventName": "ListRules",
    "Description": "List all rules for the specified Amazon Connect instance"
  },
  {
    "API": "connect:ListSecurityKeys",
    "EventSource": "connect",
    "EventName": "ListSecurityKeys",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:ListSecurityProfileApplications",
    "EventSource": "connect",
    "EventName": "ListSecurityProfileApplications",
    "Description": "Returns a list of third-party applications in a specific security profile"
  },
  {
    "API": "connect:ListSecurityProfilePermissions",
    "EventSource": "connect",
    "EventName": "ListSecurityProfilePermissions",
    "Description": "Lists the permissions granted to a security profile"
  },
  {
    "API": "connect:ListSecurityProfiles",
    "EventSource": "connect",
    "EventName": "ListSecurityProfiles",
    "Description": "Provides summary information about the security profiles for the specified Amazon Connect instance"
  },
  {
    "API": "connect:ListTagsForResource",
    "EventSource": "connect",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags for the specified resource"
  },
  {
    "API": "connect:ListTaskTemplates",
    "EventSource": "connect",
    "EventName": "ListTaskTemplates",
    "Description": "Lists task templates for the specified Amazon Connect instance"
  },
  {
    "API": "connect:ListTrafficDistributionGroupUsers",
    "EventSource": "connect",
    "EventName": "ListTrafficDistributionGroupUsers",
    "Description": "Lists traffic distribution group users"
  },
  {
    "API": "connect:ListTrafficDistributionGroups",
    "EventSource": "connect",
    "EventName": "ListTrafficDistributionGroups",
    "Description": "Lists traffic distribution groups"
  },
  {
    "API": "connect:ListUseCases",
    "EventSource": "connect",
    "EventName": "ListUseCases",
    "Description": "Lists the use cases for the integration association"
  },
  {
    "API": "connect:ListUserHierarchyGroups",
    "EventSource": "connect",
    "EventName": "ListUserHierarchyGroups",
    "Description": "Provides summary information about the hierarchy groups for the specified Amazon Connect instance"
  },
  {
    "API": "connect:ListUserProficiencies",
    "EventSource": "connect",
    "EventName": "ListUserProficiencies",
    "Description": "Lists proficiencies associated with a user"
  },
  {
    "API": "connect:ListUsers",
    "EventSource": "connect",
    "EventName": "ListUsers",
    "Description": "Provides summary information about the users for the specified Amazon Connect instance"
  },
  {
    "API": "connect:ListViewVersions",
    "EventSource": "connect",
    "EventName": "ListViewVersions",
    "Description": "Returns all the available versions for the specified Amazon Connect instance and view identifier"
  },
  {
    "API": "connect:ListViews",
    "EventSource": "connect",
    "EventName": "ListViews",
    "Description": "Returns views in the given instance"
  },
  {
    "API": "connect:MonitorContact",
    "EventSource": "connect",
    "EventName": "MonitorContact",
    "Description": "Initiates silent monitoring of a contact"
  },
  {
    "API": "connect:PauseContact",
    "EventSource": "connect",
    "EventName": "PauseContact",
    "Description": "Allows pausing an ongoing task contact"
  },
  {
    "API": "connect:PutUserStatus",
    "EventSource": "connect",
    "EventName": "PutUserStatus",
    "Description": "Changes the current status of a user or agent in Amazon Connect"
  },
  {
    "API": "connect:ReleasePhoneNumber",
    "EventSource": "connect",
    "EventName": "ReleasePhoneNumber",
    "Description": "Releases a phone number previously claimed to an Amazon Connect instance or traffic distribution group"
  },
  {
    "API": "connect:ReplicateInstance",
    "EventSource": "connect",
    "EventName": "ReplicateInstance",
    "Description": "Replicates an Amazon Connect instance in the specified Amazon Web Services Region and copies configuration information for Amazon Connect resources across Amazon Web Services Regions"
  },
  {
    "API": "connect:ResumeContact",
    "EventSource": "connect",
    "EventName": "ResumeContact",
    "Description": "Allows resuming a task contact in a paused state"
  },
  {
    "API": "connect:ResumeContactRecording",
    "EventSource": "connect",
    "EventName": "ResumeContactRecording",
    "Description": "When a contact is being recorded, and the recording has been suspended using SuspendContactRecording, this API resumes recording whatever recording is selected in the flow configuration: call, screen, or both"
  },
  {
    "API": "connect:SearchAvailablePhoneNumbers",
    "EventSource": "connect",
    "EventName": "SearchAvailablePhoneNumbers",
    "Description": "Searches for available phone numbers that you can claim to your Amazon Connect instance or traffic distribution group"
  },
  {
    "API": "connect:SearchContactFlowModules",
    "EventSource": "connect",
    "EventName": "SearchContactFlowModules",
    "Description": "Searches the flow modules in an Amazon Connect instance, with optional filtering"
  },
  {
    "API": "connect:SearchContactFlows",
    "EventSource": "connect",
    "EventName": "SearchContactFlows",
    "Description": "Searches the contact flows in an Amazon Connect instance, with optional filtering"
  },
  {
    "API": "connect:SearchContacts",
    "EventSource": "connect",
    "EventName": "SearchContacts",
    "Description": "Searches contacts in an Amazon Connect instance"
  },
  {
    "API": "connect:SearchHoursOfOperations",
    "EventSource": "connect",
    "EventName": "SearchHoursOfOperations",
    "Description": "Searches the hours of operation in an Amazon Connect instance, with optional filtering"
  },
  {
    "API": "connect:SearchPredefinedAttributes",
    "EventSource": "connect",
    "EventName": "SearchPredefinedAttributes",
    "Description": "Predefined attributes that meet certain criteria"
  },
  {
    "API": "connect:SearchPrompts",
    "EventSource": "connect",
    "EventName": "SearchPrompts",
    "Description": "Searches prompts in an Amazon Connect instance, with optional filtering"
  },
  {
    "API": "connect:SearchQueues",
    "EventSource": "connect",
    "EventName": "SearchQueues",
    "Description": "Searches queues in an Amazon Connect instance, with optional filtering"
  },
  {
    "API": "connect:SearchQuickConnects",
    "EventSource": "connect",
    "EventName": "SearchQuickConnects",
    "Description": "Searches quick connects in an Amazon Connect instance, with optional filtering"
  },
  {
    "API": "connect:SearchResourceTags",
    "EventSource": "connect",
    "EventName": "SearchResourceTags",
    "Description": "Searches tags used in an Amazon Connect instance using optional search criteria"
  },
  {
    "API": "connect:SearchRoutingProfiles",
    "EventSource": "connect",
    "EventName": "SearchRoutingProfiles",
    "Description": "Searches routing profiles in an Amazon Connect instance, with optional filtering"
  },
  {
    "API": "connect:SearchSecurityProfiles",
    "EventSource": "connect",
    "EventName": "SearchSecurityProfiles",
    "Description": "Searches security profiles in an Amazon Connect instance, with optional filtering"
  },
  {
    "API": "connect:SearchUsers",
    "EventSource": "connect",
    "EventName": "SearchUsers",
    "Description": "Searches users in an Amazon Connect instance, with optional filtering"
  },
  {
    "API": "connect:SearchVocabularies",
    "EventSource": "connect",
    "EventName": "SearchVocabularies",
    "Description": "Searches for vocabularies within a specific Amazon Connect instance using ``State``, ``NameStartsWith``, and ``LanguageCode``"
  },
  {
    "API": "connect:SendChatIntegrationEvent",
    "EventSource": "connect",
    "EventName": "SendChatIntegrationEvent",
    "Description": "Processes chat integration events from Amazon Web Services or external integrations to Amazon Connect"
  },
  {
    "API": "connect:StartAttachedFileUpload",
    "EventSource": "connect",
    "EventName": "StartAttachedFileUpload",
    "Description": "Provides a pre-signed Amazon S3 URL in response for uploading your content"
  },
  {
    "API": "connect:StartChatContact",
    "EventSource": "connect",
    "EventName": "StartChatContact",
    "Description": "Initiates a flow to start a new chat for the customer"
  },
  {
    "API": "connect:StartContactEvaluation",
    "EventSource": "connect",
    "EventName": "StartContactEvaluation",
    "Description": "Starts an empty evaluation in the specified Amazon Connect instance, using the given evaluation form for the particular contact"
  },
  {
    "API": "connect:StartContactRecording",
    "EventSource": "connect",
    "EventName": "StartContactRecording",
    "Description": "Starts recording the contact:"
  },
  {
    "API": "connect:StartContactStreaming",
    "EventSource": "connect",
    "EventName": "StartContactStreaming",
    "Description": "Initiates real-time message streaming for a new chat contact"
  },
  {
    "API": "connect:StartOutboundVoiceContact",
    "EventSource": "connect",
    "EventName": "StartOutboundVoiceContact",
    "Description": "Places an outbound call to a contact, and then initiates the flow"
  },
  {
    "API": "connect:StartTaskContact",
    "EventSource": "connect",
    "EventName": "StartTaskContact",
    "Description": "Initiates a flow to start a new task contact"
  },
  {
    "API": "connect:StartWebRtcContact",
    "EventSource": "connect",
    "EventName": "StartWebRtcContact",
    "Description": "Places an inbound in-app, web, or video call to a contact, and then initiates the flow"
  },
  {
    "API": "connect:StopContact",
    "EventSource": "connect",
    "EventName": "StopContact",
    "Description": "Ends the specified contact"
  },
  {
    "API": "connect:StopContactRecording",
    "EventSource": "connect",
    "EventName": "StopContactRecording",
    "Description": "Stops recording a call when a contact is being recorded"
  },
  {
    "API": "connect:StopContactStreaming",
    "EventSource": "connect",
    "EventName": "StopContactStreaming",
    "Description": "Ends message streaming on a specified contact"
  },
  {
    "API": "connect:SubmitContactEvaluation",
    "EventSource": "connect",
    "EventName": "SubmitContactEvaluation",
    "Description": "Submits a contact evaluation in the specified Amazon Connect instance"
  },
  {
    "API": "connect:SuspendContactRecording",
    "EventSource": "connect",
    "EventName": "SuspendContactRecording",
    "Description": "When a contact is being recorded, this API suspends recording whatever is selected in the flow configuration: call, screen, or both"
  },
  {
    "API": "connect:TagContact",
    "EventSource": "connect",
    "EventName": "TagContact",
    "Description": "Adds the specified tags to the contact resource"
  },
  {
    "API": "connect:TagResource",
    "EventSource": "connect",
    "EventName": "TagResource",
    "Description": "Adds the specified tags to the specified resource"
  },
  {
    "API": "connect:TransferContact",
    "EventSource": "connect",
    "EventName": "TransferContact",
    "Description": "Transfers contacts from one agent or queue to another agent or queue at any point after a contact is created"
  },
  {
    "API": "connect:UntagContact",
    "EventSource": "connect",
    "EventName": "UntagContact",
    "Description": "Removes the specified tags from the contact resource"
  },
  {
    "API": "connect:UntagResource",
    "EventSource": "connect",
    "EventName": "UntagResource",
    "Description": "Removes the specified tags from the specified resource"
  },
  {
    "API": "connect:UpdateAgentStatus",
    "EventSource": "connect",
    "EventName": "UpdateAgentStatus",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:UpdateContact",
    "EventSource": "connect",
    "EventName": "UpdateContact",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:UpdateContactAttributes",
    "EventSource": "connect",
    "EventName": "UpdateContactAttributes",
    "Description": "Creates or updates user-defined contact attributes associated with the specified contact"
  },
  {
    "API": "connect:UpdateContactEvaluation",
    "EventSource": "connect",
    "EventName": "UpdateContactEvaluation",
    "Description": "Updates details about a contact evaluation in the specified Amazon Connect instance"
  },
  {
    "API": "connect:UpdateContactFlowContent",
    "EventSource": "connect",
    "EventName": "UpdateContactFlowContent",
    "Description": "Updates the specified flow"
  },
  {
    "API": "connect:UpdateContactFlowMetadata",
    "EventSource": "connect",
    "EventName": "UpdateContactFlowMetadata",
    "Description": "Updates metadata about specified flow"
  },
  {
    "API": "connect:UpdateContactFlowModuleContent",
    "EventSource": "connect",
    "EventName": "UpdateContactFlowModuleContent",
    "Description": "Updates specified flow module for the specified Amazon Connect instance"
  },
  {
    "API": "connect:UpdateContactFlowModuleMetadata",
    "EventSource": "connect",
    "EventName": "UpdateContactFlowModuleMetadata",
    "Description": "Updates metadata about specified flow module"
  },
  {
    "API": "connect:UpdateContactFlowName",
    "EventSource": "connect",
    "EventName": "UpdateContactFlowName",
    "Description": "The name of the flow"
  },
  {
    "API": "connect:UpdateContactRoutingData",
    "EventSource": "connect",
    "EventName": "UpdateContactRoutingData",
    "Description": "Updates routing priority and age on the contact (**QueuePriority** and **QueueTimeAdjustmentInSeconds**)"
  },
  {
    "API": "connect:UpdateContactSchedule",
    "EventSource": "connect",
    "EventName": "UpdateContactSchedule",
    "Description": "Updates the scheduled time of a task contact that is already scheduled"
  },
  {
    "API": "connect:UpdateEvaluationForm",
    "EventSource": "connect",
    "EventName": "UpdateEvaluationForm",
    "Description": "Updates details about a specific evaluation form version in the specified Amazon Connect instance"
  },
  {
    "API": "connect:UpdateHoursOfOperation",
    "EventSource": "connect",
    "EventName": "UpdateHoursOfOperation",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:UpdateInstanceAttribute",
    "EventSource": "connect",
    "EventName": "UpdateInstanceAttribute",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:UpdateInstanceStorageConfig",
    "EventSource": "connect",
    "EventName": "UpdateInstanceStorageConfig",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:UpdateParticipantRoleConfig",
    "EventSource": "connect",
    "EventName": "UpdateParticipantRoleConfig",
    "Description": "Updates timeouts for when human chat participants are to be considered idle, and when agents are automatically disconnected from a chat due to idleness"
  },
  {
    "API": "connect:UpdatePhoneNumber",
    "EventSource": "connect",
    "EventName": "UpdatePhoneNumber",
    "Description": "Updates your claimed phone number from its current Amazon Connect instance or traffic distribution group to another Amazon Connect instance or traffic distribution group in the same Amazon Web Services Region"
  },
  {
    "API": "connect:UpdatePhoneNumberMetadata",
    "EventSource": "connect",
    "EventName": "UpdatePhoneNumberMetadata",
    "Description": "Updates a phone number’s metadata"
  },
  {
    "API": "connect:UpdatePredefinedAttribute",
    "EventSource": "connect",
    "EventName": "UpdatePredefinedAttribute",
    "Description": "Updates a predefined attribute for the specified Amazon Connect instance"
  },
  {
    "API": "connect:UpdatePrompt",
    "EventSource": "connect",
    "EventName": "UpdatePrompt",
    "Description": "Updates a prompt"
  },
  {
    "API": "connect:UpdateQueueHoursOfOperation",
    "EventSource": "connect",
    "EventName": "UpdateQueueHoursOfOperation",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:UpdateQueueMaxContacts",
    "EventSource": "connect",
    "EventName": "UpdateQueueMaxContacts",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:UpdateQueueName",
    "EventSource": "connect",
    "EventName": "UpdateQueueName",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:UpdateQueueOutboundCallerConfig",
    "EventSource": "connect",
    "EventName": "UpdateQueueOutboundCallerConfig",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:UpdateQueueStatus",
    "EventSource": "connect",
    "EventName": "UpdateQueueStatus",
    "Description": "This API is in preview release for Amazon Connect and is subject to change"
  },
  {
    "API": "connect:UpdateQuickConnectConfig",
    "EventSource": "connect",
    "EventName": "UpdateQuickConnectConfig",
    "Description": "Updates the configuration settings for the specified quick connect"
  },
  {
    "API": "connect:UpdateQuickConnectName",
    "EventSource": "connect",
    "EventName": "UpdateQuickConnectName",
    "Description": "Updates the name and description of a quick connect"
  },
  {
    "API": "connect:UpdateRoutingProfileAgentAvailabilityTimer",
    "EventSource": "connect",
    "EventName": "UpdateRoutingProfileAgentAvailabilityTimer",
    "Description": "Whether agents with this routing profile will have their routing order calculated based on *time since their last inbound contact* or *longest idle time*"
  },
  {
    "API": "connect:UpdateRoutingProfileConcurrency",
    "EventSource": "connect",
    "EventName": "UpdateRoutingProfileConcurrency",
    "Description": "Updates the channels that agents can handle in the Contact Control Panel (CCP) for a routing profile"
  },
  {
    "API": "connect:UpdateRoutingProfileDefaultOutboundQueue",
    "EventSource": "connect",
    "EventName": "UpdateRoutingProfileDefaultOutboundQueue",
    "Description": "Updates the default outbound queue of a routing profile"
  },
  {
    "API": "connect:UpdateRoutingProfileName",
    "EventSource": "connect",
    "EventName": "UpdateRoutingProfileName",
    "Description": "Updates the name and description of a routing profile"
  },
  {
    "API": "connect:UpdateRoutingProfileQueues",
    "EventSource": "connect",
    "EventName": "UpdateRoutingProfileQueues",
    "Description": "Updates the properties associated with a set of queues for a routing profile"
  },
  {
    "API": "connect:UpdateRule",
    "EventSource": "connect",
    "EventName": "UpdateRule",
    "Description": "Updates a rule for the specified Amazon Connect instance"
  },
  {
    "API": "connect:UpdateSecurityProfile",
    "EventSource": "connect",
    "EventName": "UpdateSecurityProfile",
    "Description": "Updates a security profile"
  },
  {
    "API": "connect:UpdateTaskTemplate",
    "EventSource": "connect",
    "EventName": "UpdateTaskTemplate",
    "Description": "Updates details about a specific task template in the specified Amazon Connect instance"
  },
  {
    "API": "connect:UpdateTrafficDistribution",
    "EventSource": "connect",
    "EventName": "UpdateTrafficDistribution",
    "Description": "Updates the traffic distribution for a given traffic distribution group"
  },
  {
    "API": "connect:UpdateUserHierarchy",
    "EventSource": "connect",
    "EventName": "UpdateUserHierarchy",
    "Description": "Assigns the specified hierarchy group to the specified user"
  },
  {
    "API": "connect:UpdateUserHierarchyGroupName",
    "EventSource": "connect",
    "EventName": "UpdateUserHierarchyGroupName",
    "Description": "Updates the name of the user hierarchy group"
  },
  {
    "API": "connect:UpdateUserHierarchyStructure",
    "EventSource": "connect",
    "EventName": "UpdateUserHierarchyStructure",
    "Description": "Updates the user hierarchy structure: add, remove, and rename user hierarchy levels"
  },
  {
    "API": "connect:UpdateUserIdentityInfo",
    "EventSource": "connect",
    "EventName": "UpdateUserIdentityInfo",
    "Description": "Updates the identity information for the specified user"
  },
  {
    "API": "connect:UpdateUserPhoneConfig",
    "EventSource": "connect",
    "EventName": "UpdateUserPhoneConfig",
    "Description": "Updates the phone configuration settings for the specified user"
  },
  {
    "API": "connect:UpdateUserProficiencies",
    "EventSource": "connect",
    "EventName": "UpdateUserProficiencies",
    "Description": "Updates the properties associated with the proficiencies of a user"
  },
  {
    "API": "connect:UpdateUserRoutingProfile",
    "EventSource": "connect",
    "EventName": "UpdateUserRoutingProfile",
    "Description": "Assigns the specified routing profile to the specified user"
  },
  {
    "API": "connect:UpdateUserSecurityProfiles",
    "EventSource": "connect",
    "EventName": "UpdateUserSecurityProfiles",
    "Description": "Assigns the specified security profiles to the specified user"
  },
  {
    "API": "connect:UpdateViewContent",
    "EventSource": "connect",
    "EventName": "UpdateViewContent",
    "Description": "Updates the view content of the given view identifier in the specified Amazon Connect instance"
  },
  {
    "API": "connect:UpdateViewMetadata",
    "EventSource": "connect",
    "EventName": "UpdateViewMetadata",
    "Description": "Updates the view metadata"
  },
  {
    "API": "connect-contact-lens:GeneratePresignedUrl",
    "EventSource": "connect-contact-lens",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "connect-contact-lens:ListRealtimeContactAnalysisSegments",
    "EventSource": "connect-contact-lens",
    "EventName": "ListRealtimeContactAnalysisSegments",
    "Description": "Provides a list of analysis segments for a real-time analysis session"
  },
  {
    "API": "connectcampaigns:CreateCampaign",
    "EventSource": "connectcampaigns",
    "EventName": "CreateCampaign",
    "Description": "Creates a campaign for the specified Amazon Connect account"
  },
  {
    "API": "connectcampaigns:DeleteCampaign",
    "EventSource": "connectcampaigns",
    "EventName": "DeleteCampaign",
    "Description": "Deletes a campaign from the specified Amazon Connect account"
  },
  {
    "API": "connectcampaigns:DeleteConnectInstanceConfig",
    "EventSource": "connectcampaigns",
    "EventName": "DeleteConnectInstanceConfig",
    "Description": "Deletes a connect instance config from the specified AWS account"
  },
  {
    "API": "connectcampaigns:DeleteInstanceOnboardingJob",
    "EventSource": "connectcampaigns",
    "EventName": "DeleteInstanceOnboardingJob",
    "Description": "Delete the Connect Campaigns onboarding job for the specified Amazon Connect instance"
  },
  {
    "API": "connectcampaigns:DescribeCampaign",
    "EventSource": "connectcampaigns",
    "EventName": "DescribeCampaign",
    "Description": "Describes the specific campaign"
  },
  {
    "API": "connectcampaigns:GeneratePresignedUrl",
    "EventSource": "connectcampaigns",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "connectcampaigns:GetCampaignState",
    "EventSource": "connectcampaigns",
    "EventName": "GetCampaignState",
    "Description": "Get state of a campaign for the specified Amazon Connect account"
  },
  {
    "API": "connectcampaigns:GetCampaignStateBatch",
    "EventSource": "connectcampaigns",
    "EventName": "GetCampaignStateBatch",
    "Description": "Get state of campaigns for the specified Amazon Connect account"
  },
  {
    "API": "connectcampaigns:GetConnectInstanceConfig",
    "EventSource": "connectcampaigns",
    "EventName": "GetConnectInstanceConfig",
    "Description": "Get the specific Connect instance config"
  },
  {
    "API": "connectcampaigns:GetInstanceOnboardingJobStatus",
    "EventSource": "connectcampaigns",
    "EventName": "GetInstanceOnboardingJobStatus",
    "Description": "Get the specific instance onboarding job status"
  },
  {
    "API": "connectcampaigns:ListCampaigns",
    "EventSource": "connectcampaigns",
    "EventName": "ListCampaigns",
    "Description": "Provides summary information about the campaigns under the specified Amazon Connect account"
  },
  {
    "API": "connectcampaigns:ListTagsForResource",
    "EventSource": "connectcampaigns",
    "EventName": "ListTagsForResource",
    "Description": "List tags for a resource"
  },
  {
    "API": "connectcampaigns:PauseCampaign",
    "EventSource": "connectcampaigns",
    "EventName": "PauseCampaign",
    "Description": "Pauses a campaign for the specified Amazon Connect account"
  },
  {
    "API": "connectcampaigns:PutDialRequestBatch",
    "EventSource": "connectcampaigns",
    "EventName": "PutDialRequestBatch",
    "Description": "Creates dials requests for the specified campaign Amazon Connect account"
  },
  {
    "API": "connectcampaigns:ResumeCampaign",
    "EventSource": "connectcampaigns",
    "EventName": "ResumeCampaign",
    "Description": "Stops a campaign for the specified Amazon Connect account"
  },
  {
    "API": "connectcampaigns:StartCampaign",
    "EventSource": "connectcampaigns",
    "EventName": "StartCampaign",
    "Description": "Starts a campaign for the specified Amazon Connect account"
  },
  {
    "API": "connectcampaigns:StartInstanceOnboardingJob",
    "EventSource": "connectcampaigns",
    "EventName": "StartInstanceOnboardingJob",
    "Description": "Onboard the specific Amazon Connect instance to Connect Campaigns"
  },
  {
    "API": "connectcampaigns:StopCampaign",
    "EventSource": "connectcampaigns",
    "EventName": "StopCampaign",
    "Description": "Stops a campaign for the specified Amazon Connect account"
  },
  {
    "API": "connectcampaigns:TagResource",
    "EventSource": "connectcampaigns",
    "EventName": "TagResource",
    "Description": "Tag a resource"
  },
  {
    "API": "connectcampaigns:UntagResource",
    "EventSource": "connectcampaigns",
    "EventName": "UntagResource",
    "Description": "Untag a resource"
  },
  {
    "API": "connectcampaigns:UpdateCampaignDialerConfig",
    "EventSource": "connectcampaigns",
    "EventName": "UpdateCampaignDialerConfig",
    "Description": "Updates the dialer config of a campaign"
  },
  {
    "API": "connectcampaigns:UpdateCampaignName",
    "EventSource": "connectcampaigns",
    "EventName": "UpdateCampaignName",
    "Description": "Updates the name of a campaign"
  },
  {
    "API": "connectcampaigns:UpdateCampaignOutboundCallConfig",
    "EventSource": "connectcampaigns",
    "EventName": "UpdateCampaignOutboundCallConfig",
    "Description": "Updates the outbound call config of a campaign"
  },
  {
    "API": "connectcases:BatchGetField",
    "EventSource": "connectcases",
    "EventName": "BatchGetField",
    "Description": "Returns the description for the list of fields in the request parameters"
  },
  {
    "API": "connectcases:BatchPutFieldOptions",
    "EventSource": "connectcases",
    "EventName": "BatchPutFieldOptions",
    "Description": "Creates and updates a set of field options for a single select field in a Cases domain"
  },
  {
    "API": "connectcases:CreateCase",
    "EventSource": "connectcases",
    "EventName": "CreateCase",
    "Description": ""
  },
  {
    "API": "connectcases:CreateDomain",
    "EventSource": "connectcases",
    "EventName": "CreateDomain",
    "Description": "Creates a domain, which is a container for all case data, such as cases, fields, templates and layouts"
  },
  {
    "API": "connectcases:CreateField",
    "EventSource": "connectcases",
    "EventName": "CreateField",
    "Description": "Creates a field in the Cases domain"
  },
  {
    "API": "connectcases:CreateLayout",
    "EventSource": "connectcases",
    "EventName": "CreateLayout",
    "Description": "Creates a layout in the Cases domain"
  },
  {
    "API": "connectcases:CreateRelatedItem",
    "EventSource": "connectcases",
    "EventName": "CreateRelatedItem",
    "Description": "Creates a related item (comments, tasks, and contacts) and associates it with a case"
  },
  {
    "API": "connectcases:CreateTemplate",
    "EventSource": "connectcases",
    "EventName": "CreateTemplate",
    "Description": "Creates a template in the Cases domain"
  },
  {
    "API": "connectcases:DeleteDomain",
    "EventSource": "connectcases",
    "EventName": "DeleteDomain",
    "Description": "Deletes a Cases domain"
  },
  {
    "API": "connectcases:DeleteField",
    "EventSource": "connectcases",
    "EventName": "DeleteField",
    "Description": "Deletes a field from a cases template"
  },
  {
    "API": "connectcases:DeleteLayout",
    "EventSource": "connectcases",
    "EventName": "DeleteLayout",
    "Description": "Deletes a layout from a cases template"
  },
  {
    "API": "connectcases:DeleteTemplate",
    "EventSource": "connectcases",
    "EventName": "DeleteTemplate",
    "Description": "Deletes a cases template"
  },
  {
    "API": "connectcases:GeneratePresignedUrl",
    "EventSource": "connectcases",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "connectcases:GetCase",
    "EventSource": "connectcases",
    "EventName": "GetCase",
    "Description": "Returns information about a specific case if it exists"
  },
  {
    "API": "connectcases:GetCaseAuditEvents",
    "EventSource": "connectcases",
    "EventName": "GetCaseAuditEvents",
    "Description": "Returns the audit history about a specific case if it exists"
  },
  {
    "API": "connectcases:GetCaseEventConfiguration",
    "EventSource": "connectcases",
    "EventName": "GetCaseEventConfiguration",
    "Description": "Returns the case event publishing configuration"
  },
  {
    "API": "connectcases:GetDomain",
    "EventSource": "connectcases",
    "EventName": "GetDomain",
    "Description": "Returns information about a specific domain if it exists"
  },
  {
    "API": "connectcases:GetLayout",
    "EventSource": "connectcases",
    "EventName": "GetLayout",
    "Description": "Returns the details for the requested layout"
  },
  {
    "API": "connectcases:GetTemplate",
    "EventSource": "connectcases",
    "EventName": "GetTemplate",
    "Description": "Returns the details for the requested template"
  },
  {
    "API": "connectcases:ListCasesForContact",
    "EventSource": "connectcases",
    "EventName": "ListCasesForContact",
    "Description": "Lists cases for a given contact"
  },
  {
    "API": "connectcases:ListDomains",
    "EventSource": "connectcases",
    "EventName": "ListDomains",
    "Description": "Lists all cases domains in the Amazon Web Services account"
  },
  {
    "API": "connectcases:ListFieldOptions",
    "EventSource": "connectcases",
    "EventName": "ListFieldOptions",
    "Description": "Lists all of the field options for a field identifier in the domain"
  },
  {
    "API": "connectcases:ListFields",
    "EventSource": "connectcases",
    "EventName": "ListFields",
    "Description": "Lists all fields in a Cases domain"
  },
  {
    "API": "connectcases:ListLayouts",
    "EventSource": "connectcases",
    "EventName": "ListLayouts",
    "Description": "Lists all layouts in the given cases domain"
  },
  {
    "API": "connectcases:ListTagsForResource",
    "EventSource": "connectcases",
    "EventName": "ListTagsForResource",
    "Description": "Lists tags for a resource"
  },
  {
    "API": "connectcases:ListTemplates",
    "EventSource": "connectcases",
    "EventName": "ListTemplates",
    "Description": "Lists all of the templates in a Cases domain"
  },
  {
    "API": "connectcases:PutCaseEventConfiguration",
    "EventSource": "connectcases",
    "EventName": "PutCaseEventConfiguration",
    "Description": "Adds case event publishing configuration"
  },
  {
    "API": "connectcases:SearchCases",
    "EventSource": "connectcases",
    "EventName": "SearchCases",
    "Description": "Searches for cases within their associated Cases domain"
  },
  {
    "API": "connectcases:SearchRelatedItems",
    "EventSource": "connectcases",
    "EventName": "SearchRelatedItems",
    "Description": "Searches for related items that are associated with a case"
  },
  {
    "API": "connectcases:TagResource",
    "EventSource": "connectcases",
    "EventName": "TagResource",
    "Description": "Adds tags to a resource"
  },
  {
    "API": "connectcases:UntagResource",
    "EventSource": "connectcases",
    "EventName": "UntagResource",
    "Description": "Untags a resource"
  },
  {
    "API": "connectcases:UpdateCase",
    "EventSource": "connectcases",
    "EventName": "UpdateCase",
    "Description": ""
  },
  {
    "API": "connectcases:UpdateField",
    "EventSource": "connectcases",
    "EventName": "UpdateField",
    "Description": "Updates the properties of an existing field"
  },
  {
    "API": "connectcases:UpdateLayout",
    "EventSource": "connectcases",
    "EventName": "UpdateLayout",
    "Description": "Updates the attributes of an existing layout"
  },
  {
    "API": "connectcases:UpdateTemplate",
    "EventSource": "connectcases",
    "EventName": "UpdateTemplate",
    "Description": "Updates the attributes of an existing template"
  },
  {
    "API": "connectparticipant:CompleteAttachmentUpload",
    "EventSource": "connectparticipant",
    "EventName": "CompleteAttachmentUpload",
    "Description": "Allows you to confirm that the attachment has been uploaded using the pre-signed URL provided in StartAttachmentUpload API"
  },
  {
    "API": "connectparticipant:CreateParticipantConnection",
    "EventSource": "connectparticipant",
    "EventName": "CreateParticipantConnection",
    "Description": "Creates the participant's connection"
  },
  {
    "API": "connectparticipant:DescribeView",
    "EventSource": "connectparticipant",
    "EventName": "DescribeView",
    "Description": "Retrieves the view for the specified view token"
  },
  {
    "API": "connectparticipant:DisconnectParticipant",
    "EventSource": "connectparticipant",
    "EventName": "DisconnectParticipant",
    "Description": "Disconnects a participant"
  },
  {
    "API": "connectparticipant:GeneratePresignedUrl",
    "EventSource": "connectparticipant",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "connectparticipant:GetAttachment",
    "EventSource": "connectparticipant",
    "EventName": "GetAttachment",
    "Description": "Provides a pre-signed URL for download of a completed attachment"
  },
  {
    "API": "connectparticipant:GetTranscript",
    "EventSource": "connectparticipant",
    "EventName": "GetTranscript",
    "Description": "Retrieves a transcript of the session, including details about any attachments"
  },
  {
    "API": "connectparticipant:SendEvent",
    "EventSource": "connectparticipant",
    "EventName": "SendEvent",
    "Description": ""
  },
  {
    "API": "connectparticipant:SendMessage",
    "EventSource": "connectparticipant",
    "EventName": "SendMessage",
    "Description": "Sends a message"
  },
  {
    "API": "connectparticipant:StartAttachmentUpload",
    "EventSource": "connectparticipant",
    "EventName": "StartAttachmentUpload",
    "Description": "Provides a pre-signed Amazon S3 URL in response for uploading the file directly to S3"
  },
  {
    "API": "controlcatalog:GeneratePresignedUrl",
    "EventSource": "controlcatalog",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "controlcatalog:ListCommonControls",
    "EventSource": "controlcatalog",
    "EventName": "ListCommonControls",
    "Description": "Returns a paginated list of common controls from the Amazon Web Services Control Catalog"
  },
  {
    "API": "controlcatalog:ListDomains",
    "EventSource": "controlcatalog",
    "EventName": "ListDomains",
    "Description": "Returns a paginated list of domains from the Amazon Web Services Control Catalog"
  },
  {
    "API": "controlcatalog:ListObjectives",
    "EventSource": "controlcatalog",
    "EventName": "ListObjectives",
    "Description": "Returns a paginated list of objectives from the Amazon Web Services Control Catalog"
  },
  {
    "API": "controltower:CreateLandingZone",
    "EventSource": "controltower",
    "EventName": "CreateLandingZone",
    "Description": "Creates a new landing zone"
  },
  {
    "API": "controltower:DeleteLandingZone",
    "EventSource": "controltower",
    "EventName": "DeleteLandingZone",
    "Description": "Decommissions a landing zone"
  },
  {
    "API": "controltower:DisableBaseline",
    "EventSource": "controltower",
    "EventName": "DisableBaseline",
    "Description": "Disable an ``EnabledBaseline`` resource on the specified Target"
  },
  {
    "API": "controltower:DisableControl",
    "EventSource": "controltower",
    "EventName": "DisableControl",
    "Description": "This API call turns off a control"
  },
  {
    "API": "controltower:EnableBaseline",
    "EventSource": "controltower",
    "EventName": "EnableBaseline",
    "Description": "Enable (apply) a ``Baseline`` to a Target"
  },
  {
    "API": "controltower:EnableControl",
    "EventSource": "controltower",
    "EventName": "EnableControl",
    "Description": "This API call activates a control"
  },
  {
    "API": "controltower:GeneratePresignedUrl",
    "EventSource": "controltower",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "controltower:GetBaseline",
    "EventSource": "controltower",
    "EventName": "GetBaseline",
    "Description": "Retrieve details about an existing ``Baseline`` resource by specifying its identifier"
  },
  {
    "API": "controltower:GetBaselineOperation",
    "EventSource": "controltower",
    "EventName": "GetBaselineOperation",
    "Description": "Returns the details of an asynchronous baseline operation, as initiated by any of these APIs: ``EnableBaseline``, ``DisableBaseline``, ``UpdateEnabledBaseline``, ``ResetEnabledBaseline``"
  },
  {
    "API": "controltower:GetControlOperation",
    "EventSource": "controltower",
    "EventName": "GetControlOperation",
    "Description": "Returns the status of a particular ``EnableControl`` or ``DisableControl`` operation"
  },
  {
    "API": "controltower:GetEnabledBaseline",
    "EventSource": "controltower",
    "EventName": "GetEnabledBaseline",
    "Description": "Retrieve details of an ``EnabledBaseline`` resource by specifying its identifier"
  },
  {
    "API": "controltower:GetEnabledControl",
    "EventSource": "controltower",
    "EventName": "GetEnabledControl",
    "Description": "Retrieves details about an enabled control"
  },
  {
    "API": "controltower:GetLandingZone",
    "EventSource": "controltower",
    "EventName": "GetLandingZone",
    "Description": "Returns details about the landing zone"
  },
  {
    "API": "controltower:GetLandingZoneOperation",
    "EventSource": "controltower",
    "EventName": "GetLandingZoneOperation",
    "Description": "Returns the status of the specified landing zone operation"
  },
  {
    "API": "controltower:ListBaselines",
    "EventSource": "controltower",
    "EventName": "ListBaselines",
    "Description": "Returns a summary list of all available baselines"
  },
  {
    "API": "controltower:ListControlOperations",
    "EventSource": "controltower",
    "EventName": "ListControlOperations",
    "Description": "Provides a list of operations in progress or queued"
  },
  {
    "API": "controltower:ListEnabledBaselines",
    "EventSource": "controltower",
    "EventName": "ListEnabledBaselines",
    "Description": "Returns a list of summaries describing ``EnabledBaseline`` resources"
  },
  {
    "API": "controltower:ListEnabledControls",
    "EventSource": "controltower",
    "EventName": "ListEnabledControls",
    "Description": "Lists the controls enabled by Amazon Web Services Control Tower on the specified organizational unit and the accounts it contains"
  },
  {
    "API": "controltower:ListLandingZones",
    "EventSource": "controltower",
    "EventName": "ListLandingZones",
    "Description": "Returns the landing zone ARN for the landing zone deployed in your managed account"
  },
  {
    "API": "controltower:ListTagsForResource",
    "EventSource": "controltower",
    "EventName": "ListTagsForResource",
    "Description": "Returns a list of tags associated with the resource"
  },
  {
    "API": "controltower:ResetEnabledBaseline",
    "EventSource": "controltower",
    "EventName": "ResetEnabledBaseline",
    "Description": "Re-enables an ``EnabledBaseline`` resource"
  },
  {
    "API": "controltower:ResetLandingZone",
    "EventSource": "controltower",
    "EventName": "ResetLandingZone",
    "Description": "This API call resets a landing zone"
  },
  {
    "API": "controltower:TagResource",
    "EventSource": "controltower",
    "EventName": "TagResource",
    "Description": "Applies tags to a resource"
  },
  {
    "API": "controltower:UntagResource",
    "EventSource": "controltower",
    "EventName": "UntagResource",
    "Description": "Removes tags from a resource"
  },
  {
    "API": "controltower:UpdateEnabledBaseline",
    "EventSource": "controltower",
    "EventName": "UpdateEnabledBaseline",
    "Description": "Updates an ``EnabledBaseline`` resource's applied parameters or version"
  },
  {
    "API": "controltower:UpdateEnabledControl",
    "EventSource": "controltower",
    "EventName": "UpdateEnabledControl",
    "Description": "Updates the configuration of an already enabled control"
  },
  {
    "API": "controltower:UpdateLandingZone",
    "EventSource": "controltower",
    "EventName": "UpdateLandingZone",
    "Description": "This API call updates the landing zone"
  },
  {
    "API": "cost-optimization-hub:GeneratePresignedUrl",
    "EventSource": "cost-optimization-hub",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "cost-optimization-hub:GetPreferences",
    "EventSource": "cost-optimization-hub",
    "EventName": "GetPreferences",
    "Description": "Returns a set of preferences for an account in order to add account-specific preferences into the service"
  },
  {
    "API": "cost-optimization-hub:GetRecommendation",
    "EventSource": "cost-optimization-hub",
    "EventName": "GetRecommendation",
    "Description": "Returns both the current and recommended resource configuration and the estimated cost impact for a recommendation"
  },
  {
    "API": "cost-optimization-hub:ListEnrollmentStatuses",
    "EventSource": "cost-optimization-hub",
    "EventName": "ListEnrollmentStatuses",
    "Description": "Retrieves the enrollment status for an account"
  },
  {
    "API": "cost-optimization-hub:ListRecommendationSummaries",
    "EventSource": "cost-optimization-hub",
    "EventName": "ListRecommendationSummaries",
    "Description": "Returns a concise representation of savings estimates for resources"
  },
  {
    "API": "cost-optimization-hub:ListRecommendations",
    "EventSource": "cost-optimization-hub",
    "EventName": "ListRecommendations",
    "Description": "Returns a list of recommendations"
  },
  {
    "API": "cost-optimization-hub:UpdateEnrollmentStatus",
    "EventSource": "cost-optimization-hub",
    "EventName": "UpdateEnrollmentStatus",
    "Description": "Updates the enrollment (opt in and opt out) status of an account to the Cost Optimization Hub service"
  },
  {
    "API": "cost-optimization-hub:UpdatePreferences",
    "EventSource": "cost-optimization-hub",
    "EventName": "UpdatePreferences",
    "Description": "Updates a set of preferences for an account in order to add account-specific preferences into the service"
  },
  {
    "API": "cur:DeleteReportDefinition",
    "EventSource": "cur",
    "EventName": "DeleteReportDefinition",
    "Description": "Deletes the specified report"
  },
  {
    "API": "cur:DescribeReportDefinitions",
    "EventSource": "cur",
    "EventName": "DescribeReportDefinitions",
    "Description": "Lists the Amazon Web Services Cost and Usage Report available to this account"
  },
  {
    "API": "cur:GeneratePresignedUrl",
    "EventSource": "cur",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "cur:ListTagsForResource",
    "EventSource": "cur",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags associated with the specified report definition"
  },
  {
    "API": "cur:ModifyReportDefinition",
    "EventSource": "cur",
    "EventName": "ModifyReportDefinition",
    "Description": "Allows you to programmatically update your report preferences"
  },
  {
    "API": "cur:PutReportDefinition",
    "EventSource": "cur",
    "EventName": "PutReportDefinition",
    "Description": "Creates a new report using the description that you provide"
  },
  {
    "API": "cur:TagResource",
    "EventSource": "cur",
    "EventName": "TagResource",
    "Description": "Associates a set of tags with a report definition"
  },
  {
    "API": "cur:UntagResource",
    "EventSource": "cur",
    "EventName": "UntagResource",
    "Description": "Disassociates a set of tags from a report definition"
  },
  {
    "API": "customer-profiles:AddProfileKey",
    "EventSource": "customer-profiles",
    "EventName": "AddProfileKey",
    "Description": "Associates a new key value with a specific profile, such as a Contact Record ContactId"
  },
  {
    "API": "customer-profiles:CreateCalculatedAttributeDefinition",
    "EventSource": "customer-profiles",
    "EventName": "CreateCalculatedAttributeDefinition",
    "Description": "Creates a new calculated attribute definition"
  },
  {
    "API": "customer-profiles:CreateDomain",
    "EventSource": "customer-profiles",
    "EventName": "CreateDomain",
    "Description": "Creates a domain, which is a container for all customer data, such as customer profile attributes, object types, profile keys, and encryption keys"
  },
  {
    "API": "customer-profiles:CreateEventStream",
    "EventSource": "customer-profiles",
    "EventName": "CreateEventStream",
    "Description": "Creates an event stream, which is a subscription to real-time events, such as when profiles are created and updated through Amazon Connect Customer Profiles"
  },
  {
    "API": "customer-profiles:CreateIntegrationWorkflow",
    "EventSource": "customer-profiles",
    "EventName": "CreateIntegrationWorkflow",
    "Description": "Creates an integration workflow"
  },
  {
    "API": "customer-profiles:CreateProfile",
    "EventSource": "customer-profiles",
    "EventName": "CreateProfile",
    "Description": "Creates a standard profile"
  },
  {
    "API": "customer-profiles:DeleteCalculatedAttributeDefinition",
    "EventSource": "customer-profiles",
    "EventName": "DeleteCalculatedAttributeDefinition",
    "Description": "Deletes an existing calculated attribute definition"
  },
  {
    "API": "customer-profiles:DeleteDomain",
    "EventSource": "customer-profiles",
    "EventName": "DeleteDomain",
    "Description": "Deletes a specific domain and all of its customer data, such as customer profile attributes and their related objects"
  },
  {
    "API": "customer-profiles:DeleteEventStream",
    "EventSource": "customer-profiles",
    "EventName": "DeleteEventStream",
    "Description": "Disables and deletes the specified event stream"
  },
  {
    "API": "customer-profiles:DeleteIntegration",
    "EventSource": "customer-profiles",
    "EventName": "DeleteIntegration",
    "Description": "Removes an integration from a specific domain"
  },
  {
    "API": "customer-profiles:DeleteProfile",
    "EventSource": "customer-profiles",
    "EventName": "DeleteProfile",
    "Description": "Deletes the standard customer profile and all data pertaining to the profile"
  },
  {
    "API": "customer-profiles:DeleteProfileKey",
    "EventSource": "customer-profiles",
    "EventName": "DeleteProfileKey",
    "Description": "Removes a searchable key from a customer profile"
  },
  {
    "API": "customer-profiles:DeleteProfileObject",
    "EventSource": "customer-profiles",
    "EventName": "DeleteProfileObject",
    "Description": "Removes an object associated with a profile of a given ProfileObjectType"
  },
  {
    "API": "customer-profiles:DeleteProfileObjectType",
    "EventSource": "customer-profiles",
    "EventName": "DeleteProfileObjectType",
    "Description": "Removes a ProfileObjectType from a specific domain as well as removes all the ProfileObjects of that type"
  },
  {
    "API": "customer-profiles:DeleteWorkflow",
    "EventSource": "customer-profiles",
    "EventName": "DeleteWorkflow",
    "Description": "Deletes the specified workflow and all its corresponding resources"
  },
  {
    "API": "customer-profiles:DetectProfileObjectType",
    "EventSource": "customer-profiles",
    "EventName": "DetectProfileObjectType",
    "Description": "The process of detecting profile object type mapping by using given objects"
  },
  {
    "API": "customer-profiles:GeneratePresignedUrl",
    "EventSource": "customer-profiles",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "customer-profiles:GetAutoMergingPreview",
    "EventSource": "customer-profiles",
    "EventName": "GetAutoMergingPreview",
    "Description": "Tests the auto-merging settings of your Identity Resolution Job without merging your data"
  },
  {
    "API": "customer-profiles:GetCalculatedAttributeDefinition",
    "EventSource": "customer-profiles",
    "EventName": "GetCalculatedAttributeDefinition",
    "Description": "Provides more information on a calculated attribute definition for Customer Profiles"
  },
  {
    "API": "customer-profiles:GetCalculatedAttributeForProfile",
    "EventSource": "customer-profiles",
    "EventName": "GetCalculatedAttributeForProfile",
    "Description": "Retrieve a calculated attribute for a customer profile"
  },
  {
    "API": "customer-profiles:GetDomain",
    "EventSource": "customer-profiles",
    "EventName": "GetDomain",
    "Description": "Returns information about a specific domain"
  },
  {
    "API": "customer-profiles:GetEventStream",
    "EventSource": "customer-profiles",
    "EventName": "GetEventStream",
    "Description": "Returns information about the specified event stream in a specific domain"
  },
  {
    "API": "customer-profiles:GetIdentityResolutionJob",
    "EventSource": "customer-profiles",
    "EventName": "GetIdentityResolutionJob",
    "Description": "Returns information about an Identity Resolution Job in a specific domain"
  },
  {
    "API": "customer-profiles:GetIntegration",
    "EventSource": "customer-profiles",
    "EventName": "GetIntegration",
    "Description": "Returns an integration for a domain"
  },
  {
    "API": "customer-profiles:GetMatches",
    "EventSource": "customer-profiles",
    "EventName": "GetMatches",
    "Description": "Before calling this API, use `CreateDomain <https://docs"
  },
  {
    "API": "customer-profiles:GetProfileObjectType",
    "EventSource": "customer-profiles",
    "EventName": "GetProfileObjectType",
    "Description": "Returns the object types for a specific domain"
  },
  {
    "API": "customer-profiles:GetProfileObjectTypeTemplate",
    "EventSource": "customer-profiles",
    "EventName": "GetProfileObjectTypeTemplate",
    "Description": "Returns the template information for a specific object type"
  },
  {
    "API": "customer-profiles:GetSimilarProfiles",
    "EventSource": "customer-profiles",
    "EventName": "GetSimilarProfiles",
    "Description": "Returns a set of profiles that belong to the same matching group using the ``matchId`` or ``profileId``"
  },
  {
    "API": "customer-profiles:GetWorkflow",
    "EventSource": "customer-profiles",
    "EventName": "GetWorkflow",
    "Description": "Get details of specified workflow"
  },
  {
    "API": "customer-profiles:GetWorkflowSteps",
    "EventSource": "customer-profiles",
    "EventName": "GetWorkflowSteps",
    "Description": "Get granular list of steps in workflow"
  },
  {
    "API": "customer-profiles:ListAccountIntegrations",
    "EventSource": "customer-profiles",
    "EventName": "ListAccountIntegrations",
    "Description": "Lists all of the integrations associated to a specific URI in the AWS account"
  },
  {
    "API": "customer-profiles:ListCalculatedAttributeDefinitions",
    "EventSource": "customer-profiles",
    "EventName": "ListCalculatedAttributeDefinitions",
    "Description": "Lists calculated attribute definitions for Customer Profiles"
  },
  {
    "API": "customer-profiles:ListCalculatedAttributesForProfile",
    "EventSource": "customer-profiles",
    "EventName": "ListCalculatedAttributesForProfile",
    "Description": "Retrieve a list of calculated attributes for a customer profile"
  },
  {
    "API": "customer-profiles:ListDomains",
    "EventSource": "customer-profiles",
    "EventName": "ListDomains",
    "Description": "Returns a list of all the domains for an AWS account that have been created"
  },
  {
    "API": "customer-profiles:ListEventStreams",
    "EventSource": "customer-profiles",
    "EventName": "ListEventStreams",
    "Description": "Returns a list of all the event streams in a specific domain"
  },
  {
    "API": "customer-profiles:ListIdentityResolutionJobs",
    "EventSource": "customer-profiles",
    "EventName": "ListIdentityResolutionJobs",
    "Description": "Lists all of the Identity Resolution Jobs in your domain"
  },
  {
    "API": "customer-profiles:ListIntegrations",
    "EventSource": "customer-profiles",
    "EventName": "ListIntegrations",
    "Description": "Lists all of the integrations in your domain"
  },
  {
    "API": "customer-profiles:ListProfileObjectTypeTemplates",
    "EventSource": "customer-profiles",
    "EventName": "ListProfileObjectTypeTemplates",
    "Description": "Lists all of the template information for object types"
  },
  {
    "API": "customer-profiles:ListProfileObjectTypes",
    "EventSource": "customer-profiles",
    "EventName": "ListProfileObjectTypes",
    "Description": "Lists all of the templates available within the service"
  },
  {
    "API": "customer-profiles:ListProfileObjects",
    "EventSource": "customer-profiles",
    "EventName": "ListProfileObjects",
    "Description": "Returns a list of objects associated with a profile of a given ProfileObjectType"
  },
  {
    "API": "customer-profiles:ListRuleBasedMatches",
    "EventSource": "customer-profiles",
    "EventName": "ListRuleBasedMatches",
    "Description": "Returns a set of ``MatchIds`` that belong to the given domain"
  },
  {
    "API": "customer-profiles:ListTagsForResource",
    "EventSource": "customer-profiles",
    "EventName": "ListTagsForResource",
    "Description": "Displays the tags associated with an Amazon Connect Customer Profiles resource"
  },
  {
    "API": "customer-profiles:ListWorkflows",
    "EventSource": "customer-profiles",
    "EventName": "ListWorkflows",
    "Description": "Query to list all workflows"
  },
  {
    "API": "customer-profiles:MergeProfiles",
    "EventSource": "customer-profiles",
    "EventName": "MergeProfiles",
    "Description": "Runs an AWS Lambda job that does the following:"
  },
  {
    "API": "customer-profiles:PutIntegration",
    "EventSource": "customer-profiles",
    "EventName": "PutIntegration",
    "Description": "Adds an integration between the service and a third-party service, which includes Amazon AppFlow and Amazon Connect"
  },
  {
    "API": "customer-profiles:PutProfileObject",
    "EventSource": "customer-profiles",
    "EventName": "PutProfileObject",
    "Description": "Adds additional objects to customer profiles of a given ObjectType"
  },
  {
    "API": "customer-profiles:PutProfileObjectType",
    "EventSource": "customer-profiles",
    "EventName": "PutProfileObjectType",
    "Description": "Defines a ProfileObjectType"
  },
  {
    "API": "customer-profiles:SearchProfiles",
    "EventSource": "customer-profiles",
    "EventName": "SearchProfiles",
    "Description": "Searches for profiles within a specific domain using one or more predefined search keys (e"
  },
  {
    "API": "customer-profiles:TagResource",
    "EventSource": "customer-profiles",
    "EventName": "TagResource",
    "Description": "Assigns one or more tags (key-value pairs) to the specified Amazon Connect Customer Profiles resource"
  },
  {
    "API": "customer-profiles:UntagResource",
    "EventSource": "customer-profiles",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags from the specified Amazon Connect Customer Profiles resource"
  },
  {
    "API": "customer-profiles:UpdateCalculatedAttributeDefinition",
    "EventSource": "customer-profiles",
    "EventName": "UpdateCalculatedAttributeDefinition",
    "Description": "Updates an existing calculated attribute definition"
  },
  {
    "API": "customer-profiles:UpdateDomain",
    "EventSource": "customer-profiles",
    "EventName": "UpdateDomain",
    "Description": "Updates the properties of a domain, including creating or selecting a dead letter queue or an encryption key"
  },
  {
    "API": "customer-profiles:UpdateProfile",
    "EventSource": "customer-profiles",
    "EventName": "UpdateProfile",
    "Description": "Updates the properties of a profile"
  },
  {
    "API": "databrew:BatchDeleteRecipeVersion",
    "EventSource": "databrew",
    "EventName": "BatchDeleteRecipeVersion",
    "Description": "Deletes one or more versions of a recipe at a time"
  },
  {
    "API": "databrew:CreateDataset",
    "EventSource": "databrew",
    "EventName": "CreateDataset",
    "Description": "Creates a new DataBrew dataset"
  },
  {
    "API": "databrew:CreateProfileJob",
    "EventSource": "databrew",
    "EventName": "CreateProfileJob",
    "Description": "Creates a new job to analyze a dataset and create its data profile"
  },
  {
    "API": "databrew:CreateProject",
    "EventSource": "databrew",
    "EventName": "CreateProject",
    "Description": "Creates a new DataBrew project"
  },
  {
    "API": "databrew:CreateRecipe",
    "EventSource": "databrew",
    "EventName": "CreateRecipe",
    "Description": "Creates a new DataBrew recipe"
  },
  {
    "API": "databrew:CreateRecipeJob",
    "EventSource": "databrew",
    "EventName": "CreateRecipeJob",
    "Description": "Creates a new job to transform input data, using steps defined in an existing Glue DataBrew recipe"
  },
  {
    "API": "databrew:CreateRuleset",
    "EventSource": "databrew",
    "EventName": "CreateRuleset",
    "Description": "Creates a new ruleset that can be used in a profile job to validate the data quality of a dataset"
  },
  {
    "API": "databrew:CreateSchedule",
    "EventSource": "databrew",
    "EventName": "CreateSchedule",
    "Description": "Creates a new schedule for one or more DataBrew jobs"
  },
  {
    "API": "databrew:DeleteDataset",
    "EventSource": "databrew",
    "EventName": "DeleteDataset",
    "Description": "Deletes a dataset from DataBrew"
  },
  {
    "API": "databrew:DeleteJob",
    "EventSource": "databrew",
    "EventName": "DeleteJob",
    "Description": "Deletes the specified DataBrew job"
  },
  {
    "API": "databrew:DeleteProject",
    "EventSource": "databrew",
    "EventName": "DeleteProject",
    "Description": "Deletes an existing DataBrew project"
  },
  {
    "API": "databrew:DeleteRecipeVersion",
    "EventSource": "databrew",
    "EventName": "DeleteRecipeVersion",
    "Description": "Deletes a single version of a DataBrew recipe"
  },
  {
    "API": "databrew:DeleteRuleset",
    "EventSource": "databrew",
    "EventName": "DeleteRuleset",
    "Description": "Deletes a ruleset"
  },
  {
    "API": "databrew:DeleteSchedule",
    "EventSource": "databrew",
    "EventName": "DeleteSchedule",
    "Description": "Deletes the specified DataBrew schedule"
  },
  {
    "API": "databrew:DescribeDataset",
    "EventSource": "databrew",
    "EventName": "DescribeDataset",
    "Description": "Returns the definition of a specific DataBrew dataset"
  },
  {
    "API": "databrew:DescribeJob",
    "EventSource": "databrew",
    "EventName": "DescribeJob",
    "Description": "Returns the definition of a specific DataBrew job"
  },
  {
    "API": "databrew:DescribeJobRun",
    "EventSource": "databrew",
    "EventName": "DescribeJobRun",
    "Description": "Represents one run of a DataBrew job"
  },
  {
    "API": "databrew:DescribeProject",
    "EventSource": "databrew",
    "EventName": "DescribeProject",
    "Description": "Returns the definition of a specific DataBrew project"
  },
  {
    "API": "databrew:DescribeRecipe",
    "EventSource": "databrew",
    "EventName": "DescribeRecipe",
    "Description": "Returns the definition of a specific DataBrew recipe corresponding to a particular version"
  },
  {
    "API": "databrew:DescribeRuleset",
    "EventSource": "databrew",
    "EventName": "DescribeRuleset",
    "Description": "Retrieves detailed information about the ruleset"
  },
  {
    "API": "databrew:DescribeSchedule",
    "EventSource": "databrew",
    "EventName": "DescribeSchedule",
    "Description": "Returns the definition of a specific DataBrew schedule"
  },
  {
    "API": "databrew:GeneratePresignedUrl",
    "EventSource": "databrew",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "databrew:ListDatasets",
    "EventSource": "databrew",
    "EventName": "ListDatasets",
    "Description": "Lists all of the DataBrew datasets"
  },
  {
    "API": "databrew:ListJobRuns",
    "EventSource": "databrew",
    "EventName": "ListJobRuns",
    "Description": "Lists all of the previous runs of a particular DataBrew job"
  },
  {
    "API": "databrew:ListJobs",
    "EventSource": "databrew",
    "EventName": "ListJobs",
    "Description": "Lists all of the DataBrew jobs that are defined"
  },
  {
    "API": "databrew:ListProjects",
    "EventSource": "databrew",
    "EventName": "ListProjects",
    "Description": "Lists all of the DataBrew projects that are defined"
  },
  {
    "API": "databrew:ListRecipeVersions",
    "EventSource": "databrew",
    "EventName": "ListRecipeVersions",
    "Description": "Lists the versions of a particular DataBrew recipe, except for ``LATEST_WORKING``"
  },
  {
    "API": "databrew:ListRecipes",
    "EventSource": "databrew",
    "EventName": "ListRecipes",
    "Description": "Lists all of the DataBrew recipes that are defined"
  },
  {
    "API": "databrew:ListRulesets",
    "EventSource": "databrew",
    "EventName": "ListRulesets",
    "Description": "List all rulesets available in the current account or rulesets associated with a specific resource (dataset)"
  },
  {
    "API": "databrew:ListSchedules",
    "EventSource": "databrew",
    "EventName": "ListSchedules",
    "Description": "Lists the DataBrew schedules that are defined"
  },
  {
    "API": "databrew:ListTagsForResource",
    "EventSource": "databrew",
    "EventName": "ListTagsForResource",
    "Description": "Lists all the tags for a DataBrew resource"
  },
  {
    "API": "databrew:PublishRecipe",
    "EventSource": "databrew",
    "EventName": "PublishRecipe",
    "Description": "Publishes a new version of a DataBrew recipe"
  },
  {
    "API": "databrew:SendProjectSessionAction",
    "EventSource": "databrew",
    "EventName": "SendProjectSessionAction",
    "Description": "Performs a recipe step within an interactive DataBrew session that's currently open"
  },
  {
    "API": "databrew:StartJobRun",
    "EventSource": "databrew",
    "EventName": "StartJobRun",
    "Description": "Runs a DataBrew job"
  },
  {
    "API": "databrew:StartProjectSession",
    "EventSource": "databrew",
    "EventName": "StartProjectSession",
    "Description": "Creates an interactive session, enabling you to manipulate data in a DataBrew project"
  },
  {
    "API": "databrew:StopJobRun",
    "EventSource": "databrew",
    "EventName": "StopJobRun",
    "Description": "Stops a particular run of a job"
  },
  {
    "API": "databrew:TagResource",
    "EventSource": "databrew",
    "EventName": "TagResource",
    "Description": "Adds metadata tags to a DataBrew resource, such as a dataset, project, recipe, job, or schedule"
  },
  {
    "API": "databrew:UntagResource",
    "EventSource": "databrew",
    "EventName": "UntagResource",
    "Description": "Removes metadata tags from a DataBrew resource"
  },
  {
    "API": "databrew:UpdateDataset",
    "EventSource": "databrew",
    "EventName": "UpdateDataset",
    "Description": "Modifies the definition of an existing DataBrew dataset"
  },
  {
    "API": "databrew:UpdateProfileJob",
    "EventSource": "databrew",
    "EventName": "UpdateProfileJob",
    "Description": "Modifies the definition of an existing profile job"
  },
  {
    "API": "databrew:UpdateProject",
    "EventSource": "databrew",
    "EventName": "UpdateProject",
    "Description": "Modifies the definition of an existing DataBrew project"
  },
  {
    "API": "databrew:UpdateRecipe",
    "EventSource": "databrew",
    "EventName": "UpdateRecipe",
    "Description": "Modifies the definition of the ``LATEST_WORKING`` version of a DataBrew recipe"
  },
  {
    "API": "databrew:UpdateRecipeJob",
    "EventSource": "databrew",
    "EventName": "UpdateRecipeJob",
    "Description": "Modifies the definition of an existing DataBrew recipe job"
  },
  {
    "API": "databrew:UpdateRuleset",
    "EventSource": "databrew",
    "EventName": "UpdateRuleset",
    "Description": "Updates specified ruleset"
  },
  {
    "API": "databrew:UpdateSchedule",
    "EventSource": "databrew",
    "EventName": "UpdateSchedule",
    "Description": "Modifies the definition of an existing DataBrew schedule"
  },
  {
    "API": "dataexchange:CancelJob",
    "EventSource": "dataexchange",
    "EventName": "CancelJob",
    "Description": "This operation cancels a job"
  },
  {
    "API": "dataexchange:CreateDataSet",
    "EventSource": "dataexchange",
    "EventName": "CreateDataSet",
    "Description": "This operation creates a data set"
  },
  {
    "API": "dataexchange:CreateEventAction",
    "EventSource": "dataexchange",
    "EventName": "CreateEventAction",
    "Description": "This operation creates an event action"
  },
  {
    "API": "dataexchange:CreateJob",
    "EventSource": "dataexchange",
    "EventName": "CreateJob",
    "Description": "This operation creates a job"
  },
  {
    "API": "dataexchange:CreateRevision",
    "EventSource": "dataexchange",
    "EventName": "CreateRevision",
    "Description": "This operation creates a revision for a data set"
  },
  {
    "API": "dataexchange:DeleteAsset",
    "EventSource": "dataexchange",
    "EventName": "DeleteAsset",
    "Description": "This operation deletes an asset"
  },
  {
    "API": "dataexchange:DeleteDataSet",
    "EventSource": "dataexchange",
    "EventName": "DeleteDataSet",
    "Description": "This operation deletes a data set"
  },
  {
    "API": "dataexchange:DeleteEventAction",
    "EventSource": "dataexchange",
    "EventName": "DeleteEventAction",
    "Description": "This operation deletes the event action"
  },
  {
    "API": "dataexchange:DeleteRevision",
    "EventSource": "dataexchange",
    "EventName": "DeleteRevision",
    "Description": "This operation deletes a revision"
  },
  {
    "API": "dataexchange:GeneratePresignedUrl",
    "EventSource": "dataexchange",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "dataexchange:GetAsset",
    "EventSource": "dataexchange",
    "EventName": "GetAsset",
    "Description": "This operation returns information about an asset"
  },
  {
    "API": "dataexchange:GetDataSet",
    "EventSource": "dataexchange",
    "EventName": "GetDataSet",
    "Description": "This operation returns information about a data set"
  },
  {
    "API": "dataexchange:GetEventAction",
    "EventSource": "dataexchange",
    "EventName": "GetEventAction",
    "Description": "This operation retrieves information about an event action"
  },
  {
    "API": "dataexchange:GetJob",
    "EventSource": "dataexchange",
    "EventName": "GetJob",
    "Description": "This operation returns information about a job"
  },
  {
    "API": "dataexchange:GetRevision",
    "EventSource": "dataexchange",
    "EventName": "GetRevision",
    "Description": "This operation returns information about a revision"
  },
  {
    "API": "dataexchange:ListDataSetRevisions",
    "EventSource": "dataexchange",
    "EventName": "ListDataSetRevisions",
    "Description": "This operation lists a data set's revisions sorted by CreatedAt in descending order"
  },
  {
    "API": "dataexchange:ListDataSets",
    "EventSource": "dataexchange",
    "EventName": "ListDataSets",
    "Description": "This operation lists your data sets"
  },
  {
    "API": "dataexchange:ListEventActions",
    "EventSource": "dataexchange",
    "EventName": "ListEventActions",
    "Description": "This operation lists your event actions"
  },
  {
    "API": "dataexchange:ListJobs",
    "EventSource": "dataexchange",
    "EventName": "ListJobs",
    "Description": "This operation lists your jobs sorted by CreatedAt in descending order"
  },
  {
    "API": "dataexchange:ListRevisionAssets",
    "EventSource": "dataexchange",
    "EventName": "ListRevisionAssets",
    "Description": "This operation lists a revision's assets sorted alphabetically in descending order"
  },
  {
    "API": "dataexchange:ListTagsForResource",
    "EventSource": "dataexchange",
    "EventName": "ListTagsForResource",
    "Description": "This operation lists the tags on the resource"
  },
  {
    "API": "dataexchange:RevokeRevision",
    "EventSource": "dataexchange",
    "EventName": "RevokeRevision",
    "Description": "This operation revokes subscribers' access to a revision"
  },
  {
    "API": "dataexchange:SendApiAsset",
    "EventSource": "dataexchange",
    "EventName": "SendApiAsset",
    "Description": "This operation invokes an API Gateway API asset"
  },
  {
    "API": "dataexchange:SendDataSetNotification",
    "EventSource": "dataexchange",
    "EventName": "SendDataSetNotification",
    "Description": "The type of event associated with the data set"
  },
  {
    "API": "dataexchange:StartJob",
    "EventSource": "dataexchange",
    "EventName": "StartJob",
    "Description": "This operation starts a job"
  },
  {
    "API": "dataexchange:TagResource",
    "EventSource": "dataexchange",
    "EventName": "TagResource",
    "Description": "This operation tags a resource"
  },
  {
    "API": "dataexchange:UntagResource",
    "EventSource": "dataexchange",
    "EventName": "UntagResource",
    "Description": "This operation removes one or more tags from a resource"
  },
  {
    "API": "dataexchange:UpdateAsset",
    "EventSource": "dataexchange",
    "EventName": "UpdateAsset",
    "Description": "This operation updates an asset"
  },
  {
    "API": "dataexchange:UpdateDataSet",
    "EventSource": "dataexchange",
    "EventName": "UpdateDataSet",
    "Description": "This operation updates a data set"
  },
  {
    "API": "dataexchange:UpdateEventAction",
    "EventSource": "dataexchange",
    "EventName": "UpdateEventAction",
    "Description": "This operation updates the event action"
  },
  {
    "API": "dataexchange:UpdateRevision",
    "EventSource": "dataexchange",
    "EventName": "UpdateRevision",
    "Description": "This operation updates a revision"
  },
  {
    "API": "datapipeline:ActivatePipeline",
    "EventSource": "datapipeline",
    "EventName": "ActivatePipeline",
    "Description": "Validates the specified pipeline and starts processing pipeline tasks"
  },
  {
    "API": "datapipeline:AddTags",
    "EventSource": "datapipeline",
    "EventName": "AddTags",
    "Description": "Adds or modifies tags for the specified pipeline"
  },
  {
    "API": "datapipeline:CreatePipeline",
    "EventSource": "datapipeline",
    "EventName": "CreatePipeline",
    "Description": "Creates a new, empty pipeline"
  },
  {
    "API": "datapipeline:DeactivatePipeline",
    "EventSource": "datapipeline",
    "EventName": "DeactivatePipeline",
    "Description": "Deactivates the specified running pipeline"
  },
  {
    "API": "datapipeline:DeletePipeline",
    "EventSource": "datapipeline",
    "EventName": "DeletePipeline",
    "Description": "Deletes a pipeline, its pipeline definition, and its run history"
  },
  {
    "API": "datapipeline:DescribeObjects",
    "EventSource": "datapipeline",
    "EventName": "DescribeObjects",
    "Description": "Gets the object definitions for a set of objects associated with the pipeline"
  },
  {
    "API": "datapipeline:DescribePipelines",
    "EventSource": "datapipeline",
    "EventName": "DescribePipelines",
    "Description": "Retrieves metadata about one or more pipelines"
  },
  {
    "API": "datapipeline:EvaluateExpression",
    "EventSource": "datapipeline",
    "EventName": "EvaluateExpression",
    "Description": "Task runners call ``EvaluateExpression`` to evaluate a string in the context of the specified object"
  },
  {
    "API": "datapipeline:GeneratePresignedUrl",
    "EventSource": "datapipeline",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "datapipeline:GetPipelineDefinition",
    "EventSource": "datapipeline",
    "EventName": "GetPipelineDefinition",
    "Description": "Gets the definition of the specified pipeline"
  },
  {
    "API": "datapipeline:ListPipelines",
    "EventSource": "datapipeline",
    "EventName": "ListPipelines",
    "Description": "Lists the pipeline identifiers for all active pipelines that you have permission to access"
  },
  {
    "API": "datapipeline:PollForTask",
    "EventSource": "datapipeline",
    "EventName": "PollForTask",
    "Description": "Task runners call ``PollForTask`` to receive a task to perform from AWS Data Pipeline"
  },
  {
    "API": "datapipeline:PutPipelineDefinition",
    "EventSource": "datapipeline",
    "EventName": "PutPipelineDefinition",
    "Description": "Adds tasks, schedules, and preconditions to the specified pipeline"
  },
  {
    "API": "datapipeline:QueryObjects",
    "EventSource": "datapipeline",
    "EventName": "QueryObjects",
    "Description": "Queries the specified pipeline for the names of objects that match the specified set of conditions"
  },
  {
    "API": "datapipeline:RemoveTags",
    "EventSource": "datapipeline",
    "EventName": "RemoveTags",
    "Description": "Removes existing tags from the specified pipeline"
  },
  {
    "API": "datapipeline:ReportTaskProgress",
    "EventSource": "datapipeline",
    "EventName": "ReportTaskProgress",
    "Description": "Task runners call ``ReportTaskProgress`` when assigned a task to acknowledge that it has the task"
  },
  {
    "API": "datapipeline:ReportTaskRunnerHeartbeat",
    "EventSource": "datapipeline",
    "EventName": "ReportTaskRunnerHeartbeat",
    "Description": "Task runners call ``ReportTaskRunnerHeartbeat`` every 15 minutes to indicate that they are operational"
  },
  {
    "API": "datapipeline:SetStatus",
    "EventSource": "datapipeline",
    "EventName": "SetStatus",
    "Description": "Requests that the status of the specified physical or logical pipeline objects be updated in the specified pipeline"
  },
  {
    "API": "datapipeline:SetTaskStatus",
    "EventSource": "datapipeline",
    "EventName": "SetTaskStatus",
    "Description": "Task runners call ``SetTaskStatus`` to notify AWS Data Pipeline that a task is completed and provide information about the final status"
  },
  {
    "API": "datapipeline:ValidatePipelineDefinition",
    "EventSource": "datapipeline",
    "EventName": "ValidatePipelineDefinition",
    "Description": "Validates the specified pipeline definition to ensure that it is well formed and can be run without error"
  },
  {
    "API": "datasync:AddStorageSystem",
    "EventSource": "datasync",
    "EventName": "AddStorageSystem",
    "Description": "Creates an Amazon Web Services resource for an on-premises storage system that you want DataSync Discovery to collect information about"
  },
  {
    "API": "datasync:CancelTaskExecution",
    "EventSource": "datasync",
    "EventName": "CancelTaskExecution",
    "Description": "Stops an DataSync task execution that's in progress"
  },
  {
    "API": "datasync:CreateAgent",
    "EventSource": "datasync",
    "EventName": "CreateAgent",
    "Description": "Activates an DataSync agent that you've deployed in your storage environment"
  },
  {
    "API": "datasync:CreateLocationAzureBlob",
    "EventSource": "datasync",
    "EventName": "CreateLocationAzureBlob",
    "Description": "Creates a transfer *location* for a Microsoft Azure Blob Storage container"
  },
  {
    "API": "datasync:CreateLocationEfs",
    "EventSource": "datasync",
    "EventName": "CreateLocationEfs",
    "Description": "Creates a transfer *location* for an Amazon EFS file system"
  },
  {
    "API": "datasync:CreateLocationFsxLustre",
    "EventSource": "datasync",
    "EventName": "CreateLocationFsxLustre",
    "Description": "Creates a transfer *location* for an Amazon FSx for Lustre file system"
  },
  {
    "API": "datasync:CreateLocationFsxOntap",
    "EventSource": "datasync",
    "EventName": "CreateLocationFsxOntap",
    "Description": "Creates a transfer *location* for an Amazon FSx for NetApp ONTAP file system"
  },
  {
    "API": "datasync:CreateLocationFsxOpenZfs",
    "EventSource": "datasync",
    "EventName": "CreateLocationFsxOpenZfs",
    "Description": "Creates a transfer *location* for an Amazon FSx for OpenZFS file system"
  },
  {
    "API": "datasync:CreateLocationFsxWindows",
    "EventSource": "datasync",
    "EventName": "CreateLocationFsxWindows",
    "Description": "Creates a transfer *location* for an Amazon FSx for Windows File Server file system"
  },
  {
    "API": "datasync:CreateLocationHdfs",
    "EventSource": "datasync",
    "EventName": "CreateLocationHdfs",
    "Description": "Creates a transfer *location* for a Hadoop Distributed File System (HDFS)"
  },
  {
    "API": "datasync:CreateLocationNfs",
    "EventSource": "datasync",
    "EventName": "CreateLocationNfs",
    "Description": "Creates a transfer *location* for a Network File System (NFS) file server"
  },
  {
    "API": "datasync:CreateLocationObjectStorage",
    "EventSource": "datasync",
    "EventName": "CreateLocationObjectStorage",
    "Description": "Creates a transfer *location* for an object storage system"
  },
  {
    "API": "datasync:CreateLocationS3",
    "EventSource": "datasync",
    "EventName": "CreateLocationS3",
    "Description": "Creates a transfer *location* for an Amazon S3 bucket"
  },
  {
    "API": "datasync:CreateLocationSmb",
    "EventSource": "datasync",
    "EventName": "CreateLocationSmb",
    "Description": "Creates a transfer *location* for a Server Message Block (SMB) file server"
  },
  {
    "API": "datasync:CreateTask",
    "EventSource": "datasync",
    "EventName": "CreateTask",
    "Description": "Configures a *task*, which defines where and how DataSync transfers your data"
  },
  {
    "API": "datasync:DeleteAgent",
    "EventSource": "datasync",
    "EventName": "DeleteAgent",
    "Description": "Removes an DataSync agent resource from your Amazon Web Services account"
  },
  {
    "API": "datasync:DeleteLocation",
    "EventSource": "datasync",
    "EventName": "DeleteLocation",
    "Description": "Deletes a transfer location resource from DataSync"
  },
  {
    "API": "datasync:DeleteTask",
    "EventSource": "datasync",
    "EventName": "DeleteTask",
    "Description": "Deletes a transfer task resource from DataSync"
  },
  {
    "API": "datasync:DescribeAgent",
    "EventSource": "datasync",
    "EventName": "DescribeAgent",
    "Description": "Returns information about an DataSync agent, such as its name, service endpoint type, and status"
  },
  {
    "API": "datasync:DescribeDiscoveryJob",
    "EventSource": "datasync",
    "EventName": "DescribeDiscoveryJob",
    "Description": "Returns information about a DataSync discovery job"
  },
  {
    "API": "datasync:DescribeLocationAzureBlob",
    "EventSource": "datasync",
    "EventName": "DescribeLocationAzureBlob",
    "Description": "Provides details about how an DataSync transfer location for Microsoft Azure Blob Storage is configured"
  },
  {
    "API": "datasync:DescribeLocationEfs",
    "EventSource": "datasync",
    "EventName": "DescribeLocationEfs",
    "Description": "Provides details about how an DataSync transfer location for an Amazon EFS file system is configured"
  },
  {
    "API": "datasync:DescribeLocationFsxLustre",
    "EventSource": "datasync",
    "EventName": "DescribeLocationFsxLustre",
    "Description": "Provides details about how an DataSync transfer location for an Amazon FSx for Lustre file system is configured"
  },
  {
    "API": "datasync:DescribeLocationFsxOntap",
    "EventSource": "datasync",
    "EventName": "DescribeLocationFsxOntap",
    "Description": "Provides details about how an DataSync transfer location for an Amazon FSx for NetApp ONTAP file system is configured"
  },
  {
    "API": "datasync:DescribeLocationFsxOpenZfs",
    "EventSource": "datasync",
    "EventName": "DescribeLocationFsxOpenZfs",
    "Description": "Provides details about how an DataSync transfer location for an Amazon FSx for OpenZFS file system is configured"
  },
  {
    "API": "datasync:DescribeLocationFsxWindows",
    "EventSource": "datasync",
    "EventName": "DescribeLocationFsxWindows",
    "Description": "Provides details about how an DataSync transfer location for an Amazon FSx for Windows File Server file system is configured"
  },
  {
    "API": "datasync:DescribeLocationHdfs",
    "EventSource": "datasync",
    "EventName": "DescribeLocationHdfs",
    "Description": "Provides details about how an DataSync transfer location for a Hadoop Distributed File System (HDFS) is configured"
  },
  {
    "API": "datasync:DescribeLocationNfs",
    "EventSource": "datasync",
    "EventName": "DescribeLocationNfs",
    "Description": "Provides details about how an DataSync transfer location for a Network File System (NFS) file server is configured"
  },
  {
    "API": "datasync:DescribeLocationObjectStorage",
    "EventSource": "datasync",
    "EventName": "DescribeLocationObjectStorage",
    "Description": "Provides details about how an DataSync transfer location for an object storage system is configured"
  },
  {
    "API": "datasync:DescribeLocationS3",
    "EventSource": "datasync",
    "EventName": "DescribeLocationS3",
    "Description": "Provides details about how an DataSync transfer location for an S3 bucket is configured"
  },
  {
    "API": "datasync:DescribeLocationSmb",
    "EventSource": "datasync",
    "EventName": "DescribeLocationSmb",
    "Description": "Provides details about how an DataSync transfer location for a Server Message Block (SMB) file server is configured"
  },
  {
    "API": "datasync:DescribeStorageSystem",
    "EventSource": "datasync",
    "EventName": "DescribeStorageSystem",
    "Description": "Returns information about an on-premises storage system that you're using with DataSync Discovery"
  },
  {
    "API": "datasync:DescribeStorageSystemResourceMetrics",
    "EventSource": "datasync",
    "EventName": "DescribeStorageSystemResourceMetrics",
    "Description": "Returns information, including performance data and capacity usage, which DataSync Discovery collects about a specific resource in your-premises storage system"
  },
  {
    "API": "datasync:DescribeStorageSystemResources",
    "EventSource": "datasync",
    "EventName": "DescribeStorageSystemResources",
    "Description": "Returns information that DataSync Discovery collects about resources in your on-premises storage system"
  },
  {
    "API": "datasync:DescribeTask",
    "EventSource": "datasync",
    "EventName": "DescribeTask",
    "Description": "Provides information about a *task*, which defines where and how DataSync transfers your data"
  },
  {
    "API": "datasync:DescribeTaskExecution",
    "EventSource": "datasync",
    "EventName": "DescribeTaskExecution",
    "Description": "Provides information about an execution of your DataSync task"
  },
  {
    "API": "datasync:GeneratePresignedUrl",
    "EventSource": "datasync",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "datasync:GenerateRecommendations",
    "EventSource": "datasync",
    "EventName": "GenerateRecommendations",
    "Description": "Creates recommendations about where to migrate your data to in Amazon Web Services"
  },
  {
    "API": "datasync:ListAgents",
    "EventSource": "datasync",
    "EventName": "ListAgents",
    "Description": "Returns a list of DataSync agents that belong to an Amazon Web Services account in the Amazon Web Services Region specified in the request"
  },
  {
    "API": "datasync:ListDiscoveryJobs",
    "EventSource": "datasync",
    "EventName": "ListDiscoveryJobs",
    "Description": "Provides a list of the existing discovery jobs in the Amazon Web Services Region and Amazon Web Services account where you're using DataSync Discovery"
  },
  {
    "API": "datasync:ListLocations",
    "EventSource": "datasync",
    "EventName": "ListLocations",
    "Description": "Returns a list of source and destination locations"
  },
  {
    "API": "datasync:ListStorageSystems",
    "EventSource": "datasync",
    "EventName": "ListStorageSystems",
    "Description": "Lists the on-premises storage systems that you're using with DataSync Discovery"
  },
  {
    "API": "datasync:ListTagsForResource",
    "EventSource": "datasync",
    "EventName": "ListTagsForResource",
    "Description": "Returns all the tags associated with an Amazon Web Services resource"
  },
  {
    "API": "datasync:ListTaskExecutions",
    "EventSource": "datasync",
    "EventName": "ListTaskExecutions",
    "Description": "Returns a list of executions for an DataSync transfer task"
  },
  {
    "API": "datasync:ListTasks",
    "EventSource": "datasync",
    "EventName": "ListTasks",
    "Description": "Returns a list of the DataSync tasks you created"
  },
  {
    "API": "datasync:RemoveStorageSystem",
    "EventSource": "datasync",
    "EventName": "RemoveStorageSystem",
    "Description": "Permanently removes a storage system resource from DataSync Discovery, including the associated discovery jobs, collected data, and recommendations"
  },
  {
    "API": "datasync:StartDiscoveryJob",
    "EventSource": "datasync",
    "EventName": "StartDiscoveryJob",
    "Description": "Runs a DataSync discovery job on your on-premises storage system"
  },
  {
    "API": "datasync:StartTaskExecution",
    "EventSource": "datasync",
    "EventName": "StartTaskExecution",
    "Description": "Starts an DataSync transfer task"
  },
  {
    "API": "datasync:StopDiscoveryJob",
    "EventSource": "datasync",
    "EventName": "StopDiscoveryJob",
    "Description": "Stops a running DataSync discovery job"
  },
  {
    "API": "datasync:TagResource",
    "EventSource": "datasync",
    "EventName": "TagResource",
    "Description": "Applies a *tag* to an Amazon Web Services resource"
  },
  {
    "API": "datasync:UntagResource",
    "EventSource": "datasync",
    "EventName": "UntagResource",
    "Description": "Removes tags from an Amazon Web Services resource"
  },
  {
    "API": "datasync:UpdateAgent",
    "EventSource": "datasync",
    "EventName": "UpdateAgent",
    "Description": "Updates the name of an DataSync agent"
  },
  {
    "API": "datasync:UpdateDiscoveryJob",
    "EventSource": "datasync",
    "EventName": "UpdateDiscoveryJob",
    "Description": "Edits a DataSync discovery job configuration"
  },
  {
    "API": "datasync:UpdateLocationAzureBlob",
    "EventSource": "datasync",
    "EventName": "UpdateLocationAzureBlob",
    "Description": "Modifies some configurations of the Microsoft Azure Blob Storage transfer location that you're using with DataSync"
  },
  {
    "API": "datasync:UpdateLocationHdfs",
    "EventSource": "datasync",
    "EventName": "UpdateLocationHdfs",
    "Description": "Updates some parameters of a previously created location for a Hadoop Distributed File System cluster"
  },
  {
    "API": "datasync:UpdateLocationNfs",
    "EventSource": "datasync",
    "EventName": "UpdateLocationNfs",
    "Description": "Modifies some configurations of the Network File System (NFS) transfer location that you're using with DataSync"
  },
  {
    "API": "datasync:UpdateLocationObjectStorage",
    "EventSource": "datasync",
    "EventName": "UpdateLocationObjectStorage",
    "Description": "Updates some parameters of an existing DataSync location for an object storage system"
  },
  {
    "API": "datasync:UpdateLocationSmb",
    "EventSource": "datasync",
    "EventName": "UpdateLocationSmb",
    "Description": "Updates some of the parameters of a Server Message Block (SMB) file server location that you can use for DataSync transfers"
  },
  {
    "API": "datasync:UpdateStorageSystem",
    "EventSource": "datasync",
    "EventName": "UpdateStorageSystem",
    "Description": "Modifies some configurations of an on-premises storage system resource that you're using with DataSync Discovery"
  },
  {
    "API": "datasync:UpdateTask",
    "EventSource": "datasync",
    "EventName": "UpdateTask",
    "Description": "Updates the configuration of a *task*, which defines where and how DataSync transfers your data"
  },
  {
    "API": "datasync:UpdateTaskExecution",
    "EventSource": "datasync",
    "EventName": "UpdateTaskExecution",
    "Description": "Updates the configuration of a running DataSync task execution"
  },
  {
    "API": "datazone:AcceptPredictions",
    "EventSource": "datazone",
    "EventName": "AcceptPredictions",
    "Description": "Accepts automatically generated business-friendly metadata for your Amazon DataZone assets"
  },
  {
    "API": "datazone:AcceptSubscriptionRequest",
    "EventSource": "datazone",
    "EventName": "AcceptSubscriptionRequest",
    "Description": "Accepts a subscription request to a specific asset"
  },
  {
    "API": "datazone:AssociateEnvironmentRole",
    "EventSource": "datazone",
    "EventName": "AssociateEnvironmentRole",
    "Description": "Associates the environment role in Amazon DataZone"
  },
  {
    "API": "datazone:CancelMetadataGenerationRun",
    "EventSource": "datazone",
    "EventName": "CancelMetadataGenerationRun",
    "Description": "Cancels the metadata generation run"
  },
  {
    "API": "datazone:CancelSubscription",
    "EventSource": "datazone",
    "EventName": "CancelSubscription",
    "Description": "Cancels the subscription to the specified asset"
  },
  {
    "API": "datazone:CreateAsset",
    "EventSource": "datazone",
    "EventName": "CreateAsset",
    "Description": "Creates an asset in Amazon DataZone catalog"
  },
  {
    "API": "datazone:CreateAssetRevision",
    "EventSource": "datazone",
    "EventName": "CreateAssetRevision",
    "Description": "Creates a revision of the asset"
  },
  {
    "API": "datazone:CreateAssetType",
    "EventSource": "datazone",
    "EventName": "CreateAssetType",
    "Description": "Creates a custom asset type"
  },
  {
    "API": "datazone:CreateDataSource",
    "EventSource": "datazone",
    "EventName": "CreateDataSource",
    "Description": "Creates an Amazon DataZone data source"
  },
  {
    "API": "datazone:CreateDomain",
    "EventSource": "datazone",
    "EventName": "CreateDomain",
    "Description": "Creates an Amazon DataZone domain"
  },
  {
    "API": "datazone:CreateEnvironment",
    "EventSource": "datazone",
    "EventName": "CreateEnvironment",
    "Description": "Create an Amazon DataZone environment"
  },
  {
    "API": "datazone:CreateEnvironmentAction",
    "EventSource": "datazone",
    "EventName": "CreateEnvironmentAction",
    "Description": "Creates an action for the environment, for example, creates a console link for an analytics tool that is available in this environment"
  },
  {
    "API": "datazone:CreateEnvironmentProfile",
    "EventSource": "datazone",
    "EventName": "CreateEnvironmentProfile",
    "Description": "Creates an Amazon DataZone environment profile"
  },
  {
    "API": "datazone:CreateFormType",
    "EventSource": "datazone",
    "EventName": "CreateFormType",
    "Description": "Creates a metadata form type"
  },
  {
    "API": "datazone:CreateGlossary",
    "EventSource": "datazone",
    "EventName": "CreateGlossary",
    "Description": "Creates an Amazon DataZone business glossary"
  },
  {
    "API": "datazone:CreateGlossaryTerm",
    "EventSource": "datazone",
    "EventName": "CreateGlossaryTerm",
    "Description": "Creates a business glossary term"
  },
  {
    "API": "datazone:CreateGroupProfile",
    "EventSource": "datazone",
    "EventName": "CreateGroupProfile",
    "Description": "Creates a group profile in Amazon DataZone"
  },
  {
    "API": "datazone:CreateListingChangeSet",
    "EventSource": "datazone",
    "EventName": "CreateListingChangeSet",
    "Description": "Publishes a listing (a record of an asset at a given time) or removes a listing from the catalog"
  },
  {
    "API": "datazone:CreateProject",
    "EventSource": "datazone",
    "EventName": "CreateProject",
    "Description": "Creates an Amazon DataZone project"
  },
  {
    "API": "datazone:CreateProjectMembership",
    "EventSource": "datazone",
    "EventName": "CreateProjectMembership",
    "Description": "Creates a project membership in Amazon DataZone"
  },
  {
    "API": "datazone:CreateSubscriptionGrant",
    "EventSource": "datazone",
    "EventName": "CreateSubscriptionGrant",
    "Description": "Creates a subsscription grant in Amazon DataZone"
  },
  {
    "API": "datazone:CreateSubscriptionRequest",
    "EventSource": "datazone",
    "EventName": "CreateSubscriptionRequest",
    "Description": "Creates a subscription request in Amazon DataZone"
  },
  {
    "API": "datazone:CreateSubscriptionTarget",
    "EventSource": "datazone",
    "EventName": "CreateSubscriptionTarget",
    "Description": "Creates a subscription target in Amazon DataZone"
  },
  {
    "API": "datazone:CreateUserProfile",
    "EventSource": "datazone",
    "EventName": "CreateUserProfile",
    "Description": "Creates a user profile in Amazon DataZone"
  },
  {
    "API": "datazone:DeleteAsset",
    "EventSource": "datazone",
    "EventName": "DeleteAsset",
    "Description": "Delets an asset in Amazon DataZone"
  },
  {
    "API": "datazone:DeleteAssetType",
    "EventSource": "datazone",
    "EventName": "DeleteAssetType",
    "Description": "Deletes an asset type in Amazon DataZone"
  },
  {
    "API": "datazone:DeleteDataSource",
    "EventSource": "datazone",
    "EventName": "DeleteDataSource",
    "Description": "Deletes a data source in Amazon DataZone"
  },
  {
    "API": "datazone:DeleteDomain",
    "EventSource": "datazone",
    "EventName": "DeleteDomain",
    "Description": "Deletes a Amazon DataZone domain"
  },
  {
    "API": "datazone:DeleteEnvironment",
    "EventSource": "datazone",
    "EventName": "DeleteEnvironment",
    "Description": "Deletes an environment in Amazon DataZone"
  },
  {
    "API": "datazone:DeleteEnvironmentAction",
    "EventSource": "datazone",
    "EventName": "DeleteEnvironmentAction",
    "Description": "Deletes an action for the environment, for example, deletes a console link for an analytics tool that is available in this environment"
  },
  {
    "API": "datazone:DeleteEnvironmentBlueprintConfiguration",
    "EventSource": "datazone",
    "EventName": "DeleteEnvironmentBlueprintConfiguration",
    "Description": "Deletes the blueprint configuration in Amazon DataZone"
  },
  {
    "API": "datazone:DeleteEnvironmentProfile",
    "EventSource": "datazone",
    "EventName": "DeleteEnvironmentProfile",
    "Description": "Deletes an environment profile in Amazon DataZone"
  },
  {
    "API": "datazone:DeleteFormType",
    "EventSource": "datazone",
    "EventName": "DeleteFormType",
    "Description": "Delets and metadata form type in Amazon DataZone"
  },
  {
    "API": "datazone:DeleteGlossary",
    "EventSource": "datazone",
    "EventName": "DeleteGlossary",
    "Description": "Deletes a business glossary in Amazon DataZone"
  },
  {
    "API": "datazone:DeleteGlossaryTerm",
    "EventSource": "datazone",
    "EventName": "DeleteGlossaryTerm",
    "Description": "Deletes a business glossary term in Amazon DataZone"
  },
  {
    "API": "datazone:DeleteListing",
    "EventSource": "datazone",
    "EventName": "DeleteListing",
    "Description": "Deletes a listing (a record of an asset at a given time)"
  },
  {
    "API": "datazone:DeleteProject",
    "EventSource": "datazone",
    "EventName": "DeleteProject",
    "Description": "Deletes a project in Amazon DataZone"
  },
  {
    "API": "datazone:DeleteProjectMembership",
    "EventSource": "datazone",
    "EventName": "DeleteProjectMembership",
    "Description": "Deletes project membership in Amazon DataZone"
  },
  {
    "API": "datazone:DeleteSubscriptionGrant",
    "EventSource": "datazone",
    "EventName": "DeleteSubscriptionGrant",
    "Description": "Deletes and subscription grant in Amazon DataZone"
  },
  {
    "API": "datazone:DeleteSubscriptionRequest",
    "EventSource": "datazone",
    "EventName": "DeleteSubscriptionRequest",
    "Description": "Deletes a subscription request in Amazon DataZone"
  },
  {
    "API": "datazone:DeleteSubscriptionTarget",
    "EventSource": "datazone",
    "EventName": "DeleteSubscriptionTarget",
    "Description": "Deletes a subscription target in Amazon DataZone"
  },
  {
    "API": "datazone:DeleteTimeSeriesDataPoints",
    "EventSource": "datazone",
    "EventName": "DeleteTimeSeriesDataPoints",
    "Description": "Deletes the specified time series form for the specified asset"
  },
  {
    "API": "datazone:DisassociateEnvironmentRole",
    "EventSource": "datazone",
    "EventName": "DisassociateEnvironmentRole",
    "Description": "Disassociates the environment role in Amazon DataZone"
  },
  {
    "API": "datazone:GeneratePresignedUrl",
    "EventSource": "datazone",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "datazone:GetAsset",
    "EventSource": "datazone",
    "EventName": "GetAsset",
    "Description": "Gets an Amazon DataZone asset"
  },
  {
    "API": "datazone:GetAssetType",
    "EventSource": "datazone",
    "EventName": "GetAssetType",
    "Description": "Gets an Amazon DataZone asset type"
  },
  {
    "API": "datazone:GetDataSource",
    "EventSource": "datazone",
    "EventName": "GetDataSource",
    "Description": "Gets an Amazon DataZone data source"
  },
  {
    "API": "datazone:GetDataSourceRun",
    "EventSource": "datazone",
    "EventName": "GetDataSourceRun",
    "Description": "Gets an Amazon DataZone data source run"
  },
  {
    "API": "datazone:GetDomain",
    "EventSource": "datazone",
    "EventName": "GetDomain",
    "Description": "Gets an Amazon DataZone domain"
  },
  {
    "API": "datazone:GetEnvironment",
    "EventSource": "datazone",
    "EventName": "GetEnvironment",
    "Description": "Gets an Amazon DataZone environment"
  },
  {
    "API": "datazone:GetEnvironmentAction",
    "EventSource": "datazone",
    "EventName": "GetEnvironmentAction",
    "Description": "Gets the specified environment action"
  },
  {
    "API": "datazone:GetEnvironmentBlueprint",
    "EventSource": "datazone",
    "EventName": "GetEnvironmentBlueprint",
    "Description": "Gets an Amazon DataZone blueprint"
  },
  {
    "API": "datazone:GetEnvironmentBlueprintConfiguration",
    "EventSource": "datazone",
    "EventName": "GetEnvironmentBlueprintConfiguration",
    "Description": "Gets the blueprint configuration in Amazon DataZone"
  },
  {
    "API": "datazone:GetEnvironmentProfile",
    "EventSource": "datazone",
    "EventName": "GetEnvironmentProfile",
    "Description": "Gets an evinronment profile in Amazon DataZone"
  },
  {
    "API": "datazone:GetFormType",
    "EventSource": "datazone",
    "EventName": "GetFormType",
    "Description": "Gets a metadata form type in Amazon DataZone"
  },
  {
    "API": "datazone:GetGlossary",
    "EventSource": "datazone",
    "EventName": "GetGlossary",
    "Description": "Gets a business glossary in Amazon DataZone"
  },
  {
    "API": "datazone:GetGlossaryTerm",
    "EventSource": "datazone",
    "EventName": "GetGlossaryTerm",
    "Description": "Gets a business glossary term in Amazon DataZone"
  },
  {
    "API": "datazone:GetGroupProfile",
    "EventSource": "datazone",
    "EventName": "GetGroupProfile",
    "Description": "Gets a group profile in Amazon DataZone"
  },
  {
    "API": "datazone:GetIamPortalLoginUrl",
    "EventSource": "datazone",
    "EventName": "GetIamPortalLoginUrl",
    "Description": "Gets the data portal URL for the specified Amazon DataZone domain"
  },
  {
    "API": "datazone:GetListing",
    "EventSource": "datazone",
    "EventName": "GetListing",
    "Description": "Gets a listing (a record of an asset at a given time)"
  },
  {
    "API": "datazone:GetMetadataGenerationRun",
    "EventSource": "datazone",
    "EventName": "GetMetadataGenerationRun",
    "Description": "Gets a metadata generation run in Amazon DataZone"
  },
  {
    "API": "datazone:GetProject",
    "EventSource": "datazone",
    "EventName": "GetProject",
    "Description": "Gets a project in Amazon DataZone"
  },
  {
    "API": "datazone:GetSubscription",
    "EventSource": "datazone",
    "EventName": "GetSubscription",
    "Description": "Gets a subscription in Amazon DataZone"
  },
  {
    "API": "datazone:GetSubscriptionGrant",
    "EventSource": "datazone",
    "EventName": "GetSubscriptionGrant",
    "Description": "Gets the subscription grant in Amazon DataZone"
  },
  {
    "API": "datazone:GetSubscriptionRequestDetails",
    "EventSource": "datazone",
    "EventName": "GetSubscriptionRequestDetails",
    "Description": "Gets the details of the specified subscription request"
  },
  {
    "API": "datazone:GetSubscriptionTarget",
    "EventSource": "datazone",
    "EventName": "GetSubscriptionTarget",
    "Description": "Gets the subscription target in Amazon DataZone"
  },
  {
    "API": "datazone:GetTimeSeriesDataPoint",
    "EventSource": "datazone",
    "EventName": "GetTimeSeriesDataPoint",
    "Description": "Gets the existing data point for the asset"
  },
  {
    "API": "datazone:GetUserProfile",
    "EventSource": "datazone",
    "EventName": "GetUserProfile",
    "Description": "Gets a user profile in Amazon DataZone"
  },
  {
    "API": "datazone:ListAssetRevisions",
    "EventSource": "datazone",
    "EventName": "ListAssetRevisions",
    "Description": "Lists the revisions for the asset"
  },
  {
    "API": "datazone:ListDataSourceRunActivities",
    "EventSource": "datazone",
    "EventName": "ListDataSourceRunActivities",
    "Description": "Lists data source run activities"
  },
  {
    "API": "datazone:ListDataSourceRuns",
    "EventSource": "datazone",
    "EventName": "ListDataSourceRuns",
    "Description": "Lists data source runs in Amazon DataZone"
  },
  {
    "API": "datazone:ListDataSources",
    "EventSource": "datazone",
    "EventName": "ListDataSources",
    "Description": "Lists data sources in Amazon DataZone"
  },
  {
    "API": "datazone:ListDomains",
    "EventSource": "datazone",
    "EventName": "ListDomains",
    "Description": "Lists Amazon DataZone domains"
  },
  {
    "API": "datazone:ListEnvironmentActions",
    "EventSource": "datazone",
    "EventName": "ListEnvironmentActions",
    "Description": "Lists existing environment actions"
  },
  {
    "API": "datazone:ListEnvironmentBlueprintConfigurations",
    "EventSource": "datazone",
    "EventName": "ListEnvironmentBlueprintConfigurations",
    "Description": "Lists blueprint configurations for a Amazon DataZone environment"
  },
  {
    "API": "datazone:ListEnvironmentBlueprints",
    "EventSource": "datazone",
    "EventName": "ListEnvironmentBlueprints",
    "Description": "Lists blueprints in an Amazon DataZone environment"
  },
  {
    "API": "datazone:ListEnvironmentProfiles",
    "EventSource": "datazone",
    "EventName": "ListEnvironmentProfiles",
    "Description": "Lists Amazon DataZone environment profiles"
  },
  {
    "API": "datazone:ListEnvironments",
    "EventSource": "datazone",
    "EventName": "ListEnvironments",
    "Description": "Lists Amazon DataZone environments"
  },
  {
    "API": "datazone:ListMetadataGenerationRuns",
    "EventSource": "datazone",
    "EventName": "ListMetadataGenerationRuns",
    "Description": "Lists all metadata generation runs"
  },
  {
    "API": "datazone:ListNotifications",
    "EventSource": "datazone",
    "EventName": "ListNotifications",
    "Description": "Lists all Amazon DataZone notifications"
  },
  {
    "API": "datazone:ListProjectMemberships",
    "EventSource": "datazone",
    "EventName": "ListProjectMemberships",
    "Description": "Lists all members of the specified project"
  },
  {
    "API": "datazone:ListProjects",
    "EventSource": "datazone",
    "EventName": "ListProjects",
    "Description": "Lists Amazon DataZone projects"
  },
  {
    "API": "datazone:ListSubscriptionGrants",
    "EventSource": "datazone",
    "EventName": "ListSubscriptionGrants",
    "Description": "Lists subscription grants"
  },
  {
    "API": "datazone:ListSubscriptionRequests",
    "EventSource": "datazone",
    "EventName": "ListSubscriptionRequests",
    "Description": "Lists Amazon DataZone subscription requests"
  },
  {
    "API": "datazone:ListSubscriptionTargets",
    "EventSource": "datazone",
    "EventName": "ListSubscriptionTargets",
    "Description": "Lists subscription targets in Amazon DataZone"
  },
  {
    "API": "datazone:ListSubscriptions",
    "EventSource": "datazone",
    "EventName": "ListSubscriptions",
    "Description": "Lists subscriptions in Amazon DataZone"
  },
  {
    "API": "datazone:ListTagsForResource",
    "EventSource": "datazone",
    "EventName": "ListTagsForResource",
    "Description": "Lists tags for the specified resource in Amazon DataZone"
  },
  {
    "API": "datazone:ListTimeSeriesDataPoints",
    "EventSource": "datazone",
    "EventName": "ListTimeSeriesDataPoints",
    "Description": "Lists time series data points"
  },
  {
    "API": "datazone:PostTimeSeriesDataPoints",
    "EventSource": "datazone",
    "EventName": "PostTimeSeriesDataPoints",
    "Description": "Posts time series data points to Amazon DataZone for the specified asset"
  },
  {
    "API": "datazone:PutEnvironmentBlueprintConfiguration",
    "EventSource": "datazone",
    "EventName": "PutEnvironmentBlueprintConfiguration",
    "Description": "Writes the configuration for the specified environment blueprint in Amazon DataZone"
  },
  {
    "API": "datazone:RejectPredictions",
    "EventSource": "datazone",
    "EventName": "RejectPredictions",
    "Description": "Rejects automatically generated business-friendly metadata for your Amazon DataZone assets"
  },
  {
    "API": "datazone:RejectSubscriptionRequest",
    "EventSource": "datazone",
    "EventName": "RejectSubscriptionRequest",
    "Description": "Rejects the specified subscription request"
  },
  {
    "API": "datazone:RevokeSubscription",
    "EventSource": "datazone",
    "EventName": "RevokeSubscription",
    "Description": "Revokes a specified subscription in Amazon DataZone"
  },
  {
    "API": "datazone:SearchGroupProfiles",
    "EventSource": "datazone",
    "EventName": "SearchGroupProfiles",
    "Description": "Searches group profiles in Amazon DataZone"
  },
  {
    "API": "datazone:SearchListings",
    "EventSource": "datazone",
    "EventName": "SearchListings",
    "Description": "Searches listings (records of an asset at a given time) in Amazon DataZone"
  },
  {
    "API": "datazone:SearchTypes",
    "EventSource": "datazone",
    "EventName": "SearchTypes",
    "Description": "Searches for types in Amazon DataZone"
  },
  {
    "API": "datazone:SearchUserProfiles",
    "EventSource": "datazone",
    "EventName": "SearchUserProfiles",
    "Description": "Searches user profiles in Amazon DataZone"
  },
  {
    "API": "datazone:StartDataSourceRun",
    "EventSource": "datazone",
    "EventName": "StartDataSourceRun",
    "Description": "Start the run of the specified data source in Amazon DataZone"
  },
  {
    "API": "datazone:StartMetadataGenerationRun",
    "EventSource": "datazone",
    "EventName": "StartMetadataGenerationRun",
    "Description": "Starts the metadata generation run"
  },
  {
    "API": "datazone:TagResource",
    "EventSource": "datazone",
    "EventName": "TagResource",
    "Description": "Tags a resource in Amazon DataZone"
  },
  {
    "API": "datazone:UntagResource",
    "EventSource": "datazone",
    "EventName": "UntagResource",
    "Description": "Untags a resource in Amazon DataZone"
  },
  {
    "API": "datazone:UpdateDataSource",
    "EventSource": "datazone",
    "EventName": "UpdateDataSource",
    "Description": "Updates the specified data source in Amazon DataZone"
  },
  {
    "API": "datazone:UpdateDomain",
    "EventSource": "datazone",
    "EventName": "UpdateDomain",
    "Description": "Updates a Amazon DataZone domain"
  },
  {
    "API": "datazone:UpdateEnvironment",
    "EventSource": "datazone",
    "EventName": "UpdateEnvironment",
    "Description": "Updates the specified environment in Amazon DataZone"
  },
  {
    "API": "datazone:UpdateEnvironmentAction",
    "EventSource": "datazone",
    "EventName": "UpdateEnvironmentAction",
    "Description": "Updates an environment action"
  },
  {
    "API": "datazone:UpdateEnvironmentProfile",
    "EventSource": "datazone",
    "EventName": "UpdateEnvironmentProfile",
    "Description": "Updates the specified environment profile in Amazon DataZone"
  },
  {
    "API": "datazone:UpdateGlossary",
    "EventSource": "datazone",
    "EventName": "UpdateGlossary",
    "Description": "Updates the business glossary in Amazon DataZone"
  },
  {
    "API": "datazone:UpdateGlossaryTerm",
    "EventSource": "datazone",
    "EventName": "UpdateGlossaryTerm",
    "Description": "Updates a business glossary term in Amazon DataZone"
  },
  {
    "API": "datazone:UpdateGroupProfile",
    "EventSource": "datazone",
    "EventName": "UpdateGroupProfile",
    "Description": "Updates the specified group profile in Amazon DataZone"
  },
  {
    "API": "datazone:UpdateProject",
    "EventSource": "datazone",
    "EventName": "UpdateProject",
    "Description": "Updates the specified project in Amazon DataZone"
  },
  {
    "API": "datazone:UpdateSubscriptionGrantStatus",
    "EventSource": "datazone",
    "EventName": "UpdateSubscriptionGrantStatus",
    "Description": "Updates the status of the specified subscription grant status in Amazon DataZone"
  },
  {
    "API": "datazone:UpdateSubscriptionRequest",
    "EventSource": "datazone",
    "EventName": "UpdateSubscriptionRequest",
    "Description": "Updates a specified subscription request in Amazon DataZone"
  },
  {
    "API": "datazone:UpdateSubscriptionTarget",
    "EventSource": "datazone",
    "EventName": "UpdateSubscriptionTarget",
    "Description": "Updates the specified subscription target in Amazon DataZone"
  },
  {
    "API": "datazone:UpdateUserProfile",
    "EventSource": "datazone",
    "EventName": "UpdateUserProfile",
    "Description": "Updates the specified user profile in Amazon DataZone"
  },
  {
    "API": "dax:CreateCluster",
    "EventSource": "dax",
    "EventName": "CreateCluster",
    "Description": "Creates a DAX cluster"
  },
  {
    "API": "dax:CreateParameterGroup",
    "EventSource": "dax",
    "EventName": "CreateParameterGroup",
    "Description": "Creates a new parameter group"
  },
  {
    "API": "dax:CreateSubnetGroup",
    "EventSource": "dax",
    "EventName": "CreateSubnetGroup",
    "Description": "Creates a new subnet group"
  },
  {
    "API": "dax:DecreaseReplicationFactor",
    "EventSource": "dax",
    "EventName": "DecreaseReplicationFactor",
    "Description": "Removes one or more nodes from a DAX cluster"
  },
  {
    "API": "dax:DeleteCluster",
    "EventSource": "dax",
    "EventName": "DeleteCluster",
    "Description": "Deletes a previously provisioned DAX cluster"
  },
  {
    "API": "dax:DeleteParameterGroup",
    "EventSource": "dax",
    "EventName": "DeleteParameterGroup",
    "Description": "Deletes the specified parameter group"
  },
  {
    "API": "dax:DeleteSubnetGroup",
    "EventSource": "dax",
    "EventName": "DeleteSubnetGroup",
    "Description": "Deletes a subnet group"
  },
  {
    "API": "dax:DescribeClusters",
    "EventSource": "dax",
    "EventName": "DescribeClusters",
    "Description": "Returns information about all provisioned DAX clusters if no cluster identifier is specified, or about a specific DAX cluster if a cluster identifier is supplied"
  },
  {
    "API": "dax:DescribeDefaultParameters",
    "EventSource": "dax",
    "EventName": "DescribeDefaultParameters",
    "Description": "Returns the default system parameter information for the DAX caching software"
  },
  {
    "API": "dax:DescribeEvents",
    "EventSource": "dax",
    "EventName": "DescribeEvents",
    "Description": "Returns events related to DAX clusters and parameter groups"
  },
  {
    "API": "dax:DescribeParameterGroups",
    "EventSource": "dax",
    "EventName": "DescribeParameterGroups",
    "Description": "Returns a list of parameter group descriptions"
  },
  {
    "API": "dax:DescribeParameters",
    "EventSource": "dax",
    "EventName": "DescribeParameters",
    "Description": "Returns the detailed parameter list for a particular parameter group"
  },
  {
    "API": "dax:DescribeSubnetGroups",
    "EventSource": "dax",
    "EventName": "DescribeSubnetGroups",
    "Description": "Returns a list of subnet group descriptions"
  },
  {
    "API": "dax:GeneratePresignedUrl",
    "EventSource": "dax",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "dax:IncreaseReplicationFactor",
    "EventSource": "dax",
    "EventName": "IncreaseReplicationFactor",
    "Description": "Adds one or more nodes to a DAX cluster"
  },
  {
    "API": "dax:ListTags",
    "EventSource": "dax",
    "EventName": "ListTags",
    "Description": "List all of the tags for a DAX cluster"
  },
  {
    "API": "dax:RebootNode",
    "EventSource": "dax",
    "EventName": "RebootNode",
    "Description": "Reboots a single node of a DAX cluster"
  },
  {
    "API": "dax:TagResource",
    "EventSource": "dax",
    "EventName": "TagResource",
    "Description": "Associates a set of tags with a DAX resource"
  },
  {
    "API": "dax:UntagResource",
    "EventSource": "dax",
    "EventName": "UntagResource",
    "Description": "Removes the association of tags from a DAX resource"
  },
  {
    "API": "dax:UpdateCluster",
    "EventSource": "dax",
    "EventName": "UpdateCluster",
    "Description": "Modifies the settings for a DAX cluster"
  },
  {
    "API": "dax:UpdateParameterGroup",
    "EventSource": "dax",
    "EventName": "UpdateParameterGroup",
    "Description": "Modifies the parameters of a parameter group"
  },
  {
    "API": "dax:UpdateSubnetGroup",
    "EventSource": "dax",
    "EventName": "UpdateSubnetGroup",
    "Description": "Modifies an existing subnet group"
  },
  {
    "API": "deadline:AssociateMemberToFarm",
    "EventSource": "deadline",
    "EventName": "AssociateMemberToFarm",
    "Description": "Assigns a farm membership level to a member"
  },
  {
    "API": "deadline:AssociateMemberToFleet",
    "EventSource": "deadline",
    "EventName": "AssociateMemberToFleet",
    "Description": "Assigns a fleet membership level to a member"
  },
  {
    "API": "deadline:AssociateMemberToJob",
    "EventSource": "deadline",
    "EventName": "AssociateMemberToJob",
    "Description": "Assigns a job membership level to a member"
  },
  {
    "API": "deadline:AssociateMemberToQueue",
    "EventSource": "deadline",
    "EventName": "AssociateMemberToQueue",
    "Description": "Assigns a queue membership level to a member"
  },
  {
    "API": "deadline:AssumeFleetRoleForRead",
    "EventSource": "deadline",
    "EventName": "AssumeFleetRoleForRead",
    "Description": "Get Amazon Web Services credentials from the fleet role"
  },
  {
    "API": "deadline:AssumeFleetRoleForWorker",
    "EventSource": "deadline",
    "EventName": "AssumeFleetRoleForWorker",
    "Description": "Get credentials from the fleet role for a worker"
  },
  {
    "API": "deadline:AssumeQueueRoleForRead",
    "EventSource": "deadline",
    "EventName": "AssumeQueueRoleForRead",
    "Description": "Gets Amazon Web Services credentials from the queue role"
  },
  {
    "API": "deadline:AssumeQueueRoleForUser",
    "EventSource": "deadline",
    "EventName": "AssumeQueueRoleForUser",
    "Description": "Allows a user to assume a role for a queue"
  },
  {
    "API": "deadline:AssumeQueueRoleForWorker",
    "EventSource": "deadline",
    "EventName": "AssumeQueueRoleForWorker",
    "Description": "Allows a worker to assume a queue role"
  },
  {
    "API": "deadline:BatchGetJobEntity",
    "EventSource": "deadline",
    "EventName": "BatchGetJobEntity",
    "Description": "Get batched job details for a worker"
  },
  {
    "API": "deadline:CopyJobTemplate",
    "EventSource": "deadline",
    "EventName": "CopyJobTemplate",
    "Description": "Copies a job template to an Amazon S3 bucket"
  },
  {
    "API": "deadline:CreateBudget",
    "EventSource": "deadline",
    "EventName": "CreateBudget",
    "Description": "Creates a budget to set spending thresholds for your rendering activity"
  },
  {
    "API": "deadline:CreateFarm",
    "EventSource": "deadline",
    "EventName": "CreateFarm",
    "Description": "Creates a farm to allow space for queues and fleets"
  },
  {
    "API": "deadline:CreateFleet",
    "EventSource": "deadline",
    "EventName": "CreateFleet",
    "Description": "Creates a fleet"
  },
  {
    "API": "deadline:CreateJob",
    "EventSource": "deadline",
    "EventName": "CreateJob",
    "Description": "Creates a job"
  },
  {
    "API": "deadline:CreateLicenseEndpoint",
    "EventSource": "deadline",
    "EventName": "CreateLicenseEndpoint",
    "Description": "Creates a license endpoint to integrate your various licensed software used for rendering on Deadline Cloud"
  },
  {
    "API": "deadline:CreateMonitor",
    "EventSource": "deadline",
    "EventName": "CreateMonitor",
    "Description": "Creates an Amazon Web Services Deadline Cloud monitor that you can use to view your farms, queues, and fleets"
  },
  {
    "API": "deadline:CreateQueue",
    "EventSource": "deadline",
    "EventName": "CreateQueue",
    "Description": "Creates a queue to coordinate the order in which jobs run on a farm"
  },
  {
    "API": "deadline:CreateQueueEnvironment",
    "EventSource": "deadline",
    "EventName": "CreateQueueEnvironment",
    "Description": "Creates an environment for a queue that defines how jobs in the queue run"
  },
  {
    "API": "deadline:CreateQueueFleetAssociation",
    "EventSource": "deadline",
    "EventName": "CreateQueueFleetAssociation",
    "Description": "Creates an association between a queue and a fleet"
  },
  {
    "API": "deadline:CreateStorageProfile",
    "EventSource": "deadline",
    "EventName": "CreateStorageProfile",
    "Description": "Creates a storage profile that specifies the operating system, file type, and file location of resources used on a farm"
  },
  {
    "API": "deadline:CreateWorker",
    "EventSource": "deadline",
    "EventName": "CreateWorker",
    "Description": "Creates a worker"
  },
  {
    "API": "deadline:DeleteBudget",
    "EventSource": "deadline",
    "EventName": "DeleteBudget",
    "Description": "Deletes a budget"
  },
  {
    "API": "deadline:DeleteFarm",
    "EventSource": "deadline",
    "EventName": "DeleteFarm",
    "Description": "Deletes a farm"
  },
  {
    "API": "deadline:DeleteFleet",
    "EventSource": "deadline",
    "EventName": "DeleteFleet",
    "Description": "Deletes a fleet"
  },
  {
    "API": "deadline:DeleteLicenseEndpoint",
    "EventSource": "deadline",
    "EventName": "DeleteLicenseEndpoint",
    "Description": "Deletes a license endpoint"
  },
  {
    "API": "deadline:DeleteMeteredProduct",
    "EventSource": "deadline",
    "EventName": "DeleteMeteredProduct",
    "Description": "Deletes a metered product"
  },
  {
    "API": "deadline:DeleteMonitor",
    "EventSource": "deadline",
    "EventName": "DeleteMonitor",
    "Description": "Removes a Deadline Cloud monitor"
  },
  {
    "API": "deadline:DeleteQueue",
    "EventSource": "deadline",
    "EventName": "DeleteQueue",
    "Description": "Deletes a queue"
  },
  {
    "API": "deadline:DeleteQueueEnvironment",
    "EventSource": "deadline",
    "EventName": "DeleteQueueEnvironment",
    "Description": "Deletes a queue environment"
  },
  {
    "API": "deadline:DeleteQueueFleetAssociation",
    "EventSource": "deadline",
    "EventName": "DeleteQueueFleetAssociation",
    "Description": "Deletes a queue-fleet association"
  },
  {
    "API": "deadline:DeleteStorageProfile",
    "EventSource": "deadline",
    "EventName": "DeleteStorageProfile",
    "Description": "Deletes a storage profile"
  },
  {
    "API": "deadline:DeleteWorker",
    "EventSource": "deadline",
    "EventName": "DeleteWorker",
    "Description": "Deletes a worker"
  },
  {
    "API": "deadline:DisassociateMemberFromFarm",
    "EventSource": "deadline",
    "EventName": "DisassociateMemberFromFarm",
    "Description": "Disassociates a member from a farm"
  },
  {
    "API": "deadline:DisassociateMemberFromFleet",
    "EventSource": "deadline",
    "EventName": "DisassociateMemberFromFleet",
    "Description": "Disassociates a member from a fleet"
  },
  {
    "API": "deadline:DisassociateMemberFromJob",
    "EventSource": "deadline",
    "EventName": "DisassociateMemberFromJob",
    "Description": "Disassociates a member from a job"
  },
  {
    "API": "deadline:DisassociateMemberFromQueue",
    "EventSource": "deadline",
    "EventName": "DisassociateMemberFromQueue",
    "Description": "Disassociates a member from a queue"
  },
  {
    "API": "deadline:GeneratePresignedUrl",
    "EventSource": "deadline",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "deadline:GetBudget",
    "EventSource": "deadline",
    "EventName": "GetBudget",
    "Description": "Get a budget"
  },
  {
    "API": "deadline:GetFarm",
    "EventSource": "deadline",
    "EventName": "GetFarm",
    "Description": "Get a farm"
  },
  {
    "API": "deadline:GetFleet",
    "EventSource": "deadline",
    "EventName": "GetFleet",
    "Description": "Get a fleet"
  },
  {
    "API": "deadline:GetJob",
    "EventSource": "deadline",
    "EventName": "GetJob",
    "Description": "Gets a Deadline Cloud job"
  },
  {
    "API": "deadline:GetLicenseEndpoint",
    "EventSource": "deadline",
    "EventName": "GetLicenseEndpoint",
    "Description": "Gets a licence endpoint"
  },
  {
    "API": "deadline:GetMonitor",
    "EventSource": "deadline",
    "EventName": "GetMonitor",
    "Description": "Gets information about the specified monitor"
  },
  {
    "API": "deadline:GetQueue",
    "EventSource": "deadline",
    "EventName": "GetQueue",
    "Description": "Gets a queue"
  },
  {
    "API": "deadline:GetQueueEnvironment",
    "EventSource": "deadline",
    "EventName": "GetQueueEnvironment",
    "Description": "Gets a queue environment"
  },
  {
    "API": "deadline:GetQueueFleetAssociation",
    "EventSource": "deadline",
    "EventName": "GetQueueFleetAssociation",
    "Description": "Gets a queue-fleet association"
  },
  {
    "API": "deadline:GetSession",
    "EventSource": "deadline",
    "EventName": "GetSession",
    "Description": "Gets a session"
  },
  {
    "API": "deadline:GetSessionAction",
    "EventSource": "deadline",
    "EventName": "GetSessionAction",
    "Description": "Gets a session action for the job"
  },
  {
    "API": "deadline:GetSessionsStatisticsAggregation",
    "EventSource": "deadline",
    "EventName": "GetSessionsStatisticsAggregation",
    "Description": "Gets a set of statistics for queues or farms"
  },
  {
    "API": "deadline:GetStep",
    "EventSource": "deadline",
    "EventName": "GetStep",
    "Description": "Gets a step"
  },
  {
    "API": "deadline:GetStorageProfile",
    "EventSource": "deadline",
    "EventName": "GetStorageProfile",
    "Description": "Gets a storage profile"
  },
  {
    "API": "deadline:GetStorageProfileForQueue",
    "EventSource": "deadline",
    "EventName": "GetStorageProfileForQueue",
    "Description": "Gets a storage profile for a queue"
  },
  {
    "API": "deadline:GetTask",
    "EventSource": "deadline",
    "EventName": "GetTask",
    "Description": "Gets a task"
  },
  {
    "API": "deadline:GetWorker",
    "EventSource": "deadline",
    "EventName": "GetWorker",
    "Description": "Gets a worker"
  },
  {
    "API": "deadline:ListAvailableMeteredProducts",
    "EventSource": "deadline",
    "EventName": "ListAvailableMeteredProducts",
    "Description": "A list of the available metered products"
  },
  {
    "API": "deadline:ListBudgets",
    "EventSource": "deadline",
    "EventName": "ListBudgets",
    "Description": "A list of budgets in a farm"
  },
  {
    "API": "deadline:ListFarmMembers",
    "EventSource": "deadline",
    "EventName": "ListFarmMembers",
    "Description": "Lists the members of a farm"
  },
  {
    "API": "deadline:ListFarms",
    "EventSource": "deadline",
    "EventName": "ListFarms",
    "Description": "Lists farms"
  },
  {
    "API": "deadline:ListFleetMembers",
    "EventSource": "deadline",
    "EventName": "ListFleetMembers",
    "Description": "Lists fleet members"
  },
  {
    "API": "deadline:ListFleets",
    "EventSource": "deadline",
    "EventName": "ListFleets",
    "Description": "Lists fleets"
  },
  {
    "API": "deadline:ListJobMembers",
    "EventSource": "deadline",
    "EventName": "ListJobMembers",
    "Description": "Lists members on a job"
  },
  {
    "API": "deadline:ListJobs",
    "EventSource": "deadline",
    "EventName": "ListJobs",
    "Description": "Lists jobs"
  },
  {
    "API": "deadline:ListLicenseEndpoints",
    "EventSource": "deadline",
    "EventName": "ListLicenseEndpoints",
    "Description": "Lists license endpoints"
  },
  {
    "API": "deadline:ListMeteredProducts",
    "EventSource": "deadline",
    "EventName": "ListMeteredProducts",
    "Description": "Lists metered products"
  },
  {
    "API": "deadline:ListMonitors",
    "EventSource": "deadline",
    "EventName": "ListMonitors",
    "Description": "Gets a list of your monitors in Deadline Cloud"
  },
  {
    "API": "deadline:ListQueueEnvironments",
    "EventSource": "deadline",
    "EventName": "ListQueueEnvironments",
    "Description": "Lists queue environments"
  },
  {
    "API": "deadline:ListQueueFleetAssociations",
    "EventSource": "deadline",
    "EventName": "ListQueueFleetAssociations",
    "Description": "Lists queue-fleet associations"
  },
  {
    "API": "deadline:ListQueueMembers",
    "EventSource": "deadline",
    "EventName": "ListQueueMembers",
    "Description": "Lists the members in a queue"
  },
  {
    "API": "deadline:ListQueues",
    "EventSource": "deadline",
    "EventName": "ListQueues",
    "Description": "Lists queues"
  },
  {
    "API": "deadline:ListSessionActions",
    "EventSource": "deadline",
    "EventName": "ListSessionActions",
    "Description": "Lists session actions"
  },
  {
    "API": "deadline:ListSessions",
    "EventSource": "deadline",
    "EventName": "ListSessions",
    "Description": "Lists sessions"
  },
  {
    "API": "deadline:ListSessionsForWorker",
    "EventSource": "deadline",
    "EventName": "ListSessionsForWorker",
    "Description": "Lists sessions for a worker"
  },
  {
    "API": "deadline:ListStepConsumers",
    "EventSource": "deadline",
    "EventName": "ListStepConsumers",
    "Description": "Lists step consumers"
  },
  {
    "API": "deadline:ListStepDependencies",
    "EventSource": "deadline",
    "EventName": "ListStepDependencies",
    "Description": "Lists the dependencies for a step"
  },
  {
    "API": "deadline:ListSteps",
    "EventSource": "deadline",
    "EventName": "ListSteps",
    "Description": "Lists steps for a job"
  },
  {
    "API": "deadline:ListStorageProfiles",
    "EventSource": "deadline",
    "EventName": "ListStorageProfiles",
    "Description": "Lists storage profiles"
  },
  {
    "API": "deadline:ListStorageProfilesForQueue",
    "EventSource": "deadline",
    "EventName": "ListStorageProfilesForQueue",
    "Description": "Lists storage profiles for a queue"
  },
  {
    "API": "deadline:ListTagsForResource",
    "EventSource": "deadline",
    "EventName": "ListTagsForResource",
    "Description": "Lists tags for a resource"
  },
  {
    "API": "deadline:ListTasks",
    "EventSource": "deadline",
    "EventName": "ListTasks",
    "Description": "Lists tasks for a job"
  },
  {
    "API": "deadline:ListWorkers",
    "EventSource": "deadline",
    "EventName": "ListWorkers",
    "Description": "Lists workers"
  },
  {
    "API": "deadline:PutMeteredProduct",
    "EventSource": "deadline",
    "EventName": "PutMeteredProduct",
    "Description": "Adds a metered product"
  },
  {
    "API": "deadline:SearchJobs",
    "EventSource": "deadline",
    "EventName": "SearchJobs",
    "Description": "Searches for jobs"
  },
  {
    "API": "deadline:SearchSteps",
    "EventSource": "deadline",
    "EventName": "SearchSteps",
    "Description": "Searches for steps"
  },
  {
    "API": "deadline:SearchTasks",
    "EventSource": "deadline",
    "EventName": "SearchTasks",
    "Description": "Searches for tasks"
  },
  {
    "API": "deadline:SearchWorkers",
    "EventSource": "deadline",
    "EventName": "SearchWorkers",
    "Description": "Searches for workers"
  },
  {
    "API": "deadline:StartSessionsStatisticsAggregation",
    "EventSource": "deadline",
    "EventName": "StartSessionsStatisticsAggregation",
    "Description": "Starts an asynchronous request for getting aggregated statistics about queues and farms"
  },
  {
    "API": "deadline:TagResource",
    "EventSource": "deadline",
    "EventName": "TagResource",
    "Description": "Tags a resource using the resource's ARN and desired tags"
  },
  {
    "API": "deadline:UntagResource",
    "EventSource": "deadline",
    "EventName": "UntagResource",
    "Description": "Removes a tag from a resource using the resource's ARN and tag to remove"
  },
  {
    "API": "deadline:UpdateBudget",
    "EventSource": "deadline",
    "EventName": "UpdateBudget",
    "Description": "Updates a budget that sets spending thresholds for rendering activity"
  },
  {
    "API": "deadline:UpdateFarm",
    "EventSource": "deadline",
    "EventName": "UpdateFarm",
    "Description": "Updates a farm"
  },
  {
    "API": "deadline:UpdateFleet",
    "EventSource": "deadline",
    "EventName": "UpdateFleet",
    "Description": "Updates a fleet"
  },
  {
    "API": "deadline:UpdateJob",
    "EventSource": "deadline",
    "EventName": "UpdateJob",
    "Description": "Updates a job"
  },
  {
    "API": "deadline:UpdateMonitor",
    "EventSource": "deadline",
    "EventName": "UpdateMonitor",
    "Description": "Modifies the settings for a Deadline Cloud monitor"
  },
  {
    "API": "deadline:UpdateQueue",
    "EventSource": "deadline",
    "EventName": "UpdateQueue",
    "Description": "Updates a queue"
  },
  {
    "API": "deadline:UpdateQueueEnvironment",
    "EventSource": "deadline",
    "EventName": "UpdateQueueEnvironment",
    "Description": "Updates the queue environment"
  },
  {
    "API": "deadline:UpdateQueueFleetAssociation",
    "EventSource": "deadline",
    "EventName": "UpdateQueueFleetAssociation",
    "Description": "Updates a queue-fleet association"
  },
  {
    "API": "deadline:UpdateSession",
    "EventSource": "deadline",
    "EventName": "UpdateSession",
    "Description": "Updates a session"
  },
  {
    "API": "deadline:UpdateStep",
    "EventSource": "deadline",
    "EventName": "UpdateStep",
    "Description": "Updates a step"
  },
  {
    "API": "deadline:UpdateStorageProfile",
    "EventSource": "deadline",
    "EventName": "UpdateStorageProfile",
    "Description": "Updates a storage profile"
  },
  {
    "API": "deadline:UpdateTask",
    "EventSource": "deadline",
    "EventName": "UpdateTask",
    "Description": "Updates a task"
  },
  {
    "API": "deadline:UpdateWorker",
    "EventSource": "deadline",
    "EventName": "UpdateWorker",
    "Description": "Updates a worker"
  },
  {
    "API": "deadline:UpdateWorkerSchedule",
    "EventSource": "deadline",
    "EventName": "UpdateWorkerSchedule",
    "Description": "Updates the schedule for a worker"
  },
  {
    "API": "detective:AcceptInvitation",
    "EventSource": "detective",
    "EventName": "AcceptInvitation",
    "Description": "Accepts an invitation for the member account to contribute data to a behavior graph"
  },
  {
    "API": "detective:BatchGetGraphMemberDatasources",
    "EventSource": "detective",
    "EventName": "BatchGetGraphMemberDatasources",
    "Description": "Gets data source package information for the behavior graph"
  },
  {
    "API": "detective:BatchGetMembershipDatasources",
    "EventSource": "detective",
    "EventName": "BatchGetMembershipDatasources",
    "Description": "Gets information on the data source package history for an account"
  },
  {
    "API": "detective:CreateGraph",
    "EventSource": "detective",
    "EventName": "CreateGraph",
    "Description": "Creates a new behavior graph for the calling account, and sets that account as the administrator account"
  },
  {
    "API": "detective:CreateMembers",
    "EventSource": "detective",
    "EventName": "CreateMembers",
    "Description": "``CreateMembers`` is used to send invitations to accounts"
  },
  {
    "API": "detective:DeleteGraph",
    "EventSource": "detective",
    "EventName": "DeleteGraph",
    "Description": "Disables the specified behavior graph and queues it to be deleted"
  },
  {
    "API": "detective:DeleteMembers",
    "EventSource": "detective",
    "EventName": "DeleteMembers",
    "Description": "Removes the specified member accounts from the behavior graph"
  },
  {
    "API": "detective:DescribeOrganizationConfiguration",
    "EventSource": "detective",
    "EventName": "DescribeOrganizationConfiguration",
    "Description": "Returns information about the configuration for the organization behavior graph"
  },
  {
    "API": "detective:DisableOrganizationAdminAccount",
    "EventSource": "detective",
    "EventName": "DisableOrganizationAdminAccount",
    "Description": "Removes the Detective administrator account in the current Region"
  },
  {
    "API": "detective:DisassociateMembership",
    "EventSource": "detective",
    "EventName": "DisassociateMembership",
    "Description": "Removes the member account from the specified behavior graph"
  },
  {
    "API": "detective:EnableOrganizationAdminAccount",
    "EventSource": "detective",
    "EventName": "EnableOrganizationAdminAccount",
    "Description": "Designates the Detective administrator account for the organization in the current Region"
  },
  {
    "API": "detective:GeneratePresignedUrl",
    "EventSource": "detective",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "detective:GetInvestigation",
    "EventSource": "detective",
    "EventName": "GetInvestigation",
    "Description": "Detective investigations lets you investigate IAM users and IAM roles using indicators of compromise"
  },
  {
    "API": "detective:GetMembers",
    "EventSource": "detective",
    "EventName": "GetMembers",
    "Description": "Returns the membership details for specified member accounts for a behavior graph"
  },
  {
    "API": "detective:ListDatasourcePackages",
    "EventSource": "detective",
    "EventName": "ListDatasourcePackages",
    "Description": "Lists data source packages in the behavior graph"
  },
  {
    "API": "detective:ListGraphs",
    "EventSource": "detective",
    "EventName": "ListGraphs",
    "Description": "Returns the list of behavior graphs that the calling account is an administrator account of"
  },
  {
    "API": "detective:ListIndicators",
    "EventSource": "detective",
    "EventName": "ListIndicators",
    "Description": "Gets the indicators from an investigation"
  },
  {
    "API": "detective:ListInvestigations",
    "EventSource": "detective",
    "EventName": "ListInvestigations",
    "Description": "Detective investigations lets you investigate IAM users and IAM roles using indicators of compromise"
  },
  {
    "API": "detective:ListInvitations",
    "EventSource": "detective",
    "EventName": "ListInvitations",
    "Description": "Retrieves the list of open and accepted behavior graph invitations for the member account"
  },
  {
    "API": "detective:ListMembers",
    "EventSource": "detective",
    "EventName": "ListMembers",
    "Description": "Retrieves the list of member accounts for a behavior graph"
  },
  {
    "API": "detective:ListOrganizationAdminAccounts",
    "EventSource": "detective",
    "EventName": "ListOrganizationAdminAccounts",
    "Description": "Returns information about the Detective administrator account for an organization"
  },
  {
    "API": "detective:ListTagsForResource",
    "EventSource": "detective",
    "EventName": "ListTagsForResource",
    "Description": "Returns the tag values that are assigned to a behavior graph"
  },
  {
    "API": "detective:RejectInvitation",
    "EventSource": "detective",
    "EventName": "RejectInvitation",
    "Description": "Rejects an invitation to contribute the account data to a behavior graph"
  },
  {
    "API": "detective:StartInvestigation",
    "EventSource": "detective",
    "EventName": "StartInvestigation",
    "Description": "Detective investigations lets you investigate IAM users and IAM roles using indicators of compromise"
  },
  {
    "API": "detective:StartMonitoringMember",
    "EventSource": "detective",
    "EventName": "StartMonitoringMember",
    "Description": "Sends a request to enable data ingest for a member account that has a status of ``ACCEPTED_BUT_DISABLED``"
  },
  {
    "API": "detective:TagResource",
    "EventSource": "detective",
    "EventName": "TagResource",
    "Description": "Applies tag values to a behavior graph"
  },
  {
    "API": "detective:UntagResource",
    "EventSource": "detective",
    "EventName": "UntagResource",
    "Description": "Removes tags from a behavior graph"
  },
  {
    "API": "detective:UpdateDatasourcePackages",
    "EventSource": "detective",
    "EventName": "UpdateDatasourcePackages",
    "Description": "Starts a data source packages for the behavior graph"
  },
  {
    "API": "detective:UpdateInvestigationState",
    "EventSource": "detective",
    "EventName": "UpdateInvestigationState",
    "Description": "Updates the state of an investigation"
  },
  {
    "API": "detective:UpdateOrganizationConfiguration",
    "EventSource": "detective",
    "EventName": "UpdateOrganizationConfiguration",
    "Description": "Updates the configuration for the Organizations integration in the current Region"
  },
  {
    "API": "devicefarm:CreateDevicePool",
    "EventSource": "devicefarm",
    "EventName": "CreateDevicePool",
    "Description": "Creates a device pool"
  },
  {
    "API": "devicefarm:CreateInstanceProfile",
    "EventSource": "devicefarm",
    "EventName": "CreateInstanceProfile",
    "Description": "Creates a profile that can be applied to one or more private fleet device instances"
  },
  {
    "API": "devicefarm:CreateNetworkProfile",
    "EventSource": "devicefarm",
    "EventName": "CreateNetworkProfile",
    "Description": "Creates a network profile"
  },
  {
    "API": "devicefarm:CreateProject",
    "EventSource": "devicefarm",
    "EventName": "CreateProject",
    "Description": "Creates a project"
  },
  {
    "API": "devicefarm:CreateRemoteAccessSession",
    "EventSource": "devicefarm",
    "EventName": "CreateRemoteAccessSession",
    "Description": "Specifies and starts a remote access session"
  },
  {
    "API": "devicefarm:CreateTestGridProject",
    "EventSource": "devicefarm",
    "EventName": "CreateTestGridProject",
    "Description": "Creates a Selenium testing project"
  },
  {
    "API": "devicefarm:CreateTestGridUrl",
    "EventSource": "devicefarm",
    "EventName": "CreateTestGridUrl",
    "Description": "Creates a signed, short-term URL that can be passed to a Selenium ``RemoteWebDriver`` constructor"
  },
  {
    "API": "devicefarm:CreateUpload",
    "EventSource": "devicefarm",
    "EventName": "CreateUpload",
    "Description": "Uploads an app or test scripts"
  },
  {
    "API": "devicefarm:CreateVpceConfiguration",
    "EventSource": "devicefarm",
    "EventName": "CreateVpceConfiguration",
    "Description": "Creates a configuration record in Device Farm for your Amazon Virtual Private Cloud (VPC) endpoint"
  },
  {
    "API": "devicefarm:DeleteDevicePool",
    "EventSource": "devicefarm",
    "EventName": "DeleteDevicePool",
    "Description": "Deletes a device pool given the pool ARN"
  },
  {
    "API": "devicefarm:DeleteInstanceProfile",
    "EventSource": "devicefarm",
    "EventName": "DeleteInstanceProfile",
    "Description": "Deletes a profile that can be applied to one or more private device instances"
  },
  {
    "API": "devicefarm:DeleteNetworkProfile",
    "EventSource": "devicefarm",
    "EventName": "DeleteNetworkProfile",
    "Description": "Deletes a network profile"
  },
  {
    "API": "devicefarm:DeleteProject",
    "EventSource": "devicefarm",
    "EventName": "DeleteProject",
    "Description": "Deletes an AWS Device Farm project, given the project ARN"
  },
  {
    "API": "devicefarm:DeleteRemoteAccessSession",
    "EventSource": "devicefarm",
    "EventName": "DeleteRemoteAccessSession",
    "Description": "Deletes a completed remote access session and its results"
  },
  {
    "API": "devicefarm:DeleteRun",
    "EventSource": "devicefarm",
    "EventName": "DeleteRun",
    "Description": "Deletes the run, given the run ARN"
  },
  {
    "API": "devicefarm:DeleteTestGridProject",
    "EventSource": "devicefarm",
    "EventName": "DeleteTestGridProject",
    "Description": "Deletes a Selenium testing project and all content generated under it"
  },
  {
    "API": "devicefarm:DeleteUpload",
    "EventSource": "devicefarm",
    "EventName": "DeleteUpload",
    "Description": "Deletes an upload given the upload ARN"
  },
  {
    "API": "devicefarm:DeleteVpceConfiguration",
    "EventSource": "devicefarm",
    "EventName": "DeleteVpceConfiguration",
    "Description": "Deletes a configuration for your Amazon Virtual Private Cloud (VPC) endpoint"
  },
  {
    "API": "devicefarm:GeneratePresignedUrl",
    "EventSource": "devicefarm",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "devicefarm:GetAccountSettings",
    "EventSource": "devicefarm",
    "EventName": "GetAccountSettings",
    "Description": "Returns the number of unmetered iOS or unmetered Android devices that have been purchased by the account"
  },
  {
    "API": "devicefarm:GetDevice",
    "EventSource": "devicefarm",
    "EventName": "GetDevice",
    "Description": "Gets information about a unique device type"
  },
  {
    "API": "devicefarm:GetDeviceInstance",
    "EventSource": "devicefarm",
    "EventName": "GetDeviceInstance",
    "Description": "Returns information about a device instance that belongs to a private device fleet"
  },
  {
    "API": "devicefarm:GetDevicePool",
    "EventSource": "devicefarm",
    "EventName": "GetDevicePool",
    "Description": "Gets information about a device pool"
  },
  {
    "API": "devicefarm:GetDevicePoolCompatibility",
    "EventSource": "devicefarm",
    "EventName": "GetDevicePoolCompatibility",
    "Description": "Gets information about compatibility with a device pool"
  },
  {
    "API": "devicefarm:GetInstanceProfile",
    "EventSource": "devicefarm",
    "EventName": "GetInstanceProfile",
    "Description": "Returns information about the specified instance profile"
  },
  {
    "API": "devicefarm:GetJob",
    "EventSource": "devicefarm",
    "EventName": "GetJob",
    "Description": "Gets information about a job"
  },
  {
    "API": "devicefarm:GetNetworkProfile",
    "EventSource": "devicefarm",
    "EventName": "GetNetworkProfile",
    "Description": "Returns information about a network profile"
  },
  {
    "API": "devicefarm:GetOfferingStatus",
    "EventSource": "devicefarm",
    "EventName": "GetOfferingStatus",
    "Description": "Gets the current status and future status of all offerings purchased by an AWS account"
  },
  {
    "API": "devicefarm:GetProject",
    "EventSource": "devicefarm",
    "EventName": "GetProject",
    "Description": "Gets information about a project"
  },
  {
    "API": "devicefarm:GetRemoteAccessSession",
    "EventSource": "devicefarm",
    "EventName": "GetRemoteAccessSession",
    "Description": "Returns a link to a currently running remote access session"
  },
  {
    "API": "devicefarm:GetRun",
    "EventSource": "devicefarm",
    "EventName": "GetRun",
    "Description": "Gets information about a run"
  },
  {
    "API": "devicefarm:GetSuite",
    "EventSource": "devicefarm",
    "EventName": "GetSuite",
    "Description": "Gets information about a suite"
  },
  {
    "API": "devicefarm:GetTest",
    "EventSource": "devicefarm",
    "EventName": "GetTest",
    "Description": "Gets information about a test"
  },
  {
    "API": "devicefarm:GetTestGridProject",
    "EventSource": "devicefarm",
    "EventName": "GetTestGridProject",
    "Description": "Retrieves information about a Selenium testing project"
  },
  {
    "API": "devicefarm:GetTestGridSession",
    "EventSource": "devicefarm",
    "EventName": "GetTestGridSession",
    "Description": "A session is an instance of a browser created through a ``RemoteWebDriver`` with the URL from  CreateTestGridUrlResult$url"
  },
  {
    "API": "devicefarm:GetUpload",
    "EventSource": "devicefarm",
    "EventName": "GetUpload",
    "Description": "Gets information about an upload"
  },
  {
    "API": "devicefarm:GetVpceConfiguration",
    "EventSource": "devicefarm",
    "EventName": "GetVpceConfiguration",
    "Description": "Returns information about the configuration settings for your Amazon Virtual Private Cloud (VPC) endpoint"
  },
  {
    "API": "devicefarm:InstallToRemoteAccessSession",
    "EventSource": "devicefarm",
    "EventName": "InstallToRemoteAccessSession",
    "Description": "Installs an application to the device in a remote access session"
  },
  {
    "API": "devicefarm:ListArtifacts",
    "EventSource": "devicefarm",
    "EventName": "ListArtifacts",
    "Description": "Gets information about artifacts"
  },
  {
    "API": "devicefarm:ListDeviceInstances",
    "EventSource": "devicefarm",
    "EventName": "ListDeviceInstances",
    "Description": "Returns information about the private device instances associated with one or more AWS accounts"
  },
  {
    "API": "devicefarm:ListDevicePools",
    "EventSource": "devicefarm",
    "EventName": "ListDevicePools",
    "Description": "Gets information about device pools"
  },
  {
    "API": "devicefarm:ListDevices",
    "EventSource": "devicefarm",
    "EventName": "ListDevices",
    "Description": "Gets information about unique device types"
  },
  {
    "API": "devicefarm:ListInstanceProfiles",
    "EventSource": "devicefarm",
    "EventName": "ListInstanceProfiles",
    "Description": "Returns information about all the instance profiles in an AWS account"
  },
  {
    "API": "devicefarm:ListJobs",
    "EventSource": "devicefarm",
    "EventName": "ListJobs",
    "Description": "Gets information about jobs for a given test run"
  },
  {
    "API": "devicefarm:ListNetworkProfiles",
    "EventSource": "devicefarm",
    "EventName": "ListNetworkProfiles",
    "Description": "Returns the list of available network profiles"
  },
  {
    "API": "devicefarm:ListOfferingPromotions",
    "EventSource": "devicefarm",
    "EventName": "ListOfferingPromotions",
    "Description": "Returns a list of offering promotions"
  },
  {
    "API": "devicefarm:ListOfferingTransactions",
    "EventSource": "devicefarm",
    "EventName": "ListOfferingTransactions",
    "Description": "Returns a list of all historical purchases, renewals, and system renewal transactions for an AWS account"
  },
  {
    "API": "devicefarm:ListOfferings",
    "EventSource": "devicefarm",
    "EventName": "ListOfferings",
    "Description": "Returns a list of products or offerings that the user can manage through the API"
  },
  {
    "API": "devicefarm:ListProjects",
    "EventSource": "devicefarm",
    "EventName": "ListProjects",
    "Description": "Gets information about projects"
  },
  {
    "API": "devicefarm:ListRemoteAccessSessions",
    "EventSource": "devicefarm",
    "EventName": "ListRemoteAccessSessions",
    "Description": "Returns a list of all currently running remote access sessions"
  },
  {
    "API": "devicefarm:ListRuns",
    "EventSource": "devicefarm",
    "EventName": "ListRuns",
    "Description": "Gets information about runs, given an AWS Device Farm project ARN"
  },
  {
    "API": "devicefarm:ListSamples",
    "EventSource": "devicefarm",
    "EventName": "ListSamples",
    "Description": "Gets information about samples, given an AWS Device Farm job ARN"
  },
  {
    "API": "devicefarm:ListSuites",
    "EventSource": "devicefarm",
    "EventName": "ListSuites",
    "Description": "Gets information about test suites for a given job"
  },
  {
    "API": "devicefarm:ListTagsForResource",
    "EventSource": "devicefarm",
    "EventName": "ListTagsForResource",
    "Description": "List the tags for an AWS Device Farm resource"
  },
  {
    "API": "devicefarm:ListTestGridProjects",
    "EventSource": "devicefarm",
    "EventName": "ListTestGridProjects",
    "Description": "Gets a list of all Selenium testing projects in your account"
  },
  {
    "API": "devicefarm:ListTestGridSessionActions",
    "EventSource": "devicefarm",
    "EventName": "ListTestGridSessionActions",
    "Description": "Returns a list of the actions taken in a  TestGridSession"
  },
  {
    "API": "devicefarm:ListTestGridSessionArtifacts",
    "EventSource": "devicefarm",
    "EventName": "ListTestGridSessionArtifacts",
    "Description": "Retrieves a list of artifacts created during the session"
  },
  {
    "API": "devicefarm:ListTestGridSessions",
    "EventSource": "devicefarm",
    "EventName": "ListTestGridSessions",
    "Description": "Retrieves a list of sessions for a  TestGridProject"
  },
  {
    "API": "devicefarm:ListTests",
    "EventSource": "devicefarm",
    "EventName": "ListTests",
    "Description": "Gets information about tests in a given test suite"
  },
  {
    "API": "devicefarm:ListUniqueProblems",
    "EventSource": "devicefarm",
    "EventName": "ListUniqueProblems",
    "Description": "Gets information about unique problems, such as exceptions or crashes"
  },
  {
    "API": "devicefarm:ListUploads",
    "EventSource": "devicefarm",
    "EventName": "ListUploads",
    "Description": "Gets information about uploads, given an AWS Device Farm project ARN"
  },
  {
    "API": "devicefarm:ListVpceConfigurations",
    "EventSource": "devicefarm",
    "EventName": "ListVpceConfigurations",
    "Description": "Returns information about all Amazon Virtual Private Cloud (VPC) endpoint configurations in the AWS account"
  },
  {
    "API": "devicefarm:PurchaseOffering",
    "EventSource": "devicefarm",
    "EventName": "PurchaseOffering",
    "Description": "Immediately purchases offerings for an AWS account"
  },
  {
    "API": "devicefarm:RenewOffering",
    "EventSource": "devicefarm",
    "EventName": "RenewOffering",
    "Description": "Explicitly sets the quantity of devices to renew for an offering, starting from the ``effectiveDate`` of the next period"
  },
  {
    "API": "devicefarm:ScheduleRun",
    "EventSource": "devicefarm",
    "EventName": "ScheduleRun",
    "Description": "Schedules a run"
  },
  {
    "API": "devicefarm:StopJob",
    "EventSource": "devicefarm",
    "EventName": "StopJob",
    "Description": "Initiates a stop request for the current job"
  },
  {
    "API": "devicefarm:StopRemoteAccessSession",
    "EventSource": "devicefarm",
    "EventName": "StopRemoteAccessSession",
    "Description": "Ends a specified remote access session"
  },
  {
    "API": "devicefarm:StopRun",
    "EventSource": "devicefarm",
    "EventName": "StopRun",
    "Description": "Initiates a stop request for the current test run"
  },
  {
    "API": "devicefarm:TagResource",
    "EventSource": "devicefarm",
    "EventName": "TagResource",
    "Description": "Associates the specified tags to a resource with the specified ``resourceArn``"
  },
  {
    "API": "devicefarm:UntagResource",
    "EventSource": "devicefarm",
    "EventName": "UntagResource",
    "Description": "Deletes the specified tags from a resource"
  },
  {
    "API": "devicefarm:UpdateDeviceInstance",
    "EventSource": "devicefarm",
    "EventName": "UpdateDeviceInstance",
    "Description": "Updates information about a private device instance"
  },
  {
    "API": "devicefarm:UpdateDevicePool",
    "EventSource": "devicefarm",
    "EventName": "UpdateDevicePool",
    "Description": "Modifies the name, description, and rules in a device pool given the attributes and the pool ARN"
  },
  {
    "API": "devicefarm:UpdateInstanceProfile",
    "EventSource": "devicefarm",
    "EventName": "UpdateInstanceProfile",
    "Description": "Updates information about an existing private device instance profile"
  },
  {
    "API": "devicefarm:UpdateNetworkProfile",
    "EventSource": "devicefarm",
    "EventName": "UpdateNetworkProfile",
    "Description": "Updates the network profile"
  },
  {
    "API": "devicefarm:UpdateProject",
    "EventSource": "devicefarm",
    "EventName": "UpdateProject",
    "Description": "Modifies the specified project name, given the project ARN and a new name"
  },
  {
    "API": "devicefarm:UpdateTestGridProject",
    "EventSource": "devicefarm",
    "EventName": "UpdateTestGridProject",
    "Description": "Change details of a project"
  },
  {
    "API": "devicefarm:UpdateUpload",
    "EventSource": "devicefarm",
    "EventName": "UpdateUpload",
    "Description": "Updates an uploaded test spec"
  },
  {
    "API": "devicefarm:UpdateVpceConfiguration",
    "EventSource": "devicefarm",
    "EventName": "UpdateVpceConfiguration",
    "Description": "Updates information about an Amazon Virtual Private Cloud (VPC) endpoint configuration"
  },
  {
    "API": "devops-guru:AddNotificationChannel",
    "EventSource": "devops-guru",
    "EventName": "AddNotificationChannel",
    "Description": "Adds a notification channel to DevOps Guru"
  },
  {
    "API": "devops-guru:DeleteInsight",
    "EventSource": "devops-guru",
    "EventName": "DeleteInsight",
    "Description": "Deletes the insight along with the associated anomalies, events and recommendations"
  },
  {
    "API": "devops-guru:DescribeAccountHealth",
    "EventSource": "devops-guru",
    "EventName": "DescribeAccountHealth",
    "Description": "Returns the number of open reactive insights, the number of open proactive insights, and the number of metrics analyzed in your Amazon Web Services account"
  },
  {
    "API": "devops-guru:DescribeAccountOverview",
    "EventSource": "devops-guru",
    "EventName": "DescribeAccountOverview",
    "Description": "For the time range passed in, returns the number of open reactive insight that were created, the number of open proactive insights that were created, and the Mean Time to Recover (MTTR) for all closed reactive insights"
  },
  {
    "API": "devops-guru:DescribeAnomaly",
    "EventSource": "devops-guru",
    "EventName": "DescribeAnomaly",
    "Description": "Returns details about an anomaly that you specify using its ID"
  },
  {
    "API": "devops-guru:DescribeEventSourcesConfig",
    "EventSource": "devops-guru",
    "EventName": "DescribeEventSourcesConfig",
    "Description": "Returns the integration status of services that are integrated with DevOps Guru as Consumer via EventBridge"
  },
  {
    "API": "devops-guru:DescribeFeedback",
    "EventSource": "devops-guru",
    "EventName": "DescribeFeedback",
    "Description": "Returns the most recent feedback submitted in the current Amazon Web Services account and Region"
  },
  {
    "API": "devops-guru:DescribeInsight",
    "EventSource": "devops-guru",
    "EventName": "DescribeInsight",
    "Description": "Returns details about an insight that you specify using its ID"
  },
  {
    "API": "devops-guru:DescribeOrganizationHealth",
    "EventSource": "devops-guru",
    "EventName": "DescribeOrganizationHealth",
    "Description": "Returns active insights, predictive insights, and resource hours analyzed in last hour"
  },
  {
    "API": "devops-guru:DescribeOrganizationOverview",
    "EventSource": "devops-guru",
    "EventName": "DescribeOrganizationOverview",
    "Description": "Returns an overview of your organization's history based on the specified time range"
  },
  {
    "API": "devops-guru:DescribeOrganizationResourceCollectionHealth",
    "EventSource": "devops-guru",
    "EventName": "DescribeOrganizationResourceCollectionHealth",
    "Description": "Provides an overview of your system's health"
  },
  {
    "API": "devops-guru:DescribeResourceCollectionHealth",
    "EventSource": "devops-guru",
    "EventName": "DescribeResourceCollectionHealth",
    "Description": "Returns the number of open proactive insights, open reactive insights, and the Mean Time to Recover (MTTR) for all closed insights in resource collections in your account"
  },
  {
    "API": "devops-guru:DescribeServiceIntegration",
    "EventSource": "devops-guru",
    "EventName": "DescribeServiceIntegration",
    "Description": "Returns the integration status of services that are integrated with DevOps Guru"
  },
  {
    "API": "devops-guru:GeneratePresignedUrl",
    "EventSource": "devops-guru",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "devops-guru:GetCostEstimation",
    "EventSource": "devops-guru",
    "EventName": "GetCostEstimation",
    "Description": "Returns an estimate of the monthly cost for DevOps Guru to analyze your Amazon Web Services resources"
  },
  {
    "API": "devops-guru:GetResourceCollection",
    "EventSource": "devops-guru",
    "EventName": "GetResourceCollection",
    "Description": "Returns lists Amazon Web Services resources that are of the specified resource collection type"
  },
  {
    "API": "devops-guru:ListAnomaliesForInsight",
    "EventSource": "devops-guru",
    "EventName": "ListAnomaliesForInsight",
    "Description": "Returns a list of the anomalies that belong to an insight that you specify using its ID"
  },
  {
    "API": "devops-guru:ListAnomalousLogGroups",
    "EventSource": "devops-guru",
    "EventName": "ListAnomalousLogGroups",
    "Description": "Returns the list of log groups that contain log anomalies"
  },
  {
    "API": "devops-guru:ListEvents",
    "EventSource": "devops-guru",
    "EventName": "ListEvents",
    "Description": "Returns a list of the events emitted by the resources that are evaluated by DevOps Guru"
  },
  {
    "API": "devops-guru:ListInsights",
    "EventSource": "devops-guru",
    "EventName": "ListInsights",
    "Description": "Returns a list of insights in your Amazon Web Services account"
  },
  {
    "API": "devops-guru:ListMonitoredResources",
    "EventSource": "devops-guru",
    "EventName": "ListMonitoredResources",
    "Description": "Returns the list of all log groups that are being monitored and tagged by DevOps Guru"
  },
  {
    "API": "devops-guru:ListNotificationChannels",
    "EventSource": "devops-guru",
    "EventName": "ListNotificationChannels",
    "Description": "Returns a list of notification channels configured for DevOps Guru"
  },
  {
    "API": "devops-guru:ListOrganizationInsights",
    "EventSource": "devops-guru",
    "EventName": "ListOrganizationInsights",
    "Description": "Returns a list of insights associated with the account or OU Id"
  },
  {
    "API": "devops-guru:ListRecommendations",
    "EventSource": "devops-guru",
    "EventName": "ListRecommendations",
    "Description": "Returns a list of a specified insight's recommendations"
  },
  {
    "API": "devops-guru:PutFeedback",
    "EventSource": "devops-guru",
    "EventName": "PutFeedback",
    "Description": "Collects customer feedback about the specified insight"
  },
  {
    "API": "devops-guru:RemoveNotificationChannel",
    "EventSource": "devops-guru",
    "EventName": "RemoveNotificationChannel",
    "Description": "Removes a notification channel from DevOps Guru"
  },
  {
    "API": "devops-guru:SearchInsights",
    "EventSource": "devops-guru",
    "EventName": "SearchInsights",
    "Description": "Returns a list of insights in your Amazon Web Services account"
  },
  {
    "API": "devops-guru:SearchOrganizationInsights",
    "EventSource": "devops-guru",
    "EventName": "SearchOrganizationInsights",
    "Description": "Returns a list of insights in your organization"
  },
  {
    "API": "devops-guru:StartCostEstimation",
    "EventSource": "devops-guru",
    "EventName": "StartCostEstimation",
    "Description": "Starts the creation of an estimate of the monthly cost to analyze your Amazon Web Services resources"
  },
  {
    "API": "devops-guru:UpdateEventSourcesConfig",
    "EventSource": "devops-guru",
    "EventName": "UpdateEventSourcesConfig",
    "Description": "Enables or disables integration with a service that can be integrated with DevOps Guru"
  },
  {
    "API": "devops-guru:UpdateResourceCollection",
    "EventSource": "devops-guru",
    "EventName": "UpdateResourceCollection",
    "Description": "Updates the collection of resources that DevOps Guru analyzes"
  },
  {
    "API": "devops-guru:UpdateServiceIntegration",
    "EventSource": "devops-guru",
    "EventName": "UpdateServiceIntegration",
    "Description": "Enables or disables integration with a service that can be integrated with DevOps Guru"
  },
  {
    "API": "directconnect:AcceptDirectConnectGatewayAssociationProposal",
    "EventSource": "directconnect",
    "EventName": "AcceptDirectConnectGatewayAssociationProposal",
    "Description": "Accepts a proposal request to attach a virtual private gateway or transit gateway to a Direct Connect gateway"
  },
  {
    "API": "directconnect:AllocateConnectionOnInterconnect",
    "EventSource": "directconnect",
    "EventName": "AllocateConnectionOnInterconnect",
    "Description": "Deprecated"
  },
  {
    "API": "directconnect:AllocateHostedConnection",
    "EventSource": "directconnect",
    "EventName": "AllocateHostedConnection",
    "Description": "Creates a hosted connection on the specified interconnect or a link aggregation group (LAG) of interconnects"
  },
  {
    "API": "directconnect:AllocatePrivateVirtualInterface",
    "EventSource": "directconnect",
    "EventName": "AllocatePrivateVirtualInterface",
    "Description": "Provisions a private virtual interface to be owned by the specified Amazon Web Services account"
  },
  {
    "API": "directconnect:AllocatePublicVirtualInterface",
    "EventSource": "directconnect",
    "EventName": "AllocatePublicVirtualInterface",
    "Description": "Provisions a public virtual interface to be owned by the specified Amazon Web Services account"
  },
  {
    "API": "directconnect:AllocateTransitVirtualInterface",
    "EventSource": "directconnect",
    "EventName": "AllocateTransitVirtualInterface",
    "Description": "Provisions a transit virtual interface to be owned by the specified Amazon Web Services account"
  },
  {
    "API": "directconnect:AssociateConnectionWithLag",
    "EventSource": "directconnect",
    "EventName": "AssociateConnectionWithLag",
    "Description": "Associates an existing connection with a link aggregation group (LAG)"
  },
  {
    "API": "directconnect:AssociateHostedConnection",
    "EventSource": "directconnect",
    "EventName": "AssociateHostedConnection",
    "Description": "Associates a hosted connection and its virtual interfaces with a link aggregation group (LAG) or interconnect"
  },
  {
    "API": "directconnect:AssociateMacSecKey",
    "EventSource": "directconnect",
    "EventName": "AssociateMacSecKey",
    "Description": "Associates a MAC Security (MACsec) Connection Key Name (CKN)/ Connectivity Association Key (CAK) pair with an Direct Connect dedicated connection"
  },
  {
    "API": "directconnect:AssociateVirtualInterface",
    "EventSource": "directconnect",
    "EventName": "AssociateVirtualInterface",
    "Description": "Associates a virtual interface with a specified link aggregation group (LAG) or connection"
  },
  {
    "API": "directconnect:ConfirmConnection",
    "EventSource": "directconnect",
    "EventName": "ConfirmConnection",
    "Description": "Confirms the creation of the specified hosted connection on an interconnect"
  },
  {
    "API": "directconnect:ConfirmCustomerAgreement",
    "EventSource": "directconnect",
    "EventName": "ConfirmCustomerAgreement",
    "Description": "The confirmation of the terms of agreement when creating the connection/link aggregation group (LAG)"
  },
  {
    "API": "directconnect:ConfirmPrivateVirtualInterface",
    "EventSource": "directconnect",
    "EventName": "ConfirmPrivateVirtualInterface",
    "Description": "Accepts ownership of a private virtual interface created by another Amazon Web Services account"
  },
  {
    "API": "directconnect:ConfirmPublicVirtualInterface",
    "EventSource": "directconnect",
    "EventName": "ConfirmPublicVirtualInterface",
    "Description": "Accepts ownership of a public virtual interface created by another Amazon Web Services account"
  },
  {
    "API": "directconnect:ConfirmTransitVirtualInterface",
    "EventSource": "directconnect",
    "EventName": "ConfirmTransitVirtualInterface",
    "Description": "Accepts ownership of a transit virtual interface created by another Amazon Web Services account"
  },
  {
    "API": "directconnect:CreateBgpPeer",
    "EventSource": "directconnect",
    "EventName": "CreateBgpPeer",
    "Description": "Creates a BGP peer on the specified virtual interface"
  },
  {
    "API": "directconnect:CreateConnection",
    "EventSource": "directconnect",
    "EventName": "CreateConnection",
    "Description": "Creates a connection between a customer network and a specific Direct Connect location"
  },
  {
    "API": "directconnect:CreateDirectConnectGateway",
    "EventSource": "directconnect",
    "EventName": "CreateDirectConnectGateway",
    "Description": "Creates a Direct Connect gateway, which is an intermediate object that enables you to connect a set of virtual interfaces and virtual private gateways"
  },
  {
    "API": "directconnect:CreateDirectConnectGatewayAssociation",
    "EventSource": "directconnect",
    "EventName": "CreateDirectConnectGatewayAssociation",
    "Description": "Creates an association between a Direct Connect gateway and a virtual private gateway"
  },
  {
    "API": "directconnect:CreateDirectConnectGatewayAssociationProposal",
    "EventSource": "directconnect",
    "EventName": "CreateDirectConnectGatewayAssociationProposal",
    "Description": "Creates a proposal to associate the specified virtual private gateway or transit gateway with the specified Direct Connect gateway"
  },
  {
    "API": "directconnect:CreateInterconnect",
    "EventSource": "directconnect",
    "EventName": "CreateInterconnect",
    "Description": "Creates an interconnect between an Direct Connect Partner's network and a specific Direct Connect location"
  },
  {
    "API": "directconnect:CreateLag",
    "EventSource": "directconnect",
    "EventName": "CreateLag",
    "Description": "Creates a link aggregation group (LAG) with the specified number of bundled physical dedicated connections between the customer network and a specific Direct Connect location"
  },
  {
    "API": "directconnect:CreatePrivateVirtualInterface",
    "EventSource": "directconnect",
    "EventName": "CreatePrivateVirtualInterface",
    "Description": "Creates a private virtual interface"
  },
  {
    "API": "directconnect:CreatePublicVirtualInterface",
    "EventSource": "directconnect",
    "EventName": "CreatePublicVirtualInterface",
    "Description": "Creates a public virtual interface"
  },
  {
    "API": "directconnect:CreateTransitVirtualInterface",
    "EventSource": "directconnect",
    "EventName": "CreateTransitVirtualInterface",
    "Description": "Creates a transit virtual interface"
  },
  {
    "API": "directconnect:DeleteBgpPeer",
    "EventSource": "directconnect",
    "EventName": "DeleteBgpPeer",
    "Description": "Deletes the specified BGP peer on the specified virtual interface with the specified customer address and ASN"
  },
  {
    "API": "directconnect:DeleteConnection",
    "EventSource": "directconnect",
    "EventName": "DeleteConnection",
    "Description": "Deletes the specified connection"
  },
  {
    "API": "directconnect:DeleteDirectConnectGateway",
    "EventSource": "directconnect",
    "EventName": "DeleteDirectConnectGateway",
    "Description": "Deletes the specified Direct Connect gateway"
  },
  {
    "API": "directconnect:DeleteDirectConnectGatewayAssociation",
    "EventSource": "directconnect",
    "EventName": "DeleteDirectConnectGatewayAssociation",
    "Description": "Deletes the association between the specified Direct Connect gateway and virtual private gateway"
  },
  {
    "API": "directconnect:DeleteDirectConnectGatewayAssociationProposal",
    "EventSource": "directconnect",
    "EventName": "DeleteDirectConnectGatewayAssociationProposal",
    "Description": "Deletes the association proposal request between the specified Direct Connect gateway and virtual private gateway or transit gateway"
  },
  {
    "API": "directconnect:DeleteInterconnect",
    "EventSource": "directconnect",
    "EventName": "DeleteInterconnect",
    "Description": "Deletes the specified interconnect"
  },
  {
    "API": "directconnect:DeleteLag",
    "EventSource": "directconnect",
    "EventName": "DeleteLag",
    "Description": "Deletes the specified link aggregation group (LAG)"
  },
  {
    "API": "directconnect:DeleteVirtualInterface",
    "EventSource": "directconnect",
    "EventName": "DeleteVirtualInterface",
    "Description": "Deletes a virtual interface"
  },
  {
    "API": "directconnect:DescribeConnectionLoa",
    "EventSource": "directconnect",
    "EventName": "DescribeConnectionLoa",
    "Description": "Deprecated"
  },
  {
    "API": "directconnect:DescribeConnections",
    "EventSource": "directconnect",
    "EventName": "DescribeConnections",
    "Description": "Displays the specified connection or all connections in this Region"
  },
  {
    "API": "directconnect:DescribeConnectionsOnInterconnect",
    "EventSource": "directconnect",
    "EventName": "DescribeConnectionsOnInterconnect",
    "Description": "Deprecated"
  },
  {
    "API": "directconnect:DescribeCustomerMetadata",
    "EventSource": "directconnect",
    "EventName": "DescribeCustomerMetadata",
    "Description": "Get and view a list of customer agreements, along with their signed status and whether the customer is an NNIPartner, NNIPartnerV2, or a nonPartner"
  },
  {
    "API": "directconnect:DescribeDirectConnectGatewayAssociationProposals",
    "EventSource": "directconnect",
    "EventName": "DescribeDirectConnectGatewayAssociationProposals",
    "Description": "Describes one or more association proposals for connection between a virtual private gateway or transit gateway and a Direct Connect gateway"
  },
  {
    "API": "directconnect:DescribeDirectConnectGatewayAssociations",
    "EventSource": "directconnect",
    "EventName": "DescribeDirectConnectGatewayAssociations",
    "Description": "Lists the associations between your Direct Connect gateways and virtual private gateways and transit gateways"
  },
  {
    "API": "directconnect:DescribeDirectConnectGatewayAttachments",
    "EventSource": "directconnect",
    "EventName": "DescribeDirectConnectGatewayAttachments",
    "Description": "Lists the attachments between your Direct Connect gateways and virtual interfaces"
  },
  {
    "API": "directconnect:DescribeDirectConnectGateways",
    "EventSource": "directconnect",
    "EventName": "DescribeDirectConnectGateways",
    "Description": "Lists all your Direct Connect gateways or only the specified Direct Connect gateway"
  },
  {
    "API": "directconnect:DescribeHostedConnections",
    "EventSource": "directconnect",
    "EventName": "DescribeHostedConnections",
    "Description": "Lists the hosted connections that have been provisioned on the specified interconnect or link aggregation group (LAG)"
  },
  {
    "API": "directconnect:DescribeInterconnectLoa",
    "EventSource": "directconnect",
    "EventName": "DescribeInterconnectLoa",
    "Description": "Deprecated"
  },
  {
    "API": "directconnect:DescribeInterconnects",
    "EventSource": "directconnect",
    "EventName": "DescribeInterconnects",
    "Description": "Lists the interconnects owned by the Amazon Web Services account or only the specified interconnect"
  },
  {
    "API": "directconnect:DescribeLags",
    "EventSource": "directconnect",
    "EventName": "DescribeLags",
    "Description": "Describes all your link aggregation groups (LAG) or the specified LAG"
  },
  {
    "API": "directconnect:DescribeLoa",
    "EventSource": "directconnect",
    "EventName": "DescribeLoa",
    "Description": "Gets the LOA-CFA for a connection, interconnect, or link aggregation group (LAG)"
  },
  {
    "API": "directconnect:DescribeLocations",
    "EventSource": "directconnect",
    "EventName": "DescribeLocations",
    "Description": "Lists the Direct Connect locations in the current Amazon Web Services Region"
  },
  {
    "API": "directconnect:DescribeRouterConfiguration",
    "EventSource": "directconnect",
    "EventName": "DescribeRouterConfiguration",
    "Description": "Details about the router"
  },
  {
    "API": "directconnect:DescribeTags",
    "EventSource": "directconnect",
    "EventName": "DescribeTags",
    "Description": "Describes the tags associated with the specified Direct Connect resources"
  },
  {
    "API": "directconnect:DescribeVirtualGateways",
    "EventSource": "directconnect",
    "EventName": "DescribeVirtualGateways",
    "Description": "Lists the virtual private gateways owned by the Amazon Web Services account"
  },
  {
    "API": "directconnect:DescribeVirtualInterfaces",
    "EventSource": "directconnect",
    "EventName": "DescribeVirtualInterfaces",
    "Description": "Displays all virtual interfaces for an Amazon Web Services account"
  },
  {
    "API": "directconnect:DisassociateConnectionFromLag",
    "EventSource": "directconnect",
    "EventName": "DisassociateConnectionFromLag",
    "Description": "Disassociates a connection from a link aggregation group (LAG)"
  },
  {
    "API": "directconnect:DisassociateMacSecKey",
    "EventSource": "directconnect",
    "EventName": "DisassociateMacSecKey",
    "Description": "Removes the association between a MAC Security (MACsec) security key and an Direct Connect dedicated connection"
  },
  {
    "API": "directconnect:GeneratePresignedUrl",
    "EventSource": "directconnect",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "directconnect:ListVirtualInterfaceTestHistory",
    "EventSource": "directconnect",
    "EventName": "ListVirtualInterfaceTestHistory",
    "Description": "Lists the virtual interface failover test history"
  },
  {
    "API": "directconnect:StartBgpFailoverTest",
    "EventSource": "directconnect",
    "EventName": "StartBgpFailoverTest",
    "Description": "Starts the virtual interface failover test that verifies your configuration meets your resiliency requirements by placing the BGP peering session in the DOWN state"
  },
  {
    "API": "directconnect:StopBgpFailoverTest",
    "EventSource": "directconnect",
    "EventName": "StopBgpFailoverTest",
    "Description": "Stops the virtual interface failover test"
  },
  {
    "API": "directconnect:TagResource",
    "EventSource": "directconnect",
    "EventName": "TagResource",
    "Description": "Adds the specified tags to the specified Direct Connect resource"
  },
  {
    "API": "directconnect:UntagResource",
    "EventSource": "directconnect",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags from the specified Direct Connect resource"
  },
  {
    "API": "directconnect:UpdateConnection",
    "EventSource": "directconnect",
    "EventName": "UpdateConnection",
    "Description": "Updates the Direct Connect dedicated connection configuration"
  },
  {
    "API": "directconnect:UpdateDirectConnectGateway",
    "EventSource": "directconnect",
    "EventName": "UpdateDirectConnectGateway",
    "Description": "Updates the name of a current Direct Connect gateway"
  },
  {
    "API": "directconnect:UpdateDirectConnectGatewayAssociation",
    "EventSource": "directconnect",
    "EventName": "UpdateDirectConnectGatewayAssociation",
    "Description": "Updates the specified attributes of the Direct Connect gateway association"
  },
  {
    "API": "directconnect:UpdateLag",
    "EventSource": "directconnect",
    "EventName": "UpdateLag",
    "Description": "Updates the attributes of the specified link aggregation group (LAG)"
  },
  {
    "API": "directconnect:UpdateVirtualInterfaceAttributes",
    "EventSource": "directconnect",
    "EventName": "UpdateVirtualInterfaceAttributes",
    "Description": "Updates the specified attributes of the specified virtual private interface"
  },
  {
    "API": "discovery:AssociateConfigurationItemsToApplication",
    "EventSource": "discovery",
    "EventName": "AssociateConfigurationItemsToApplication",
    "Description": "Associates one or more configuration items with an application"
  },
  {
    "API": "discovery:BatchDeleteAgents",
    "EventSource": "discovery",
    "EventName": "BatchDeleteAgents",
    "Description": "Deletes one or more agents or collectors as specified by ID"
  },
  {
    "API": "discovery:BatchDeleteImportData",
    "EventSource": "discovery",
    "EventName": "BatchDeleteImportData",
    "Description": "Deletes one or more import tasks, each identified by their import ID"
  },
  {
    "API": "discovery:CreateApplication",
    "EventSource": "discovery",
    "EventName": "CreateApplication",
    "Description": "Creates an application with the given name and description"
  },
  {
    "API": "discovery:CreateTags",
    "EventSource": "discovery",
    "EventName": "CreateTags",
    "Description": "Creates one or more tags for configuration items"
  },
  {
    "API": "discovery:DeleteApplications",
    "EventSource": "discovery",
    "EventName": "DeleteApplications",
    "Description": "Deletes a list of applications and their associations with configuration items"
  },
  {
    "API": "discovery:DeleteTags",
    "EventSource": "discovery",
    "EventName": "DeleteTags",
    "Description": "Deletes the association between configuration items and one or more tags"
  },
  {
    "API": "discovery:DescribeAgents",
    "EventSource": "discovery",
    "EventName": "DescribeAgents",
    "Description": "Lists agents or collectors as specified by ID or other filters"
  },
  {
    "API": "discovery:DescribeBatchDeleteConfigurationTask",
    "EventSource": "discovery",
    "EventName": "DescribeBatchDeleteConfigurationTask",
    "Description": "Takes a unique deletion task identifier as input and returns metadata about a configuration deletion task"
  },
  {
    "API": "discovery:DescribeConfigurations",
    "EventSource": "discovery",
    "EventName": "DescribeConfigurations",
    "Description": "Retrieves attributes for a list of configuration item IDs"
  },
  {
    "API": "discovery:DescribeContinuousExports",
    "EventSource": "discovery",
    "EventName": "DescribeContinuousExports",
    "Description": "Lists exports as specified by ID"
  },
  {
    "API": "discovery:DescribeExportConfigurations",
    "EventSource": "discovery",
    "EventName": "DescribeExportConfigurations",
    "Description": "``DescribeExportConfigurations`` is deprecated"
  },
  {
    "API": "discovery:DescribeExportTasks",
    "EventSource": "discovery",
    "EventName": "DescribeExportTasks",
    "Description": "Retrieve status of one or more export tasks"
  },
  {
    "API": "discovery:DescribeImportTasks",
    "EventSource": "discovery",
    "EventName": "DescribeImportTasks",
    "Description": "Returns an array of import tasks for your account, including status information, times, IDs, the Amazon S3 Object URL for the import file, and more"
  },
  {
    "API": "discovery:DescribeTags",
    "EventSource": "discovery",
    "EventName": "DescribeTags",
    "Description": "Retrieves a list of configuration items that have tags as specified by the key-value pairs, name and value, passed to the optional parameter ``filters``"
  },
  {
    "API": "discovery:DisassociateConfigurationItemsFromApplication",
    "EventSource": "discovery",
    "EventName": "DisassociateConfigurationItemsFromApplication",
    "Description": "Disassociates one or more configuration items from an application"
  },
  {
    "API": "discovery:ExportConfigurations",
    "EventSource": "discovery",
    "EventName": "ExportConfigurations",
    "Description": "Deprecated"
  },
  {
    "API": "discovery:GeneratePresignedUrl",
    "EventSource": "discovery",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "discovery:GetDiscoverySummary",
    "EventSource": "discovery",
    "EventName": "GetDiscoverySummary",
    "Description": "Retrieves a short summary of discovered assets"
  },
  {
    "API": "discovery:ListConfigurations",
    "EventSource": "discovery",
    "EventName": "ListConfigurations",
    "Description": "Retrieves a list of configuration items as specified by the value passed to the required parameter ``configurationType``"
  },
  {
    "API": "discovery:ListServerNeighbors",
    "EventSource": "discovery",
    "EventName": "ListServerNeighbors",
    "Description": "Retrieves a list of servers that are one network hop away from a specified server"
  },
  {
    "API": "discovery:StartBatchDeleteConfigurationTask",
    "EventSource": "discovery",
    "EventName": "StartBatchDeleteConfigurationTask",
    "Description": "Takes a list of configurationId as input and starts an asynchronous deletion task to remove the configurationItems"
  },
  {
    "API": "discovery:StartContinuousExport",
    "EventSource": "discovery",
    "EventName": "StartContinuousExport",
    "Description": "Start the continuous flow of agent's discovered data into Amazon Athena"
  },
  {
    "API": "discovery:StartDataCollectionByAgentIds",
    "EventSource": "discovery",
    "EventName": "StartDataCollectionByAgentIds",
    "Description": "Instructs the specified agents to start collecting data"
  },
  {
    "API": "discovery:StartExportTask",
    "EventSource": "discovery",
    "EventName": "StartExportTask",
    "Description": "Begins the export of a discovered data report to an Amazon S3 bucket managed by Amazon Web Services"
  },
  {
    "API": "discovery:StartImportTask",
    "EventSource": "discovery",
    "EventName": "StartImportTask",
    "Description": "Starts an import task, which allows you to import details of your on-premises environment directly into Amazon Web Services Migration Hub without having to use the Amazon Web Services Application Discovery Service (Application Discovery Service) tools such as the Amazon Web Services Application Discovery Service Agentless Collector or Application Discovery Agent"
  },
  {
    "API": "discovery:StopContinuousExport",
    "EventSource": "discovery",
    "EventName": "StopContinuousExport",
    "Description": "Stop the continuous flow of agent's discovered data into Amazon Athena"
  },
  {
    "API": "discovery:StopDataCollectionByAgentIds",
    "EventSource": "discovery",
    "EventName": "StopDataCollectionByAgentIds",
    "Description": "Instructs the specified agents to stop collecting data"
  },
  {
    "API": "discovery:UpdateApplication",
    "EventSource": "discovery",
    "EventName": "UpdateApplication",
    "Description": "Updates metadata about an application"
  },
  {
    "API": "dlm:CreateLifecyclePolicy",
    "EventSource": "dlm",
    "EventName": "CreateLifecyclePolicy",
    "Description": "Creates an Amazon Data Lifecycle Manager lifecycle policy"
  },
  {
    "API": "dlm:DeleteLifecyclePolicy",
    "EventSource": "dlm",
    "EventName": "DeleteLifecyclePolicy",
    "Description": "Deletes the specified lifecycle policy and halts the automated operations that the policy specified"
  },
  {
    "API": "dlm:GeneratePresignedUrl",
    "EventSource": "dlm",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "dlm:GetLifecyclePolicies",
    "EventSource": "dlm",
    "EventName": "GetLifecyclePolicies",
    "Description": "Gets summary information about all or the specified data lifecycle policies"
  },
  {
    "API": "dlm:GetLifecyclePolicy",
    "EventSource": "dlm",
    "EventName": "GetLifecyclePolicy",
    "Description": "Gets detailed information about the specified lifecycle policy"
  },
  {
    "API": "dlm:ListTagsForResource",
    "EventSource": "dlm",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags for the specified resource"
  },
  {
    "API": "dlm:TagResource",
    "EventSource": "dlm",
    "EventName": "TagResource",
    "Description": "Adds the specified tags to the specified resource"
  },
  {
    "API": "dlm:UntagResource",
    "EventSource": "dlm",
    "EventName": "UntagResource",
    "Description": "Removes the specified tags from the specified resource"
  },
  {
    "API": "dlm:UpdateLifecyclePolicy",
    "EventSource": "dlm",
    "EventName": "UpdateLifecyclePolicy",
    "Description": "Updates the specified lifecycle policy"
  },
  {
    "API": "dms:AddTagsToResource",
    "EventSource": "dms",
    "EventName": "AddTagsToResource",
    "Description": "Adds metadata tags to an DMS resource, including replication instance, endpoint, subnet group, and migration task"
  },
  {
    "API": "dms:ApplyPendingMaintenanceAction",
    "EventSource": "dms",
    "EventName": "ApplyPendingMaintenanceAction",
    "Description": "Applies a pending maintenance action to a resource (for example, to a replication instance)"
  },
  {
    "API": "dms:BatchStartRecommendations",
    "EventSource": "dms",
    "EventName": "BatchStartRecommendations",
    "Description": "Starts the analysis of up to 20 source databases to recommend target engines for each source database"
  },
  {
    "API": "dms:CancelReplicationTaskAssessmentRun",
    "EventSource": "dms",
    "EventName": "CancelReplicationTaskAssessmentRun",
    "Description": "Cancels a single premigration assessment run"
  },
  {
    "API": "dms:CreateDataProvider",
    "EventSource": "dms",
    "EventName": "CreateDataProvider",
    "Description": "Creates a data provider using the provided settings"
  },
  {
    "API": "dms:CreateEndpoint",
    "EventSource": "dms",
    "EventName": "CreateEndpoint",
    "Description": "Creates an endpoint using the provided settings"
  },
  {
    "API": "dms:CreateEventSubscription",
    "EventSource": "dms",
    "EventName": "CreateEventSubscription",
    "Description": "Creates an DMS event notification subscription"
  },
  {
    "API": "dms:CreateFleetAdvisorCollector",
    "EventSource": "dms",
    "EventName": "CreateFleetAdvisorCollector",
    "Description": "Creates a Fleet Advisor collector using the specified parameters"
  },
  {
    "API": "dms:CreateInstanceProfile",
    "EventSource": "dms",
    "EventName": "CreateInstanceProfile",
    "Description": "Creates the instance profile using the specified parameters"
  },
  {
    "API": "dms:CreateMigrationProject",
    "EventSource": "dms",
    "EventName": "CreateMigrationProject",
    "Description": "Creates the migration project using the specified parameters"
  },
  {
    "API": "dms:CreateReplicationConfig",
    "EventSource": "dms",
    "EventName": "CreateReplicationConfig",
    "Description": "Creates a configuration that you can later provide to configure and start an DMS Serverless replication"
  },
  {
    "API": "dms:CreateReplicationInstance",
    "EventSource": "dms",
    "EventName": "CreateReplicationInstance",
    "Description": "Creates the replication instance using the specified parameters"
  },
  {
    "API": "dms:CreateReplicationSubnetGroup",
    "EventSource": "dms",
    "EventName": "CreateReplicationSubnetGroup",
    "Description": "Creates a replication subnet group given a list of the subnet IDs in a VPC"
  },
  {
    "API": "dms:CreateReplicationTask",
    "EventSource": "dms",
    "EventName": "CreateReplicationTask",
    "Description": "Creates a replication task using the specified parameters"
  },
  {
    "API": "dms:DeleteCertificate",
    "EventSource": "dms",
    "EventName": "DeleteCertificate",
    "Description": "Deletes the specified certificate"
  },
  {
    "API": "dms:DeleteConnection",
    "EventSource": "dms",
    "EventName": "DeleteConnection",
    "Description": "Deletes the connection between a replication instance and an endpoint"
  },
  {
    "API": "dms:DeleteDataProvider",
    "EventSource": "dms",
    "EventName": "DeleteDataProvider",
    "Description": "Deletes the specified data provider"
  },
  {
    "API": "dms:DeleteEndpoint",
    "EventSource": "dms",
    "EventName": "DeleteEndpoint",
    "Description": "Deletes the specified endpoint"
  },
  {
    "API": "dms:DeleteEventSubscription",
    "EventSource": "dms",
    "EventName": "DeleteEventSubscription",
    "Description": "Deletes an DMS event subscription"
  },
  {
    "API": "dms:DeleteFleetAdvisorCollector",
    "EventSource": "dms",
    "EventName": "DeleteFleetAdvisorCollector",
    "Description": "Deletes the specified Fleet Advisor collector"
  },
  {
    "API": "dms:DeleteFleetAdvisorDatabases",
    "EventSource": "dms",
    "EventName": "DeleteFleetAdvisorDatabases",
    "Description": "Deletes the specified Fleet Advisor collector databases"
  },
  {
    "API": "dms:DeleteInstanceProfile",
    "EventSource": "dms",
    "EventName": "DeleteInstanceProfile",
    "Description": "Deletes the specified instance profile"
  },
  {
    "API": "dms:DeleteMigrationProject",
    "EventSource": "dms",
    "EventName": "DeleteMigrationProject",
    "Description": "Deletes the specified migration project"
  },
  {
    "API": "dms:DeleteReplicationConfig",
    "EventSource": "dms",
    "EventName": "DeleteReplicationConfig",
    "Description": "Deletes an DMS Serverless replication configuration"
  },
  {
    "API": "dms:DeleteReplicationInstance",
    "EventSource": "dms",
    "EventName": "DeleteReplicationInstance",
    "Description": "Deletes the specified replication instance"
  },
  {
    "API": "dms:DeleteReplicationSubnetGroup",
    "EventSource": "dms",
    "EventName": "DeleteReplicationSubnetGroup",
    "Description": "Deletes a subnet group"
  },
  {
    "API": "dms:DeleteReplicationTask",
    "EventSource": "dms",
    "EventName": "DeleteReplicationTask",
    "Description": "Deletes the specified replication task"
  },
  {
    "API": "dms:DeleteReplicationTaskAssessmentRun",
    "EventSource": "dms",
    "EventName": "DeleteReplicationTaskAssessmentRun",
    "Description": "Deletes the record of a single premigration assessment run"
  },
  {
    "API": "dms:DescribeAccountAttributes",
    "EventSource": "dms",
    "EventName": "DescribeAccountAttributes",
    "Description": "Lists all of the DMS attributes for a customer account"
  },
  {
    "API": "dms:DescribeApplicableIndividualAssessments",
    "EventSource": "dms",
    "EventName": "DescribeApplicableIndividualAssessments",
    "Description": "Provides a list of individual assessments that you can specify for a new premigration assessment run, given one or more parameters"
  },
  {
    "API": "dms:DescribeCertificates",
    "EventSource": "dms",
    "EventName": "DescribeCertificates",
    "Description": "Provides a description of the certificate"
  },
  {
    "API": "dms:DescribeConnections",
    "EventSource": "dms",
    "EventName": "DescribeConnections",
    "Description": "Describes the status of the connections that have been made between the replication instance and an endpoint"
  },
  {
    "API": "dms:DescribeConversionConfiguration",
    "EventSource": "dms",
    "EventName": "DescribeConversionConfiguration",
    "Description": "Returns configuration parameters for a schema conversion project"
  },
  {
    "API": "dms:DescribeDataProviders",
    "EventSource": "dms",
    "EventName": "DescribeDataProviders",
    "Description": "Returns a paginated list of data providers for your account in the current region"
  },
  {
    "API": "dms:DescribeEndpointSettings",
    "EventSource": "dms",
    "EventName": "DescribeEndpointSettings",
    "Description": "Returns information about the possible endpoint settings available when you create an endpoint for a specific database engine"
  },
  {
    "API": "dms:DescribeEndpointTypes",
    "EventSource": "dms",
    "EventName": "DescribeEndpointTypes",
    "Description": "Returns information about the type of endpoints available"
  },
  {
    "API": "dms:DescribeEndpoints",
    "EventSource": "dms",
    "EventName": "DescribeEndpoints",
    "Description": "Returns information about the endpoints for your account in the current region"
  },
  {
    "API": "dms:DescribeEngineVersions",
    "EventSource": "dms",
    "EventName": "DescribeEngineVersions",
    "Description": "Returns information about the replication instance versions used in the project"
  },
  {
    "API": "dms:DescribeEventCategories",
    "EventSource": "dms",
    "EventName": "DescribeEventCategories",
    "Description": "Lists categories for all event source types, or, if specified, for a specified source type"
  },
  {
    "API": "dms:DescribeEventSubscriptions",
    "EventSource": "dms",
    "EventName": "DescribeEventSubscriptions",
    "Description": "Lists all the event subscriptions for a customer account"
  },
  {
    "API": "dms:DescribeEvents",
    "EventSource": "dms",
    "EventName": "DescribeEvents",
    "Description": "Lists events for a given source identifier and source type"
  },
  {
    "API": "dms:DescribeExtensionPackAssociations",
    "EventSource": "dms",
    "EventName": "DescribeExtensionPackAssociations",
    "Description": "Returns a paginated list of extension pack associations for the specified migration project"
  },
  {
    "API": "dms:DescribeFleetAdvisorCollectors",
    "EventSource": "dms",
    "EventName": "DescribeFleetAdvisorCollectors",
    "Description": "Returns a list of the Fleet Advisor collectors in your account"
  },
  {
    "API": "dms:DescribeFleetAdvisorDatabases",
    "EventSource": "dms",
    "EventName": "DescribeFleetAdvisorDatabases",
    "Description": "Returns a list of Fleet Advisor databases in your account"
  },
  {
    "API": "dms:DescribeFleetAdvisorLsaAnalysis",
    "EventSource": "dms",
    "EventName": "DescribeFleetAdvisorLsaAnalysis",
    "Description": "Provides descriptions of large-scale assessment (LSA) analyses produced by your Fleet Advisor collectors"
  },
  {
    "API": "dms:DescribeFleetAdvisorSchemaObjectSummary",
    "EventSource": "dms",
    "EventName": "DescribeFleetAdvisorSchemaObjectSummary",
    "Description": "Provides descriptions of the schemas discovered by your Fleet Advisor collectors"
  },
  {
    "API": "dms:DescribeFleetAdvisorSchemas",
    "EventSource": "dms",
    "EventName": "DescribeFleetAdvisorSchemas",
    "Description": "Returns a list of schemas detected by Fleet Advisor Collectors in your account"
  },
  {
    "API": "dms:DescribeInstanceProfiles",
    "EventSource": "dms",
    "EventName": "DescribeInstanceProfiles",
    "Description": "Returns a paginated list of instance profiles for your account in the current region"
  },
  {
    "API": "dms:DescribeMetadataModelAssessments",
    "EventSource": "dms",
    "EventName": "DescribeMetadataModelAssessments",
    "Description": "Returns a paginated list of metadata model assessments for your account in the current region"
  },
  {
    "API": "dms:DescribeMetadataModelConversions",
    "EventSource": "dms",
    "EventName": "DescribeMetadataModelConversions",
    "Description": "Returns a paginated list of metadata model conversions for a migration project"
  },
  {
    "API": "dms:DescribeMetadataModelExportsAsScript",
    "EventSource": "dms",
    "EventName": "DescribeMetadataModelExportsAsScript",
    "Description": "Returns a paginated list of metadata model exports"
  },
  {
    "API": "dms:DescribeMetadataModelExportsToTarget",
    "EventSource": "dms",
    "EventName": "DescribeMetadataModelExportsToTarget",
    "Description": "Returns a paginated list of metadata model exports"
  },
  {
    "API": "dms:DescribeMetadataModelImports",
    "EventSource": "dms",
    "EventName": "DescribeMetadataModelImports",
    "Description": "Returns a paginated list of metadata model imports"
  },
  {
    "API": "dms:DescribeMigrationProjects",
    "EventSource": "dms",
    "EventName": "DescribeMigrationProjects",
    "Description": "Returns a paginated list of migration projects for your account in the current region"
  },
  {
    "API": "dms:DescribeOrderableReplicationInstances",
    "EventSource": "dms",
    "EventName": "DescribeOrderableReplicationInstances",
    "Description": "Returns information about the replication instance types that can be created in the specified region"
  },
  {
    "API": "dms:DescribePendingMaintenanceActions",
    "EventSource": "dms",
    "EventName": "DescribePendingMaintenanceActions",
    "Description": "For internal use only"
  },
  {
    "API": "dms:DescribeRecommendationLimitations",
    "EventSource": "dms",
    "EventName": "DescribeRecommendationLimitations",
    "Description": "Returns a paginated list of limitations for recommendations of target Amazon Web Services engines"
  },
  {
    "API": "dms:DescribeRecommendations",
    "EventSource": "dms",
    "EventName": "DescribeRecommendations",
    "Description": "Returns a paginated list of target engine recommendations for your source databases"
  },
  {
    "API": "dms:DescribeRefreshSchemasStatus",
    "EventSource": "dms",
    "EventName": "DescribeRefreshSchemasStatus",
    "Description": "Returns the status of the RefreshSchemas operation"
  },
  {
    "API": "dms:DescribeReplicationConfigs",
    "EventSource": "dms",
    "EventName": "DescribeReplicationConfigs",
    "Description": "Returns one or more existing DMS Serverless replication configurations as a list of structures"
  },
  {
    "API": "dms:DescribeReplicationInstanceTaskLogs",
    "EventSource": "dms",
    "EventName": "DescribeReplicationInstanceTaskLogs",
    "Description": "Returns information about the task logs for the specified task"
  },
  {
    "API": "dms:DescribeReplicationInstances",
    "EventSource": "dms",
    "EventName": "DescribeReplicationInstances",
    "Description": "Returns information about replication instances for your account in the current region"
  },
  {
    "API": "dms:DescribeReplicationSubnetGroups",
    "EventSource": "dms",
    "EventName": "DescribeReplicationSubnetGroups",
    "Description": "Returns information about the replication subnet groups"
  },
  {
    "API": "dms:DescribeReplicationTableStatistics",
    "EventSource": "dms",
    "EventName": "DescribeReplicationTableStatistics",
    "Description": "Returns table and schema statistics for one or more provisioned replications that use a given DMS Serverless replication configuration"
  },
  {
    "API": "dms:DescribeReplicationTaskAssessmentResults",
    "EventSource": "dms",
    "EventName": "DescribeReplicationTaskAssessmentResults",
    "Description": "Returns the task assessment results from the Amazon S3 bucket that DMS creates in your Amazon Web Services account"
  },
  {
    "API": "dms:DescribeReplicationTaskAssessmentRuns",
    "EventSource": "dms",
    "EventName": "DescribeReplicationTaskAssessmentRuns",
    "Description": "Returns a paginated list of premigration assessment runs based on filter settings"
  },
  {
    "API": "dms:DescribeReplicationTaskIndividualAssessments",
    "EventSource": "dms",
    "EventName": "DescribeReplicationTaskIndividualAssessments",
    "Description": "Returns a paginated list of individual assessments based on filter settings"
  },
  {
    "API": "dms:DescribeReplicationTasks",
    "EventSource": "dms",
    "EventName": "DescribeReplicationTasks",
    "Description": "Returns information about replication tasks for your account in the current region"
  },
  {
    "API": "dms:DescribeReplications",
    "EventSource": "dms",
    "EventName": "DescribeReplications",
    "Description": "Provides details on replication progress by returning status information for one or more provisioned DMS Serverless replications"
  },
  {
    "API": "dms:DescribeSchemas",
    "EventSource": "dms",
    "EventName": "DescribeSchemas",
    "Description": "Returns information about the schema for the specified endpoint"
  },
  {
    "API": "dms:DescribeTableStatistics",
    "EventSource": "dms",
    "EventName": "DescribeTableStatistics",
    "Description": "Returns table statistics on the database migration task, including table name, rows inserted, rows updated, and rows deleted"
  },
  {
    "API": "dms:ExportMetadataModelAssessment",
    "EventSource": "dms",
    "EventName": "ExportMetadataModelAssessment",
    "Description": "Saves a copy of a database migration assessment report to your Amazon S3 bucket"
  },
  {
    "API": "dms:GeneratePresignedUrl",
    "EventSource": "dms",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "dms:ImportCertificate",
    "EventSource": "dms",
    "EventName": "ImportCertificate",
    "Description": "Uploads the specified certificate"
  },
  {
    "API": "dms:ListTagsForResource",
    "EventSource": "dms",
    "EventName": "ListTagsForResource",
    "Description": "Lists all metadata tags attached to an DMS resource, including replication instance, endpoint, subnet group, and migration task"
  },
  {
    "API": "dms:ModifyConversionConfiguration",
    "EventSource": "dms",
    "EventName": "ModifyConversionConfiguration",
    "Description": "Modifies the specified schema conversion configuration using the provided parameters"
  },
  {
    "API": "dms:ModifyDataProvider",
    "EventSource": "dms",
    "EventName": "ModifyDataProvider",
    "Description": "Modifies the specified data provider using the provided settings"
  },
  {
    "API": "dms:ModifyEndpoint",
    "EventSource": "dms",
    "EventName": "ModifyEndpoint",
    "Description": "Modifies the specified endpoint"
  },
  {
    "API": "dms:ModifyEventSubscription",
    "EventSource": "dms",
    "EventName": "ModifyEventSubscription",
    "Description": "Modifies an existing DMS event notification subscription"
  },
  {
    "API": "dms:ModifyInstanceProfile",
    "EventSource": "dms",
    "EventName": "ModifyInstanceProfile",
    "Description": "Modifies the specified instance profile using the provided parameters"
  },
  {
    "API": "dms:ModifyMigrationProject",
    "EventSource": "dms",
    "EventName": "ModifyMigrationProject",
    "Description": "Modifies the specified migration project using the provided parameters"
  },
  {
    "API": "dms:ModifyReplicationConfig",
    "EventSource": "dms",
    "EventName": "ModifyReplicationConfig",
    "Description": "Modifies an existing DMS Serverless replication configuration that you can use to start a replication"
  },
  {
    "API": "dms:ModifyReplicationInstance",
    "EventSource": "dms",
    "EventName": "ModifyReplicationInstance",
    "Description": "Modifies the replication instance to apply new settings"
  },
  {
    "API": "dms:ModifyReplicationSubnetGroup",
    "EventSource": "dms",
    "EventName": "ModifyReplicationSubnetGroup",
    "Description": "Modifies the settings for the specified replication subnet group"
  },
  {
    "API": "dms:ModifyReplicationTask",
    "EventSource": "dms",
    "EventName": "ModifyReplicationTask",
    "Description": "Modifies the specified replication task"
  },
  {
    "API": "dms:MoveReplicationTask",
    "EventSource": "dms",
    "EventName": "MoveReplicationTask",
    "Description": "Moves a replication task from its current replication instance to a different target replication instance using the specified parameters"
  },
  {
    "API": "dms:RebootReplicationInstance",
    "EventSource": "dms",
    "EventName": "RebootReplicationInstance",
    "Description": "Reboots a replication instance"
  },
  {
    "API": "dms:RefreshSchemas",
    "EventSource": "dms",
    "EventName": "RefreshSchemas",
    "Description": "Populates the schema for the specified endpoint"
  },
  {
    "API": "dms:ReloadReplicationTables",
    "EventSource": "dms",
    "EventName": "ReloadReplicationTables",
    "Description": "Reloads the target database table with the source data for a given DMS Serverless replication configuration"
  },
  {
    "API": "dms:ReloadTables",
    "EventSource": "dms",
    "EventName": "ReloadTables",
    "Description": "Reloads the target database table with the source data"
  },
  {
    "API": "dms:RemoveTagsFromResource",
    "EventSource": "dms",
    "EventName": "RemoveTagsFromResource",
    "Description": "Removes metadata tags from an DMS resource, including replication instance, endpoint, subnet group, and migration task"
  },
  {
    "API": "dms:RunFleetAdvisorLsaAnalysis",
    "EventSource": "dms",
    "EventName": "RunFleetAdvisorLsaAnalysis",
    "Description": "Runs large-scale assessment (LSA) analysis on every Fleet Advisor collector in your account"
  },
  {
    "API": "dms:StartExtensionPackAssociation",
    "EventSource": "dms",
    "EventName": "StartExtensionPackAssociation",
    "Description": "Applies the extension pack to your target database"
  },
  {
    "API": "dms:StartMetadataModelAssessment",
    "EventSource": "dms",
    "EventName": "StartMetadataModelAssessment",
    "Description": "Creates a database migration assessment report by assessing the migration complexity for your source database"
  },
  {
    "API": "dms:StartMetadataModelConversion",
    "EventSource": "dms",
    "EventName": "StartMetadataModelConversion",
    "Description": "Converts your source database objects to a format compatible with the target database"
  },
  {
    "API": "dms:StartMetadataModelExportAsScript",
    "EventSource": "dms",
    "EventName": "StartMetadataModelExportAsScript",
    "Description": "Saves your converted code to a file as a SQL script, and stores this file on your Amazon S3 bucket"
  },
  {
    "API": "dms:StartMetadataModelExportToTarget",
    "EventSource": "dms",
    "EventName": "StartMetadataModelExportToTarget",
    "Description": "Applies converted database objects to your target database"
  },
  {
    "API": "dms:StartMetadataModelImport",
    "EventSource": "dms",
    "EventName": "StartMetadataModelImport",
    "Description": "Loads the metadata for all the dependent database objects of the parent object"
  },
  {
    "API": "dms:StartRecommendations",
    "EventSource": "dms",
    "EventName": "StartRecommendations",
    "Description": "Starts the analysis of your source database to provide recommendations of target engines"
  },
  {
    "API": "dms:StartReplication",
    "EventSource": "dms",
    "EventName": "StartReplication",
    "Description": "For a given DMS Serverless replication configuration, DMS connects to the source endpoint and collects the metadata to analyze the replication workload"
  },
  {
    "API": "dms:StartReplicationTask",
    "EventSource": "dms",
    "EventName": "StartReplicationTask",
    "Description": "Starts the replication task"
  },
  {
    "API": "dms:StartReplicationTaskAssessment",
    "EventSource": "dms",
    "EventName": "StartReplicationTaskAssessment",
    "Description": "Starts the replication task assessment for unsupported data types in the source database"
  },
  {
    "API": "dms:StartReplicationTaskAssessmentRun",
    "EventSource": "dms",
    "EventName": "StartReplicationTaskAssessmentRun",
    "Description": "Starts a new premigration assessment run for one or more individual assessments of a migration task"
  },
  {
    "API": "dms:StopReplication",
    "EventSource": "dms",
    "EventName": "StopReplication",
    "Description": "For a given DMS Serverless replication configuration, DMS stops any and all ongoing DMS Serverless replications"
  },
  {
    "API": "dms:StopReplicationTask",
    "EventSource": "dms",
    "EventName": "StopReplicationTask",
    "Description": "Stops the replication task"
  },
  {
    "API": "dms:TestConnection",
    "EventSource": "dms",
    "EventName": "TestConnection",
    "Description": "Tests the connection between the replication instance and the endpoint"
  },
  {
    "API": "dms:UpdateSubscriptionsToEventBridge",
    "EventSource": "dms",
    "EventName": "UpdateSubscriptionsToEventBridge",
    "Description": "Migrates 10 active and enabled Amazon SNS subscriptions at a time and converts them to corresponding Amazon EventBridge rules"
  },
  {
    "API": "docdb:AddSourceIdentifierToSubscription",
    "EventSource": "docdb",
    "EventName": "AddSourceIdentifierToSubscription",
    "Description": "Adds a source identifier to an existing event notification subscription"
  },
  {
    "API": "docdb:AddTagsToResource",
    "EventSource": "docdb",
    "EventName": "AddTagsToResource",
    "Description": "Adds metadata tags to an Amazon DocumentDB resource"
  },
  {
    "API": "docdb:ApplyPendingMaintenanceAction",
    "EventSource": "docdb",
    "EventName": "ApplyPendingMaintenanceAction",
    "Description": "Applies a pending maintenance action to a resource (for example, to an Amazon DocumentDB instance)"
  },
  {
    "API": "docdb:CopyDbClusterParameterGroup",
    "EventSource": "docdb",
    "EventName": "CopyDbClusterParameterGroup",
    "Description": "Copies the specified cluster parameter group"
  },
  {
    "API": "docdb:CopyDbClusterSnapshot",
    "EventSource": "docdb",
    "EventName": "CopyDbClusterSnapshot",
    "Description": "Copies a snapshot of a cluster"
  },
  {
    "API": "docdb:CreateDbCluster",
    "EventSource": "docdb",
    "EventName": "CreateDbCluster",
    "Description": "Creates a new Amazon DocumentDB cluster"
  },
  {
    "API": "docdb:CreateDbClusterParameterGroup",
    "EventSource": "docdb",
    "EventName": "CreateDbClusterParameterGroup",
    "Description": "Creates a new cluster parameter group"
  },
  {
    "API": "docdb:CreateDbClusterSnapshot",
    "EventSource": "docdb",
    "EventName": "CreateDbClusterSnapshot",
    "Description": "Creates a snapshot of a cluster"
  },
  {
    "API": "docdb:CreateDbInstance",
    "EventSource": "docdb",
    "EventName": "CreateDbInstance",
    "Description": "Creates a new instance"
  },
  {
    "API": "docdb:CreateDbSubnetGroup",
    "EventSource": "docdb",
    "EventName": "CreateDbSubnetGroup",
    "Description": "Creates a new subnet group"
  },
  {
    "API": "docdb:CreateEventSubscription",
    "EventSource": "docdb",
    "EventName": "CreateEventSubscription",
    "Description": "Creates an Amazon DocumentDB event notification subscription"
  },
  {
    "API": "docdb:CreateGlobalCluster",
    "EventSource": "docdb",
    "EventName": "CreateGlobalCluster",
    "Description": "Creates an Amazon DocumentDB global cluster that can span multiple multiple Amazon Web Services Regions"
  },
  {
    "API": "docdb:DeleteDbCluster",
    "EventSource": "docdb",
    "EventName": "DeleteDbCluster",
    "Description": "Deletes a previously provisioned cluster"
  },
  {
    "API": "docdb:DeleteDbClusterParameterGroup",
    "EventSource": "docdb",
    "EventName": "DeleteDbClusterParameterGroup",
    "Description": "Deletes a specified cluster parameter group"
  },
  {
    "API": "docdb:DeleteDbClusterSnapshot",
    "EventSource": "docdb",
    "EventName": "DeleteDbClusterSnapshot",
    "Description": "Deletes a cluster snapshot"
  },
  {
    "API": "docdb:DeleteDbInstance",
    "EventSource": "docdb",
    "EventName": "DeleteDbInstance",
    "Description": "Deletes a previously provisioned instance"
  },
  {
    "API": "docdb:DeleteDbSubnetGroup",
    "EventSource": "docdb",
    "EventName": "DeleteDbSubnetGroup",
    "Description": "Deletes a subnet group"
  },
  {
    "API": "docdb:DeleteEventSubscription",
    "EventSource": "docdb",
    "EventName": "DeleteEventSubscription",
    "Description": "Deletes an Amazon DocumentDB event notification subscription"
  },
  {
    "API": "docdb:DeleteGlobalCluster",
    "EventSource": "docdb",
    "EventName": "DeleteGlobalCluster",
    "Description": "Deletes a global cluster"
  },
  {
    "API": "docdb:DescribeCertificates",
    "EventSource": "docdb",
    "EventName": "DescribeCertificates",
    "Description": "Returns a list of certificate authority (CA) certificates provided by Amazon DocumentDB for this Amazon Web Services account"
  },
  {
    "API": "docdb:DescribeDbClusterParameterGroups",
    "EventSource": "docdb",
    "EventName": "DescribeDbClusterParameterGroups",
    "Description": "Returns a list of ``DBClusterParameterGroup`` descriptions"
  },
  {
    "API": "docdb:DescribeDbClusterParameters",
    "EventSource": "docdb",
    "EventName": "DescribeDbClusterParameters",
    "Description": "Returns the detailed parameter list for a particular cluster parameter group"
  },
  {
    "API": "docdb:DescribeDbClusterSnapshotAttributes",
    "EventSource": "docdb",
    "EventName": "DescribeDbClusterSnapshotAttributes",
    "Description": "Returns a list of cluster snapshot attribute names and values for a manual DB cluster snapshot"
  },
  {
    "API": "docdb:DescribeDbClusterSnapshots",
    "EventSource": "docdb",
    "EventName": "DescribeDbClusterSnapshots",
    "Description": "Returns information about cluster snapshots"
  },
  {
    "API": "docdb:DescribeDbClusters",
    "EventSource": "docdb",
    "EventName": "DescribeDbClusters",
    "Description": "Returns information about provisioned Amazon DocumentDB clusters"
  },
  {
    "API": "docdb:DescribeDbEngineVersions",
    "EventSource": "docdb",
    "EventName": "DescribeDbEngineVersions",
    "Description": "Returns a list of the available engines"
  },
  {
    "API": "docdb:DescribeDbInstances",
    "EventSource": "docdb",
    "EventName": "DescribeDbInstances",
    "Description": "Returns information about provisioned Amazon DocumentDB instances"
  },
  {
    "API": "docdb:DescribeDbSubnetGroups",
    "EventSource": "docdb",
    "EventName": "DescribeDbSubnetGroups",
    "Description": "Returns a list of ``DBSubnetGroup`` descriptions"
  },
  {
    "API": "docdb:DescribeEngineDefaultClusterParameters",
    "EventSource": "docdb",
    "EventName": "DescribeEngineDefaultClusterParameters",
    "Description": "Returns the default engine and system parameter information for the cluster database engine"
  },
  {
    "API": "docdb:DescribeEventCategories",
    "EventSource": "docdb",
    "EventName": "DescribeEventCategories",
    "Description": "Displays a list of categories for all event source types, or, if specified, for a specified source type"
  },
  {
    "API": "docdb:DescribeEventSubscriptions",
    "EventSource": "docdb",
    "EventName": "DescribeEventSubscriptions",
    "Description": "Lists all the subscription descriptions for a customer account"
  },
  {
    "API": "docdb:DescribeEvents",
    "EventSource": "docdb",
    "EventName": "DescribeEvents",
    "Description": "Returns events related to instances, security groups, snapshots, and DB parameter groups for the past 14 days"
  },
  {
    "API": "docdb:DescribeGlobalClusters",
    "EventSource": "docdb",
    "EventName": "DescribeGlobalClusters",
    "Description": "Returns information about Amazon DocumentDB global clusters"
  },
  {
    "API": "docdb:DescribeOrderableDbInstanceOptions",
    "EventSource": "docdb",
    "EventName": "DescribeOrderableDbInstanceOptions",
    "Description": "Returns a list of orderable instance options for the specified engine"
  },
  {
    "API": "docdb:DescribePendingMaintenanceActions",
    "EventSource": "docdb",
    "EventName": "DescribePendingMaintenanceActions",
    "Description": "Returns a list of resources (for example, instances) that have at least one pending maintenance action"
  },
  {
    "API": "docdb:FailoverDbCluster",
    "EventSource": "docdb",
    "EventName": "FailoverDbCluster",
    "Description": "Forces a failover for a cluster"
  },
  {
    "API": "docdb:GeneratePresignedUrl",
    "EventSource": "docdb",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "docdb:ListTagsForResource",
    "EventSource": "docdb",
    "EventName": "ListTagsForResource",
    "Description": "Lists all tags on an Amazon DocumentDB resource"
  },
  {
    "API": "docdb:ModifyDbCluster",
    "EventSource": "docdb",
    "EventName": "ModifyDbCluster",
    "Description": "Modifies a setting for an Amazon DocumentDB cluster"
  },
  {
    "API": "docdb:ModifyDbClusterParameterGroup",
    "EventSource": "docdb",
    "EventName": "ModifyDbClusterParameterGroup",
    "Description": "Modifies the parameters of a cluster parameter group"
  },
  {
    "API": "docdb:ModifyDbClusterSnapshotAttribute",
    "EventSource": "docdb",
    "EventName": "ModifyDbClusterSnapshotAttribute",
    "Description": "Adds an attribute and values to, or removes an attribute and values from, a manual cluster snapshot"
  },
  {
    "API": "docdb:ModifyDbInstance",
    "EventSource": "docdb",
    "EventName": "ModifyDbInstance",
    "Description": "Modifies settings for an instance"
  },
  {
    "API": "docdb:ModifyDbSubnetGroup",
    "EventSource": "docdb",
    "EventName": "ModifyDbSubnetGroup",
    "Description": "Modifies an existing subnet group"
  },
  {
    "API": "docdb:ModifyEventSubscription",
    "EventSource": "docdb",
    "EventName": "ModifyEventSubscription",
    "Description": "Modifies an existing Amazon DocumentDB event notification subscription"
  },
  {
    "API": "docdb:ModifyGlobalCluster",
    "EventSource": "docdb",
    "EventName": "ModifyGlobalCluster",
    "Description": "Modify a setting for an Amazon DocumentDB global cluster"
  },
  {
    "API": "docdb:RebootDbInstance",
    "EventSource": "docdb",
    "EventName": "RebootDbInstance",
    "Description": "You might need to reboot your instance, usually for maintenance reasons"
  },
  {
    "API": "docdb:RemoveFromGlobalCluster",
    "EventSource": "docdb",
    "EventName": "RemoveFromGlobalCluster",
    "Description": "Detaches an Amazon DocumentDB secondary cluster from a global cluster"
  },
  {
    "API": "docdb:RemoveSourceIdentifierFromSubscription",
    "EventSource": "docdb",
    "EventName": "RemoveSourceIdentifierFromSubscription",
    "Description": "Removes a source identifier from an existing Amazon DocumentDB event notification subscription"
  },
  {
    "API": "docdb:RemoveTagsFromResource",
    "EventSource": "docdb",
    "EventName": "RemoveTagsFromResource",
    "Description": "Removes metadata tags from an Amazon DocumentDB resource"
  },
  {
    "API": "docdb:ResetDbClusterParameterGroup",
    "EventSource": "docdb",
    "EventName": "ResetDbClusterParameterGroup",
    "Description": "Modifies the parameters of a cluster parameter group to the default value"
  },
  {
    "API": "docdb:RestoreDbClusterFromSnapshot",
    "EventSource": "docdb",
    "EventName": "RestoreDbClusterFromSnapshot",
    "Description": "Creates a new cluster from a snapshot or cluster snapshot"
  },
  {
    "API": "docdb:RestoreDbClusterToPointInTime",
    "EventSource": "docdb",
    "EventName": "RestoreDbClusterToPointInTime",
    "Description": "Restores a cluster to an arbitrary point in time"
  },
  {
    "API": "docdb:StartDbCluster",
    "EventSource": "docdb",
    "EventName": "StartDbCluster",
    "Description": "Restarts the stopped cluster that is specified by ``DBClusterIdentifier``"
  },
  {
    "API": "docdb:StopDbCluster",
    "EventSource": "docdb",
    "EventName": "StopDbCluster",
    "Description": "Stops the running cluster that is specified by ``DBClusterIdentifier``"
  },
  {
    "API": "docdb:SwitchoverGlobalCluster",
    "EventSource": "docdb",
    "EventName": "SwitchoverGlobalCluster",
    "Description": "Switches over the specified secondary Amazon DocumentDB cluster to be the new primary Amazon DocumentDB cluster in the global database cluster"
  },
  {
    "API": "docdb-elastic:CopyClusterSnapshot",
    "EventSource": "docdb-elastic",
    "EventName": "CopyClusterSnapshot",
    "Description": "Copies a snapshot of an elastic cluster"
  },
  {
    "API": "docdb-elastic:CreateCluster",
    "EventSource": "docdb-elastic",
    "EventName": "CreateCluster",
    "Description": "Creates a new Amazon DocumentDB elastic cluster and returns its cluster structure"
  },
  {
    "API": "docdb-elastic:CreateClusterSnapshot",
    "EventSource": "docdb-elastic",
    "EventName": "CreateClusterSnapshot",
    "Description": "Creates a snapshot of an elastic cluster"
  },
  {
    "API": "docdb-elastic:DeleteCluster",
    "EventSource": "docdb-elastic",
    "EventName": "DeleteCluster",
    "Description": "Delete an elastic cluster"
  },
  {
    "API": "docdb-elastic:DeleteClusterSnapshot",
    "EventSource": "docdb-elastic",
    "EventName": "DeleteClusterSnapshot",
    "Description": "Delete an elastic cluster snapshot"
  },
  {
    "API": "docdb-elastic:GeneratePresignedUrl",
    "EventSource": "docdb-elastic",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "docdb-elastic:GetCluster",
    "EventSource": "docdb-elastic",
    "EventName": "GetCluster",
    "Description": "Returns information about a specific elastic cluster"
  },
  {
    "API": "docdb-elastic:GetClusterSnapshot",
    "EventSource": "docdb-elastic",
    "EventName": "GetClusterSnapshot",
    "Description": "Returns information about a specific elastic cluster snapshot"
  },
  {
    "API": "docdb-elastic:ListClusterSnapshots",
    "EventSource": "docdb-elastic",
    "EventName": "ListClusterSnapshots",
    "Description": "Returns information about snapshots for a specified elastic cluster"
  },
  {
    "API": "docdb-elastic:ListClusters",
    "EventSource": "docdb-elastic",
    "EventName": "ListClusters",
    "Description": "Returns information about provisioned Amazon DocumentDB elastic clusters"
  },
  {
    "API": "docdb-elastic:ListTagsForResource",
    "EventSource": "docdb-elastic",
    "EventName": "ListTagsForResource",
    "Description": "Lists all tags on a elastic cluster resource"
  },
  {
    "API": "docdb-elastic:RestoreClusterFromSnapshot",
    "EventSource": "docdb-elastic",
    "EventName": "RestoreClusterFromSnapshot",
    "Description": "Restores an elastic cluster from a snapshot"
  },
  {
    "API": "docdb-elastic:StartCluster",
    "EventSource": "docdb-elastic",
    "EventName": "StartCluster",
    "Description": "Restarts the stopped elastic cluster that is specified by ``clusterARN``"
  },
  {
    "API": "docdb-elastic:StopCluster",
    "EventSource": "docdb-elastic",
    "EventName": "StopCluster",
    "Description": "Stops the running elastic cluster that is specified by ``clusterArn``"
  },
  {
    "API": "docdb-elastic:TagResource",
    "EventSource": "docdb-elastic",
    "EventName": "TagResource",
    "Description": "Adds metadata tags to an elastic cluster resource"
  },
  {
    "API": "docdb-elastic:UntagResource",
    "EventSource": "docdb-elastic",
    "EventName": "UntagResource",
    "Description": "Removes metadata tags from an elastic cluster resource"
  },
  {
    "API": "docdb-elastic:UpdateCluster",
    "EventSource": "docdb-elastic",
    "EventName": "UpdateCluster",
    "Description": "Modifies an elastic cluster"
  },
  {
    "API": "drs:AssociateSourceNetworkStack",
    "EventSource": "drs",
    "EventName": "AssociateSourceNetworkStack",
    "Description": "Associate a Source Network to an existing CloudFormation Stack and modify launch templates to use this network"
  },
  {
    "API": "drs:CreateExtendedSourceServer",
    "EventSource": "drs",
    "EventName": "CreateExtendedSourceServer",
    "Description": "Create an extended source server in the target Account based on the source server in staging account"
  },
  {
    "API": "drs:CreateLaunchConfigurationTemplate",
    "EventSource": "drs",
    "EventName": "CreateLaunchConfigurationTemplate",
    "Description": "Creates a new Launch Configuration Template"
  },
  {
    "API": "drs:CreateReplicationConfigurationTemplate",
    "EventSource": "drs",
    "EventName": "CreateReplicationConfigurationTemplate",
    "Description": "Creates a new ReplicationConfigurationTemplate"
  },
  {
    "API": "drs:CreateSourceNetwork",
    "EventSource": "drs",
    "EventName": "CreateSourceNetwork",
    "Description": "Create a new Source Network resource for a provided VPC ID"
  },
  {
    "API": "drs:DeleteJob",
    "EventSource": "drs",
    "EventName": "DeleteJob",
    "Description": "Deletes a single Job by ID"
  },
  {
    "API": "drs:DeleteLaunchAction",
    "EventSource": "drs",
    "EventName": "DeleteLaunchAction",
    "Description": "Deletes a resource launch action"
  },
  {
    "API": "drs:DeleteLaunchConfigurationTemplate",
    "EventSource": "drs",
    "EventName": "DeleteLaunchConfigurationTemplate",
    "Description": "Deletes a single Launch Configuration Template by ID"
  },
  {
    "API": "drs:DeleteRecoveryInstance",
    "EventSource": "drs",
    "EventName": "DeleteRecoveryInstance",
    "Description": "Deletes a single Recovery Instance by ID"
  },
  {
    "API": "drs:DeleteReplicationConfigurationTemplate",
    "EventSource": "drs",
    "EventName": "DeleteReplicationConfigurationTemplate",
    "Description": "Deletes a single Replication Configuration Template by ID"
  },
  {
    "API": "drs:DeleteSourceNetwork",
    "EventSource": "drs",
    "EventName": "DeleteSourceNetwork",
    "Description": "Delete Source Network resource"
  },
  {
    "API": "drs:DeleteSourceServer",
    "EventSource": "drs",
    "EventName": "DeleteSourceServer",
    "Description": "Deletes a single Source Server by ID"
  },
  {
    "API": "drs:DescribeJobLogItems",
    "EventSource": "drs",
    "EventName": "DescribeJobLogItems",
    "Description": "Retrieves a detailed Job log with pagination"
  },
  {
    "API": "drs:DescribeJobs",
    "EventSource": "drs",
    "EventName": "DescribeJobs",
    "Description": "Returns a list of Jobs"
  },
  {
    "API": "drs:DescribeLaunchConfigurationTemplates",
    "EventSource": "drs",
    "EventName": "DescribeLaunchConfigurationTemplates",
    "Description": "Lists all Launch Configuration Templates, filtered by Launch Configuration Template IDs"
  },
  {
    "API": "drs:DescribeRecoveryInstances",
    "EventSource": "drs",
    "EventName": "DescribeRecoveryInstances",
    "Description": "Lists all Recovery Instances or multiple Recovery Instances by ID"
  },
  {
    "API": "drs:DescribeRecoverySnapshots",
    "EventSource": "drs",
    "EventName": "DescribeRecoverySnapshots",
    "Description": "Lists all Recovery Snapshots for a single Source Server"
  },
  {
    "API": "drs:DescribeReplicationConfigurationTemplates",
    "EventSource": "drs",
    "EventName": "DescribeReplicationConfigurationTemplates",
    "Description": "Lists all ReplicationConfigurationTemplates, filtered by Source Server IDs"
  },
  {
    "API": "drs:DescribeSourceNetworks",
    "EventSource": "drs",
    "EventName": "DescribeSourceNetworks",
    "Description": "Lists all Source Networks or multiple Source Networks filtered by ID"
  },
  {
    "API": "drs:DescribeSourceServers",
    "EventSource": "drs",
    "EventName": "DescribeSourceServers",
    "Description": "Lists all Source Servers or multiple Source Servers filtered by ID"
  },
  {
    "API": "drs:DisconnectRecoveryInstance",
    "EventSource": "drs",
    "EventName": "DisconnectRecoveryInstance",
    "Description": "Disconnect a Recovery Instance from Elastic Disaster Recovery"
  },
  {
    "API": "drs:DisconnectSourceServer",
    "EventSource": "drs",
    "EventName": "DisconnectSourceServer",
    "Description": "Disconnects a specific Source Server from Elastic Disaster Recovery"
  },
  {
    "API": "drs:ExportSourceNetworkCfnTemplate",
    "EventSource": "drs",
    "EventName": "ExportSourceNetworkCfnTemplate",
    "Description": "Export the Source Network CloudFormation template to an S3 bucket"
  },
  {
    "API": "drs:GeneratePresignedUrl",
    "EventSource": "drs",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "drs:GetFailbackReplicationConfiguration",
    "EventSource": "drs",
    "EventName": "GetFailbackReplicationConfiguration",
    "Description": "Lists all Failback ReplicationConfigurations, filtered by Recovery Instance ID"
  },
  {
    "API": "drs:GetLaunchConfiguration",
    "EventSource": "drs",
    "EventName": "GetLaunchConfiguration",
    "Description": "Gets a LaunchConfiguration, filtered by Source Server IDs"
  },
  {
    "API": "drs:GetReplicationConfiguration",
    "EventSource": "drs",
    "EventName": "GetReplicationConfiguration",
    "Description": "Gets a ReplicationConfiguration, filtered by Source Server ID"
  },
  {
    "API": "drs:InitializeService",
    "EventSource": "drs",
    "EventName": "InitializeService",
    "Description": "Initialize Elastic Disaster Recovery"
  },
  {
    "API": "drs:ListExtensibleSourceServers",
    "EventSource": "drs",
    "EventName": "ListExtensibleSourceServers",
    "Description": "Returns a list of source servers on a staging account that are extensible, which means that: a"
  },
  {
    "API": "drs:ListLaunchActions",
    "EventSource": "drs",
    "EventName": "ListLaunchActions",
    "Description": "Lists resource launch actions"
  },
  {
    "API": "drs:ListStagingAccounts",
    "EventSource": "drs",
    "EventName": "ListStagingAccounts",
    "Description": "Returns an array of staging accounts for existing extended source servers"
  },
  {
    "API": "drs:ListTagsForResource",
    "EventSource": "drs",
    "EventName": "ListTagsForResource",
    "Description": "List all tags for your Elastic Disaster Recovery resources"
  },
  {
    "API": "drs:PutLaunchAction",
    "EventSource": "drs",
    "EventName": "PutLaunchAction",
    "Description": "Puts a resource launch action"
  },
  {
    "API": "drs:RetryDataReplication",
    "EventSource": "drs",
    "EventName": "RetryDataReplication",
    "Description": "WARNING: RetryDataReplication is deprecated"
  },
  {
    "API": "drs:ReverseReplication",
    "EventSource": "drs",
    "EventName": "ReverseReplication",
    "Description": "Start replication to origin / target region - applies only to protected instances that originated in EC2"
  },
  {
    "API": "drs:StartFailbackLaunch",
    "EventSource": "drs",
    "EventName": "StartFailbackLaunch",
    "Description": "Initiates a Job for launching the machine that is being failed back to from the specified Recovery Instance"
  },
  {
    "API": "drs:StartRecovery",
    "EventSource": "drs",
    "EventName": "StartRecovery",
    "Description": "Launches Recovery Instances for the specified Source Servers"
  },
  {
    "API": "drs:StartReplication",
    "EventSource": "drs",
    "EventName": "StartReplication",
    "Description": "Starts replication for a stopped Source Server"
  },
  {
    "API": "drs:StartSourceNetworkRecovery",
    "EventSource": "drs",
    "EventName": "StartSourceNetworkRecovery",
    "Description": "Deploy VPC for the specified Source Network and modify launch templates to use this network"
  },
  {
    "API": "drs:StartSourceNetworkReplication",
    "EventSource": "drs",
    "EventName": "StartSourceNetworkReplication",
    "Description": "Starts replication for a Source Network"
  },
  {
    "API": "drs:StopFailback",
    "EventSource": "drs",
    "EventName": "StopFailback",
    "Description": "Stops the failback process for a specified Recovery Instance"
  },
  {
    "API": "drs:StopReplication",
    "EventSource": "drs",
    "EventName": "StopReplication",
    "Description": "Stops replication for a Source Server"
  },
  {
    "API": "drs:StopSourceNetworkReplication",
    "EventSource": "drs",
    "EventName": "StopSourceNetworkReplication",
    "Description": "Stops replication for a Source Network"
  },
  {
    "API": "drs:TagResource",
    "EventSource": "drs",
    "EventName": "TagResource",
    "Description": "Adds or overwrites only the specified tags for the specified Elastic Disaster Recovery resource or resources"
  },
  {
    "API": "drs:TerminateRecoveryInstances",
    "EventSource": "drs",
    "EventName": "TerminateRecoveryInstances",
    "Description": "Initiates a Job for terminating the EC2 resources associated with the specified Recovery Instances, and then will delete the Recovery Instances from the Elastic Disaster Recovery service"
  },
  {
    "API": "drs:UntagResource",
    "EventSource": "drs",
    "EventName": "UntagResource",
    "Description": "Deletes the specified set of tags from the specified set of Elastic Disaster Recovery resources"
  },
  {
    "API": "drs:UpdateFailbackReplicationConfiguration",
    "EventSource": "drs",
    "EventName": "UpdateFailbackReplicationConfiguration",
    "Description": "Allows you to update the failback replication configuration of a Recovery Instance by ID"
  },
  {
    "API": "drs:UpdateLaunchConfiguration",
    "EventSource": "drs",
    "EventName": "UpdateLaunchConfiguration",
    "Description": "Updates a LaunchConfiguration by Source Server ID"
  },
  {
    "API": "drs:UpdateLaunchConfigurationTemplate",
    "EventSource": "drs",
    "EventName": "UpdateLaunchConfigurationTemplate",
    "Description": "Updates an existing Launch Configuration Template by ID"
  },
  {
    "API": "drs:UpdateReplicationConfiguration",
    "EventSource": "drs",
    "EventName": "UpdateReplicationConfiguration",
    "Description": "Allows you to update a ReplicationConfiguration by Source Server ID"
  },
  {
    "API": "drs:UpdateReplicationConfigurationTemplate",
    "EventSource": "drs",
    "EventName": "UpdateReplicationConfigurationTemplate",
    "Description": "Updates a ReplicationConfigurationTemplate by ID"
  },
  {
    "API": "ds:AcceptSharedDirectory",
    "EventSource": "ds",
    "EventName": "AcceptSharedDirectory",
    "Description": "Accepts a directory sharing request that was sent from the directory owner account"
  },
  {
    "API": "ds:AddIpRoutes",
    "EventSource": "ds",
    "EventName": "AddIpRoutes",
    "Description": "If the DNS server for your self-managed domain uses a publicly addressable IP address, you must add a CIDR address block to correctly route traffic to and from your Microsoft AD on Amazon Web Services"
  },
  {
    "API": "ds:AddRegion",
    "EventSource": "ds",
    "EventName": "AddRegion",
    "Description": "Adds two domain controllers in the specified Region for the specified directory"
  },
  {
    "API": "ds:AddTagsToResource",
    "EventSource": "ds",
    "EventName": "AddTagsToResource",
    "Description": "Adds or overwrites one or more tags for the specified directory"
  },
  {
    "API": "ds:CancelSchemaExtension",
    "EventSource": "ds",
    "EventName": "CancelSchemaExtension",
    "Description": "Cancels an in-progress schema extension to a Microsoft AD directory"
  },
  {
    "API": "ds:ConnectDirectory",
    "EventSource": "ds",
    "EventName": "ConnectDirectory",
    "Description": "Creates an AD Connector to connect to a self-managed directory"
  },
  {
    "API": "ds:CreateAlias",
    "EventSource": "ds",
    "EventName": "CreateAlias",
    "Description": "Creates an alias for a directory and assigns the alias to the directory"
  },
  {
    "API": "ds:CreateComputer",
    "EventSource": "ds",
    "EventName": "CreateComputer",
    "Description": "Creates an Active Directory computer object in the specified directory"
  },
  {
    "API": "ds:CreateConditionalForwarder",
    "EventSource": "ds",
    "EventName": "CreateConditionalForwarder",
    "Description": "Creates a conditional forwarder associated with your Amazon Web Services directory"
  },
  {
    "API": "ds:CreateDirectory",
    "EventSource": "ds",
    "EventName": "CreateDirectory",
    "Description": "Creates a Simple AD directory"
  },
  {
    "API": "ds:CreateLogSubscription",
    "EventSource": "ds",
    "EventName": "CreateLogSubscription",
    "Description": "Creates a subscription to forward real-time Directory Service domain controller security logs to the specified Amazon CloudWatch log group in your Amazon Web Services account"
  },
  {
    "API": "ds:CreateMicrosoftAd",
    "EventSource": "ds",
    "EventName": "CreateMicrosoftAd",
    "Description": "Creates a Microsoft AD directory in the Amazon Web Services Cloud"
  },
  {
    "API": "ds:CreateSnapshot",
    "EventSource": "ds",
    "EventName": "CreateSnapshot",
    "Description": "Creates a snapshot of a Simple AD or Microsoft AD directory in the Amazon Web Services cloud"
  },
  {
    "API": "ds:CreateTrust",
    "EventSource": "ds",
    "EventName": "CreateTrust",
    "Description": "Directory Service for Microsoft Active Directory allows you to configure trust relationships"
  },
  {
    "API": "ds:DeleteConditionalForwarder",
    "EventSource": "ds",
    "EventName": "DeleteConditionalForwarder",
    "Description": "Deletes a conditional forwarder that has been set up for your Amazon Web Services directory"
  },
  {
    "API": "ds:DeleteDirectory",
    "EventSource": "ds",
    "EventName": "DeleteDirectory",
    "Description": "Deletes an Directory Service directory"
  },
  {
    "API": "ds:DeleteLogSubscription",
    "EventSource": "ds",
    "EventName": "DeleteLogSubscription",
    "Description": "Deletes the specified log subscription"
  },
  {
    "API": "ds:DeleteSnapshot",
    "EventSource": "ds",
    "EventName": "DeleteSnapshot",
    "Description": "Deletes a directory snapshot"
  },
  {
    "API": "ds:DeleteTrust",
    "EventSource": "ds",
    "EventName": "DeleteTrust",
    "Description": "Deletes an existing trust relationship between your Managed Microsoft AD directory and an external domain"
  },
  {
    "API": "ds:DeregisterCertificate",
    "EventSource": "ds",
    "EventName": "DeregisterCertificate",
    "Description": "Deletes from the system the certificate that was registered for secure LDAP or client certificate authentication"
  },
  {
    "API": "ds:DeregisterEventTopic",
    "EventSource": "ds",
    "EventName": "DeregisterEventTopic",
    "Description": "Removes the specified directory as a publisher to the specified Amazon SNS topic"
  },
  {
    "API": "ds:DescribeCertificate",
    "EventSource": "ds",
    "EventName": "DescribeCertificate",
    "Description": "Displays information about the certificate registered for secure LDAP or client certificate authentication"
  },
  {
    "API": "ds:DescribeClientAuthenticationSettings",
    "EventSource": "ds",
    "EventName": "DescribeClientAuthenticationSettings",
    "Description": "Retrieves information about the type of client authentication for the specified directory, if the type is specified"
  },
  {
    "API": "ds:DescribeConditionalForwarders",
    "EventSource": "ds",
    "EventName": "DescribeConditionalForwarders",
    "Description": "Obtains information about the conditional forwarders for this account"
  },
  {
    "API": "ds:DescribeDirectories",
    "EventSource": "ds",
    "EventName": "DescribeDirectories",
    "Description": "Obtains information about the directories that belong to this account"
  },
  {
    "API": "ds:DescribeDomainControllers",
    "EventSource": "ds",
    "EventName": "DescribeDomainControllers",
    "Description": "Provides information about any domain controllers in your directory"
  },
  {
    "API": "ds:DescribeEventTopics",
    "EventSource": "ds",
    "EventName": "DescribeEventTopics",
    "Description": "Obtains information about which Amazon SNS topics receive status messages from the specified directory"
  },
  {
    "API": "ds:DescribeLdapsSettings",
    "EventSource": "ds",
    "EventName": "DescribeLdapsSettings",
    "Description": "Describes the status of LDAP security for the specified directory"
  },
  {
    "API": "ds:DescribeRegions",
    "EventSource": "ds",
    "EventName": "DescribeRegions",
    "Description": "Provides information about the Regions that are configured for multi-Region replication"
  },
  {
    "API": "ds:DescribeSettings",
    "EventSource": "ds",
    "EventName": "DescribeSettings",
    "Description": "Retrieves information about the configurable settings for the specified directory"
  },
  {
    "API": "ds:DescribeSharedDirectories",
    "EventSource": "ds",
    "EventName": "DescribeSharedDirectories",
    "Description": "Returns the shared directories in your account"
  },
  {
    "API": "ds:DescribeSnapshots",
    "EventSource": "ds",
    "EventName": "DescribeSnapshots",
    "Description": "Obtains information about the directory snapshots that belong to this account"
  },
  {
    "API": "ds:DescribeTrusts",
    "EventSource": "ds",
    "EventName": "DescribeTrusts",
    "Description": "Obtains information about the trust relationships for this account"
  },
  {
    "API": "ds:DescribeUpdateDirectory",
    "EventSource": "ds",
    "EventName": "DescribeUpdateDirectory",
    "Description": "Describes the updates of a directory for a particular update type"
  },
  {
    "API": "ds:DisableClientAuthentication",
    "EventSource": "ds",
    "EventName": "DisableClientAuthentication",
    "Description": "Disables alternative client authentication methods for the specified directory"
  },
  {
    "API": "ds:DisableLdaps",
    "EventSource": "ds",
    "EventName": "DisableLdaps",
    "Description": "Deactivates LDAP secure calls for the specified directory"
  },
  {
    "API": "ds:DisableRadius",
    "EventSource": "ds",
    "EventName": "DisableRadius",
    "Description": "Disables multi-factor authentication (MFA) with the Remote Authentication Dial In User Service (RADIUS) server for an AD Connector or Microsoft AD directory"
  },
  {
    "API": "ds:DisableSso",
    "EventSource": "ds",
    "EventName": "DisableSso",
    "Description": "Disables single-sign on for a directory"
  },
  {
    "API": "ds:EnableClientAuthentication",
    "EventSource": "ds",
    "EventName": "EnableClientAuthentication",
    "Description": "Enables alternative client authentication methods for the specified directory"
  },
  {
    "API": "ds:EnableLdaps",
    "EventSource": "ds",
    "EventName": "EnableLdaps",
    "Description": "Activates the switch for the specific directory to always use LDAP secure calls"
  },
  {
    "API": "ds:EnableRadius",
    "EventSource": "ds",
    "EventName": "EnableRadius",
    "Description": "Enables multi-factor authentication (MFA) with the Remote Authentication Dial In User Service (RADIUS) server for an AD Connector or Microsoft AD directory"
  },
  {
    "API": "ds:EnableSso",
    "EventSource": "ds",
    "EventName": "EnableSso",
    "Description": "Enables single sign-on for a directory"
  },
  {
    "API": "ds:GeneratePresignedUrl",
    "EventSource": "ds",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "ds:GetDirectoryLimits",
    "EventSource": "ds",
    "EventName": "GetDirectoryLimits",
    "Description": "Obtains directory limit information for the current Region"
  },
  {
    "API": "ds:GetSnapshotLimits",
    "EventSource": "ds",
    "EventName": "GetSnapshotLimits",
    "Description": "Obtains the manual snapshot limits for a directory"
  },
  {
    "API": "ds:ListCertificates",
    "EventSource": "ds",
    "EventName": "ListCertificates",
    "Description": "For the specified directory, lists all the certificates registered for a secure LDAP or client certificate authentication"
  },
  {
    "API": "ds:ListIpRoutes",
    "EventSource": "ds",
    "EventName": "ListIpRoutes",
    "Description": "Lists the address blocks that you have added to a directory"
  },
  {
    "API": "ds:ListLogSubscriptions",
    "EventSource": "ds",
    "EventName": "ListLogSubscriptions",
    "Description": "Lists the active log subscriptions for the Amazon Web Services account"
  },
  {
    "API": "ds:ListSchemaExtensions",
    "EventSource": "ds",
    "EventName": "ListSchemaExtensions",
    "Description": "Lists all schema extensions applied to a Microsoft AD Directory"
  },
  {
    "API": "ds:ListTagsForResource",
    "EventSource": "ds",
    "EventName": "ListTagsForResource",
    "Description": "Lists all tags on a directory"
  },
  {
    "API": "ds:RegisterCertificate",
    "EventSource": "ds",
    "EventName": "RegisterCertificate",
    "Description": "Registers a certificate for a secure LDAP or client certificate authentication"
  },
  {
    "API": "ds:RegisterEventTopic",
    "EventSource": "ds",
    "EventName": "RegisterEventTopic",
    "Description": "Associates a directory with an Amazon SNS topic"
  },
  {
    "API": "ds:RejectSharedDirectory",
    "EventSource": "ds",
    "EventName": "RejectSharedDirectory",
    "Description": "Rejects a directory sharing request that was sent from the directory owner account"
  },
  {
    "API": "ds:RemoveIpRoutes",
    "EventSource": "ds",
    "EventName": "RemoveIpRoutes",
    "Description": "Removes IP address blocks from a directory"
  },
  {
    "API": "ds:RemoveRegion",
    "EventSource": "ds",
    "EventName": "RemoveRegion",
    "Description": "Stops all replication and removes the domain controllers from the specified Region"
  },
  {
    "API": "ds:RemoveTagsFromResource",
    "EventSource": "ds",
    "EventName": "RemoveTagsFromResource",
    "Description": "Removes tags from a directory"
  },
  {
    "API": "ds:ResetUserPassword",
    "EventSource": "ds",
    "EventName": "ResetUserPassword",
    "Description": "Resets the password for any user in your Managed Microsoft AD or Simple AD directory"
  },
  {
    "API": "ds:RestoreFromSnapshot",
    "EventSource": "ds",
    "EventName": "RestoreFromSnapshot",
    "Description": "Restores a directory using an existing directory snapshot"
  },
  {
    "API": "ds:ShareDirectory",
    "EventSource": "ds",
    "EventName": "ShareDirectory",
    "Description": "Shares a specified directory ( ``DirectoryId``) in your Amazon Web Services account (directory owner) with another Amazon Web Services account (directory consumer)"
  },
  {
    "API": "ds:StartSchemaExtension",
    "EventSource": "ds",
    "EventName": "StartSchemaExtension",
    "Description": "Applies a schema extension to a Microsoft AD directory"
  },
  {
    "API": "ds:UnshareDirectory",
    "EventSource": "ds",
    "EventName": "UnshareDirectory",
    "Description": "Stops the directory sharing between the directory owner and consumer accounts"
  },
  {
    "API": "ds:UpdateConditionalForwarder",
    "EventSource": "ds",
    "EventName": "UpdateConditionalForwarder",
    "Description": "Updates a conditional forwarder that has been set up for your Amazon Web Services directory"
  },
  {
    "API": "ds:UpdateDirectorySetup",
    "EventSource": "ds",
    "EventName": "UpdateDirectorySetup",
    "Description": "Updates the directory for a particular update type"
  },
  {
    "API": "ds:UpdateNumberOfDomainControllers",
    "EventSource": "ds",
    "EventName": "UpdateNumberOfDomainControllers",
    "Description": "Adds or removes domain controllers to or from the directory"
  },
  {
    "API": "ds:UpdateRadius",
    "EventSource": "ds",
    "EventName": "UpdateRadius",
    "Description": "Updates the Remote Authentication Dial In User Service (RADIUS) server information for an AD Connector or Microsoft AD directory"
  },
  {
    "API": "ds:UpdateSettings",
    "EventSource": "ds",
    "EventName": "UpdateSettings",
    "Description": "Updates the configurable settings for the specified directory"
  },
  {
    "API": "ds:UpdateTrust",
    "EventSource": "ds",
    "EventName": "UpdateTrust",
    "Description": "Updates the trust that has been set up between your Managed Microsoft AD directory and an self-managed Active Directory"
  },
  {
    "API": "ds:VerifyTrust",
    "EventSource": "ds",
    "EventName": "VerifyTrust",
    "Description": "Directory Service for Microsoft Active Directory allows you to configure and verify trust relationships"
  },
  {
    "API": "dynamodb:BatchExecuteStatement",
    "EventSource": "dynamodb",
    "EventName": "BatchExecuteStatement",
    "Description": "This operation allows you to perform batch reads or writes on data stored in DynamoDB, using PartiQL"
  },
  {
    "API": "dynamodb:BatchGetItem",
    "EventSource": "dynamodb",
    "EventName": "BatchGetItem",
    "Description": "The ``BatchGetItem`` operation returns the attributes of one or more items from one or more tables"
  },
  {
    "API": "dynamodb:BatchWriteItem",
    "EventSource": "dynamodb",
    "EventName": "BatchWriteItem",
    "Description": "The ``BatchWriteItem`` operation puts or deletes multiple items in one or more tables"
  },
  {
    "API": "dynamodb:CreateBackup",
    "EventSource": "dynamodb",
    "EventName": "CreateBackup",
    "Description": "Creates a backup for an existing table"
  },
  {
    "API": "dynamodb:CreateGlobalTable",
    "EventSource": "dynamodb",
    "EventName": "CreateGlobalTable",
    "Description": "Creates a global table from an existing table"
  },
  {
    "API": "dynamodb:CreateTable",
    "EventSource": "dynamodb",
    "EventName": "CreateTable",
    "Description": "The ``CreateTable`` operation adds a new table to your account"
  },
  {
    "API": "dynamodb:DeleteBackup",
    "EventSource": "dynamodb",
    "EventName": "DeleteBackup",
    "Description": "Deletes an existing backup of a table"
  },
  {
    "API": "dynamodb:DeleteItem",
    "EventSource": "dynamodb",
    "EventName": "DeleteItem",
    "Description": "Deletes a single item in a table by primary key"
  },
  {
    "API": "dynamodb:DeleteResourcePolicy",
    "EventSource": "dynamodb",
    "EventName": "DeleteResourcePolicy",
    "Description": "Deletes the resource-based policy attached to the resource, which can be a table or stream"
  },
  {
    "API": "dynamodb:DeleteTable",
    "EventSource": "dynamodb",
    "EventName": "DeleteTable",
    "Description": "The ``DeleteTable`` operation deletes a table and all of its items"
  },
  {
    "API": "dynamodb:DescribeBackup",
    "EventSource": "dynamodb",
    "EventName": "DescribeBackup",
    "Description": "Describes an existing backup of a table"
  },
  {
    "API": "dynamodb:DescribeContinuousBackups",
    "EventSource": "dynamodb",
    "EventName": "DescribeContinuousBackups",
    "Description": "Checks the status of continuous backups and point in time recovery on the specified table"
  },
  {
    "API": "dynamodb:DescribeContributorInsights",
    "EventSource": "dynamodb",
    "EventName": "DescribeContributorInsights",
    "Description": "Returns information about contributor insights for a given table or global secondary index"
  },
  {
    "API": "dynamodb:DescribeEndpoints",
    "EventSource": "dynamodb",
    "EventName": "DescribeEndpoints",
    "Description": "Returns the regional endpoint information"
  },
  {
    "API": "dynamodb:DescribeExport",
    "EventSource": "dynamodb",
    "EventName": "DescribeExport",
    "Description": "Describes an existing table export"
  },
  {
    "API": "dynamodb:DescribeGlobalTable",
    "EventSource": "dynamodb",
    "EventName": "DescribeGlobalTable",
    "Description": "Returns information about the specified global table"
  },
  {
    "API": "dynamodb:DescribeGlobalTableSettings",
    "EventSource": "dynamodb",
    "EventName": "DescribeGlobalTableSettings",
    "Description": "Describes Region-specific settings for a global table"
  },
  {
    "API": "dynamodb:DescribeImport",
    "EventSource": "dynamodb",
    "EventName": "DescribeImport",
    "Description": "Represents the properties of the import"
  },
  {
    "API": "dynamodb:DescribeKinesisStreamingDestination",
    "EventSource": "dynamodb",
    "EventName": "DescribeKinesisStreamingDestination",
    "Description": "Returns information about the status of Kinesis streaming"
  },
  {
    "API": "dynamodb:DescribeLimits",
    "EventSource": "dynamodb",
    "EventName": "DescribeLimits",
    "Description": "Returns the current provisioned-capacity quotas for your Amazon Web Services account in a Region, both for the Region as a whole and for any one DynamoDB table that you create there"
  },
  {
    "API": "dynamodb:DescribeTable",
    "EventSource": "dynamodb",
    "EventName": "DescribeTable",
    "Description": "Returns information about the table, including the current status of the table, when it was created, the primary key schema, and any indexes on the table"
  },
  {
    "API": "dynamodb:DescribeTableReplicaAutoScaling",
    "EventSource": "dynamodb",
    "EventName": "DescribeTableReplicaAutoScaling",
    "Description": "Describes auto scaling settings across replicas of the global table at once"
  },
  {
    "API": "dynamodb:DescribeTimeToLive",
    "EventSource": "dynamodb",
    "EventName": "DescribeTimeToLive",
    "Description": "Gives a description of the Time to Live (TTL) status on the specified table"
  },
  {
    "API": "dynamodb:DisableKinesisStreamingDestination",
    "EventSource": "dynamodb",
    "EventName": "DisableKinesisStreamingDestination",
    "Description": "Stops replication from the DynamoDB table to the Kinesis data stream"
  },
  {
    "API": "dynamodb:EnableKinesisStreamingDestination",
    "EventSource": "dynamodb",
    "EventName": "EnableKinesisStreamingDestination",
    "Description": "Starts table data replication to the specified Kinesis data stream at a timestamp chosen during the enable workflow"
  },
  {
    "API": "dynamodb:ExecuteStatement",
    "EventSource": "dynamodb",
    "EventName": "ExecuteStatement",
    "Description": "This operation allows you to perform reads and singleton writes on data stored in DynamoDB, using PartiQL"
  },
  {
    "API": "dynamodb:ExecuteTransaction",
    "EventSource": "dynamodb",
    "EventName": "ExecuteTransaction",
    "Description": "This operation allows you to perform transactional reads or writes on data stored in DynamoDB, using PartiQL"
  },
  {
    "API": "dynamodb:ExportTableToPointInTime",
    "EventSource": "dynamodb",
    "EventName": "ExportTableToPointInTime",
    "Description": "Exports table data to an S3 bucket"
  },
  {
    "API": "dynamodb:GeneratePresignedUrl",
    "EventSource": "dynamodb",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "dynamodb:GetItem",
    "EventSource": "dynamodb",
    "EventName": "GetItem",
    "Description": "The ``GetItem`` operation returns a set of attributes for the item with the given primary key"
  },
  {
    "API": "dynamodb:GetResourcePolicy",
    "EventSource": "dynamodb",
    "EventName": "GetResourcePolicy",
    "Description": "Returns the resource-based policy document attached to the resource, which can be a table or stream, in JSON format"
  },
  {
    "API": "dynamodb:ImportTable",
    "EventSource": "dynamodb",
    "EventName": "ImportTable",
    "Description": "Imports table data from an S3 bucket"
  },
  {
    "API": "dynamodb:ListBackups",
    "EventSource": "dynamodb",
    "EventName": "ListBackups",
    "Description": "List DynamoDB backups that are associated with an Amazon Web Services account and weren't made with Amazon Web Services Backup"
  },
  {
    "API": "dynamodb:ListContributorInsights",
    "EventSource": "dynamodb",
    "EventName": "ListContributorInsights",
    "Description": "Returns a list of ContributorInsightsSummary for a table and all its global secondary indexes"
  },
  {
    "API": "dynamodb:ListExports",
    "EventSource": "dynamodb",
    "EventName": "ListExports",
    "Description": "Lists completed exports within the past 90 days"
  },
  {
    "API": "dynamodb:ListGlobalTables",
    "EventSource": "dynamodb",
    "EventName": "ListGlobalTables",
    "Description": "Lists all global tables that have a replica in the specified Region"
  },
  {
    "API": "dynamodb:ListImports",
    "EventSource": "dynamodb",
    "EventName": "ListImports",
    "Description": "Lists completed imports within the past 90 days"
  },
  {
    "API": "dynamodb:ListTables",
    "EventSource": "dynamodb",
    "EventName": "ListTables",
    "Description": "Returns an array of table names associated with the current account and endpoint"
  },
  {
    "API": "dynamodb:ListTagsOfResource",
    "EventSource": "dynamodb",
    "EventName": "ListTagsOfResource",
    "Description": "List all tags on an Amazon DynamoDB resource"
  },
  {
    "API": "dynamodb:PutItem",
    "EventSource": "dynamodb",
    "EventName": "PutItem",
    "Description": "Creates a new item, or replaces an old item with a new item"
  },
  {
    "API": "dynamodb:PutResourcePolicy",
    "EventSource": "dynamodb",
    "EventName": "PutResourcePolicy",
    "Description": "Attaches a resource-based policy document to the resource, which can be a table or stream"
  },
  {
    "API": "dynamodb:RestoreTableFromBackup",
    "EventSource": "dynamodb",
    "EventName": "RestoreTableFromBackup",
    "Description": "Creates a new table from an existing backup"
  },
  {
    "API": "dynamodb:RestoreTableToPointInTime",
    "EventSource": "dynamodb",
    "EventName": "RestoreTableToPointInTime",
    "Description": "Restores the specified table to the specified point in time within ``EarliestRestorableDateTime`` and ``LatestRestorableDateTime``"
  },
  {
    "API": "dynamodb:TagResource",
    "EventSource": "dynamodb",
    "EventName": "TagResource",
    "Description": "Associate a set of tags with an Amazon DynamoDB resource"
  },
  {
    "API": "dynamodb:TransactGetItems",
    "EventSource": "dynamodb",
    "EventName": "TransactGetItems",
    "Description": "``TransactGetItems`` is a synchronous operation that atomically retrieves multiple items from one or more tables (but not from indexes) in a single account and Region"
  },
  {
    "API": "dynamodb:TransactWriteItems",
    "EventSource": "dynamodb",
    "EventName": "TransactWriteItems",
    "Description": "``TransactWriteItems`` is a synchronous write operation that groups up to 100 action requests"
  },
  {
    "API": "dynamodb:UntagResource",
    "EventSource": "dynamodb",
    "EventName": "UntagResource",
    "Description": "Removes the association of tags from an Amazon DynamoDB resource"
  },
  {
    "API": "dynamodb:UpdateContinuousBackups",
    "EventSource": "dynamodb",
    "EventName": "UpdateContinuousBackups",
    "Description": "``UpdateContinuousBackups`` enables or disables point in time recovery for the specified table"
  },
  {
    "API": "dynamodb:UpdateContributorInsights",
    "EventSource": "dynamodb",
    "EventName": "UpdateContributorInsights",
    "Description": "Updates the status for contributor insights for a specific table or index"
  },
  {
    "API": "dynamodb:UpdateGlobalTable",
    "EventSource": "dynamodb",
    "EventName": "UpdateGlobalTable",
    "Description": "Adds or removes replicas in the specified global table"
  },
  {
    "API": "dynamodb:UpdateGlobalTableSettings",
    "EventSource": "dynamodb",
    "EventName": "UpdateGlobalTableSettings",
    "Description": "Updates settings for a global table"
  },
  {
    "API": "dynamodb:UpdateItem",
    "EventSource": "dynamodb",
    "EventName": "UpdateItem",
    "Description": "Edits an existing item's attributes, or adds a new item to the table if it does not already exist"
  },
  {
    "API": "dynamodb:UpdateKinesisStreamingDestination",
    "EventSource": "dynamodb",
    "EventName": "UpdateKinesisStreamingDestination",
    "Description": "The command to update the Kinesis stream destination"
  },
  {
    "API": "dynamodb:UpdateTable",
    "EventSource": "dynamodb",
    "EventName": "UpdateTable",
    "Description": "Modifies the provisioned throughput settings, global secondary indexes, or DynamoDB Streams settings for a given table"
  },
  {
    "API": "dynamodb:UpdateTableReplicaAutoScaling",
    "EventSource": "dynamodb",
    "EventName": "UpdateTableReplicaAutoScaling",
    "Description": "Updates auto scaling settings on your global tables at once"
  },
  {
    "API": "dynamodb:UpdateTimeToLive",
    "EventSource": "dynamodb",
    "EventName": "UpdateTimeToLive",
    "Description": "The ``UpdateTimeToLive`` method enables or disables Time to Live (TTL) for the specified table"
  },
  {
    "API": "dynamodbstreams:DescribeStream",
    "EventSource": "dynamodbstreams",
    "EventName": "DescribeStream",
    "Description": "Returns information about a stream, including the current status of the stream, its Amazon Resource Name (ARN), the composition of its shards, and its corresponding DynamoDB table"
  },
  {
    "API": "dynamodbstreams:GeneratePresignedUrl",
    "EventSource": "dynamodbstreams",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "dynamodbstreams:GetRecords",
    "EventSource": "dynamodbstreams",
    "EventName": "GetRecords",
    "Description": "Retrieves the stream records from a given shard"
  },
  {
    "API": "dynamodbstreams:GetShardIterator",
    "EventSource": "dynamodbstreams",
    "EventName": "GetShardIterator",
    "Description": "Returns a shard iterator"
  },
  {
    "API": "dynamodbstreams:ListStreams",
    "EventSource": "dynamodbstreams",
    "EventName": "ListStreams",
    "Description": "Returns an array of stream ARNs associated with the current account and endpoint"
  },
  {
    "API": "ebs:CompleteSnapshot",
    "EventSource": "ebs",
    "EventName": "CompleteSnapshot",
    "Description": "Seals and completes the snapshot after all of the required blocks of data have been written to it"
  },
  {
    "API": "ebs:GeneratePresignedUrl",
    "EventSource": "ebs",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "ebs:GetSnapshotBlock",
    "EventSource": "ebs",
    "EventName": "GetSnapshotBlock",
    "Description": "Returns the data in a block in an Amazon Elastic Block Store snapshot"
  },
  {
    "API": "ebs:ListChangedBlocks",
    "EventSource": "ebs",
    "EventName": "ListChangedBlocks",
    "Description": "Returns information about the blocks that are different between two Amazon Elastic Block Store snapshots of the same volume/snapshot lineage"
  },
  {
    "API": "ebs:ListSnapshotBlocks",
    "EventSource": "ebs",
    "EventName": "ListSnapshotBlocks",
    "Description": "Returns information about the blocks in an Amazon Elastic Block Store snapshot"
  },
  {
    "API": "ebs:PutSnapshotBlock",
    "EventSource": "ebs",
    "EventName": "PutSnapshotBlock",
    "Description": "Writes a block of data to a snapshot"
  },
  {
    "API": "ebs:StartSnapshot",
    "EventSource": "ebs",
    "EventName": "StartSnapshot",
    "Description": "Creates a new Amazon EBS snapshot"
  },
  {
    "API": "ec2:AcceptAddressTransfer",
    "EventSource": "ec2",
    "EventName": "AcceptAddressTransfer",
    "Description": "Accepts an Elastic IP address transfer"
  },
  {
    "API": "ec2:AcceptReservedInstancesExchangeQuote",
    "EventSource": "ec2",
    "EventName": "AcceptReservedInstancesExchangeQuote",
    "Description": "Accepts the Convertible Reserved Instance exchange quote described in the  GetReservedInstancesExchangeQuote call"
  },
  {
    "API": "ec2:AcceptTransitGatewayMulticastDomainAssociations",
    "EventSource": "ec2",
    "EventName": "AcceptTransitGatewayMulticastDomainAssociations",
    "Description": "Accepts a request to associate subnets with a transit gateway multicast domain"
  },
  {
    "API": "ec2:AcceptTransitGatewayPeeringAttachment",
    "EventSource": "ec2",
    "EventName": "AcceptTransitGatewayPeeringAttachment",
    "Description": "Accepts a transit gateway peering attachment request"
  },
  {
    "API": "ec2:AcceptTransitGatewayVpcAttachment",
    "EventSource": "ec2",
    "EventName": "AcceptTransitGatewayVpcAttachment",
    "Description": "Accepts a request to attach a VPC to a transit gateway"
  },
  {
    "API": "ec2:AcceptVpcEndpointConnections",
    "EventSource": "ec2",
    "EventName": "AcceptVpcEndpointConnections",
    "Description": "Accepts connection requests to your VPC endpoint service"
  },
  {
    "API": "ec2:AcceptVpcPeeringConnection",
    "EventSource": "ec2",
    "EventName": "AcceptVpcPeeringConnection",
    "Description": "Accept a VPC peering connection request"
  },
  {
    "API": "ec2:AdvertiseByoipCidr",
    "EventSource": "ec2",
    "EventName": "AdvertiseByoipCidr",
    "Description": "Advertises an IPv4 or IPv6 address range that is provisioned for use with your Amazon Web Services resources through bring your own IP addresses (BYOIP)"
  },
  {
    "API": "ec2:AllocateAddress",
    "EventSource": "ec2",
    "EventName": "AllocateAddress",
    "Description": "Allocates an Elastic IP address to your Amazon Web Services account"
  },
  {
    "API": "ec2:AllocateHosts",
    "EventSource": "ec2",
    "EventName": "AllocateHosts",
    "Description": "Allocates a Dedicated Host to your account"
  },
  {
    "API": "ec2:AllocateIpamPoolCidr",
    "EventSource": "ec2",
    "EventName": "AllocateIpamPoolCidr",
    "Description": "Allocate a CIDR from an IPAM pool"
  },
  {
    "API": "ec2:ApplySecurityGroupsToClientVpnTargetNetwork",
    "EventSource": "ec2",
    "EventName": "ApplySecurityGroupsToClientVpnTargetNetwork",
    "Description": "Applies a security group to the association between the target network and the Client VPN endpoint"
  },
  {
    "API": "ec2:AssignIpv6Addresses",
    "EventSource": "ec2",
    "EventName": "AssignIpv6Addresses",
    "Description": "Assigns one or more IPv6 addresses to the specified network interface"
  },
  {
    "API": "ec2:AssignPrivateIpAddresses",
    "EventSource": "ec2",
    "EventName": "AssignPrivateIpAddresses",
    "Description": "Assigns one or more secondary private IP addresses to the specified network interface"
  },
  {
    "API": "ec2:AssignPrivateNatGatewayAddress",
    "EventSource": "ec2",
    "EventName": "AssignPrivateNatGatewayAddress",
    "Description": "Assigns private IPv4 addresses to a private NAT gateway"
  },
  {
    "API": "ec2:AssociateAddress",
    "EventSource": "ec2",
    "EventName": "AssociateAddress",
    "Description": "Associates an Elastic IP address, or carrier IP address (for instances that are in subnets in Wavelength Zones) with an instance or a network interface"
  },
  {
    "API": "ec2:AssociateClientVpnTargetNetwork",
    "EventSource": "ec2",
    "EventName": "AssociateClientVpnTargetNetwork",
    "Description": "Associates a target network with a Client VPN endpoint"
  },
  {
    "API": "ec2:AssociateDhcpOptions",
    "EventSource": "ec2",
    "EventName": "AssociateDhcpOptions",
    "Description": "Associates a set of DHCP options (that you've previously created) with the specified VPC, or associates no DHCP options with the VPC"
  },
  {
    "API": "ec2:AssociateEnclaveCertificateIamRole",
    "EventSource": "ec2",
    "EventName": "AssociateEnclaveCertificateIamRole",
    "Description": "Associates an Identity and Access Management (IAM) role with an Certificate Manager (ACM) certificate"
  },
  {
    "API": "ec2:AssociateIamInstanceProfile",
    "EventSource": "ec2",
    "EventName": "AssociateIamInstanceProfile",
    "Description": "Associates an IAM instance profile with a running or stopped instance"
  },
  {
    "API": "ec2:AssociateInstanceEventWindow",
    "EventSource": "ec2",
    "EventName": "AssociateInstanceEventWindow",
    "Description": "Associates one or more targets with an event window"
  },
  {
    "API": "ec2:AssociateIpamByoasn",
    "EventSource": "ec2",
    "EventName": "AssociateIpamByoasn",
    "Description": "Associates your Autonomous System Number (ASN) with a BYOIP CIDR that you own in the same Amazon Web Services Region"
  },
  {
    "API": "ec2:AssociateIpamResourceDiscovery",
    "EventSource": "ec2",
    "EventName": "AssociateIpamResourceDiscovery",
    "Description": "Associates an IPAM resource discovery with an Amazon VPC IPAM"
  },
  {
    "API": "ec2:AssociateNatGatewayAddress",
    "EventSource": "ec2",
    "EventName": "AssociateNatGatewayAddress",
    "Description": "Associates Elastic IP addresses (EIPs) and private IPv4 addresses with a public NAT gateway"
  },
  {
    "API": "ec2:AssociateRouteTable",
    "EventSource": "ec2",
    "EventName": "AssociateRouteTable",
    "Description": "Associates a subnet in your VPC or an internet gateway or virtual private gateway attached to your VPC with a route table in your VPC"
  },
  {
    "API": "ec2:AssociateSubnetCidrBlock",
    "EventSource": "ec2",
    "EventName": "AssociateSubnetCidrBlock",
    "Description": "Associates a CIDR block with your subnet"
  },
  {
    "API": "ec2:AssociateTransitGatewayMulticastDomain",
    "EventSource": "ec2",
    "EventName": "AssociateTransitGatewayMulticastDomain",
    "Description": "Associates the specified subnets and transit gateway attachments with the specified transit gateway multicast domain"
  },
  {
    "API": "ec2:AssociateTransitGatewayPolicyTable",
    "EventSource": "ec2",
    "EventName": "AssociateTransitGatewayPolicyTable",
    "Description": "Associates the specified transit gateway attachment with a transit gateway policy table"
  },
  {
    "API": "ec2:AssociateTransitGatewayRouteTable",
    "EventSource": "ec2",
    "EventName": "AssociateTransitGatewayRouteTable",
    "Description": "Associates the specified attachment with the specified transit gateway route table"
  },
  {
    "API": "ec2:AssociateTrunkInterface",
    "EventSource": "ec2",
    "EventName": "AssociateTrunkInterface",
    "Description": "Associates a branch network interface with a trunk network interface"
  },
  {
    "API": "ec2:AssociateVpcCidrBlock",
    "EventSource": "ec2",
    "EventName": "AssociateVpcCidrBlock",
    "Description": "Associates a CIDR block with your VPC"
  },
  {
    "API": "ec2:AttachClassicLinkVpc",
    "EventSource": "ec2",
    "EventName": "AttachClassicLinkVpc",
    "Description": ""
  },
  {
    "API": "ec2:AttachInternetGateway",
    "EventSource": "ec2",
    "EventName": "AttachInternetGateway",
    "Description": "Attaches an internet gateway or a virtual private gateway to a VPC, enabling connectivity between the internet and the VPC"
  },
  {
    "API": "ec2:AttachNetworkInterface",
    "EventSource": "ec2",
    "EventName": "AttachNetworkInterface",
    "Description": "Attaches a network interface to an instance"
  },
  {
    "API": "ec2:AttachVerifiedAccessTrustProvider",
    "EventSource": "ec2",
    "EventName": "AttachVerifiedAccessTrustProvider",
    "Description": "Attaches the specified Amazon Web Services Verified Access trust provider to the specified Amazon Web Services Verified Access instance"
  },
  {
    "API": "ec2:AttachVolume",
    "EventSource": "ec2",
    "EventName": "AttachVolume",
    "Description": "Attaches an EBS volume to a running or stopped instance and exposes it to the instance with the specified device name"
  },
  {
    "API": "ec2:AttachVpnGateway",
    "EventSource": "ec2",
    "EventName": "AttachVpnGateway",
    "Description": "Attaches a virtual private gateway to a VPC"
  },
  {
    "API": "ec2:AuthorizeClientVpnIngress",
    "EventSource": "ec2",
    "EventName": "AuthorizeClientVpnIngress",
    "Description": "Adds an ingress authorization rule to a Client VPN endpoint"
  },
  {
    "API": "ec2:AuthorizeSecurityGroupEgress",
    "EventSource": "ec2",
    "EventName": "AuthorizeSecurityGroupEgress",
    "Description": "Adds the specified outbound (egress) rules to a security group"
  },
  {
    "API": "ec2:AuthorizeSecurityGroupIngress",
    "EventSource": "ec2",
    "EventName": "AuthorizeSecurityGroupIngress",
    "Description": "Adds the specified inbound (ingress) rules to a security group"
  },
  {
    "API": "ec2:BundleInstance",
    "EventSource": "ec2",
    "EventName": "BundleInstance",
    "Description": "Bundles an Amazon instance store-backed Windows instance"
  },
  {
    "API": "ec2:CancelBundleTask",
    "EventSource": "ec2",
    "EventName": "CancelBundleTask",
    "Description": "Cancels a bundling operation for an instance store-backed Windows instance"
  },
  {
    "API": "ec2:CancelCapacityReservation",
    "EventSource": "ec2",
    "EventName": "CancelCapacityReservation",
    "Description": "Cancels the specified Capacity Reservation, releases the reserved capacity, and changes the Capacity Reservation's state to ``cancelled``"
  },
  {
    "API": "ec2:CancelCapacityReservationFleets",
    "EventSource": "ec2",
    "EventName": "CancelCapacityReservationFleets",
    "Description": "Cancels one or more Capacity Reservation Fleets"
  },
  {
    "API": "ec2:CancelConversionTask",
    "EventSource": "ec2",
    "EventName": "CancelConversionTask",
    "Description": "Cancels an active conversion task"
  },
  {
    "API": "ec2:CancelExportTask",
    "EventSource": "ec2",
    "EventName": "CancelExportTask",
    "Description": "Cancels an active export task"
  },
  {
    "API": "ec2:CancelImageLaunchPermission",
    "EventSource": "ec2",
    "EventName": "CancelImageLaunchPermission",
    "Description": "Removes your Amazon Web Services account from the launch permissions for the specified AMI"
  },
  {
    "API": "ec2:CancelImportTask",
    "EventSource": "ec2",
    "EventName": "CancelImportTask",
    "Description": "Cancels an in-process import virtual machine or import snapshot task"
  },
  {
    "API": "ec2:CancelReservedInstancesListing",
    "EventSource": "ec2",
    "EventName": "CancelReservedInstancesListing",
    "Description": "Cancels the specified Reserved Instance listing in the Reserved Instance Marketplace"
  },
  {
    "API": "ec2:CancelSpotFleetRequests",
    "EventSource": "ec2",
    "EventName": "CancelSpotFleetRequests",
    "Description": "Cancels the specified Spot Fleet requests"
  },
  {
    "API": "ec2:CancelSpotInstanceRequests",
    "EventSource": "ec2",
    "EventName": "CancelSpotInstanceRequests",
    "Description": "Cancels one or more Spot Instance requests"
  },
  {
    "API": "ec2:ConfirmProductInstance",
    "EventSource": "ec2",
    "EventName": "ConfirmProductInstance",
    "Description": "Determines whether a product code is associated with an instance"
  },
  {
    "API": "ec2:CopyFpgaImage",
    "EventSource": "ec2",
    "EventName": "CopyFpgaImage",
    "Description": "Copies the specified Amazon FPGA Image (AFI) to the current Region"
  },
  {
    "API": "ec2:CopyImage",
    "EventSource": "ec2",
    "EventName": "CopyImage",
    "Description": "Initiates the copy of an AMI"
  },
  {
    "API": "ec2:CopySnapshot",
    "EventSource": "ec2",
    "EventName": "CopySnapshot",
    "Description": "Copies a point-in-time snapshot of an EBS volume and stores it in Amazon S3"
  },
  {
    "API": "ec2:CreateCapacityReservation",
    "EventSource": "ec2",
    "EventName": "CreateCapacityReservation",
    "Description": "Creates a new Capacity Reservation with the specified attributes"
  },
  {
    "API": "ec2:CreateCapacityReservationFleet",
    "EventSource": "ec2",
    "EventName": "CreateCapacityReservationFleet",
    "Description": "Creates a Capacity Reservation Fleet"
  },
  {
    "API": "ec2:CreateCarrierGateway",
    "EventSource": "ec2",
    "EventName": "CreateCarrierGateway",
    "Description": "Creates a carrier gateway"
  },
  {
    "API": "ec2:CreateClientVpnEndpoint",
    "EventSource": "ec2",
    "EventName": "CreateClientVpnEndpoint",
    "Description": "Creates a Client VPN endpoint"
  },
  {
    "API": "ec2:CreateClientVpnRoute",
    "EventSource": "ec2",
    "EventName": "CreateClientVpnRoute",
    "Description": "Adds a route to a network to a Client VPN endpoint"
  },
  {
    "API": "ec2:CreateCoipCidr",
    "EventSource": "ec2",
    "EventName": "CreateCoipCidr",
    "Description": "Creates a range of customer-owned IP addresses"
  },
  {
    "API": "ec2:CreateCoipPool",
    "EventSource": "ec2",
    "EventName": "CreateCoipPool",
    "Description": "Creates a pool of customer-owned IP (CoIP) addresses"
  },
  {
    "API": "ec2:CreateCustomerGateway",
    "EventSource": "ec2",
    "EventName": "CreateCustomerGateway",
    "Description": "Provides information to Amazon Web Services about your customer gateway device"
  },
  {
    "API": "ec2:CreateDefaultSubnet",
    "EventSource": "ec2",
    "EventName": "CreateDefaultSubnet",
    "Description": "Creates a default subnet with a size ``/20`` IPv4 CIDR block in the specified Availability Zone in your default VPC"
  },
  {
    "API": "ec2:CreateDefaultVpc",
    "EventSource": "ec2",
    "EventName": "CreateDefaultVpc",
    "Description": "Creates a default VPC with a size ``/16`` IPv4 CIDR block and a default subnet in each Availability Zone"
  },
  {
    "API": "ec2:CreateDhcpOptions",
    "EventSource": "ec2",
    "EventName": "CreateDhcpOptions",
    "Description": "Creates a custom set of DHCP options"
  },
  {
    "API": "ec2:CreateEgressOnlyInternetGateway",
    "EventSource": "ec2",
    "EventName": "CreateEgressOnlyInternetGateway",
    "Description": "[IPv6 only] Creates an egress-only internet gateway for your VPC"
  },
  {
    "API": "ec2:CreateFleet",
    "EventSource": "ec2",
    "EventName": "CreateFleet",
    "Description": "Creates an EC2 Fleet that contains the configuration information for On-Demand Instances and Spot Instances"
  },
  {
    "API": "ec2:CreateFlowLogs",
    "EventSource": "ec2",
    "EventName": "CreateFlowLogs",
    "Description": "Creates one or more flow logs to capture information about IP traffic for a specific network interface, subnet, or VPC"
  },
  {
    "API": "ec2:CreateFpgaImage",
    "EventSource": "ec2",
    "EventName": "CreateFpgaImage",
    "Description": "Creates an Amazon FPGA Image (AFI) from the specified design checkpoint (DCP)"
  },
  {
    "API": "ec2:CreateImage",
    "EventSource": "ec2",
    "EventName": "CreateImage",
    "Description": "Creates an Amazon EBS-backed AMI from an Amazon EBS-backed instance that is either running or stopped"
  },
  {
    "API": "ec2:CreateInstanceConnectEndpoint",
    "EventSource": "ec2",
    "EventName": "CreateInstanceConnectEndpoint",
    "Description": "Creates an EC2 Instance Connect Endpoint"
  },
  {
    "API": "ec2:CreateInstanceEventWindow",
    "EventSource": "ec2",
    "EventName": "CreateInstanceEventWindow",
    "Description": "Creates an event window in which scheduled events for the associated Amazon EC2 instances can run"
  },
  {
    "API": "ec2:CreateInstanceExportTask",
    "EventSource": "ec2",
    "EventName": "CreateInstanceExportTask",
    "Description": "Exports a running or stopped instance to an Amazon S3 bucket"
  },
  {
    "API": "ec2:CreateInternetGateway",
    "EventSource": "ec2",
    "EventName": "CreateInternetGateway",
    "Description": "Creates an internet gateway for use with a VPC"
  },
  {
    "API": "ec2:CreateIpam",
    "EventSource": "ec2",
    "EventName": "CreateIpam",
    "Description": "Create an IPAM"
  },
  {
    "API": "ec2:CreateIpamPool",
    "EventSource": "ec2",
    "EventName": "CreateIpamPool",
    "Description": "Create an IP address pool for Amazon VPC IP Address Manager (IPAM)"
  },
  {
    "API": "ec2:CreateIpamResourceDiscovery",
    "EventSource": "ec2",
    "EventName": "CreateIpamResourceDiscovery",
    "Description": "Creates an IPAM resource discovery"
  },
  {
    "API": "ec2:CreateIpamScope",
    "EventSource": "ec2",
    "EventName": "CreateIpamScope",
    "Description": "Create an IPAM scope"
  },
  {
    "API": "ec2:CreateKeyPair",
    "EventSource": "ec2",
    "EventName": "CreateKeyPair",
    "Description": "Creates an ED25519 or 2048-bit RSA key pair with the specified name and in the specified PEM or PPK format"
  },
  {
    "API": "ec2:CreateLaunchTemplate",
    "EventSource": "ec2",
    "EventName": "CreateLaunchTemplate",
    "Description": "Creates a launch template"
  },
  {
    "API": "ec2:CreateLaunchTemplateVersion",
    "EventSource": "ec2",
    "EventName": "CreateLaunchTemplateVersion",
    "Description": "Creates a new version of a launch template"
  },
  {
    "API": "ec2:CreateLocalGatewayRoute",
    "EventSource": "ec2",
    "EventName": "CreateLocalGatewayRoute",
    "Description": "Creates a static route for the specified local gateway route table"
  },
  {
    "API": "ec2:CreateLocalGatewayRouteTable",
    "EventSource": "ec2",
    "EventName": "CreateLocalGatewayRouteTable",
    "Description": "Creates a local gateway route table"
  },
  {
    "API": "ec2:CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociation",
    "EventSource": "ec2",
    "EventName": "CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociation",
    "Description": "Creates a local gateway route table virtual interface group association"
  },
  {
    "API": "ec2:CreateLocalGatewayRouteTableVpcAssociation",
    "EventSource": "ec2",
    "EventName": "CreateLocalGatewayRouteTableVpcAssociation",
    "Description": "Associates the specified VPC with the specified local gateway route table"
  },
  {
    "API": "ec2:CreateManagedPrefixList",
    "EventSource": "ec2",
    "EventName": "CreateManagedPrefixList",
    "Description": "Creates a managed prefix list"
  },
  {
    "API": "ec2:CreateNatGateway",
    "EventSource": "ec2",
    "EventName": "CreateNatGateway",
    "Description": "Creates a NAT gateway in the specified subnet"
  },
  {
    "API": "ec2:CreateNetworkAcl",
    "EventSource": "ec2",
    "EventName": "CreateNetworkAcl",
    "Description": "Creates a network ACL in a VPC"
  },
  {
    "API": "ec2:CreateNetworkAclEntry",
    "EventSource": "ec2",
    "EventName": "CreateNetworkAclEntry",
    "Description": "Creates an entry (a rule) in a network ACL with the specified rule number"
  },
  {
    "API": "ec2:CreateNetworkInsightsAccessScope",
    "EventSource": "ec2",
    "EventName": "CreateNetworkInsightsAccessScope",
    "Description": "Creates a Network Access Scope"
  },
  {
    "API": "ec2:CreateNetworkInsightsPath",
    "EventSource": "ec2",
    "EventName": "CreateNetworkInsightsPath",
    "Description": "Creates a path to analyze for reachability"
  },
  {
    "API": "ec2:CreateNetworkInterface",
    "EventSource": "ec2",
    "EventName": "CreateNetworkInterface",
    "Description": "Creates a network interface in the specified subnet"
  },
  {
    "API": "ec2:CreateNetworkInterfacePermission",
    "EventSource": "ec2",
    "EventName": "CreateNetworkInterfacePermission",
    "Description": "Grants an Amazon Web Services-authorized account permission to attach the specified network interface to an instance in their account"
  },
  {
    "API": "ec2:CreatePlacementGroup",
    "EventSource": "ec2",
    "EventName": "CreatePlacementGroup",
    "Description": "Creates a placement group in which to launch instances"
  },
  {
    "API": "ec2:CreatePublicIpv4Pool",
    "EventSource": "ec2",
    "EventName": "CreatePublicIpv4Pool",
    "Description": "Creates a public IPv4 address pool"
  },
  {
    "API": "ec2:CreateReplaceRootVolumeTask",
    "EventSource": "ec2",
    "EventName": "CreateReplaceRootVolumeTask",
    "Description": "Replaces the EBS-backed root volume for a ``running`` instance with a new volume that is restored to the original root volume's launch state, that is restored to a specific snapshot taken from the original root volume, or that is restored from an AMI that has the same key characteristics as that of the instance"
  },
  {
    "API": "ec2:CreateReservedInstancesListing",
    "EventSource": "ec2",
    "EventName": "CreateReservedInstancesListing",
    "Description": "Creates a listing for Amazon EC2 Standard Reserved Instances to be sold in the Reserved Instance Marketplace"
  },
  {
    "API": "ec2:CreateRestoreImageTask",
    "EventSource": "ec2",
    "EventName": "CreateRestoreImageTask",
    "Description": "Starts a task that restores an AMI from an Amazon S3 object that was previously created by using `CreateStoreImageTask <https://docs"
  },
  {
    "API": "ec2:CreateRoute",
    "EventSource": "ec2",
    "EventName": "CreateRoute",
    "Description": "Creates a route in a route table within a VPC"
  },
  {
    "API": "ec2:CreateRouteTable",
    "EventSource": "ec2",
    "EventName": "CreateRouteTable",
    "Description": "Creates a route table for the specified VPC"
  },
  {
    "API": "ec2:CreateSecurityGroup",
    "EventSource": "ec2",
    "EventName": "CreateSecurityGroup",
    "Description": "Creates a security group"
  },
  {
    "API": "ec2:CreateSnapshot",
    "EventSource": "ec2",
    "EventName": "CreateSnapshot",
    "Description": "Creates a snapshot of an EBS volume and stores it in Amazon S3"
  },
  {
    "API": "ec2:CreateSnapshots",
    "EventSource": "ec2",
    "EventName": "CreateSnapshots",
    "Description": "Creates crash-consistent snapshots of multiple EBS volumes and stores the data in S3"
  },
  {
    "API": "ec2:CreateSpotDatafeedSubscription",
    "EventSource": "ec2",
    "EventName": "CreateSpotDatafeedSubscription",
    "Description": "Creates a data feed for Spot Instances, enabling you to view Spot Instance usage logs"
  },
  {
    "API": "ec2:CreateStoreImageTask",
    "EventSource": "ec2",
    "EventName": "CreateStoreImageTask",
    "Description": "Stores an AMI as a single object in an Amazon S3 bucket"
  },
  {
    "API": "ec2:CreateSubnet",
    "EventSource": "ec2",
    "EventName": "CreateSubnet",
    "Description": "Creates a subnet in the specified VPC"
  },
  {
    "API": "ec2:CreateSubnetCidrReservation",
    "EventSource": "ec2",
    "EventName": "CreateSubnetCidrReservation",
    "Description": "Creates a subnet CIDR reservation"
  },
  {
    "API": "ec2:CreateTags",
    "EventSource": "ec2",
    "EventName": "CreateTags",
    "Description": "Adds or overwrites only the specified tags for the specified Amazon EC2 resource or resources"
  },
  {
    "API": "ec2:CreateTrafficMirrorFilter",
    "EventSource": "ec2",
    "EventName": "CreateTrafficMirrorFilter",
    "Description": "Creates a Traffic Mirror filter"
  },
  {
    "API": "ec2:CreateTrafficMirrorFilterRule",
    "EventSource": "ec2",
    "EventName": "CreateTrafficMirrorFilterRule",
    "Description": "Creates a Traffic Mirror filter rule"
  },
  {
    "API": "ec2:CreateTrafficMirrorSession",
    "EventSource": "ec2",
    "EventName": "CreateTrafficMirrorSession",
    "Description": "Creates a Traffic Mirror session"
  },
  {
    "API": "ec2:CreateTrafficMirrorTarget",
    "EventSource": "ec2",
    "EventName": "CreateTrafficMirrorTarget",
    "Description": "Creates a target for your Traffic Mirror session"
  },
  {
    "API": "ec2:CreateTransitGateway",
    "EventSource": "ec2",
    "EventName": "CreateTransitGateway",
    "Description": "Creates a transit gateway"
  },
  {
    "API": "ec2:CreateTransitGatewayConnect",
    "EventSource": "ec2",
    "EventName": "CreateTransitGatewayConnect",
    "Description": "Creates a Connect attachment from a specified transit gateway attachment"
  },
  {
    "API": "ec2:CreateTransitGatewayConnectPeer",
    "EventSource": "ec2",
    "EventName": "CreateTransitGatewayConnectPeer",
    "Description": "Creates a Connect peer for a specified transit gateway Connect attachment between a transit gateway and an appliance"
  },
  {
    "API": "ec2:CreateTransitGatewayMulticastDomain",
    "EventSource": "ec2",
    "EventName": "CreateTransitGatewayMulticastDomain",
    "Description": "Creates a multicast domain using the specified transit gateway"
  },
  {
    "API": "ec2:CreateTransitGatewayPeeringAttachment",
    "EventSource": "ec2",
    "EventName": "CreateTransitGatewayPeeringAttachment",
    "Description": "Requests a transit gateway peering attachment between the specified transit gateway (requester) and a peer transit gateway (accepter)"
  },
  {
    "API": "ec2:CreateTransitGatewayPolicyTable",
    "EventSource": "ec2",
    "EventName": "CreateTransitGatewayPolicyTable",
    "Description": "Creates a transit gateway policy table"
  },
  {
    "API": "ec2:CreateTransitGatewayPrefixListReference",
    "EventSource": "ec2",
    "EventName": "CreateTransitGatewayPrefixListReference",
    "Description": "Creates a reference (route) to a prefix list in a specified transit gateway route table"
  },
  {
    "API": "ec2:CreateTransitGatewayRoute",
    "EventSource": "ec2",
    "EventName": "CreateTransitGatewayRoute",
    "Description": "Creates a static route for the specified transit gateway route table"
  },
  {
    "API": "ec2:CreateTransitGatewayRouteTable",
    "EventSource": "ec2",
    "EventName": "CreateTransitGatewayRouteTable",
    "Description": "Creates a route table for the specified transit gateway"
  },
  {
    "API": "ec2:CreateTransitGatewayRouteTableAnnouncement",
    "EventSource": "ec2",
    "EventName": "CreateTransitGatewayRouteTableAnnouncement",
    "Description": "Advertises a new transit gateway route table"
  },
  {
    "API": "ec2:CreateTransitGatewayVpcAttachment",
    "EventSource": "ec2",
    "EventName": "CreateTransitGatewayVpcAttachment",
    "Description": "Attaches the specified VPC to the specified transit gateway"
  },
  {
    "API": "ec2:CreateVerifiedAccessEndpoint",
    "EventSource": "ec2",
    "EventName": "CreateVerifiedAccessEndpoint",
    "Description": "An Amazon Web Services Verified Access endpoint is where you define your application along with an optional endpoint-level access policy"
  },
  {
    "API": "ec2:CreateVerifiedAccessGroup",
    "EventSource": "ec2",
    "EventName": "CreateVerifiedAccessGroup",
    "Description": "An Amazon Web Services Verified Access group is a collection of Amazon Web Services Verified Access endpoints who's associated applications have similar security requirements"
  },
  {
    "API": "ec2:CreateVerifiedAccessInstance",
    "EventSource": "ec2",
    "EventName": "CreateVerifiedAccessInstance",
    "Description": "An Amazon Web Services Verified Access instance is a regional entity that evaluates application requests and grants access only when your security requirements are met"
  },
  {
    "API": "ec2:CreateVerifiedAccessTrustProvider",
    "EventSource": "ec2",
    "EventName": "CreateVerifiedAccessTrustProvider",
    "Description": "A trust provider is a third-party entity that creates, maintains, and manages identity information for users and devices"
  },
  {
    "API": "ec2:CreateVolume",
    "EventSource": "ec2",
    "EventName": "CreateVolume",
    "Description": "Creates an EBS volume that can be attached to an instance in the same Availability Zone"
  },
  {
    "API": "ec2:CreateVpc",
    "EventSource": "ec2",
    "EventName": "CreateVpc",
    "Description": "Creates a VPC with the specified CIDR blocks"
  },
  {
    "API": "ec2:CreateVpcEndpoint",
    "EventSource": "ec2",
    "EventName": "CreateVpcEndpoint",
    "Description": "Creates a VPC endpoint"
  },
  {
    "API": "ec2:CreateVpcEndpointConnectionNotification",
    "EventSource": "ec2",
    "EventName": "CreateVpcEndpointConnectionNotification",
    "Description": "Creates a connection notification for a specified VPC endpoint or VPC endpoint service"
  },
  {
    "API": "ec2:CreateVpcEndpointServiceConfiguration",
    "EventSource": "ec2",
    "EventName": "CreateVpcEndpointServiceConfiguration",
    "Description": "Creates a VPC endpoint service to which service consumers (Amazon Web Services accounts, users, and IAM roles) can connect"
  },
  {
    "API": "ec2:CreateVpcPeeringConnection",
    "EventSource": "ec2",
    "EventName": "CreateVpcPeeringConnection",
    "Description": "Requests a VPC peering connection between two VPCs: a requester VPC that you own and an accepter VPC with which to create the connection"
  },
  {
    "API": "ec2:CreateVpnConnection",
    "EventSource": "ec2",
    "EventName": "CreateVpnConnection",
    "Description": "Creates a VPN connection between an existing virtual private gateway or transit gateway and a customer gateway"
  },
  {
    "API": "ec2:CreateVpnConnectionRoute",
    "EventSource": "ec2",
    "EventName": "CreateVpnConnectionRoute",
    "Description": "Creates a static route associated with a VPN connection between an existing virtual private gateway and a VPN customer gateway"
  },
  {
    "API": "ec2:CreateVpnGateway",
    "EventSource": "ec2",
    "EventName": "CreateVpnGateway",
    "Description": "Creates a virtual private gateway"
  },
  {
    "API": "ec2:DeleteCarrierGateway",
    "EventSource": "ec2",
    "EventName": "DeleteCarrierGateway",
    "Description": "Deletes a carrier gateway"
  },
  {
    "API": "ec2:DeleteClientVpnEndpoint",
    "EventSource": "ec2",
    "EventName": "DeleteClientVpnEndpoint",
    "Description": "Deletes the specified Client VPN endpoint"
  },
  {
    "API": "ec2:DeleteClientVpnRoute",
    "EventSource": "ec2",
    "EventName": "DeleteClientVpnRoute",
    "Description": "Deletes a route from a Client VPN endpoint"
  },
  {
    "API": "ec2:DeleteCoipCidr",
    "EventSource": "ec2",
    "EventName": "DeleteCoipCidr",
    "Description": "Deletes a range of customer-owned IP addresses"
  },
  {
    "API": "ec2:DeleteCoipPool",
    "EventSource": "ec2",
    "EventName": "DeleteCoipPool",
    "Description": "Deletes a pool of customer-owned IP (CoIP) addresses"
  },
  {
    "API": "ec2:DeleteCustomerGateway",
    "EventSource": "ec2",
    "EventName": "DeleteCustomerGateway",
    "Description": "Deletes the specified customer gateway"
  },
  {
    "API": "ec2:DeleteDhcpOptions",
    "EventSource": "ec2",
    "EventName": "DeleteDhcpOptions",
    "Description": "Deletes the specified set of DHCP options"
  },
  {
    "API": "ec2:DeleteEgressOnlyInternetGateway",
    "EventSource": "ec2",
    "EventName": "DeleteEgressOnlyInternetGateway",
    "Description": "Deletes an egress-only internet gateway"
  },
  {
    "API": "ec2:DeleteFleets",
    "EventSource": "ec2",
    "EventName": "DeleteFleets",
    "Description": "Deletes the specified EC2 Fleets"
  },
  {
    "API": "ec2:DeleteFlowLogs",
    "EventSource": "ec2",
    "EventName": "DeleteFlowLogs",
    "Description": "Deletes one or more flow logs"
  },
  {
    "API": "ec2:DeleteFpgaImage",
    "EventSource": "ec2",
    "EventName": "DeleteFpgaImage",
    "Description": "Deletes the specified Amazon FPGA Image (AFI)"
  },
  {
    "API": "ec2:DeleteInstanceConnectEndpoint",
    "EventSource": "ec2",
    "EventName": "DeleteInstanceConnectEndpoint",
    "Description": "Deletes the specified EC2 Instance Connect Endpoint"
  },
  {
    "API": "ec2:DeleteInstanceEventWindow",
    "EventSource": "ec2",
    "EventName": "DeleteInstanceEventWindow",
    "Description": "Deletes the specified event window"
  },
  {
    "API": "ec2:DeleteInternetGateway",
    "EventSource": "ec2",
    "EventName": "DeleteInternetGateway",
    "Description": "Deletes the specified internet gateway"
  },
  {
    "API": "ec2:DeleteIpam",
    "EventSource": "ec2",
    "EventName": "DeleteIpam",
    "Description": "Delete an IPAM"
  },
  {
    "API": "ec2:DeleteIpamPool",
    "EventSource": "ec2",
    "EventName": "DeleteIpamPool",
    "Description": "Delete an IPAM pool"
  },
  {
    "API": "ec2:DeleteIpamResourceDiscovery",
    "EventSource": "ec2",
    "EventName": "DeleteIpamResourceDiscovery",
    "Description": "Deletes an IPAM resource discovery"
  },
  {
    "API": "ec2:DeleteIpamScope",
    "EventSource": "ec2",
    "EventName": "DeleteIpamScope",
    "Description": "Delete the scope for an IPAM"
  },
  {
    "API": "ec2:DeleteKeyPair",
    "EventSource": "ec2",
    "EventName": "DeleteKeyPair",
    "Description": "Deletes the specified key pair, by removing the public key from Amazon EC2"
  },
  {
    "API": "ec2:DeleteLaunchTemplate",
    "EventSource": "ec2",
    "EventName": "DeleteLaunchTemplate",
    "Description": "Deletes a launch template"
  },
  {
    "API": "ec2:DeleteLaunchTemplateVersions",
    "EventSource": "ec2",
    "EventName": "DeleteLaunchTemplateVersions",
    "Description": "Deletes one or more versions of a launch template"
  },
  {
    "API": "ec2:DeleteLocalGatewayRoute",
    "EventSource": "ec2",
    "EventName": "DeleteLocalGatewayRoute",
    "Description": "Deletes the specified route from the specified local gateway route table"
  },
  {
    "API": "ec2:DeleteLocalGatewayRouteTable",
    "EventSource": "ec2",
    "EventName": "DeleteLocalGatewayRouteTable",
    "Description": "Deletes a local gateway route table"
  },
  {
    "API": "ec2:DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociation",
    "EventSource": "ec2",
    "EventName": "DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociation",
    "Description": "Deletes a local gateway route table virtual interface group association"
  },
  {
    "API": "ec2:DeleteLocalGatewayRouteTableVpcAssociation",
    "EventSource": "ec2",
    "EventName": "DeleteLocalGatewayRouteTableVpcAssociation",
    "Description": "Deletes the specified association between a VPC and local gateway route table"
  },
  {
    "API": "ec2:DeleteManagedPrefixList",
    "EventSource": "ec2",
    "EventName": "DeleteManagedPrefixList",
    "Description": "Deletes the specified managed prefix list"
  },
  {
    "API": "ec2:DeleteNatGateway",
    "EventSource": "ec2",
    "EventName": "DeleteNatGateway",
    "Description": "Deletes the specified NAT gateway"
  },
  {
    "API": "ec2:DeleteNetworkAcl",
    "EventSource": "ec2",
    "EventName": "DeleteNetworkAcl",
    "Description": "Deletes the specified network ACL"
  },
  {
    "API": "ec2:DeleteNetworkAclEntry",
    "EventSource": "ec2",
    "EventName": "DeleteNetworkAclEntry",
    "Description": "Deletes the specified ingress or egress entry (rule) from the specified network ACL"
  },
  {
    "API": "ec2:DeleteNetworkInsightsAccessScope",
    "EventSource": "ec2",
    "EventName": "DeleteNetworkInsightsAccessScope",
    "Description": "Deletes the specified Network Access Scope"
  },
  {
    "API": "ec2:DeleteNetworkInsightsAccessScopeAnalysis",
    "EventSource": "ec2",
    "EventName": "DeleteNetworkInsightsAccessScopeAnalysis",
    "Description": "Deletes the specified Network Access Scope analysis"
  },
  {
    "API": "ec2:DeleteNetworkInsightsAnalysis",
    "EventSource": "ec2",
    "EventName": "DeleteNetworkInsightsAnalysis",
    "Description": "Deletes the specified network insights analysis"
  },
  {
    "API": "ec2:DeleteNetworkInsightsPath",
    "EventSource": "ec2",
    "EventName": "DeleteNetworkInsightsPath",
    "Description": "Deletes the specified path"
  },
  {
    "API": "ec2:DeleteNetworkInterface",
    "EventSource": "ec2",
    "EventName": "DeleteNetworkInterface",
    "Description": "Deletes the specified network interface"
  },
  {
    "API": "ec2:DeleteNetworkInterfacePermission",
    "EventSource": "ec2",
    "EventName": "DeleteNetworkInterfacePermission",
    "Description": "Deletes a permission for a network interface"
  },
  {
    "API": "ec2:DeletePlacementGroup",
    "EventSource": "ec2",
    "EventName": "DeletePlacementGroup",
    "Description": "Deletes the specified placement group"
  },
  {
    "API": "ec2:DeletePublicIpv4Pool",
    "EventSource": "ec2",
    "EventName": "DeletePublicIpv4Pool",
    "Description": "Delete a public IPv4 pool"
  },
  {
    "API": "ec2:DeleteQueuedReservedInstances",
    "EventSource": "ec2",
    "EventName": "DeleteQueuedReservedInstances",
    "Description": "Deletes the queued purchases for the specified Reserved Instances"
  },
  {
    "API": "ec2:DeleteRoute",
    "EventSource": "ec2",
    "EventName": "DeleteRoute",
    "Description": "Deletes the specified route from the specified route table"
  },
  {
    "API": "ec2:DeleteRouteTable",
    "EventSource": "ec2",
    "EventName": "DeleteRouteTable",
    "Description": "Deletes the specified route table"
  },
  {
    "API": "ec2:DeleteSecurityGroup",
    "EventSource": "ec2",
    "EventName": "DeleteSecurityGroup",
    "Description": "Deletes a security group"
  },
  {
    "API": "ec2:DeleteSnapshot",
    "EventSource": "ec2",
    "EventName": "DeleteSnapshot",
    "Description": "Deletes the specified snapshot"
  },
  {
    "API": "ec2:DeleteSpotDatafeedSubscription",
    "EventSource": "ec2",
    "EventName": "DeleteSpotDatafeedSubscription",
    "Description": "Deletes the data feed for Spot Instances"
  },
  {
    "API": "ec2:DeleteSubnet",
    "EventSource": "ec2",
    "EventName": "DeleteSubnet",
    "Description": "Deletes the specified subnet"
  },
  {
    "API": "ec2:DeleteSubnetCidrReservation",
    "EventSource": "ec2",
    "EventName": "DeleteSubnetCidrReservation",
    "Description": "Deletes a subnet CIDR reservation"
  },
  {
    "API": "ec2:DeleteTags",
    "EventSource": "ec2",
    "EventName": "DeleteTags",
    "Description": "Deletes the specified set of tags from the specified set of resources"
  },
  {
    "API": "ec2:DeleteTrafficMirrorFilter",
    "EventSource": "ec2",
    "EventName": "DeleteTrafficMirrorFilter",
    "Description": "Deletes the specified Traffic Mirror filter"
  },
  {
    "API": "ec2:DeleteTrafficMirrorFilterRule",
    "EventSource": "ec2",
    "EventName": "DeleteTrafficMirrorFilterRule",
    "Description": "Deletes the specified Traffic Mirror rule"
  },
  {
    "API": "ec2:DeleteTrafficMirrorSession",
    "EventSource": "ec2",
    "EventName": "DeleteTrafficMirrorSession",
    "Description": "Deletes the specified Traffic Mirror session"
  },
  {
    "API": "ec2:DeleteTrafficMirrorTarget",
    "EventSource": "ec2",
    "EventName": "DeleteTrafficMirrorTarget",
    "Description": "Deletes the specified Traffic Mirror target"
  },
  {
    "API": "ec2:DeleteTransitGateway",
    "EventSource": "ec2",
    "EventName": "DeleteTransitGateway",
    "Description": "Deletes the specified transit gateway"
  },
  {
    "API": "ec2:DeleteTransitGatewayConnect",
    "EventSource": "ec2",
    "EventName": "DeleteTransitGatewayConnect",
    "Description": "Deletes the specified Connect attachment"
  },
  {
    "API": "ec2:DeleteTransitGatewayConnectPeer",
    "EventSource": "ec2",
    "EventName": "DeleteTransitGatewayConnectPeer",
    "Description": "Deletes the specified Connect peer"
  },
  {
    "API": "ec2:DeleteTransitGatewayMulticastDomain",
    "EventSource": "ec2",
    "EventName": "DeleteTransitGatewayMulticastDomain",
    "Description": "Deletes the specified transit gateway multicast domain"
  },
  {
    "API": "ec2:DeleteTransitGatewayPeeringAttachment",
    "EventSource": "ec2",
    "EventName": "DeleteTransitGatewayPeeringAttachment",
    "Description": "Deletes a transit gateway peering attachment"
  },
  {
    "API": "ec2:DeleteTransitGatewayPolicyTable",
    "EventSource": "ec2",
    "EventName": "DeleteTransitGatewayPolicyTable",
    "Description": "Deletes the specified transit gateway policy table"
  },
  {
    "API": "ec2:DeleteTransitGatewayPrefixListReference",
    "EventSource": "ec2",
    "EventName": "DeleteTransitGatewayPrefixListReference",
    "Description": "Deletes a reference (route) to a prefix list in a specified transit gateway route table"
  },
  {
    "API": "ec2:DeleteTransitGatewayRoute",
    "EventSource": "ec2",
    "EventName": "DeleteTransitGatewayRoute",
    "Description": "Deletes the specified route from the specified transit gateway route table"
  },
  {
    "API": "ec2:DeleteTransitGatewayRouteTable",
    "EventSource": "ec2",
    "EventName": "DeleteTransitGatewayRouteTable",
    "Description": "Deletes the specified transit gateway route table"
  },
  {
    "API": "ec2:DeleteTransitGatewayRouteTableAnnouncement",
    "EventSource": "ec2",
    "EventName": "DeleteTransitGatewayRouteTableAnnouncement",
    "Description": "Advertises to the transit gateway that a transit gateway route table is deleted"
  },
  {
    "API": "ec2:DeleteTransitGatewayVpcAttachment",
    "EventSource": "ec2",
    "EventName": "DeleteTransitGatewayVpcAttachment",
    "Description": "Deletes the specified VPC attachment"
  },
  {
    "API": "ec2:DeleteVerifiedAccessEndpoint",
    "EventSource": "ec2",
    "EventName": "DeleteVerifiedAccessEndpoint",
    "Description": "Delete an Amazon Web Services Verified Access endpoint"
  },
  {
    "API": "ec2:DeleteVerifiedAccessGroup",
    "EventSource": "ec2",
    "EventName": "DeleteVerifiedAccessGroup",
    "Description": "Delete an Amazon Web Services Verified Access group"
  },
  {
    "API": "ec2:DeleteVerifiedAccessInstance",
    "EventSource": "ec2",
    "EventName": "DeleteVerifiedAccessInstance",
    "Description": "Delete an Amazon Web Services Verified Access instance"
  },
  {
    "API": "ec2:DeleteVerifiedAccessTrustProvider",
    "EventSource": "ec2",
    "EventName": "DeleteVerifiedAccessTrustProvider",
    "Description": "Delete an Amazon Web Services Verified Access trust provider"
  },
  {
    "API": "ec2:DeleteVolume",
    "EventSource": "ec2",
    "EventName": "DeleteVolume",
    "Description": "Deletes the specified EBS volume"
  },
  {
    "API": "ec2:DeleteVpc",
    "EventSource": "ec2",
    "EventName": "DeleteVpc",
    "Description": "Deletes the specified VPC"
  },
  {
    "API": "ec2:DeleteVpcEndpointConnectionNotifications",
    "EventSource": "ec2",
    "EventName": "DeleteVpcEndpointConnectionNotifications",
    "Description": "Deletes the specified VPC endpoint connection notifications"
  },
  {
    "API": "ec2:DeleteVpcEndpointServiceConfigurations",
    "EventSource": "ec2",
    "EventName": "DeleteVpcEndpointServiceConfigurations",
    "Description": "Deletes the specified VPC endpoint service configurations"
  },
  {
    "API": "ec2:DeleteVpcEndpoints",
    "EventSource": "ec2",
    "EventName": "DeleteVpcEndpoints",
    "Description": "Deletes the specified VPC endpoints"
  },
  {
    "API": "ec2:DeleteVpcPeeringConnection",
    "EventSource": "ec2",
    "EventName": "DeleteVpcPeeringConnection",
    "Description": "Deletes a VPC peering connection"
  },
  {
    "API": "ec2:DeleteVpnConnection",
    "EventSource": "ec2",
    "EventName": "DeleteVpnConnection",
    "Description": "Deletes the specified VPN connection"
  },
  {
    "API": "ec2:DeleteVpnConnectionRoute",
    "EventSource": "ec2",
    "EventName": "DeleteVpnConnectionRoute",
    "Description": "Deletes the specified static route associated with a VPN connection between an existing virtual private gateway and a VPN customer gateway"
  },
  {
    "API": "ec2:DeleteVpnGateway",
    "EventSource": "ec2",
    "EventName": "DeleteVpnGateway",
    "Description": "Deletes the specified virtual private gateway"
  },
  {
    "API": "ec2:DeprovisionByoipCidr",
    "EventSource": "ec2",
    "EventName": "DeprovisionByoipCidr",
    "Description": "Releases the specified address range that you provisioned for use with your Amazon Web Services resources through bring your own IP addresses (BYOIP) and deletes the corresponding address pool"
  },
  {
    "API": "ec2:DeprovisionIpamByoasn",
    "EventSource": "ec2",
    "EventName": "DeprovisionIpamByoasn",
    "Description": "Deprovisions your Autonomous System Number (ASN) from your Amazon Web Services account"
  },
  {
    "API": "ec2:DeprovisionIpamPoolCidr",
    "EventSource": "ec2",
    "EventName": "DeprovisionIpamPoolCidr",
    "Description": "Deprovision a CIDR provisioned from an IPAM pool"
  },
  {
    "API": "ec2:DeprovisionPublicIpv4PoolCidr",
    "EventSource": "ec2",
    "EventName": "DeprovisionPublicIpv4PoolCidr",
    "Description": "Deprovision a CIDR from a public IPv4 pool"
  },
  {
    "API": "ec2:DeregisterImage",
    "EventSource": "ec2",
    "EventName": "DeregisterImage",
    "Description": "Deregisters the specified AMI"
  },
  {
    "API": "ec2:DeregisterInstanceEventNotificationAttributes",
    "EventSource": "ec2",
    "EventName": "DeregisterInstanceEventNotificationAttributes",
    "Description": "Deregisters tag keys to prevent tags that have the specified tag keys from being included in scheduled event notifications for resources in the Region"
  },
  {
    "API": "ec2:DeregisterTransitGatewayMulticastGroupMembers",
    "EventSource": "ec2",
    "EventName": "DeregisterTransitGatewayMulticastGroupMembers",
    "Description": "Deregisters the specified members (network interfaces) from the transit gateway multicast group"
  },
  {
    "API": "ec2:DeregisterTransitGatewayMulticastGroupSources",
    "EventSource": "ec2",
    "EventName": "DeregisterTransitGatewayMulticastGroupSources",
    "Description": "Deregisters the specified sources (network interfaces) from the transit gateway multicast group"
  },
  {
    "API": "ec2:DescribeAccountAttributes",
    "EventSource": "ec2",
    "EventName": "DescribeAccountAttributes",
    "Description": "Describes attributes of your Amazon Web Services account"
  },
  {
    "API": "ec2:DescribeAddressTransfers",
    "EventSource": "ec2",
    "EventName": "DescribeAddressTransfers",
    "Description": "Describes an Elastic IP address transfer"
  },
  {
    "API": "ec2:DescribeAddresses",
    "EventSource": "ec2",
    "EventName": "DescribeAddresses",
    "Description": "Describes the specified Elastic IP addresses or all of your Elastic IP addresses"
  },
  {
    "API": "ec2:DescribeAddressesAttribute",
    "EventSource": "ec2",
    "EventName": "DescribeAddressesAttribute",
    "Description": "Describes the attributes of the specified Elastic IP addresses"
  },
  {
    "API": "ec2:DescribeAggregateIdFormat",
    "EventSource": "ec2",
    "EventName": "DescribeAggregateIdFormat",
    "Description": "Describes the longer ID format settings for all resource types in a specific Region"
  },
  {
    "API": "ec2:DescribeAvailabilityZones",
    "EventSource": "ec2",
    "EventName": "DescribeAvailabilityZones",
    "Description": "Describes the Availability Zones, Local Zones, and Wavelength Zones that are available to you"
  },
  {
    "API": "ec2:DescribeAwsNetworkPerformanceMetricSubscriptions",
    "EventSource": "ec2",
    "EventName": "DescribeAwsNetworkPerformanceMetricSubscriptions",
    "Description": "Describes the current Infrastructure Performance metric subscriptions"
  },
  {
    "API": "ec2:DescribeBundleTasks",
    "EventSource": "ec2",
    "EventName": "DescribeBundleTasks",
    "Description": "Describes the specified bundle tasks or all of your bundle tasks"
  },
  {
    "API": "ec2:DescribeByoipCidrs",
    "EventSource": "ec2",
    "EventName": "DescribeByoipCidrs",
    "Description": "Describes the IP address ranges that were specified in calls to  ProvisionByoipCidr"
  },
  {
    "API": "ec2:DescribeCapacityBlockOfferings",
    "EventSource": "ec2",
    "EventName": "DescribeCapacityBlockOfferings",
    "Description": "Describes Capacity Block offerings available for purchase in the Amazon Web Services Region that you're currently using"
  },
  {
    "API": "ec2:DescribeCapacityReservationFleets",
    "EventSource": "ec2",
    "EventName": "DescribeCapacityReservationFleets",
    "Description": "Describes one or more Capacity Reservation Fleets"
  },
  {
    "API": "ec2:DescribeCapacityReservations",
    "EventSource": "ec2",
    "EventName": "DescribeCapacityReservations",
    "Description": "Describes one or more of your Capacity Reservations"
  },
  {
    "API": "ec2:DescribeCarrierGateways",
    "EventSource": "ec2",
    "EventName": "DescribeCarrierGateways",
    "Description": "Describes one or more of your carrier gateways"
  },
  {
    "API": "ec2:DescribeClassicLinkInstances",
    "EventSource": "ec2",
    "EventName": "DescribeClassicLinkInstances",
    "Description": ""
  },
  {
    "API": "ec2:DescribeClientVpnAuthorizationRules",
    "EventSource": "ec2",
    "EventName": "DescribeClientVpnAuthorizationRules",
    "Description": "Describes the authorization rules for a specified Client VPN endpoint"
  },
  {
    "API": "ec2:DescribeClientVpnConnections",
    "EventSource": "ec2",
    "EventName": "DescribeClientVpnConnections",
    "Description": "Describes active client connections and connections that have been terminated within the last 60 minutes for the specified Client VPN endpoint"
  },
  {
    "API": "ec2:DescribeClientVpnEndpoints",
    "EventSource": "ec2",
    "EventName": "DescribeClientVpnEndpoints",
    "Description": "Describes one or more Client VPN endpoints in the account"
  },
  {
    "API": "ec2:DescribeClientVpnRoutes",
    "EventSource": "ec2",
    "EventName": "DescribeClientVpnRoutes",
    "Description": "Describes the routes for the specified Client VPN endpoint"
  },
  {
    "API": "ec2:DescribeClientVpnTargetNetworks",
    "EventSource": "ec2",
    "EventName": "DescribeClientVpnTargetNetworks",
    "Description": "Describes the target networks associated with the specified Client VPN endpoint"
  },
  {
    "API": "ec2:DescribeCoipPools",
    "EventSource": "ec2",
    "EventName": "DescribeCoipPools",
    "Description": "Describes the specified customer-owned address pools or all of your customer-owned address pools"
  },
  {
    "API": "ec2:DescribeConversionTasks",
    "EventSource": "ec2",
    "EventName": "DescribeConversionTasks",
    "Description": "Describes the specified conversion tasks or all your conversion tasks"
  },
  {
    "API": "ec2:DescribeCustomerGateways",
    "EventSource": "ec2",
    "EventName": "DescribeCustomerGateways",
    "Description": "Describes one or more of your VPN customer gateways"
  },
  {
    "API": "ec2:DescribeDhcpOptions",
    "EventSource": "ec2",
    "EventName": "DescribeDhcpOptions",
    "Description": "Describes your DHCP option sets"
  },
  {
    "API": "ec2:DescribeEgressOnlyInternetGateways",
    "EventSource": "ec2",
    "EventName": "DescribeEgressOnlyInternetGateways",
    "Description": "Describes your egress-only internet gateways"
  },
  {
    "API": "ec2:DescribeElasticGpus",
    "EventSource": "ec2",
    "EventName": "DescribeElasticGpus",
    "Description": ""
  },
  {
    "API": "ec2:DescribeExportImageTasks",
    "EventSource": "ec2",
    "EventName": "DescribeExportImageTasks",
    "Description": "Describes the specified export image tasks or all of your export image tasks"
  },
  {
    "API": "ec2:DescribeExportTasks",
    "EventSource": "ec2",
    "EventName": "DescribeExportTasks",
    "Description": "Describes the specified export instance tasks or all of your export instance tasks"
  },
  {
    "API": "ec2:DescribeFastLaunchImages",
    "EventSource": "ec2",
    "EventName": "DescribeFastLaunchImages",
    "Description": "Describe details for Windows AMIs that are configured for Windows fast launch"
  },
  {
    "API": "ec2:DescribeFastSnapshotRestores",
    "EventSource": "ec2",
    "EventName": "DescribeFastSnapshotRestores",
    "Description": "Describes the state of fast snapshot restores for your snapshots"
  },
  {
    "API": "ec2:DescribeFleetHistory",
    "EventSource": "ec2",
    "EventName": "DescribeFleetHistory",
    "Description": "Describes the events for the specified EC2 Fleet during the specified time"
  },
  {
    "API": "ec2:DescribeFleetInstances",
    "EventSource": "ec2",
    "EventName": "DescribeFleetInstances",
    "Description": "Describes the running instances for the specified EC2 Fleet"
  },
  {
    "API": "ec2:DescribeFleets",
    "EventSource": "ec2",
    "EventName": "DescribeFleets",
    "Description": "Describes the specified EC2 Fleet or all of your EC2 Fleets"
  },
  {
    "API": "ec2:DescribeFlowLogs",
    "EventSource": "ec2",
    "EventName": "DescribeFlowLogs",
    "Description": "Describes one or more flow logs"
  },
  {
    "API": "ec2:DescribeFpgaImageAttribute",
    "EventSource": "ec2",
    "EventName": "DescribeFpgaImageAttribute",
    "Description": "Describes the specified attribute of the specified Amazon FPGA Image (AFI)"
  },
  {
    "API": "ec2:DescribeFpgaImages",
    "EventSource": "ec2",
    "EventName": "DescribeFpgaImages",
    "Description": "Describes the Amazon FPGA Images (AFIs) available to you"
  },
  {
    "API": "ec2:DescribeHostReservationOfferings",
    "EventSource": "ec2",
    "EventName": "DescribeHostReservationOfferings",
    "Description": "Describes the Dedicated Host reservations that are available to purchase"
  },
  {
    "API": "ec2:DescribeHostReservations",
    "EventSource": "ec2",
    "EventName": "DescribeHostReservations",
    "Description": "Describes reservations that are associated with Dedicated Hosts in your account"
  },
  {
    "API": "ec2:DescribeHosts",
    "EventSource": "ec2",
    "EventName": "DescribeHosts",
    "Description": "Describes the specified Dedicated Hosts or all your Dedicated Hosts"
  },
  {
    "API": "ec2:DescribeIamInstanceProfileAssociations",
    "EventSource": "ec2",
    "EventName": "DescribeIamInstanceProfileAssociations",
    "Description": "Describes your IAM instance profile associations"
  },
  {
    "API": "ec2:DescribeIdFormat",
    "EventSource": "ec2",
    "EventName": "DescribeIdFormat",
    "Description": "Describes the ID format settings for your resources on a per-Region basis, for example, to view which resource types are enabled for longer IDs"
  },
  {
    "API": "ec2:DescribeIdentityIdFormat",
    "EventSource": "ec2",
    "EventName": "DescribeIdentityIdFormat",
    "Description": "Describes the ID format settings for resources for the specified IAM user, IAM role, or root user"
  },
  {
    "API": "ec2:DescribeImageAttribute",
    "EventSource": "ec2",
    "EventName": "DescribeImageAttribute",
    "Description": "Describes the specified attribute of the specified AMI"
  },
  {
    "API": "ec2:DescribeImages",
    "EventSource": "ec2",
    "EventName": "DescribeImages",
    "Description": "Describes the specified images (AMIs, AKIs, and ARIs) available to you or all of the images available to you"
  },
  {
    "API": "ec2:DescribeImportImageTasks",
    "EventSource": "ec2",
    "EventName": "DescribeImportImageTasks",
    "Description": "Displays details about an import virtual machine or import snapshot tasks that are already created"
  },
  {
    "API": "ec2:DescribeImportSnapshotTasks",
    "EventSource": "ec2",
    "EventName": "DescribeImportSnapshotTasks",
    "Description": "Describes your import snapshot tasks"
  },
  {
    "API": "ec2:DescribeInstanceAttribute",
    "EventSource": "ec2",
    "EventName": "DescribeInstanceAttribute",
    "Description": "Describes the specified attribute of the specified instance"
  },
  {
    "API": "ec2:DescribeInstanceConnectEndpoints",
    "EventSource": "ec2",
    "EventName": "DescribeInstanceConnectEndpoints",
    "Description": "Describes the specified EC2 Instance Connect Endpoints or all EC2 Instance Connect Endpoints"
  },
  {
    "API": "ec2:DescribeInstanceCreditSpecifications",
    "EventSource": "ec2",
    "EventName": "DescribeInstanceCreditSpecifications",
    "Description": "Describes the credit option for CPU usage of the specified burstable performance instances"
  },
  {
    "API": "ec2:DescribeInstanceEventNotificationAttributes",
    "EventSource": "ec2",
    "EventName": "DescribeInstanceEventNotificationAttributes",
    "Description": "Describes the tag keys that are registered to appear in scheduled event notifications for resources in the current Region"
  },
  {
    "API": "ec2:DescribeInstanceEventWindows",
    "EventSource": "ec2",
    "EventName": "DescribeInstanceEventWindows",
    "Description": "Describes the specified event windows or all event windows"
  },
  {
    "API": "ec2:DescribeInstanceStatus",
    "EventSource": "ec2",
    "EventName": "DescribeInstanceStatus",
    "Description": "Describes the status of the specified instances or all of your instances"
  },
  {
    "API": "ec2:DescribeInstanceTopology",
    "EventSource": "ec2",
    "EventName": "DescribeInstanceTopology",
    "Description": "Describes a tree-based hierarchy that represents the physical host placement of your EC2 instances within an Availability Zone or Local Zone"
  },
  {
    "API": "ec2:DescribeInstanceTypeOfferings",
    "EventSource": "ec2",
    "EventName": "DescribeInstanceTypeOfferings",
    "Description": "Lists the instance types that are offered for the specified location"
  },
  {
    "API": "ec2:DescribeInstanceTypes",
    "EventSource": "ec2",
    "EventName": "DescribeInstanceTypes",
    "Description": "Describes the specified instance types"
  },
  {
    "API": "ec2:DescribeInstances",
    "EventSource": "ec2",
    "EventName": "DescribeInstances",
    "Description": "Describes the specified instances or all instances"
  },
  {
    "API": "ec2:DescribeInternetGateways",
    "EventSource": "ec2",
    "EventName": "DescribeInternetGateways",
    "Description": "Describes your internet gateways"
  },
  {
    "API": "ec2:DescribeIpamByoasn",
    "EventSource": "ec2",
    "EventName": "DescribeIpamByoasn",
    "Description": "Describes your Autonomous System Numbers (ASNs), their provisioning statuses, and the BYOIP CIDRs with which they are associated"
  },
  {
    "API": "ec2:DescribeIpamPools",
    "EventSource": "ec2",
    "EventName": "DescribeIpamPools",
    "Description": "Get information about your IPAM pools"
  },
  {
    "API": "ec2:DescribeIpamResourceDiscoveries",
    "EventSource": "ec2",
    "EventName": "DescribeIpamResourceDiscoveries",
    "Description": "Describes IPAM resource discoveries"
  },
  {
    "API": "ec2:DescribeIpamResourceDiscoveryAssociations",
    "EventSource": "ec2",
    "EventName": "DescribeIpamResourceDiscoveryAssociations",
    "Description": "Describes resource discovery association with an Amazon VPC IPAM"
  },
  {
    "API": "ec2:DescribeIpamScopes",
    "EventSource": "ec2",
    "EventName": "DescribeIpamScopes",
    "Description": "Get information about your IPAM scopes"
  },
  {
    "API": "ec2:DescribeIpams",
    "EventSource": "ec2",
    "EventName": "DescribeIpams",
    "Description": "Get information about your IPAM pools"
  },
  {
    "API": "ec2:DescribeIpv6Pools",
    "EventSource": "ec2",
    "EventName": "DescribeIpv6Pools",
    "Description": "Describes your IPv6 address pools"
  },
  {
    "API": "ec2:DescribeKeyPairs",
    "EventSource": "ec2",
    "EventName": "DescribeKeyPairs",
    "Description": "Describes the specified key pairs or all of your key pairs"
  },
  {
    "API": "ec2:DescribeLaunchTemplateVersions",
    "EventSource": "ec2",
    "EventName": "DescribeLaunchTemplateVersions",
    "Description": "Describes one or more versions of a specified launch template"
  },
  {
    "API": "ec2:DescribeLaunchTemplates",
    "EventSource": "ec2",
    "EventName": "DescribeLaunchTemplates",
    "Description": "Describes one or more launch templates"
  },
  {
    "API": "ec2:DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
    "EventSource": "ec2",
    "EventName": "DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
    "Description": "Describes the associations between virtual interface groups and local gateway route tables"
  },
  {
    "API": "ec2:DescribeLocalGatewayRouteTableVpcAssociations",
    "EventSource": "ec2",
    "EventName": "DescribeLocalGatewayRouteTableVpcAssociations",
    "Description": "Describes the specified associations between VPCs and local gateway route tables"
  },
  {
    "API": "ec2:DescribeLocalGatewayRouteTables",
    "EventSource": "ec2",
    "EventName": "DescribeLocalGatewayRouteTables",
    "Description": "Describes one or more local gateway route tables"
  },
  {
    "API": "ec2:DescribeLocalGatewayVirtualInterfaceGroups",
    "EventSource": "ec2",
    "EventName": "DescribeLocalGatewayVirtualInterfaceGroups",
    "Description": "Describes the specified local gateway virtual interface groups"
  },
  {
    "API": "ec2:DescribeLocalGatewayVirtualInterfaces",
    "EventSource": "ec2",
    "EventName": "DescribeLocalGatewayVirtualInterfaces",
    "Description": "Describes the specified local gateway virtual interfaces"
  },
  {
    "API": "ec2:DescribeLocalGateways",
    "EventSource": "ec2",
    "EventName": "DescribeLocalGateways",
    "Description": "Describes one or more local gateways"
  },
  {
    "API": "ec2:DescribeLockedSnapshots",
    "EventSource": "ec2",
    "EventName": "DescribeLockedSnapshots",
    "Description": "Describes the lock status for a snapshot"
  },
  {
    "API": "ec2:DescribeMacHosts",
    "EventSource": "ec2",
    "EventName": "DescribeMacHosts",
    "Description": "Describes the specified EC2 Mac Dedicated Host or all of your EC2 Mac Dedicated Hosts"
  },
  {
    "API": "ec2:DescribeManagedPrefixLists",
    "EventSource": "ec2",
    "EventName": "DescribeManagedPrefixLists",
    "Description": "Describes your managed prefix lists and any Amazon Web Services-managed prefix lists"
  },
  {
    "API": "ec2:DescribeMovingAddresses",
    "EventSource": "ec2",
    "EventName": "DescribeMovingAddresses",
    "Description": ""
  },
  {
    "API": "ec2:DescribeNatGateways",
    "EventSource": "ec2",
    "EventName": "DescribeNatGateways",
    "Description": "Describes your NAT gateways"
  },
  {
    "API": "ec2:DescribeNetworkAcls",
    "EventSource": "ec2",
    "EventName": "DescribeNetworkAcls",
    "Description": "Describes your network ACLs"
  },
  {
    "API": "ec2:DescribeNetworkInsightsAccessScopeAnalyses",
    "EventSource": "ec2",
    "EventName": "DescribeNetworkInsightsAccessScopeAnalyses",
    "Description": "Describes the specified Network Access Scope analyses"
  },
  {
    "API": "ec2:DescribeNetworkInsightsAccessScopes",
    "EventSource": "ec2",
    "EventName": "DescribeNetworkInsightsAccessScopes",
    "Description": "Describes the specified Network Access Scopes"
  },
  {
    "API": "ec2:DescribeNetworkInsightsAnalyses",
    "EventSource": "ec2",
    "EventName": "DescribeNetworkInsightsAnalyses",
    "Description": "Describes one or more of your network insights analyses"
  },
  {
    "API": "ec2:DescribeNetworkInsightsPaths",
    "EventSource": "ec2",
    "EventName": "DescribeNetworkInsightsPaths",
    "Description": "Describes one or more of your paths"
  },
  {
    "API": "ec2:DescribeNetworkInterfaceAttribute",
    "EventSource": "ec2",
    "EventName": "DescribeNetworkInterfaceAttribute",
    "Description": "Describes a network interface attribute"
  },
  {
    "API": "ec2:DescribeNetworkInterfacePermissions",
    "EventSource": "ec2",
    "EventName": "DescribeNetworkInterfacePermissions",
    "Description": "Describes the permissions for your network interfaces"
  },
  {
    "API": "ec2:DescribeNetworkInterfaces",
    "EventSource": "ec2",
    "EventName": "DescribeNetworkInterfaces",
    "Description": "Describes one or more of your network interfaces"
  },
  {
    "API": "ec2:DescribePlacementGroups",
    "EventSource": "ec2",
    "EventName": "DescribePlacementGroups",
    "Description": "Describes the specified placement groups or all of your placement groups"
  },
  {
    "API": "ec2:DescribePrefixLists",
    "EventSource": "ec2",
    "EventName": "DescribePrefixLists",
    "Description": "Describes available Amazon Web Services services in a prefix list format, which includes the prefix list name and prefix list ID of the service and the IP address range for the service"
  },
  {
    "API": "ec2:DescribePrincipalIdFormat",
    "EventSource": "ec2",
    "EventName": "DescribePrincipalIdFormat",
    "Description": "Describes the ID format settings for the root user and all IAM roles and IAM users that have explicitly specified a longer ID (17-character ID) preference"
  },
  {
    "API": "ec2:DescribePublicIpv4Pools",
    "EventSource": "ec2",
    "EventName": "DescribePublicIpv4Pools",
    "Description": "Describes the specified IPv4 address pools"
  },
  {
    "API": "ec2:DescribeRegions",
    "EventSource": "ec2",
    "EventName": "DescribeRegions",
    "Description": "Describes the Regions that are enabled for your account, or all Regions"
  },
  {
    "API": "ec2:DescribeReplaceRootVolumeTasks",
    "EventSource": "ec2",
    "EventName": "DescribeReplaceRootVolumeTasks",
    "Description": "Describes a root volume replacement task"
  },
  {
    "API": "ec2:DescribeReservedInstances",
    "EventSource": "ec2",
    "EventName": "DescribeReservedInstances",
    "Description": "Describes one or more of the Reserved Instances that you purchased"
  },
  {
    "API": "ec2:DescribeReservedInstancesListings",
    "EventSource": "ec2",
    "EventName": "DescribeReservedInstancesListings",
    "Description": "Describes your account's Reserved Instance listings in the Reserved Instance Marketplace"
  },
  {
    "API": "ec2:DescribeReservedInstancesModifications",
    "EventSource": "ec2",
    "EventName": "DescribeReservedInstancesModifications",
    "Description": "Describes the modifications made to your Reserved Instances"
  },
  {
    "API": "ec2:DescribeReservedInstancesOfferings",
    "EventSource": "ec2",
    "EventName": "DescribeReservedInstancesOfferings",
    "Description": "Describes Reserved Instance offerings that are available for purchase"
  },
  {
    "API": "ec2:DescribeRouteTables",
    "EventSource": "ec2",
    "EventName": "DescribeRouteTables",
    "Description": "Describes your route tables"
  },
  {
    "API": "ec2:DescribeScheduledInstanceAvailability",
    "EventSource": "ec2",
    "EventName": "DescribeScheduledInstanceAvailability",
    "Description": "Finds available schedules that meet the specified criteria"
  },
  {
    "API": "ec2:DescribeScheduledInstances",
    "EventSource": "ec2",
    "EventName": "DescribeScheduledInstances",
    "Description": "Describes the specified Scheduled Instances or all your Scheduled Instances"
  },
  {
    "API": "ec2:DescribeSecurityGroupReferences",
    "EventSource": "ec2",
    "EventName": "DescribeSecurityGroupReferences",
    "Description": "Describes the VPCs on the other side of a VPC peering connection that are referencing the security groups you've specified in this request"
  },
  {
    "API": "ec2:DescribeSecurityGroupRules",
    "EventSource": "ec2",
    "EventName": "DescribeSecurityGroupRules",
    "Description": "Describes one or more of your security group rules"
  },
  {
    "API": "ec2:DescribeSecurityGroups",
    "EventSource": "ec2",
    "EventName": "DescribeSecurityGroups",
    "Description": "Describes the specified security groups or all of your security groups"
  },
  {
    "API": "ec2:DescribeSnapshotAttribute",
    "EventSource": "ec2",
    "EventName": "DescribeSnapshotAttribute",
    "Description": "Describes the specified attribute of the specified snapshot"
  },
  {
    "API": "ec2:DescribeSnapshotTierStatus",
    "EventSource": "ec2",
    "EventName": "DescribeSnapshotTierStatus",
    "Description": "Describes the storage tier status of one or more Amazon EBS snapshots"
  },
  {
    "API": "ec2:DescribeSnapshots",
    "EventSource": "ec2",
    "EventName": "DescribeSnapshots",
    "Description": "Describes the specified EBS snapshots available to you or all of the EBS snapshots available to you"
  },
  {
    "API": "ec2:DescribeSpotDatafeedSubscription",
    "EventSource": "ec2",
    "EventName": "DescribeSpotDatafeedSubscription",
    "Description": "Describes the data feed for Spot Instances"
  },
  {
    "API": "ec2:DescribeSpotFleetInstances",
    "EventSource": "ec2",
    "EventName": "DescribeSpotFleetInstances",
    "Description": "Describes the running instances for the specified Spot Fleet"
  },
  {
    "API": "ec2:DescribeSpotFleetRequestHistory",
    "EventSource": "ec2",
    "EventName": "DescribeSpotFleetRequestHistory",
    "Description": "Describes the events for the specified Spot Fleet request during the specified time"
  },
  {
    "API": "ec2:DescribeSpotFleetRequests",
    "EventSource": "ec2",
    "EventName": "DescribeSpotFleetRequests",
    "Description": "Describes your Spot Fleet requests"
  },
  {
    "API": "ec2:DescribeSpotInstanceRequests",
    "EventSource": "ec2",
    "EventName": "DescribeSpotInstanceRequests",
    "Description": "Describes the specified Spot Instance requests"
  },
  {
    "API": "ec2:DescribeSpotPriceHistory",
    "EventSource": "ec2",
    "EventName": "DescribeSpotPriceHistory",
    "Description": "Describes the Spot price history"
  },
  {
    "API": "ec2:DescribeStaleSecurityGroups",
    "EventSource": "ec2",
    "EventName": "DescribeStaleSecurityGroups",
    "Description": "Describes the stale security group rules for security groups in a specified VPC"
  },
  {
    "API": "ec2:DescribeStoreImageTasks",
    "EventSource": "ec2",
    "EventName": "DescribeStoreImageTasks",
    "Description": "Describes the progress of the AMI store tasks"
  },
  {
    "API": "ec2:DescribeSubnets",
    "EventSource": "ec2",
    "EventName": "DescribeSubnets",
    "Description": "Describes your subnets"
  },
  {
    "API": "ec2:DescribeTags",
    "EventSource": "ec2",
    "EventName": "DescribeTags",
    "Description": "Describes the specified tags for your EC2 resources"
  },
  {
    "API": "ec2:DescribeTrafficMirrorFilterRules",
    "EventSource": "ec2",
    "EventName": "DescribeTrafficMirrorFilterRules",
    "Description": "Describe traffic mirror filters that determine the traffic that is mirrored"
  },
  {
    "API": "ec2:DescribeTrafficMirrorFilters",
    "EventSource": "ec2",
    "EventName": "DescribeTrafficMirrorFilters",
    "Description": "Describes one or more Traffic Mirror filters"
  },
  {
    "API": "ec2:DescribeTrafficMirrorSessions",
    "EventSource": "ec2",
    "EventName": "DescribeTrafficMirrorSessions",
    "Description": "Describes one or more Traffic Mirror sessions"
  },
  {
    "API": "ec2:DescribeTrafficMirrorTargets",
    "EventSource": "ec2",
    "EventName": "DescribeTrafficMirrorTargets",
    "Description": "Information about one or more Traffic Mirror targets"
  },
  {
    "API": "ec2:DescribeTransitGatewayAttachments",
    "EventSource": "ec2",
    "EventName": "DescribeTransitGatewayAttachments",
    "Description": "Describes one or more attachments between resources and transit gateways"
  },
  {
    "API": "ec2:DescribeTransitGatewayConnectPeers",
    "EventSource": "ec2",
    "EventName": "DescribeTransitGatewayConnectPeers",
    "Description": "Describes one or more Connect peers"
  },
  {
    "API": "ec2:DescribeTransitGatewayConnects",
    "EventSource": "ec2",
    "EventName": "DescribeTransitGatewayConnects",
    "Description": "Describes one or more Connect attachments"
  },
  {
    "API": "ec2:DescribeTransitGatewayMulticastDomains",
    "EventSource": "ec2",
    "EventName": "DescribeTransitGatewayMulticastDomains",
    "Description": "Describes one or more transit gateway multicast domains"
  },
  {
    "API": "ec2:DescribeTransitGatewayPeeringAttachments",
    "EventSource": "ec2",
    "EventName": "DescribeTransitGatewayPeeringAttachments",
    "Description": "Describes your transit gateway peering attachments"
  },
  {
    "API": "ec2:DescribeTransitGatewayPolicyTables",
    "EventSource": "ec2",
    "EventName": "DescribeTransitGatewayPolicyTables",
    "Description": "Describes one or more transit gateway route policy tables"
  },
  {
    "API": "ec2:DescribeTransitGatewayRouteTableAnnouncements",
    "EventSource": "ec2",
    "EventName": "DescribeTransitGatewayRouteTableAnnouncements",
    "Description": "Describes one or more transit gateway route table advertisements"
  },
  {
    "API": "ec2:DescribeTransitGatewayRouteTables",
    "EventSource": "ec2",
    "EventName": "DescribeTransitGatewayRouteTables",
    "Description": "Describes one or more transit gateway route tables"
  },
  {
    "API": "ec2:DescribeTransitGatewayVpcAttachments",
    "EventSource": "ec2",
    "EventName": "DescribeTransitGatewayVpcAttachments",
    "Description": "Describes one or more VPC attachments"
  },
  {
    "API": "ec2:DescribeTransitGateways",
    "EventSource": "ec2",
    "EventName": "DescribeTransitGateways",
    "Description": "Describes one or more transit gateways"
  },
  {
    "API": "ec2:DescribeTrunkInterfaceAssociations",
    "EventSource": "ec2",
    "EventName": "DescribeTrunkInterfaceAssociations",
    "Description": "Describes one or more network interface trunk associations"
  },
  {
    "API": "ec2:DescribeVerifiedAccessEndpoints",
    "EventSource": "ec2",
    "EventName": "DescribeVerifiedAccessEndpoints",
    "Description": "Describes the specified Amazon Web Services Verified Access endpoints"
  },
  {
    "API": "ec2:DescribeVerifiedAccessGroups",
    "EventSource": "ec2",
    "EventName": "DescribeVerifiedAccessGroups",
    "Description": "Describes the specified Verified Access groups"
  },
  {
    "API": "ec2:DescribeVerifiedAccessInstanceLoggingConfigurations",
    "EventSource": "ec2",
    "EventName": "DescribeVerifiedAccessInstanceLoggingConfigurations",
    "Description": "Describes the specified Amazon Web Services Verified Access instances"
  },
  {
    "API": "ec2:DescribeVerifiedAccessInstances",
    "EventSource": "ec2",
    "EventName": "DescribeVerifiedAccessInstances",
    "Description": "Describes the specified Amazon Web Services Verified Access instances"
  },
  {
    "API": "ec2:DescribeVerifiedAccessTrustProviders",
    "EventSource": "ec2",
    "EventName": "DescribeVerifiedAccessTrustProviders",
    "Description": "Describes the specified Amazon Web Services Verified Access trust providers"
  },
  {
    "API": "ec2:DescribeVolumeAttribute",
    "EventSource": "ec2",
    "EventName": "DescribeVolumeAttribute",
    "Description": "Describes the specified attribute of the specified volume"
  },
  {
    "API": "ec2:DescribeVolumeStatus",
    "EventSource": "ec2",
    "EventName": "DescribeVolumeStatus",
    "Description": "Describes the status of the specified volumes"
  },
  {
    "API": "ec2:DescribeVolumes",
    "EventSource": "ec2",
    "EventName": "DescribeVolumes",
    "Description": "Describes the specified EBS volumes or all of your EBS volumes"
  },
  {
    "API": "ec2:DescribeVolumesModifications",
    "EventSource": "ec2",
    "EventName": "DescribeVolumesModifications",
    "Description": "Describes the most recent volume modification request for the specified EBS volumes"
  },
  {
    "API": "ec2:DescribeVpcAttribute",
    "EventSource": "ec2",
    "EventName": "DescribeVpcAttribute",
    "Description": "Describes the specified attribute of the specified VPC"
  },
  {
    "API": "ec2:DescribeVpcClassicLink",
    "EventSource": "ec2",
    "EventName": "DescribeVpcClassicLink",
    "Description": ""
  },
  {
    "API": "ec2:DescribeVpcClassicLinkDnsSupport",
    "EventSource": "ec2",
    "EventName": "DescribeVpcClassicLinkDnsSupport",
    "Description": ""
  },
  {
    "API": "ec2:DescribeVpcEndpointConnectionNotifications",
    "EventSource": "ec2",
    "EventName": "DescribeVpcEndpointConnectionNotifications",
    "Description": "Describes the connection notifications for VPC endpoints and VPC endpoint services"
  },
  {
    "API": "ec2:DescribeVpcEndpointConnections",
    "EventSource": "ec2",
    "EventName": "DescribeVpcEndpointConnections",
    "Description": "Describes the VPC endpoint connections to your VPC endpoint services, including any endpoints that are pending your acceptance"
  },
  {
    "API": "ec2:DescribeVpcEndpointServiceConfigurations",
    "EventSource": "ec2",
    "EventName": "DescribeVpcEndpointServiceConfigurations",
    "Description": "Describes the VPC endpoint service configurations in your account (your services)"
  },
  {
    "API": "ec2:DescribeVpcEndpointServicePermissions",
    "EventSource": "ec2",
    "EventName": "DescribeVpcEndpointServicePermissions",
    "Description": "Describes the principals (service consumers) that are permitted to discover your VPC endpoint service"
  },
  {
    "API": "ec2:DescribeVpcEndpointServices",
    "EventSource": "ec2",
    "EventName": "DescribeVpcEndpointServices",
    "Description": "Describes available services to which you can create a VPC endpoint"
  },
  {
    "API": "ec2:DescribeVpcEndpoints",
    "EventSource": "ec2",
    "EventName": "DescribeVpcEndpoints",
    "Description": "Describes your VPC endpoints"
  },
  {
    "API": "ec2:DescribeVpcPeeringConnections",
    "EventSource": "ec2",
    "EventName": "DescribeVpcPeeringConnections",
    "Description": "Describes your VPC peering connections"
  },
  {
    "API": "ec2:DescribeVpcs",
    "EventSource": "ec2",
    "EventName": "DescribeVpcs",
    "Description": "Describes your VPCs"
  },
  {
    "API": "ec2:DescribeVpnConnections",
    "EventSource": "ec2",
    "EventName": "DescribeVpnConnections",
    "Description": "Describes one or more of your VPN connections"
  },
  {
    "API": "ec2:DescribeVpnGateways",
    "EventSource": "ec2",
    "EventName": "DescribeVpnGateways",
    "Description": "Describes one or more of your virtual private gateways"
  },
  {
    "API": "ec2:DetachClassicLinkVpc",
    "EventSource": "ec2",
    "EventName": "DetachClassicLinkVpc",
    "Description": ""
  },
  {
    "API": "ec2:DetachInternetGateway",
    "EventSource": "ec2",
    "EventName": "DetachInternetGateway",
    "Description": "Detaches an internet gateway from a VPC, disabling connectivity between the internet and the VPC"
  },
  {
    "API": "ec2:DetachNetworkInterface",
    "EventSource": "ec2",
    "EventName": "DetachNetworkInterface",
    "Description": "Detaches a network interface from an instance"
  },
  {
    "API": "ec2:DetachVerifiedAccessTrustProvider",
    "EventSource": "ec2",
    "EventName": "DetachVerifiedAccessTrustProvider",
    "Description": "Detaches the specified Amazon Web Services Verified Access trust provider from the specified Amazon Web Services Verified Access instance"
  },
  {
    "API": "ec2:DetachVolume",
    "EventSource": "ec2",
    "EventName": "DetachVolume",
    "Description": "Detaches an EBS volume from an instance"
  },
  {
    "API": "ec2:DetachVpnGateway",
    "EventSource": "ec2",
    "EventName": "DetachVpnGateway",
    "Description": "Detaches a virtual private gateway from a VPC"
  },
  {
    "API": "ec2:DisableAddressTransfer",
    "EventSource": "ec2",
    "EventName": "DisableAddressTransfer",
    "Description": "Disables Elastic IP address transfer"
  },
  {
    "API": "ec2:DisableAwsNetworkPerformanceMetricSubscription",
    "EventSource": "ec2",
    "EventName": "DisableAwsNetworkPerformanceMetricSubscription",
    "Description": "Disables Infrastructure Performance metric subscriptions"
  },
  {
    "API": "ec2:DisableEbsEncryptionByDefault",
    "EventSource": "ec2",
    "EventName": "DisableEbsEncryptionByDefault",
    "Description": "Disables EBS encryption by default for your account in the current Region"
  },
  {
    "API": "ec2:DisableFastLaunch",
    "EventSource": "ec2",
    "EventName": "DisableFastLaunch",
    "Description": "Discontinue Windows fast launch for a Windows AMI, and clean up existing pre-provisioned snapshots"
  },
  {
    "API": "ec2:DisableFastSnapshotRestores",
    "EventSource": "ec2",
    "EventName": "DisableFastSnapshotRestores",
    "Description": "Disables fast snapshot restores for the specified snapshots in the specified Availability Zones"
  },
  {
    "API": "ec2:DisableImage",
    "EventSource": "ec2",
    "EventName": "DisableImage",
    "Description": "Sets the AMI state to ``disabled`` and removes all launch permissions from the AMI"
  },
  {
    "API": "ec2:DisableImageBlockPublicAccess",
    "EventSource": "ec2",
    "EventName": "DisableImageBlockPublicAccess",
    "Description": "Disables *block public access for AMIs* at the account level in the specified Amazon Web Services Region"
  },
  {
    "API": "ec2:DisableImageDeprecation",
    "EventSource": "ec2",
    "EventName": "DisableImageDeprecation",
    "Description": "Cancels the deprecation of the specified AMI"
  },
  {
    "API": "ec2:DisableImageDeregistrationProtection",
    "EventSource": "ec2",
    "EventName": "DisableImageDeregistrationProtection",
    "Description": "Disables deregistration protection for an AMI"
  },
  {
    "API": "ec2:DisableIpamOrganizationAdminAccount",
    "EventSource": "ec2",
    "EventName": "DisableIpamOrganizationAdminAccount",
    "Description": "Disable the IPAM account"
  },
  {
    "API": "ec2:DisableSerialConsoleAccess",
    "EventSource": "ec2",
    "EventName": "DisableSerialConsoleAccess",
    "Description": "Disables access to the EC2 serial console of all instances for your account"
  },
  {
    "API": "ec2:DisableSnapshotBlockPublicAccess",
    "EventSource": "ec2",
    "EventName": "DisableSnapshotBlockPublicAccess",
    "Description": "Disables the *block public access for snapshots* setting at the account level for the specified Amazon Web Services Region"
  },
  {
    "API": "ec2:DisableTransitGatewayRouteTablePropagation",
    "EventSource": "ec2",
    "EventName": "DisableTransitGatewayRouteTablePropagation",
    "Description": "Disables the specified resource attachment from propagating routes to the specified propagation route table"
  },
  {
    "API": "ec2:DisableVgwRoutePropagation",
    "EventSource": "ec2",
    "EventName": "DisableVgwRoutePropagation",
    "Description": "Disables a virtual private gateway (VGW) from propagating routes to a specified route table of a VPC"
  },
  {
    "API": "ec2:DisableVpcClassicLink",
    "EventSource": "ec2",
    "EventName": "DisableVpcClassicLink",
    "Description": ""
  },
  {
    "API": "ec2:DisableVpcClassicLinkDnsSupport",
    "EventSource": "ec2",
    "EventName": "DisableVpcClassicLinkDnsSupport",
    "Description": ""
  },
  {
    "API": "ec2:DisassociateAddress",
    "EventSource": "ec2",
    "EventName": "DisassociateAddress",
    "Description": "Disassociates an Elastic IP address from the instance or network interface it's associated with"
  },
  {
    "API": "ec2:DisassociateClientVpnTargetNetwork",
    "EventSource": "ec2",
    "EventName": "DisassociateClientVpnTargetNetwork",
    "Description": "Disassociates a target network from the specified Client VPN endpoint"
  },
  {
    "API": "ec2:DisassociateEnclaveCertificateIamRole",
    "EventSource": "ec2",
    "EventName": "DisassociateEnclaveCertificateIamRole",
    "Description": "Disassociates an IAM role from an Certificate Manager (ACM) certificate"
  },
  {
    "API": "ec2:DisassociateIamInstanceProfile",
    "EventSource": "ec2",
    "EventName": "DisassociateIamInstanceProfile",
    "Description": "Disassociates an IAM instance profile from a running or stopped instance"
  },
  {
    "API": "ec2:DisassociateInstanceEventWindow",
    "EventSource": "ec2",
    "EventName": "DisassociateInstanceEventWindow",
    "Description": "Disassociates one or more targets from an event window"
  },
  {
    "API": "ec2:DisassociateIpamByoasn",
    "EventSource": "ec2",
    "EventName": "DisassociateIpamByoasn",
    "Description": "Remove the association between your Autonomous System Number (ASN) and your BYOIP CIDR"
  },
  {
    "API": "ec2:DisassociateIpamResourceDiscovery",
    "EventSource": "ec2",
    "EventName": "DisassociateIpamResourceDiscovery",
    "Description": "Disassociates a resource discovery from an Amazon VPC IPAM"
  },
  {
    "API": "ec2:DisassociateNatGatewayAddress",
    "EventSource": "ec2",
    "EventName": "DisassociateNatGatewayAddress",
    "Description": "Disassociates secondary Elastic IP addresses (EIPs) from a public NAT gateway"
  },
  {
    "API": "ec2:DisassociateRouteTable",
    "EventSource": "ec2",
    "EventName": "DisassociateRouteTable",
    "Description": "Disassociates a subnet or gateway from a route table"
  },
  {
    "API": "ec2:DisassociateSubnetCidrBlock",
    "EventSource": "ec2",
    "EventName": "DisassociateSubnetCidrBlock",
    "Description": "Disassociates a CIDR block from a subnet"
  },
  {
    "API": "ec2:DisassociateTransitGatewayMulticastDomain",
    "EventSource": "ec2",
    "EventName": "DisassociateTransitGatewayMulticastDomain",
    "Description": "Disassociates the specified subnets from the transit gateway multicast domain"
  },
  {
    "API": "ec2:DisassociateTransitGatewayPolicyTable",
    "EventSource": "ec2",
    "EventName": "DisassociateTransitGatewayPolicyTable",
    "Description": "Removes the association between an an attachment and a policy table"
  },
  {
    "API": "ec2:DisassociateTransitGatewayRouteTable",
    "EventSource": "ec2",
    "EventName": "DisassociateTransitGatewayRouteTable",
    "Description": "Disassociates a resource attachment from a transit gateway route table"
  },
  {
    "API": "ec2:DisassociateTrunkInterface",
    "EventSource": "ec2",
    "EventName": "DisassociateTrunkInterface",
    "Description": "Removes an association between a branch network interface with a trunk network interface"
  },
  {
    "API": "ec2:DisassociateVpcCidrBlock",
    "EventSource": "ec2",
    "EventName": "DisassociateVpcCidrBlock",
    "Description": "Disassociates a CIDR block from a VPC"
  },
  {
    "API": "ec2:EnableAddressTransfer",
    "EventSource": "ec2",
    "EventName": "EnableAddressTransfer",
    "Description": "Enables Elastic IP address transfer"
  },
  {
    "API": "ec2:EnableAwsNetworkPerformanceMetricSubscription",
    "EventSource": "ec2",
    "EventName": "EnableAwsNetworkPerformanceMetricSubscription",
    "Description": "Enables Infrastructure Performance subscriptions"
  },
  {
    "API": "ec2:EnableEbsEncryptionByDefault",
    "EventSource": "ec2",
    "EventName": "EnableEbsEncryptionByDefault",
    "Description": "Enables EBS encryption by default for your account in the current Region"
  },
  {
    "API": "ec2:EnableFastLaunch",
    "EventSource": "ec2",
    "EventName": "EnableFastLaunch",
    "Description": "When you enable Windows fast launch for a Windows AMI, images are pre-provisioned, using snapshots to launch instances up to 65% faster"
  },
  {
    "API": "ec2:EnableFastSnapshotRestores",
    "EventSource": "ec2",
    "EventName": "EnableFastSnapshotRestores",
    "Description": "Enables fast snapshot restores for the specified snapshots in the specified Availability Zones"
  },
  {
    "API": "ec2:EnableImage",
    "EventSource": "ec2",
    "EventName": "EnableImage",
    "Description": "Re-enables a disabled AMI"
  },
  {
    "API": "ec2:EnableImageBlockPublicAccess",
    "EventSource": "ec2",
    "EventName": "EnableImageBlockPublicAccess",
    "Description": "Enables *block public access for AMIs* at the account level in the specified Amazon Web Services Region"
  },
  {
    "API": "ec2:EnableImageDeprecation",
    "EventSource": "ec2",
    "EventName": "EnableImageDeprecation",
    "Description": "Enables deprecation of the specified AMI at the specified date and time"
  },
  {
    "API": "ec2:EnableImageDeregistrationProtection",
    "EventSource": "ec2",
    "EventName": "EnableImageDeregistrationProtection",
    "Description": "Enables deregistration protection for an AMI"
  },
  {
    "API": "ec2:EnableIpamOrganizationAdminAccount",
    "EventSource": "ec2",
    "EventName": "EnableIpamOrganizationAdminAccount",
    "Description": "Enable an Organizations member account as the IPAM admin account"
  },
  {
    "API": "ec2:EnableReachabilityAnalyzerOrganizationSharing",
    "EventSource": "ec2",
    "EventName": "EnableReachabilityAnalyzerOrganizationSharing",
    "Description": "Establishes a trust relationship between Reachability Analyzer and Organizations"
  },
  {
    "API": "ec2:EnableSerialConsoleAccess",
    "EventSource": "ec2",
    "EventName": "EnableSerialConsoleAccess",
    "Description": "Enables access to the EC2 serial console of all instances for your account"
  },
  {
    "API": "ec2:EnableSnapshotBlockPublicAccess",
    "EventSource": "ec2",
    "EventName": "EnableSnapshotBlockPublicAccess",
    "Description": "Enables or modifies the *block public access for snapshots* setting at the account level for the specified Amazon Web Services Region"
  },
  {
    "API": "ec2:EnableTransitGatewayRouteTablePropagation",
    "EventSource": "ec2",
    "EventName": "EnableTransitGatewayRouteTablePropagation",
    "Description": "Enables the specified attachment to propagate routes to the specified propagation route table"
  },
  {
    "API": "ec2:EnableVgwRoutePropagation",
    "EventSource": "ec2",
    "EventName": "EnableVgwRoutePropagation",
    "Description": "Enables a virtual private gateway (VGW) to propagate routes to the specified route table of a VPC"
  },
  {
    "API": "ec2:EnableVolumeIo",
    "EventSource": "ec2",
    "EventName": "EnableVolumeIo",
    "Description": "Enables I/O operations for a volume that had I/O operations disabled because the data on the volume was potentially inconsistent"
  },
  {
    "API": "ec2:EnableVpcClassicLink",
    "EventSource": "ec2",
    "EventName": "EnableVpcClassicLink",
    "Description": ""
  },
  {
    "API": "ec2:EnableVpcClassicLinkDnsSupport",
    "EventSource": "ec2",
    "EventName": "EnableVpcClassicLinkDnsSupport",
    "Description": ""
  },
  {
    "API": "ec2:ExportClientVpnClientCertificateRevocationList",
    "EventSource": "ec2",
    "EventName": "ExportClientVpnClientCertificateRevocationList",
    "Description": "Downloads the client certificate revocation list for the specified Client VPN endpoint"
  },
  {
    "API": "ec2:ExportClientVpnClientConfiguration",
    "EventSource": "ec2",
    "EventName": "ExportClientVpnClientConfiguration",
    "Description": "Downloads the contents of the Client VPN endpoint configuration file for the specified Client VPN endpoint"
  },
  {
    "API": "ec2:ExportImage",
    "EventSource": "ec2",
    "EventName": "ExportImage",
    "Description": "Exports an Amazon Machine Image (AMI) to a VM file"
  },
  {
    "API": "ec2:ExportTransitGatewayRoutes",
    "EventSource": "ec2",
    "EventName": "ExportTransitGatewayRoutes",
    "Description": "Exports routes from the specified transit gateway route table to the specified S3 bucket"
  },
  {
    "API": "ec2:GeneratePresignedUrl",
    "EventSource": "ec2",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "ec2:GetAssociatedEnclaveCertificateIamRoles",
    "EventSource": "ec2",
    "EventName": "GetAssociatedEnclaveCertificateIamRoles",
    "Description": "Returns the IAM roles that are associated with the specified ACM (ACM) certificate"
  },
  {
    "API": "ec2:GetAssociatedIpv6PoolCidrs",
    "EventSource": "ec2",
    "EventName": "GetAssociatedIpv6PoolCidrs",
    "Description": "Gets information about the IPv6 CIDR block associations for a specified IPv6 address pool"
  },
  {
    "API": "ec2:GetAwsNetworkPerformanceData",
    "EventSource": "ec2",
    "EventName": "GetAwsNetworkPerformanceData",
    "Description": "Gets network performance data"
  },
  {
    "API": "ec2:GetCapacityReservationUsage",
    "EventSource": "ec2",
    "EventName": "GetCapacityReservationUsage",
    "Description": "Gets usage information about a Capacity Reservation"
  },
  {
    "API": "ec2:GetCoipPoolUsage",
    "EventSource": "ec2",
    "EventName": "GetCoipPoolUsage",
    "Description": "Describes the allocations from the specified customer-owned address pool"
  },
  {
    "API": "ec2:GetConsoleOutput",
    "EventSource": "ec2",
    "EventName": "GetConsoleOutput",
    "Description": "Gets the console output for the specified instance"
  },
  {
    "API": "ec2:GetConsoleScreenshot",
    "EventSource": "ec2",
    "EventName": "GetConsoleScreenshot",
    "Description": "Retrieve a JPG-format screenshot of a running instance to help with troubleshooting"
  },
  {
    "API": "ec2:GetDefaultCreditSpecification",
    "EventSource": "ec2",
    "EventName": "GetDefaultCreditSpecification",
    "Description": "Describes the default credit option for CPU usage of a burstable performance instance family"
  },
  {
    "API": "ec2:GetEbsDefaultKmsKeyId",
    "EventSource": "ec2",
    "EventName": "GetEbsDefaultKmsKeyId",
    "Description": "Describes the default KMS key for EBS encryption by default for your account in this Region"
  },
  {
    "API": "ec2:GetEbsEncryptionByDefault",
    "EventSource": "ec2",
    "EventName": "GetEbsEncryptionByDefault",
    "Description": "Describes whether EBS encryption by default is enabled for your account in the current Region"
  },
  {
    "API": "ec2:GetFlowLogsIntegrationTemplate",
    "EventSource": "ec2",
    "EventName": "GetFlowLogsIntegrationTemplate",
    "Description": "Generates a CloudFormation template that streamlines and automates the integration of VPC flow logs with Amazon Athena"
  },
  {
    "API": "ec2:GetGroupsForCapacityReservation",
    "EventSource": "ec2",
    "EventName": "GetGroupsForCapacityReservation",
    "Description": "Lists the resource groups to which a Capacity Reservation has been added"
  },
  {
    "API": "ec2:GetHostReservationPurchasePreview",
    "EventSource": "ec2",
    "EventName": "GetHostReservationPurchasePreview",
    "Description": "Preview a reservation purchase with configurations that match those of your Dedicated Host"
  },
  {
    "API": "ec2:GetImageBlockPublicAccessState",
    "EventSource": "ec2",
    "EventName": "GetImageBlockPublicAccessState",
    "Description": "Gets the current state of *block public access for AMIs* at the account level in the specified Amazon Web Services Region"
  },
  {
    "API": "ec2:GetInstanceMetadataDefaults",
    "EventSource": "ec2",
    "EventName": "GetInstanceMetadataDefaults",
    "Description": "Gets the default instance metadata service (IMDS) settings that are set at the account level in the specified Amazon Web Services Region"
  },
  {
    "API": "ec2:GetInstanceTpmEkPub",
    "EventSource": "ec2",
    "EventName": "GetInstanceTpmEkPub",
    "Description": "Gets the public endorsement key associated with the Nitro Trusted Platform Module (NitroTPM) for the specified instance"
  },
  {
    "API": "ec2:GetInstanceTypesFromInstanceRequirements",
    "EventSource": "ec2",
    "EventName": "GetInstanceTypesFromInstanceRequirements",
    "Description": "Returns a list of instance types with the specified instance attributes"
  },
  {
    "API": "ec2:GetInstanceUefiData",
    "EventSource": "ec2",
    "EventName": "GetInstanceUefiData",
    "Description": "A binary representation of the UEFI variable store"
  },
  {
    "API": "ec2:GetIpamAddressHistory",
    "EventSource": "ec2",
    "EventName": "GetIpamAddressHistory",
    "Description": "Retrieve historical information about a CIDR within an IPAM scope"
  },
  {
    "API": "ec2:GetIpamDiscoveredAccounts",
    "EventSource": "ec2",
    "EventName": "GetIpamDiscoveredAccounts",
    "Description": "Gets IPAM discovered accounts"
  },
  {
    "API": "ec2:GetIpamDiscoveredPublicAddresses",
    "EventSource": "ec2",
    "EventName": "GetIpamDiscoveredPublicAddresses",
    "Description": "Gets the public IP addresses that have been discovered by IPAM"
  },
  {
    "API": "ec2:GetIpamDiscoveredResourceCidrs",
    "EventSource": "ec2",
    "EventName": "GetIpamDiscoveredResourceCidrs",
    "Description": "Returns the resource CIDRs that are monitored as part of a resource discovery"
  },
  {
    "API": "ec2:GetIpamPoolAllocations",
    "EventSource": "ec2",
    "EventName": "GetIpamPoolAllocations",
    "Description": "Get a list of all the CIDR allocations in an IPAM pool"
  },
  {
    "API": "ec2:GetIpamPoolCidrs",
    "EventSource": "ec2",
    "EventName": "GetIpamPoolCidrs",
    "Description": "Get the CIDRs provisioned to an IPAM pool"
  },
  {
    "API": "ec2:GetIpamResourceCidrs",
    "EventSource": "ec2",
    "EventName": "GetIpamResourceCidrs",
    "Description": "Returns resource CIDRs managed by IPAM in a given scope"
  },
  {
    "API": "ec2:GetLaunchTemplateData",
    "EventSource": "ec2",
    "EventName": "GetLaunchTemplateData",
    "Description": "Retrieves the configuration data of the specified instance"
  },
  {
    "API": "ec2:GetManagedPrefixListAssociations",
    "EventSource": "ec2",
    "EventName": "GetManagedPrefixListAssociations",
    "Description": "Gets information about the resources that are associated with the specified managed prefix list"
  },
  {
    "API": "ec2:GetManagedPrefixListEntries",
    "EventSource": "ec2",
    "EventName": "GetManagedPrefixListEntries",
    "Description": "Gets information about the entries for a specified managed prefix list"
  },
  {
    "API": "ec2:GetNetworkInsightsAccessScopeAnalysisFindings",
    "EventSource": "ec2",
    "EventName": "GetNetworkInsightsAccessScopeAnalysisFindings",
    "Description": "Gets the findings for the specified Network Access Scope analysis"
  },
  {
    "API": "ec2:GetNetworkInsightsAccessScopeContent",
    "EventSource": "ec2",
    "EventName": "GetNetworkInsightsAccessScopeContent",
    "Description": "Gets the content for the specified Network Access Scope"
  },
  {
    "API": "ec2:GetPasswordData",
    "EventSource": "ec2",
    "EventName": "GetPasswordData",
    "Description": "Retrieves the encrypted administrator password for a running Windows instance"
  },
  {
    "API": "ec2:GetReservedInstancesExchangeQuote",
    "EventSource": "ec2",
    "EventName": "GetReservedInstancesExchangeQuote",
    "Description": "Returns a quote and exchange information for exchanging one or more specified Convertible Reserved Instances for a new Convertible Reserved Instance"
  },
  {
    "API": "ec2:GetSecurityGroupsForVpc",
    "EventSource": "ec2",
    "EventName": "GetSecurityGroupsForVpc",
    "Description": "Gets security groups that can be associated by the Amazon Web Services account making the request with network interfaces in the specified VPC"
  },
  {
    "API": "ec2:GetSerialConsoleAccessStatus",
    "EventSource": "ec2",
    "EventName": "GetSerialConsoleAccessStatus",
    "Description": "Retrieves the access status of your account to the EC2 serial console of all instances"
  },
  {
    "API": "ec2:GetSnapshotBlockPublicAccessState",
    "EventSource": "ec2",
    "EventName": "GetSnapshotBlockPublicAccessState",
    "Description": "Gets the current state of *block public access for snapshots* setting for the account and Region"
  },
  {
    "API": "ec2:GetSpotPlacementScores",
    "EventSource": "ec2",
    "EventName": "GetSpotPlacementScores",
    "Description": "Calculates the Spot placement score for a Region or Availability Zone based on the specified target capacity and compute requirements"
  },
  {
    "API": "ec2:GetSubnetCidrReservations",
    "EventSource": "ec2",
    "EventName": "GetSubnetCidrReservations",
    "Description": "Gets information about the subnet CIDR reservations"
  },
  {
    "API": "ec2:GetTransitGatewayAttachmentPropagations",
    "EventSource": "ec2",
    "EventName": "GetTransitGatewayAttachmentPropagations",
    "Description": "Lists the route tables to which the specified resource attachment propagates routes"
  },
  {
    "API": "ec2:GetTransitGatewayMulticastDomainAssociations",
    "EventSource": "ec2",
    "EventName": "GetTransitGatewayMulticastDomainAssociations",
    "Description": "Gets information about the associations for the transit gateway multicast domain"
  },
  {
    "API": "ec2:GetTransitGatewayPolicyTableAssociations",
    "EventSource": "ec2",
    "EventName": "GetTransitGatewayPolicyTableAssociations",
    "Description": "Gets a list of the transit gateway policy table associations"
  },
  {
    "API": "ec2:GetTransitGatewayPolicyTableEntries",
    "EventSource": "ec2",
    "EventName": "GetTransitGatewayPolicyTableEntries",
    "Description": "Returns a list of transit gateway policy table entries"
  },
  {
    "API": "ec2:GetTransitGatewayPrefixListReferences",
    "EventSource": "ec2",
    "EventName": "GetTransitGatewayPrefixListReferences",
    "Description": "Gets information about the prefix list references in a specified transit gateway route table"
  },
  {
    "API": "ec2:GetTransitGatewayRouteTableAssociations",
    "EventSource": "ec2",
    "EventName": "GetTransitGatewayRouteTableAssociations",
    "Description": "Gets information about the associations for the specified transit gateway route table"
  },
  {
    "API": "ec2:GetTransitGatewayRouteTablePropagations",
    "EventSource": "ec2",
    "EventName": "GetTransitGatewayRouteTablePropagations",
    "Description": "Gets information about the route table propagations for the specified transit gateway route table"
  },
  {
    "API": "ec2:GetVerifiedAccessEndpointPolicy",
    "EventSource": "ec2",
    "EventName": "GetVerifiedAccessEndpointPolicy",
    "Description": "Get the Verified Access policy associated with the endpoint"
  },
  {
    "API": "ec2:GetVerifiedAccessGroupPolicy",
    "EventSource": "ec2",
    "EventName": "GetVerifiedAccessGroupPolicy",
    "Description": "Shows the contents of the Verified Access policy associated with the group"
  },
  {
    "API": "ec2:GetVpnConnectionDeviceSampleConfiguration",
    "EventSource": "ec2",
    "EventName": "GetVpnConnectionDeviceSampleConfiguration",
    "Description": "Download an Amazon Web Services-provided sample configuration file to be used with the customer gateway device specified for your Site-to-Site VPN connection"
  },
  {
    "API": "ec2:GetVpnConnectionDeviceTypes",
    "EventSource": "ec2",
    "EventName": "GetVpnConnectionDeviceTypes",
    "Description": "Obtain a list of customer gateway devices for which sample configuration files can be provided"
  },
  {
    "API": "ec2:GetVpnTunnelReplacementStatus",
    "EventSource": "ec2",
    "EventName": "GetVpnTunnelReplacementStatus",
    "Description": "Get details of available tunnel endpoint maintenance"
  },
  {
    "API": "ec2:ImportClientVpnClientCertificateRevocationList",
    "EventSource": "ec2",
    "EventName": "ImportClientVpnClientCertificateRevocationList",
    "Description": "Uploads a client certificate revocation list to the specified Client VPN endpoint"
  },
  {
    "API": "ec2:ImportImage",
    "EventSource": "ec2",
    "EventName": "ImportImage",
    "Description": ""
  },
  {
    "API": "ec2:ImportInstance",
    "EventSource": "ec2",
    "EventName": "ImportInstance",
    "Description": ""
  },
  {
    "API": "ec2:ImportKeyPair",
    "EventSource": "ec2",
    "EventName": "ImportKeyPair",
    "Description": "Imports the public key from an RSA or ED25519 key pair that you created with a third-party tool"
  },
  {
    "API": "ec2:ImportSnapshot",
    "EventSource": "ec2",
    "EventName": "ImportSnapshot",
    "Description": "Imports a disk into an EBS snapshot"
  },
  {
    "API": "ec2:ImportVolume",
    "EventSource": "ec2",
    "EventName": "ImportVolume",
    "Description": "Creates an import volume task using metadata from the specified disk image"
  },
  {
    "API": "ec2:ListImagesInRecycleBin",
    "EventSource": "ec2",
    "EventName": "ListImagesInRecycleBin",
    "Description": "Lists one or more AMIs that are currently in the Recycle Bin"
  },
  {
    "API": "ec2:ListSnapshotsInRecycleBin",
    "EventSource": "ec2",
    "EventName": "ListSnapshotsInRecycleBin",
    "Description": "Lists one or more snapshots that are currently in the Recycle Bin"
  },
  {
    "API": "ec2:LockSnapshot",
    "EventSource": "ec2",
    "EventName": "LockSnapshot",
    "Description": "Locks an Amazon EBS snapshot in either *governance* or *compliance* mode to protect it against accidental or malicious deletions for a specific duration"
  },
  {
    "API": "ec2:ModifyAddressAttribute",
    "EventSource": "ec2",
    "EventName": "ModifyAddressAttribute",
    "Description": "Modifies an attribute of the specified Elastic IP address"
  },
  {
    "API": "ec2:ModifyAvailabilityZoneGroup",
    "EventSource": "ec2",
    "EventName": "ModifyAvailabilityZoneGroup",
    "Description": "Changes the opt-in status of the specified zone group for your account"
  },
  {
    "API": "ec2:ModifyCapacityReservation",
    "EventSource": "ec2",
    "EventName": "ModifyCapacityReservation",
    "Description": "Modifies a Capacity Reservation's capacity and the conditions under which it is to be released"
  },
  {
    "API": "ec2:ModifyCapacityReservationFleet",
    "EventSource": "ec2",
    "EventName": "ModifyCapacityReservationFleet",
    "Description": "Modifies a Capacity Reservation Fleet"
  },
  {
    "API": "ec2:ModifyClientVpnEndpoint",
    "EventSource": "ec2",
    "EventName": "ModifyClientVpnEndpoint",
    "Description": "Modifies the specified Client VPN endpoint"
  },
  {
    "API": "ec2:ModifyDefaultCreditSpecification",
    "EventSource": "ec2",
    "EventName": "ModifyDefaultCreditSpecification",
    "Description": "Modifies the default credit option for CPU usage of burstable performance instances"
  },
  {
    "API": "ec2:ModifyEbsDefaultKmsKeyId",
    "EventSource": "ec2",
    "EventName": "ModifyEbsDefaultKmsKeyId",
    "Description": "Changes the default KMS key for EBS encryption by default for your account in this Region"
  },
  {
    "API": "ec2:ModifyFleet",
    "EventSource": "ec2",
    "EventName": "ModifyFleet",
    "Description": "Modifies the specified EC2 Fleet"
  },
  {
    "API": "ec2:ModifyFpgaImageAttribute",
    "EventSource": "ec2",
    "EventName": "ModifyFpgaImageAttribute",
    "Description": "Modifies the specified attribute of the specified Amazon FPGA Image (AFI)"
  },
  {
    "API": "ec2:ModifyHosts",
    "EventSource": "ec2",
    "EventName": "ModifyHosts",
    "Description": "Modify the auto-placement setting of a Dedicated Host"
  },
  {
    "API": "ec2:ModifyIdFormat",
    "EventSource": "ec2",
    "EventName": "ModifyIdFormat",
    "Description": "Modifies the ID format for the specified resource on a per-Region basis"
  },
  {
    "API": "ec2:ModifyIdentityIdFormat",
    "EventSource": "ec2",
    "EventName": "ModifyIdentityIdFormat",
    "Description": "Modifies the ID format of a resource for a specified IAM user, IAM role, or the root user for an account; or all IAM users, IAM roles, and the root user for an account"
  },
  {
    "API": "ec2:ModifyImageAttribute",
    "EventSource": "ec2",
    "EventName": "ModifyImageAttribute",
    "Description": "Modifies the specified attribute of the specified AMI"
  },
  {
    "API": "ec2:ModifyInstanceAttribute",
    "EventSource": "ec2",
    "EventName": "ModifyInstanceAttribute",
    "Description": "Modifies the specified attribute of the specified instance"
  },
  {
    "API": "ec2:ModifyInstanceCapacityReservationAttributes",
    "EventSource": "ec2",
    "EventName": "ModifyInstanceCapacityReservationAttributes",
    "Description": "Modifies the Capacity Reservation settings for a stopped instance"
  },
  {
    "API": "ec2:ModifyInstanceCreditSpecification",
    "EventSource": "ec2",
    "EventName": "ModifyInstanceCreditSpecification",
    "Description": "Modifies the credit option for CPU usage on a running or stopped burstable performance instance"
  },
  {
    "API": "ec2:ModifyInstanceEventStartTime",
    "EventSource": "ec2",
    "EventName": "ModifyInstanceEventStartTime",
    "Description": "Modifies the start time for a scheduled Amazon EC2 instance event"
  },
  {
    "API": "ec2:ModifyInstanceEventWindow",
    "EventSource": "ec2",
    "EventName": "ModifyInstanceEventWindow",
    "Description": "Modifies the specified event window"
  },
  {
    "API": "ec2:ModifyInstanceMaintenanceOptions",
    "EventSource": "ec2",
    "EventName": "ModifyInstanceMaintenanceOptions",
    "Description": "Modifies the recovery behavior of your instance to disable simplified automatic recovery or set the recovery behavior to default"
  },
  {
    "API": "ec2:ModifyInstanceMetadataDefaults",
    "EventSource": "ec2",
    "EventName": "ModifyInstanceMetadataDefaults",
    "Description": "Modifies the default instance metadata service (IMDS) settings at the account level in the specified Amazon Web Services Region"
  },
  {
    "API": "ec2:ModifyInstanceMetadataOptions",
    "EventSource": "ec2",
    "EventName": "ModifyInstanceMetadataOptions",
    "Description": "Modify the instance metadata parameters on a running or stopped instance"
  },
  {
    "API": "ec2:ModifyInstancePlacement",
    "EventSource": "ec2",
    "EventName": "ModifyInstancePlacement",
    "Description": "Modifies the placement attributes for a specified instance"
  },
  {
    "API": "ec2:ModifyIpam",
    "EventSource": "ec2",
    "EventName": "ModifyIpam",
    "Description": "Modify the configurations of an IPAM"
  },
  {
    "API": "ec2:ModifyIpamPool",
    "EventSource": "ec2",
    "EventName": "ModifyIpamPool",
    "Description": "Modify the configurations of an IPAM pool"
  },
  {
    "API": "ec2:ModifyIpamResourceCidr",
    "EventSource": "ec2",
    "EventName": "ModifyIpamResourceCidr",
    "Description": "Modify a resource CIDR"
  },
  {
    "API": "ec2:ModifyIpamResourceDiscovery",
    "EventSource": "ec2",
    "EventName": "ModifyIpamResourceDiscovery",
    "Description": "Modifies a resource discovery"
  },
  {
    "API": "ec2:ModifyIpamScope",
    "EventSource": "ec2",
    "EventName": "ModifyIpamScope",
    "Description": "Modify an IPAM scope"
  },
  {
    "API": "ec2:ModifyLaunchTemplate",
    "EventSource": "ec2",
    "EventName": "ModifyLaunchTemplate",
    "Description": "Modifies a launch template"
  },
  {
    "API": "ec2:ModifyLocalGatewayRoute",
    "EventSource": "ec2",
    "EventName": "ModifyLocalGatewayRoute",
    "Description": "Modifies the specified local gateway route"
  },
  {
    "API": "ec2:ModifyManagedPrefixList",
    "EventSource": "ec2",
    "EventName": "ModifyManagedPrefixList",
    "Description": "Modifies the specified managed prefix list"
  },
  {
    "API": "ec2:ModifyNetworkInterfaceAttribute",
    "EventSource": "ec2",
    "EventName": "ModifyNetworkInterfaceAttribute",
    "Description": "Modifies the specified network interface attribute"
  },
  {
    "API": "ec2:ModifyPrivateDnsNameOptions",
    "EventSource": "ec2",
    "EventName": "ModifyPrivateDnsNameOptions",
    "Description": "Modifies the options for instance hostnames for the specified instance"
  },
  {
    "API": "ec2:ModifyReservedInstances",
    "EventSource": "ec2",
    "EventName": "ModifyReservedInstances",
    "Description": "Modifies the configuration of your Reserved Instances, such as the Availability Zone, instance count, or instance type"
  },
  {
    "API": "ec2:ModifySecurityGroupRules",
    "EventSource": "ec2",
    "EventName": "ModifySecurityGroupRules",
    "Description": "Modifies the rules of a security group"
  },
  {
    "API": "ec2:ModifySnapshotAttribute",
    "EventSource": "ec2",
    "EventName": "ModifySnapshotAttribute",
    "Description": "Adds or removes permission settings for the specified snapshot"
  },
  {
    "API": "ec2:ModifySnapshotTier",
    "EventSource": "ec2",
    "EventName": "ModifySnapshotTier",
    "Description": "Archives an Amazon EBS snapshot"
  },
  {
    "API": "ec2:ModifySpotFleetRequest",
    "EventSource": "ec2",
    "EventName": "ModifySpotFleetRequest",
    "Description": "Modifies the specified Spot Fleet request"
  },
  {
    "API": "ec2:ModifySubnetAttribute",
    "EventSource": "ec2",
    "EventName": "ModifySubnetAttribute",
    "Description": "Modifies a subnet attribute"
  },
  {
    "API": "ec2:ModifyTrafficMirrorFilterNetworkServices",
    "EventSource": "ec2",
    "EventName": "ModifyTrafficMirrorFilterNetworkServices",
    "Description": "Allows or restricts mirroring network services"
  },
  {
    "API": "ec2:ModifyTrafficMirrorFilterRule",
    "EventSource": "ec2",
    "EventName": "ModifyTrafficMirrorFilterRule",
    "Description": "Modifies the specified Traffic Mirror rule"
  },
  {
    "API": "ec2:ModifyTrafficMirrorSession",
    "EventSource": "ec2",
    "EventName": "ModifyTrafficMirrorSession",
    "Description": "Modifies a Traffic Mirror session"
  },
  {
    "API": "ec2:ModifyTransitGateway",
    "EventSource": "ec2",
    "EventName": "ModifyTransitGateway",
    "Description": "Modifies the specified transit gateway"
  },
  {
    "API": "ec2:ModifyTransitGatewayPrefixListReference",
    "EventSource": "ec2",
    "EventName": "ModifyTransitGatewayPrefixListReference",
    "Description": "Modifies a reference (route) to a prefix list in a specified transit gateway route table"
  },
  {
    "API": "ec2:ModifyTransitGatewayVpcAttachment",
    "EventSource": "ec2",
    "EventName": "ModifyTransitGatewayVpcAttachment",
    "Description": "Modifies the specified VPC attachment"
  },
  {
    "API": "ec2:ModifyVerifiedAccessEndpoint",
    "EventSource": "ec2",
    "EventName": "ModifyVerifiedAccessEndpoint",
    "Description": "Modifies the configuration of the specified Amazon Web Services Verified Access endpoint"
  },
  {
    "API": "ec2:ModifyVerifiedAccessEndpointPolicy",
    "EventSource": "ec2",
    "EventName": "ModifyVerifiedAccessEndpointPolicy",
    "Description": "Modifies the specified Amazon Web Services Verified Access endpoint policy"
  },
  {
    "API": "ec2:ModifyVerifiedAccessGroup",
    "EventSource": "ec2",
    "EventName": "ModifyVerifiedAccessGroup",
    "Description": "Modifies the specified Amazon Web Services Verified Access group configuration"
  },
  {
    "API": "ec2:ModifyVerifiedAccessGroupPolicy",
    "EventSource": "ec2",
    "EventName": "ModifyVerifiedAccessGroupPolicy",
    "Description": "Modifies the specified Amazon Web Services Verified Access group policy"
  },
  {
    "API": "ec2:ModifyVerifiedAccessInstance",
    "EventSource": "ec2",
    "EventName": "ModifyVerifiedAccessInstance",
    "Description": "Modifies the configuration of the specified Amazon Web Services Verified Access instance"
  },
  {
    "API": "ec2:ModifyVerifiedAccessInstanceLoggingConfiguration",
    "EventSource": "ec2",
    "EventName": "ModifyVerifiedAccessInstanceLoggingConfiguration",
    "Description": "Modifies the logging configuration for the specified Amazon Web Services Verified Access instance"
  },
  {
    "API": "ec2:ModifyVerifiedAccessTrustProvider",
    "EventSource": "ec2",
    "EventName": "ModifyVerifiedAccessTrustProvider",
    "Description": "Modifies the configuration of the specified Amazon Web Services Verified Access trust provider"
  },
  {
    "API": "ec2:ModifyVolume",
    "EventSource": "ec2",
    "EventName": "ModifyVolume",
    "Description": "You can modify several parameters of an existing EBS volume, including volume size, volume type, and IOPS capacity"
  },
  {
    "API": "ec2:ModifyVolumeAttribute",
    "EventSource": "ec2",
    "EventName": "ModifyVolumeAttribute",
    "Description": "Modifies a volume attribute"
  },
  {
    "API": "ec2:ModifyVpcAttribute",
    "EventSource": "ec2",
    "EventName": "ModifyVpcAttribute",
    "Description": "Modifies the specified attribute of the specified VPC"
  },
  {
    "API": "ec2:ModifyVpcEndpoint",
    "EventSource": "ec2",
    "EventName": "ModifyVpcEndpoint",
    "Description": "Modifies attributes of a specified VPC endpoint"
  },
  {
    "API": "ec2:ModifyVpcEndpointConnectionNotification",
    "EventSource": "ec2",
    "EventName": "ModifyVpcEndpointConnectionNotification",
    "Description": "Modifies a connection notification for VPC endpoint or VPC endpoint service"
  },
  {
    "API": "ec2:ModifyVpcEndpointServiceConfiguration",
    "EventSource": "ec2",
    "EventName": "ModifyVpcEndpointServiceConfiguration",
    "Description": "Modifies the attributes of your VPC endpoint service configuration"
  },
  {
    "API": "ec2:ModifyVpcEndpointServicePayerResponsibility",
    "EventSource": "ec2",
    "EventName": "ModifyVpcEndpointServicePayerResponsibility",
    "Description": "Modifies the payer responsibility for your VPC endpoint service"
  },
  {
    "API": "ec2:ModifyVpcEndpointServicePermissions",
    "EventSource": "ec2",
    "EventName": "ModifyVpcEndpointServicePermissions",
    "Description": "Modifies the permissions for your VPC endpoint service"
  },
  {
    "API": "ec2:ModifyVpcPeeringConnectionOptions",
    "EventSource": "ec2",
    "EventName": "ModifyVpcPeeringConnectionOptions",
    "Description": "Modifies the VPC peering connection options on one side of a VPC peering connection"
  },
  {
    "API": "ec2:ModifyVpcTenancy",
    "EventSource": "ec2",
    "EventName": "ModifyVpcTenancy",
    "Description": "Modifies the instance tenancy attribute of the specified VPC"
  },
  {
    "API": "ec2:ModifyVpnConnection",
    "EventSource": "ec2",
    "EventName": "ModifyVpnConnection",
    "Description": "Modifies the customer gateway or the target gateway of an Amazon Web Services Site-to-Site VPN connection"
  },
  {
    "API": "ec2:ModifyVpnConnectionOptions",
    "EventSource": "ec2",
    "EventName": "ModifyVpnConnectionOptions",
    "Description": "Modifies the connection options for your Site-to-Site VPN connection"
  },
  {
    "API": "ec2:ModifyVpnTunnelCertificate",
    "EventSource": "ec2",
    "EventName": "ModifyVpnTunnelCertificate",
    "Description": "Modifies the VPN tunnel endpoint certificate"
  },
  {
    "API": "ec2:ModifyVpnTunnelOptions",
    "EventSource": "ec2",
    "EventName": "ModifyVpnTunnelOptions",
    "Description": "Modifies the options for a VPN tunnel in an Amazon Web Services Site-to-Site VPN connection"
  },
  {
    "API": "ec2:MonitorInstances",
    "EventSource": "ec2",
    "EventName": "MonitorInstances",
    "Description": "Enables detailed monitoring for a running instance"
  },
  {
    "API": "ec2:MoveAddressToVpc",
    "EventSource": "ec2",
    "EventName": "MoveAddressToVpc",
    "Description": ""
  },
  {
    "API": "ec2:MoveByoipCidrToIpam",
    "EventSource": "ec2",
    "EventName": "MoveByoipCidrToIpam",
    "Description": "Move a BYOIPv4 CIDR to IPAM from a public IPv4 pool"
  },
  {
    "API": "ec2:ProvisionByoipCidr",
    "EventSource": "ec2",
    "EventName": "ProvisionByoipCidr",
    "Description": "Provisions an IPv4 or IPv6 address range for use with your Amazon Web Services resources through bring your own IP addresses (BYOIP) and creates a corresponding address pool"
  },
  {
    "API": "ec2:ProvisionIpamByoasn",
    "EventSource": "ec2",
    "EventName": "ProvisionIpamByoasn",
    "Description": "Provisions your Autonomous System Number (ASN) for use in your Amazon Web Services account"
  },
  {
    "API": "ec2:ProvisionIpamPoolCidr",
    "EventSource": "ec2",
    "EventName": "ProvisionIpamPoolCidr",
    "Description": "Provision a CIDR to an IPAM pool"
  },
  {
    "API": "ec2:ProvisionPublicIpv4PoolCidr",
    "EventSource": "ec2",
    "EventName": "ProvisionPublicIpv4PoolCidr",
    "Description": "Provision a CIDR to a public IPv4 pool"
  },
  {
    "API": "ec2:PurchaseCapacityBlock",
    "EventSource": "ec2",
    "EventName": "PurchaseCapacityBlock",
    "Description": "Purchase the Capacity Block for use with your account"
  },
  {
    "API": "ec2:PurchaseHostReservation",
    "EventSource": "ec2",
    "EventName": "PurchaseHostReservation",
    "Description": "Purchase a reservation with configurations that match those of your Dedicated Host"
  },
  {
    "API": "ec2:PurchaseReservedInstancesOffering",
    "EventSource": "ec2",
    "EventName": "PurchaseReservedInstancesOffering",
    "Description": "Purchases a Reserved Instance for use with your account"
  },
  {
    "API": "ec2:PurchaseScheduledInstances",
    "EventSource": "ec2",
    "EventName": "PurchaseScheduledInstances",
    "Description": ""
  },
  {
    "API": "ec2:RebootInstances",
    "EventSource": "ec2",
    "EventName": "RebootInstances",
    "Description": "Requests a reboot of the specified instances"
  },
  {
    "API": "ec2:RegisterImage",
    "EventSource": "ec2",
    "EventName": "RegisterImage",
    "Description": "Registers an AMI"
  },
  {
    "API": "ec2:RegisterInstanceEventNotificationAttributes",
    "EventSource": "ec2",
    "EventName": "RegisterInstanceEventNotificationAttributes",
    "Description": "Registers a set of tag keys to include in scheduled event notifications for your resources"
  },
  {
    "API": "ec2:RegisterTransitGatewayMulticastGroupMembers",
    "EventSource": "ec2",
    "EventName": "RegisterTransitGatewayMulticastGroupMembers",
    "Description": "Registers members (network interfaces) with the transit gateway multicast group"
  },
  {
    "API": "ec2:RegisterTransitGatewayMulticastGroupSources",
    "EventSource": "ec2",
    "EventName": "RegisterTransitGatewayMulticastGroupSources",
    "Description": "Registers sources (network interfaces) with the specified transit gateway multicast group"
  },
  {
    "API": "ec2:RejectTransitGatewayMulticastDomainAssociations",
    "EventSource": "ec2",
    "EventName": "RejectTransitGatewayMulticastDomainAssociations",
    "Description": "Rejects a request to associate cross-account subnets with a transit gateway multicast domain"
  },
  {
    "API": "ec2:RejectTransitGatewayPeeringAttachment",
    "EventSource": "ec2",
    "EventName": "RejectTransitGatewayPeeringAttachment",
    "Description": "Rejects a transit gateway peering attachment request"
  },
  {
    "API": "ec2:RejectTransitGatewayVpcAttachment",
    "EventSource": "ec2",
    "EventName": "RejectTransitGatewayVpcAttachment",
    "Description": "Rejects a request to attach a VPC to a transit gateway"
  },
  {
    "API": "ec2:RejectVpcEndpointConnections",
    "EventSource": "ec2",
    "EventName": "RejectVpcEndpointConnections",
    "Description": "Rejects VPC endpoint connection requests to your VPC endpoint service"
  },
  {
    "API": "ec2:RejectVpcPeeringConnection",
    "EventSource": "ec2",
    "EventName": "RejectVpcPeeringConnection",
    "Description": "Rejects a VPC peering connection request"
  },
  {
    "API": "ec2:ReleaseAddress",
    "EventSource": "ec2",
    "EventName": "ReleaseAddress",
    "Description": "Releases the specified Elastic IP address"
  },
  {
    "API": "ec2:ReleaseHosts",
    "EventSource": "ec2",
    "EventName": "ReleaseHosts",
    "Description": "When you no longer want to use an On-Demand Dedicated Host it can be released"
  },
  {
    "API": "ec2:ReleaseIpamPoolAllocation",
    "EventSource": "ec2",
    "EventName": "ReleaseIpamPoolAllocation",
    "Description": "Release an allocation within an IPAM pool"
  },
  {
    "API": "ec2:ReplaceIamInstanceProfileAssociation",
    "EventSource": "ec2",
    "EventName": "ReplaceIamInstanceProfileAssociation",
    "Description": "Replaces an IAM instance profile for the specified running instance"
  },
  {
    "API": "ec2:ReplaceNetworkAclAssociation",
    "EventSource": "ec2",
    "EventName": "ReplaceNetworkAclAssociation",
    "Description": "Changes which network ACL a subnet is associated with"
  },
  {
    "API": "ec2:ReplaceNetworkAclEntry",
    "EventSource": "ec2",
    "EventName": "ReplaceNetworkAclEntry",
    "Description": "Replaces an entry (rule) in a network ACL"
  },
  {
    "API": "ec2:ReplaceRoute",
    "EventSource": "ec2",
    "EventName": "ReplaceRoute",
    "Description": "Replaces an existing route within a route table in a VPC"
  },
  {
    "API": "ec2:ReplaceRouteTableAssociation",
    "EventSource": "ec2",
    "EventName": "ReplaceRouteTableAssociation",
    "Description": "Changes the route table associated with a given subnet, internet gateway, or virtual private gateway in a VPC"
  },
  {
    "API": "ec2:ReplaceTransitGatewayRoute",
    "EventSource": "ec2",
    "EventName": "ReplaceTransitGatewayRoute",
    "Description": "Replaces the specified route in the specified transit gateway route table"
  },
  {
    "API": "ec2:ReplaceVpnTunnel",
    "EventSource": "ec2",
    "EventName": "ReplaceVpnTunnel",
    "Description": "Trigger replacement of specified VPN tunnel"
  },
  {
    "API": "ec2:ReportInstanceStatus",
    "EventSource": "ec2",
    "EventName": "ReportInstanceStatus",
    "Description": "Submits feedback about the status of an instance"
  },
  {
    "API": "ec2:RequestSpotFleet",
    "EventSource": "ec2",
    "EventName": "RequestSpotFleet",
    "Description": "Creates a Spot Fleet request"
  },
  {
    "API": "ec2:RequestSpotInstances",
    "EventSource": "ec2",
    "EventName": "RequestSpotInstances",
    "Description": "Creates a Spot Instance request"
  },
  {
    "API": "ec2:ResetAddressAttribute",
    "EventSource": "ec2",
    "EventName": "ResetAddressAttribute",
    "Description": "Resets the attribute of the specified IP address"
  },
  {
    "API": "ec2:ResetEbsDefaultKmsKeyId",
    "EventSource": "ec2",
    "EventName": "ResetEbsDefaultKmsKeyId",
    "Description": "Resets the default KMS key for EBS encryption for your account in this Region to the Amazon Web Services managed KMS key for EBS"
  },
  {
    "API": "ec2:ResetFpgaImageAttribute",
    "EventSource": "ec2",
    "EventName": "ResetFpgaImageAttribute",
    "Description": "Resets the specified attribute of the specified Amazon FPGA Image (AFI) to its default value"
  },
  {
    "API": "ec2:ResetImageAttribute",
    "EventSource": "ec2",
    "EventName": "ResetImageAttribute",
    "Description": "Resets an attribute of an AMI to its default value"
  },
  {
    "API": "ec2:ResetInstanceAttribute",
    "EventSource": "ec2",
    "EventName": "ResetInstanceAttribute",
    "Description": "Resets an attribute of an instance to its default value"
  },
  {
    "API": "ec2:ResetNetworkInterfaceAttribute",
    "EventSource": "ec2",
    "EventName": "ResetNetworkInterfaceAttribute",
    "Description": "Resets a network interface attribute"
  },
  {
    "API": "ec2:ResetSnapshotAttribute",
    "EventSource": "ec2",
    "EventName": "ResetSnapshotAttribute",
    "Description": "Resets permission settings for the specified snapshot"
  },
  {
    "API": "ec2:RestoreAddressToClassic",
    "EventSource": "ec2",
    "EventName": "RestoreAddressToClassic",
    "Description": ""
  },
  {
    "API": "ec2:RestoreImageFromRecycleBin",
    "EventSource": "ec2",
    "EventName": "RestoreImageFromRecycleBin",
    "Description": "Restores an AMI from the Recycle Bin"
  },
  {
    "API": "ec2:RestoreManagedPrefixListVersion",
    "EventSource": "ec2",
    "EventName": "RestoreManagedPrefixListVersion",
    "Description": "Restores the entries from a previous version of a managed prefix list to a new version of the prefix list"
  },
  {
    "API": "ec2:RestoreSnapshotFromRecycleBin",
    "EventSource": "ec2",
    "EventName": "RestoreSnapshotFromRecycleBin",
    "Description": "Restores a snapshot from the Recycle Bin"
  },
  {
    "API": "ec2:RestoreSnapshotTier",
    "EventSource": "ec2",
    "EventName": "RestoreSnapshotTier",
    "Description": "Restores an archived Amazon EBS snapshot for use temporarily or permanently, or modifies the restore period or restore type for a snapshot that was previously temporarily restored"
  },
  {
    "API": "ec2:RevokeClientVpnIngress",
    "EventSource": "ec2",
    "EventName": "RevokeClientVpnIngress",
    "Description": "Removes an ingress authorization rule from a Client VPN endpoint"
  },
  {
    "API": "ec2:RevokeSecurityGroupEgress",
    "EventSource": "ec2",
    "EventName": "RevokeSecurityGroupEgress",
    "Description": "Removes the specified outbound (egress) rules from the specified security group"
  },
  {
    "API": "ec2:RevokeSecurityGroupIngress",
    "EventSource": "ec2",
    "EventName": "RevokeSecurityGroupIngress",
    "Description": "Removes the specified inbound (ingress) rules from a security group"
  },
  {
    "API": "ec2:RunInstances",
    "EventSource": "ec2",
    "EventName": "RunInstances",
    "Description": "Launches the specified number of instances using an AMI for which you have permissions"
  },
  {
    "API": "ec2:RunScheduledInstances",
    "EventSource": "ec2",
    "EventName": "RunScheduledInstances",
    "Description": "Launches the specified Scheduled Instances"
  },
  {
    "API": "ec2:SearchLocalGatewayRoutes",
    "EventSource": "ec2",
    "EventName": "SearchLocalGatewayRoutes",
    "Description": "Searches for routes in the specified local gateway route table"
  },
  {
    "API": "ec2:SearchTransitGatewayMulticastGroups",
    "EventSource": "ec2",
    "EventName": "SearchTransitGatewayMulticastGroups",
    "Description": "Searches one or more transit gateway multicast groups and returns the group membership information"
  },
  {
    "API": "ec2:SearchTransitGatewayRoutes",
    "EventSource": "ec2",
    "EventName": "SearchTransitGatewayRoutes",
    "Description": "Searches for routes in the specified transit gateway route table"
  },
  {
    "API": "ec2:SendDiagnosticInterrupt",
    "EventSource": "ec2",
    "EventName": "SendDiagnosticInterrupt",
    "Description": "Sends a diagnostic interrupt to the specified Amazon EC2 instance to trigger a *kernel panic* (on Linux instances), or a *blue screen*/*stop error* (on Windows instances)"
  },
  {
    "API": "ec2:StartInstances",
    "EventSource": "ec2",
    "EventName": "StartInstances",
    "Description": "Starts an Amazon EBS-backed instance that you've previously stopped"
  },
  {
    "API": "ec2:StartNetworkInsightsAccessScopeAnalysis",
    "EventSource": "ec2",
    "EventName": "StartNetworkInsightsAccessScopeAnalysis",
    "Description": "Starts analyzing the specified Network Access Scope"
  },
  {
    "API": "ec2:StartNetworkInsightsAnalysis",
    "EventSource": "ec2",
    "EventName": "StartNetworkInsightsAnalysis",
    "Description": "Starts analyzing the specified path"
  },
  {
    "API": "ec2:StartVpcEndpointServicePrivateDnsVerification",
    "EventSource": "ec2",
    "EventName": "StartVpcEndpointServicePrivateDnsVerification",
    "Description": "Initiates the verification process to prove that the service provider owns the private DNS name domain for the endpoint service"
  },
  {
    "API": "ec2:StopInstances",
    "EventSource": "ec2",
    "EventName": "StopInstances",
    "Description": "Stops an Amazon EBS-backed instance"
  },
  {
    "API": "ec2:TerminateClientVpnConnections",
    "EventSource": "ec2",
    "EventName": "TerminateClientVpnConnections",
    "Description": "Terminates active Client VPN endpoint connections"
  },
  {
    "API": "ec2:TerminateInstances",
    "EventSource": "ec2",
    "EventName": "TerminateInstances",
    "Description": "Shuts down the specified instances"
  },
  {
    "API": "ec2:UnassignIpv6Addresses",
    "EventSource": "ec2",
    "EventName": "UnassignIpv6Addresses",
    "Description": "Unassigns one or more IPv6 addresses IPv4 Prefix Delegation prefixes from a network interface"
  },
  {
    "API": "ec2:UnassignPrivateIpAddresses",
    "EventSource": "ec2",
    "EventName": "UnassignPrivateIpAddresses",
    "Description": "Unassigns one or more secondary private IP addresses, or IPv4 Prefix Delegation prefixes from a network interface"
  },
  {
    "API": "ec2:UnassignPrivateNatGatewayAddress",
    "EventSource": "ec2",
    "EventName": "UnassignPrivateNatGatewayAddress",
    "Description": "Unassigns secondary private IPv4 addresses from a private NAT gateway"
  },
  {
    "API": "ec2:UnlockSnapshot",
    "EventSource": "ec2",
    "EventName": "UnlockSnapshot",
    "Description": "Unlocks a snapshot that is locked in governance mode or that is locked in compliance mode but still in the cooling-off period"
  },
  {
    "API": "ec2:UnmonitorInstances",
    "EventSource": "ec2",
    "EventName": "UnmonitorInstances",
    "Description": "Disables detailed monitoring for a running instance"
  },
  {
    "API": "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
    "EventSource": "ec2",
    "EventName": "UpdateSecurityGroupRuleDescriptionsEgress",
    "Description": "Updates the description of an egress (outbound) security group rule"
  },
  {
    "API": "ec2:UpdateSecurityGroupRuleDescriptionsIngress",
    "EventSource": "ec2",
    "EventName": "UpdateSecurityGroupRuleDescriptionsIngress",
    "Description": "Updates the description of an ingress (inbound) security group rule"
  },
  {
    "API": "ec2:WithdrawByoipCidr",
    "EventSource": "ec2",
    "EventName": "WithdrawByoipCidr",
    "Description": "Stops advertising an address range that is provisioned as an address pool"
  },
  {
    "API": "ec2-instance-connect:GeneratePresignedUrl",
    "EventSource": "ec2-instance-connect",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "ec2-instance-connect:SendSerialConsoleSshPublicKey",
    "EventSource": "ec2-instance-connect",
    "EventName": "SendSerialConsoleSshPublicKey",
    "Description": "Pushes an SSH public key to the specified EC2 instance"
  },
  {
    "API": "ec2-instance-connect:SendSshPublicKey",
    "EventSource": "ec2-instance-connect",
    "EventName": "SendSshPublicKey",
    "Description": "Pushes an SSH public key to the specified EC2 instance for use by the specified user"
  },
  {
    "API": "ecr:BatchCheckLayerAvailability",
    "EventSource": "ecr",
    "EventName": "BatchCheckLayerAvailability",
    "Description": "Checks the availability of one or more image layers in a repository"
  },
  {
    "API": "ecr:BatchDeleteImage",
    "EventSource": "ecr",
    "EventName": "BatchDeleteImage",
    "Description": "Deletes a list of specified images within a repository"
  },
  {
    "API": "ecr:BatchGetImage",
    "EventSource": "ecr",
    "EventName": "BatchGetImage",
    "Description": "Gets detailed information for an image"
  },
  {
    "API": "ecr:BatchGetRepositoryScanningConfiguration",
    "EventSource": "ecr",
    "EventName": "BatchGetRepositoryScanningConfiguration",
    "Description": "Gets the scanning configuration for one or more repositories"
  },
  {
    "API": "ecr:CompleteLayerUpload",
    "EventSource": "ecr",
    "EventName": "CompleteLayerUpload",
    "Description": "Informs Amazon ECR that the image layer upload has completed for a specified registry, repository name, and upload ID"
  },
  {
    "API": "ecr:CreatePullThroughCacheRule",
    "EventSource": "ecr",
    "EventName": "CreatePullThroughCacheRule",
    "Description": "Creates a pull through cache rule"
  },
  {
    "API": "ecr:CreateRepository",
    "EventSource": "ecr",
    "EventName": "CreateRepository",
    "Description": "Creates a repository"
  },
  {
    "API": "ecr:DeleteLifecyclePolicy",
    "EventSource": "ecr",
    "EventName": "DeleteLifecyclePolicy",
    "Description": "Deletes the lifecycle policy associated with the specified repository"
  },
  {
    "API": "ecr:DeletePullThroughCacheRule",
    "EventSource": "ecr",
    "EventName": "DeletePullThroughCacheRule",
    "Description": "Deletes a pull through cache rule"
  },
  {
    "API": "ecr:DeleteRegistryPolicy",
    "EventSource": "ecr",
    "EventName": "DeleteRegistryPolicy",
    "Description": "Deletes the registry permissions policy"
  },
  {
    "API": "ecr:DeleteRepository",
    "EventSource": "ecr",
    "EventName": "DeleteRepository",
    "Description": "Deletes a repository"
  },
  {
    "API": "ecr:DeleteRepositoryPolicy",
    "EventSource": "ecr",
    "EventName": "DeleteRepositoryPolicy",
    "Description": "Deletes the repository policy associated with the specified repository"
  },
  {
    "API": "ecr:DescribeImageReplicationStatus",
    "EventSource": "ecr",
    "EventName": "DescribeImageReplicationStatus",
    "Description": "Returns the replication status for a specified image"
  },
  {
    "API": "ecr:DescribeImageScanFindings",
    "EventSource": "ecr",
    "EventName": "DescribeImageScanFindings",
    "Description": "Returns the scan findings for the specified image"
  },
  {
    "API": "ecr:DescribeImages",
    "EventSource": "ecr",
    "EventName": "DescribeImages",
    "Description": "Returns metadata about the images in a repository"
  },
  {
    "API": "ecr:DescribePullThroughCacheRules",
    "EventSource": "ecr",
    "EventName": "DescribePullThroughCacheRules",
    "Description": "Returns the pull through cache rules for a registry"
  },
  {
    "API": "ecr:DescribeRegistry",
    "EventSource": "ecr",
    "EventName": "DescribeRegistry",
    "Description": "Describes the settings for a registry"
  },
  {
    "API": "ecr:DescribeRepositories",
    "EventSource": "ecr",
    "EventName": "DescribeRepositories",
    "Description": "Describes image repositories in a registry"
  },
  {
    "API": "ecr:GeneratePresignedUrl",
    "EventSource": "ecr",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "ecr:GetAuthorizationToken",
    "EventSource": "ecr",
    "EventName": "GetAuthorizationToken",
    "Description": "Retrieves an authorization token"
  },
  {
    "API": "ecr:GetDownloadUrlForLayer",
    "EventSource": "ecr",
    "EventName": "GetDownloadUrlForLayer",
    "Description": "Retrieves the pre-signed Amazon S3 download URL corresponding to an image layer"
  },
  {
    "API": "ecr:GetLifecyclePolicy",
    "EventSource": "ecr",
    "EventName": "GetLifecyclePolicy",
    "Description": "Retrieves the lifecycle policy for the specified repository"
  },
  {
    "API": "ecr:GetLifecyclePolicyPreview",
    "EventSource": "ecr",
    "EventName": "GetLifecyclePolicyPreview",
    "Description": "Retrieves the results of the lifecycle policy preview request for the specified repository"
  },
  {
    "API": "ecr:GetRegistryPolicy",
    "EventSource": "ecr",
    "EventName": "GetRegistryPolicy",
    "Description": "Retrieves the permissions policy for a registry"
  },
  {
    "API": "ecr:GetRegistryScanningConfiguration",
    "EventSource": "ecr",
    "EventName": "GetRegistryScanningConfiguration",
    "Description": "Retrieves the scanning configuration for a registry"
  },
  {
    "API": "ecr:GetRepositoryPolicy",
    "EventSource": "ecr",
    "EventName": "GetRepositoryPolicy",
    "Description": "Retrieves the repository policy for the specified repository"
  },
  {
    "API": "ecr:InitiateLayerUpload",
    "EventSource": "ecr",
    "EventName": "InitiateLayerUpload",
    "Description": "Notifies Amazon ECR that you intend to upload an image layer"
  },
  {
    "API": "ecr:ListImages",
    "EventSource": "ecr",
    "EventName": "ListImages",
    "Description": "Lists all the image IDs for the specified repository"
  },
  {
    "API": "ecr:ListTagsForResource",
    "EventSource": "ecr",
    "EventName": "ListTagsForResource",
    "Description": "List the tags for an Amazon ECR resource"
  },
  {
    "API": "ecr:PutImage",
    "EventSource": "ecr",
    "EventName": "PutImage",
    "Description": "Creates or updates the image manifest and tags associated with an image"
  },
  {
    "API": "ecr:PutImageScanningConfiguration",
    "EventSource": "ecr",
    "EventName": "PutImageScanningConfiguration",
    "Description": ""
  },
  {
    "API": "ecr:PutImageTagMutability",
    "EventSource": "ecr",
    "EventName": "PutImageTagMutability",
    "Description": "Updates the image tag mutability settings for the specified repository"
  },
  {
    "API": "ecr:PutLifecyclePolicy",
    "EventSource": "ecr",
    "EventName": "PutLifecyclePolicy",
    "Description": "Creates or updates the lifecycle policy for the specified repository"
  },
  {
    "API": "ecr:PutRegistryPolicy",
    "EventSource": "ecr",
    "EventName": "PutRegistryPolicy",
    "Description": "Creates or updates the permissions policy for your registry"
  },
  {
    "API": "ecr:PutRegistryScanningConfiguration",
    "EventSource": "ecr",
    "EventName": "PutRegistryScanningConfiguration",
    "Description": "Creates or updates the scanning configuration for your private registry"
  },
  {
    "API": "ecr:PutReplicationConfiguration",
    "EventSource": "ecr",
    "EventName": "PutReplicationConfiguration",
    "Description": "Creates or updates the replication configuration for a registry"
  },
  {
    "API": "ecr:SetRepositoryPolicy",
    "EventSource": "ecr",
    "EventName": "SetRepositoryPolicy",
    "Description": "Applies a repository policy to the specified repository to control access permissions"
  },
  {
    "API": "ecr:StartImageScan",
    "EventSource": "ecr",
    "EventName": "StartImageScan",
    "Description": "Starts an image vulnerability scan"
  },
  {
    "API": "ecr:StartLifecyclePolicyPreview",
    "EventSource": "ecr",
    "EventName": "StartLifecyclePolicyPreview",
    "Description": "Starts a preview of a lifecycle policy for the specified repository"
  },
  {
    "API": "ecr:TagResource",
    "EventSource": "ecr",
    "EventName": "TagResource",
    "Description": "Adds specified tags to a resource with the specified ARN"
  },
  {
    "API": "ecr:UntagResource",
    "EventSource": "ecr",
    "EventName": "UntagResource",
    "Description": "Deletes specified tags from a resource"
  },
  {
    "API": "ecr:UpdatePullThroughCacheRule",
    "EventSource": "ecr",
    "EventName": "UpdatePullThroughCacheRule",
    "Description": "Updates an existing pull through cache rule"
  },
  {
    "API": "ecr:UploadLayerPart",
    "EventSource": "ecr",
    "EventName": "UploadLayerPart",
    "Description": "Uploads an image layer part to Amazon ECR"
  },
  {
    "API": "ecr:ValidatePullThroughCacheRule",
    "EventSource": "ecr",
    "EventName": "ValidatePullThroughCacheRule",
    "Description": "Validates an existing pull through cache rule for an upstream registry that requires authentication"
  },
  {
    "API": "ecr-public:BatchCheckLayerAvailability",
    "EventSource": "ecr-public",
    "EventName": "BatchCheckLayerAvailability",
    "Description": "Checks the availability of one or more image layers that are within a repository in a public registry"
  },
  {
    "API": "ecr-public:BatchDeleteImage",
    "EventSource": "ecr-public",
    "EventName": "BatchDeleteImage",
    "Description": "Deletes a list of specified images that are within a repository in a public registry"
  },
  {
    "API": "ecr-public:CompleteLayerUpload",
    "EventSource": "ecr-public",
    "EventName": "CompleteLayerUpload",
    "Description": "Informs Amazon ECR that the image layer upload is complete for a specified public registry, repository name, and upload ID"
  },
  {
    "API": "ecr-public:CreateRepository",
    "EventSource": "ecr-public",
    "EventName": "CreateRepository",
    "Description": "Creates a repository in a public registry"
  },
  {
    "API": "ecr-public:DeleteRepository",
    "EventSource": "ecr-public",
    "EventName": "DeleteRepository",
    "Description": "Deletes a repository in a public registry"
  },
  {
    "API": "ecr-public:DeleteRepositoryPolicy",
    "EventSource": "ecr-public",
    "EventName": "DeleteRepositoryPolicy",
    "Description": "Deletes the repository policy that's associated with the specified repository"
  },
  {
    "API": "ecr-public:DescribeImageTags",
    "EventSource": "ecr-public",
    "EventName": "DescribeImageTags",
    "Description": "Returns the image tag details for a repository in a public registry"
  },
  {
    "API": "ecr-public:DescribeImages",
    "EventSource": "ecr-public",
    "EventName": "DescribeImages",
    "Description": "Returns metadata that's related to the images in a repository in a public registry"
  },
  {
    "API": "ecr-public:DescribeRegistries",
    "EventSource": "ecr-public",
    "EventName": "DescribeRegistries",
    "Description": "Returns details for a public registry"
  },
  {
    "API": "ecr-public:DescribeRepositories",
    "EventSource": "ecr-public",
    "EventName": "DescribeRepositories",
    "Description": "Describes repositories that are in a public registry"
  },
  {
    "API": "ecr-public:GeneratePresignedUrl",
    "EventSource": "ecr-public",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "ecr-public:GetAuthorizationToken",
    "EventSource": "ecr-public",
    "EventName": "GetAuthorizationToken",
    "Description": "Retrieves an authorization token"
  },
  {
    "API": "ecr-public:GetRegistryCatalogData",
    "EventSource": "ecr-public",
    "EventName": "GetRegistryCatalogData",
    "Description": "Retrieves catalog metadata for a public registry"
  },
  {
    "API": "ecr-public:GetRepositoryCatalogData",
    "EventSource": "ecr-public",
    "EventName": "GetRepositoryCatalogData",
    "Description": "Retrieve catalog metadata for a repository in a public registry"
  },
  {
    "API": "ecr-public:GetRepositoryPolicy",
    "EventSource": "ecr-public",
    "EventName": "GetRepositoryPolicy",
    "Description": "Retrieves the repository policy for the specified repository"
  },
  {
    "API": "ecr-public:InitiateLayerUpload",
    "EventSource": "ecr-public",
    "EventName": "InitiateLayerUpload",
    "Description": "Notifies Amazon ECR that you intend to upload an image layer"
  },
  {
    "API": "ecr-public:ListTagsForResource",
    "EventSource": "ecr-public",
    "EventName": "ListTagsForResource",
    "Description": "List the tags for an Amazon ECR Public resource"
  },
  {
    "API": "ecr-public:PutImage",
    "EventSource": "ecr-public",
    "EventName": "PutImage",
    "Description": "Creates or updates the image manifest and tags that are associated with an image"
  },
  {
    "API": "ecr-public:PutRegistryCatalogData",
    "EventSource": "ecr-public",
    "EventName": "PutRegistryCatalogData",
    "Description": "Create or update the catalog data for a public registry"
  },
  {
    "API": "ecr-public:PutRepositoryCatalogData",
    "EventSource": "ecr-public",
    "EventName": "PutRepositoryCatalogData",
    "Description": "Creates or updates the catalog data for a repository in a public registry"
  },
  {
    "API": "ecr-public:SetRepositoryPolicy",
    "EventSource": "ecr-public",
    "EventName": "SetRepositoryPolicy",
    "Description": "Applies a repository policy to the specified public repository to control access permissions"
  },
  {
    "API": "ecr-public:TagResource",
    "EventSource": "ecr-public",
    "EventName": "TagResource",
    "Description": "Associates the specified tags to a resource with the specified ``resourceArn``"
  },
  {
    "API": "ecr-public:UntagResource",
    "EventSource": "ecr-public",
    "EventName": "UntagResource",
    "Description": "Deletes specified tags from a resource"
  },
  {
    "API": "ecr-public:UploadLayerPart",
    "EventSource": "ecr-public",
    "EventName": "UploadLayerPart",
    "Description": "Uploads an image layer part to Amazon ECR"
  },
  {
    "API": "ecs:CreateCapacityProvider",
    "EventSource": "ecs",
    "EventName": "CreateCapacityProvider",
    "Description": "Creates a new capacity provider"
  },
  {
    "API": "ecs:CreateCluster",
    "EventSource": "ecs",
    "EventName": "CreateCluster",
    "Description": "Creates a new Amazon ECS cluster"
  },
  {
    "API": "ecs:CreateService",
    "EventSource": "ecs",
    "EventName": "CreateService",
    "Description": "Runs and maintains your desired number of tasks from a specified task definition"
  },
  {
    "API": "ecs:CreateTaskSet",
    "EventSource": "ecs",
    "EventName": "CreateTaskSet",
    "Description": "Create a task set in the specified cluster and service"
  },
  {
    "API": "ecs:DeleteAccountSetting",
    "EventSource": "ecs",
    "EventName": "DeleteAccountSetting",
    "Description": "Disables an account setting for a specified user, role, or the root user for an account"
  },
  {
    "API": "ecs:DeleteAttributes",
    "EventSource": "ecs",
    "EventName": "DeleteAttributes",
    "Description": "Deletes one or more custom attributes from an Amazon ECS resource"
  },
  {
    "API": "ecs:DeleteCapacityProvider",
    "EventSource": "ecs",
    "EventName": "DeleteCapacityProvider",
    "Description": "Deletes the specified capacity provider"
  },
  {
    "API": "ecs:DeleteCluster",
    "EventSource": "ecs",
    "EventName": "DeleteCluster",
    "Description": "Deletes the specified cluster"
  },
  {
    "API": "ecs:DeleteService",
    "EventSource": "ecs",
    "EventName": "DeleteService",
    "Description": "Deletes a specified service within a cluster"
  },
  {
    "API": "ecs:DeleteTaskDefinitions",
    "EventSource": "ecs",
    "EventName": "DeleteTaskDefinitions",
    "Description": "Deletes one or more task definitions"
  },
  {
    "API": "ecs:DeleteTaskSet",
    "EventSource": "ecs",
    "EventName": "DeleteTaskSet",
    "Description": "Deletes a specified task set within a service"
  },
  {
    "API": "ecs:DeregisterContainerInstance",
    "EventSource": "ecs",
    "EventName": "DeregisterContainerInstance",
    "Description": "Deregisters an Amazon ECS container instance from the specified cluster"
  },
  {
    "API": "ecs:DeregisterTaskDefinition",
    "EventSource": "ecs",
    "EventName": "DeregisterTaskDefinition",
    "Description": "Deregisters the specified task definition by family and revision"
  },
  {
    "API": "ecs:DescribeCapacityProviders",
    "EventSource": "ecs",
    "EventName": "DescribeCapacityProviders",
    "Description": "Describes one or more of your capacity providers"
  },
  {
    "API": "ecs:DescribeClusters",
    "EventSource": "ecs",
    "EventName": "DescribeClusters",
    "Description": "Describes one or more of your clusters"
  },
  {
    "API": "ecs:DescribeContainerInstances",
    "EventSource": "ecs",
    "EventName": "DescribeContainerInstances",
    "Description": "Describes one or more container instances"
  },
  {
    "API": "ecs:DescribeServices",
    "EventSource": "ecs",
    "EventName": "DescribeServices",
    "Description": "Describes the specified services running in your cluster"
  },
  {
    "API": "ecs:DescribeTaskDefinition",
    "EventSource": "ecs",
    "EventName": "DescribeTaskDefinition",
    "Description": "Describes a task definition"
  },
  {
    "API": "ecs:DescribeTaskSets",
    "EventSource": "ecs",
    "EventName": "DescribeTaskSets",
    "Description": "Describes the task sets in the specified cluster and service"
  },
  {
    "API": "ecs:DescribeTasks",
    "EventSource": "ecs",
    "EventName": "DescribeTasks",
    "Description": "Describes a specified task or tasks"
  },
  {
    "API": "ecs:DiscoverPollEndpoint",
    "EventSource": "ecs",
    "EventName": "DiscoverPollEndpoint",
    "Description": ""
  },
  {
    "API": "ecs:ExecuteCommand",
    "EventSource": "ecs",
    "EventName": "ExecuteCommand",
    "Description": "Runs a command remotely on a container within a task"
  },
  {
    "API": "ecs:GeneratePresignedUrl",
    "EventSource": "ecs",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "ecs:GetTaskProtection",
    "EventSource": "ecs",
    "EventName": "GetTaskProtection",
    "Description": "Retrieves the protection status of tasks in an Amazon ECS service"
  },
  {
    "API": "ecs:ListAccountSettings",
    "EventSource": "ecs",
    "EventName": "ListAccountSettings",
    "Description": "Lists the account settings for a specified principal"
  },
  {
    "API": "ecs:ListAttributes",
    "EventSource": "ecs",
    "EventName": "ListAttributes",
    "Description": "Lists the attributes for Amazon ECS resources within a specified target type and cluster"
  },
  {
    "API": "ecs:ListClusters",
    "EventSource": "ecs",
    "EventName": "ListClusters",
    "Description": "Returns a list of existing clusters"
  },
  {
    "API": "ecs:ListContainerInstances",
    "EventSource": "ecs",
    "EventName": "ListContainerInstances",
    "Description": "Returns a list of container instances in a specified cluster"
  },
  {
    "API": "ecs:ListServices",
    "EventSource": "ecs",
    "EventName": "ListServices",
    "Description": "Returns a list of services"
  },
  {
    "API": "ecs:ListServicesByNamespace",
    "EventSource": "ecs",
    "EventName": "ListServicesByNamespace",
    "Description": "This operation lists all of the services that are associated with a Cloud Map namespace"
  },
  {
    "API": "ecs:ListTagsForResource",
    "EventSource": "ecs",
    "EventName": "ListTagsForResource",
    "Description": "List the tags for an Amazon ECS resource"
  },
  {
    "API": "ecs:ListTaskDefinitionFamilies",
    "EventSource": "ecs",
    "EventName": "ListTaskDefinitionFamilies",
    "Description": "Returns a list of task definition families that are registered to your account"
  },
  {
    "API": "ecs:ListTaskDefinitions",
    "EventSource": "ecs",
    "EventName": "ListTaskDefinitions",
    "Description": "Returns a list of task definitions that are registered to your account"
  },
  {
    "API": "ecs:ListTasks",
    "EventSource": "ecs",
    "EventName": "ListTasks",
    "Description": "Returns a list of tasks"
  },
  {
    "API": "ecs:PutAccountSetting",
    "EventSource": "ecs",
    "EventName": "PutAccountSetting",
    "Description": "Modifies an account setting"
  },
  {
    "API": "ecs:PutAccountSettingDefault",
    "EventSource": "ecs",
    "EventName": "PutAccountSettingDefault",
    "Description": "Modifies an account setting for all users on an account for whom no individual account setting has been specified"
  },
  {
    "API": "ecs:PutAttributes",
    "EventSource": "ecs",
    "EventName": "PutAttributes",
    "Description": "Create or update an attribute on an Amazon ECS resource"
  },
  {
    "API": "ecs:PutClusterCapacityProviders",
    "EventSource": "ecs",
    "EventName": "PutClusterCapacityProviders",
    "Description": "Modifies the available capacity providers and the default capacity provider strategy for a cluster"
  },
  {
    "API": "ecs:RegisterContainerInstance",
    "EventSource": "ecs",
    "EventName": "RegisterContainerInstance",
    "Description": ""
  },
  {
    "API": "ecs:RegisterTaskDefinition",
    "EventSource": "ecs",
    "EventName": "RegisterTaskDefinition",
    "Description": "Registers a new task definition from the supplied ``family`` and ``containerDefinitions``"
  },
  {
    "API": "ecs:RunTask",
    "EventSource": "ecs",
    "EventName": "RunTask",
    "Description": "Starts a new task using the specified task definition"
  },
  {
    "API": "ecs:StartTask",
    "EventSource": "ecs",
    "EventName": "StartTask",
    "Description": "Starts a new task from the specified task definition on the specified container instance or instances"
  },
  {
    "API": "ecs:StopTask",
    "EventSource": "ecs",
    "EventName": "StopTask",
    "Description": "Stops a running task"
  },
  {
    "API": "ecs:SubmitAttachmentStateChanges",
    "EventSource": "ecs",
    "EventName": "SubmitAttachmentStateChanges",
    "Description": ""
  },
  {
    "API": "ecs:SubmitContainerStateChange",
    "EventSource": "ecs",
    "EventName": "SubmitContainerStateChange",
    "Description": ""
  },
  {
    "API": "ecs:SubmitTaskStateChange",
    "EventSource": "ecs",
    "EventName": "SubmitTaskStateChange",
    "Description": ""
  },
  {
    "API": "ecs:TagResource",
    "EventSource": "ecs",
    "EventName": "TagResource",
    "Description": "Associates the specified tags to a resource with the specified ``resourceArn``"
  },
  {
    "API": "ecs:UntagResource",
    "EventSource": "ecs",
    "EventName": "UntagResource",
    "Description": "Deletes specified tags from a resource"
  },
  {
    "API": "ecs:UpdateCapacityProvider",
    "EventSource": "ecs",
    "EventName": "UpdateCapacityProvider",
    "Description": "Modifies the parameters for a capacity provider"
  },
  {
    "API": "ecs:UpdateCluster",
    "EventSource": "ecs",
    "EventName": "UpdateCluster",
    "Description": "Updates the cluster"
  },
  {
    "API": "ecs:UpdateClusterSettings",
    "EventSource": "ecs",
    "EventName": "UpdateClusterSettings",
    "Description": "Modifies the settings to use for a cluster"
  },
  {
    "API": "ecs:UpdateContainerAgent",
    "EventSource": "ecs",
    "EventName": "UpdateContainerAgent",
    "Description": "Updates the Amazon ECS container agent on a specified container instance"
  },
  {
    "API": "ecs:UpdateContainerInstancesState",
    "EventSource": "ecs",
    "EventName": "UpdateContainerInstancesState",
    "Description": "Modifies the status of an Amazon ECS container instance"
  },
  {
    "API": "ecs:UpdateService",
    "EventSource": "ecs",
    "EventName": "UpdateService",
    "Description": "Modifies the parameters of a service"
  },
  {
    "API": "ecs:UpdateServicePrimaryTaskSet",
    "EventSource": "ecs",
    "EventName": "UpdateServicePrimaryTaskSet",
    "Description": "Modifies which task set in a service is the primary task set"
  },
  {
    "API": "ecs:UpdateTaskProtection",
    "EventSource": "ecs",
    "EventName": "UpdateTaskProtection",
    "Description": "Updates the protection status of a task"
  },
  {
    "API": "ecs:UpdateTaskSet",
    "EventSource": "ecs",
    "EventName": "UpdateTaskSet",
    "Description": "Modifies a task set"
  },
  {
    "API": "efs:CreateAccessPoint",
    "EventSource": "efs",
    "EventName": "CreateAccessPoint",
    "Description": "Creates an EFS access point"
  },
  {
    "API": "efs:CreateFileSystem",
    "EventSource": "efs",
    "EventName": "CreateFileSystem",
    "Description": "Creates a new, empty file system"
  },
  {
    "API": "efs:CreateMountTarget",
    "EventSource": "efs",
    "EventName": "CreateMountTarget",
    "Description": "Creates a mount target for a file system"
  },
  {
    "API": "efs:CreateReplicationConfiguration",
    "EventSource": "efs",
    "EventName": "CreateReplicationConfiguration",
    "Description": "Creates a replication configuration that replicates an existing EFS file system to a new, read-only file system"
  },
  {
    "API": "efs:CreateTags",
    "EventSource": "efs",
    "EventName": "CreateTags",
    "Description": ""
  },
  {
    "API": "efs:DeleteAccessPoint",
    "EventSource": "efs",
    "EventName": "DeleteAccessPoint",
    "Description": "Deletes the specified access point"
  },
  {
    "API": "efs:DeleteFileSystem",
    "EventSource": "efs",
    "EventName": "DeleteFileSystem",
    "Description": "Deletes a file system, permanently severing access to its contents"
  },
  {
    "API": "efs:DeleteFileSystemPolicy",
    "EventSource": "efs",
    "EventName": "DeleteFileSystemPolicy",
    "Description": "Deletes the ``FileSystemPolicy`` for the specified file system"
  },
  {
    "API": "efs:DeleteMountTarget",
    "EventSource": "efs",
    "EventName": "DeleteMountTarget",
    "Description": "Deletes the specified mount target"
  },
  {
    "API": "efs:DeleteReplicationConfiguration",
    "EventSource": "efs",
    "EventName": "DeleteReplicationConfiguration",
    "Description": "Deletes a replication configuration"
  },
  {
    "API": "efs:DeleteTags",
    "EventSource": "efs",
    "EventName": "DeleteTags",
    "Description": ""
  },
  {
    "API": "efs:DescribeAccessPoints",
    "EventSource": "efs",
    "EventName": "DescribeAccessPoints",
    "Description": "Returns the description of a specific Amazon EFS access point if the ``AccessPointId`` is provided"
  },
  {
    "API": "efs:DescribeAccountPreferences",
    "EventSource": "efs",
    "EventName": "DescribeAccountPreferences",
    "Description": "Returns the account preferences settings for the Amazon Web Services account associated with the user making the request, in the current Amazon Web Services Region"
  },
  {
    "API": "efs:DescribeBackupPolicy",
    "EventSource": "efs",
    "EventName": "DescribeBackupPolicy",
    "Description": "Returns the backup policy for the specified EFS file system"
  },
  {
    "API": "efs:DescribeFileSystemPolicy",
    "EventSource": "efs",
    "EventName": "DescribeFileSystemPolicy",
    "Description": "Returns the ``FileSystemPolicy`` for the specified EFS file system"
  },
  {
    "API": "efs:DescribeFileSystems",
    "EventSource": "efs",
    "EventName": "DescribeFileSystems",
    "Description": "Returns the description of a specific Amazon EFS file system if either the file system ``CreationToken`` or the ``FileSystemId`` is provided"
  },
  {
    "API": "efs:DescribeLifecycleConfiguration",
    "EventSource": "efs",
    "EventName": "DescribeLifecycleConfiguration",
    "Description": "Returns the current ``LifecycleConfiguration`` object for the specified Amazon EFS file system"
  },
  {
    "API": "efs:DescribeMountTargetSecurityGroups",
    "EventSource": "efs",
    "EventName": "DescribeMountTargetSecurityGroups",
    "Description": "Returns the security groups currently in effect for a mount target"
  },
  {
    "API": "efs:DescribeMountTargets",
    "EventSource": "efs",
    "EventName": "DescribeMountTargets",
    "Description": "Returns the descriptions of all the current mount targets, or a specific mount target, for a file system"
  },
  {
    "API": "efs:DescribeReplicationConfigurations",
    "EventSource": "efs",
    "EventName": "DescribeReplicationConfigurations",
    "Description": "Retrieves the replication configuration for a specific file system"
  },
  {
    "API": "efs:DescribeTags",
    "EventSource": "efs",
    "EventName": "DescribeTags",
    "Description": ""
  },
  {
    "API": "efs:GeneratePresignedUrl",
    "EventSource": "efs",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "efs:ListTagsForResource",
    "EventSource": "efs",
    "EventName": "ListTagsForResource",
    "Description": "Lists all tags for a top-level EFS resource"
  },
  {
    "API": "efs:ModifyMountTargetSecurityGroups",
    "EventSource": "efs",
    "EventName": "ModifyMountTargetSecurityGroups",
    "Description": "Modifies the set of security groups in effect for a mount target"
  },
  {
    "API": "efs:PutAccountPreferences",
    "EventSource": "efs",
    "EventName": "PutAccountPreferences",
    "Description": "Use this operation to set the account preference in the current Amazon Web Services Region to use long 17 character (63 bit) or short 8 character (32 bit) resource IDs for new EFS file system and mount target resources"
  },
  {
    "API": "efs:PutBackupPolicy",
    "EventSource": "efs",
    "EventName": "PutBackupPolicy",
    "Description": "Updates the file system's backup policy"
  },
  {
    "API": "efs:PutFileSystemPolicy",
    "EventSource": "efs",
    "EventName": "PutFileSystemPolicy",
    "Description": "Applies an Amazon EFS ``FileSystemPolicy`` to an Amazon EFS file system"
  },
  {
    "API": "efs:PutLifecycleConfiguration",
    "EventSource": "efs",
    "EventName": "PutLifecycleConfiguration",
    "Description": "Use this action to manage storage for your file system"
  },
  {
    "API": "efs:TagResource",
    "EventSource": "efs",
    "EventName": "TagResource",
    "Description": "Creates a tag for an EFS resource"
  },
  {
    "API": "efs:UntagResource",
    "EventSource": "efs",
    "EventName": "UntagResource",
    "Description": "Removes tags from an EFS resource"
  },
  {
    "API": "efs:UpdateFileSystem",
    "EventSource": "efs",
    "EventName": "UpdateFileSystem",
    "Description": "Updates the throughput mode or the amount of provisioned throughput of an existing file system"
  },
  {
    "API": "efs:UpdateFileSystemProtection",
    "EventSource": "efs",
    "EventName": "UpdateFileSystemProtection",
    "Description": "Updates protection on the file system"
  },
  {
    "API": "eks:AssociateAccessPolicy",
    "EventSource": "eks",
    "EventName": "AssociateAccessPolicy",
    "Description": "Associates an access policy and its scope to an access entry"
  },
  {
    "API": "eks:AssociateEncryptionConfig",
    "EventSource": "eks",
    "EventName": "AssociateEncryptionConfig",
    "Description": "Associates an encryption configuration to an existing cluster"
  },
  {
    "API": "eks:AssociateIdentityProviderConfig",
    "EventSource": "eks",
    "EventName": "AssociateIdentityProviderConfig",
    "Description": "Associates an identity provider configuration to a cluster"
  },
  {
    "API": "eks:CreateAccessEntry",
    "EventSource": "eks",
    "EventName": "CreateAccessEntry",
    "Description": "Creates an access entry"
  },
  {
    "API": "eks:CreateAddon",
    "EventSource": "eks",
    "EventName": "CreateAddon",
    "Description": "Creates an Amazon EKS add-on"
  },
  {
    "API": "eks:CreateCluster",
    "EventSource": "eks",
    "EventName": "CreateCluster",
    "Description": "Creates an Amazon EKS control plane"
  },
  {
    "API": "eks:CreateEksAnywhereSubscription",
    "EventSource": "eks",
    "EventName": "CreateEksAnywhereSubscription",
    "Description": "Creates an EKS Anywhere subscription"
  },
  {
    "API": "eks:CreateFargateProfile",
    "EventSource": "eks",
    "EventName": "CreateFargateProfile",
    "Description": "Creates an Fargate profile for your Amazon EKS cluster"
  },
  {
    "API": "eks:CreateNodegroup",
    "EventSource": "eks",
    "EventName": "CreateNodegroup",
    "Description": "Creates a managed node group for an Amazon EKS cluster"
  },
  {
    "API": "eks:CreatePodIdentityAssociation",
    "EventSource": "eks",
    "EventName": "CreatePodIdentityAssociation",
    "Description": "Creates an EKS Pod Identity association between a service account in an Amazon EKS cluster and an IAM role with *EKS Pod Identity*"
  },
  {
    "API": "eks:DeleteAccessEntry",
    "EventSource": "eks",
    "EventName": "DeleteAccessEntry",
    "Description": "Deletes an access entry"
  },
  {
    "API": "eks:DeleteAddon",
    "EventSource": "eks",
    "EventName": "DeleteAddon",
    "Description": "Deletes an Amazon EKS add-on"
  },
  {
    "API": "eks:DeleteCluster",
    "EventSource": "eks",
    "EventName": "DeleteCluster",
    "Description": "Deletes an Amazon EKS cluster control plane"
  },
  {
    "API": "eks:DeleteEksAnywhereSubscription",
    "EventSource": "eks",
    "EventName": "DeleteEksAnywhereSubscription",
    "Description": "Deletes an expired or inactive subscription"
  },
  {
    "API": "eks:DeleteFargateProfile",
    "EventSource": "eks",
    "EventName": "DeleteFargateProfile",
    "Description": "Deletes an Fargate profile"
  },
  {
    "API": "eks:DeleteNodegroup",
    "EventSource": "eks",
    "EventName": "DeleteNodegroup",
    "Description": "Deletes a managed node group"
  },
  {
    "API": "eks:DeletePodIdentityAssociation",
    "EventSource": "eks",
    "EventName": "DeletePodIdentityAssociation",
    "Description": "Deletes a EKS Pod Identity association"
  },
  {
    "API": "eks:DeregisterCluster",
    "EventSource": "eks",
    "EventName": "DeregisterCluster",
    "Description": "Deregisters a connected cluster to remove it from the Amazon EKS control plane"
  },
  {
    "API": "eks:DescribeAccessEntry",
    "EventSource": "eks",
    "EventName": "DescribeAccessEntry",
    "Description": "Describes an access entry"
  },
  {
    "API": "eks:DescribeAddon",
    "EventSource": "eks",
    "EventName": "DescribeAddon",
    "Description": "Describes an Amazon EKS add-on"
  },
  {
    "API": "eks:DescribeAddonConfiguration",
    "EventSource": "eks",
    "EventName": "DescribeAddonConfiguration",
    "Description": "Returns configuration options"
  },
  {
    "API": "eks:DescribeAddonVersions",
    "EventSource": "eks",
    "EventName": "DescribeAddonVersions",
    "Description": "Describes the versions for an add-on"
  },
  {
    "API": "eks:DescribeCluster",
    "EventSource": "eks",
    "EventName": "DescribeCluster",
    "Description": "Describes an Amazon EKS cluster"
  },
  {
    "API": "eks:DescribeEksAnywhereSubscription",
    "EventSource": "eks",
    "EventName": "DescribeEksAnywhereSubscription",
    "Description": "Returns descriptive information about a subscription"
  },
  {
    "API": "eks:DescribeFargateProfile",
    "EventSource": "eks",
    "EventName": "DescribeFargateProfile",
    "Description": "Describes an Fargate profile"
  },
  {
    "API": "eks:DescribeIdentityProviderConfig",
    "EventSource": "eks",
    "EventName": "DescribeIdentityProviderConfig",
    "Description": "Describes an identity provider configuration"
  },
  {
    "API": "eks:DescribeInsight",
    "EventSource": "eks",
    "EventName": "DescribeInsight",
    "Description": "Returns details about an insight that you specify using its ID"
  },
  {
    "API": "eks:DescribeNodegroup",
    "EventSource": "eks",
    "EventName": "DescribeNodegroup",
    "Description": "Describes a managed node group"
  },
  {
    "API": "eks:DescribePodIdentityAssociation",
    "EventSource": "eks",
    "EventName": "DescribePodIdentityAssociation",
    "Description": "Returns descriptive information about an EKS Pod Identity association"
  },
  {
    "API": "eks:DescribeUpdate",
    "EventSource": "eks",
    "EventName": "DescribeUpdate",
    "Description": "Describes an update to an Amazon EKS resource"
  },
  {
    "API": "eks:DisassociateAccessPolicy",
    "EventSource": "eks",
    "EventName": "DisassociateAccessPolicy",
    "Description": "Disassociates an access policy from an access entry"
  },
  {
    "API": "eks:DisassociateIdentityProviderConfig",
    "EventSource": "eks",
    "EventName": "DisassociateIdentityProviderConfig",
    "Description": "Disassociates an identity provider configuration from a cluster"
  },
  {
    "API": "eks:GeneratePresignedUrl",
    "EventSource": "eks",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "eks:ListAccessEntries",
    "EventSource": "eks",
    "EventName": "ListAccessEntries",
    "Description": "Lists the access entries for your cluster"
  },
  {
    "API": "eks:ListAccessPolicies",
    "EventSource": "eks",
    "EventName": "ListAccessPolicies",
    "Description": "Lists the available access policies"
  },
  {
    "API": "eks:ListAddons",
    "EventSource": "eks",
    "EventName": "ListAddons",
    "Description": "Lists the installed add-ons"
  },
  {
    "API": "eks:ListAssociatedAccessPolicies",
    "EventSource": "eks",
    "EventName": "ListAssociatedAccessPolicies",
    "Description": "Lists the access policies associated with an access entry"
  },
  {
    "API": "eks:ListClusters",
    "EventSource": "eks",
    "EventName": "ListClusters",
    "Description": "Lists the Amazon EKS clusters in your Amazon Web Services account in the specified Amazon Web Services Region"
  },
  {
    "API": "eks:ListEksAnywhereSubscriptions",
    "EventSource": "eks",
    "EventName": "ListEksAnywhereSubscriptions",
    "Description": "Displays the full description of the subscription"
  },
  {
    "API": "eks:ListFargateProfiles",
    "EventSource": "eks",
    "EventName": "ListFargateProfiles",
    "Description": "Lists the Fargate profiles associated with the specified cluster in your Amazon Web Services account in the specified Amazon Web Services Region"
  },
  {
    "API": "eks:ListIdentityProviderConfigs",
    "EventSource": "eks",
    "EventName": "ListIdentityProviderConfigs",
    "Description": "Lists the identity provider configurations for your cluster"
  },
  {
    "API": "eks:ListInsights",
    "EventSource": "eks",
    "EventName": "ListInsights",
    "Description": "Returns a list of all insights checked for against the specified cluster"
  },
  {
    "API": "eks:ListNodegroups",
    "EventSource": "eks",
    "EventName": "ListNodegroups",
    "Description": "Lists the managed node groups associated with the specified cluster in your Amazon Web Services account in the specified Amazon Web Services Region"
  },
  {
    "API": "eks:ListPodIdentityAssociations",
    "EventSource": "eks",
    "EventName": "ListPodIdentityAssociations",
    "Description": "List the EKS Pod Identity associations in a cluster"
  },
  {
    "API": "eks:ListTagsForResource",
    "EventSource": "eks",
    "EventName": "ListTagsForResource",
    "Description": "List the tags for an Amazon EKS resource"
  },
  {
    "API": "eks:ListUpdates",
    "EventSource": "eks",
    "EventName": "ListUpdates",
    "Description": "Lists the updates associated with an Amazon EKS resource in your Amazon Web Services account, in the specified Amazon Web Services Region"
  },
  {
    "API": "eks:RegisterCluster",
    "EventSource": "eks",
    "EventName": "RegisterCluster",
    "Description": "Connects a Kubernetes cluster to the Amazon EKS control plane"
  },
  {
    "API": "eks:TagResource",
    "EventSource": "eks",
    "EventName": "TagResource",
    "Description": "Associates the specified tags to an Amazon EKS resource with the specified ``resourceArn``"
  },
  {
    "API": "eks:UntagResource",
    "EventSource": "eks",
    "EventName": "UntagResource",
    "Description": "Deletes specified tags from an Amazon EKS resource"
  },
  {
    "API": "eks:UpdateAccessEntry",
    "EventSource": "eks",
    "EventName": "UpdateAccessEntry",
    "Description": "Updates an access entry"
  },
  {
    "API": "eks:UpdateAddon",
    "EventSource": "eks",
    "EventName": "UpdateAddon",
    "Description": "Updates an Amazon EKS add-on"
  },
  {
    "API": "eks:UpdateClusterConfig",
    "EventSource": "eks",
    "EventName": "UpdateClusterConfig",
    "Description": "Updates an Amazon EKS cluster configuration"
  },
  {
    "API": "eks:UpdateClusterVersion",
    "EventSource": "eks",
    "EventName": "UpdateClusterVersion",
    "Description": "Updates an Amazon EKS cluster to the specified Kubernetes version"
  },
  {
    "API": "eks:UpdateEksAnywhereSubscription",
    "EventSource": "eks",
    "EventName": "UpdateEksAnywhereSubscription",
    "Description": "Update an EKS Anywhere Subscription"
  },
  {
    "API": "eks:UpdateNodegroupConfig",
    "EventSource": "eks",
    "EventName": "UpdateNodegroupConfig",
    "Description": "Updates an Amazon EKS managed node group configuration"
  },
  {
    "API": "eks:UpdateNodegroupVersion",
    "EventSource": "eks",
    "EventName": "UpdateNodegroupVersion",
    "Description": "Updates the Kubernetes version or AMI version of an Amazon EKS managed node group"
  },
  {
    "API": "eks:UpdatePodIdentityAssociation",
    "EventSource": "eks",
    "EventName": "UpdatePodIdentityAssociation",
    "Description": "Updates a EKS Pod Identity association"
  },
  {
    "API": "eks-auth:AssumeRoleForPodIdentity",
    "EventSource": "eks-auth",
    "EventName": "AssumeRoleForPodIdentity",
    "Description": "The Amazon EKS Auth API and the ``AssumeRoleForPodIdentity`` action are only used by the EKS Pod Identity Agent"
  },
  {
    "API": "eks-auth:GeneratePresignedUrl",
    "EventSource": "eks-auth",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "elastic-inference:DescribeAcceleratorOfferings",
    "EventSource": "elastic-inference",
    "EventName": "DescribeAcceleratorOfferings",
    "Description": "Describes the locations in which a given accelerator type or set of types is present in a given region"
  },
  {
    "API": "elastic-inference:DescribeAcceleratorTypes",
    "EventSource": "elastic-inference",
    "EventName": "DescribeAcceleratorTypes",
    "Description": "Describes the accelerator types available in a given region, as well as their characteristics, such as memory and throughput"
  },
  {
    "API": "elastic-inference:DescribeAccelerators",
    "EventSource": "elastic-inference",
    "EventName": "DescribeAccelerators",
    "Description": "Describes information over a provided set of accelerators belonging to an account"
  },
  {
    "API": "elastic-inference:GeneratePresignedUrl",
    "EventSource": "elastic-inference",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "elastic-inference:ListTagsForResource",
    "EventSource": "elastic-inference",
    "EventName": "ListTagsForResource",
    "Description": "Returns all tags of an Elastic Inference Accelerator"
  },
  {
    "API": "elastic-inference:TagResource",
    "EventSource": "elastic-inference",
    "EventName": "TagResource",
    "Description": "Adds the specified tags to an Elastic Inference Accelerator"
  },
  {
    "API": "elastic-inference:UntagResource",
    "EventSource": "elastic-inference",
    "EventName": "UntagResource",
    "Description": "Removes the specified tags from an Elastic Inference Accelerator"
  },
  {
    "API": "elasticache:AddTagsToResource",
    "EventSource": "elasticache",
    "EventName": "AddTagsToResource",
    "Description": "A tag is a key-value pair where the key and value are case-sensitive"
  },
  {
    "API": "elasticache:AuthorizeCacheSecurityGroupIngress",
    "EventSource": "elasticache",
    "EventName": "AuthorizeCacheSecurityGroupIngress",
    "Description": "Allows network ingress to a cache security group"
  },
  {
    "API": "elasticache:BatchApplyUpdateAction",
    "EventSource": "elasticache",
    "EventName": "BatchApplyUpdateAction",
    "Description": "Apply the service update"
  },
  {
    "API": "elasticache:BatchStopUpdateAction",
    "EventSource": "elasticache",
    "EventName": "BatchStopUpdateAction",
    "Description": "Stop the service update"
  },
  {
    "API": "elasticache:CompleteMigration",
    "EventSource": "elasticache",
    "EventName": "CompleteMigration",
    "Description": "Complete the migration of data"
  },
  {
    "API": "elasticache:CopyServerlessCacheSnapshot",
    "EventSource": "elasticache",
    "EventName": "CopyServerlessCacheSnapshot",
    "Description": "Creates a copy of an existing serverless cache’s snapshot"
  },
  {
    "API": "elasticache:CopySnapshot",
    "EventSource": "elasticache",
    "EventName": "CopySnapshot",
    "Description": "Makes a copy of an existing snapshot"
  },
  {
    "API": "elasticache:CreateCacheCluster",
    "EventSource": "elasticache",
    "EventName": "CreateCacheCluster",
    "Description": "Creates a cluster"
  },
  {
    "API": "elasticache:CreateCacheParameterGroup",
    "EventSource": "elasticache",
    "EventName": "CreateCacheParameterGroup",
    "Description": "Creates a new Amazon ElastiCache cache parameter group"
  },
  {
    "API": "elasticache:CreateCacheSecurityGroup",
    "EventSource": "elasticache",
    "EventName": "CreateCacheSecurityGroup",
    "Description": "Creates a new cache security group"
  },
  {
    "API": "elasticache:CreateCacheSubnetGroup",
    "EventSource": "elasticache",
    "EventName": "CreateCacheSubnetGroup",
    "Description": "Creates a new cache subnet group"
  },
  {
    "API": "elasticache:CreateGlobalReplicationGroup",
    "EventSource": "elasticache",
    "EventName": "CreateGlobalReplicationGroup",
    "Description": "Global Datastore for Redis offers fully managed, fast, reliable and secure cross-region replication"
  },
  {
    "API": "elasticache:CreateReplicationGroup",
    "EventSource": "elasticache",
    "EventName": "CreateReplicationGroup",
    "Description": "Creates a Redis (cluster mode disabled) or a Redis (cluster mode enabled) replication group"
  },
  {
    "API": "elasticache:CreateServerlessCache",
    "EventSource": "elasticache",
    "EventName": "CreateServerlessCache",
    "Description": "Creates a serverless cache"
  },
  {
    "API": "elasticache:CreateServerlessCacheSnapshot",
    "EventSource": "elasticache",
    "EventName": "CreateServerlessCacheSnapshot",
    "Description": "This API creates a copy of an entire ServerlessCache at a specific moment in time"
  },
  {
    "API": "elasticache:CreateSnapshot",
    "EventSource": "elasticache",
    "EventName": "CreateSnapshot",
    "Description": "Creates a copy of an entire cluster or replication group at a specific moment in time"
  },
  {
    "API": "elasticache:CreateUser",
    "EventSource": "elasticache",
    "EventName": "CreateUser",
    "Description": "For Redis engine version 6"
  },
  {
    "API": "elasticache:CreateUserGroup",
    "EventSource": "elasticache",
    "EventName": "CreateUserGroup",
    "Description": "For Redis engine version 6"
  },
  {
    "API": "elasticache:DecreaseNodeGroupsInGlobalReplicationGroup",
    "EventSource": "elasticache",
    "EventName": "DecreaseNodeGroupsInGlobalReplicationGroup",
    "Description": "Decreases the number of node groups in a Global datastore"
  },
  {
    "API": "elasticache:DecreaseReplicaCount",
    "EventSource": "elasticache",
    "EventName": "DecreaseReplicaCount",
    "Description": "Dynamically decreases the number of replicas in a Redis (cluster mode disabled) replication group or the number of replica nodes in one or more node groups (shards) of a Redis (cluster mode enabled) replication group"
  },
  {
    "API": "elasticache:DeleteCacheCluster",
    "EventSource": "elasticache",
    "EventName": "DeleteCacheCluster",
    "Description": "Deletes a previously provisioned cluster"
  },
  {
    "API": "elasticache:DeleteCacheParameterGroup",
    "EventSource": "elasticache",
    "EventName": "DeleteCacheParameterGroup",
    "Description": "Deletes the specified cache parameter group"
  },
  {
    "API": "elasticache:DeleteCacheSecurityGroup",
    "EventSource": "elasticache",
    "EventName": "DeleteCacheSecurityGroup",
    "Description": "Deletes a cache security group"
  },
  {
    "API": "elasticache:DeleteCacheSubnetGroup",
    "EventSource": "elasticache",
    "EventName": "DeleteCacheSubnetGroup",
    "Description": "Deletes a cache subnet group"
  },
  {
    "API": "elasticache:DeleteGlobalReplicationGroup",
    "EventSource": "elasticache",
    "EventName": "DeleteGlobalReplicationGroup",
    "Description": "Deleting a Global datastore is a two-step process:"
  },
  {
    "API": "elasticache:DeleteReplicationGroup",
    "EventSource": "elasticache",
    "EventName": "DeleteReplicationGroup",
    "Description": "Deletes an existing replication group"
  },
  {
    "API": "elasticache:DeleteServerlessCache",
    "EventSource": "elasticache",
    "EventName": "DeleteServerlessCache",
    "Description": "Deletes a specified existing serverless cache"
  },
  {
    "API": "elasticache:DeleteServerlessCacheSnapshot",
    "EventSource": "elasticache",
    "EventName": "DeleteServerlessCacheSnapshot",
    "Description": "Deletes an existing serverless cache snapshot"
  },
  {
    "API": "elasticache:DeleteSnapshot",
    "EventSource": "elasticache",
    "EventName": "DeleteSnapshot",
    "Description": "Deletes an existing snapshot"
  },
  {
    "API": "elasticache:DeleteUser",
    "EventSource": "elasticache",
    "EventName": "DeleteUser",
    "Description": "For Redis engine version 6"
  },
  {
    "API": "elasticache:DeleteUserGroup",
    "EventSource": "elasticache",
    "EventName": "DeleteUserGroup",
    "Description": "For Redis engine version 6"
  },
  {
    "API": "elasticache:DescribeCacheClusters",
    "EventSource": "elasticache",
    "EventName": "DescribeCacheClusters",
    "Description": "Returns information about all provisioned clusters if no cluster identifier is specified, or about a specific cache cluster if a cluster identifier is supplied"
  },
  {
    "API": "elasticache:DescribeCacheEngineVersions",
    "EventSource": "elasticache",
    "EventName": "DescribeCacheEngineVersions",
    "Description": "Returns a list of the available cache engines and their versions"
  },
  {
    "API": "elasticache:DescribeCacheParameterGroups",
    "EventSource": "elasticache",
    "EventName": "DescribeCacheParameterGroups",
    "Description": "Returns a list of cache parameter group descriptions"
  },
  {
    "API": "elasticache:DescribeCacheParameters",
    "EventSource": "elasticache",
    "EventName": "DescribeCacheParameters",
    "Description": "Returns the detailed parameter list for a particular cache parameter group"
  },
  {
    "API": "elasticache:DescribeCacheSecurityGroups",
    "EventSource": "elasticache",
    "EventName": "DescribeCacheSecurityGroups",
    "Description": "Returns a list of cache security group descriptions"
  },
  {
    "API": "elasticache:DescribeCacheSubnetGroups",
    "EventSource": "elasticache",
    "EventName": "DescribeCacheSubnetGroups",
    "Description": "Returns a list of cache subnet group descriptions"
  },
  {
    "API": "elasticache:DescribeEngineDefaultParameters",
    "EventSource": "elasticache",
    "EventName": "DescribeEngineDefaultParameters",
    "Description": "Returns the default engine and system parameter information for the specified cache engine"
  },
  {
    "API": "elasticache:DescribeEvents",
    "EventSource": "elasticache",
    "EventName": "DescribeEvents",
    "Description": "Returns events related to clusters, cache security groups, and cache parameter groups"
  },
  {
    "API": "elasticache:DescribeGlobalReplicationGroups",
    "EventSource": "elasticache",
    "EventName": "DescribeGlobalReplicationGroups",
    "Description": "Returns information about a particular global replication group"
  },
  {
    "API": "elasticache:DescribeReplicationGroups",
    "EventSource": "elasticache",
    "EventName": "DescribeReplicationGroups",
    "Description": "Returns information about a particular replication group"
  },
  {
    "API": "elasticache:DescribeReservedCacheNodes",
    "EventSource": "elasticache",
    "EventName": "DescribeReservedCacheNodes",
    "Description": "Returns information about reserved cache nodes for this account, or about a specified reserved cache node"
  },
  {
    "API": "elasticache:DescribeReservedCacheNodesOfferings",
    "EventSource": "elasticache",
    "EventName": "DescribeReservedCacheNodesOfferings",
    "Description": "Lists available reserved cache node offerings"
  },
  {
    "API": "elasticache:DescribeServerlessCacheSnapshots",
    "EventSource": "elasticache",
    "EventName": "DescribeServerlessCacheSnapshots",
    "Description": "Returns information about serverless cache snapshots"
  },
  {
    "API": "elasticache:DescribeServerlessCaches",
    "EventSource": "elasticache",
    "EventName": "DescribeServerlessCaches",
    "Description": "Returns information about a specific serverless cache"
  },
  {
    "API": "elasticache:DescribeServiceUpdates",
    "EventSource": "elasticache",
    "EventName": "DescribeServiceUpdates",
    "Description": "Returns details of the service updates"
  },
  {
    "API": "elasticache:DescribeSnapshots",
    "EventSource": "elasticache",
    "EventName": "DescribeSnapshots",
    "Description": "Returns information about cluster or replication group snapshots"
  },
  {
    "API": "elasticache:DescribeUpdateActions",
    "EventSource": "elasticache",
    "EventName": "DescribeUpdateActions",
    "Description": "Returns details of the update actions"
  },
  {
    "API": "elasticache:DescribeUserGroups",
    "EventSource": "elasticache",
    "EventName": "DescribeUserGroups",
    "Description": "Returns a list of user groups"
  },
  {
    "API": "elasticache:DescribeUsers",
    "EventSource": "elasticache",
    "EventName": "DescribeUsers",
    "Description": "Returns a list of users"
  },
  {
    "API": "elasticache:DisassociateGlobalReplicationGroup",
    "EventSource": "elasticache",
    "EventName": "DisassociateGlobalReplicationGroup",
    "Description": "Remove a secondary cluster from the Global datastore using the Global datastore name"
  },
  {
    "API": "elasticache:ExportServerlessCacheSnapshot",
    "EventSource": "elasticache",
    "EventName": "ExportServerlessCacheSnapshot",
    "Description": "Provides the functionality to export the serverless cache snapshot data to Amazon S3"
  },
  {
    "API": "elasticache:FailoverGlobalReplicationGroup",
    "EventSource": "elasticache",
    "EventName": "FailoverGlobalReplicationGroup",
    "Description": "Used to failover the primary region to a secondary region"
  },
  {
    "API": "elasticache:GeneratePresignedUrl",
    "EventSource": "elasticache",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "elasticache:IncreaseNodeGroupsInGlobalReplicationGroup",
    "EventSource": "elasticache",
    "EventName": "IncreaseNodeGroupsInGlobalReplicationGroup",
    "Description": "Increase the number of node groups in the Global datastore"
  },
  {
    "API": "elasticache:IncreaseReplicaCount",
    "EventSource": "elasticache",
    "EventName": "IncreaseReplicaCount",
    "Description": "Dynamically increases the number of replicas in a Redis (cluster mode disabled) replication group or the number of replica nodes in one or more node groups (shards) of a Redis (cluster mode enabled) replication group"
  },
  {
    "API": "elasticache:ListAllowedNodeTypeModifications",
    "EventSource": "elasticache",
    "EventName": "ListAllowedNodeTypeModifications",
    "Description": "Lists all available node types that you can scale your Redis cluster's or replication group's current node type"
  },
  {
    "API": "elasticache:ListTagsForResource",
    "EventSource": "elasticache",
    "EventName": "ListTagsForResource",
    "Description": "Lists all tags currently on a named resource"
  },
  {
    "API": "elasticache:ModifyCacheCluster",
    "EventSource": "elasticache",
    "EventName": "ModifyCacheCluster",
    "Description": "Modifies the settings for a cluster"
  },
  {
    "API": "elasticache:ModifyCacheParameterGroup",
    "EventSource": "elasticache",
    "EventName": "ModifyCacheParameterGroup",
    "Description": "Modifies the parameters of a cache parameter group"
  },
  {
    "API": "elasticache:ModifyCacheSubnetGroup",
    "EventSource": "elasticache",
    "EventName": "ModifyCacheSubnetGroup",
    "Description": "Modifies an existing cache subnet group"
  },
  {
    "API": "elasticache:ModifyGlobalReplicationGroup",
    "EventSource": "elasticache",
    "EventName": "ModifyGlobalReplicationGroup",
    "Description": "Modifies the settings for a Global datastore"
  },
  {
    "API": "elasticache:ModifyReplicationGroup",
    "EventSource": "elasticache",
    "EventName": "ModifyReplicationGroup",
    "Description": "Modifies the settings for a replication group"
  },
  {
    "API": "elasticache:ModifyReplicationGroupShardConfiguration",
    "EventSource": "elasticache",
    "EventName": "ModifyReplicationGroupShardConfiguration",
    "Description": "Modifies a replication group's shards (node groups) by allowing you to add shards, remove shards, or rebalance the keyspaces among existing shards"
  },
  {
    "API": "elasticache:ModifyServerlessCache",
    "EventSource": "elasticache",
    "EventName": "ModifyServerlessCache",
    "Description": "This API modifies the attributes of a serverless cache"
  },
  {
    "API": "elasticache:ModifyUser",
    "EventSource": "elasticache",
    "EventName": "ModifyUser",
    "Description": "Changes user password(s) and/or access string"
  },
  {
    "API": "elasticache:ModifyUserGroup",
    "EventSource": "elasticache",
    "EventName": "ModifyUserGroup",
    "Description": "Changes the list of users that belong to the user group"
  },
  {
    "API": "elasticache:PurchaseReservedCacheNodesOffering",
    "EventSource": "elasticache",
    "EventName": "PurchaseReservedCacheNodesOffering",
    "Description": "Allows you to purchase a reserved cache node offering"
  },
  {
    "API": "elasticache:RebalanceSlotsInGlobalReplicationGroup",
    "EventSource": "elasticache",
    "EventName": "RebalanceSlotsInGlobalReplicationGroup",
    "Description": "Redistribute slots to ensure uniform distribution across existing shards in the cluster"
  },
  {
    "API": "elasticache:RebootCacheCluster",
    "EventSource": "elasticache",
    "EventName": "RebootCacheCluster",
    "Description": "Reboots some, or all, of the cache nodes within a provisioned cluster"
  },
  {
    "API": "elasticache:RemoveTagsFromResource",
    "EventSource": "elasticache",
    "EventName": "RemoveTagsFromResource",
    "Description": "Removes the tags identified by the ``TagKeys`` list from the named resource"
  },
  {
    "API": "elasticache:ResetCacheParameterGroup",
    "EventSource": "elasticache",
    "EventName": "ResetCacheParameterGroup",
    "Description": "Modifies the parameters of a cache parameter group to the engine or system default value"
  },
  {
    "API": "elasticache:RevokeCacheSecurityGroupIngress",
    "EventSource": "elasticache",
    "EventName": "RevokeCacheSecurityGroupIngress",
    "Description": "Revokes ingress from a cache security group"
  },
  {
    "API": "elasticache:StartMigration",
    "EventSource": "elasticache",
    "EventName": "StartMigration",
    "Description": "Start the migration of data"
  },
  {
    "API": "elasticache:TestFailover",
    "EventSource": "elasticache",
    "EventName": "TestFailover",
    "Description": "Represents the input of a ``TestFailover`` operation which tests automatic failover on a specified node group (called shard in the console) in a replication group (called cluster in the console)"
  },
  {
    "API": "elasticache:TestMigration",
    "EventSource": "elasticache",
    "EventName": "TestMigration",
    "Description": "Async API to test connection between source and target replication group"
  },
  {
    "API": "elasticbeanstalk:AbortEnvironmentUpdate",
    "EventSource": "elasticbeanstalk",
    "EventName": "AbortEnvironmentUpdate",
    "Description": "Cancels in-progress environment configuration update or application version deployment"
  },
  {
    "API": "elasticbeanstalk:ApplyEnvironmentManagedAction",
    "EventSource": "elasticbeanstalk",
    "EventName": "ApplyEnvironmentManagedAction",
    "Description": "Applies a scheduled managed action immediately"
  },
  {
    "API": "elasticbeanstalk:AssociateEnvironmentOperationsRole",
    "EventSource": "elasticbeanstalk",
    "EventName": "AssociateEnvironmentOperationsRole",
    "Description": "Add or change the operations role used by an environment"
  },
  {
    "API": "elasticbeanstalk:CheckDnsAvailability",
    "EventSource": "elasticbeanstalk",
    "EventName": "CheckDnsAvailability",
    "Description": "Checks if the specified CNAME is available"
  },
  {
    "API": "elasticbeanstalk:ComposeEnvironments",
    "EventSource": "elasticbeanstalk",
    "EventName": "ComposeEnvironments",
    "Description": "Create or update a group of environments that each run a separate component of a single application"
  },
  {
    "API": "elasticbeanstalk:CreateApplication",
    "EventSource": "elasticbeanstalk",
    "EventName": "CreateApplication",
    "Description": "Creates an application that has one configuration template named ``default`` and no application versions"
  },
  {
    "API": "elasticbeanstalk:CreateApplicationVersion",
    "EventSource": "elasticbeanstalk",
    "EventName": "CreateApplicationVersion",
    "Description": "Creates an application version for the specified application"
  },
  {
    "API": "elasticbeanstalk:CreateConfigurationTemplate",
    "EventSource": "elasticbeanstalk",
    "EventName": "CreateConfigurationTemplate",
    "Description": "Creates an AWS Elastic Beanstalk configuration template, associated with a specific Elastic Beanstalk application"
  },
  {
    "API": "elasticbeanstalk:CreateEnvironment",
    "EventSource": "elasticbeanstalk",
    "EventName": "CreateEnvironment",
    "Description": "Launches an AWS Elastic Beanstalk environment for the specified application using the specified configuration"
  },
  {
    "API": "elasticbeanstalk:CreatePlatformVersion",
    "EventSource": "elasticbeanstalk",
    "EventName": "CreatePlatformVersion",
    "Description": "Create a new version of your custom platform"
  },
  {
    "API": "elasticbeanstalk:CreateStorageLocation",
    "EventSource": "elasticbeanstalk",
    "EventName": "CreateStorageLocation",
    "Description": "Creates a bucket in Amazon S3 to store application versions, logs, and other files used by Elastic Beanstalk environments"
  },
  {
    "API": "elasticbeanstalk:DeleteApplication",
    "EventSource": "elasticbeanstalk",
    "EventName": "DeleteApplication",
    "Description": "Deletes the specified application along with all associated versions and configurations"
  },
  {
    "API": "elasticbeanstalk:DeleteApplicationVersion",
    "EventSource": "elasticbeanstalk",
    "EventName": "DeleteApplicationVersion",
    "Description": "Deletes the specified version from the specified application"
  },
  {
    "API": "elasticbeanstalk:DeleteConfigurationTemplate",
    "EventSource": "elasticbeanstalk",
    "EventName": "DeleteConfigurationTemplate",
    "Description": "Deletes the specified configuration template"
  },
  {
    "API": "elasticbeanstalk:DeleteEnvironmentConfiguration",
    "EventSource": "elasticbeanstalk",
    "EventName": "DeleteEnvironmentConfiguration",
    "Description": "Deletes the draft configuration associated with the running environment"
  },
  {
    "API": "elasticbeanstalk:DeletePlatformVersion",
    "EventSource": "elasticbeanstalk",
    "EventName": "DeletePlatformVersion",
    "Description": "Deletes the specified version of a custom platform"
  },
  {
    "API": "elasticbeanstalk:DescribeAccountAttributes",
    "EventSource": "elasticbeanstalk",
    "EventName": "DescribeAccountAttributes",
    "Description": "Returns attributes related to AWS Elastic Beanstalk that are associated with the calling AWS account"
  },
  {
    "API": "elasticbeanstalk:DescribeApplicationVersions",
    "EventSource": "elasticbeanstalk",
    "EventName": "DescribeApplicationVersions",
    "Description": "Retrieve a list of application versions"
  },
  {
    "API": "elasticbeanstalk:DescribeApplications",
    "EventSource": "elasticbeanstalk",
    "EventName": "DescribeApplications",
    "Description": "Returns the descriptions of existing applications"
  },
  {
    "API": "elasticbeanstalk:DescribeConfigurationOptions",
    "EventSource": "elasticbeanstalk",
    "EventName": "DescribeConfigurationOptions",
    "Description": "Describes the configuration options that are used in a particular configuration template or environment, or that a specified solution stack defines"
  },
  {
    "API": "elasticbeanstalk:DescribeConfigurationSettings",
    "EventSource": "elasticbeanstalk",
    "EventName": "DescribeConfigurationSettings",
    "Description": "Returns a description of the settings for the specified configuration set, that is, either a configuration template or the configuration set associated with a running environment"
  },
  {
    "API": "elasticbeanstalk:DescribeEnvironmentHealth",
    "EventSource": "elasticbeanstalk",
    "EventName": "DescribeEnvironmentHealth",
    "Description": "Returns information about the overall health of the specified environment"
  },
  {
    "API": "elasticbeanstalk:DescribeEnvironmentManagedActionHistory",
    "EventSource": "elasticbeanstalk",
    "EventName": "DescribeEnvironmentManagedActionHistory",
    "Description": "Lists an environment's completed and failed managed actions"
  },
  {
    "API": "elasticbeanstalk:DescribeEnvironmentManagedActions",
    "EventSource": "elasticbeanstalk",
    "EventName": "DescribeEnvironmentManagedActions",
    "Description": "Lists an environment's upcoming and in-progress managed actions"
  },
  {
    "API": "elasticbeanstalk:DescribeEnvironmentResources",
    "EventSource": "elasticbeanstalk",
    "EventName": "DescribeEnvironmentResources",
    "Description": "Returns AWS resources for this environment"
  },
  {
    "API": "elasticbeanstalk:DescribeEnvironments",
    "EventSource": "elasticbeanstalk",
    "EventName": "DescribeEnvironments",
    "Description": "Returns descriptions for existing environments"
  },
  {
    "API": "elasticbeanstalk:DescribeEvents",
    "EventSource": "elasticbeanstalk",
    "EventName": "DescribeEvents",
    "Description": "Returns list of event descriptions matching criteria up to the last 6 weeks"
  },
  {
    "API": "elasticbeanstalk:DescribeInstancesHealth",
    "EventSource": "elasticbeanstalk",
    "EventName": "DescribeInstancesHealth",
    "Description": "Retrieves detailed information about the health of instances in your AWS Elastic Beanstalk"
  },
  {
    "API": "elasticbeanstalk:DescribePlatformVersion",
    "EventSource": "elasticbeanstalk",
    "EventName": "DescribePlatformVersion",
    "Description": "Describes a platform version"
  },
  {
    "API": "elasticbeanstalk:DisassociateEnvironmentOperationsRole",
    "EventSource": "elasticbeanstalk",
    "EventName": "DisassociateEnvironmentOperationsRole",
    "Description": "Disassociate the operations role from an environment"
  },
  {
    "API": "elasticbeanstalk:GeneratePresignedUrl",
    "EventSource": "elasticbeanstalk",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "elasticbeanstalk:ListAvailableSolutionStacks",
    "EventSource": "elasticbeanstalk",
    "EventName": "ListAvailableSolutionStacks",
    "Description": "Returns a list of the available solution stack names, with the public version first and then in reverse chronological order"
  },
  {
    "API": "elasticbeanstalk:ListPlatformBranches",
    "EventSource": "elasticbeanstalk",
    "EventName": "ListPlatformBranches",
    "Description": "Lists the platform branches available for your account in an AWS Region"
  },
  {
    "API": "elasticbeanstalk:ListPlatformVersions",
    "EventSource": "elasticbeanstalk",
    "EventName": "ListPlatformVersions",
    "Description": "Lists the platform versions available for your account in an AWS Region"
  },
  {
    "API": "elasticbeanstalk:ListTagsForResource",
    "EventSource": "elasticbeanstalk",
    "EventName": "ListTagsForResource",
    "Description": "Return the tags applied to an AWS Elastic Beanstalk resource"
  },
  {
    "API": "elasticbeanstalk:RebuildEnvironment",
    "EventSource": "elasticbeanstalk",
    "EventName": "RebuildEnvironment",
    "Description": "Deletes and recreates all of the AWS resources (for example: the Auto Scaling group, load balancer, etc"
  },
  {
    "API": "elasticbeanstalk:RequestEnvironmentInfo",
    "EventSource": "elasticbeanstalk",
    "EventName": "RequestEnvironmentInfo",
    "Description": "Initiates a request to compile the specified type of information of the deployed environment"
  },
  {
    "API": "elasticbeanstalk:RestartAppServer",
    "EventSource": "elasticbeanstalk",
    "EventName": "RestartAppServer",
    "Description": "Causes the environment to restart the application container server running on each Amazon EC2 instance"
  },
  {
    "API": "elasticbeanstalk:RetrieveEnvironmentInfo",
    "EventSource": "elasticbeanstalk",
    "EventName": "RetrieveEnvironmentInfo",
    "Description": "Retrieves the compiled information from a  RequestEnvironmentInfo request"
  },
  {
    "API": "elasticbeanstalk:SwapEnvironmentCnames",
    "EventSource": "elasticbeanstalk",
    "EventName": "SwapEnvironmentCnames",
    "Description": "Swaps the CNAMEs of two environments"
  },
  {
    "API": "elasticbeanstalk:TerminateEnvironment",
    "EventSource": "elasticbeanstalk",
    "EventName": "TerminateEnvironment",
    "Description": "Terminates the specified environment"
  },
  {
    "API": "elasticbeanstalk:UpdateApplication",
    "EventSource": "elasticbeanstalk",
    "EventName": "UpdateApplication",
    "Description": "Updates the specified application to have the specified properties"
  },
  {
    "API": "elasticbeanstalk:UpdateApplicationResourceLifecycle",
    "EventSource": "elasticbeanstalk",
    "EventName": "UpdateApplicationResourceLifecycle",
    "Description": "Modifies lifecycle settings for an application"
  },
  {
    "API": "elasticbeanstalk:UpdateApplicationVersion",
    "EventSource": "elasticbeanstalk",
    "EventName": "UpdateApplicationVersion",
    "Description": "Updates the specified application version to have the specified properties"
  },
  {
    "API": "elasticbeanstalk:UpdateConfigurationTemplate",
    "EventSource": "elasticbeanstalk",
    "EventName": "UpdateConfigurationTemplate",
    "Description": "Updates the specified configuration template to have the specified properties or configuration option values"
  },
  {
    "API": "elasticbeanstalk:UpdateEnvironment",
    "EventSource": "elasticbeanstalk",
    "EventName": "UpdateEnvironment",
    "Description": "Updates the environment description, deploys a new application version, updates the configuration settings to an entirely new configuration template, or updates select configuration option values in the running environment"
  },
  {
    "API": "elasticbeanstalk:UpdateTagsForResource",
    "EventSource": "elasticbeanstalk",
    "EventName": "UpdateTagsForResource",
    "Description": "Update the list of tags applied to an AWS Elastic Beanstalk resource"
  },
  {
    "API": "elasticbeanstalk:ValidateConfigurationSettings",
    "EventSource": "elasticbeanstalk",
    "EventName": "ValidateConfigurationSettings",
    "Description": "Takes a set of configuration settings and either a configuration template or environment, and determines whether those values are valid"
  },
  {
    "API": "elastictranscoder:CancelJob",
    "EventSource": "elastictranscoder",
    "EventName": "CancelJob",
    "Description": "The CancelJob operation cancels an unfinished job"
  },
  {
    "API": "elastictranscoder:CreateJob",
    "EventSource": "elastictranscoder",
    "EventName": "CreateJob",
    "Description": "When you create a job, Elastic Transcoder returns JSON data that includes the values that you specified plus information about the job that is created"
  },
  {
    "API": "elastictranscoder:CreatePipeline",
    "EventSource": "elastictranscoder",
    "EventName": "CreatePipeline",
    "Description": "The CreatePipeline operation creates a pipeline with settings that you specify"
  },
  {
    "API": "elastictranscoder:CreatePreset",
    "EventSource": "elastictranscoder",
    "EventName": "CreatePreset",
    "Description": "The CreatePreset operation creates a preset with settings that you specify"
  },
  {
    "API": "elastictranscoder:DeletePipeline",
    "EventSource": "elastictranscoder",
    "EventName": "DeletePipeline",
    "Description": "The DeletePipeline operation removes a pipeline"
  },
  {
    "API": "elastictranscoder:DeletePreset",
    "EventSource": "elastictranscoder",
    "EventName": "DeletePreset",
    "Description": "The DeletePreset operation removes a preset that you've added in an AWS region"
  },
  {
    "API": "elastictranscoder:GeneratePresignedUrl",
    "EventSource": "elastictranscoder",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "elastictranscoder:ListJobsByPipeline",
    "EventSource": "elastictranscoder",
    "EventName": "ListJobsByPipeline",
    "Description": "The ListJobsByPipeline operation gets a list of the jobs currently in a pipeline"
  },
  {
    "API": "elastictranscoder:ListJobsByStatus",
    "EventSource": "elastictranscoder",
    "EventName": "ListJobsByStatus",
    "Description": "The ListJobsByStatus operation gets a list of jobs that have a specified status"
  },
  {
    "API": "elastictranscoder:ListPipelines",
    "EventSource": "elastictranscoder",
    "EventName": "ListPipelines",
    "Description": "The ListPipelines operation gets a list of the pipelines associated with the current AWS account"
  },
  {
    "API": "elastictranscoder:ListPresets",
    "EventSource": "elastictranscoder",
    "EventName": "ListPresets",
    "Description": "The ListPresets operation gets a list of the default presets included with Elastic Transcoder and the presets that you've added in an AWS region"
  },
  {
    "API": "elastictranscoder:ReadJob",
    "EventSource": "elastictranscoder",
    "EventName": "ReadJob",
    "Description": "The ReadJob operation returns detailed information about a job"
  },
  {
    "API": "elastictranscoder:ReadPipeline",
    "EventSource": "elastictranscoder",
    "EventName": "ReadPipeline",
    "Description": "The ReadPipeline operation gets detailed information about a pipeline"
  },
  {
    "API": "elastictranscoder:ReadPreset",
    "EventSource": "elastictranscoder",
    "EventName": "ReadPreset",
    "Description": "The ReadPreset operation gets detailed information about a preset"
  },
  {
    "API": "elastictranscoder:TestRole",
    "EventSource": "elastictranscoder",
    "EventName": "TestRole",
    "Description": "The TestRole operation tests the IAM role used to create the pipeline"
  },
  {
    "API": "elastictranscoder:UpdatePipeline",
    "EventSource": "elastictranscoder",
    "EventName": "UpdatePipeline",
    "Description": "Use the ``UpdatePipeline`` operation to update settings for a pipeline"
  },
  {
    "API": "elastictranscoder:UpdatePipelineNotifications",
    "EventSource": "elastictranscoder",
    "EventName": "UpdatePipelineNotifications",
    "Description": "With the UpdatePipelineNotifications operation, you can update Amazon Simple Notification Service (Amazon SNS) notifications for a pipeline"
  },
  {
    "API": "elastictranscoder:UpdatePipelineStatus",
    "EventSource": "elastictranscoder",
    "EventName": "UpdatePipelineStatus",
    "Description": "The UpdatePipelineStatus operation pauses or reactivates a pipeline, so that the pipeline stops or restarts the processing of jobs"
  },
  {
    "API": "elb:AddTags",
    "EventSource": "elb",
    "EventName": "AddTags",
    "Description": "Adds the specified tags to the specified load balancer"
  },
  {
    "API": "elb:ApplySecurityGroupsToLoadBalancer",
    "EventSource": "elb",
    "EventName": "ApplySecurityGroupsToLoadBalancer",
    "Description": "Associates one or more security groups with your load balancer in a virtual private cloud (VPC)"
  },
  {
    "API": "elb:AttachLoadBalancerToSubnets",
    "EventSource": "elb",
    "EventName": "AttachLoadBalancerToSubnets",
    "Description": "Adds one or more subnets to the set of configured subnets for the specified load balancer"
  },
  {
    "API": "elb:ConfigureHealthCheck",
    "EventSource": "elb",
    "EventName": "ConfigureHealthCheck",
    "Description": "Specifies the health check settings to use when evaluating the health state of your EC2 instances"
  },
  {
    "API": "elb:CreateAppCookieStickinessPolicy",
    "EventSource": "elb",
    "EventName": "CreateAppCookieStickinessPolicy",
    "Description": "Generates a stickiness policy with sticky session lifetimes that follow that of an application-generated cookie"
  },
  {
    "API": "elb:CreateLbCookieStickinessPolicy",
    "EventSource": "elb",
    "EventName": "CreateLbCookieStickinessPolicy",
    "Description": "Generates a stickiness policy with sticky session lifetimes controlled by the lifetime of the browser (user-agent) or a specified expiration period"
  },
  {
    "API": "elb:CreateLoadBalancer",
    "EventSource": "elb",
    "EventName": "CreateLoadBalancer",
    "Description": "Creates a Classic Load Balancer"
  },
  {
    "API": "elb:CreateLoadBalancerListeners",
    "EventSource": "elb",
    "EventName": "CreateLoadBalancerListeners",
    "Description": "Creates one or more listeners for the specified load balancer"
  },
  {
    "API": "elb:CreateLoadBalancerPolicy",
    "EventSource": "elb",
    "EventName": "CreateLoadBalancerPolicy",
    "Description": "Creates a policy with the specified attributes for the specified load balancer"
  },
  {
    "API": "elb:DeleteLoadBalancer",
    "EventSource": "elb",
    "EventName": "DeleteLoadBalancer",
    "Description": "Deletes the specified load balancer"
  },
  {
    "API": "elb:DeleteLoadBalancerListeners",
    "EventSource": "elb",
    "EventName": "DeleteLoadBalancerListeners",
    "Description": "Deletes the specified listeners from the specified load balancer"
  },
  {
    "API": "elb:DeleteLoadBalancerPolicy",
    "EventSource": "elb",
    "EventName": "DeleteLoadBalancerPolicy",
    "Description": "Deletes the specified policy from the specified load balancer"
  },
  {
    "API": "elb:DeregisterInstancesFromLoadBalancer",
    "EventSource": "elb",
    "EventName": "DeregisterInstancesFromLoadBalancer",
    "Description": "Deregisters the specified instances from the specified load balancer"
  },
  {
    "API": "elb:DescribeAccountLimits",
    "EventSource": "elb",
    "EventName": "DescribeAccountLimits",
    "Description": "Describes the current Elastic Load Balancing resource limits for your AWS account"
  },
  {
    "API": "elb:DescribeInstanceHealth",
    "EventSource": "elb",
    "EventName": "DescribeInstanceHealth",
    "Description": "Describes the state of the specified instances with respect to the specified load balancer"
  },
  {
    "API": "elb:DescribeLoadBalancerAttributes",
    "EventSource": "elb",
    "EventName": "DescribeLoadBalancerAttributes",
    "Description": "Describes the attributes for the specified load balancer"
  },
  {
    "API": "elb:DescribeLoadBalancerPolicies",
    "EventSource": "elb",
    "EventName": "DescribeLoadBalancerPolicies",
    "Description": "Describes the specified policies"
  },
  {
    "API": "elb:DescribeLoadBalancerPolicyTypes",
    "EventSource": "elb",
    "EventName": "DescribeLoadBalancerPolicyTypes",
    "Description": "Describes the specified load balancer policy types or all load balancer policy types"
  },
  {
    "API": "elb:DescribeLoadBalancers",
    "EventSource": "elb",
    "EventName": "DescribeLoadBalancers",
    "Description": "Describes the specified the load balancers"
  },
  {
    "API": "elb:DescribeTags",
    "EventSource": "elb",
    "EventName": "DescribeTags",
    "Description": "Describes the tags associated with the specified load balancers"
  },
  {
    "API": "elb:DetachLoadBalancerFromSubnets",
    "EventSource": "elb",
    "EventName": "DetachLoadBalancerFromSubnets",
    "Description": "Removes the specified subnets from the set of configured subnets for the load balancer"
  },
  {
    "API": "elb:DisableAvailabilityZonesForLoadBalancer",
    "EventSource": "elb",
    "EventName": "DisableAvailabilityZonesForLoadBalancer",
    "Description": "Removes the specified Availability Zones from the set of Availability Zones for the specified load balancer in EC2-Classic or a default VPC"
  },
  {
    "API": "elb:EnableAvailabilityZonesForLoadBalancer",
    "EventSource": "elb",
    "EventName": "EnableAvailabilityZonesForLoadBalancer",
    "Description": "Adds the specified Availability Zones to the set of Availability Zones for the specified load balancer in EC2-Classic or a default VPC"
  },
  {
    "API": "elb:GeneratePresignedUrl",
    "EventSource": "elb",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "elb:ModifyLoadBalancerAttributes",
    "EventSource": "elb",
    "EventName": "ModifyLoadBalancerAttributes",
    "Description": "Modifies the attributes of the specified load balancer"
  },
  {
    "API": "elb:RegisterInstancesWithLoadBalancer",
    "EventSource": "elb",
    "EventName": "RegisterInstancesWithLoadBalancer",
    "Description": "Adds the specified instances to the specified load balancer"
  },
  {
    "API": "elb:RemoveTags",
    "EventSource": "elb",
    "EventName": "RemoveTags",
    "Description": "Removes one or more tags from the specified load balancer"
  },
  {
    "API": "elb:SetLoadBalancerListenerSslCertificate",
    "EventSource": "elb",
    "EventName": "SetLoadBalancerListenerSslCertificate",
    "Description": "Sets the certificate that terminates the specified listener's SSL connections"
  },
  {
    "API": "elb:SetLoadBalancerPoliciesForBackendServer",
    "EventSource": "elb",
    "EventName": "SetLoadBalancerPoliciesForBackendServer",
    "Description": "Replaces the set of policies associated with the specified port on which the EC2 instance is listening with a new set of policies"
  },
  {
    "API": "elb:SetLoadBalancerPoliciesOfListener",
    "EventSource": "elb",
    "EventName": "SetLoadBalancerPoliciesOfListener",
    "Description": "Replaces the current set of policies for the specified load balancer port with the specified set of policies"
  },
  {
    "API": "elbv2:AddListenerCertificates",
    "EventSource": "elbv2",
    "EventName": "AddListenerCertificates",
    "Description": "Adds the specified SSL server certificate to the certificate list for the specified HTTPS or TLS listener"
  },
  {
    "API": "elbv2:AddTags",
    "EventSource": "elbv2",
    "EventName": "AddTags",
    "Description": "Adds the specified tags to the specified Elastic Load Balancing resource"
  },
  {
    "API": "elbv2:AddTrustStoreRevocations",
    "EventSource": "elbv2",
    "EventName": "AddTrustStoreRevocations",
    "Description": "Adds the specified revocation file to the specified trust store"
  },
  {
    "API": "elbv2:CreateListener",
    "EventSource": "elbv2",
    "EventName": "CreateListener",
    "Description": "Creates a listener for the specified Application Load Balancer, Network Load Balancer, or Gateway Load Balancer"
  },
  {
    "API": "elbv2:CreateLoadBalancer",
    "EventSource": "elbv2",
    "EventName": "CreateLoadBalancer",
    "Description": "Creates an Application Load Balancer, Network Load Balancer, or Gateway Load Balancer"
  },
  {
    "API": "elbv2:CreateRule",
    "EventSource": "elbv2",
    "EventName": "CreateRule",
    "Description": "Creates a rule for the specified listener"
  },
  {
    "API": "elbv2:CreateTargetGroup",
    "EventSource": "elbv2",
    "EventName": "CreateTargetGroup",
    "Description": "Creates a target group"
  },
  {
    "API": "elbv2:CreateTrustStore",
    "EventSource": "elbv2",
    "EventName": "CreateTrustStore",
    "Description": "Creates a trust store"
  },
  {
    "API": "elbv2:DeleteListener",
    "EventSource": "elbv2",
    "EventName": "DeleteListener",
    "Description": "Deletes the specified listener"
  },
  {
    "API": "elbv2:DeleteLoadBalancer",
    "EventSource": "elbv2",
    "EventName": "DeleteLoadBalancer",
    "Description": "Deletes the specified Application Load Balancer, Network Load Balancer, or Gateway Load Balancer"
  },
  {
    "API": "elbv2:DeleteRule",
    "EventSource": "elbv2",
    "EventName": "DeleteRule",
    "Description": "Deletes the specified rule"
  },
  {
    "API": "elbv2:DeleteTargetGroup",
    "EventSource": "elbv2",
    "EventName": "DeleteTargetGroup",
    "Description": "Deletes the specified target group"
  },
  {
    "API": "elbv2:DeleteTrustStore",
    "EventSource": "elbv2",
    "EventName": "DeleteTrustStore",
    "Description": "Deletes a trust store"
  },
  {
    "API": "elbv2:DeregisterTargets",
    "EventSource": "elbv2",
    "EventName": "DeregisterTargets",
    "Description": "Deregisters the specified targets from the specified target group"
  },
  {
    "API": "elbv2:DescribeAccountLimits",
    "EventSource": "elbv2",
    "EventName": "DescribeAccountLimits",
    "Description": "Describes the current Elastic Load Balancing resource limits for your Amazon Web Services account"
  },
  {
    "API": "elbv2:DescribeListenerCertificates",
    "EventSource": "elbv2",
    "EventName": "DescribeListenerCertificates",
    "Description": "Describes the default certificate and the certificate list for the specified HTTPS or TLS listener"
  },
  {
    "API": "elbv2:DescribeListeners",
    "EventSource": "elbv2",
    "EventName": "DescribeListeners",
    "Description": "Describes the specified listeners or the listeners for the specified Application Load Balancer, Network Load Balancer, or Gateway Load Balancer"
  },
  {
    "API": "elbv2:DescribeLoadBalancerAttributes",
    "EventSource": "elbv2",
    "EventName": "DescribeLoadBalancerAttributes",
    "Description": "Describes the attributes for the specified Application Load Balancer, Network Load Balancer, or Gateway Load Balancer"
  },
  {
    "API": "elbv2:DescribeLoadBalancers",
    "EventSource": "elbv2",
    "EventName": "DescribeLoadBalancers",
    "Description": "Describes the specified load balancers or all of your load balancers"
  },
  {
    "API": "elbv2:DescribeRules",
    "EventSource": "elbv2",
    "EventName": "DescribeRules",
    "Description": "Describes the specified rules or the rules for the specified listener"
  },
  {
    "API": "elbv2:DescribeSslPolicies",
    "EventSource": "elbv2",
    "EventName": "DescribeSslPolicies",
    "Description": "Describes the specified policies or all policies used for SSL negotiation"
  },
  {
    "API": "elbv2:DescribeTags",
    "EventSource": "elbv2",
    "EventName": "DescribeTags",
    "Description": "Describes the tags for the specified Elastic Load Balancing resources"
  },
  {
    "API": "elbv2:DescribeTargetGroupAttributes",
    "EventSource": "elbv2",
    "EventName": "DescribeTargetGroupAttributes",
    "Description": "Describes the attributes for the specified target group"
  },
  {
    "API": "elbv2:DescribeTargetGroups",
    "EventSource": "elbv2",
    "EventName": "DescribeTargetGroups",
    "Description": "Describes the specified target groups or all of your target groups"
  },
  {
    "API": "elbv2:DescribeTargetHealth",
    "EventSource": "elbv2",
    "EventName": "DescribeTargetHealth",
    "Description": "Describes the health of the specified targets or all of your targets"
  },
  {
    "API": "elbv2:DescribeTrustStoreAssociations",
    "EventSource": "elbv2",
    "EventName": "DescribeTrustStoreAssociations",
    "Description": "Describes all resources associated with the specified trust store"
  },
  {
    "API": "elbv2:DescribeTrustStoreRevocations",
    "EventSource": "elbv2",
    "EventName": "DescribeTrustStoreRevocations",
    "Description": "Describes the revocation files in use by the specified trust store arn, or revocation ID"
  },
  {
    "API": "elbv2:DescribeTrustStores",
    "EventSource": "elbv2",
    "EventName": "DescribeTrustStores",
    "Description": "Describes all trust stores for a given account by trust store arn’s or name"
  },
  {
    "API": "elbv2:GeneratePresignedUrl",
    "EventSource": "elbv2",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "elbv2:GetTrustStoreCaCertificatesBundle",
    "EventSource": "elbv2",
    "EventName": "GetTrustStoreCaCertificatesBundle",
    "Description": "Retrieves the ca certificate bundle"
  },
  {
    "API": "elbv2:GetTrustStoreRevocationContent",
    "EventSource": "elbv2",
    "EventName": "GetTrustStoreRevocationContent",
    "Description": "Retrieves the specified revocation file"
  },
  {
    "API": "elbv2:ModifyListener",
    "EventSource": "elbv2",
    "EventName": "ModifyListener",
    "Description": "Replaces the specified properties of the specified listener"
  },
  {
    "API": "elbv2:ModifyLoadBalancerAttributes",
    "EventSource": "elbv2",
    "EventName": "ModifyLoadBalancerAttributes",
    "Description": "Modifies the specified attributes of the specified Application Load Balancer, Network Load Balancer, or Gateway Load Balancer"
  },
  {
    "API": "elbv2:ModifyRule",
    "EventSource": "elbv2",
    "EventName": "ModifyRule",
    "Description": "Replaces the specified properties of the specified rule"
  },
  {
    "API": "elbv2:ModifyTargetGroup",
    "EventSource": "elbv2",
    "EventName": "ModifyTargetGroup",
    "Description": "Modifies the health checks used when evaluating the health state of the targets in the specified target group"
  },
  {
    "API": "elbv2:ModifyTargetGroupAttributes",
    "EventSource": "elbv2",
    "EventName": "ModifyTargetGroupAttributes",
    "Description": "Modifies the specified attributes of the specified target group"
  },
  {
    "API": "elbv2:ModifyTrustStore",
    "EventSource": "elbv2",
    "EventName": "ModifyTrustStore",
    "Description": "Update the ca certificate bundle for a given trust store"
  },
  {
    "API": "elbv2:RegisterTargets",
    "EventSource": "elbv2",
    "EventName": "RegisterTargets",
    "Description": "Registers the specified targets with the specified target group"
  },
  {
    "API": "elbv2:RemoveListenerCertificates",
    "EventSource": "elbv2",
    "EventName": "RemoveListenerCertificates",
    "Description": "Removes the specified certificate from the certificate list for the specified HTTPS or TLS listener"
  },
  {
    "API": "elbv2:RemoveTags",
    "EventSource": "elbv2",
    "EventName": "RemoveTags",
    "Description": "Removes the specified tags from the specified Elastic Load Balancing resources"
  },
  {
    "API": "elbv2:RemoveTrustStoreRevocations",
    "EventSource": "elbv2",
    "EventName": "RemoveTrustStoreRevocations",
    "Description": "Removes the specified revocation file from the specified trust store"
  },
  {
    "API": "elbv2:SetIpAddressType",
    "EventSource": "elbv2",
    "EventName": "SetIpAddressType",
    "Description": "Sets the type of IP addresses used by the subnets of the specified load balancer"
  },
  {
    "API": "elbv2:SetRulePriorities",
    "EventSource": "elbv2",
    "EventName": "SetRulePriorities",
    "Description": "Sets the priorities of the specified rules"
  },
  {
    "API": "elbv2:SetSecurityGroups",
    "EventSource": "elbv2",
    "EventName": "SetSecurityGroups",
    "Description": "Associates the specified security groups with the specified Application Load Balancer or Network Load Balancer"
  },
  {
    "API": "elbv2:SetSubnets",
    "EventSource": "elbv2",
    "EventName": "SetSubnets",
    "Description": "Enables the Availability Zones for the specified public subnets for the specified Application Load Balancer, Network Load Balancer or Gateway Load Balancer"
  },
  {
    "API": "emr:AddInstanceFleet",
    "EventSource": "emr",
    "EventName": "AddInstanceFleet",
    "Description": "Adds an instance fleet to a running cluster"
  },
  {
    "API": "emr:AddInstanceGroups",
    "EventSource": "emr",
    "EventName": "AddInstanceGroups",
    "Description": "Adds one or more instance groups to a running cluster"
  },
  {
    "API": "emr:AddJobFlowSteps",
    "EventSource": "emr",
    "EventName": "AddJobFlowSteps",
    "Description": "AddJobFlowSteps adds new steps to a running cluster"
  },
  {
    "API": "emr:AddTags",
    "EventSource": "emr",
    "EventName": "AddTags",
    "Description": "Adds tags to an Amazon EMR resource, such as a cluster or an Amazon EMR Studio"
  },
  {
    "API": "emr:CancelSteps",
    "EventSource": "emr",
    "EventName": "CancelSteps",
    "Description": "Cancels a pending step or steps in a running cluster"
  },
  {
    "API": "emr:CreateSecurityConfiguration",
    "EventSource": "emr",
    "EventName": "CreateSecurityConfiguration",
    "Description": "Creates a security configuration, which is stored in the service and can be specified when a cluster is created"
  },
  {
    "API": "emr:CreateStudio",
    "EventSource": "emr",
    "EventName": "CreateStudio",
    "Description": "Creates a new Amazon EMR Studio"
  },
  {
    "API": "emr:CreateStudioSessionMapping",
    "EventSource": "emr",
    "EventName": "CreateStudioSessionMapping",
    "Description": "Maps a user or group to the Amazon EMR Studio specified by ``StudioId``, and applies a session policy to refine Studio permissions for that user or group"
  },
  {
    "API": "emr:DeleteSecurityConfiguration",
    "EventSource": "emr",
    "EventName": "DeleteSecurityConfiguration",
    "Description": "Deletes a security configuration"
  },
  {
    "API": "emr:DeleteStudio",
    "EventSource": "emr",
    "EventName": "DeleteStudio",
    "Description": "Removes an Amazon EMR Studio from the Studio metadata store"
  },
  {
    "API": "emr:DeleteStudioSessionMapping",
    "EventSource": "emr",
    "EventName": "DeleteStudioSessionMapping",
    "Description": "Removes a user or group from an Amazon EMR Studio"
  },
  {
    "API": "emr:DescribeCluster",
    "EventSource": "emr",
    "EventName": "DescribeCluster",
    "Description": "Provides cluster-level details including status, hardware and software configuration, VPC settings, and so on"
  },
  {
    "API": "emr:DescribeJobFlows",
    "EventSource": "emr",
    "EventName": "DescribeJobFlows",
    "Description": "This API is no longer supported and will eventually be removed"
  },
  {
    "API": "emr:DescribeNotebookExecution",
    "EventSource": "emr",
    "EventName": "DescribeNotebookExecution",
    "Description": "Provides details of a notebook execution"
  },
  {
    "API": "emr:DescribeReleaseLabel",
    "EventSource": "emr",
    "EventName": "DescribeReleaseLabel",
    "Description": "Provides Amazon EMR release label details, such as the releases available the Region where the API request is run, and the available applications for a specific Amazon EMR release label"
  },
  {
    "API": "emr:DescribeSecurityConfiguration",
    "EventSource": "emr",
    "EventName": "DescribeSecurityConfiguration",
    "Description": "Provides the details of a security configuration by returning the configuration JSON"
  },
  {
    "API": "emr:DescribeStep",
    "EventSource": "emr",
    "EventName": "DescribeStep",
    "Description": "Provides more detail about the cluster step"
  },
  {
    "API": "emr:DescribeStudio",
    "EventSource": "emr",
    "EventName": "DescribeStudio",
    "Description": "Returns details for the specified Amazon EMR Studio including ID, Name, VPC, Studio access URL, and so on"
  },
  {
    "API": "emr:GeneratePresignedUrl",
    "EventSource": "emr",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "emr:GetAutoTerminationPolicy",
    "EventSource": "emr",
    "EventName": "GetAutoTerminationPolicy",
    "Description": "Returns the auto-termination policy for an Amazon EMR cluster"
  },
  {
    "API": "emr:GetBlockPublicAccessConfiguration",
    "EventSource": "emr",
    "EventName": "GetBlockPublicAccessConfiguration",
    "Description": "Returns the Amazon EMR block public access configuration for your Amazon Web Services account in the current Region"
  },
  {
    "API": "emr:GetClusterSessionCredentials",
    "EventSource": "emr",
    "EventName": "GetClusterSessionCredentials",
    "Description": "Provides temporary, HTTP basic credentials that are associated with a given runtime IAM role and used by a cluster with fine-grained access control activated"
  },
  {
    "API": "emr:GetManagedScalingPolicy",
    "EventSource": "emr",
    "EventName": "GetManagedScalingPolicy",
    "Description": "Fetches the attached managed scaling policy for an Amazon EMR cluster"
  },
  {
    "API": "emr:GetStudioSessionMapping",
    "EventSource": "emr",
    "EventName": "GetStudioSessionMapping",
    "Description": "Fetches mapping details for the specified Amazon EMR Studio and identity (user or group)"
  },
  {
    "API": "emr:ListBootstrapActions",
    "EventSource": "emr",
    "EventName": "ListBootstrapActions",
    "Description": "Provides information about the bootstrap actions associated with a cluster"
  },
  {
    "API": "emr:ListClusters",
    "EventSource": "emr",
    "EventName": "ListClusters",
    "Description": "Provides the status of all clusters visible to this Amazon Web Services account"
  },
  {
    "API": "emr:ListInstanceFleets",
    "EventSource": "emr",
    "EventName": "ListInstanceFleets",
    "Description": "Lists all available details about the instance fleets in a cluster"
  },
  {
    "API": "emr:ListInstanceGroups",
    "EventSource": "emr",
    "EventName": "ListInstanceGroups",
    "Description": "Provides all available details about the instance groups in a cluster"
  },
  {
    "API": "emr:ListInstances",
    "EventSource": "emr",
    "EventName": "ListInstances",
    "Description": "Provides information for all active Amazon EC2 instances and Amazon EC2 instances terminated in the last 30 days, up to a maximum of 2,000"
  },
  {
    "API": "emr:ListNotebookExecutions",
    "EventSource": "emr",
    "EventName": "ListNotebookExecutions",
    "Description": "Provides summaries of all notebook executions"
  },
  {
    "API": "emr:ListReleaseLabels",
    "EventSource": "emr",
    "EventName": "ListReleaseLabels",
    "Description": "Retrieves release labels of Amazon EMR services in the Region where the API is called"
  },
  {
    "API": "emr:ListSecurityConfigurations",
    "EventSource": "emr",
    "EventName": "ListSecurityConfigurations",
    "Description": "Lists all the security configurations visible to this account, providing their creation dates and times, and their names"
  },
  {
    "API": "emr:ListSteps",
    "EventSource": "emr",
    "EventName": "ListSteps",
    "Description": "Provides a list of steps for the cluster in reverse order unless you specify ``stepIds`` with the request or filter by ``StepStates``"
  },
  {
    "API": "emr:ListStudioSessionMappings",
    "EventSource": "emr",
    "EventName": "ListStudioSessionMappings",
    "Description": "Returns a list of all user or group session mappings for the Amazon EMR Studio specified by ``StudioId``"
  },
  {
    "API": "emr:ListStudios",
    "EventSource": "emr",
    "EventName": "ListStudios",
    "Description": "Returns a list of all Amazon EMR Studios associated with the Amazon Web Services account"
  },
  {
    "API": "emr:ListSupportedInstanceTypes",
    "EventSource": "emr",
    "EventName": "ListSupportedInstanceTypes",
    "Description": "A list of the instance types that Amazon EMR supports"
  },
  {
    "API": "emr:ModifyCluster",
    "EventSource": "emr",
    "EventName": "ModifyCluster",
    "Description": "Modifies the number of steps that can be executed concurrently for the cluster specified using ClusterID"
  },
  {
    "API": "emr:ModifyInstanceFleet",
    "EventSource": "emr",
    "EventName": "ModifyInstanceFleet",
    "Description": "Modifies the target On-Demand and target Spot capacities for the instance fleet with the specified InstanceFleetID within the cluster specified using ClusterID"
  },
  {
    "API": "emr:ModifyInstanceGroups",
    "EventSource": "emr",
    "EventName": "ModifyInstanceGroups",
    "Description": "ModifyInstanceGroups modifies the number of nodes and configuration settings of an instance group"
  },
  {
    "API": "emr:PutAutoScalingPolicy",
    "EventSource": "emr",
    "EventName": "PutAutoScalingPolicy",
    "Description": "Creates or updates an automatic scaling policy for a core instance group or task instance group in an Amazon EMR cluster"
  },
  {
    "API": "emr:PutAutoTerminationPolicy",
    "EventSource": "emr",
    "EventName": "PutAutoTerminationPolicy",
    "Description": ""
  },
  {
    "API": "emr:PutBlockPublicAccessConfiguration",
    "EventSource": "emr",
    "EventName": "PutBlockPublicAccessConfiguration",
    "Description": "Creates or updates an Amazon EMR block public access configuration for your Amazon Web Services account in the current Region"
  },
  {
    "API": "emr:PutManagedScalingPolicy",
    "EventSource": "emr",
    "EventName": "PutManagedScalingPolicy",
    "Description": "Creates or updates a managed scaling policy for an Amazon EMR cluster"
  },
  {
    "API": "emr:RemoveAutoScalingPolicy",
    "EventSource": "emr",
    "EventName": "RemoveAutoScalingPolicy",
    "Description": "Removes an automatic scaling policy from a specified instance group within an Amazon EMR cluster"
  },
  {
    "API": "emr:RemoveAutoTerminationPolicy",
    "EventSource": "emr",
    "EventName": "RemoveAutoTerminationPolicy",
    "Description": "Removes an auto-termination policy from an Amazon EMR cluster"
  },
  {
    "API": "emr:RemoveManagedScalingPolicy",
    "EventSource": "emr",
    "EventName": "RemoveManagedScalingPolicy",
    "Description": "Removes a managed scaling policy from a specified Amazon EMR cluster"
  },
  {
    "API": "emr:RemoveTags",
    "EventSource": "emr",
    "EventName": "RemoveTags",
    "Description": "Removes tags from an Amazon EMR resource, such as a cluster or Amazon EMR Studio"
  },
  {
    "API": "emr:RunJobFlow",
    "EventSource": "emr",
    "EventName": "RunJobFlow",
    "Description": "RunJobFlow creates and starts running a new cluster (job flow)"
  },
  {
    "API": "emr:SetKeepJobFlowAliveWhenNoSteps",
    "EventSource": "emr",
    "EventName": "SetKeepJobFlowAliveWhenNoSteps",
    "Description": "You can use the ``SetKeepJobFlowAliveWhenNoSteps`` to configure a cluster (job flow) to terminate after the step execution, i"
  },
  {
    "API": "emr:SetTerminationProtection",
    "EventSource": "emr",
    "EventName": "SetTerminationProtection",
    "Description": "SetTerminationProtection locks a cluster (job flow) so the Amazon EC2 instances in the cluster cannot be terminated by user intervention, an API call, or in the event of a job-flow error"
  },
  {
    "API": "emr:SetUnhealthyNodeReplacement",
    "EventSource": "emr",
    "EventName": "SetUnhealthyNodeReplacement",
    "Description": "Specify whether to enable unhealthy node replacement, which lets Amazon EMR gracefully replace core nodes on a cluster if any nodes become unhealthy"
  },
  {
    "API": "emr:SetVisibleToAllUsers",
    "EventSource": "emr",
    "EventName": "SetVisibleToAllUsers",
    "Description": ""
  },
  {
    "API": "emr:StartNotebookExecution",
    "EventSource": "emr",
    "EventName": "StartNotebookExecution",
    "Description": "Starts a notebook execution"
  },
  {
    "API": "emr:StopNotebookExecution",
    "EventSource": "emr",
    "EventName": "StopNotebookExecution",
    "Description": "Stops a notebook execution"
  },
  {
    "API": "emr:TerminateJobFlows",
    "EventSource": "emr",
    "EventName": "TerminateJobFlows",
    "Description": "TerminateJobFlows shuts a list of clusters (job flows) down"
  },
  {
    "API": "emr:UpdateStudio",
    "EventSource": "emr",
    "EventName": "UpdateStudio",
    "Description": "Updates an Amazon EMR Studio configuration, including attributes such as name, description, and subnets"
  },
  {
    "API": "emr:UpdateStudioSessionMapping",
    "EventSource": "emr",
    "EventName": "UpdateStudioSessionMapping",
    "Description": "Updates the session policy attached to the user or group for the specified Amazon EMR Studio"
  },
  {
    "API": "emr-containers:CancelJobRun",
    "EventSource": "emr-containers",
    "EventName": "CancelJobRun",
    "Description": "Cancels a job run"
  },
  {
    "API": "emr-containers:CreateJobTemplate",
    "EventSource": "emr-containers",
    "EventName": "CreateJobTemplate",
    "Description": "Creates a job template"
  },
  {
    "API": "emr-containers:CreateManagedEndpoint",
    "EventSource": "emr-containers",
    "EventName": "CreateManagedEndpoint",
    "Description": "Creates a managed endpoint"
  },
  {
    "API": "emr-containers:CreateSecurityConfiguration",
    "EventSource": "emr-containers",
    "EventName": "CreateSecurityConfiguration",
    "Description": "Creates a security configuration"
  },
  {
    "API": "emr-containers:CreateVirtualCluster",
    "EventSource": "emr-containers",
    "EventName": "CreateVirtualCluster",
    "Description": "Creates a virtual cluster"
  },
  {
    "API": "emr-containers:DeleteJobTemplate",
    "EventSource": "emr-containers",
    "EventName": "DeleteJobTemplate",
    "Description": "Deletes a job template"
  },
  {
    "API": "emr-containers:DeleteManagedEndpoint",
    "EventSource": "emr-containers",
    "EventName": "DeleteManagedEndpoint",
    "Description": "Deletes a managed endpoint"
  },
  {
    "API": "emr-containers:DeleteVirtualCluster",
    "EventSource": "emr-containers",
    "EventName": "DeleteVirtualCluster",
    "Description": "Deletes a virtual cluster"
  },
  {
    "API": "emr-containers:DescribeJobRun",
    "EventSource": "emr-containers",
    "EventName": "DescribeJobRun",
    "Description": "Displays detailed information about a job run"
  },
  {
    "API": "emr-containers:DescribeJobTemplate",
    "EventSource": "emr-containers",
    "EventName": "DescribeJobTemplate",
    "Description": "Displays detailed information about a specified job template"
  },
  {
    "API": "emr-containers:DescribeManagedEndpoint",
    "EventSource": "emr-containers",
    "EventName": "DescribeManagedEndpoint",
    "Description": "Displays detailed information about a managed endpoint"
  },
  {
    "API": "emr-containers:DescribeSecurityConfiguration",
    "EventSource": "emr-containers",
    "EventName": "DescribeSecurityConfiguration",
    "Description": "Displays detailed information about a specified security configuration"
  },
  {
    "API": "emr-containers:DescribeVirtualCluster",
    "EventSource": "emr-containers",
    "EventName": "DescribeVirtualCluster",
    "Description": "Displays detailed information about a specified virtual cluster"
  },
  {
    "API": "emr-containers:GeneratePresignedUrl",
    "EventSource": "emr-containers",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "emr-containers:GetManagedEndpointSessionCredentials",
    "EventSource": "emr-containers",
    "EventName": "GetManagedEndpointSessionCredentials",
    "Description": "Generate a session token to connect to a managed endpoint"
  },
  {
    "API": "emr-containers:ListJobRuns",
    "EventSource": "emr-containers",
    "EventName": "ListJobRuns",
    "Description": "Lists job runs based on a set of parameters"
  },
  {
    "API": "emr-containers:ListJobTemplates",
    "EventSource": "emr-containers",
    "EventName": "ListJobTemplates",
    "Description": "Lists job templates based on a set of parameters"
  },
  {
    "API": "emr-containers:ListManagedEndpoints",
    "EventSource": "emr-containers",
    "EventName": "ListManagedEndpoints",
    "Description": "Lists managed endpoints based on a set of parameters"
  },
  {
    "API": "emr-containers:ListSecurityConfigurations",
    "EventSource": "emr-containers",
    "EventName": "ListSecurityConfigurations",
    "Description": "Lists security configurations based on a set of parameters"
  },
  {
    "API": "emr-containers:ListTagsForResource",
    "EventSource": "emr-containers",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags assigned to the resources"
  },
  {
    "API": "emr-containers:ListVirtualClusters",
    "EventSource": "emr-containers",
    "EventName": "ListVirtualClusters",
    "Description": "Lists information about the specified virtual cluster"
  },
  {
    "API": "emr-containers:StartJobRun",
    "EventSource": "emr-containers",
    "EventName": "StartJobRun",
    "Description": "Starts a job run"
  },
  {
    "API": "emr-containers:TagResource",
    "EventSource": "emr-containers",
    "EventName": "TagResource",
    "Description": "Assigns tags to resources"
  },
  {
    "API": "emr-containers:UntagResource",
    "EventSource": "emr-containers",
    "EventName": "UntagResource",
    "Description": "Removes tags from resources"
  },
  {
    "API": "emr-serverless:CancelJobRun",
    "EventSource": "emr-serverless",
    "EventName": "CancelJobRun",
    "Description": "Cancels a job run"
  },
  {
    "API": "emr-serverless:CreateApplication",
    "EventSource": "emr-serverless",
    "EventName": "CreateApplication",
    "Description": "Creates an application"
  },
  {
    "API": "emr-serverless:DeleteApplication",
    "EventSource": "emr-serverless",
    "EventName": "DeleteApplication",
    "Description": "Deletes an application"
  },
  {
    "API": "emr-serverless:GeneratePresignedUrl",
    "EventSource": "emr-serverless",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "emr-serverless:GetApplication",
    "EventSource": "emr-serverless",
    "EventName": "GetApplication",
    "Description": "Displays detailed information about a specified application"
  },
  {
    "API": "emr-serverless:GetDashboardForJobRun",
    "EventSource": "emr-serverless",
    "EventName": "GetDashboardForJobRun",
    "Description": "Creates and returns a URL that you can use to access the application UIs for a job run"
  },
  {
    "API": "emr-serverless:GetJobRun",
    "EventSource": "emr-serverless",
    "EventName": "GetJobRun",
    "Description": "Displays detailed information about a job run"
  },
  {
    "API": "emr-serverless:ListApplications",
    "EventSource": "emr-serverless",
    "EventName": "ListApplications",
    "Description": "Lists applications based on a set of parameters"
  },
  {
    "API": "emr-serverless:ListJobRunAttempts",
    "EventSource": "emr-serverless",
    "EventName": "ListJobRunAttempts",
    "Description": "Lists all attempt of a job run"
  },
  {
    "API": "emr-serverless:ListJobRuns",
    "EventSource": "emr-serverless",
    "EventName": "ListJobRuns",
    "Description": "Lists job runs based on a set of parameters"
  },
  {
    "API": "emr-serverless:ListTagsForResource",
    "EventSource": "emr-serverless",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags assigned to the resources"
  },
  {
    "API": "emr-serverless:StartApplication",
    "EventSource": "emr-serverless",
    "EventName": "StartApplication",
    "Description": "Starts a specified application and initializes initial capacity if configured"
  },
  {
    "API": "emr-serverless:StartJobRun",
    "EventSource": "emr-serverless",
    "EventName": "StartJobRun",
    "Description": "Starts a job run"
  },
  {
    "API": "emr-serverless:StopApplication",
    "EventSource": "emr-serverless",
    "EventName": "StopApplication",
    "Description": "Stops a specified application and releases initial capacity if configured"
  },
  {
    "API": "emr-serverless:TagResource",
    "EventSource": "emr-serverless",
    "EventName": "TagResource",
    "Description": "Assigns tags to resources"
  },
  {
    "API": "emr-serverless:UntagResource",
    "EventSource": "emr-serverless",
    "EventName": "UntagResource",
    "Description": "Removes tags from resources"
  },
  {
    "API": "emr-serverless:UpdateApplication",
    "EventSource": "emr-serverless",
    "EventName": "UpdateApplication",
    "Description": "Updates a specified application"
  },
  {
    "API": "entityresolution:AddPolicyStatement",
    "EventSource": "entityresolution",
    "EventName": "AddPolicyStatement",
    "Description": "Adds a policy statement object"
  },
  {
    "API": "entityresolution:BatchDeleteUniqueId",
    "EventSource": "entityresolution",
    "EventName": "BatchDeleteUniqueId",
    "Description": "Deletes multiple unique IDs in a matching workflow"
  },
  {
    "API": "entityresolution:CreateIdMappingWorkflow",
    "EventSource": "entityresolution",
    "EventName": "CreateIdMappingWorkflow",
    "Description": "Creates an ``IdMappingWorkflow`` object which stores the configuration of the data processing job to be run"
  },
  {
    "API": "entityresolution:CreateIdNamespace",
    "EventSource": "entityresolution",
    "EventName": "CreateIdNamespace",
    "Description": "Creates an ID namespace object which will help customers provide metadata explaining their dataset and how to use it"
  },
  {
    "API": "entityresolution:CreateMatchingWorkflow",
    "EventSource": "entityresolution",
    "EventName": "CreateMatchingWorkflow",
    "Description": "Creates a ``MatchingWorkflow`` object which stores the configuration of the data processing job to be run"
  },
  {
    "API": "entityresolution:CreateSchemaMapping",
    "EventSource": "entityresolution",
    "EventName": "CreateSchemaMapping",
    "Description": "Creates a schema mapping, which defines the schema of the input customer records table"
  },
  {
    "API": "entityresolution:DeleteIdMappingWorkflow",
    "EventSource": "entityresolution",
    "EventName": "DeleteIdMappingWorkflow",
    "Description": "Deletes the ``IdMappingWorkflow`` with a given name"
  },
  {
    "API": "entityresolution:DeleteIdNamespace",
    "EventSource": "entityresolution",
    "EventName": "DeleteIdNamespace",
    "Description": "Deletes the ``IdNamespace`` with a given name"
  },
  {
    "API": "entityresolution:DeleteMatchingWorkflow",
    "EventSource": "entityresolution",
    "EventName": "DeleteMatchingWorkflow",
    "Description": "Deletes the ``MatchingWorkflow`` with a given name"
  },
  {
    "API": "entityresolution:DeletePolicyStatement",
    "EventSource": "entityresolution",
    "EventName": "DeletePolicyStatement",
    "Description": "Deletes the policy statement"
  },
  {
    "API": "entityresolution:DeleteSchemaMapping",
    "EventSource": "entityresolution",
    "EventName": "DeleteSchemaMapping",
    "Description": "Deletes the ``SchemaMapping`` with a given name"
  },
  {
    "API": "entityresolution:GeneratePresignedUrl",
    "EventSource": "entityresolution",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "entityresolution:GetIdMappingJob",
    "EventSource": "entityresolution",
    "EventName": "GetIdMappingJob",
    "Description": "Gets the status, metrics, and errors (if there are any) that are associated with a job"
  },
  {
    "API": "entityresolution:GetIdMappingWorkflow",
    "EventSource": "entityresolution",
    "EventName": "GetIdMappingWorkflow",
    "Description": "Returns the ``IdMappingWorkflow`` with a given name, if it exists"
  },
  {
    "API": "entityresolution:GetIdNamespace",
    "EventSource": "entityresolution",
    "EventName": "GetIdNamespace",
    "Description": "Returns the ``IdNamespace`` with a given name, if it exists"
  },
  {
    "API": "entityresolution:GetMatchId",
    "EventSource": "entityresolution",
    "EventName": "GetMatchId",
    "Description": "Returns the corresponding Match ID of a customer record if the record has been processed"
  },
  {
    "API": "entityresolution:GetMatchingJob",
    "EventSource": "entityresolution",
    "EventName": "GetMatchingJob",
    "Description": "Gets the status, metrics, and errors (if there are any) that are associated with a job"
  },
  {
    "API": "entityresolution:GetMatchingWorkflow",
    "EventSource": "entityresolution",
    "EventName": "GetMatchingWorkflow",
    "Description": "Returns the ``MatchingWorkflow`` with a given name, if it exists"
  },
  {
    "API": "entityresolution:GetPolicy",
    "EventSource": "entityresolution",
    "EventName": "GetPolicy",
    "Description": "Returns the resource-based policy"
  },
  {
    "API": "entityresolution:GetProviderService",
    "EventSource": "entityresolution",
    "EventName": "GetProviderService",
    "Description": "Returns the ``ProviderService`` of a given name"
  },
  {
    "API": "entityresolution:GetSchemaMapping",
    "EventSource": "entityresolution",
    "EventName": "GetSchemaMapping",
    "Description": "Returns the SchemaMapping of a given name"
  },
  {
    "API": "entityresolution:ListIdMappingJobs",
    "EventSource": "entityresolution",
    "EventName": "ListIdMappingJobs",
    "Description": "Lists all ID mapping jobs for a given workflow"
  },
  {
    "API": "entityresolution:ListIdMappingWorkflows",
    "EventSource": "entityresolution",
    "EventName": "ListIdMappingWorkflows",
    "Description": "Returns a list of all the ``IdMappingWorkflows`` that have been created for an Amazon Web Services account"
  },
  {
    "API": "entityresolution:ListIdNamespaces",
    "EventSource": "entityresolution",
    "EventName": "ListIdNamespaces",
    "Description": "Returns a list of all ID namespaces"
  },
  {
    "API": "entityresolution:ListMatchingJobs",
    "EventSource": "entityresolution",
    "EventName": "ListMatchingJobs",
    "Description": "Lists all jobs for a given workflow"
  },
  {
    "API": "entityresolution:ListMatchingWorkflows",
    "EventSource": "entityresolution",
    "EventName": "ListMatchingWorkflows",
    "Description": "Returns a list of all the ``MatchingWorkflows`` that have been created for an Amazon Web Services account"
  },
  {
    "API": "entityresolution:ListProviderServices",
    "EventSource": "entityresolution",
    "EventName": "ListProviderServices",
    "Description": "Returns a list of all the ``ProviderServices`` that are available in this Amazon Web Services Region"
  },
  {
    "API": "entityresolution:ListSchemaMappings",
    "EventSource": "entityresolution",
    "EventName": "ListSchemaMappings",
    "Description": "Returns a list of all the ``SchemaMappings`` that have been created for an Amazon Web Services account"
  },
  {
    "API": "entityresolution:ListTagsForResource",
    "EventSource": "entityresolution",
    "EventName": "ListTagsForResource",
    "Description": "Displays the tags associated with an Entity Resolution resource"
  },
  {
    "API": "entityresolution:PutPolicy",
    "EventSource": "entityresolution",
    "EventName": "PutPolicy",
    "Description": "Updates the resource-based policy"
  },
  {
    "API": "entityresolution:StartIdMappingJob",
    "EventSource": "entityresolution",
    "EventName": "StartIdMappingJob",
    "Description": "Starts the ``IdMappingJob`` of a workflow"
  },
  {
    "API": "entityresolution:StartMatchingJob",
    "EventSource": "entityresolution",
    "EventName": "StartMatchingJob",
    "Description": "Starts the ``MatchingJob`` of a workflow"
  },
  {
    "API": "entityresolution:TagResource",
    "EventSource": "entityresolution",
    "EventName": "TagResource",
    "Description": "Assigns one or more tags (key-value pairs) to the specified Entity Resolution resource"
  },
  {
    "API": "entityresolution:UntagResource",
    "EventSource": "entityresolution",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags from the specified Entity Resolution resource"
  },
  {
    "API": "entityresolution:UpdateIdMappingWorkflow",
    "EventSource": "entityresolution",
    "EventName": "UpdateIdMappingWorkflow",
    "Description": "Updates an existing ``IdMappingWorkflow``"
  },
  {
    "API": "entityresolution:UpdateIdNamespace",
    "EventSource": "entityresolution",
    "EventName": "UpdateIdNamespace",
    "Description": "Updates an existing ID namespace"
  },
  {
    "API": "entityresolution:UpdateMatchingWorkflow",
    "EventSource": "entityresolution",
    "EventName": "UpdateMatchingWorkflow",
    "Description": "Updates an existing ``MatchingWorkflow``"
  },
  {
    "API": "entityresolution:UpdateSchemaMapping",
    "EventSource": "entityresolution",
    "EventName": "UpdateSchemaMapping",
    "Description": "Updates a schema mapping"
  },
  {
    "API": "es:AcceptInboundCrossClusterSearchConnection",
    "EventSource": "es",
    "EventName": "AcceptInboundCrossClusterSearchConnection",
    "Description": "Allows the destination domain owner to accept an inbound cross-cluster search connection request"
  },
  {
    "API": "es:AddTags",
    "EventSource": "es",
    "EventName": "AddTags",
    "Description": "Attaches tags to an existing Elasticsearch domain"
  },
  {
    "API": "es:AssociatePackage",
    "EventSource": "es",
    "EventName": "AssociatePackage",
    "Description": "Associates a package with an Amazon ES domain"
  },
  {
    "API": "es:AuthorizeVpcEndpointAccess",
    "EventSource": "es",
    "EventName": "AuthorizeVpcEndpointAccess",
    "Description": "Provides access to an Amazon OpenSearch Service domain through the use of an interface VPC endpoint"
  },
  {
    "API": "es:CancelDomainConfigChange",
    "EventSource": "es",
    "EventName": "CancelDomainConfigChange",
    "Description": "Cancels a pending configuration change on an Amazon OpenSearch Service domain"
  },
  {
    "API": "es:CancelElasticsearchServiceSoftwareUpdate",
    "EventSource": "es",
    "EventName": "CancelElasticsearchServiceSoftwareUpdate",
    "Description": "Cancels a scheduled service software update for an Amazon ES domain"
  },
  {
    "API": "es:CreateElasticsearchDomain",
    "EventSource": "es",
    "EventName": "CreateElasticsearchDomain",
    "Description": "Creates a new Elasticsearch domain"
  },
  {
    "API": "es:CreateOutboundCrossClusterSearchConnection",
    "EventSource": "es",
    "EventName": "CreateOutboundCrossClusterSearchConnection",
    "Description": "Creates a new cross-cluster search connection from a source domain to a destination domain"
  },
  {
    "API": "es:CreatePackage",
    "EventSource": "es",
    "EventName": "CreatePackage",
    "Description": "Create a package for use with Amazon ES domains"
  },
  {
    "API": "es:CreateVpcEndpoint",
    "EventSource": "es",
    "EventName": "CreateVpcEndpoint",
    "Description": "Creates an Amazon OpenSearch Service-managed VPC endpoint"
  },
  {
    "API": "es:DeleteElasticsearchDomain",
    "EventSource": "es",
    "EventName": "DeleteElasticsearchDomain",
    "Description": "Permanently deletes the specified Elasticsearch domain and all of its data"
  },
  {
    "API": "es:DeleteElasticsearchServiceRole",
    "EventSource": "es",
    "EventName": "DeleteElasticsearchServiceRole",
    "Description": "Deletes the service-linked role that Elasticsearch Service uses to manage and maintain VPC domains"
  },
  {
    "API": "es:DeleteInboundCrossClusterSearchConnection",
    "EventSource": "es",
    "EventName": "DeleteInboundCrossClusterSearchConnection",
    "Description": "Allows the destination domain owner to delete an existing inbound cross-cluster search connection"
  },
  {
    "API": "es:DeleteOutboundCrossClusterSearchConnection",
    "EventSource": "es",
    "EventName": "DeleteOutboundCrossClusterSearchConnection",
    "Description": "Allows the source domain owner to delete an existing outbound cross-cluster search connection"
  },
  {
    "API": "es:DeletePackage",
    "EventSource": "es",
    "EventName": "DeletePackage",
    "Description": "Delete the package"
  },
  {
    "API": "es:DeleteVpcEndpoint",
    "EventSource": "es",
    "EventName": "DeleteVpcEndpoint",
    "Description": "Deletes an Amazon OpenSearch Service-managed interface VPC endpoint"
  },
  {
    "API": "es:DescribeDomainAutoTunes",
    "EventSource": "es",
    "EventName": "DescribeDomainAutoTunes",
    "Description": "Provides scheduled Auto-Tune action details for the Elasticsearch domain, such as Auto-Tune action type, description, severity, and scheduled date"
  },
  {
    "API": "es:DescribeDomainChangeProgress",
    "EventSource": "es",
    "EventName": "DescribeDomainChangeProgress",
    "Description": "Returns information about the current blue/green deployment happening on a domain, including a change ID, status, and progress stages"
  },
  {
    "API": "es:DescribeElasticsearchDomain",
    "EventSource": "es",
    "EventName": "DescribeElasticsearchDomain",
    "Description": "Returns domain configuration information about the specified Elasticsearch domain, including the domain ID, domain endpoint, and domain ARN"
  },
  {
    "API": "es:DescribeElasticsearchDomainConfig",
    "EventSource": "es",
    "EventName": "DescribeElasticsearchDomainConfig",
    "Description": "Provides cluster configuration information about the specified Elasticsearch domain, such as the state, creation date, update version, and update date for cluster options"
  },
  {
    "API": "es:DescribeElasticsearchDomains",
    "EventSource": "es",
    "EventName": "DescribeElasticsearchDomains",
    "Description": "Returns domain configuration information about the specified Elasticsearch domains, including the domain ID, domain endpoint, and domain ARN"
  },
  {
    "API": "es:DescribeElasticsearchInstanceTypeLimits",
    "EventSource": "es",
    "EventName": "DescribeElasticsearchInstanceTypeLimits",
    "Description": "Describe Elasticsearch Limits for a given InstanceType and ElasticsearchVersion"
  },
  {
    "API": "es:DescribeInboundCrossClusterSearchConnections",
    "EventSource": "es",
    "EventName": "DescribeInboundCrossClusterSearchConnections",
    "Description": "Lists all the inbound cross-cluster search connections for a destination domain"
  },
  {
    "API": "es:DescribeOutboundCrossClusterSearchConnections",
    "EventSource": "es",
    "EventName": "DescribeOutboundCrossClusterSearchConnections",
    "Description": "Lists all the outbound cross-cluster search connections for a source domain"
  },
  {
    "API": "es:DescribePackages",
    "EventSource": "es",
    "EventName": "DescribePackages",
    "Description": "Describes all packages available to Amazon ES"
  },
  {
    "API": "es:DescribeReservedElasticsearchInstanceOfferings",
    "EventSource": "es",
    "EventName": "DescribeReservedElasticsearchInstanceOfferings",
    "Description": "Lists available reserved Elasticsearch instance offerings"
  },
  {
    "API": "es:DescribeReservedElasticsearchInstances",
    "EventSource": "es",
    "EventName": "DescribeReservedElasticsearchInstances",
    "Description": "Returns information about reserved Elasticsearch instances for this account"
  },
  {
    "API": "es:DescribeVpcEndpoints",
    "EventSource": "es",
    "EventName": "DescribeVpcEndpoints",
    "Description": "Describes one or more Amazon OpenSearch Service-managed VPC endpoints"
  },
  {
    "API": "es:DissociatePackage",
    "EventSource": "es",
    "EventName": "DissociatePackage",
    "Description": "Dissociates a package from the Amazon ES domain"
  },
  {
    "API": "es:GeneratePresignedUrl",
    "EventSource": "es",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "es:GetCompatibleElasticsearchVersions",
    "EventSource": "es",
    "EventName": "GetCompatibleElasticsearchVersions",
    "Description": "Returns a list of upgrade compatible Elastisearch versions"
  },
  {
    "API": "es:GetPackageVersionHistory",
    "EventSource": "es",
    "EventName": "GetPackageVersionHistory",
    "Description": "Returns a list of versions of the package, along with their creation time and commit message"
  },
  {
    "API": "es:GetUpgradeHistory",
    "EventSource": "es",
    "EventName": "GetUpgradeHistory",
    "Description": "Retrieves the complete history of the last 10 upgrades that were performed on the domain"
  },
  {
    "API": "es:GetUpgradeStatus",
    "EventSource": "es",
    "EventName": "GetUpgradeStatus",
    "Description": "Retrieves the latest status of the last upgrade or upgrade eligibility check that was performed on the domain"
  },
  {
    "API": "es:ListDomainNames",
    "EventSource": "es",
    "EventName": "ListDomainNames",
    "Description": "Returns the name of all Elasticsearch domains owned by the current user's account"
  },
  {
    "API": "es:ListDomainsForPackage",
    "EventSource": "es",
    "EventName": "ListDomainsForPackage",
    "Description": "Lists all Amazon ES domains associated with the package"
  },
  {
    "API": "es:ListElasticsearchInstanceTypes",
    "EventSource": "es",
    "EventName": "ListElasticsearchInstanceTypes",
    "Description": "List all Elasticsearch instance types that are supported for given ElasticsearchVersion"
  },
  {
    "API": "es:ListElasticsearchVersions",
    "EventSource": "es",
    "EventName": "ListElasticsearchVersions",
    "Description": "List all supported Elasticsearch versions"
  },
  {
    "API": "es:ListPackagesForDomain",
    "EventSource": "es",
    "EventName": "ListPackagesForDomain",
    "Description": "Lists all packages associated with the Amazon ES domain"
  },
  {
    "API": "es:ListTags",
    "EventSource": "es",
    "EventName": "ListTags",
    "Description": "Returns all tags for the given Elasticsearch domain"
  },
  {
    "API": "es:ListVpcEndpointAccess",
    "EventSource": "es",
    "EventName": "ListVpcEndpointAccess",
    "Description": "Retrieves information about each principal that is allowed to access a given Amazon OpenSearch Service domain through the use of an interface VPC endpoint"
  },
  {
    "API": "es:ListVpcEndpoints",
    "EventSource": "es",
    "EventName": "ListVpcEndpoints",
    "Description": "Retrieves all Amazon OpenSearch Service-managed VPC endpoints in the current account and Region"
  },
  {
    "API": "es:ListVpcEndpointsForDomain",
    "EventSource": "es",
    "EventName": "ListVpcEndpointsForDomain",
    "Description": "Retrieves all Amazon OpenSearch Service-managed VPC endpoints associated with a particular domain"
  },
  {
    "API": "es:PurchaseReservedElasticsearchInstanceOffering",
    "EventSource": "es",
    "EventName": "PurchaseReservedElasticsearchInstanceOffering",
    "Description": "Allows you to purchase reserved Elasticsearch instances"
  },
  {
    "API": "es:RejectInboundCrossClusterSearchConnection",
    "EventSource": "es",
    "EventName": "RejectInboundCrossClusterSearchConnection",
    "Description": "Allows the destination domain owner to reject an inbound cross-cluster search connection request"
  },
  {
    "API": "es:RemoveTags",
    "EventSource": "es",
    "EventName": "RemoveTags",
    "Description": "Removes the specified set of tags from the specified Elasticsearch domain"
  },
  {
    "API": "es:RevokeVpcEndpointAccess",
    "EventSource": "es",
    "EventName": "RevokeVpcEndpointAccess",
    "Description": "Revokes access to an Amazon OpenSearch Service domain that was provided through an interface VPC endpoint"
  },
  {
    "API": "es:StartElasticsearchServiceSoftwareUpdate",
    "EventSource": "es",
    "EventName": "StartElasticsearchServiceSoftwareUpdate",
    "Description": "Schedules a service software update for an Amazon ES domain"
  },
  {
    "API": "es:UpdateElasticsearchDomainConfig",
    "EventSource": "es",
    "EventName": "UpdateElasticsearchDomainConfig",
    "Description": "Modifies the cluster configuration of the specified Elasticsearch domain, setting as setting the instance type and the number of instances"
  },
  {
    "API": "es:UpdatePackage",
    "EventSource": "es",
    "EventName": "UpdatePackage",
    "Description": "Updates a package for use with Amazon ES domains"
  },
  {
    "API": "es:UpdateVpcEndpoint",
    "EventSource": "es",
    "EventName": "UpdateVpcEndpoint",
    "Description": "Modifies an Amazon OpenSearch Service-managed interface VPC endpoint"
  },
  {
    "API": "es:UpgradeElasticsearchDomain",
    "EventSource": "es",
    "EventName": "UpgradeElasticsearchDomain",
    "Description": "Allows you to either upgrade your domain or perform an Upgrade eligibility check to a compatible Elasticsearch version"
  },
  {
    "API": "events:ActivateEventSource",
    "EventSource": "events",
    "EventName": "ActivateEventSource",
    "Description": "Activates a partner event source that has been deactivated"
  },
  {
    "API": "events:CancelReplay",
    "EventSource": "events",
    "EventName": "CancelReplay",
    "Description": "Cancels the specified replay"
  },
  {
    "API": "events:CreateApiDestination",
    "EventSource": "events",
    "EventName": "CreateApiDestination",
    "Description": "Creates an API destination, which is an HTTP invocation endpoint configured as a target for events"
  },
  {
    "API": "events:CreateArchive",
    "EventSource": "events",
    "EventName": "CreateArchive",
    "Description": "Creates an archive of events with the specified settings"
  },
  {
    "API": "events:CreateConnection",
    "EventSource": "events",
    "EventName": "CreateConnection",
    "Description": "Creates a connection"
  },
  {
    "API": "events:CreateEndpoint",
    "EventSource": "events",
    "EventName": "CreateEndpoint",
    "Description": "Creates a global endpoint"
  },
  {
    "API": "events:CreateEventBus",
    "EventSource": "events",
    "EventName": "CreateEventBus",
    "Description": "Creates a new event bus within your account"
  },
  {
    "API": "events:CreatePartnerEventSource",
    "EventSource": "events",
    "EventName": "CreatePartnerEventSource",
    "Description": "Called by an SaaS partner to create a partner event source"
  },
  {
    "API": "events:DeactivateEventSource",
    "EventSource": "events",
    "EventName": "DeactivateEventSource",
    "Description": "You can use this operation to temporarily stop receiving events from the specified partner event source"
  },
  {
    "API": "events:DeauthorizeConnection",
    "EventSource": "events",
    "EventName": "DeauthorizeConnection",
    "Description": "Removes all authorization parameters from the connection"
  },
  {
    "API": "events:DeleteApiDestination",
    "EventSource": "events",
    "EventName": "DeleteApiDestination",
    "Description": "Deletes the specified API destination"
  },
  {
    "API": "events:DeleteArchive",
    "EventSource": "events",
    "EventName": "DeleteArchive",
    "Description": "Deletes the specified archive"
  },
  {
    "API": "events:DeleteConnection",
    "EventSource": "events",
    "EventName": "DeleteConnection",
    "Description": "Deletes a connection"
  },
  {
    "API": "events:DeleteEndpoint",
    "EventSource": "events",
    "EventName": "DeleteEndpoint",
    "Description": "Delete an existing global endpoint"
  },
  {
    "API": "events:DeleteEventBus",
    "EventSource": "events",
    "EventName": "DeleteEventBus",
    "Description": "Deletes the specified custom event bus or partner event bus"
  },
  {
    "API": "events:DeletePartnerEventSource",
    "EventSource": "events",
    "EventName": "DeletePartnerEventSource",
    "Description": "This operation is used by SaaS partners to delete a partner event source"
  },
  {
    "API": "events:DeleteRule",
    "EventSource": "events",
    "EventName": "DeleteRule",
    "Description": "Deletes the specified rule"
  },
  {
    "API": "events:DescribeApiDestination",
    "EventSource": "events",
    "EventName": "DescribeApiDestination",
    "Description": "Retrieves details about an API destination"
  },
  {
    "API": "events:DescribeArchive",
    "EventSource": "events",
    "EventName": "DescribeArchive",
    "Description": "Retrieves details about an archive"
  },
  {
    "API": "events:DescribeConnection",
    "EventSource": "events",
    "EventName": "DescribeConnection",
    "Description": "Retrieves details about a connection"
  },
  {
    "API": "events:DescribeEndpoint",
    "EventSource": "events",
    "EventName": "DescribeEndpoint",
    "Description": "Get the information about an existing global endpoint"
  },
  {
    "API": "events:DescribeEventBus",
    "EventSource": "events",
    "EventName": "DescribeEventBus",
    "Description": "Displays details about an event bus in your account"
  },
  {
    "API": "events:DescribeEventSource",
    "EventSource": "events",
    "EventName": "DescribeEventSource",
    "Description": "This operation lists details about a partner event source that is shared with your account"
  },
  {
    "API": "events:DescribePartnerEventSource",
    "EventSource": "events",
    "EventName": "DescribePartnerEventSource",
    "Description": "An SaaS partner can use this operation to list details about a partner event source that they have created"
  },
  {
    "API": "events:DescribeReplay",
    "EventSource": "events",
    "EventName": "DescribeReplay",
    "Description": "Retrieves details about a replay"
  },
  {
    "API": "events:DescribeRule",
    "EventSource": "events",
    "EventName": "DescribeRule",
    "Description": "Describes the specified rule"
  },
  {
    "API": "events:DisableRule",
    "EventSource": "events",
    "EventName": "DisableRule",
    "Description": "Disables the specified rule"
  },
  {
    "API": "events:EnableRule",
    "EventSource": "events",
    "EventName": "EnableRule",
    "Description": "Enables the specified rule"
  },
  {
    "API": "events:GeneratePresignedUrl",
    "EventSource": "events",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "events:ListApiDestinations",
    "EventSource": "events",
    "EventName": "ListApiDestinations",
    "Description": "Retrieves a list of API destination in the account in the current Region"
  },
  {
    "API": "events:ListArchives",
    "EventSource": "events",
    "EventName": "ListArchives",
    "Description": "Lists your archives"
  },
  {
    "API": "events:ListConnections",
    "EventSource": "events",
    "EventName": "ListConnections",
    "Description": "Retrieves a list of connections from the account"
  },
  {
    "API": "events:ListEndpoints",
    "EventSource": "events",
    "EventName": "ListEndpoints",
    "Description": "List the global endpoints associated with this account"
  },
  {
    "API": "events:ListEventBuses",
    "EventSource": "events",
    "EventName": "ListEventBuses",
    "Description": "Lists all the event buses in your account, including the default event bus, custom event buses, and partner event buses"
  },
  {
    "API": "events:ListEventSources",
    "EventSource": "events",
    "EventName": "ListEventSources",
    "Description": "You can use this to see all the partner event sources that have been shared with your Amazon Web Services account"
  },
  {
    "API": "events:ListPartnerEventSourceAccounts",
    "EventSource": "events",
    "EventName": "ListPartnerEventSourceAccounts",
    "Description": "An SaaS partner can use this operation to display the Amazon Web Services account ID that a particular partner event source name is associated with"
  },
  {
    "API": "events:ListPartnerEventSources",
    "EventSource": "events",
    "EventName": "ListPartnerEventSources",
    "Description": "An SaaS partner can use this operation to list all the partner event source names that they have created"
  },
  {
    "API": "events:ListReplays",
    "EventSource": "events",
    "EventName": "ListReplays",
    "Description": "Lists your replays"
  },
  {
    "API": "events:ListRuleNamesByTarget",
    "EventSource": "events",
    "EventName": "ListRuleNamesByTarget",
    "Description": "Lists the rules for the specified target"
  },
  {
    "API": "events:ListRules",
    "EventSource": "events",
    "EventName": "ListRules",
    "Description": "Lists your Amazon EventBridge rules"
  },
  {
    "API": "events:ListTagsForResource",
    "EventSource": "events",
    "EventName": "ListTagsForResource",
    "Description": "Displays the tags associated with an EventBridge resource"
  },
  {
    "API": "events:ListTargetsByRule",
    "EventSource": "events",
    "EventName": "ListTargetsByRule",
    "Description": "Lists the targets assigned to the specified rule"
  },
  {
    "API": "events:PutEvents",
    "EventSource": "events",
    "EventName": "PutEvents",
    "Description": "Sends custom events to Amazon EventBridge so that they can be matched to rules"
  },
  {
    "API": "events:PutPartnerEvents",
    "EventSource": "events",
    "EventName": "PutPartnerEvents",
    "Description": "This is used by SaaS partners to write events to a customer's partner event bus"
  },
  {
    "API": "events:PutPermission",
    "EventSource": "events",
    "EventName": "PutPermission",
    "Description": "Running ``PutPermission`` permits the specified Amazon Web Services account or Amazon Web Services organization to put events to the specified *event bus*"
  },
  {
    "API": "events:PutRule",
    "EventSource": "events",
    "EventName": "PutRule",
    "Description": "Creates or updates the specified rule"
  },
  {
    "API": "events:PutTargets",
    "EventSource": "events",
    "EventName": "PutTargets",
    "Description": "Adds the specified targets to the specified rule, or updates the targets if they are already associated with the rule"
  },
  {
    "API": "events:RemovePermission",
    "EventSource": "events",
    "EventName": "RemovePermission",
    "Description": "Revokes the permission of another Amazon Web Services account to be able to put events to the specified event bus"
  },
  {
    "API": "events:RemoveTargets",
    "EventSource": "events",
    "EventName": "RemoveTargets",
    "Description": "Removes the specified targets from the specified rule"
  },
  {
    "API": "events:StartReplay",
    "EventSource": "events",
    "EventName": "StartReplay",
    "Description": "Starts the specified replay"
  },
  {
    "API": "events:TagResource",
    "EventSource": "events",
    "EventName": "TagResource",
    "Description": "Assigns one or more tags (key-value pairs) to the specified EventBridge resource"
  },
  {
    "API": "events:TestEventPattern",
    "EventSource": "events",
    "EventName": "TestEventPattern",
    "Description": "Tests whether the specified event pattern matches the provided event"
  },
  {
    "API": "events:UntagResource",
    "EventSource": "events",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags from the specified EventBridge resource"
  },
  {
    "API": "events:UpdateApiDestination",
    "EventSource": "events",
    "EventName": "UpdateApiDestination",
    "Description": "Updates an API destination"
  },
  {
    "API": "events:UpdateArchive",
    "EventSource": "events",
    "EventName": "UpdateArchive",
    "Description": "Updates the specified archive"
  },
  {
    "API": "events:UpdateConnection",
    "EventSource": "events",
    "EventName": "UpdateConnection",
    "Description": "Updates settings for a connection"
  },
  {
    "API": "events:UpdateEndpoint",
    "EventSource": "events",
    "EventName": "UpdateEndpoint",
    "Description": "Update an existing endpoint"
  },
  {
    "API": "events:UpdateEventBus",
    "EventSource": "events",
    "EventName": "UpdateEventBus",
    "Description": "Updates the specified event bus"
  },
  {
    "API": "evidently:BatchEvaluateFeature",
    "EventSource": "evidently",
    "EventName": "BatchEvaluateFeature",
    "Description": "This operation assigns feature variation to user sessions"
  },
  {
    "API": "evidently:CreateExperiment",
    "EventSource": "evidently",
    "EventName": "CreateExperiment",
    "Description": "Creates an Evidently *experiment*"
  },
  {
    "API": "evidently:CreateFeature",
    "EventSource": "evidently",
    "EventName": "CreateFeature",
    "Description": "Creates an Evidently *feature* that you want to launch or test"
  },
  {
    "API": "evidently:CreateLaunch",
    "EventSource": "evidently",
    "EventName": "CreateLaunch",
    "Description": "Creates a *launch* of a given feature"
  },
  {
    "API": "evidently:CreateProject",
    "EventSource": "evidently",
    "EventName": "CreateProject",
    "Description": "Creates a project, which is the logical object in Evidently that can contain features, launches, and experiments"
  },
  {
    "API": "evidently:CreateSegment",
    "EventSource": "evidently",
    "EventName": "CreateSegment",
    "Description": "Use this operation to define a *segment* of your audience"
  },
  {
    "API": "evidently:DeleteExperiment",
    "EventSource": "evidently",
    "EventName": "DeleteExperiment",
    "Description": "Deletes an Evidently experiment"
  },
  {
    "API": "evidently:DeleteFeature",
    "EventSource": "evidently",
    "EventName": "DeleteFeature",
    "Description": "Deletes an Evidently feature"
  },
  {
    "API": "evidently:DeleteLaunch",
    "EventSource": "evidently",
    "EventName": "DeleteLaunch",
    "Description": "Deletes an Evidently launch"
  },
  {
    "API": "evidently:DeleteProject",
    "EventSource": "evidently",
    "EventName": "DeleteProject",
    "Description": "Deletes an Evidently project"
  },
  {
    "API": "evidently:DeleteSegment",
    "EventSource": "evidently",
    "EventName": "DeleteSegment",
    "Description": "Deletes a segment"
  },
  {
    "API": "evidently:EvaluateFeature",
    "EventSource": "evidently",
    "EventName": "EvaluateFeature",
    "Description": "This operation assigns a feature variation to one given user session"
  },
  {
    "API": "evidently:GeneratePresignedUrl",
    "EventSource": "evidently",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "evidently:GetExperiment",
    "EventSource": "evidently",
    "EventName": "GetExperiment",
    "Description": "Returns the details about one experiment"
  },
  {
    "API": "evidently:GetExperimentResults",
    "EventSource": "evidently",
    "EventName": "GetExperimentResults",
    "Description": "Retrieves the results of a running or completed experiment"
  },
  {
    "API": "evidently:GetFeature",
    "EventSource": "evidently",
    "EventName": "GetFeature",
    "Description": "Returns the details about one feature"
  },
  {
    "API": "evidently:GetLaunch",
    "EventSource": "evidently",
    "EventName": "GetLaunch",
    "Description": "Returns the details about one launch"
  },
  {
    "API": "evidently:GetProject",
    "EventSource": "evidently",
    "EventName": "GetProject",
    "Description": "Returns the details about one launch"
  },
  {
    "API": "evidently:GetSegment",
    "EventSource": "evidently",
    "EventName": "GetSegment",
    "Description": "Returns information about the specified segment"
  },
  {
    "API": "evidently:ListExperiments",
    "EventSource": "evidently",
    "EventName": "ListExperiments",
    "Description": "Returns configuration details about all the experiments in the specified project"
  },
  {
    "API": "evidently:ListFeatures",
    "EventSource": "evidently",
    "EventName": "ListFeatures",
    "Description": "Returns configuration details about all the features in the specified project"
  },
  {
    "API": "evidently:ListLaunches",
    "EventSource": "evidently",
    "EventName": "ListLaunches",
    "Description": "Returns configuration details about all the launches in the specified project"
  },
  {
    "API": "evidently:ListProjects",
    "EventSource": "evidently",
    "EventName": "ListProjects",
    "Description": "Returns configuration details about all the projects in the current Region in your account"
  },
  {
    "API": "evidently:ListSegmentReferences",
    "EventSource": "evidently",
    "EventName": "ListSegmentReferences",
    "Description": "Use this operation to find which experiments or launches are using a specified segment"
  },
  {
    "API": "evidently:ListSegments",
    "EventSource": "evidently",
    "EventName": "ListSegments",
    "Description": "Returns a list of audience segments that you have created in your account in this Region"
  },
  {
    "API": "evidently:ListTagsForResource",
    "EventSource": "evidently",
    "EventName": "ListTagsForResource",
    "Description": "Displays the tags associated with an Evidently resource"
  },
  {
    "API": "evidently:PutProjectEvents",
    "EventSource": "evidently",
    "EventName": "PutProjectEvents",
    "Description": "Sends performance events to Evidently"
  },
  {
    "API": "evidently:StartExperiment",
    "EventSource": "evidently",
    "EventName": "StartExperiment",
    "Description": "Starts an existing experiment"
  },
  {
    "API": "evidently:StartLaunch",
    "EventSource": "evidently",
    "EventName": "StartLaunch",
    "Description": "Starts an existing launch"
  },
  {
    "API": "evidently:StopExperiment",
    "EventSource": "evidently",
    "EventName": "StopExperiment",
    "Description": "Stops an experiment that is currently running"
  },
  {
    "API": "evidently:StopLaunch",
    "EventSource": "evidently",
    "EventName": "StopLaunch",
    "Description": "Stops a launch that is currently running"
  },
  {
    "API": "evidently:TagResource",
    "EventSource": "evidently",
    "EventName": "TagResource",
    "Description": "Assigns one or more tags (key-value pairs) to the specified CloudWatch Evidently resource"
  },
  {
    "API": "evidently:TestSegmentPattern",
    "EventSource": "evidently",
    "EventName": "TestSegmentPattern",
    "Description": "Use this operation to test a rules pattern that you plan to use to create an audience segment"
  },
  {
    "API": "evidently:UntagResource",
    "EventSource": "evidently",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags from the specified resource"
  },
  {
    "API": "evidently:UpdateExperiment",
    "EventSource": "evidently",
    "EventName": "UpdateExperiment",
    "Description": "Updates an Evidently experiment"
  },
  {
    "API": "evidently:UpdateFeature",
    "EventSource": "evidently",
    "EventName": "UpdateFeature",
    "Description": "Updates an existing feature"
  },
  {
    "API": "evidently:UpdateLaunch",
    "EventSource": "evidently",
    "EventName": "UpdateLaunch",
    "Description": "Updates a launch of a given feature"
  },
  {
    "API": "evidently:UpdateProject",
    "EventSource": "evidently",
    "EventName": "UpdateProject",
    "Description": "Updates the description of an existing project"
  },
  {
    "API": "evidently:UpdateProjectDataDelivery",
    "EventSource": "evidently",
    "EventName": "UpdateProjectDataDelivery",
    "Description": "Updates the data storage options for this project"
  },
  {
    "API": "finspace:CreateEnvironment",
    "EventSource": "finspace",
    "EventName": "CreateEnvironment",
    "Description": "Create a new FinSpace environment"
  },
  {
    "API": "finspace:CreateKxChangeset",
    "EventSource": "finspace",
    "EventName": "CreateKxChangeset",
    "Description": "Creates a changeset for a kdb database"
  },
  {
    "API": "finspace:CreateKxCluster",
    "EventSource": "finspace",
    "EventName": "CreateKxCluster",
    "Description": "Creates a new kdb cluster"
  },
  {
    "API": "finspace:CreateKxDatabase",
    "EventSource": "finspace",
    "EventName": "CreateKxDatabase",
    "Description": "Creates a new kdb database in the environment"
  },
  {
    "API": "finspace:CreateKxDataview",
    "EventSource": "finspace",
    "EventName": "CreateKxDataview",
    "Description": "Creates a snapshot of kdb database with tiered storage capabilities and a pre-warmed cache, ready for mounting on kdb clusters"
  },
  {
    "API": "finspace:CreateKxEnvironment",
    "EventSource": "finspace",
    "EventName": "CreateKxEnvironment",
    "Description": "Creates a managed kdb environment for the account"
  },
  {
    "API": "finspace:CreateKxScalingGroup",
    "EventSource": "finspace",
    "EventName": "CreateKxScalingGroup",
    "Description": "Creates a new scaling group"
  },
  {
    "API": "finspace:CreateKxUser",
    "EventSource": "finspace",
    "EventName": "CreateKxUser",
    "Description": "Creates a user in FinSpace kdb environment with an associated IAM role"
  },
  {
    "API": "finspace:CreateKxVolume",
    "EventSource": "finspace",
    "EventName": "CreateKxVolume",
    "Description": "Creates a new volume with a specific amount of throughput and storage capacity"
  },
  {
    "API": "finspace:DeleteEnvironment",
    "EventSource": "finspace",
    "EventName": "DeleteEnvironment",
    "Description": "Delete an FinSpace environment"
  },
  {
    "API": "finspace:DeleteKxCluster",
    "EventSource": "finspace",
    "EventName": "DeleteKxCluster",
    "Description": "Deletes a kdb cluster"
  },
  {
    "API": "finspace:DeleteKxClusterNode",
    "EventSource": "finspace",
    "EventName": "DeleteKxClusterNode",
    "Description": "Deletes the specified nodes from a cluster"
  },
  {
    "API": "finspace:DeleteKxDatabase",
    "EventSource": "finspace",
    "EventName": "DeleteKxDatabase",
    "Description": "Deletes the specified database and all of its associated data"
  },
  {
    "API": "finspace:DeleteKxDataview",
    "EventSource": "finspace",
    "EventName": "DeleteKxDataview",
    "Description": "Deletes the specified dataview"
  },
  {
    "API": "finspace:DeleteKxEnvironment",
    "EventSource": "finspace",
    "EventName": "DeleteKxEnvironment",
    "Description": "Deletes the kdb environment"
  },
  {
    "API": "finspace:DeleteKxScalingGroup",
    "EventSource": "finspace",
    "EventName": "DeleteKxScalingGroup",
    "Description": "Deletes the specified scaling group"
  },
  {
    "API": "finspace:DeleteKxUser",
    "EventSource": "finspace",
    "EventName": "DeleteKxUser",
    "Description": "Deletes a user in the specified kdb environment"
  },
  {
    "API": "finspace:DeleteKxVolume",
    "EventSource": "finspace",
    "EventName": "DeleteKxVolume",
    "Description": "Deletes a volume"
  },
  {
    "API": "finspace:GeneratePresignedUrl",
    "EventSource": "finspace",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "finspace:GetEnvironment",
    "EventSource": "finspace",
    "EventName": "GetEnvironment",
    "Description": "Returns the FinSpace environment object"
  },
  {
    "API": "finspace:GetKxChangeset",
    "EventSource": "finspace",
    "EventName": "GetKxChangeset",
    "Description": "Returns information about a kdb changeset"
  },
  {
    "API": "finspace:GetKxCluster",
    "EventSource": "finspace",
    "EventName": "GetKxCluster",
    "Description": "Retrieves information about a kdb cluster"
  },
  {
    "API": "finspace:GetKxConnectionString",
    "EventSource": "finspace",
    "EventName": "GetKxConnectionString",
    "Description": "Retrieves a connection string for a user to connect to a kdb cluster"
  },
  {
    "API": "finspace:GetKxDatabase",
    "EventSource": "finspace",
    "EventName": "GetKxDatabase",
    "Description": "Returns database information for the specified environment ID"
  },
  {
    "API": "finspace:GetKxDataview",
    "EventSource": "finspace",
    "EventName": "GetKxDataview",
    "Description": "Retrieves details of the dataview"
  },
  {
    "API": "finspace:GetKxEnvironment",
    "EventSource": "finspace",
    "EventName": "GetKxEnvironment",
    "Description": "Retrieves all the information for the specified kdb environment"
  },
  {
    "API": "finspace:GetKxScalingGroup",
    "EventSource": "finspace",
    "EventName": "GetKxScalingGroup",
    "Description": "Retrieves details of a scaling group"
  },
  {
    "API": "finspace:GetKxUser",
    "EventSource": "finspace",
    "EventName": "GetKxUser",
    "Description": "Retrieves information about the specified kdb user"
  },
  {
    "API": "finspace:GetKxVolume",
    "EventSource": "finspace",
    "EventName": "GetKxVolume",
    "Description": "Retrieves the information about the volume"
  },
  {
    "API": "finspace:ListEnvironments",
    "EventSource": "finspace",
    "EventName": "ListEnvironments",
    "Description": "A list of all of your FinSpace environments"
  },
  {
    "API": "finspace:ListKxChangesets",
    "EventSource": "finspace",
    "EventName": "ListKxChangesets",
    "Description": "Returns a list of all the changesets for a database"
  },
  {
    "API": "finspace:ListKxClusterNodes",
    "EventSource": "finspace",
    "EventName": "ListKxClusterNodes",
    "Description": "Lists all the nodes in a kdb cluster"
  },
  {
    "API": "finspace:ListKxClusters",
    "EventSource": "finspace",
    "EventName": "ListKxClusters",
    "Description": "Returns a list of clusters"
  },
  {
    "API": "finspace:ListKxDatabases",
    "EventSource": "finspace",
    "EventName": "ListKxDatabases",
    "Description": "Returns a list of all the databases in the kdb environment"
  },
  {
    "API": "finspace:ListKxDataviews",
    "EventSource": "finspace",
    "EventName": "ListKxDataviews",
    "Description": "Returns a list of all the dataviews in the database"
  },
  {
    "API": "finspace:ListKxEnvironments",
    "EventSource": "finspace",
    "EventName": "ListKxEnvironments",
    "Description": "Returns a list of kdb environments created in an account"
  },
  {
    "API": "finspace:ListKxScalingGroups",
    "EventSource": "finspace",
    "EventName": "ListKxScalingGroups",
    "Description": "Returns a list of scaling groups in a kdb environment"
  },
  {
    "API": "finspace:ListKxUsers",
    "EventSource": "finspace",
    "EventName": "ListKxUsers",
    "Description": "Lists all the users in a kdb environment"
  },
  {
    "API": "finspace:ListKxVolumes",
    "EventSource": "finspace",
    "EventName": "ListKxVolumes",
    "Description": "Lists all the volumes in a kdb environment"
  },
  {
    "API": "finspace:ListTagsForResource",
    "EventSource": "finspace",
    "EventName": "ListTagsForResource",
    "Description": "A list of all tags for a resource"
  },
  {
    "API": "finspace:TagResource",
    "EventSource": "finspace",
    "EventName": "TagResource",
    "Description": "Adds metadata tags to a FinSpace resource"
  },
  {
    "API": "finspace:UntagResource",
    "EventSource": "finspace",
    "EventName": "UntagResource",
    "Description": "Removes metadata tags from a FinSpace resource"
  },
  {
    "API": "finspace:UpdateEnvironment",
    "EventSource": "finspace",
    "EventName": "UpdateEnvironment",
    "Description": "Update your FinSpace environment"
  },
  {
    "API": "finspace:UpdateKxClusterCodeConfiguration",
    "EventSource": "finspace",
    "EventName": "UpdateKxClusterCodeConfiguration",
    "Description": "Allows you to update code configuration on a running cluster"
  },
  {
    "API": "finspace:UpdateKxClusterDatabases",
    "EventSource": "finspace",
    "EventName": "UpdateKxClusterDatabases",
    "Description": "Updates the databases mounted on a kdb cluster, which includes the ``changesetId`` and all the dbPaths to be cached"
  },
  {
    "API": "finspace:UpdateKxDatabase",
    "EventSource": "finspace",
    "EventName": "UpdateKxDatabase",
    "Description": "Updates information for the given kdb database"
  },
  {
    "API": "finspace:UpdateKxDataview",
    "EventSource": "finspace",
    "EventName": "UpdateKxDataview",
    "Description": "Updates the specified dataview"
  },
  {
    "API": "finspace:UpdateKxEnvironment",
    "EventSource": "finspace",
    "EventName": "UpdateKxEnvironment",
    "Description": "Updates information for the given kdb environment"
  },
  {
    "API": "finspace:UpdateKxEnvironmentNetwork",
    "EventSource": "finspace",
    "EventName": "UpdateKxEnvironmentNetwork",
    "Description": "Updates environment network to connect to your internal network by using a transit gateway"
  },
  {
    "API": "finspace:UpdateKxUser",
    "EventSource": "finspace",
    "EventName": "UpdateKxUser",
    "Description": "Updates the user details"
  },
  {
    "API": "finspace:UpdateKxVolume",
    "EventSource": "finspace",
    "EventName": "UpdateKxVolume",
    "Description": "Updates the throughput or capacity of a volume"
  },
  {
    "API": "finspace-data:AssociateUserToPermissionGroup",
    "EventSource": "finspace-data",
    "EventName": "AssociateUserToPermissionGroup",
    "Description": "Adds a user to a permission group to grant permissions for actions a user can perform in FinSpace"
  },
  {
    "API": "finspace-data:CreateChangeset",
    "EventSource": "finspace-data",
    "EventName": "CreateChangeset",
    "Description": "Creates a new Changeset in a FinSpace Dataset"
  },
  {
    "API": "finspace-data:CreateDataView",
    "EventSource": "finspace-data",
    "EventName": "CreateDataView",
    "Description": "Creates a Dataview for a Dataset"
  },
  {
    "API": "finspace-data:CreateDataset",
    "EventSource": "finspace-data",
    "EventName": "CreateDataset",
    "Description": "Creates a new FinSpace Dataset"
  },
  {
    "API": "finspace-data:CreatePermissionGroup",
    "EventSource": "finspace-data",
    "EventName": "CreatePermissionGroup",
    "Description": "Creates a group of permissions for various actions that a user can perform in FinSpace"
  },
  {
    "API": "finspace-data:CreateUser",
    "EventSource": "finspace-data",
    "EventName": "CreateUser",
    "Description": "Creates a new user in FinSpace"
  },
  {
    "API": "finspace-data:DeleteDataset",
    "EventSource": "finspace-data",
    "EventName": "DeleteDataset",
    "Description": "Deletes a FinSpace Dataset"
  },
  {
    "API": "finspace-data:DeletePermissionGroup",
    "EventSource": "finspace-data",
    "EventName": "DeletePermissionGroup",
    "Description": "Deletes a permission group"
  },
  {
    "API": "finspace-data:DisableUser",
    "EventSource": "finspace-data",
    "EventName": "DisableUser",
    "Description": "Denies access to the FinSpace web application and API for the specified user"
  },
  {
    "API": "finspace-data:DisassociateUserFromPermissionGroup",
    "EventSource": "finspace-data",
    "EventName": "DisassociateUserFromPermissionGroup",
    "Description": "Removes a user from a permission group"
  },
  {
    "API": "finspace-data:EnableUser",
    "EventSource": "finspace-data",
    "EventName": "EnableUser",
    "Description": "Allows the specified user to access the FinSpace web application and API"
  },
  {
    "API": "finspace-data:GeneratePresignedUrl",
    "EventSource": "finspace-data",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "finspace-data:GetChangeset",
    "EventSource": "finspace-data",
    "EventName": "GetChangeset",
    "Description": "Get information about a Changeset"
  },
  {
    "API": "finspace-data:GetDataView",
    "EventSource": "finspace-data",
    "EventName": "GetDataView",
    "Description": "Gets information about a Dataview"
  },
  {
    "API": "finspace-data:GetDataset",
    "EventSource": "finspace-data",
    "EventName": "GetDataset",
    "Description": "Returns information about a Dataset"
  },
  {
    "API": "finspace-data:GetExternalDataViewAccessDetails",
    "EventSource": "finspace-data",
    "EventName": "GetExternalDataViewAccessDetails",
    "Description": "Returns the credentials to access the external Dataview from an S3 location"
  },
  {
    "API": "finspace-data:GetPermissionGroup",
    "EventSource": "finspace-data",
    "EventName": "GetPermissionGroup",
    "Description": "Retrieves the details of a specific permission group"
  },
  {
    "API": "finspace-data:GetProgrammaticAccessCredentials",
    "EventSource": "finspace-data",
    "EventName": "GetProgrammaticAccessCredentials",
    "Description": "Request programmatic credentials to use with FinSpace SDK"
  },
  {
    "API": "finspace-data:GetUser",
    "EventSource": "finspace-data",
    "EventName": "GetUser",
    "Description": "Retrieves details for a specific user"
  },
  {
    "API": "finspace-data:GetWorkingLocation",
    "EventSource": "finspace-data",
    "EventName": "GetWorkingLocation",
    "Description": "A temporary Amazon S3 location, where you can copy your files from a source location to stage or use as a scratch space in FinSpace notebook"
  },
  {
    "API": "finspace-data:ListChangesets",
    "EventSource": "finspace-data",
    "EventName": "ListChangesets",
    "Description": "Lists the FinSpace Changesets for a Dataset"
  },
  {
    "API": "finspace-data:ListDataViews",
    "EventSource": "finspace-data",
    "EventName": "ListDataViews",
    "Description": "Lists all available Dataviews for a Dataset"
  },
  {
    "API": "finspace-data:ListDatasets",
    "EventSource": "finspace-data",
    "EventName": "ListDatasets",
    "Description": "Lists all of the active Datasets that a user has access to"
  },
  {
    "API": "finspace-data:ListPermissionGroups",
    "EventSource": "finspace-data",
    "EventName": "ListPermissionGroups",
    "Description": "Lists all available permission groups in FinSpace"
  },
  {
    "API": "finspace-data:ListPermissionGroupsByUser",
    "EventSource": "finspace-data",
    "EventName": "ListPermissionGroupsByUser",
    "Description": "Lists all the permission groups that are associated with a specific user"
  },
  {
    "API": "finspace-data:ListUsers",
    "EventSource": "finspace-data",
    "EventName": "ListUsers",
    "Description": "Lists all available users in FinSpace"
  },
  {
    "API": "finspace-data:ListUsersByPermissionGroup",
    "EventSource": "finspace-data",
    "EventName": "ListUsersByPermissionGroup",
    "Description": "Lists details of all the users in a specific permission group"
  },
  {
    "API": "finspace-data:ResetUserPassword",
    "EventSource": "finspace-data",
    "EventName": "ResetUserPassword",
    "Description": "Resets the password for a specified user ID and generates a temporary one"
  },
  {
    "API": "finspace-data:UpdateChangeset",
    "EventSource": "finspace-data",
    "EventName": "UpdateChangeset",
    "Description": "Updates a FinSpace Changeset"
  },
  {
    "API": "finspace-data:UpdateDataset",
    "EventSource": "finspace-data",
    "EventName": "UpdateDataset",
    "Description": "Updates a FinSpace Dataset"
  },
  {
    "API": "finspace-data:UpdatePermissionGroup",
    "EventSource": "finspace-data",
    "EventName": "UpdatePermissionGroup",
    "Description": "Modifies the details of a permission group"
  },
  {
    "API": "finspace-data:UpdateUser",
    "EventSource": "finspace-data",
    "EventName": "UpdateUser",
    "Description": "Modifies the details of the specified user"
  },
  {
    "API": "firehose:CreateDeliveryStream",
    "EventSource": "firehose",
    "EventName": "CreateDeliveryStream",
    "Description": "Creates a Firehose delivery stream"
  },
  {
    "API": "firehose:DeleteDeliveryStream",
    "EventSource": "firehose",
    "EventName": "DeleteDeliveryStream",
    "Description": "Deletes a delivery stream and its data"
  },
  {
    "API": "firehose:DescribeDeliveryStream",
    "EventSource": "firehose",
    "EventName": "DescribeDeliveryStream",
    "Description": "Describes the specified delivery stream and its status"
  },
  {
    "API": "firehose:GeneratePresignedUrl",
    "EventSource": "firehose",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "firehose:ListDeliveryStreams",
    "EventSource": "firehose",
    "EventName": "ListDeliveryStreams",
    "Description": "Lists your delivery streams in alphabetical order of their names"
  },
  {
    "API": "firehose:ListTagsForDeliveryStream",
    "EventSource": "firehose",
    "EventName": "ListTagsForDeliveryStream",
    "Description": "Lists the tags for the specified delivery stream"
  },
  {
    "API": "firehose:PutRecord",
    "EventSource": "firehose",
    "EventName": "PutRecord",
    "Description": "Writes a single data record into an Amazon Firehose delivery stream"
  },
  {
    "API": "firehose:PutRecordBatch",
    "EventSource": "firehose",
    "EventName": "PutRecordBatch",
    "Description": "Writes multiple data records into a delivery stream in a single call, which can achieve higher throughput per producer than when writing single records"
  },
  {
    "API": "firehose:StartDeliveryStreamEncryption",
    "EventSource": "firehose",
    "EventName": "StartDeliveryStreamEncryption",
    "Description": "Enables server-side encryption (SSE) for the delivery stream"
  },
  {
    "API": "firehose:StopDeliveryStreamEncryption",
    "EventSource": "firehose",
    "EventName": "StopDeliveryStreamEncryption",
    "Description": "Disables server-side encryption (SSE) for the delivery stream"
  },
  {
    "API": "firehose:TagDeliveryStream",
    "EventSource": "firehose",
    "EventName": "TagDeliveryStream",
    "Description": "Adds or updates tags for the specified delivery stream"
  },
  {
    "API": "firehose:UntagDeliveryStream",
    "EventSource": "firehose",
    "EventName": "UntagDeliveryStream",
    "Description": "Removes tags from the specified delivery stream"
  },
  {
    "API": "firehose:UpdateDestination",
    "EventSource": "firehose",
    "EventName": "UpdateDestination",
    "Description": "Updates the specified destination of the specified delivery stream"
  },
  {
    "API": "fis:CreateExperimentTemplate",
    "EventSource": "fis",
    "EventName": "CreateExperimentTemplate",
    "Description": "Creates an experiment template"
  },
  {
    "API": "fis:CreateTargetAccountConfiguration",
    "EventSource": "fis",
    "EventName": "CreateTargetAccountConfiguration",
    "Description": "Creates a target account configuration for the experiment template"
  },
  {
    "API": "fis:DeleteExperimentTemplate",
    "EventSource": "fis",
    "EventName": "DeleteExperimentTemplate",
    "Description": "Deletes the specified experiment template"
  },
  {
    "API": "fis:DeleteTargetAccountConfiguration",
    "EventSource": "fis",
    "EventName": "DeleteTargetAccountConfiguration",
    "Description": "Deletes the specified target account configuration of the experiment template"
  },
  {
    "API": "fis:GeneratePresignedUrl",
    "EventSource": "fis",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "fis:GetAction",
    "EventSource": "fis",
    "EventName": "GetAction",
    "Description": "Gets information about the specified FIS action"
  },
  {
    "API": "fis:GetExperiment",
    "EventSource": "fis",
    "EventName": "GetExperiment",
    "Description": "Gets information about the specified experiment"
  },
  {
    "API": "fis:GetExperimentTargetAccountConfiguration",
    "EventSource": "fis",
    "EventName": "GetExperimentTargetAccountConfiguration",
    "Description": "Gets information about the specified target account configuration of the experiment"
  },
  {
    "API": "fis:GetExperimentTemplate",
    "EventSource": "fis",
    "EventName": "GetExperimentTemplate",
    "Description": "Gets information about the specified experiment template"
  },
  {
    "API": "fis:GetTargetAccountConfiguration",
    "EventSource": "fis",
    "EventName": "GetTargetAccountConfiguration",
    "Description": "Gets information about the specified target account configuration of the experiment template"
  },
  {
    "API": "fis:GetTargetResourceType",
    "EventSource": "fis",
    "EventName": "GetTargetResourceType",
    "Description": "Gets information about the specified resource type"
  },
  {
    "API": "fis:ListActions",
    "EventSource": "fis",
    "EventName": "ListActions",
    "Description": "Lists the available FIS actions"
  },
  {
    "API": "fis:ListExperimentResolvedTargets",
    "EventSource": "fis",
    "EventName": "ListExperimentResolvedTargets",
    "Description": "Lists the resolved targets information of the specified experiment"
  },
  {
    "API": "fis:ListExperimentTargetAccountConfigurations",
    "EventSource": "fis",
    "EventName": "ListExperimentTargetAccountConfigurations",
    "Description": "Lists the target account configurations of the specified experiment"
  },
  {
    "API": "fis:ListExperimentTemplates",
    "EventSource": "fis",
    "EventName": "ListExperimentTemplates",
    "Description": "Lists your experiment templates"
  },
  {
    "API": "fis:ListExperiments",
    "EventSource": "fis",
    "EventName": "ListExperiments",
    "Description": "Lists your experiments"
  },
  {
    "API": "fis:ListTagsForResource",
    "EventSource": "fis",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags for the specified resource"
  },
  {
    "API": "fis:ListTargetAccountConfigurations",
    "EventSource": "fis",
    "EventName": "ListTargetAccountConfigurations",
    "Description": "Lists the target account configurations of the specified experiment template"
  },
  {
    "API": "fis:ListTargetResourceTypes",
    "EventSource": "fis",
    "EventName": "ListTargetResourceTypes",
    "Description": "Lists the target resource types"
  },
  {
    "API": "fis:StartExperiment",
    "EventSource": "fis",
    "EventName": "StartExperiment",
    "Description": "Starts running an experiment from the specified experiment template"
  },
  {
    "API": "fis:StopExperiment",
    "EventSource": "fis",
    "EventName": "StopExperiment",
    "Description": "Stops the specified experiment"
  },
  {
    "API": "fis:TagResource",
    "EventSource": "fis",
    "EventName": "TagResource",
    "Description": "Applies the specified tags to the specified resource"
  },
  {
    "API": "fis:UntagResource",
    "EventSource": "fis",
    "EventName": "UntagResource",
    "Description": "Removes the specified tags from the specified resource"
  },
  {
    "API": "fis:UpdateExperimentTemplate",
    "EventSource": "fis",
    "EventName": "UpdateExperimentTemplate",
    "Description": "Updates the specified experiment template"
  },
  {
    "API": "fis:UpdateTargetAccountConfiguration",
    "EventSource": "fis",
    "EventName": "UpdateTargetAccountConfiguration",
    "Description": "Updates the target account configuration for the specified experiment template"
  },
  {
    "API": "fms:AssociateAdminAccount",
    "EventSource": "fms",
    "EventName": "AssociateAdminAccount",
    "Description": "Sets a Firewall Manager default administrator account"
  },
  {
    "API": "fms:AssociateThirdPartyFirewall",
    "EventSource": "fms",
    "EventName": "AssociateThirdPartyFirewall",
    "Description": "Sets the Firewall Manager policy administrator as a tenant administrator of a third-party firewall service"
  },
  {
    "API": "fms:BatchAssociateResource",
    "EventSource": "fms",
    "EventName": "BatchAssociateResource",
    "Description": "Associate resources to a Firewall Manager resource set"
  },
  {
    "API": "fms:BatchDisassociateResource",
    "EventSource": "fms",
    "EventName": "BatchDisassociateResource",
    "Description": "Disassociates resources from a Firewall Manager resource set"
  },
  {
    "API": "fms:DeleteAppsList",
    "EventSource": "fms",
    "EventName": "DeleteAppsList",
    "Description": "Permanently deletes an Firewall Manager applications list"
  },
  {
    "API": "fms:DeleteNotificationChannel",
    "EventSource": "fms",
    "EventName": "DeleteNotificationChannel",
    "Description": "Deletes an Firewall Manager association with the IAM role and the Amazon Simple Notification Service (SNS) topic that is used to record Firewall Manager SNS logs"
  },
  {
    "API": "fms:DeletePolicy",
    "EventSource": "fms",
    "EventName": "DeletePolicy",
    "Description": "Permanently deletes an Firewall Manager policy"
  },
  {
    "API": "fms:DeleteProtocolsList",
    "EventSource": "fms",
    "EventName": "DeleteProtocolsList",
    "Description": "Permanently deletes an Firewall Manager protocols list"
  },
  {
    "API": "fms:DeleteResourceSet",
    "EventSource": "fms",
    "EventName": "DeleteResourceSet",
    "Description": "Deletes the specified  ResourceSet"
  },
  {
    "API": "fms:DisassociateAdminAccount",
    "EventSource": "fms",
    "EventName": "DisassociateAdminAccount",
    "Description": "Disassociates an Firewall Manager administrator account"
  },
  {
    "API": "fms:DisassociateThirdPartyFirewall",
    "EventSource": "fms",
    "EventName": "DisassociateThirdPartyFirewall",
    "Description": "Disassociates a Firewall Manager policy administrator from a third-party firewall tenant"
  },
  {
    "API": "fms:GeneratePresignedUrl",
    "EventSource": "fms",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "fms:GetAdminAccount",
    "EventSource": "fms",
    "EventName": "GetAdminAccount",
    "Description": "Returns the Organizations account that is associated with Firewall Manager as the Firewall Manager default administrator"
  },
  {
    "API": "fms:GetAdminScope",
    "EventSource": "fms",
    "EventName": "GetAdminScope",
    "Description": "Returns information about the specified account's administrative scope"
  },
  {
    "API": "fms:GetAppsList",
    "EventSource": "fms",
    "EventName": "GetAppsList",
    "Description": "Returns information about the specified Firewall Manager applications list"
  },
  {
    "API": "fms:GetComplianceDetail",
    "EventSource": "fms",
    "EventName": "GetComplianceDetail",
    "Description": "Returns detailed compliance information about the specified member account"
  },
  {
    "API": "fms:GetNotificationChannel",
    "EventSource": "fms",
    "EventName": "GetNotificationChannel",
    "Description": "Information about the Amazon Simple Notification Service (SNS) topic that is used to record Firewall Manager SNS logs"
  },
  {
    "API": "fms:GetPolicy",
    "EventSource": "fms",
    "EventName": "GetPolicy",
    "Description": "Returns information about the specified Firewall Manager policy"
  },
  {
    "API": "fms:GetProtectionStatus",
    "EventSource": "fms",
    "EventName": "GetProtectionStatus",
    "Description": "If you created a Shield Advanced policy, returns policy-level attack summary information in the event of a potential DDoS attack"
  },
  {
    "API": "fms:GetProtocolsList",
    "EventSource": "fms",
    "EventName": "GetProtocolsList",
    "Description": "Returns information about the specified Firewall Manager protocols list"
  },
  {
    "API": "fms:GetResourceSet",
    "EventSource": "fms",
    "EventName": "GetResourceSet",
    "Description": "Gets information about a specific resource set"
  },
  {
    "API": "fms:GetThirdPartyFirewallAssociationStatus",
    "EventSource": "fms",
    "EventName": "GetThirdPartyFirewallAssociationStatus",
    "Description": "The onboarding status of a Firewall Manager admin account to third-party firewall vendor tenant"
  },
  {
    "API": "fms:GetViolationDetails",
    "EventSource": "fms",
    "EventName": "GetViolationDetails",
    "Description": "Retrieves violations for a resource based on the specified Firewall Manager policy and Amazon Web Services account"
  },
  {
    "API": "fms:ListAdminAccountsForOrganization",
    "EventSource": "fms",
    "EventName": "ListAdminAccountsForOrganization",
    "Description": "Returns a ``AdminAccounts`` object that lists the Firewall Manager administrators within the organization that are onboarded to Firewall Manager by  AssociateAdminAccount"
  },
  {
    "API": "fms:ListAdminsManagingAccount",
    "EventSource": "fms",
    "EventName": "ListAdminsManagingAccount",
    "Description": "Lists the accounts that are managing the specified Organizations member account"
  },
  {
    "API": "fms:ListAppsLists",
    "EventSource": "fms",
    "EventName": "ListAppsLists",
    "Description": "Returns an array of ``AppsListDataSummary`` objects"
  },
  {
    "API": "fms:ListComplianceStatus",
    "EventSource": "fms",
    "EventName": "ListComplianceStatus",
    "Description": "Returns an array of ``PolicyComplianceStatus`` objects"
  },
  {
    "API": "fms:ListDiscoveredResources",
    "EventSource": "fms",
    "EventName": "ListDiscoveredResources",
    "Description": "Returns an array of resources in the organization's accounts that are available to be associated with a resource set"
  },
  {
    "API": "fms:ListMemberAccounts",
    "EventSource": "fms",
    "EventName": "ListMemberAccounts",
    "Description": "Returns a ``MemberAccounts`` object that lists the member accounts in the administrator's Amazon Web Services organization"
  },
  {
    "API": "fms:ListPolicies",
    "EventSource": "fms",
    "EventName": "ListPolicies",
    "Description": "Returns an array of ``PolicySummary`` objects"
  },
  {
    "API": "fms:ListProtocolsLists",
    "EventSource": "fms",
    "EventName": "ListProtocolsLists",
    "Description": "Returns an array of ``ProtocolsListDataSummary`` objects"
  },
  {
    "API": "fms:ListResourceSetResources",
    "EventSource": "fms",
    "EventName": "ListResourceSetResources",
    "Description": "Returns an array of resources that are currently associated to a resource set"
  },
  {
    "API": "fms:ListResourceSets",
    "EventSource": "fms",
    "EventName": "ListResourceSets",
    "Description": "Returns an array of ``ResourceSetSummary`` objects"
  },
  {
    "API": "fms:ListTagsForResource",
    "EventSource": "fms",
    "EventName": "ListTagsForResource",
    "Description": "Retrieves the list of tags for the specified Amazon Web Services resource"
  },
  {
    "API": "fms:ListThirdPartyFirewallFirewallPolicies",
    "EventSource": "fms",
    "EventName": "ListThirdPartyFirewallFirewallPolicies",
    "Description": "Retrieves a list of all of the third-party firewall policies that are associated with the third-party firewall administrator's account"
  },
  {
    "API": "fms:PutAdminAccount",
    "EventSource": "fms",
    "EventName": "PutAdminAccount",
    "Description": "Creates or updates an Firewall Manager administrator account"
  },
  {
    "API": "fms:PutAppsList",
    "EventSource": "fms",
    "EventName": "PutAppsList",
    "Description": "Creates an Firewall Manager applications list"
  },
  {
    "API": "fms:PutNotificationChannel",
    "EventSource": "fms",
    "EventName": "PutNotificationChannel",
    "Description": "Designates the IAM role and Amazon Simple Notification Service (SNS) topic that Firewall Manager uses to record SNS logs"
  },
  {
    "API": "fms:PutPolicy",
    "EventSource": "fms",
    "EventName": "PutPolicy",
    "Description": "Creates an Firewall Manager policy"
  },
  {
    "API": "fms:PutProtocolsList",
    "EventSource": "fms",
    "EventName": "PutProtocolsList",
    "Description": "Creates an Firewall Manager protocols list"
  },
  {
    "API": "fms:PutResourceSet",
    "EventSource": "fms",
    "EventName": "PutResourceSet",
    "Description": "Creates the resource set"
  },
  {
    "API": "fms:TagResource",
    "EventSource": "fms",
    "EventName": "TagResource",
    "Description": "Adds one or more tags to an Amazon Web Services resource"
  },
  {
    "API": "fms:UntagResource",
    "EventSource": "fms",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags from an Amazon Web Services resource"
  },
  {
    "API": "forecast:CreateAutoPredictor",
    "EventSource": "forecast",
    "EventName": "CreateAutoPredictor",
    "Description": "Creates an Amazon Forecast predictor"
  },
  {
    "API": "forecast:CreateDataset",
    "EventSource": "forecast",
    "EventName": "CreateDataset",
    "Description": "Creates an Amazon Forecast dataset"
  },
  {
    "API": "forecast:CreateDatasetGroup",
    "EventSource": "forecast",
    "EventName": "CreateDatasetGroup",
    "Description": "Creates a dataset group, which holds a collection of related datasets"
  },
  {
    "API": "forecast:CreateDatasetImportJob",
    "EventSource": "forecast",
    "EventName": "CreateDatasetImportJob",
    "Description": "Imports your training data to an Amazon Forecast dataset"
  },
  {
    "API": "forecast:CreateExplainability",
    "EventSource": "forecast",
    "EventName": "CreateExplainability",
    "Description": ""
  },
  {
    "API": "forecast:CreateExplainabilityExport",
    "EventSource": "forecast",
    "EventName": "CreateExplainabilityExport",
    "Description": "Exports an Explainability resource created by the  CreateExplainability operation"
  },
  {
    "API": "forecast:CreateForecast",
    "EventSource": "forecast",
    "EventName": "CreateForecast",
    "Description": "Creates a forecast for each item in the ``TARGET_TIME_SERIES`` dataset that was used to train the predictor"
  },
  {
    "API": "forecast:CreateForecastExportJob",
    "EventSource": "forecast",
    "EventName": "CreateForecastExportJob",
    "Description": "Exports a forecast created by the  CreateForecast operation to your Amazon Simple Storage Service (Amazon S3) bucket"
  },
  {
    "API": "forecast:CreateMonitor",
    "EventSource": "forecast",
    "EventName": "CreateMonitor",
    "Description": "Creates a predictor monitor resource for an existing auto predictor"
  },
  {
    "API": "forecast:CreatePredictor",
    "EventSource": "forecast",
    "EventName": "CreatePredictor",
    "Description": ""
  },
  {
    "API": "forecast:CreatePredictorBacktestExportJob",
    "EventSource": "forecast",
    "EventName": "CreatePredictorBacktestExportJob",
    "Description": "Exports backtest forecasts and accuracy metrics generated by the  CreateAutoPredictor or  CreatePredictor operations"
  },
  {
    "API": "forecast:CreateWhatIfAnalysis",
    "EventSource": "forecast",
    "EventName": "CreateWhatIfAnalysis",
    "Description": "What-if analysis is a scenario modeling technique where you make a hypothetical change to a time series and compare the forecasts generated by these changes against the baseline, unchanged time series"
  },
  {
    "API": "forecast:CreateWhatIfForecast",
    "EventSource": "forecast",
    "EventName": "CreateWhatIfForecast",
    "Description": "A what-if forecast is a forecast that is created from a modified version of the baseline forecast"
  },
  {
    "API": "forecast:CreateWhatIfForecastExport",
    "EventSource": "forecast",
    "EventName": "CreateWhatIfForecastExport",
    "Description": "Exports a forecast created by the  CreateWhatIfForecast operation to your Amazon Simple Storage Service (Amazon S3) bucket"
  },
  {
    "API": "forecast:DeleteDataset",
    "EventSource": "forecast",
    "EventName": "DeleteDataset",
    "Description": "Deletes an Amazon Forecast dataset that was created using the `CreateDataset <https://docs"
  },
  {
    "API": "forecast:DeleteDatasetGroup",
    "EventSource": "forecast",
    "EventName": "DeleteDatasetGroup",
    "Description": "Deletes a dataset group created using the `CreateDatasetGroup <https://docs"
  },
  {
    "API": "forecast:DeleteDatasetImportJob",
    "EventSource": "forecast",
    "EventName": "DeleteDatasetImportJob",
    "Description": "Deletes a dataset import job created using the `CreateDatasetImportJob <https://docs"
  },
  {
    "API": "forecast:DeleteExplainability",
    "EventSource": "forecast",
    "EventName": "DeleteExplainability",
    "Description": "Deletes an Explainability resource"
  },
  {
    "API": "forecast:DeleteExplainabilityExport",
    "EventSource": "forecast",
    "EventName": "DeleteExplainabilityExport",
    "Description": "Deletes an Explainability export"
  },
  {
    "API": "forecast:DeleteForecast",
    "EventSource": "forecast",
    "EventName": "DeleteForecast",
    "Description": "Deletes a forecast created using the  CreateForecast operation"
  },
  {
    "API": "forecast:DeleteForecastExportJob",
    "EventSource": "forecast",
    "EventName": "DeleteForecastExportJob",
    "Description": "Deletes a forecast export job created using the  CreateForecastExportJob operation"
  },
  {
    "API": "forecast:DeleteMonitor",
    "EventSource": "forecast",
    "EventName": "DeleteMonitor",
    "Description": "Deletes a monitor resource"
  },
  {
    "API": "forecast:DeletePredictor",
    "EventSource": "forecast",
    "EventName": "DeletePredictor",
    "Description": "Deletes a predictor created using the  DescribePredictor or  CreatePredictor operations"
  },
  {
    "API": "forecast:DeletePredictorBacktestExportJob",
    "EventSource": "forecast",
    "EventName": "DeletePredictorBacktestExportJob",
    "Description": "Deletes a predictor backtest export job"
  },
  {
    "API": "forecast:DeleteResourceTree",
    "EventSource": "forecast",
    "EventName": "DeleteResourceTree",
    "Description": "Deletes an entire resource tree"
  },
  {
    "API": "forecast:DeleteWhatIfAnalysis",
    "EventSource": "forecast",
    "EventName": "DeleteWhatIfAnalysis",
    "Description": "Deletes a what-if analysis created using the  CreateWhatIfAnalysis operation"
  },
  {
    "API": "forecast:DeleteWhatIfForecast",
    "EventSource": "forecast",
    "EventName": "DeleteWhatIfForecast",
    "Description": "Deletes a what-if forecast created using the  CreateWhatIfForecast operation"
  },
  {
    "API": "forecast:DeleteWhatIfForecastExport",
    "EventSource": "forecast",
    "EventName": "DeleteWhatIfForecastExport",
    "Description": "Deletes a what-if forecast export created using the  CreateWhatIfForecastExport operation"
  },
  {
    "API": "forecast:DescribeAutoPredictor",
    "EventSource": "forecast",
    "EventName": "DescribeAutoPredictor",
    "Description": "Describes a predictor created using the CreateAutoPredictor operation"
  },
  {
    "API": "forecast:DescribeDataset",
    "EventSource": "forecast",
    "EventName": "DescribeDataset",
    "Description": "Describes an Amazon Forecast dataset created using the `CreateDataset <https://docs"
  },
  {
    "API": "forecast:DescribeDatasetGroup",
    "EventSource": "forecast",
    "EventName": "DescribeDatasetGroup",
    "Description": "Describes a dataset group created using the `CreateDatasetGroup <https://docs"
  },
  {
    "API": "forecast:DescribeDatasetImportJob",
    "EventSource": "forecast",
    "EventName": "DescribeDatasetImportJob",
    "Description": "Describes a dataset import job created using the `CreateDatasetImportJob <https://docs"
  },
  {
    "API": "forecast:DescribeExplainability",
    "EventSource": "forecast",
    "EventName": "DescribeExplainability",
    "Description": "Describes an Explainability resource created using the  CreateExplainability operation"
  },
  {
    "API": "forecast:DescribeExplainabilityExport",
    "EventSource": "forecast",
    "EventName": "DescribeExplainabilityExport",
    "Description": "Describes an Explainability export created using the  CreateExplainabilityExport operation"
  },
  {
    "API": "forecast:DescribeForecast",
    "EventSource": "forecast",
    "EventName": "DescribeForecast",
    "Description": "Describes a forecast created using the  CreateForecast operation"
  },
  {
    "API": "forecast:DescribeForecastExportJob",
    "EventSource": "forecast",
    "EventName": "DescribeForecastExportJob",
    "Description": "Describes a forecast export job created using the  CreateForecastExportJob operation"
  },
  {
    "API": "forecast:DescribeMonitor",
    "EventSource": "forecast",
    "EventName": "DescribeMonitor",
    "Description": "Describes a monitor resource"
  },
  {
    "API": "forecast:DescribePredictor",
    "EventSource": "forecast",
    "EventName": "DescribePredictor",
    "Description": ""
  },
  {
    "API": "forecast:DescribePredictorBacktestExportJob",
    "EventSource": "forecast",
    "EventName": "DescribePredictorBacktestExportJob",
    "Description": "Describes a predictor backtest export job created using the  CreatePredictorBacktestExportJob operation"
  },
  {
    "API": "forecast:DescribeWhatIfAnalysis",
    "EventSource": "forecast",
    "EventName": "DescribeWhatIfAnalysis",
    "Description": "Describes the what-if analysis created using the  CreateWhatIfAnalysis operation"
  },
  {
    "API": "forecast:DescribeWhatIfForecast",
    "EventSource": "forecast",
    "EventName": "DescribeWhatIfForecast",
    "Description": "Describes the what-if forecast created using the  CreateWhatIfForecast operation"
  },
  {
    "API": "forecast:DescribeWhatIfForecastExport",
    "EventSource": "forecast",
    "EventName": "DescribeWhatIfForecastExport",
    "Description": "Describes the what-if forecast export created using the  CreateWhatIfForecastExport operation"
  },
  {
    "API": "forecast:GeneratePresignedUrl",
    "EventSource": "forecast",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "forecast:GetAccuracyMetrics",
    "EventSource": "forecast",
    "EventName": "GetAccuracyMetrics",
    "Description": "Provides metrics on the accuracy of the models that were trained by the  CreatePredictor operation"
  },
  {
    "API": "forecast:ListDatasetGroups",
    "EventSource": "forecast",
    "EventName": "ListDatasetGroups",
    "Description": "Returns a list of dataset groups created using the `CreateDatasetGroup <https://docs"
  },
  {
    "API": "forecast:ListDatasetImportJobs",
    "EventSource": "forecast",
    "EventName": "ListDatasetImportJobs",
    "Description": "Returns a list of dataset import jobs created using the `CreateDatasetImportJob <https://docs"
  },
  {
    "API": "forecast:ListDatasets",
    "EventSource": "forecast",
    "EventName": "ListDatasets",
    "Description": "Returns a list of datasets created using the `CreateDataset <https://docs"
  },
  {
    "API": "forecast:ListExplainabilities",
    "EventSource": "forecast",
    "EventName": "ListExplainabilities",
    "Description": "Returns a list of Explainability resources created using the  CreateExplainability operation"
  },
  {
    "API": "forecast:ListExplainabilityExports",
    "EventSource": "forecast",
    "EventName": "ListExplainabilityExports",
    "Description": "Returns a list of Explainability exports created using the  CreateExplainabilityExport operation"
  },
  {
    "API": "forecast:ListForecastExportJobs",
    "EventSource": "forecast",
    "EventName": "ListForecastExportJobs",
    "Description": "Returns a list of forecast export jobs created using the  CreateForecastExportJob operation"
  },
  {
    "API": "forecast:ListForecasts",
    "EventSource": "forecast",
    "EventName": "ListForecasts",
    "Description": "Returns a list of forecasts created using the  CreateForecast operation"
  },
  {
    "API": "forecast:ListMonitorEvaluations",
    "EventSource": "forecast",
    "EventName": "ListMonitorEvaluations",
    "Description": "Returns a list of the monitoring evaluation results and predictor events collected by the monitor resource during different windows of time"
  },
  {
    "API": "forecast:ListMonitors",
    "EventSource": "forecast",
    "EventName": "ListMonitors",
    "Description": "Returns a list of monitors created with the  CreateMonitor operation and  CreateAutoPredictor operation"
  },
  {
    "API": "forecast:ListPredictorBacktestExportJobs",
    "EventSource": "forecast",
    "EventName": "ListPredictorBacktestExportJobs",
    "Description": "Returns a list of predictor backtest export jobs created using the  CreatePredictorBacktestExportJob operation"
  },
  {
    "API": "forecast:ListPredictors",
    "EventSource": "forecast",
    "EventName": "ListPredictors",
    "Description": "Returns a list of predictors created using the  CreateAutoPredictor or  CreatePredictor operations"
  },
  {
    "API": "forecast:ListTagsForResource",
    "EventSource": "forecast",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags for an Amazon Forecast resource"
  },
  {
    "API": "forecast:ListWhatIfAnalyses",
    "EventSource": "forecast",
    "EventName": "ListWhatIfAnalyses",
    "Description": "Returns a list of what-if analyses created using the  CreateWhatIfAnalysis operation"
  },
  {
    "API": "forecast:ListWhatIfForecastExports",
    "EventSource": "forecast",
    "EventName": "ListWhatIfForecastExports",
    "Description": "Returns a list of what-if forecast exports created using the  CreateWhatIfForecastExport operation"
  },
  {
    "API": "forecast:ListWhatIfForecasts",
    "EventSource": "forecast",
    "EventName": "ListWhatIfForecasts",
    "Description": "Returns a list of what-if forecasts created using the  CreateWhatIfForecast operation"
  },
  {
    "API": "forecast:ResumeResource",
    "EventSource": "forecast",
    "EventName": "ResumeResource",
    "Description": "Resumes a stopped monitor resource"
  },
  {
    "API": "forecast:StopResource",
    "EventSource": "forecast",
    "EventName": "StopResource",
    "Description": "Stops a resource"
  },
  {
    "API": "forecast:TagResource",
    "EventSource": "forecast",
    "EventName": "TagResource",
    "Description": "Associates the specified tags to a resource with the specified ``resourceArn``"
  },
  {
    "API": "forecast:UntagResource",
    "EventSource": "forecast",
    "EventName": "UntagResource",
    "Description": "Deletes the specified tags from a resource"
  },
  {
    "API": "forecast:UpdateDatasetGroup",
    "EventSource": "forecast",
    "EventName": "UpdateDatasetGroup",
    "Description": "Replaces the datasets in a dataset group with the specified datasets"
  },
  {
    "API": "forecastquery:GeneratePresignedUrl",
    "EventSource": "forecastquery",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "forecastquery:QueryForecast",
    "EventSource": "forecastquery",
    "EventName": "QueryForecast",
    "Description": "Retrieves a forecast for a single item, filtered by the supplied criteria"
  },
  {
    "API": "forecastquery:QueryWhatIfForecast",
    "EventSource": "forecastquery",
    "EventName": "QueryWhatIfForecast",
    "Description": "Retrieves a what-if forecast"
  },
  {
    "API": "frauddetector:BatchCreateVariable",
    "EventSource": "frauddetector",
    "EventName": "BatchCreateVariable",
    "Description": "Creates a batch of variables"
  },
  {
    "API": "frauddetector:BatchGetVariable",
    "EventSource": "frauddetector",
    "EventName": "BatchGetVariable",
    "Description": "Gets a batch of variables"
  },
  {
    "API": "frauddetector:CancelBatchImportJob",
    "EventSource": "frauddetector",
    "EventName": "CancelBatchImportJob",
    "Description": "Cancels an in-progress batch import job"
  },
  {
    "API": "frauddetector:CancelBatchPredictionJob",
    "EventSource": "frauddetector",
    "EventName": "CancelBatchPredictionJob",
    "Description": "Cancels the specified batch prediction job"
  },
  {
    "API": "frauddetector:CreateBatchImportJob",
    "EventSource": "frauddetector",
    "EventName": "CreateBatchImportJob",
    "Description": "Creates a batch import job"
  },
  {
    "API": "frauddetector:CreateBatchPredictionJob",
    "EventSource": "frauddetector",
    "EventName": "CreateBatchPredictionJob",
    "Description": "Creates a batch prediction job"
  },
  {
    "API": "frauddetector:CreateDetectorVersion",
    "EventSource": "frauddetector",
    "EventName": "CreateDetectorVersion",
    "Description": "Creates a detector version"
  },
  {
    "API": "frauddetector:CreateList",
    "EventSource": "frauddetector",
    "EventName": "CreateList",
    "Description": "Creates a list"
  },
  {
    "API": "frauddetector:CreateModel",
    "EventSource": "frauddetector",
    "EventName": "CreateModel",
    "Description": "Creates a model using the specified model type"
  },
  {
    "API": "frauddetector:CreateModelVersion",
    "EventSource": "frauddetector",
    "EventName": "CreateModelVersion",
    "Description": "Creates a version of the model using the specified model type and model id"
  },
  {
    "API": "frauddetector:CreateRule",
    "EventSource": "frauddetector",
    "EventName": "CreateRule",
    "Description": "Creates a rule for use with the specified detector"
  },
  {
    "API": "frauddetector:CreateVariable",
    "EventSource": "frauddetector",
    "EventName": "CreateVariable",
    "Description": "Creates a variable"
  },
  {
    "API": "frauddetector:DeleteBatchImportJob",
    "EventSource": "frauddetector",
    "EventName": "DeleteBatchImportJob",
    "Description": "Deletes the specified batch import job ID record"
  },
  {
    "API": "frauddetector:DeleteBatchPredictionJob",
    "EventSource": "frauddetector",
    "EventName": "DeleteBatchPredictionJob",
    "Description": "Deletes a batch prediction job"
  },
  {
    "API": "frauddetector:DeleteDetector",
    "EventSource": "frauddetector",
    "EventName": "DeleteDetector",
    "Description": "Deletes the detector"
  },
  {
    "API": "frauddetector:DeleteDetectorVersion",
    "EventSource": "frauddetector",
    "EventName": "DeleteDetectorVersion",
    "Description": "Deletes the detector version"
  },
  {
    "API": "frauddetector:DeleteEntityType",
    "EventSource": "frauddetector",
    "EventName": "DeleteEntityType",
    "Description": "Deletes an entity type"
  },
  {
    "API": "frauddetector:DeleteEvent",
    "EventSource": "frauddetector",
    "EventName": "DeleteEvent",
    "Description": "Deletes the specified event"
  },
  {
    "API": "frauddetector:DeleteEventType",
    "EventSource": "frauddetector",
    "EventName": "DeleteEventType",
    "Description": "Deletes an event type"
  },
  {
    "API": "frauddetector:DeleteEventsByEventType",
    "EventSource": "frauddetector",
    "EventName": "DeleteEventsByEventType",
    "Description": "Deletes all events of a particular event type"
  },
  {
    "API": "frauddetector:DeleteExternalModel",
    "EventSource": "frauddetector",
    "EventName": "DeleteExternalModel",
    "Description": "Removes a SageMaker model from Amazon Fraud Detector"
  },
  {
    "API": "frauddetector:DeleteLabel",
    "EventSource": "frauddetector",
    "EventName": "DeleteLabel",
    "Description": "Deletes a label"
  },
  {
    "API": "frauddetector:DeleteList",
    "EventSource": "frauddetector",
    "EventName": "DeleteList",
    "Description": "Deletes the list, provided it is not used in a rule"
  },
  {
    "API": "frauddetector:DeleteModel",
    "EventSource": "frauddetector",
    "EventName": "DeleteModel",
    "Description": "Deletes a model"
  },
  {
    "API": "frauddetector:DeleteModelVersion",
    "EventSource": "frauddetector",
    "EventName": "DeleteModelVersion",
    "Description": "Deletes a model version"
  },
  {
    "API": "frauddetector:DeleteOutcome",
    "EventSource": "frauddetector",
    "EventName": "DeleteOutcome",
    "Description": "Deletes an outcome"
  },
  {
    "API": "frauddetector:DeleteRule",
    "EventSource": "frauddetector",
    "EventName": "DeleteRule",
    "Description": "Deletes the rule"
  },
  {
    "API": "frauddetector:DeleteVariable",
    "EventSource": "frauddetector",
    "EventName": "DeleteVariable",
    "Description": "Deletes a variable"
  },
  {
    "API": "frauddetector:DescribeDetector",
    "EventSource": "frauddetector",
    "EventName": "DescribeDetector",
    "Description": "Gets all versions for a specified detector"
  },
  {
    "API": "frauddetector:DescribeModelVersions",
    "EventSource": "frauddetector",
    "EventName": "DescribeModelVersions",
    "Description": "Gets all of the model versions for the specified model type or for the specified model type and model ID"
  },
  {
    "API": "frauddetector:GeneratePresignedUrl",
    "EventSource": "frauddetector",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "frauddetector:GetBatchImportJobs",
    "EventSource": "frauddetector",
    "EventName": "GetBatchImportJobs",
    "Description": "Gets all batch import jobs or a specific job of the specified ID"
  },
  {
    "API": "frauddetector:GetBatchPredictionJobs",
    "EventSource": "frauddetector",
    "EventName": "GetBatchPredictionJobs",
    "Description": "Gets all batch prediction jobs or a specific job if you specify a job ID"
  },
  {
    "API": "frauddetector:GetDeleteEventsByEventTypeStatus",
    "EventSource": "frauddetector",
    "EventName": "GetDeleteEventsByEventTypeStatus",
    "Description": "Retrieves the status of a ``DeleteEventsByEventType`` action"
  },
  {
    "API": "frauddetector:GetDetectorVersion",
    "EventSource": "frauddetector",
    "EventName": "GetDetectorVersion",
    "Description": "Gets a particular detector version"
  },
  {
    "API": "frauddetector:GetDetectors",
    "EventSource": "frauddetector",
    "EventName": "GetDetectors",
    "Description": "Gets all detectors or a single detector if a ``detectorId`` is specified"
  },
  {
    "API": "frauddetector:GetEntityTypes",
    "EventSource": "frauddetector",
    "EventName": "GetEntityTypes",
    "Description": "Gets all entity types or a specific entity type if a name is specified"
  },
  {
    "API": "frauddetector:GetEvent",
    "EventSource": "frauddetector",
    "EventName": "GetEvent",
    "Description": "Retrieves details of events stored with Amazon Fraud Detector"
  },
  {
    "API": "frauddetector:GetEventPrediction",
    "EventSource": "frauddetector",
    "EventName": "GetEventPrediction",
    "Description": "Evaluates an event against a detector version"
  },
  {
    "API": "frauddetector:GetEventPredictionMetadata",
    "EventSource": "frauddetector",
    "EventName": "GetEventPredictionMetadata",
    "Description": "Gets details of the past fraud predictions for the specified event ID, event type, detector ID, and detector version ID that was generated in the specified time period"
  },
  {
    "API": "frauddetector:GetEventTypes",
    "EventSource": "frauddetector",
    "EventName": "GetEventTypes",
    "Description": "Gets all event types or a specific event type if name is provided"
  },
  {
    "API": "frauddetector:GetExternalModels",
    "EventSource": "frauddetector",
    "EventName": "GetExternalModels",
    "Description": "Gets the details for one or more Amazon SageMaker models that have been imported into the service"
  },
  {
    "API": "frauddetector:GetKmsEncryptionKey",
    "EventSource": "frauddetector",
    "EventName": "GetKmsEncryptionKey",
    "Description": "Gets the encryption key if a KMS key has been specified to be used to encrypt content in Amazon Fraud Detector"
  },
  {
    "API": "frauddetector:GetLabels",
    "EventSource": "frauddetector",
    "EventName": "GetLabels",
    "Description": "Gets all labels or a specific label if name is provided"
  },
  {
    "API": "frauddetector:GetListElements",
    "EventSource": "frauddetector",
    "EventName": "GetListElements",
    "Description": "Gets all the elements in the specified list"
  },
  {
    "API": "frauddetector:GetListsMetadata",
    "EventSource": "frauddetector",
    "EventName": "GetListsMetadata",
    "Description": "Gets the metadata of either all the lists under the account or the specified list"
  },
  {
    "API": "frauddetector:GetModelVersion",
    "EventSource": "frauddetector",
    "EventName": "GetModelVersion",
    "Description": "Gets the details of the specified model version"
  },
  {
    "API": "frauddetector:GetModels",
    "EventSource": "frauddetector",
    "EventName": "GetModels",
    "Description": "Gets one or more models"
  },
  {
    "API": "frauddetector:GetOutcomes",
    "EventSource": "frauddetector",
    "EventName": "GetOutcomes",
    "Description": "Gets one or more outcomes"
  },
  {
    "API": "frauddetector:GetRules",
    "EventSource": "frauddetector",
    "EventName": "GetRules",
    "Description": "Get all rules for a detector (paginated) if ``ruleId`` and ``ruleVersion`` are not specified"
  },
  {
    "API": "frauddetector:GetVariables",
    "EventSource": "frauddetector",
    "EventName": "GetVariables",
    "Description": "Gets all of the variables or the specific variable"
  },
  {
    "API": "frauddetector:ListEventPredictions",
    "EventSource": "frauddetector",
    "EventName": "ListEventPredictions",
    "Description": "Gets a list of past predictions"
  },
  {
    "API": "frauddetector:ListTagsForResource",
    "EventSource": "frauddetector",
    "EventName": "ListTagsForResource",
    "Description": "Lists all tags associated with the resource"
  },
  {
    "API": "frauddetector:PutDetector",
    "EventSource": "frauddetector",
    "EventName": "PutDetector",
    "Description": "Creates or updates a detector"
  },
  {
    "API": "frauddetector:PutEntityType",
    "EventSource": "frauddetector",
    "EventName": "PutEntityType",
    "Description": "Creates or updates an entity type"
  },
  {
    "API": "frauddetector:PutEventType",
    "EventSource": "frauddetector",
    "EventName": "PutEventType",
    "Description": "Creates or updates an event type"
  },
  {
    "API": "frauddetector:PutExternalModel",
    "EventSource": "frauddetector",
    "EventName": "PutExternalModel",
    "Description": "Creates or updates an Amazon SageMaker model endpoint"
  },
  {
    "API": "frauddetector:PutKmsEncryptionKey",
    "EventSource": "frauddetector",
    "EventName": "PutKmsEncryptionKey",
    "Description": "Specifies the KMS key to be used to encrypt content in Amazon Fraud Detector"
  },
  {
    "API": "frauddetector:PutLabel",
    "EventSource": "frauddetector",
    "EventName": "PutLabel",
    "Description": "Creates or updates label"
  },
  {
    "API": "frauddetector:PutOutcome",
    "EventSource": "frauddetector",
    "EventName": "PutOutcome",
    "Description": "Creates or updates an outcome"
  },
  {
    "API": "frauddetector:SendEvent",
    "EventSource": "frauddetector",
    "EventName": "SendEvent",
    "Description": "Stores events in Amazon Fraud Detector without generating fraud predictions for those events"
  },
  {
    "API": "frauddetector:TagResource",
    "EventSource": "frauddetector",
    "EventName": "TagResource",
    "Description": "Assigns tags to a resource"
  },
  {
    "API": "frauddetector:UntagResource",
    "EventSource": "frauddetector",
    "EventName": "UntagResource",
    "Description": "Removes tags from a resource"
  },
  {
    "API": "frauddetector:UpdateDetectorVersion",
    "EventSource": "frauddetector",
    "EventName": "UpdateDetectorVersion",
    "Description": "Updates a detector version"
  },
  {
    "API": "frauddetector:UpdateDetectorVersionMetadata",
    "EventSource": "frauddetector",
    "EventName": "UpdateDetectorVersionMetadata",
    "Description": "Updates the detector version's description"
  },
  {
    "API": "frauddetector:UpdateDetectorVersionStatus",
    "EventSource": "frauddetector",
    "EventName": "UpdateDetectorVersionStatus",
    "Description": "Updates the detector version’s status"
  },
  {
    "API": "frauddetector:UpdateEventLabel",
    "EventSource": "frauddetector",
    "EventName": "UpdateEventLabel",
    "Description": "Updates the specified event with a new label"
  },
  {
    "API": "frauddetector:UpdateList",
    "EventSource": "frauddetector",
    "EventName": "UpdateList",
    "Description": "Updates a list"
  },
  {
    "API": "frauddetector:UpdateModel",
    "EventSource": "frauddetector",
    "EventName": "UpdateModel",
    "Description": "Updates model description"
  },
  {
    "API": "frauddetector:UpdateModelVersion",
    "EventSource": "frauddetector",
    "EventName": "UpdateModelVersion",
    "Description": "Updates a model version"
  },
  {
    "API": "frauddetector:UpdateModelVersionStatus",
    "EventSource": "frauddetector",
    "EventName": "UpdateModelVersionStatus",
    "Description": "Updates the status of a model version"
  },
  {
    "API": "frauddetector:UpdateRuleMetadata",
    "EventSource": "frauddetector",
    "EventName": "UpdateRuleMetadata",
    "Description": "Updates a rule's metadata"
  },
  {
    "API": "frauddetector:UpdateRuleVersion",
    "EventSource": "frauddetector",
    "EventName": "UpdateRuleVersion",
    "Description": "Updates a rule version resulting in a new rule version"
  },
  {
    "API": "frauddetector:UpdateVariable",
    "EventSource": "frauddetector",
    "EventName": "UpdateVariable",
    "Description": "Updates a variable"
  },
  {
    "API": "freetier:GeneratePresignedUrl",
    "EventSource": "freetier",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "freetier:GetFreeTierUsage",
    "EventSource": "freetier",
    "EventName": "GetFreeTierUsage",
    "Description": "Returns a list of all Free Tier usage objects that match your filters"
  },
  {
    "API": "fsx:AssociateFileSystemAliases",
    "EventSource": "fsx",
    "EventName": "AssociateFileSystemAliases",
    "Description": "Use this action to associate one or more Domain Name Server (DNS) aliases with an existing Amazon FSx for Windows File Server file system"
  },
  {
    "API": "fsx:CancelDataRepositoryTask",
    "EventSource": "fsx",
    "EventName": "CancelDataRepositoryTask",
    "Description": "Cancels an existing Amazon FSx for Lustre data repository task if that task is in either the ``PENDING`` or ``EXECUTING`` state"
  },
  {
    "API": "fsx:CopyBackup",
    "EventSource": "fsx",
    "EventName": "CopyBackup",
    "Description": "Copies an existing backup within the same Amazon Web Services account to another Amazon Web Services Region (cross-Region copy) or within the same Amazon Web Services Region (in-Region copy)"
  },
  {
    "API": "fsx:CopySnapshotAndUpdateVolume",
    "EventSource": "fsx",
    "EventName": "CopySnapshotAndUpdateVolume",
    "Description": "Updates an existing volume by using a snapshot from another Amazon FSx for OpenZFS file system"
  },
  {
    "API": "fsx:CreateBackup",
    "EventSource": "fsx",
    "EventName": "CreateBackup",
    "Description": "Creates a backup of an existing Amazon FSx for Windows File Server file system, Amazon FSx for Lustre file system, Amazon FSx for NetApp ONTAP volume, or Amazon FSx for OpenZFS file system"
  },
  {
    "API": "fsx:CreateDataRepositoryAssociation",
    "EventSource": "fsx",
    "EventName": "CreateDataRepositoryAssociation",
    "Description": "Creates an Amazon FSx for Lustre data repository association (DRA)"
  },
  {
    "API": "fsx:CreateDataRepositoryTask",
    "EventSource": "fsx",
    "EventName": "CreateDataRepositoryTask",
    "Description": "Creates an Amazon FSx for Lustre data repository task"
  },
  {
    "API": "fsx:CreateFileCache",
    "EventSource": "fsx",
    "EventName": "CreateFileCache",
    "Description": "Creates a new Amazon File Cache resource"
  },
  {
    "API": "fsx:CreateFileSystem",
    "EventSource": "fsx",
    "EventName": "CreateFileSystem",
    "Description": "Creates a new, empty Amazon FSx file system"
  },
  {
    "API": "fsx:CreateFileSystemFromBackup",
    "EventSource": "fsx",
    "EventName": "CreateFileSystemFromBackup",
    "Description": "Creates a new Amazon FSx for Lustre, Amazon FSx for Windows File Server, or Amazon FSx for OpenZFS file system from an existing Amazon FSx backup"
  },
  {
    "API": "fsx:CreateSnapshot",
    "EventSource": "fsx",
    "EventName": "CreateSnapshot",
    "Description": "Creates a snapshot of an existing Amazon FSx for OpenZFS volume"
  },
  {
    "API": "fsx:CreateStorageVirtualMachine",
    "EventSource": "fsx",
    "EventName": "CreateStorageVirtualMachine",
    "Description": "Creates a storage virtual machine (SVM) for an Amazon FSx for ONTAP file system"
  },
  {
    "API": "fsx:CreateVolume",
    "EventSource": "fsx",
    "EventName": "CreateVolume",
    "Description": "Creates an FSx for ONTAP or Amazon FSx for OpenZFS storage volume"
  },
  {
    "API": "fsx:CreateVolumeFromBackup",
    "EventSource": "fsx",
    "EventName": "CreateVolumeFromBackup",
    "Description": "Creates a new Amazon FSx for NetApp ONTAP volume from an existing Amazon FSx volume backup"
  },
  {
    "API": "fsx:DeleteBackup",
    "EventSource": "fsx",
    "EventName": "DeleteBackup",
    "Description": "Deletes an Amazon FSx backup"
  },
  {
    "API": "fsx:DeleteDataRepositoryAssociation",
    "EventSource": "fsx",
    "EventName": "DeleteDataRepositoryAssociation",
    "Description": "Deletes a data repository association on an Amazon FSx for Lustre file system"
  },
  {
    "API": "fsx:DeleteFileCache",
    "EventSource": "fsx",
    "EventName": "DeleteFileCache",
    "Description": "Deletes an Amazon File Cache resource"
  },
  {
    "API": "fsx:DeleteFileSystem",
    "EventSource": "fsx",
    "EventName": "DeleteFileSystem",
    "Description": "Deletes a file system"
  },
  {
    "API": "fsx:DeleteSnapshot",
    "EventSource": "fsx",
    "EventName": "DeleteSnapshot",
    "Description": "Deletes an Amazon FSx for OpenZFS snapshot"
  },
  {
    "API": "fsx:DeleteStorageVirtualMachine",
    "EventSource": "fsx",
    "EventName": "DeleteStorageVirtualMachine",
    "Description": "Deletes an existing Amazon FSx for ONTAP storage virtual machine (SVM)"
  },
  {
    "API": "fsx:DeleteVolume",
    "EventSource": "fsx",
    "EventName": "DeleteVolume",
    "Description": "Deletes an Amazon FSx for NetApp ONTAP or Amazon FSx for OpenZFS volume"
  },
  {
    "API": "fsx:DescribeBackups",
    "EventSource": "fsx",
    "EventName": "DescribeBackups",
    "Description": "Returns the description of a specific Amazon FSx backup, if a ``BackupIds`` value is provided for that backup"
  },
  {
    "API": "fsx:DescribeDataRepositoryAssociations",
    "EventSource": "fsx",
    "EventName": "DescribeDataRepositoryAssociations",
    "Description": "Returns the description of specific Amazon FSx for Lustre or Amazon File Cache data repository associations, if one or more ``AssociationIds`` values are provided in the request, or if filters are used in the request"
  },
  {
    "API": "fsx:DescribeDataRepositoryTasks",
    "EventSource": "fsx",
    "EventName": "DescribeDataRepositoryTasks",
    "Description": "Returns the description of specific Amazon FSx for Lustre or Amazon File Cache data repository tasks, if one or more ``TaskIds`` values are provided in the request, or if filters are used in the request"
  },
  {
    "API": "fsx:DescribeFileCaches",
    "EventSource": "fsx",
    "EventName": "DescribeFileCaches",
    "Description": "Returns the description of a specific Amazon File Cache resource, if a ``FileCacheIds`` value is provided for that cache"
  },
  {
    "API": "fsx:DescribeFileSystemAliases",
    "EventSource": "fsx",
    "EventName": "DescribeFileSystemAliases",
    "Description": "Returns the DNS aliases that are associated with the specified Amazon FSx for Windows File Server file system"
  },
  {
    "API": "fsx:DescribeFileSystems",
    "EventSource": "fsx",
    "EventName": "DescribeFileSystems",
    "Description": "Returns the description of specific Amazon FSx file systems, if a ``FileSystemIds`` value is provided for that file system"
  },
  {
    "API": "fsx:DescribeSharedVpcConfiguration",
    "EventSource": "fsx",
    "EventName": "DescribeSharedVpcConfiguration",
    "Description": "Indicates whether participant accounts in your organization can create Amazon FSx for NetApp ONTAP Multi-AZ file systems in subnets that are shared by a virtual private cloud (VPC) owner"
  },
  {
    "API": "fsx:DescribeSnapshots",
    "EventSource": "fsx",
    "EventName": "DescribeSnapshots",
    "Description": "Returns the description of specific Amazon FSx for OpenZFS snapshots, if a ``SnapshotIds`` value is provided"
  },
  {
    "API": "fsx:DescribeStorageVirtualMachines",
    "EventSource": "fsx",
    "EventName": "DescribeStorageVirtualMachines",
    "Description": "Describes one or more Amazon FSx for NetApp ONTAP storage virtual machines (SVMs)"
  },
  {
    "API": "fsx:DescribeVolumes",
    "EventSource": "fsx",
    "EventName": "DescribeVolumes",
    "Description": "Describes one or more Amazon FSx for NetApp ONTAP or Amazon FSx for OpenZFS volumes"
  },
  {
    "API": "fsx:DisassociateFileSystemAliases",
    "EventSource": "fsx",
    "EventName": "DisassociateFileSystemAliases",
    "Description": "Use this action to disassociate, or remove, one or more Domain Name Service (DNS) aliases from an Amazon FSx for Windows File Server file system"
  },
  {
    "API": "fsx:GeneratePresignedUrl",
    "EventSource": "fsx",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "fsx:ListTagsForResource",
    "EventSource": "fsx",
    "EventName": "ListTagsForResource",
    "Description": "Lists tags for Amazon FSx resources"
  },
  {
    "API": "fsx:ReleaseFileSystemNfsV3Locks",
    "EventSource": "fsx",
    "EventName": "ReleaseFileSystemNfsV3Locks",
    "Description": "Releases the file system lock from an Amazon FSx for OpenZFS file system"
  },
  {
    "API": "fsx:RestoreVolumeFromSnapshot",
    "EventSource": "fsx",
    "EventName": "RestoreVolumeFromSnapshot",
    "Description": "Returns an Amazon FSx for OpenZFS volume to the state saved by the specified snapshot"
  },
  {
    "API": "fsx:StartMisconfiguredStateRecovery",
    "EventSource": "fsx",
    "EventName": "StartMisconfiguredStateRecovery",
    "Description": "After performing steps to repair the Active Directory configuration of an FSx for Windows File Server file system, use this action to initiate the process of Amazon FSx attempting to reconnect to the file system"
  },
  {
    "API": "fsx:TagResource",
    "EventSource": "fsx",
    "EventName": "TagResource",
    "Description": "Tags an Amazon FSx resource"
  },
  {
    "API": "fsx:UntagResource",
    "EventSource": "fsx",
    "EventName": "UntagResource",
    "Description": "This action removes a tag from an Amazon FSx resource"
  },
  {
    "API": "fsx:UpdateDataRepositoryAssociation",
    "EventSource": "fsx",
    "EventName": "UpdateDataRepositoryAssociation",
    "Description": "Updates the configuration of an existing data repository association on an Amazon FSx for Lustre file system"
  },
  {
    "API": "fsx:UpdateFileCache",
    "EventSource": "fsx",
    "EventName": "UpdateFileCache",
    "Description": "Updates the configuration of an existing Amazon File Cache resource"
  },
  {
    "API": "fsx:UpdateFileSystem",
    "EventSource": "fsx",
    "EventName": "UpdateFileSystem",
    "Description": "Use this operation to update the configuration of an existing Amazon FSx file system"
  },
  {
    "API": "fsx:UpdateSharedVpcConfiguration",
    "EventSource": "fsx",
    "EventName": "UpdateSharedVpcConfiguration",
    "Description": "Configures whether participant accounts in your organization can create Amazon FSx for NetApp ONTAP Multi-AZ file systems in subnets that are shared by a virtual private cloud (VPC) owner"
  },
  {
    "API": "fsx:UpdateSnapshot",
    "EventSource": "fsx",
    "EventName": "UpdateSnapshot",
    "Description": "Updates the name of an Amazon FSx for OpenZFS snapshot"
  },
  {
    "API": "fsx:UpdateStorageVirtualMachine",
    "EventSource": "fsx",
    "EventName": "UpdateStorageVirtualMachine",
    "Description": "Updates an FSx for ONTAP storage virtual machine (SVM)"
  },
  {
    "API": "fsx:UpdateVolume",
    "EventSource": "fsx",
    "EventName": "UpdateVolume",
    "Description": "Updates the configuration of an Amazon FSx for NetApp ONTAP or Amazon FSx for OpenZFS volume"
  },
  {
    "API": "gamelift:AcceptMatch",
    "EventSource": "gamelift",
    "EventName": "AcceptMatch",
    "Description": "Registers a player's acceptance or rejection of a proposed FlexMatch match"
  },
  {
    "API": "gamelift:ClaimGameServer",
    "EventSource": "gamelift",
    "EventName": "ClaimGameServer",
    "Description": "**This operation is used with the Amazon GameLift FleetIQ solution and game server groups"
  },
  {
    "API": "gamelift:CreateAlias",
    "EventSource": "gamelift",
    "EventName": "CreateAlias",
    "Description": "Creates an alias for a fleet"
  },
  {
    "API": "gamelift:CreateBuild",
    "EventSource": "gamelift",
    "EventName": "CreateBuild",
    "Description": "Creates a new Amazon GameLift build resource for your game server binary files"
  },
  {
    "API": "gamelift:CreateContainerGroupDefinition",
    "EventSource": "gamelift",
    "EventName": "CreateContainerGroupDefinition",
    "Description": "**This operation is used with the Amazon GameLift containers feature, which is currently in public preview"
  },
  {
    "API": "gamelift:CreateFleet",
    "EventSource": "gamelift",
    "EventName": "CreateFleet",
    "Description": "**This operation has been expanded to use with the Amazon GameLift containers feature, which is currently in public preview"
  },
  {
    "API": "gamelift:CreateFleetLocations",
    "EventSource": "gamelift",
    "EventName": "CreateFleetLocations",
    "Description": "**This operation has been expanded to use with the Amazon GameLift containers feature, which is currently in public preview"
  },
  {
    "API": "gamelift:CreateGameServerGroup",
    "EventSource": "gamelift",
    "EventName": "CreateGameServerGroup",
    "Description": "**This operation is used with the Amazon GameLift FleetIQ solution and game server groups"
  },
  {
    "API": "gamelift:CreateGameSession",
    "EventSource": "gamelift",
    "EventName": "CreateGameSession",
    "Description": "Creates a multiplayer game session for players in a specific fleet location"
  },
  {
    "API": "gamelift:CreateGameSessionQueue",
    "EventSource": "gamelift",
    "EventName": "CreateGameSessionQueue",
    "Description": "Creates a placement queue that processes requests for new game sessions"
  },
  {
    "API": "gamelift:CreateLocation",
    "EventSource": "gamelift",
    "EventName": "CreateLocation",
    "Description": "Creates a custom location for use in an Anywhere fleet"
  },
  {
    "API": "gamelift:CreateMatchmakingConfiguration",
    "EventSource": "gamelift",
    "EventName": "CreateMatchmakingConfiguration",
    "Description": "Defines a new matchmaking configuration for use with FlexMatch"
  },
  {
    "API": "gamelift:CreateMatchmakingRuleSet",
    "EventSource": "gamelift",
    "EventName": "CreateMatchmakingRuleSet",
    "Description": "Creates a new rule set for FlexMatch matchmaking"
  },
  {
    "API": "gamelift:CreatePlayerSession",
    "EventSource": "gamelift",
    "EventName": "CreatePlayerSession",
    "Description": "Reserves an open player slot in a game session for a player"
  },
  {
    "API": "gamelift:CreatePlayerSessions",
    "EventSource": "gamelift",
    "EventName": "CreatePlayerSessions",
    "Description": "Reserves open slots in a game session for a group of players"
  },
  {
    "API": "gamelift:CreateScript",
    "EventSource": "gamelift",
    "EventName": "CreateScript",
    "Description": "Creates a new script record for your Realtime Servers script"
  },
  {
    "API": "gamelift:CreateVpcPeeringAuthorization",
    "EventSource": "gamelift",
    "EventName": "CreateVpcPeeringAuthorization",
    "Description": "Requests authorization to create or delete a peer connection between the VPC for your Amazon GameLift fleet and a virtual private cloud (VPC) in your Amazon Web Services account"
  },
  {
    "API": "gamelift:CreateVpcPeeringConnection",
    "EventSource": "gamelift",
    "EventName": "CreateVpcPeeringConnection",
    "Description": "Establishes a VPC peering connection between a virtual private cloud (VPC) in an Amazon Web Services account with the VPC for your Amazon GameLift fleet"
  },
  {
    "API": "gamelift:DeleteAlias",
    "EventSource": "gamelift",
    "EventName": "DeleteAlias",
    "Description": "Deletes an alias"
  },
  {
    "API": "gamelift:DeleteBuild",
    "EventSource": "gamelift",
    "EventName": "DeleteBuild",
    "Description": "Deletes a build"
  },
  {
    "API": "gamelift:DeleteContainerGroupDefinition",
    "EventSource": "gamelift",
    "EventName": "DeleteContainerGroupDefinition",
    "Description": "**This operation is used with the Amazon GameLift containers feature, which is currently in public preview"
  },
  {
    "API": "gamelift:DeleteFleet",
    "EventSource": "gamelift",
    "EventName": "DeleteFleet",
    "Description": "Deletes all resources and information related to a fleet and shuts down any currently running fleet instances, including those in remote locations"
  },
  {
    "API": "gamelift:DeleteFleetLocations",
    "EventSource": "gamelift",
    "EventName": "DeleteFleetLocations",
    "Description": "Removes locations from a multi-location fleet"
  },
  {
    "API": "gamelift:DeleteGameServerGroup",
    "EventSource": "gamelift",
    "EventName": "DeleteGameServerGroup",
    "Description": "**This operation is used with the Amazon GameLift FleetIQ solution and game server groups"
  },
  {
    "API": "gamelift:DeleteGameSessionQueue",
    "EventSource": "gamelift",
    "EventName": "DeleteGameSessionQueue",
    "Description": "Deletes a game session queue"
  },
  {
    "API": "gamelift:DeleteLocation",
    "EventSource": "gamelift",
    "EventName": "DeleteLocation",
    "Description": "Deletes a custom location"
  },
  {
    "API": "gamelift:DeleteMatchmakingConfiguration",
    "EventSource": "gamelift",
    "EventName": "DeleteMatchmakingConfiguration",
    "Description": "Permanently removes a FlexMatch matchmaking configuration"
  },
  {
    "API": "gamelift:DeleteMatchmakingRuleSet",
    "EventSource": "gamelift",
    "EventName": "DeleteMatchmakingRuleSet",
    "Description": "Deletes an existing matchmaking rule set"
  },
  {
    "API": "gamelift:DeleteScalingPolicy",
    "EventSource": "gamelift",
    "EventName": "DeleteScalingPolicy",
    "Description": "Deletes a fleet scaling policy"
  },
  {
    "API": "gamelift:DeleteScript",
    "EventSource": "gamelift",
    "EventName": "DeleteScript",
    "Description": "Deletes a Realtime script"
  },
  {
    "API": "gamelift:DeleteVpcPeeringAuthorization",
    "EventSource": "gamelift",
    "EventName": "DeleteVpcPeeringAuthorization",
    "Description": "Cancels a pending VPC peering authorization for the specified VPC"
  },
  {
    "API": "gamelift:DeleteVpcPeeringConnection",
    "EventSource": "gamelift",
    "EventName": "DeleteVpcPeeringConnection",
    "Description": "Removes a VPC peering connection"
  },
  {
    "API": "gamelift:DeregisterCompute",
    "EventSource": "gamelift",
    "EventName": "DeregisterCompute",
    "Description": "**This operation has been expanded to use with the Amazon GameLift containers feature, which is currently in public preview"
  },
  {
    "API": "gamelift:DeregisterGameServer",
    "EventSource": "gamelift",
    "EventName": "DeregisterGameServer",
    "Description": "**This operation is used with the Amazon GameLift FleetIQ solution and game server groups"
  },
  {
    "API": "gamelift:DescribeAlias",
    "EventSource": "gamelift",
    "EventName": "DescribeAlias",
    "Description": "Retrieves properties for an alias"
  },
  {
    "API": "gamelift:DescribeBuild",
    "EventSource": "gamelift",
    "EventName": "DescribeBuild",
    "Description": "Retrieves properties for a custom game build"
  },
  {
    "API": "gamelift:DescribeCompute",
    "EventSource": "gamelift",
    "EventName": "DescribeCompute",
    "Description": "**This operation has been expanded to use with the Amazon GameLift containers feature, which is currently in public preview"
  },
  {
    "API": "gamelift:DescribeContainerGroupDefinition",
    "EventSource": "gamelift",
    "EventName": "DescribeContainerGroupDefinition",
    "Description": "**This operation is used with the Amazon GameLift containers feature, which is currently in public preview"
  },
  {
    "API": "gamelift:DescribeEc2InstanceLimits",
    "EventSource": "gamelift",
    "EventName": "DescribeEc2InstanceLimits",
    "Description": "Retrieves the instance limits and current utilization for an Amazon Web Services Region or location"
  },
  {
    "API": "gamelift:DescribeFleetAttributes",
    "EventSource": "gamelift",
    "EventName": "DescribeFleetAttributes",
    "Description": "**This operation has been expanded to use with the Amazon GameLift containers feature, which is currently in public preview"
  },
  {
    "API": "gamelift:DescribeFleetCapacity",
    "EventSource": "gamelift",
    "EventName": "DescribeFleetCapacity",
    "Description": "**This operation has been expanded to use with the Amazon GameLift containers feature, which is currently in public preview"
  },
  {
    "API": "gamelift:DescribeFleetEvents",
    "EventSource": "gamelift",
    "EventName": "DescribeFleetEvents",
    "Description": "Retrieves entries from a fleet's event log"
  },
  {
    "API": "gamelift:DescribeFleetLocationAttributes",
    "EventSource": "gamelift",
    "EventName": "DescribeFleetLocationAttributes",
    "Description": "Retrieves information on a fleet's remote locations, including life-cycle status and any suspended fleet activity"
  },
  {
    "API": "gamelift:DescribeFleetLocationCapacity",
    "EventSource": "gamelift",
    "EventName": "DescribeFleetLocationCapacity",
    "Description": "Retrieves the resource capacity settings for a fleet location"
  },
  {
    "API": "gamelift:DescribeFleetLocationUtilization",
    "EventSource": "gamelift",
    "EventName": "DescribeFleetLocationUtilization",
    "Description": "Retrieves current usage data for a fleet location"
  },
  {
    "API": "gamelift:DescribeFleetPortSettings",
    "EventSource": "gamelift",
    "EventName": "DescribeFleetPortSettings",
    "Description": "Retrieves a fleet's inbound connection permissions"
  },
  {
    "API": "gamelift:DescribeFleetUtilization",
    "EventSource": "gamelift",
    "EventName": "DescribeFleetUtilization",
    "Description": "Retrieves utilization statistics for one or more fleets"
  },
  {
    "API": "gamelift:DescribeGameServer",
    "EventSource": "gamelift",
    "EventName": "DescribeGameServer",
    "Description": "**This operation is used with the Amazon GameLift FleetIQ solution and game server groups"
  },
  {
    "API": "gamelift:DescribeGameServerGroup",
    "EventSource": "gamelift",
    "EventName": "DescribeGameServerGroup",
    "Description": "**This operation is used with the Amazon GameLift FleetIQ solution and game server groups"
  },
  {
    "API": "gamelift:DescribeGameServerInstances",
    "EventSource": "gamelift",
    "EventName": "DescribeGameServerInstances",
    "Description": "**This operation is used with the Amazon GameLift FleetIQ solution and game server groups"
  },
  {
    "API": "gamelift:DescribeGameSessionDetails",
    "EventSource": "gamelift",
    "EventName": "DescribeGameSessionDetails",
    "Description": "Retrieves additional game session properties, including the game session protection policy in force, a set of one or more game sessions in a specific fleet location"
  },
  {
    "API": "gamelift:DescribeGameSessionPlacement",
    "EventSource": "gamelift",
    "EventName": "DescribeGameSessionPlacement",
    "Description": "Retrieves information, including current status, about a game session placement request"
  },
  {
    "API": "gamelift:DescribeGameSessionQueues",
    "EventSource": "gamelift",
    "EventName": "DescribeGameSessionQueues",
    "Description": "Retrieves the properties for one or more game session queues"
  },
  {
    "API": "gamelift:DescribeGameSessions",
    "EventSource": "gamelift",
    "EventName": "DescribeGameSessions",
    "Description": "Retrieves a set of one or more game sessions in a specific fleet location"
  },
  {
    "API": "gamelift:DescribeInstances",
    "EventSource": "gamelift",
    "EventName": "DescribeInstances",
    "Description": "Retrieves information about the EC2 instances in an Amazon GameLift managed fleet, including instance ID, connection data, and status"
  },
  {
    "API": "gamelift:DescribeMatchmaking",
    "EventSource": "gamelift",
    "EventName": "DescribeMatchmaking",
    "Description": "Retrieves one or more matchmaking tickets"
  },
  {
    "API": "gamelift:DescribeMatchmakingConfigurations",
    "EventSource": "gamelift",
    "EventName": "DescribeMatchmakingConfigurations",
    "Description": "Retrieves the details of FlexMatch matchmaking configurations"
  },
  {
    "API": "gamelift:DescribeMatchmakingRuleSets",
    "EventSource": "gamelift",
    "EventName": "DescribeMatchmakingRuleSets",
    "Description": "Retrieves the details for FlexMatch matchmaking rule sets"
  },
  {
    "API": "gamelift:DescribePlayerSessions",
    "EventSource": "gamelift",
    "EventName": "DescribePlayerSessions",
    "Description": "Retrieves properties for one or more player sessions"
  },
  {
    "API": "gamelift:DescribeRuntimeConfiguration",
    "EventSource": "gamelift",
    "EventName": "DescribeRuntimeConfiguration",
    "Description": "Retrieves a fleet's runtime configuration settings"
  },
  {
    "API": "gamelift:DescribeScalingPolicies",
    "EventSource": "gamelift",
    "EventName": "DescribeScalingPolicies",
    "Description": "Retrieves all scaling policies applied to a fleet"
  },
  {
    "API": "gamelift:DescribeScript",
    "EventSource": "gamelift",
    "EventName": "DescribeScript",
    "Description": "Retrieves properties for a Realtime script"
  },
  {
    "API": "gamelift:DescribeVpcPeeringAuthorizations",
    "EventSource": "gamelift",
    "EventName": "DescribeVpcPeeringAuthorizations",
    "Description": "Retrieves valid VPC peering authorizations that are pending for the Amazon Web Services account"
  },
  {
    "API": "gamelift:DescribeVpcPeeringConnections",
    "EventSource": "gamelift",
    "EventName": "DescribeVpcPeeringConnections",
    "Description": "Retrieves information on VPC peering connections"
  },
  {
    "API": "gamelift:GeneratePresignedUrl",
    "EventSource": "gamelift",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "gamelift:GetComputeAccess",
    "EventSource": "gamelift",
    "EventName": "GetComputeAccess",
    "Description": "**This operation has been expanded to use with the Amazon GameLift containers feature, which is currently in public preview"
  },
  {
    "API": "gamelift:GetComputeAuthToken",
    "EventSource": "gamelift",
    "EventName": "GetComputeAuthToken",
    "Description": "Requests an authentication token from Amazon GameLift for a compute resource in an Amazon GameLift Anywhere fleet or container fleet"
  },
  {
    "API": "gamelift:GetGameSessionLogUrl",
    "EventSource": "gamelift",
    "EventName": "GetGameSessionLogUrl",
    "Description": "Retrieves the location of stored game session logs for a specified game session on Amazon GameLift managed fleets"
  },
  {
    "API": "gamelift:GetInstanceAccess",
    "EventSource": "gamelift",
    "EventName": "GetInstanceAccess",
    "Description": "Requests authorization to remotely connect to an instance in an Amazon GameLift managed fleet"
  },
  {
    "API": "gamelift:ListAliases",
    "EventSource": "gamelift",
    "EventName": "ListAliases",
    "Description": "Retrieves all aliases for this Amazon Web Services account"
  },
  {
    "API": "gamelift:ListBuilds",
    "EventSource": "gamelift",
    "EventName": "ListBuilds",
    "Description": "Retrieves build resources for all builds associated with the Amazon Web Services account in use"
  },
  {
    "API": "gamelift:ListCompute",
    "EventSource": "gamelift",
    "EventName": "ListCompute",
    "Description": "**This operation has been expanded to use with the Amazon GameLift containers feature, which is currently in public preview"
  },
  {
    "API": "gamelift:ListContainerGroupDefinitions",
    "EventSource": "gamelift",
    "EventName": "ListContainerGroupDefinitions",
    "Description": "**This operation is used with the Amazon GameLift containers feature, which is currently in public preview"
  },
  {
    "API": "gamelift:ListFleets",
    "EventSource": "gamelift",
    "EventName": "ListFleets",
    "Description": "**This operation has been expanded to use with the Amazon GameLift containers feature, which is currently in public preview"
  },
  {
    "API": "gamelift:ListGameServerGroups",
    "EventSource": "gamelift",
    "EventName": "ListGameServerGroups",
    "Description": "Lists a game server groups"
  },
  {
    "API": "gamelift:ListGameServers",
    "EventSource": "gamelift",
    "EventName": "ListGameServers",
    "Description": "**This operation is used with the Amazon GameLift FleetIQ solution and game server groups"
  },
  {
    "API": "gamelift:ListLocations",
    "EventSource": "gamelift",
    "EventName": "ListLocations",
    "Description": "Lists all custom and Amazon Web Services locations"
  },
  {
    "API": "gamelift:ListScripts",
    "EventSource": "gamelift",
    "EventName": "ListScripts",
    "Description": "Retrieves script records for all Realtime scripts that are associated with the Amazon Web Services account in use"
  },
  {
    "API": "gamelift:ListTagsForResource",
    "EventSource": "gamelift",
    "EventName": "ListTagsForResource",
    "Description": "Retrieves all tags assigned to a Amazon GameLift resource"
  },
  {
    "API": "gamelift:PutScalingPolicy",
    "EventSource": "gamelift",
    "EventName": "PutScalingPolicy",
    "Description": "Creates or updates a scaling policy for a fleet"
  },
  {
    "API": "gamelift:RegisterCompute",
    "EventSource": "gamelift",
    "EventName": "RegisterCompute",
    "Description": "**This operation has been expanded to use with the Amazon GameLift containers feature, which is currently in public preview"
  },
  {
    "API": "gamelift:RegisterGameServer",
    "EventSource": "gamelift",
    "EventName": "RegisterGameServer",
    "Description": "**This operation is used with the Amazon GameLift FleetIQ solution and game server groups"
  },
  {
    "API": "gamelift:RequestUploadCredentials",
    "EventSource": "gamelift",
    "EventName": "RequestUploadCredentials",
    "Description": "Retrieves a fresh set of credentials for use when uploading a new set of game build files to Amazon GameLift's Amazon S3"
  },
  {
    "API": "gamelift:ResolveAlias",
    "EventSource": "gamelift",
    "EventName": "ResolveAlias",
    "Description": "Attempts to retrieve a fleet ID that is associated with an alias"
  },
  {
    "API": "gamelift:ResumeGameServerGroup",
    "EventSource": "gamelift",
    "EventName": "ResumeGameServerGroup",
    "Description": "**This operation is used with the Amazon GameLift FleetIQ solution and game server groups"
  },
  {
    "API": "gamelift:SearchGameSessions",
    "EventSource": "gamelift",
    "EventName": "SearchGameSessions",
    "Description": "Retrieves all active game sessions that match a set of search criteria and sorts them into a specified order"
  },
  {
    "API": "gamelift:StartFleetActions",
    "EventSource": "gamelift",
    "EventName": "StartFleetActions",
    "Description": "Resumes certain types of activity on fleet instances that were suspended with `StopFleetActions <https://docs"
  },
  {
    "API": "gamelift:StartGameSessionPlacement",
    "EventSource": "gamelift",
    "EventName": "StartGameSessionPlacement",
    "Description": "Places a request for a new game session in a queue"
  },
  {
    "API": "gamelift:StartMatchBackfill",
    "EventSource": "gamelift",
    "EventName": "StartMatchBackfill",
    "Description": "Finds new players to fill open slots in currently running game sessions"
  },
  {
    "API": "gamelift:StartMatchmaking",
    "EventSource": "gamelift",
    "EventName": "StartMatchmaking",
    "Description": "Uses FlexMatch to create a game match for a group of players based on custom matchmaking rules"
  },
  {
    "API": "gamelift:StopFleetActions",
    "EventSource": "gamelift",
    "EventName": "StopFleetActions",
    "Description": "Suspends certain types of activity in a fleet location"
  },
  {
    "API": "gamelift:StopGameSessionPlacement",
    "EventSource": "gamelift",
    "EventName": "StopGameSessionPlacement",
    "Description": "Cancels a game session placement that is in ``PENDING`` status"
  },
  {
    "API": "gamelift:StopMatchmaking",
    "EventSource": "gamelift",
    "EventName": "StopMatchmaking",
    "Description": "Cancels a matchmaking ticket or match backfill ticket that is currently being processed"
  },
  {
    "API": "gamelift:SuspendGameServerGroup",
    "EventSource": "gamelift",
    "EventName": "SuspendGameServerGroup",
    "Description": "**This operation is used with the Amazon GameLift FleetIQ solution and game server groups"
  },
  {
    "API": "gamelift:TagResource",
    "EventSource": "gamelift",
    "EventName": "TagResource",
    "Description": "Assigns a tag to an Amazon GameLift resource"
  },
  {
    "API": "gamelift:UntagResource",
    "EventSource": "gamelift",
    "EventName": "UntagResource",
    "Description": "Removes a tag assigned to a Amazon GameLift resource"
  },
  {
    "API": "gamelift:UpdateAlias",
    "EventSource": "gamelift",
    "EventName": "UpdateAlias",
    "Description": "Updates properties for an alias"
  },
  {
    "API": "gamelift:UpdateBuild",
    "EventSource": "gamelift",
    "EventName": "UpdateBuild",
    "Description": "Updates metadata in a build resource, including the build name and version"
  },
  {
    "API": "gamelift:UpdateFleetAttributes",
    "EventSource": "gamelift",
    "EventName": "UpdateFleetAttributes",
    "Description": "Updates a fleet's mutable attributes, such as game session protection and resource creation limits"
  },
  {
    "API": "gamelift:UpdateFleetCapacity",
    "EventSource": "gamelift",
    "EventName": "UpdateFleetCapacity",
    "Description": "**This operation has been expanded to use with the Amazon GameLift containers feature, which is currently in public preview"
  },
  {
    "API": "gamelift:UpdateFleetPortSettings",
    "EventSource": "gamelift",
    "EventName": "UpdateFleetPortSettings",
    "Description": "Updates permissions that allow inbound traffic to connect to game sessions in the fleet"
  },
  {
    "API": "gamelift:UpdateGameServer",
    "EventSource": "gamelift",
    "EventName": "UpdateGameServer",
    "Description": "**This operation is used with the Amazon GameLift FleetIQ solution and game server groups"
  },
  {
    "API": "gamelift:UpdateGameServerGroup",
    "EventSource": "gamelift",
    "EventName": "UpdateGameServerGroup",
    "Description": "**This operation is used with the Amazon GameLift FleetIQ solution and game server groups"
  },
  {
    "API": "gamelift:UpdateGameSession",
    "EventSource": "gamelift",
    "EventName": "UpdateGameSession",
    "Description": "Updates the mutable properties of a game session"
  },
  {
    "API": "gamelift:UpdateGameSessionQueue",
    "EventSource": "gamelift",
    "EventName": "UpdateGameSessionQueue",
    "Description": "Updates the configuration of a game session queue, which determines how the queue processes new game session requests"
  },
  {
    "API": "gamelift:UpdateMatchmakingConfiguration",
    "EventSource": "gamelift",
    "EventName": "UpdateMatchmakingConfiguration",
    "Description": "Updates settings for a FlexMatch matchmaking configuration"
  },
  {
    "API": "gamelift:UpdateRuntimeConfiguration",
    "EventSource": "gamelift",
    "EventName": "UpdateRuntimeConfiguration",
    "Description": "Updates the runtime configuration for the specified fleet"
  },
  {
    "API": "gamelift:UpdateScript",
    "EventSource": "gamelift",
    "EventName": "UpdateScript",
    "Description": "Updates Realtime script metadata and content"
  },
  {
    "API": "gamelift:ValidateMatchmakingRuleSet",
    "EventSource": "gamelift",
    "EventName": "ValidateMatchmakingRuleSet",
    "Description": "Validates the syntax of a matchmaking rule or rule set"
  },
  {
    "API": "glacier:AbortMultipartUpload",
    "EventSource": "glacier",
    "EventName": "AbortMultipartUpload",
    "Description": "This operation aborts a multipart upload identified by the upload ID"
  },
  {
    "API": "glacier:AbortVaultLock",
    "EventSource": "glacier",
    "EventName": "AbortVaultLock",
    "Description": "This operation aborts the vault locking process if the vault lock is not in the ``Locked`` state"
  },
  {
    "API": "glacier:AddTagsToVault",
    "EventSource": "glacier",
    "EventName": "AddTagsToVault",
    "Description": "This operation adds the specified tags to a vault"
  },
  {
    "API": "glacier:CompleteMultipartUpload",
    "EventSource": "glacier",
    "EventName": "CompleteMultipartUpload",
    "Description": "You call this operation to inform Amazon S3 Glacier (Glacier) that all the archive parts have been uploaded and that Glacier can now assemble the archive from the uploaded parts"
  },
  {
    "API": "glacier:CompleteVaultLock",
    "EventSource": "glacier",
    "EventName": "CompleteVaultLock",
    "Description": "This operation completes the vault locking process by transitioning the vault lock from the ``InProgress`` state to the ``Locked`` state, which causes the vault lock policy to become unchangeable"
  },
  {
    "API": "glacier:CreateVault",
    "EventSource": "glacier",
    "EventName": "CreateVault",
    "Description": "This operation creates a new vault with the specified name"
  },
  {
    "API": "glacier:DeleteArchive",
    "EventSource": "glacier",
    "EventName": "DeleteArchive",
    "Description": "This operation deletes an archive from a vault"
  },
  {
    "API": "glacier:DeleteVault",
    "EventSource": "glacier",
    "EventName": "DeleteVault",
    "Description": "This operation deletes a vault"
  },
  {
    "API": "glacier:DeleteVaultAccessPolicy",
    "EventSource": "glacier",
    "EventName": "DeleteVaultAccessPolicy",
    "Description": "This operation deletes the access policy associated with the specified vault"
  },
  {
    "API": "glacier:DeleteVaultNotifications",
    "EventSource": "glacier",
    "EventName": "DeleteVaultNotifications",
    "Description": "This operation deletes the notification configuration set for a vault"
  },
  {
    "API": "glacier:DescribeJob",
    "EventSource": "glacier",
    "EventName": "DescribeJob",
    "Description": "This operation returns information about a job you previously initiated, including the job initiation date, the user who initiated the job, the job status code/message and the Amazon SNS topic to notify after Amazon S3 Glacier (Glacier) completes the job"
  },
  {
    "API": "glacier:DescribeVault",
    "EventSource": "glacier",
    "EventName": "DescribeVault",
    "Description": "This operation returns information about a vault, including the vault's Amazon Resource Name (ARN), the date the vault was created, the number of archives it contains, and the total size of all the archives in the vault"
  },
  {
    "API": "glacier:GeneratePresignedUrl",
    "EventSource": "glacier",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "glacier:GetDataRetrievalPolicy",
    "EventSource": "glacier",
    "EventName": "GetDataRetrievalPolicy",
    "Description": "This operation returns the current data retrieval policy for the account and region specified in the GET request"
  },
  {
    "API": "glacier:GetJobOutput",
    "EventSource": "glacier",
    "EventName": "GetJobOutput",
    "Description": "This operation downloads the output of the job you initiated using  InitiateJob"
  },
  {
    "API": "glacier:GetVaultAccessPolicy",
    "EventSource": "glacier",
    "EventName": "GetVaultAccessPolicy",
    "Description": "This operation retrieves the ``access-policy`` subresource set on the vault; for more information on setting this subresource, see `Set Vault Access Policy (PUT access-policy) <https://docs"
  },
  {
    "API": "glacier:GetVaultLock",
    "EventSource": "glacier",
    "EventName": "GetVaultLock",
    "Description": "This operation retrieves the following attributes from the ``lock-policy`` subresource set on the specified vault:"
  },
  {
    "API": "glacier:GetVaultNotifications",
    "EventSource": "glacier",
    "EventName": "GetVaultNotifications",
    "Description": "This operation retrieves the ``notification-configuration`` subresource of the specified vault"
  },
  {
    "API": "glacier:InitiateJob",
    "EventSource": "glacier",
    "EventName": "InitiateJob",
    "Description": "This operation initiates a job of the specified type, which can be a select, an archival retrieval, or a vault retrieval"
  },
  {
    "API": "glacier:InitiateMultipartUpload",
    "EventSource": "glacier",
    "EventName": "InitiateMultipartUpload",
    "Description": "This operation initiates a multipart upload"
  },
  {
    "API": "glacier:InitiateVaultLock",
    "EventSource": "glacier",
    "EventName": "InitiateVaultLock",
    "Description": "This operation initiates the vault locking process by doing the following:"
  },
  {
    "API": "glacier:ListJobs",
    "EventSource": "glacier",
    "EventName": "ListJobs",
    "Description": "This operation lists jobs for a vault, including jobs that are in-progress and jobs that have recently finished"
  },
  {
    "API": "glacier:ListMultipartUploads",
    "EventSource": "glacier",
    "EventName": "ListMultipartUploads",
    "Description": "This operation lists in-progress multipart uploads for the specified vault"
  },
  {
    "API": "glacier:ListParts",
    "EventSource": "glacier",
    "EventName": "ListParts",
    "Description": "This operation lists the parts of an archive that have been uploaded in a specific multipart upload"
  },
  {
    "API": "glacier:ListProvisionedCapacity",
    "EventSource": "glacier",
    "EventName": "ListProvisionedCapacity",
    "Description": "This operation lists the provisioned capacity units for the specified AWS account"
  },
  {
    "API": "glacier:ListTagsForVault",
    "EventSource": "glacier",
    "EventName": "ListTagsForVault",
    "Description": "This operation lists all the tags attached to a vault"
  },
  {
    "API": "glacier:ListVaults",
    "EventSource": "glacier",
    "EventName": "ListVaults",
    "Description": "This operation lists all vaults owned by the calling user's account"
  },
  {
    "API": "glacier:PurchaseProvisionedCapacity",
    "EventSource": "glacier",
    "EventName": "PurchaseProvisionedCapacity",
    "Description": "This operation purchases a provisioned capacity unit for an AWS account"
  },
  {
    "API": "glacier:RemoveTagsFromVault",
    "EventSource": "glacier",
    "EventName": "RemoveTagsFromVault",
    "Description": "This operation removes one or more tags from the set of tags attached to a vault"
  },
  {
    "API": "glacier:SetDataRetrievalPolicy",
    "EventSource": "glacier",
    "EventName": "SetDataRetrievalPolicy",
    "Description": "This operation sets and then enacts a data retrieval policy in the region specified in the PUT request"
  },
  {
    "API": "glacier:SetVaultAccessPolicy",
    "EventSource": "glacier",
    "EventName": "SetVaultAccessPolicy",
    "Description": "This operation configures an access policy for a vault and will overwrite an existing policy"
  },
  {
    "API": "glacier:SetVaultNotifications",
    "EventSource": "glacier",
    "EventName": "SetVaultNotifications",
    "Description": "This operation configures notifications that will be sent when specific events happen to a vault"
  },
  {
    "API": "glacier:UploadArchive",
    "EventSource": "glacier",
    "EventName": "UploadArchive",
    "Description": "This operation adds an archive to a vault"
  },
  {
    "API": "glacier:UploadMultipartPart",
    "EventSource": "glacier",
    "EventName": "UploadMultipartPart",
    "Description": "This operation uploads a part of an archive"
  },
  {
    "API": "globalaccelerator:AddCustomRoutingEndpoints",
    "EventSource": "globalaccelerator",
    "EventName": "AddCustomRoutingEndpoints",
    "Description": "Associate a virtual private cloud (VPC) subnet endpoint with your custom routing accelerator"
  },
  {
    "API": "globalaccelerator:AddEndpoints",
    "EventSource": "globalaccelerator",
    "EventName": "AddEndpoints",
    "Description": "Add endpoints to an endpoint group"
  },
  {
    "API": "globalaccelerator:AdvertiseByoipCidr",
    "EventSource": "globalaccelerator",
    "EventName": "AdvertiseByoipCidr",
    "Description": "Advertises an IPv4 address range that is provisioned for use with your Amazon Web Services resources through bring your own IP addresses (BYOIP)"
  },
  {
    "API": "globalaccelerator:AllowCustomRoutingTraffic",
    "EventSource": "globalaccelerator",
    "EventName": "AllowCustomRoutingTraffic",
    "Description": "Specify the Amazon EC2 instance (destination) IP addresses and ports for a VPC subnet endpoint that can receive traffic for a custom routing accelerator"
  },
  {
    "API": "globalaccelerator:CreateAccelerator",
    "EventSource": "globalaccelerator",
    "EventName": "CreateAccelerator",
    "Description": "Create an accelerator"
  },
  {
    "API": "globalaccelerator:CreateCrossAccountAttachment",
    "EventSource": "globalaccelerator",
    "EventName": "CreateCrossAccountAttachment",
    "Description": "Create a cross-account attachment in Global Accelerator"
  },
  {
    "API": "globalaccelerator:CreateCustomRoutingAccelerator",
    "EventSource": "globalaccelerator",
    "EventName": "CreateCustomRoutingAccelerator",
    "Description": "Create a custom routing accelerator"
  },
  {
    "API": "globalaccelerator:CreateCustomRoutingEndpointGroup",
    "EventSource": "globalaccelerator",
    "EventName": "CreateCustomRoutingEndpointGroup",
    "Description": "Create an endpoint group for the specified listener for a custom routing accelerator"
  },
  {
    "API": "globalaccelerator:CreateCustomRoutingListener",
    "EventSource": "globalaccelerator",
    "EventName": "CreateCustomRoutingListener",
    "Description": "Create a listener to process inbound connections from clients to a custom routing accelerator"
  },
  {
    "API": "globalaccelerator:CreateEndpointGroup",
    "EventSource": "globalaccelerator",
    "EventName": "CreateEndpointGroup",
    "Description": "Create an endpoint group for the specified listener"
  },
  {
    "API": "globalaccelerator:CreateListener",
    "EventSource": "globalaccelerator",
    "EventName": "CreateListener",
    "Description": "Create a listener to process inbound connections from clients to an accelerator"
  },
  {
    "API": "globalaccelerator:DeleteAccelerator",
    "EventSource": "globalaccelerator",
    "EventName": "DeleteAccelerator",
    "Description": "Delete an accelerator"
  },
  {
    "API": "globalaccelerator:DeleteCrossAccountAttachment",
    "EventSource": "globalaccelerator",
    "EventName": "DeleteCrossAccountAttachment",
    "Description": "Delete a cross-account attachment"
  },
  {
    "API": "globalaccelerator:DeleteCustomRoutingAccelerator",
    "EventSource": "globalaccelerator",
    "EventName": "DeleteCustomRoutingAccelerator",
    "Description": "Delete a custom routing accelerator"
  },
  {
    "API": "globalaccelerator:DeleteCustomRoutingEndpointGroup",
    "EventSource": "globalaccelerator",
    "EventName": "DeleteCustomRoutingEndpointGroup",
    "Description": "Delete an endpoint group from a listener for a custom routing accelerator"
  },
  {
    "API": "globalaccelerator:DeleteCustomRoutingListener",
    "EventSource": "globalaccelerator",
    "EventName": "DeleteCustomRoutingListener",
    "Description": "Delete a listener for a custom routing accelerator"
  },
  {
    "API": "globalaccelerator:DeleteEndpointGroup",
    "EventSource": "globalaccelerator",
    "EventName": "DeleteEndpointGroup",
    "Description": "Delete an endpoint group from a listener"
  },
  {
    "API": "globalaccelerator:DeleteListener",
    "EventSource": "globalaccelerator",
    "EventName": "DeleteListener",
    "Description": "Delete a listener from an accelerator"
  },
  {
    "API": "globalaccelerator:DenyCustomRoutingTraffic",
    "EventSource": "globalaccelerator",
    "EventName": "DenyCustomRoutingTraffic",
    "Description": "Specify the Amazon EC2 instance (destination) IP addresses and ports for a VPC subnet endpoint that cannot receive traffic for a custom routing accelerator"
  },
  {
    "API": "globalaccelerator:DeprovisionByoipCidr",
    "EventSource": "globalaccelerator",
    "EventName": "DeprovisionByoipCidr",
    "Description": "Releases the specified address range that you provisioned to use with your Amazon Web Services resources through bring your own IP addresses (BYOIP) and deletes the corresponding address pool"
  },
  {
    "API": "globalaccelerator:DescribeAccelerator",
    "EventSource": "globalaccelerator",
    "EventName": "DescribeAccelerator",
    "Description": "Describe an accelerator"
  },
  {
    "API": "globalaccelerator:DescribeAcceleratorAttributes",
    "EventSource": "globalaccelerator",
    "EventName": "DescribeAcceleratorAttributes",
    "Description": "Describe the attributes of an accelerator"
  },
  {
    "API": "globalaccelerator:DescribeCrossAccountAttachment",
    "EventSource": "globalaccelerator",
    "EventName": "DescribeCrossAccountAttachment",
    "Description": "Gets configuration information about a cross-account attachment"
  },
  {
    "API": "globalaccelerator:DescribeCustomRoutingAccelerator",
    "EventSource": "globalaccelerator",
    "EventName": "DescribeCustomRoutingAccelerator",
    "Description": "Describe a custom routing accelerator"
  },
  {
    "API": "globalaccelerator:DescribeCustomRoutingAcceleratorAttributes",
    "EventSource": "globalaccelerator",
    "EventName": "DescribeCustomRoutingAcceleratorAttributes",
    "Description": "Describe the attributes of a custom routing accelerator"
  },
  {
    "API": "globalaccelerator:DescribeCustomRoutingEndpointGroup",
    "EventSource": "globalaccelerator",
    "EventName": "DescribeCustomRoutingEndpointGroup",
    "Description": "Describe an endpoint group for a custom routing accelerator"
  },
  {
    "API": "globalaccelerator:DescribeCustomRoutingListener",
    "EventSource": "globalaccelerator",
    "EventName": "DescribeCustomRoutingListener",
    "Description": "The description of a listener for a custom routing accelerator"
  },
  {
    "API": "globalaccelerator:DescribeEndpointGroup",
    "EventSource": "globalaccelerator",
    "EventName": "DescribeEndpointGroup",
    "Description": "Describe an endpoint group"
  },
  {
    "API": "globalaccelerator:DescribeListener",
    "EventSource": "globalaccelerator",
    "EventName": "DescribeListener",
    "Description": "Describe a listener"
  },
  {
    "API": "globalaccelerator:GeneratePresignedUrl",
    "EventSource": "globalaccelerator",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "globalaccelerator:ListAccelerators",
    "EventSource": "globalaccelerator",
    "EventName": "ListAccelerators",
    "Description": "List the accelerators for an Amazon Web Services account"
  },
  {
    "API": "globalaccelerator:ListByoipCidrs",
    "EventSource": "globalaccelerator",
    "EventName": "ListByoipCidrs",
    "Description": "Lists the IP address ranges that were specified in calls to `ProvisionByoipCidr <https://docs"
  },
  {
    "API": "globalaccelerator:ListCrossAccountAttachments",
    "EventSource": "globalaccelerator",
    "EventName": "ListCrossAccountAttachments",
    "Description": "List the cross-account attachments that have been created in Global Accelerator"
  },
  {
    "API": "globalaccelerator:ListCrossAccountResourceAccounts",
    "EventSource": "globalaccelerator",
    "EventName": "ListCrossAccountResourceAccounts",
    "Description": "List the accounts that have cross-account resources"
  },
  {
    "API": "globalaccelerator:ListCrossAccountResources",
    "EventSource": "globalaccelerator",
    "EventName": "ListCrossAccountResources",
    "Description": "List the cross-account resources available to work with"
  },
  {
    "API": "globalaccelerator:ListCustomRoutingAccelerators",
    "EventSource": "globalaccelerator",
    "EventName": "ListCustomRoutingAccelerators",
    "Description": "List the custom routing accelerators for an Amazon Web Services account"
  },
  {
    "API": "globalaccelerator:ListCustomRoutingEndpointGroups",
    "EventSource": "globalaccelerator",
    "EventName": "ListCustomRoutingEndpointGroups",
    "Description": "List the endpoint groups that are associated with a listener for a custom routing accelerator"
  },
  {
    "API": "globalaccelerator:ListCustomRoutingListeners",
    "EventSource": "globalaccelerator",
    "EventName": "ListCustomRoutingListeners",
    "Description": "List the listeners for a custom routing accelerator"
  },
  {
    "API": "globalaccelerator:ListCustomRoutingPortMappings",
    "EventSource": "globalaccelerator",
    "EventName": "ListCustomRoutingPortMappings",
    "Description": "Provides a complete mapping from the public accelerator IP address and port to destination EC2 instance IP addresses and ports in the virtual public cloud (VPC) subnet endpoint for a custom routing accelerator"
  },
  {
    "API": "globalaccelerator:ListCustomRoutingPortMappingsByDestination",
    "EventSource": "globalaccelerator",
    "EventName": "ListCustomRoutingPortMappingsByDestination",
    "Description": "List the port mappings for a specific EC2 instance (destination) in a VPC subnet endpoint"
  },
  {
    "API": "globalaccelerator:ListEndpointGroups",
    "EventSource": "globalaccelerator",
    "EventName": "ListEndpointGroups",
    "Description": "List the endpoint groups that are associated with a listener"
  },
  {
    "API": "globalaccelerator:ListListeners",
    "EventSource": "globalaccelerator",
    "EventName": "ListListeners",
    "Description": "List the listeners for an accelerator"
  },
  {
    "API": "globalaccelerator:ListTagsForResource",
    "EventSource": "globalaccelerator",
    "EventName": "ListTagsForResource",
    "Description": "List all tags for an accelerator"
  },
  {
    "API": "globalaccelerator:ProvisionByoipCidr",
    "EventSource": "globalaccelerator",
    "EventName": "ProvisionByoipCidr",
    "Description": "Provisions an IP address range to use with your Amazon Web Services resources through bring your own IP addresses (BYOIP) and creates a corresponding address pool"
  },
  {
    "API": "globalaccelerator:RemoveCustomRoutingEndpoints",
    "EventSource": "globalaccelerator",
    "EventName": "RemoveCustomRoutingEndpoints",
    "Description": "Remove endpoints from a custom routing accelerator"
  },
  {
    "API": "globalaccelerator:RemoveEndpoints",
    "EventSource": "globalaccelerator",
    "EventName": "RemoveEndpoints",
    "Description": "Remove endpoints from an endpoint group"
  },
  {
    "API": "globalaccelerator:TagResource",
    "EventSource": "globalaccelerator",
    "EventName": "TagResource",
    "Description": "Add tags to an accelerator resource"
  },
  {
    "API": "globalaccelerator:UntagResource",
    "EventSource": "globalaccelerator",
    "EventName": "UntagResource",
    "Description": "Remove tags from a Global Accelerator resource"
  },
  {
    "API": "globalaccelerator:UpdateAccelerator",
    "EventSource": "globalaccelerator",
    "EventName": "UpdateAccelerator",
    "Description": "Update an accelerator to make changes, such as the following:"
  },
  {
    "API": "globalaccelerator:UpdateAcceleratorAttributes",
    "EventSource": "globalaccelerator",
    "EventName": "UpdateAcceleratorAttributes",
    "Description": "Update the attributes for an accelerator"
  },
  {
    "API": "globalaccelerator:UpdateCrossAccountAttachment",
    "EventSource": "globalaccelerator",
    "EventName": "UpdateCrossAccountAttachment",
    "Description": "Update a cross-account attachment to add or remove principals or resources"
  },
  {
    "API": "globalaccelerator:UpdateCustomRoutingAccelerator",
    "EventSource": "globalaccelerator",
    "EventName": "UpdateCustomRoutingAccelerator",
    "Description": "Update a custom routing accelerator"
  },
  {
    "API": "globalaccelerator:UpdateCustomRoutingAcceleratorAttributes",
    "EventSource": "globalaccelerator",
    "EventName": "UpdateCustomRoutingAcceleratorAttributes",
    "Description": "Update the attributes for a custom routing accelerator"
  },
  {
    "API": "globalaccelerator:UpdateCustomRoutingListener",
    "EventSource": "globalaccelerator",
    "EventName": "UpdateCustomRoutingListener",
    "Description": "Update a listener for a custom routing accelerator"
  },
  {
    "API": "globalaccelerator:UpdateEndpointGroup",
    "EventSource": "globalaccelerator",
    "EventName": "UpdateEndpointGroup",
    "Description": "Update an endpoint group"
  },
  {
    "API": "globalaccelerator:UpdateListener",
    "EventSource": "globalaccelerator",
    "EventName": "UpdateListener",
    "Description": "Update a listener"
  },
  {
    "API": "globalaccelerator:WithdrawByoipCidr",
    "EventSource": "globalaccelerator",
    "EventName": "WithdrawByoipCidr",
    "Description": "Stops advertising an address range that is provisioned as an address pool"
  },
  {
    "API": "glue:BatchCreatePartition",
    "EventSource": "glue",
    "EventName": "BatchCreatePartition",
    "Description": "Creates one or more partitions in a batch operation"
  },
  {
    "API": "glue:BatchDeleteConnection",
    "EventSource": "glue",
    "EventName": "BatchDeleteConnection",
    "Description": "Deletes a list of connection definitions from the Data Catalog"
  },
  {
    "API": "glue:BatchDeletePartition",
    "EventSource": "glue",
    "EventName": "BatchDeletePartition",
    "Description": "Deletes one or more partitions in a batch operation"
  },
  {
    "API": "glue:BatchDeleteTable",
    "EventSource": "glue",
    "EventName": "BatchDeleteTable",
    "Description": "Deletes multiple tables at once"
  },
  {
    "API": "glue:BatchDeleteTableVersion",
    "EventSource": "glue",
    "EventName": "BatchDeleteTableVersion",
    "Description": "Deletes a specified batch of versions of a table"
  },
  {
    "API": "glue:BatchGetBlueprints",
    "EventSource": "glue",
    "EventName": "BatchGetBlueprints",
    "Description": "Retrieves information about a list of blueprints"
  },
  {
    "API": "glue:BatchGetCrawlers",
    "EventSource": "glue",
    "EventName": "BatchGetCrawlers",
    "Description": "Returns a list of resource metadata for a given list of crawler names"
  },
  {
    "API": "glue:BatchGetCustomEntityTypes",
    "EventSource": "glue",
    "EventName": "BatchGetCustomEntityTypes",
    "Description": "Retrieves the details for the custom patterns specified by a list of names"
  },
  {
    "API": "glue:BatchGetDataQualityResult",
    "EventSource": "glue",
    "EventName": "BatchGetDataQualityResult",
    "Description": "Retrieves a list of data quality results for the specified result IDs"
  },
  {
    "API": "glue:BatchGetDevEndpoints",
    "EventSource": "glue",
    "EventName": "BatchGetDevEndpoints",
    "Description": "Returns a list of resource metadata for a given list of development endpoint names"
  },
  {
    "API": "glue:BatchGetJobs",
    "EventSource": "glue",
    "EventName": "BatchGetJobs",
    "Description": "Returns a list of resource metadata for a given list of job names"
  },
  {
    "API": "glue:BatchGetPartition",
    "EventSource": "glue",
    "EventName": "BatchGetPartition",
    "Description": "Retrieves partitions in a batch request"
  },
  {
    "API": "glue:BatchGetTableOptimizer",
    "EventSource": "glue",
    "EventName": "BatchGetTableOptimizer",
    "Description": "Returns the configuration for the specified table optimizers"
  },
  {
    "API": "glue:BatchGetTriggers",
    "EventSource": "glue",
    "EventName": "BatchGetTriggers",
    "Description": "Returns a list of resource metadata for a given list of trigger names"
  },
  {
    "API": "glue:BatchGetWorkflows",
    "EventSource": "glue",
    "EventName": "BatchGetWorkflows",
    "Description": "Returns a list of resource metadata for a given list of workflow names"
  },
  {
    "API": "glue:BatchStopJobRun",
    "EventSource": "glue",
    "EventName": "BatchStopJobRun",
    "Description": "Stops one or more job runs for a specified job definition"
  },
  {
    "API": "glue:BatchUpdatePartition",
    "EventSource": "glue",
    "EventName": "BatchUpdatePartition",
    "Description": "Updates one or more partitions in a batch operation"
  },
  {
    "API": "glue:CancelDataQualityRuleRecommendationRun",
    "EventSource": "glue",
    "EventName": "CancelDataQualityRuleRecommendationRun",
    "Description": "Cancels the specified recommendation run that was being used to generate rules"
  },
  {
    "API": "glue:CancelDataQualityRulesetEvaluationRun",
    "EventSource": "glue",
    "EventName": "CancelDataQualityRulesetEvaluationRun",
    "Description": "Cancels a run where a ruleset is being evaluated against a data source"
  },
  {
    "API": "glue:CancelMlTaskRun",
    "EventSource": "glue",
    "EventName": "CancelMlTaskRun",
    "Description": "Cancels (stops) a task run"
  },
  {
    "API": "glue:CancelStatement",
    "EventSource": "glue",
    "EventName": "CancelStatement",
    "Description": "Cancels the statement"
  },
  {
    "API": "glue:CheckSchemaVersionValidity",
    "EventSource": "glue",
    "EventName": "CheckSchemaVersionValidity",
    "Description": "Validates the supplied schema"
  },
  {
    "API": "glue:CreateBlueprint",
    "EventSource": "glue",
    "EventName": "CreateBlueprint",
    "Description": "Registers a blueprint with Glue"
  },
  {
    "API": "glue:CreateClassifier",
    "EventSource": "glue",
    "EventName": "CreateClassifier",
    "Description": "Creates a classifier in the user's account"
  },
  {
    "API": "glue:CreateConnection",
    "EventSource": "glue",
    "EventName": "CreateConnection",
    "Description": "Creates a connection definition in the Data Catalog"
  },
  {
    "API": "glue:CreateCrawler",
    "EventSource": "glue",
    "EventName": "CreateCrawler",
    "Description": "Creates a new crawler with specified targets, role, configuration, and optional schedule"
  },
  {
    "API": "glue:CreateCustomEntityType",
    "EventSource": "glue",
    "EventName": "CreateCustomEntityType",
    "Description": "Creates a custom pattern that is used to detect sensitive data across the columns and rows of your structured data"
  },
  {
    "API": "glue:CreateDataQualityRuleset",
    "EventSource": "glue",
    "EventName": "CreateDataQualityRuleset",
    "Description": "Creates a data quality ruleset with DQDL rules applied to a specified Glue table"
  },
  {
    "API": "glue:CreateDatabase",
    "EventSource": "glue",
    "EventName": "CreateDatabase",
    "Description": "Creates a new database in a Data Catalog"
  },
  {
    "API": "glue:CreateDevEndpoint",
    "EventSource": "glue",
    "EventName": "CreateDevEndpoint",
    "Description": "Creates a new development endpoint"
  },
  {
    "API": "glue:CreateJob",
    "EventSource": "glue",
    "EventName": "CreateJob",
    "Description": "Creates a new job definition"
  },
  {
    "API": "glue:CreateMlTransform",
    "EventSource": "glue",
    "EventName": "CreateMlTransform",
    "Description": "Creates an Glue machine learning transform"
  },
  {
    "API": "glue:CreatePartition",
    "EventSource": "glue",
    "EventName": "CreatePartition",
    "Description": "Creates a new partition"
  },
  {
    "API": "glue:CreatePartitionIndex",
    "EventSource": "glue",
    "EventName": "CreatePartitionIndex",
    "Description": "Creates a specified partition index in an existing table"
  },
  {
    "API": "glue:CreateRegistry",
    "EventSource": "glue",
    "EventName": "CreateRegistry",
    "Description": "Creates a new registry which may be used to hold a collection of schemas"
  },
  {
    "API": "glue:CreateSchema",
    "EventSource": "glue",
    "EventName": "CreateSchema",
    "Description": "Creates a new schema set and registers the schema definition"
  },
  {
    "API": "glue:CreateScript",
    "EventSource": "glue",
    "EventName": "CreateScript",
    "Description": "Transforms a directed acyclic graph (DAG) into code"
  },
  {
    "API": "glue:CreateSecurityConfiguration",
    "EventSource": "glue",
    "EventName": "CreateSecurityConfiguration",
    "Description": "Creates a new security configuration"
  },
  {
    "API": "glue:CreateSession",
    "EventSource": "glue",
    "EventName": "CreateSession",
    "Description": "Creates a new session"
  },
  {
    "API": "glue:CreateTable",
    "EventSource": "glue",
    "EventName": "CreateTable",
    "Description": "Creates a new table definition in the Data Catalog"
  },
  {
    "API": "glue:CreateTableOptimizer",
    "EventSource": "glue",
    "EventName": "CreateTableOptimizer",
    "Description": "Creates a new table optimizer for a specific function"
  },
  {
    "API": "glue:CreateTrigger",
    "EventSource": "glue",
    "EventName": "CreateTrigger",
    "Description": "Creates a new trigger"
  },
  {
    "API": "glue:CreateUsageProfile",
    "EventSource": "glue",
    "EventName": "CreateUsageProfile",
    "Description": "Creates an Glue usage profile"
  },
  {
    "API": "glue:CreateUserDefinedFunction",
    "EventSource": "glue",
    "EventName": "CreateUserDefinedFunction",
    "Description": "Creates a new function definition in the Data Catalog"
  },
  {
    "API": "glue:CreateWorkflow",
    "EventSource": "glue",
    "EventName": "CreateWorkflow",
    "Description": "Creates a new workflow"
  },
  {
    "API": "glue:DeleteBlueprint",
    "EventSource": "glue",
    "EventName": "DeleteBlueprint",
    "Description": "Deletes an existing blueprint"
  },
  {
    "API": "glue:DeleteClassifier",
    "EventSource": "glue",
    "EventName": "DeleteClassifier",
    "Description": "Removes a classifier from the Data Catalog"
  },
  {
    "API": "glue:DeleteColumnStatisticsForPartition",
    "EventSource": "glue",
    "EventName": "DeleteColumnStatisticsForPartition",
    "Description": "Delete the partition column statistics of a column"
  },
  {
    "API": "glue:DeleteColumnStatisticsForTable",
    "EventSource": "glue",
    "EventName": "DeleteColumnStatisticsForTable",
    "Description": "Retrieves table statistics of columns"
  },
  {
    "API": "glue:DeleteConnection",
    "EventSource": "glue",
    "EventName": "DeleteConnection",
    "Description": "Deletes a connection from the Data Catalog"
  },
  {
    "API": "glue:DeleteCrawler",
    "EventSource": "glue",
    "EventName": "DeleteCrawler",
    "Description": "Removes a specified crawler from the Glue Data Catalog, unless the crawler state is ``RUNNING``"
  },
  {
    "API": "glue:DeleteCustomEntityType",
    "EventSource": "glue",
    "EventName": "DeleteCustomEntityType",
    "Description": "Deletes a custom pattern by specifying its name"
  },
  {
    "API": "glue:DeleteDataQualityRuleset",
    "EventSource": "glue",
    "EventName": "DeleteDataQualityRuleset",
    "Description": "Deletes a data quality ruleset"
  },
  {
    "API": "glue:DeleteDatabase",
    "EventSource": "glue",
    "EventName": "DeleteDatabase",
    "Description": "Removes a specified database from a Data Catalog"
  },
  {
    "API": "glue:DeleteDevEndpoint",
    "EventSource": "glue",
    "EventName": "DeleteDevEndpoint",
    "Description": "Deletes a specified development endpoint"
  },
  {
    "API": "glue:DeleteJob",
    "EventSource": "glue",
    "EventName": "DeleteJob",
    "Description": "Deletes a specified job definition"
  },
  {
    "API": "glue:DeleteMlTransform",
    "EventSource": "glue",
    "EventName": "DeleteMlTransform",
    "Description": "Deletes an Glue machine learning transform"
  },
  {
    "API": "glue:DeletePartition",
    "EventSource": "glue",
    "EventName": "DeletePartition",
    "Description": "Deletes a specified partition"
  },
  {
    "API": "glue:DeletePartitionIndex",
    "EventSource": "glue",
    "EventName": "DeletePartitionIndex",
    "Description": "Deletes a specified partition index from an existing table"
  },
  {
    "API": "glue:DeleteRegistry",
    "EventSource": "glue",
    "EventName": "DeleteRegistry",
    "Description": "Delete the entire registry including schema and all of its versions"
  },
  {
    "API": "glue:DeleteResourcePolicy",
    "EventSource": "glue",
    "EventName": "DeleteResourcePolicy",
    "Description": "Deletes a specified policy"
  },
  {
    "API": "glue:DeleteSchema",
    "EventSource": "glue",
    "EventName": "DeleteSchema",
    "Description": "Deletes the entire schema set, including the schema set and all of its versions"
  },
  {
    "API": "glue:DeleteSchemaVersions",
    "EventSource": "glue",
    "EventName": "DeleteSchemaVersions",
    "Description": "Remove versions from the specified schema"
  },
  {
    "API": "glue:DeleteSecurityConfiguration",
    "EventSource": "glue",
    "EventName": "DeleteSecurityConfiguration",
    "Description": "Deletes a specified security configuration"
  },
  {
    "API": "glue:DeleteSession",
    "EventSource": "glue",
    "EventName": "DeleteSession",
    "Description": "Deletes the session"
  },
  {
    "API": "glue:DeleteTable",
    "EventSource": "glue",
    "EventName": "DeleteTable",
    "Description": "Removes a table definition from the Data Catalog"
  },
  {
    "API": "glue:DeleteTableOptimizer",
    "EventSource": "glue",
    "EventName": "DeleteTableOptimizer",
    "Description": "Deletes an optimizer and all associated metadata for a table"
  },
  {
    "API": "glue:DeleteTableVersion",
    "EventSource": "glue",
    "EventName": "DeleteTableVersion",
    "Description": "Deletes a specified version of a table"
  },
  {
    "API": "glue:DeleteTrigger",
    "EventSource": "glue",
    "EventName": "DeleteTrigger",
    "Description": "Deletes a specified trigger"
  },
  {
    "API": "glue:DeleteUsageProfile",
    "EventSource": "glue",
    "EventName": "DeleteUsageProfile",
    "Description": "Deletes the Glue specified usage profile"
  },
  {
    "API": "glue:DeleteUserDefinedFunction",
    "EventSource": "glue",
    "EventName": "DeleteUserDefinedFunction",
    "Description": "Deletes an existing function definition from the Data Catalog"
  },
  {
    "API": "glue:DeleteWorkflow",
    "EventSource": "glue",
    "EventName": "DeleteWorkflow",
    "Description": "Deletes a workflow"
  },
  {
    "API": "glue:GeneratePresignedUrl",
    "EventSource": "glue",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "glue:GetBlueprint",
    "EventSource": "glue",
    "EventName": "GetBlueprint",
    "Description": "Retrieves the details of a blueprint"
  },
  {
    "API": "glue:GetBlueprintRun",
    "EventSource": "glue",
    "EventName": "GetBlueprintRun",
    "Description": "Retrieves the details of a blueprint run"
  },
  {
    "API": "glue:GetBlueprintRuns",
    "EventSource": "glue",
    "EventName": "GetBlueprintRuns",
    "Description": "Retrieves the details of blueprint runs for a specified blueprint"
  },
  {
    "API": "glue:GetCatalogImportStatus",
    "EventSource": "glue",
    "EventName": "GetCatalogImportStatus",
    "Description": "Retrieves the status of a migration operation"
  },
  {
    "API": "glue:GetClassifier",
    "EventSource": "glue",
    "EventName": "GetClassifier",
    "Description": "Retrieve a classifier by name"
  },
  {
    "API": "glue:GetClassifiers",
    "EventSource": "glue",
    "EventName": "GetClassifiers",
    "Description": "Lists all classifier objects in the Data Catalog"
  },
  {
    "API": "glue:GetColumnStatisticsForPartition",
    "EventSource": "glue",
    "EventName": "GetColumnStatisticsForPartition",
    "Description": "Retrieves partition statistics of columns"
  },
  {
    "API": "glue:GetColumnStatisticsForTable",
    "EventSource": "glue",
    "EventName": "GetColumnStatisticsForTable",
    "Description": "Retrieves table statistics of columns"
  },
  {
    "API": "glue:GetColumnStatisticsTaskRun",
    "EventSource": "glue",
    "EventName": "GetColumnStatisticsTaskRun",
    "Description": "Get the associated metadata/information for a task run, given a task run ID"
  },
  {
    "API": "glue:GetColumnStatisticsTaskRuns",
    "EventSource": "glue",
    "EventName": "GetColumnStatisticsTaskRuns",
    "Description": "Retrieves information about all runs associated with the specified table"
  },
  {
    "API": "glue:GetConnection",
    "EventSource": "glue",
    "EventName": "GetConnection",
    "Description": "Retrieves a connection definition from the Data Catalog"
  },
  {
    "API": "glue:GetConnections",
    "EventSource": "glue",
    "EventName": "GetConnections",
    "Description": "Retrieves a list of connection definitions from the Data Catalog"
  },
  {
    "API": "glue:GetCrawler",
    "EventSource": "glue",
    "EventName": "GetCrawler",
    "Description": "Retrieves metadata for a specified crawler"
  },
  {
    "API": "glue:GetCrawlerMetrics",
    "EventSource": "glue",
    "EventName": "GetCrawlerMetrics",
    "Description": "Retrieves metrics about specified crawlers"
  },
  {
    "API": "glue:GetCrawlers",
    "EventSource": "glue",
    "EventName": "GetCrawlers",
    "Description": "Retrieves metadata for all crawlers defined in the customer account"
  },
  {
    "API": "glue:GetCustomEntityType",
    "EventSource": "glue",
    "EventName": "GetCustomEntityType",
    "Description": "Retrieves the details of a custom pattern by specifying its name"
  },
  {
    "API": "glue:GetDataCatalogEncryptionSettings",
    "EventSource": "glue",
    "EventName": "GetDataCatalogEncryptionSettings",
    "Description": "Retrieves the security configuration for a specified catalog"
  },
  {
    "API": "glue:GetDataQualityResult",
    "EventSource": "glue",
    "EventName": "GetDataQualityResult",
    "Description": "Retrieves the result of a data quality rule evaluation"
  },
  {
    "API": "glue:GetDataQualityRuleRecommendationRun",
    "EventSource": "glue",
    "EventName": "GetDataQualityRuleRecommendationRun",
    "Description": "Gets the specified recommendation run that was used to generate rules"
  },
  {
    "API": "glue:GetDataQualityRuleset",
    "EventSource": "glue",
    "EventName": "GetDataQualityRuleset",
    "Description": "Returns an existing ruleset by identifier or name"
  },
  {
    "API": "glue:GetDataQualityRulesetEvaluationRun",
    "EventSource": "glue",
    "EventName": "GetDataQualityRulesetEvaluationRun",
    "Description": "Retrieves a specific run where a ruleset is evaluated against a data source"
  },
  {
    "API": "glue:GetDatabase",
    "EventSource": "glue",
    "EventName": "GetDatabase",
    "Description": "Retrieves the definition of a specified database"
  },
  {
    "API": "glue:GetDatabases",
    "EventSource": "glue",
    "EventName": "GetDatabases",
    "Description": "Retrieves all databases defined in a given Data Catalog"
  },
  {
    "API": "glue:GetDataflowGraph",
    "EventSource": "glue",
    "EventName": "GetDataflowGraph",
    "Description": "Transforms a Python script into a directed acyclic graph (DAG)"
  },
  {
    "API": "glue:GetDevEndpoint",
    "EventSource": "glue",
    "EventName": "GetDevEndpoint",
    "Description": "Retrieves information about a specified development endpoint"
  },
  {
    "API": "glue:GetDevEndpoints",
    "EventSource": "glue",
    "EventName": "GetDevEndpoints",
    "Description": "Retrieves all the development endpoints in this Amazon Web Services account"
  },
  {
    "API": "glue:GetJob",
    "EventSource": "glue",
    "EventName": "GetJob",
    "Description": "Retrieves an existing job definition"
  },
  {
    "API": "glue:GetJobBookmark",
    "EventSource": "glue",
    "EventName": "GetJobBookmark",
    "Description": "Returns information on a job bookmark entry"
  },
  {
    "API": "glue:GetJobRun",
    "EventSource": "glue",
    "EventName": "GetJobRun",
    "Description": "Retrieves the metadata for a given job run"
  },
  {
    "API": "glue:GetJobRuns",
    "EventSource": "glue",
    "EventName": "GetJobRuns",
    "Description": "Retrieves metadata for all runs of a given job definition"
  },
  {
    "API": "glue:GetJobs",
    "EventSource": "glue",
    "EventName": "GetJobs",
    "Description": "Retrieves all current job definitions"
  },
  {
    "API": "glue:GetMapping",
    "EventSource": "glue",
    "EventName": "GetMapping",
    "Description": "Creates mappings"
  },
  {
    "API": "glue:GetMlTaskRun",
    "EventSource": "glue",
    "EventName": "GetMlTaskRun",
    "Description": "Gets details for a specific task run on a machine learning transform"
  },
  {
    "API": "glue:GetMlTaskRuns",
    "EventSource": "glue",
    "EventName": "GetMlTaskRuns",
    "Description": "Gets a list of runs for a machine learning transform"
  },
  {
    "API": "glue:GetMlTransform",
    "EventSource": "glue",
    "EventName": "GetMlTransform",
    "Description": "Gets an Glue machine learning transform artifact and all its corresponding metadata"
  },
  {
    "API": "glue:GetMlTransforms",
    "EventSource": "glue",
    "EventName": "GetMlTransforms",
    "Description": "Gets a sortable, filterable list of existing Glue machine learning transforms"
  },
  {
    "API": "glue:GetPartition",
    "EventSource": "glue",
    "EventName": "GetPartition",
    "Description": "Retrieves information about a specified partition"
  },
  {
    "API": "glue:GetPartitionIndexes",
    "EventSource": "glue",
    "EventName": "GetPartitionIndexes",
    "Description": "Retrieves the partition indexes associated with a table"
  },
  {
    "API": "glue:GetPartitions",
    "EventSource": "glue",
    "EventName": "GetPartitions",
    "Description": "Retrieves information about the partitions in a table"
  },
  {
    "API": "glue:GetPlan",
    "EventSource": "glue",
    "EventName": "GetPlan",
    "Description": "Gets code to perform a specified mapping"
  },
  {
    "API": "glue:GetRegistry",
    "EventSource": "glue",
    "EventName": "GetRegistry",
    "Description": "Describes the specified registry in detail"
  },
  {
    "API": "glue:GetResourcePolicies",
    "EventSource": "glue",
    "EventName": "GetResourcePolicies",
    "Description": "Retrieves the resource policies set on individual resources by Resource Access Manager during cross-account permission grants"
  },
  {
    "API": "glue:GetResourcePolicy",
    "EventSource": "glue",
    "EventName": "GetResourcePolicy",
    "Description": "Retrieves a specified resource policy"
  },
  {
    "API": "glue:GetSchema",
    "EventSource": "glue",
    "EventName": "GetSchema",
    "Description": "Describes the specified schema in detail"
  },
  {
    "API": "glue:GetSchemaByDefinition",
    "EventSource": "glue",
    "EventName": "GetSchemaByDefinition",
    "Description": "Retrieves a schema by the ``SchemaDefinition``"
  },
  {
    "API": "glue:GetSchemaVersion",
    "EventSource": "glue",
    "EventName": "GetSchemaVersion",
    "Description": "Get the specified schema by its unique ID assigned when a version of the schema is created or registered"
  },
  {
    "API": "glue:GetSchemaVersionsDiff",
    "EventSource": "glue",
    "EventName": "GetSchemaVersionsDiff",
    "Description": "Fetches the schema version difference in the specified difference type between two stored schema versions in the Schema Registry"
  },
  {
    "API": "glue:GetSecurityConfiguration",
    "EventSource": "glue",
    "EventName": "GetSecurityConfiguration",
    "Description": "Retrieves a specified security configuration"
  },
  {
    "API": "glue:GetSecurityConfigurations",
    "EventSource": "glue",
    "EventName": "GetSecurityConfigurations",
    "Description": "Retrieves a list of all security configurations"
  },
  {
    "API": "glue:GetSession",
    "EventSource": "glue",
    "EventName": "GetSession",
    "Description": "Retrieves the session"
  },
  {
    "API": "glue:GetStatement",
    "EventSource": "glue",
    "EventName": "GetStatement",
    "Description": "Retrieves the statement"
  },
  {
    "API": "glue:GetTable",
    "EventSource": "glue",
    "EventName": "GetTable",
    "Description": "Retrieves the ``Table`` definition in a Data Catalog for a specified table"
  },
  {
    "API": "glue:GetTableOptimizer",
    "EventSource": "glue",
    "EventName": "GetTableOptimizer",
    "Description": "Returns the configuration of all optimizers associated with a specified table"
  },
  {
    "API": "glue:GetTableVersion",
    "EventSource": "glue",
    "EventName": "GetTableVersion",
    "Description": "Retrieves a specified version of a table"
  },
  {
    "API": "glue:GetTableVersions",
    "EventSource": "glue",
    "EventName": "GetTableVersions",
    "Description": "Retrieves a list of strings that identify available versions of a specified table"
  },
  {
    "API": "glue:GetTables",
    "EventSource": "glue",
    "EventName": "GetTables",
    "Description": "Retrieves the definitions of some or all of the tables in a given ``Database``"
  },
  {
    "API": "glue:GetTags",
    "EventSource": "glue",
    "EventName": "GetTags",
    "Description": "Retrieves a list of tags associated with a resource"
  },
  {
    "API": "glue:GetTrigger",
    "EventSource": "glue",
    "EventName": "GetTrigger",
    "Description": "Retrieves the definition of a trigger"
  },
  {
    "API": "glue:GetTriggers",
    "EventSource": "glue",
    "EventName": "GetTriggers",
    "Description": "Gets all the triggers associated with a job"
  },
  {
    "API": "glue:GetUnfilteredPartitionMetadata",
    "EventSource": "glue",
    "EventName": "GetUnfilteredPartitionMetadata",
    "Description": "Retrieves partition metadata from the Data Catalog that contains unfiltered metadata"
  },
  {
    "API": "glue:GetUnfilteredPartitionsMetadata",
    "EventSource": "glue",
    "EventName": "GetUnfilteredPartitionsMetadata",
    "Description": "Retrieves partition metadata from the Data Catalog that contains unfiltered metadata"
  },
  {
    "API": "glue:GetUnfilteredTableMetadata",
    "EventSource": "glue",
    "EventName": "GetUnfilteredTableMetadata",
    "Description": "Allows a third-party analytical engine to retrieve unfiltered table metadata from the Data Catalog"
  },
  {
    "API": "glue:GetUsageProfile",
    "EventSource": "glue",
    "EventName": "GetUsageProfile",
    "Description": "Retrieves information about the specified Glue usage profile"
  },
  {
    "API": "glue:GetUserDefinedFunction",
    "EventSource": "glue",
    "EventName": "GetUserDefinedFunction",
    "Description": "Retrieves a specified function definition from the Data Catalog"
  },
  {
    "API": "glue:GetUserDefinedFunctions",
    "EventSource": "glue",
    "EventName": "GetUserDefinedFunctions",
    "Description": "Retrieves multiple function definitions from the Data Catalog"
  },
  {
    "API": "glue:GetWorkflow",
    "EventSource": "glue",
    "EventName": "GetWorkflow",
    "Description": "Retrieves resource metadata for a workflow"
  },
  {
    "API": "glue:GetWorkflowRun",
    "EventSource": "glue",
    "EventName": "GetWorkflowRun",
    "Description": "Retrieves the metadata for a given workflow run"
  },
  {
    "API": "glue:GetWorkflowRunProperties",
    "EventSource": "glue",
    "EventName": "GetWorkflowRunProperties",
    "Description": "Retrieves the workflow run properties which were set during the run"
  },
  {
    "API": "glue:GetWorkflowRuns",
    "EventSource": "glue",
    "EventName": "GetWorkflowRuns",
    "Description": "Retrieves metadata for all runs of a given workflow"
  },
  {
    "API": "glue:ImportCatalogToGlue",
    "EventSource": "glue",
    "EventName": "ImportCatalogToGlue",
    "Description": "Imports an existing Amazon Athena Data Catalog to Glue"
  },
  {
    "API": "glue:ListBlueprints",
    "EventSource": "glue",
    "EventName": "ListBlueprints",
    "Description": "Lists all the blueprint names in an account"
  },
  {
    "API": "glue:ListColumnStatisticsTaskRuns",
    "EventSource": "glue",
    "EventName": "ListColumnStatisticsTaskRuns",
    "Description": "List all task runs for a particular account"
  },
  {
    "API": "glue:ListCrawlers",
    "EventSource": "glue",
    "EventName": "ListCrawlers",
    "Description": "Retrieves the names of all crawler resources in this Amazon Web Services account, or the resources with the specified tag"
  },
  {
    "API": "glue:ListCrawls",
    "EventSource": "glue",
    "EventName": "ListCrawls",
    "Description": "Returns all the crawls of a specified crawler"
  },
  {
    "API": "glue:ListCustomEntityTypes",
    "EventSource": "glue",
    "EventName": "ListCustomEntityTypes",
    "Description": "Lists all the custom patterns that have been created"
  },
  {
    "API": "glue:ListDataQualityResults",
    "EventSource": "glue",
    "EventName": "ListDataQualityResults",
    "Description": "Returns all data quality execution results for your account"
  },
  {
    "API": "glue:ListDataQualityRuleRecommendationRuns",
    "EventSource": "glue",
    "EventName": "ListDataQualityRuleRecommendationRuns",
    "Description": "Lists the recommendation runs meeting the filter criteria"
  },
  {
    "API": "glue:ListDataQualityRulesetEvaluationRuns",
    "EventSource": "glue",
    "EventName": "ListDataQualityRulesetEvaluationRuns",
    "Description": "Lists all the runs meeting the filter criteria, where a ruleset is evaluated against a data source"
  },
  {
    "API": "glue:ListDataQualityRulesets",
    "EventSource": "glue",
    "EventName": "ListDataQualityRulesets",
    "Description": "Returns a paginated list of rulesets for the specified list of Glue tables"
  },
  {
    "API": "glue:ListDevEndpoints",
    "EventSource": "glue",
    "EventName": "ListDevEndpoints",
    "Description": "Retrieves the names of all ``DevEndpoint`` resources in this Amazon Web Services account, or the resources with the specified tag"
  },
  {
    "API": "glue:ListJobs",
    "EventSource": "glue",
    "EventName": "ListJobs",
    "Description": "Retrieves the names of all job resources in this Amazon Web Services account, or the resources with the specified tag"
  },
  {
    "API": "glue:ListMlTransforms",
    "EventSource": "glue",
    "EventName": "ListMlTransforms",
    "Description": "Retrieves a sortable, filterable list of existing Glue machine learning transforms in this Amazon Web Services account, or the resources with the specified tag"
  },
  {
    "API": "glue:ListRegistries",
    "EventSource": "glue",
    "EventName": "ListRegistries",
    "Description": "Returns a list of registries that you have created, with minimal registry information"
  },
  {
    "API": "glue:ListSchemaVersions",
    "EventSource": "glue",
    "EventName": "ListSchemaVersions",
    "Description": "Returns a list of schema versions that you have created, with minimal information"
  },
  {
    "API": "glue:ListSchemas",
    "EventSource": "glue",
    "EventName": "ListSchemas",
    "Description": "Returns a list of schemas with minimal details"
  },
  {
    "API": "glue:ListSessions",
    "EventSource": "glue",
    "EventName": "ListSessions",
    "Description": "Retrieve a list of sessions"
  },
  {
    "API": "glue:ListStatements",
    "EventSource": "glue",
    "EventName": "ListStatements",
    "Description": "Lists statements for the session"
  },
  {
    "API": "glue:ListTableOptimizerRuns",
    "EventSource": "glue",
    "EventName": "ListTableOptimizerRuns",
    "Description": "Lists the history of previous optimizer runs for a specific table"
  },
  {
    "API": "glue:ListTriggers",
    "EventSource": "glue",
    "EventName": "ListTriggers",
    "Description": "Retrieves the names of all trigger resources in this Amazon Web Services account, or the resources with the specified tag"
  },
  {
    "API": "glue:ListUsageProfiles",
    "EventSource": "glue",
    "EventName": "ListUsageProfiles",
    "Description": "List all the Glue usage profiles"
  },
  {
    "API": "glue:ListWorkflows",
    "EventSource": "glue",
    "EventName": "ListWorkflows",
    "Description": "Lists names of workflows created in the account"
  },
  {
    "API": "glue:PutDataCatalogEncryptionSettings",
    "EventSource": "glue",
    "EventName": "PutDataCatalogEncryptionSettings",
    "Description": "Sets the security configuration for a specified catalog"
  },
  {
    "API": "glue:PutResourcePolicy",
    "EventSource": "glue",
    "EventName": "PutResourcePolicy",
    "Description": "Sets the Data Catalog resource policy for access control"
  },
  {
    "API": "glue:PutSchemaVersionMetadata",
    "EventSource": "glue",
    "EventName": "PutSchemaVersionMetadata",
    "Description": "Puts the metadata key value pair for a specified schema version ID"
  },
  {
    "API": "glue:PutWorkflowRunProperties",
    "EventSource": "glue",
    "EventName": "PutWorkflowRunProperties",
    "Description": "Puts the specified workflow run properties for the given workflow run"
  },
  {
    "API": "glue:QuerySchemaVersionMetadata",
    "EventSource": "glue",
    "EventName": "QuerySchemaVersionMetadata",
    "Description": "Queries for the schema version metadata information"
  },
  {
    "API": "glue:RegisterSchemaVersion",
    "EventSource": "glue",
    "EventName": "RegisterSchemaVersion",
    "Description": "Adds a new version to the existing schema"
  },
  {
    "API": "glue:RemoveSchemaVersionMetadata",
    "EventSource": "glue",
    "EventName": "RemoveSchemaVersionMetadata",
    "Description": "Removes a key value pair from the schema version metadata for the specified schema version ID"
  },
  {
    "API": "glue:ResetJobBookmark",
    "EventSource": "glue",
    "EventName": "ResetJobBookmark",
    "Description": "Resets a bookmark entry"
  },
  {
    "API": "glue:ResumeWorkflowRun",
    "EventSource": "glue",
    "EventName": "ResumeWorkflowRun",
    "Description": "Restarts selected nodes of a previous partially completed workflow run and resumes the workflow run"
  },
  {
    "API": "glue:RunStatement",
    "EventSource": "glue",
    "EventName": "RunStatement",
    "Description": "Executes the statement"
  },
  {
    "API": "glue:SearchTables",
    "EventSource": "glue",
    "EventName": "SearchTables",
    "Description": "Searches a set of tables based on properties in the table metadata as well as on the parent database"
  },
  {
    "API": "glue:StartBlueprintRun",
    "EventSource": "glue",
    "EventName": "StartBlueprintRun",
    "Description": "Starts a new run of the specified blueprint"
  },
  {
    "API": "glue:StartColumnStatisticsTaskRun",
    "EventSource": "glue",
    "EventName": "StartColumnStatisticsTaskRun",
    "Description": "Starts a column statistics task run, for a specified table and columns"
  },
  {
    "API": "glue:StartCrawler",
    "EventSource": "glue",
    "EventName": "StartCrawler",
    "Description": "Starts a crawl using the specified crawler, regardless of what is scheduled"
  },
  {
    "API": "glue:StartCrawlerSchedule",
    "EventSource": "glue",
    "EventName": "StartCrawlerSchedule",
    "Description": "Changes the schedule state of the specified crawler to ``SCHEDULED``, unless the crawler is already running or the schedule state is already ``SCHEDULED``"
  },
  {
    "API": "glue:StartDataQualityRuleRecommendationRun",
    "EventSource": "glue",
    "EventName": "StartDataQualityRuleRecommendationRun",
    "Description": "Starts a recommendation run that is used to generate rules when you don't know what rules to write"
  },
  {
    "API": "glue:StartDataQualityRulesetEvaluationRun",
    "EventSource": "glue",
    "EventName": "StartDataQualityRulesetEvaluationRun",
    "Description": "Once you have a ruleset definition (either recommended or your own), you call this operation to evaluate the ruleset against a data source (Glue table)"
  },
  {
    "API": "glue:StartExportLabelsTaskRun",
    "EventSource": "glue",
    "EventName": "StartExportLabelsTaskRun",
    "Description": "Begins an asynchronous task to export all labeled data for a particular transform"
  },
  {
    "API": "glue:StartImportLabelsTaskRun",
    "EventSource": "glue",
    "EventName": "StartImportLabelsTaskRun",
    "Description": "Enables you to provide additional labels (examples of truth) to be used to teach the machine learning transform and improve its quality"
  },
  {
    "API": "glue:StartJobRun",
    "EventSource": "glue",
    "EventName": "StartJobRun",
    "Description": "Starts a job run using a job definition"
  },
  {
    "API": "glue:StartMlEvaluationTaskRun",
    "EventSource": "glue",
    "EventName": "StartMlEvaluationTaskRun",
    "Description": "Starts a task to estimate the quality of the transform"
  },
  {
    "API": "glue:StartMlLabelingSetGenerationTaskRun",
    "EventSource": "glue",
    "EventName": "StartMlLabelingSetGenerationTaskRun",
    "Description": "Starts the active learning workflow for your machine learning transform to improve the transform's quality by generating label sets and adding labels"
  },
  {
    "API": "glue:StartTrigger",
    "EventSource": "glue",
    "EventName": "StartTrigger",
    "Description": "Starts an existing trigger"
  },
  {
    "API": "glue:StartWorkflowRun",
    "EventSource": "glue",
    "EventName": "StartWorkflowRun",
    "Description": "Starts a new run of the specified workflow"
  },
  {
    "API": "glue:StopColumnStatisticsTaskRun",
    "EventSource": "glue",
    "EventName": "StopColumnStatisticsTaskRun",
    "Description": "Stops a task run for the specified table"
  },
  {
    "API": "glue:StopCrawler",
    "EventSource": "glue",
    "EventName": "StopCrawler",
    "Description": "If the specified crawler is running, stops the crawl"
  },
  {
    "API": "glue:StopCrawlerSchedule",
    "EventSource": "glue",
    "EventName": "StopCrawlerSchedule",
    "Description": "Sets the schedule state of the specified crawler to ``NOT_SCHEDULED``, but does not stop the crawler if it is already running"
  },
  {
    "API": "glue:StopSession",
    "EventSource": "glue",
    "EventName": "StopSession",
    "Description": "Stops the session"
  },
  {
    "API": "glue:StopTrigger",
    "EventSource": "glue",
    "EventName": "StopTrigger",
    "Description": "Stops a specified trigger"
  },
  {
    "API": "glue:StopWorkflowRun",
    "EventSource": "glue",
    "EventName": "StopWorkflowRun",
    "Description": "Stops the execution of the specified workflow run"
  },
  {
    "API": "glue:TagResource",
    "EventSource": "glue",
    "EventName": "TagResource",
    "Description": "Adds tags to a resource"
  },
  {
    "API": "glue:UntagResource",
    "EventSource": "glue",
    "EventName": "UntagResource",
    "Description": "Removes tags from a resource"
  },
  {
    "API": "glue:UpdateBlueprint",
    "EventSource": "glue",
    "EventName": "UpdateBlueprint",
    "Description": "Updates a registered blueprint"
  },
  {
    "API": "glue:UpdateClassifier",
    "EventSource": "glue",
    "EventName": "UpdateClassifier",
    "Description": "Modifies an existing classifier (a ``GrokClassifier``, an ``XMLClassifier``, a ``JsonClassifier``, or a ``CsvClassifier``, depending on which field is present)"
  },
  {
    "API": "glue:UpdateColumnStatisticsForPartition",
    "EventSource": "glue",
    "EventName": "UpdateColumnStatisticsForPartition",
    "Description": "Creates or updates partition statistics of columns"
  },
  {
    "API": "glue:UpdateColumnStatisticsForTable",
    "EventSource": "glue",
    "EventName": "UpdateColumnStatisticsForTable",
    "Description": "Creates or updates table statistics of columns"
  },
  {
    "API": "glue:UpdateConnection",
    "EventSource": "glue",
    "EventName": "UpdateConnection",
    "Description": "Updates a connection definition in the Data Catalog"
  },
  {
    "API": "glue:UpdateCrawler",
    "EventSource": "glue",
    "EventName": "UpdateCrawler",
    "Description": "Updates a crawler"
  },
  {
    "API": "glue:UpdateCrawlerSchedule",
    "EventSource": "glue",
    "EventName": "UpdateCrawlerSchedule",
    "Description": "Updates the schedule of a crawler using a ``cron`` expression"
  },
  {
    "API": "glue:UpdateDataQualityRuleset",
    "EventSource": "glue",
    "EventName": "UpdateDataQualityRuleset",
    "Description": "Updates the specified data quality ruleset"
  },
  {
    "API": "glue:UpdateDatabase",
    "EventSource": "glue",
    "EventName": "UpdateDatabase",
    "Description": "Updates an existing database definition in a Data Catalog"
  },
  {
    "API": "glue:UpdateDevEndpoint",
    "EventSource": "glue",
    "EventName": "UpdateDevEndpoint",
    "Description": "Updates a specified development endpoint"
  },
  {
    "API": "glue:UpdateJob",
    "EventSource": "glue",
    "EventName": "UpdateJob",
    "Description": "Updates an existing job definition"
  },
  {
    "API": "glue:UpdateJobFromSourceControl",
    "EventSource": "glue",
    "EventName": "UpdateJobFromSourceControl",
    "Description": "Synchronizes a job from the source control repository"
  },
  {
    "API": "glue:UpdateMlTransform",
    "EventSource": "glue",
    "EventName": "UpdateMlTransform",
    "Description": "Updates an existing machine learning transform"
  },
  {
    "API": "glue:UpdatePartition",
    "EventSource": "glue",
    "EventName": "UpdatePartition",
    "Description": "Updates a partition"
  },
  {
    "API": "glue:UpdateRegistry",
    "EventSource": "glue",
    "EventName": "UpdateRegistry",
    "Description": "Updates an existing registry which is used to hold a collection of schemas"
  },
  {
    "API": "glue:UpdateSchema",
    "EventSource": "glue",
    "EventName": "UpdateSchema",
    "Description": "Updates the description, compatibility setting, or version checkpoint for a schema set"
  },
  {
    "API": "glue:UpdateSourceControlFromJob",
    "EventSource": "glue",
    "EventName": "UpdateSourceControlFromJob",
    "Description": "Synchronizes a job to the source control repository"
  },
  {
    "API": "glue:UpdateTable",
    "EventSource": "glue",
    "EventName": "UpdateTable",
    "Description": "Updates a metadata table in the Data Catalog"
  },
  {
    "API": "glue:UpdateTableOptimizer",
    "EventSource": "glue",
    "EventName": "UpdateTableOptimizer",
    "Description": "Updates the configuration for an existing table optimizer"
  },
  {
    "API": "glue:UpdateTrigger",
    "EventSource": "glue",
    "EventName": "UpdateTrigger",
    "Description": "Updates a trigger definition"
  },
  {
    "API": "glue:UpdateUsageProfile",
    "EventSource": "glue",
    "EventName": "UpdateUsageProfile",
    "Description": "Update an Glue usage profile"
  },
  {
    "API": "glue:UpdateUserDefinedFunction",
    "EventSource": "glue",
    "EventName": "UpdateUserDefinedFunction",
    "Description": "Updates an existing function definition in the Data Catalog"
  },
  {
    "API": "glue:UpdateWorkflow",
    "EventSource": "glue",
    "EventName": "UpdateWorkflow",
    "Description": "Updates an existing workflow"
  },
  {
    "API": "grafana:AssociateLicense",
    "EventSource": "grafana",
    "EventName": "AssociateLicense",
    "Description": "Assigns a Grafana Enterprise license to a workspace"
  },
  {
    "API": "grafana:CreateWorkspace",
    "EventSource": "grafana",
    "EventName": "CreateWorkspace",
    "Description": "Creates a *workspace*"
  },
  {
    "API": "grafana:CreateWorkspaceApiKey",
    "EventSource": "grafana",
    "EventName": "CreateWorkspaceApiKey",
    "Description": "Creates a Grafana API key for the workspace"
  },
  {
    "API": "grafana:CreateWorkspaceServiceAccount",
    "EventSource": "grafana",
    "EventName": "CreateWorkspaceServiceAccount",
    "Description": "Creates a service account for the workspace"
  },
  {
    "API": "grafana:CreateWorkspaceServiceAccountToken",
    "EventSource": "grafana",
    "EventName": "CreateWorkspaceServiceAccountToken",
    "Description": "Creates a token that can be used to authenticate and authorize Grafana HTTP API operations for the given `workspace service account <https://docs"
  },
  {
    "API": "grafana:DeleteWorkspace",
    "EventSource": "grafana",
    "EventName": "DeleteWorkspace",
    "Description": "Deletes an Amazon Managed Grafana workspace"
  },
  {
    "API": "grafana:DeleteWorkspaceApiKey",
    "EventSource": "grafana",
    "EventName": "DeleteWorkspaceApiKey",
    "Description": "Deletes a Grafana API key for the workspace"
  },
  {
    "API": "grafana:DeleteWorkspaceServiceAccount",
    "EventSource": "grafana",
    "EventName": "DeleteWorkspaceServiceAccount",
    "Description": "Deletes a workspace service account from the workspace"
  },
  {
    "API": "grafana:DeleteWorkspaceServiceAccountToken",
    "EventSource": "grafana",
    "EventName": "DeleteWorkspaceServiceAccountToken",
    "Description": "Deletes a token for the workspace service account"
  },
  {
    "API": "grafana:DescribeWorkspace",
    "EventSource": "grafana",
    "EventName": "DescribeWorkspace",
    "Description": "Displays information about one Amazon Managed Grafana workspace"
  },
  {
    "API": "grafana:DescribeWorkspaceAuthentication",
    "EventSource": "grafana",
    "EventName": "DescribeWorkspaceAuthentication",
    "Description": "Displays information about the authentication methods used in one Amazon Managed Grafana workspace"
  },
  {
    "API": "grafana:DescribeWorkspaceConfiguration",
    "EventSource": "grafana",
    "EventName": "DescribeWorkspaceConfiguration",
    "Description": "Gets the current configuration string for the given workspace"
  },
  {
    "API": "grafana:DisassociateLicense",
    "EventSource": "grafana",
    "EventName": "DisassociateLicense",
    "Description": "Removes the Grafana Enterprise license from a workspace"
  },
  {
    "API": "grafana:GeneratePresignedUrl",
    "EventSource": "grafana",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "grafana:ListPermissions",
    "EventSource": "grafana",
    "EventName": "ListPermissions",
    "Description": "Lists the users and groups who have the Grafana ``Admin`` and ``Editor`` roles in this workspace"
  },
  {
    "API": "grafana:ListTagsForResource",
    "EventSource": "grafana",
    "EventName": "ListTagsForResource",
    "Description": "The ``ListTagsForResource`` operation returns the tags that are associated with the Amazon Managed Service for Grafana resource specified by the ``resourceArn``"
  },
  {
    "API": "grafana:ListVersions",
    "EventSource": "grafana",
    "EventName": "ListVersions",
    "Description": "Lists available versions of Grafana"
  },
  {
    "API": "grafana:ListWorkspaceServiceAccountTokens",
    "EventSource": "grafana",
    "EventName": "ListWorkspaceServiceAccountTokens",
    "Description": "Returns a list of tokens for a workspace service account"
  },
  {
    "API": "grafana:ListWorkspaceServiceAccounts",
    "EventSource": "grafana",
    "EventName": "ListWorkspaceServiceAccounts",
    "Description": "Returns a list of service accounts for a workspace"
  },
  {
    "API": "grafana:ListWorkspaces",
    "EventSource": "grafana",
    "EventName": "ListWorkspaces",
    "Description": "Returns a list of Amazon Managed Grafana workspaces in the account, with some information about each workspace"
  },
  {
    "API": "grafana:TagResource",
    "EventSource": "grafana",
    "EventName": "TagResource",
    "Description": "The ``TagResource`` operation associates tags with an Amazon Managed Grafana resource"
  },
  {
    "API": "grafana:UntagResource",
    "EventSource": "grafana",
    "EventName": "UntagResource",
    "Description": "The ``UntagResource`` operation removes the association of the tag with the Amazon Managed Grafana resource"
  },
  {
    "API": "grafana:UpdatePermissions",
    "EventSource": "grafana",
    "EventName": "UpdatePermissions",
    "Description": "Updates which users in a workspace have the Grafana ``Admin`` or ``Editor`` roles"
  },
  {
    "API": "grafana:UpdateWorkspace",
    "EventSource": "grafana",
    "EventName": "UpdateWorkspace",
    "Description": "Modifies an existing Amazon Managed Grafana workspace"
  },
  {
    "API": "grafana:UpdateWorkspaceAuthentication",
    "EventSource": "grafana",
    "EventName": "UpdateWorkspaceAuthentication",
    "Description": "Use this operation to define the identity provider (IdP) that this workspace authenticates users from, using SAML"
  },
  {
    "API": "grafana:UpdateWorkspaceConfiguration",
    "EventSource": "grafana",
    "EventName": "UpdateWorkspaceConfiguration",
    "Description": "Updates the configuration string for the given workspace"
  },
  {
    "API": "greengrass:AssociateRoleToGroup",
    "EventSource": "greengrass",
    "EventName": "AssociateRoleToGroup",
    "Description": "Associates a role with a group"
  },
  {
    "API": "greengrass:AssociateServiceRoleToAccount",
    "EventSource": "greengrass",
    "EventName": "AssociateServiceRoleToAccount",
    "Description": "Associates a role with your account"
  },
  {
    "API": "greengrass:CreateConnectorDefinition",
    "EventSource": "greengrass",
    "EventName": "CreateConnectorDefinition",
    "Description": "Creates a connector definition"
  },
  {
    "API": "greengrass:CreateConnectorDefinitionVersion",
    "EventSource": "greengrass",
    "EventName": "CreateConnectorDefinitionVersion",
    "Description": "Creates a version of a connector definition which has already been defined"
  },
  {
    "API": "greengrass:CreateCoreDefinition",
    "EventSource": "greengrass",
    "EventName": "CreateCoreDefinition",
    "Description": "Creates a core definition"
  },
  {
    "API": "greengrass:CreateCoreDefinitionVersion",
    "EventSource": "greengrass",
    "EventName": "CreateCoreDefinitionVersion",
    "Description": "Creates a version of a core definition that has already been defined"
  },
  {
    "API": "greengrass:CreateDeployment",
    "EventSource": "greengrass",
    "EventName": "CreateDeployment",
    "Description": "Creates a deployment"
  },
  {
    "API": "greengrass:CreateDeviceDefinition",
    "EventSource": "greengrass",
    "EventName": "CreateDeviceDefinition",
    "Description": "Creates a device definition"
  },
  {
    "API": "greengrass:CreateDeviceDefinitionVersion",
    "EventSource": "greengrass",
    "EventName": "CreateDeviceDefinitionVersion",
    "Description": "Creates a version of a device definition that has already been defined"
  },
  {
    "API": "greengrass:CreateFunctionDefinition",
    "EventSource": "greengrass",
    "EventName": "CreateFunctionDefinition",
    "Description": "Creates a Lambda function definition which contains a list of Lambda functions and their configurations to be used in a group"
  },
  {
    "API": "greengrass:CreateFunctionDefinitionVersion",
    "EventSource": "greengrass",
    "EventName": "CreateFunctionDefinitionVersion",
    "Description": "Creates a version of a Lambda function definition that has already been defined"
  },
  {
    "API": "greengrass:CreateGroup",
    "EventSource": "greengrass",
    "EventName": "CreateGroup",
    "Description": "Creates a group"
  },
  {
    "API": "greengrass:CreateGroupCertificateAuthority",
    "EventSource": "greengrass",
    "EventName": "CreateGroupCertificateAuthority",
    "Description": "Creates a CA for the group"
  },
  {
    "API": "greengrass:CreateGroupVersion",
    "EventSource": "greengrass",
    "EventName": "CreateGroupVersion",
    "Description": "Creates a version of a group which has already been defined"
  },
  {
    "API": "greengrass:CreateLoggerDefinition",
    "EventSource": "greengrass",
    "EventName": "CreateLoggerDefinition",
    "Description": "Creates a logger definition"
  },
  {
    "API": "greengrass:CreateLoggerDefinitionVersion",
    "EventSource": "greengrass",
    "EventName": "CreateLoggerDefinitionVersion",
    "Description": "Creates a version of a logger definition that has already been defined"
  },
  {
    "API": "greengrass:CreateResourceDefinition",
    "EventSource": "greengrass",
    "EventName": "CreateResourceDefinition",
    "Description": "Creates a resource definition which contains a list of resources to be used in a group"
  },
  {
    "API": "greengrass:CreateResourceDefinitionVersion",
    "EventSource": "greengrass",
    "EventName": "CreateResourceDefinitionVersion",
    "Description": "Creates a version of a resource definition that has already been defined"
  },
  {
    "API": "greengrass:CreateSoftwareUpdateJob",
    "EventSource": "greengrass",
    "EventName": "CreateSoftwareUpdateJob",
    "Description": "Creates a software update for a core or group of cores (specified as an IoT thing group"
  },
  {
    "API": "greengrass:CreateSubscriptionDefinition",
    "EventSource": "greengrass",
    "EventName": "CreateSubscriptionDefinition",
    "Description": "Creates a subscription definition"
  },
  {
    "API": "greengrass:CreateSubscriptionDefinitionVersion",
    "EventSource": "greengrass",
    "EventName": "CreateSubscriptionDefinitionVersion",
    "Description": "Creates a version of a subscription definition which has already been defined"
  },
  {
    "API": "greengrass:DeleteConnectorDefinition",
    "EventSource": "greengrass",
    "EventName": "DeleteConnectorDefinition",
    "Description": "Deletes a connector definition"
  },
  {
    "API": "greengrass:DeleteCoreDefinition",
    "EventSource": "greengrass",
    "EventName": "DeleteCoreDefinition",
    "Description": "Deletes a core definition"
  },
  {
    "API": "greengrass:DeleteDeviceDefinition",
    "EventSource": "greengrass",
    "EventName": "DeleteDeviceDefinition",
    "Description": "Deletes a device definition"
  },
  {
    "API": "greengrass:DeleteFunctionDefinition",
    "EventSource": "greengrass",
    "EventName": "DeleteFunctionDefinition",
    "Description": "Deletes a Lambda function definition"
  },
  {
    "API": "greengrass:DeleteGroup",
    "EventSource": "greengrass",
    "EventName": "DeleteGroup",
    "Description": "Deletes a group"
  },
  {
    "API": "greengrass:DeleteLoggerDefinition",
    "EventSource": "greengrass",
    "EventName": "DeleteLoggerDefinition",
    "Description": "Deletes a logger definition"
  },
  {
    "API": "greengrass:DeleteResourceDefinition",
    "EventSource": "greengrass",
    "EventName": "DeleteResourceDefinition",
    "Description": "Deletes a resource definition"
  },
  {
    "API": "greengrass:DeleteSubscriptionDefinition",
    "EventSource": "greengrass",
    "EventName": "DeleteSubscriptionDefinition",
    "Description": "Deletes a subscription definition"
  },
  {
    "API": "greengrass:DisassociateRoleFromGroup",
    "EventSource": "greengrass",
    "EventName": "DisassociateRoleFromGroup",
    "Description": "Disassociates the role from a group"
  },
  {
    "API": "greengrass:DisassociateServiceRoleFromAccount",
    "EventSource": "greengrass",
    "EventName": "DisassociateServiceRoleFromAccount",
    "Description": "Disassociates the service role from your account"
  },
  {
    "API": "greengrass:GeneratePresignedUrl",
    "EventSource": "greengrass",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "greengrass:GetAssociatedRole",
    "EventSource": "greengrass",
    "EventName": "GetAssociatedRole",
    "Description": "Retrieves the role associated with a particular group"
  },
  {
    "API": "greengrass:GetBulkDeploymentStatus",
    "EventSource": "greengrass",
    "EventName": "GetBulkDeploymentStatus",
    "Description": "Returns the status of a bulk deployment"
  },
  {
    "API": "greengrass:GetConnectivityInfo",
    "EventSource": "greengrass",
    "EventName": "GetConnectivityInfo",
    "Description": "Retrieves the connectivity information for a core"
  },
  {
    "API": "greengrass:GetConnectorDefinition",
    "EventSource": "greengrass",
    "EventName": "GetConnectorDefinition",
    "Description": "Retrieves information about a connector definition"
  },
  {
    "API": "greengrass:GetConnectorDefinitionVersion",
    "EventSource": "greengrass",
    "EventName": "GetConnectorDefinitionVersion",
    "Description": "Retrieves information about a connector definition version, including the connectors that the version contains"
  },
  {
    "API": "greengrass:GetCoreDefinition",
    "EventSource": "greengrass",
    "EventName": "GetCoreDefinition",
    "Description": "Retrieves information about a core definition version"
  },
  {
    "API": "greengrass:GetCoreDefinitionVersion",
    "EventSource": "greengrass",
    "EventName": "GetCoreDefinitionVersion",
    "Description": "Retrieves information about a core definition version"
  },
  {
    "API": "greengrass:GetDeploymentStatus",
    "EventSource": "greengrass",
    "EventName": "GetDeploymentStatus",
    "Description": "Returns the status of a deployment"
  },
  {
    "API": "greengrass:GetDeviceDefinition",
    "EventSource": "greengrass",
    "EventName": "GetDeviceDefinition",
    "Description": "Retrieves information about a device definition"
  },
  {
    "API": "greengrass:GetDeviceDefinitionVersion",
    "EventSource": "greengrass",
    "EventName": "GetDeviceDefinitionVersion",
    "Description": "Retrieves information about a device definition version"
  },
  {
    "API": "greengrass:GetFunctionDefinition",
    "EventSource": "greengrass",
    "EventName": "GetFunctionDefinition",
    "Description": "Retrieves information about a Lambda function definition, including its creation time and latest version"
  },
  {
    "API": "greengrass:GetFunctionDefinitionVersion",
    "EventSource": "greengrass",
    "EventName": "GetFunctionDefinitionVersion",
    "Description": "Retrieves information about a Lambda function definition version, including which Lambda functions are included in the version and their configurations"
  },
  {
    "API": "greengrass:GetGroup",
    "EventSource": "greengrass",
    "EventName": "GetGroup",
    "Description": "Retrieves information about a group"
  },
  {
    "API": "greengrass:GetGroupCertificateAuthority",
    "EventSource": "greengrass",
    "EventName": "GetGroupCertificateAuthority",
    "Description": "Retreives the CA associated with a group"
  },
  {
    "API": "greengrass:GetGroupCertificateConfiguration",
    "EventSource": "greengrass",
    "EventName": "GetGroupCertificateConfiguration",
    "Description": "Retrieves the current configuration for the CA used by the group"
  },
  {
    "API": "greengrass:GetGroupVersion",
    "EventSource": "greengrass",
    "EventName": "GetGroupVersion",
    "Description": "Retrieves information about a group version"
  },
  {
    "API": "greengrass:GetLoggerDefinition",
    "EventSource": "greengrass",
    "EventName": "GetLoggerDefinition",
    "Description": "Retrieves information about a logger definition"
  },
  {
    "API": "greengrass:GetLoggerDefinitionVersion",
    "EventSource": "greengrass",
    "EventName": "GetLoggerDefinitionVersion",
    "Description": "Retrieves information about a logger definition version"
  },
  {
    "API": "greengrass:GetResourceDefinition",
    "EventSource": "greengrass",
    "EventName": "GetResourceDefinition",
    "Description": "Retrieves information about a resource definition, including its creation time and latest version"
  },
  {
    "API": "greengrass:GetResourceDefinitionVersion",
    "EventSource": "greengrass",
    "EventName": "GetResourceDefinitionVersion",
    "Description": "Retrieves information about a resource definition version, including which resources are included in the version"
  },
  {
    "API": "greengrass:GetServiceRoleForAccount",
    "EventSource": "greengrass",
    "EventName": "GetServiceRoleForAccount",
    "Description": "Retrieves the service role that is attached to your account"
  },
  {
    "API": "greengrass:GetSubscriptionDefinition",
    "EventSource": "greengrass",
    "EventName": "GetSubscriptionDefinition",
    "Description": "Retrieves information about a subscription definition"
  },
  {
    "API": "greengrass:GetSubscriptionDefinitionVersion",
    "EventSource": "greengrass",
    "EventName": "GetSubscriptionDefinitionVersion",
    "Description": "Retrieves information about a subscription definition version"
  },
  {
    "API": "greengrass:GetThingRuntimeConfiguration",
    "EventSource": "greengrass",
    "EventName": "GetThingRuntimeConfiguration",
    "Description": "Get the runtime configuration of a thing"
  },
  {
    "API": "greengrass:ListBulkDeploymentDetailedReports",
    "EventSource": "greengrass",
    "EventName": "ListBulkDeploymentDetailedReports",
    "Description": "Gets a paginated list of the deployments that have been started in a bulk deployment operation, and their current deployment status"
  },
  {
    "API": "greengrass:ListBulkDeployments",
    "EventSource": "greengrass",
    "EventName": "ListBulkDeployments",
    "Description": "Returns a list of bulk deployments"
  },
  {
    "API": "greengrass:ListConnectorDefinitionVersions",
    "EventSource": "greengrass",
    "EventName": "ListConnectorDefinitionVersions",
    "Description": "Lists the versions of a connector definition, which are containers for connectors"
  },
  {
    "API": "greengrass:ListConnectorDefinitions",
    "EventSource": "greengrass",
    "EventName": "ListConnectorDefinitions",
    "Description": "Retrieves a list of connector definitions"
  },
  {
    "API": "greengrass:ListCoreDefinitionVersions",
    "EventSource": "greengrass",
    "EventName": "ListCoreDefinitionVersions",
    "Description": "Lists the versions of a core definition"
  },
  {
    "API": "greengrass:ListCoreDefinitions",
    "EventSource": "greengrass",
    "EventName": "ListCoreDefinitions",
    "Description": "Retrieves a list of core definitions"
  },
  {
    "API": "greengrass:ListDeployments",
    "EventSource": "greengrass",
    "EventName": "ListDeployments",
    "Description": "Returns a history of deployments for the group"
  },
  {
    "API": "greengrass:ListDeviceDefinitionVersions",
    "EventSource": "greengrass",
    "EventName": "ListDeviceDefinitionVersions",
    "Description": "Lists the versions of a device definition"
  },
  {
    "API": "greengrass:ListDeviceDefinitions",
    "EventSource": "greengrass",
    "EventName": "ListDeviceDefinitions",
    "Description": "Retrieves a list of device definitions"
  },
  {
    "API": "greengrass:ListFunctionDefinitionVersions",
    "EventSource": "greengrass",
    "EventName": "ListFunctionDefinitionVersions",
    "Description": "Lists the versions of a Lambda function definition"
  },
  {
    "API": "greengrass:ListFunctionDefinitions",
    "EventSource": "greengrass",
    "EventName": "ListFunctionDefinitions",
    "Description": "Retrieves a list of Lambda function definitions"
  },
  {
    "API": "greengrass:ListGroupCertificateAuthorities",
    "EventSource": "greengrass",
    "EventName": "ListGroupCertificateAuthorities",
    "Description": "Retrieves the current CAs for a group"
  },
  {
    "API": "greengrass:ListGroupVersions",
    "EventSource": "greengrass",
    "EventName": "ListGroupVersions",
    "Description": "Lists the versions of a group"
  },
  {
    "API": "greengrass:ListGroups",
    "EventSource": "greengrass",
    "EventName": "ListGroups",
    "Description": "Retrieves a list of groups"
  },
  {
    "API": "greengrass:ListLoggerDefinitionVersions",
    "EventSource": "greengrass",
    "EventName": "ListLoggerDefinitionVersions",
    "Description": "Lists the versions of a logger definition"
  },
  {
    "API": "greengrass:ListLoggerDefinitions",
    "EventSource": "greengrass",
    "EventName": "ListLoggerDefinitions",
    "Description": "Retrieves a list of logger definitions"
  },
  {
    "API": "greengrass:ListResourceDefinitionVersions",
    "EventSource": "greengrass",
    "EventName": "ListResourceDefinitionVersions",
    "Description": "Lists the versions of a resource definition"
  },
  {
    "API": "greengrass:ListResourceDefinitions",
    "EventSource": "greengrass",
    "EventName": "ListResourceDefinitions",
    "Description": "Retrieves a list of resource definitions"
  },
  {
    "API": "greengrass:ListSubscriptionDefinitionVersions",
    "EventSource": "greengrass",
    "EventName": "ListSubscriptionDefinitionVersions",
    "Description": "Lists the versions of a subscription definition"
  },
  {
    "API": "greengrass:ListSubscriptionDefinitions",
    "EventSource": "greengrass",
    "EventName": "ListSubscriptionDefinitions",
    "Description": "Retrieves a list of subscription definitions"
  },
  {
    "API": "greengrass:ListTagsForResource",
    "EventSource": "greengrass",
    "EventName": "ListTagsForResource",
    "Description": "Retrieves a list of resource tags for a resource arn"
  },
  {
    "API": "greengrass:ResetDeployments",
    "EventSource": "greengrass",
    "EventName": "ResetDeployments",
    "Description": "Resets a group's deployments"
  },
  {
    "API": "greengrass:StartBulkDeployment",
    "EventSource": "greengrass",
    "EventName": "StartBulkDeployment",
    "Description": "Deploys multiple groups in one operation"
  },
  {
    "API": "greengrass:StopBulkDeployment",
    "EventSource": "greengrass",
    "EventName": "StopBulkDeployment",
    "Description": "Stops the execution of a bulk deployment"
  },
  {
    "API": "greengrass:TagResource",
    "EventSource": "greengrass",
    "EventName": "TagResource",
    "Description": "Adds tags to a Greengrass resource"
  },
  {
    "API": "greengrass:UntagResource",
    "EventSource": "greengrass",
    "EventName": "UntagResource",
    "Description": "Remove resource tags from a Greengrass Resource"
  },
  {
    "API": "greengrass:UpdateConnectivityInfo",
    "EventSource": "greengrass",
    "EventName": "UpdateConnectivityInfo",
    "Description": "Updates the connectivity information for the core"
  },
  {
    "API": "greengrass:UpdateConnectorDefinition",
    "EventSource": "greengrass",
    "EventName": "UpdateConnectorDefinition",
    "Description": "Updates a connector definition"
  },
  {
    "API": "greengrass:UpdateCoreDefinition",
    "EventSource": "greengrass",
    "EventName": "UpdateCoreDefinition",
    "Description": "Updates a core definition"
  },
  {
    "API": "greengrass:UpdateDeviceDefinition",
    "EventSource": "greengrass",
    "EventName": "UpdateDeviceDefinition",
    "Description": "Updates a device definition"
  },
  {
    "API": "greengrass:UpdateFunctionDefinition",
    "EventSource": "greengrass",
    "EventName": "UpdateFunctionDefinition",
    "Description": "Updates a Lambda function definition"
  },
  {
    "API": "greengrass:UpdateGroup",
    "EventSource": "greengrass",
    "EventName": "UpdateGroup",
    "Description": "Updates a group"
  },
  {
    "API": "greengrass:UpdateGroupCertificateConfiguration",
    "EventSource": "greengrass",
    "EventName": "UpdateGroupCertificateConfiguration",
    "Description": "Updates the Certificate expiry time for a group"
  },
  {
    "API": "greengrass:UpdateLoggerDefinition",
    "EventSource": "greengrass",
    "EventName": "UpdateLoggerDefinition",
    "Description": "Updates a logger definition"
  },
  {
    "API": "greengrass:UpdateResourceDefinition",
    "EventSource": "greengrass",
    "EventName": "UpdateResourceDefinition",
    "Description": "Updates a resource definition"
  },
  {
    "API": "greengrass:UpdateSubscriptionDefinition",
    "EventSource": "greengrass",
    "EventName": "UpdateSubscriptionDefinition",
    "Description": "Updates a subscription definition"
  },
  {
    "API": "greengrass:UpdateThingRuntimeConfiguration",
    "EventSource": "greengrass",
    "EventName": "UpdateThingRuntimeConfiguration",
    "Description": "Updates the runtime configuration of a thing"
  },
  {
    "API": "greengrassv2:AssociateServiceRoleToAccount",
    "EventSource": "greengrassv2",
    "EventName": "AssociateServiceRoleToAccount",
    "Description": "Associates a Greengrass service role with IoT Greengrass for your Amazon Web Services account in this Amazon Web Services Region"
  },
  {
    "API": "greengrassv2:BatchAssociateClientDeviceWithCoreDevice",
    "EventSource": "greengrassv2",
    "EventName": "BatchAssociateClientDeviceWithCoreDevice",
    "Description": "Associates a list of client devices with a core device"
  },
  {
    "API": "greengrassv2:BatchDisassociateClientDeviceFromCoreDevice",
    "EventSource": "greengrassv2",
    "EventName": "BatchDisassociateClientDeviceFromCoreDevice",
    "Description": "Disassociates a list of client devices from a core device"
  },
  {
    "API": "greengrassv2:CancelDeployment",
    "EventSource": "greengrassv2",
    "EventName": "CancelDeployment",
    "Description": "Cancels a deployment"
  },
  {
    "API": "greengrassv2:CreateComponentVersion",
    "EventSource": "greengrassv2",
    "EventName": "CreateComponentVersion",
    "Description": "Creates a component"
  },
  {
    "API": "greengrassv2:CreateDeployment",
    "EventSource": "greengrassv2",
    "EventName": "CreateDeployment",
    "Description": "Creates a continuous deployment for a target, which is a Greengrass core device or group of core devices"
  },
  {
    "API": "greengrassv2:DeleteComponent",
    "EventSource": "greengrassv2",
    "EventName": "DeleteComponent",
    "Description": "Deletes a version of a component from IoT Greengrass"
  },
  {
    "API": "greengrassv2:DeleteCoreDevice",
    "EventSource": "greengrassv2",
    "EventName": "DeleteCoreDevice",
    "Description": "Deletes a Greengrass core device, which is an IoT thing"
  },
  {
    "API": "greengrassv2:DeleteDeployment",
    "EventSource": "greengrassv2",
    "EventName": "DeleteDeployment",
    "Description": "Deletes a deployment"
  },
  {
    "API": "greengrassv2:DescribeComponent",
    "EventSource": "greengrassv2",
    "EventName": "DescribeComponent",
    "Description": "Retrieves metadata for a version of a component"
  },
  {
    "API": "greengrassv2:DisassociateServiceRoleFromAccount",
    "EventSource": "greengrassv2",
    "EventName": "DisassociateServiceRoleFromAccount",
    "Description": "Disassociates the Greengrass service role from IoT Greengrass for your Amazon Web Services account in this Amazon Web Services Region"
  },
  {
    "API": "greengrassv2:GeneratePresignedUrl",
    "EventSource": "greengrassv2",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "greengrassv2:GetComponent",
    "EventSource": "greengrassv2",
    "EventName": "GetComponent",
    "Description": "Gets the recipe for a version of a component"
  },
  {
    "API": "greengrassv2:GetComponentVersionArtifact",
    "EventSource": "greengrassv2",
    "EventName": "GetComponentVersionArtifact",
    "Description": "Gets the pre-signed URL to download a public or a Lambda component artifact"
  },
  {
    "API": "greengrassv2:GetConnectivityInfo",
    "EventSource": "greengrassv2",
    "EventName": "GetConnectivityInfo",
    "Description": "Retrieves connectivity information for a Greengrass core device"
  },
  {
    "API": "greengrassv2:GetCoreDevice",
    "EventSource": "greengrassv2",
    "EventName": "GetCoreDevice",
    "Description": "Retrieves metadata for a Greengrass core device"
  },
  {
    "API": "greengrassv2:GetDeployment",
    "EventSource": "greengrassv2",
    "EventName": "GetDeployment",
    "Description": "Gets a deployment"
  },
  {
    "API": "greengrassv2:GetServiceRoleForAccount",
    "EventSource": "greengrassv2",
    "EventName": "GetServiceRoleForAccount",
    "Description": "Gets the service role associated with IoT Greengrass for your Amazon Web Services account in this Amazon Web Services Region"
  },
  {
    "API": "greengrassv2:ListClientDevicesAssociatedWithCoreDevice",
    "EventSource": "greengrassv2",
    "EventName": "ListClientDevicesAssociatedWithCoreDevice",
    "Description": "Retrieves a paginated list of client devices that are associated with a core device"
  },
  {
    "API": "greengrassv2:ListComponentVersions",
    "EventSource": "greengrassv2",
    "EventName": "ListComponentVersions",
    "Description": "Retrieves a paginated list of all versions for a component"
  },
  {
    "API": "greengrassv2:ListComponents",
    "EventSource": "greengrassv2",
    "EventName": "ListComponents",
    "Description": "Retrieves a paginated list of component summaries"
  },
  {
    "API": "greengrassv2:ListCoreDevices",
    "EventSource": "greengrassv2",
    "EventName": "ListCoreDevices",
    "Description": "Retrieves a paginated list of Greengrass core devices"
  },
  {
    "API": "greengrassv2:ListDeployments",
    "EventSource": "greengrassv2",
    "EventName": "ListDeployments",
    "Description": "Retrieves a paginated list of deployments"
  },
  {
    "API": "greengrassv2:ListEffectiveDeployments",
    "EventSource": "greengrassv2",
    "EventName": "ListEffectiveDeployments",
    "Description": "Retrieves a paginated list of deployment jobs that IoT Greengrass sends to Greengrass core devices"
  },
  {
    "API": "greengrassv2:ListInstalledComponents",
    "EventSource": "greengrassv2",
    "EventName": "ListInstalledComponents",
    "Description": "Retrieves a paginated list of the components that a Greengrass core device runs"
  },
  {
    "API": "greengrassv2:ListTagsForResource",
    "EventSource": "greengrassv2",
    "EventName": "ListTagsForResource",
    "Description": "Retrieves the list of tags for an IoT Greengrass resource"
  },
  {
    "API": "greengrassv2:ResolveComponentCandidates",
    "EventSource": "greengrassv2",
    "EventName": "ResolveComponentCandidates",
    "Description": "Retrieves a list of components that meet the component, version, and platform requirements of a deployment"
  },
  {
    "API": "greengrassv2:TagResource",
    "EventSource": "greengrassv2",
    "EventName": "TagResource",
    "Description": "Adds tags to an IoT Greengrass resource"
  },
  {
    "API": "greengrassv2:UntagResource",
    "EventSource": "greengrassv2",
    "EventName": "UntagResource",
    "Description": "Removes a tag from an IoT Greengrass resource"
  },
  {
    "API": "greengrassv2:UpdateConnectivityInfo",
    "EventSource": "greengrassv2",
    "EventName": "UpdateConnectivityInfo",
    "Description": "Updates connectivity information for a Greengrass core device"
  },
  {
    "API": "groundstation:CancelContact",
    "EventSource": "groundstation",
    "EventName": "CancelContact",
    "Description": "Cancels a contact with a specified contact ID"
  },
  {
    "API": "groundstation:CreateConfig",
    "EventSource": "groundstation",
    "EventName": "CreateConfig",
    "Description": "Creates a ``Config`` with the specified ``configData`` parameters"
  },
  {
    "API": "groundstation:CreateDataflowEndpointGroup",
    "EventSource": "groundstation",
    "EventName": "CreateDataflowEndpointGroup",
    "Description": "Creates a ``DataflowEndpoint`` group containing the specified list of ``DataflowEndpoint`` objects"
  },
  {
    "API": "groundstation:CreateEphemeris",
    "EventSource": "groundstation",
    "EventName": "CreateEphemeris",
    "Description": "Creates an Ephemeris with the specified ``EphemerisData``"
  },
  {
    "API": "groundstation:CreateMissionProfile",
    "EventSource": "groundstation",
    "EventName": "CreateMissionProfile",
    "Description": "Creates a mission profile"
  },
  {
    "API": "groundstation:DeleteConfig",
    "EventSource": "groundstation",
    "EventName": "DeleteConfig",
    "Description": "Deletes a ``Config``"
  },
  {
    "API": "groundstation:DeleteDataflowEndpointGroup",
    "EventSource": "groundstation",
    "EventName": "DeleteDataflowEndpointGroup",
    "Description": "Deletes a dataflow endpoint group"
  },
  {
    "API": "groundstation:DeleteEphemeris",
    "EventSource": "groundstation",
    "EventName": "DeleteEphemeris",
    "Description": "Deletes an ephemeris"
  },
  {
    "API": "groundstation:DeleteMissionProfile",
    "EventSource": "groundstation",
    "EventName": "DeleteMissionProfile",
    "Description": "Deletes a mission profile"
  },
  {
    "API": "groundstation:DescribeContact",
    "EventSource": "groundstation",
    "EventName": "DescribeContact",
    "Description": "Describes an existing contact"
  },
  {
    "API": "groundstation:DescribeEphemeris",
    "EventSource": "groundstation",
    "EventName": "DescribeEphemeris",
    "Description": "Describes an existing ephemeris"
  },
  {
    "API": "groundstation:GeneratePresignedUrl",
    "EventSource": "groundstation",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "groundstation:GetAgentConfiguration",
    "EventSource": "groundstation",
    "EventName": "GetAgentConfiguration",
    "Description": ""
  },
  {
    "API": "groundstation:GetConfig",
    "EventSource": "groundstation",
    "EventName": "GetConfig",
    "Description": "Returns ``Config`` information"
  },
  {
    "API": "groundstation:GetDataflowEndpointGroup",
    "EventSource": "groundstation",
    "EventName": "GetDataflowEndpointGroup",
    "Description": "Returns the dataflow endpoint group"
  },
  {
    "API": "groundstation:GetMinuteUsage",
    "EventSource": "groundstation",
    "EventName": "GetMinuteUsage",
    "Description": "Returns the number of reserved minutes used by account"
  },
  {
    "API": "groundstation:GetMissionProfile",
    "EventSource": "groundstation",
    "EventName": "GetMissionProfile",
    "Description": "Returns a mission profile"
  },
  {
    "API": "groundstation:GetSatellite",
    "EventSource": "groundstation",
    "EventName": "GetSatellite",
    "Description": "Returns a satellite"
  },
  {
    "API": "groundstation:ListConfigs",
    "EventSource": "groundstation",
    "EventName": "ListConfigs",
    "Description": "Returns a list of ``Config`` objects"
  },
  {
    "API": "groundstation:ListContacts",
    "EventSource": "groundstation",
    "EventName": "ListContacts",
    "Description": "Returns a list of contacts"
  },
  {
    "API": "groundstation:ListDataflowEndpointGroups",
    "EventSource": "groundstation",
    "EventName": "ListDataflowEndpointGroups",
    "Description": "Returns a list of ``DataflowEndpoint`` groups"
  },
  {
    "API": "groundstation:ListEphemerides",
    "EventSource": "groundstation",
    "EventName": "ListEphemerides",
    "Description": "List existing ephemerides"
  },
  {
    "API": "groundstation:ListGroundStations",
    "EventSource": "groundstation",
    "EventName": "ListGroundStations",
    "Description": "Returns a list of ground stations"
  },
  {
    "API": "groundstation:ListMissionProfiles",
    "EventSource": "groundstation",
    "EventName": "ListMissionProfiles",
    "Description": "Returns a list of mission profiles"
  },
  {
    "API": "groundstation:ListSatellites",
    "EventSource": "groundstation",
    "EventName": "ListSatellites",
    "Description": "Returns a list of satellites"
  },
  {
    "API": "groundstation:ListTagsForResource",
    "EventSource": "groundstation",
    "EventName": "ListTagsForResource",
    "Description": "Returns a list of tags for a specified resource"
  },
  {
    "API": "groundstation:RegisterAgent",
    "EventSource": "groundstation",
    "EventName": "RegisterAgent",
    "Description": ""
  },
  {
    "API": "groundstation:ReserveContact",
    "EventSource": "groundstation",
    "EventName": "ReserveContact",
    "Description": "Reserves a contact using specified parameters"
  },
  {
    "API": "groundstation:TagResource",
    "EventSource": "groundstation",
    "EventName": "TagResource",
    "Description": "Assigns a tag to a resource"
  },
  {
    "API": "groundstation:UntagResource",
    "EventSource": "groundstation",
    "EventName": "UntagResource",
    "Description": "Deassigns a resource tag"
  },
  {
    "API": "groundstation:UpdateAgentStatus",
    "EventSource": "groundstation",
    "EventName": "UpdateAgentStatus",
    "Description": ""
  },
  {
    "API": "groundstation:UpdateConfig",
    "EventSource": "groundstation",
    "EventName": "UpdateConfig",
    "Description": "Updates the ``Config`` used when scheduling contacts"
  },
  {
    "API": "groundstation:UpdateEphemeris",
    "EventSource": "groundstation",
    "EventName": "UpdateEphemeris",
    "Description": "Updates an existing ephemeris"
  },
  {
    "API": "groundstation:UpdateMissionProfile",
    "EventSource": "groundstation",
    "EventName": "UpdateMissionProfile",
    "Description": "Updates a mission profile"
  },
  {
    "API": "guardduty:AcceptAdministratorInvitation",
    "EventSource": "guardduty",
    "EventName": "AcceptAdministratorInvitation",
    "Description": "Accepts the invitation to be a member account and get monitored by a GuardDuty administrator account that sent the invitation"
  },
  {
    "API": "guardduty:AcceptInvitation",
    "EventSource": "guardduty",
    "EventName": "AcceptInvitation",
    "Description": "Accepts the invitation to be monitored by a GuardDuty administrator account"
  },
  {
    "API": "guardduty:ArchiveFindings",
    "EventSource": "guardduty",
    "EventName": "ArchiveFindings",
    "Description": "Archives GuardDuty findings that are specified by the list of finding IDs"
  },
  {
    "API": "guardduty:CreateDetector",
    "EventSource": "guardduty",
    "EventName": "CreateDetector",
    "Description": "Creates a single GuardDuty detector"
  },
  {
    "API": "guardduty:CreateFilter",
    "EventSource": "guardduty",
    "EventName": "CreateFilter",
    "Description": "Creates a filter using the specified finding criteria"
  },
  {
    "API": "guardduty:CreateIpSet",
    "EventSource": "guardduty",
    "EventName": "CreateIpSet",
    "Description": "Creates a new IPSet, which is called a trusted IP list in the console user interface"
  },
  {
    "API": "guardduty:CreateMalwareProtectionPlan",
    "EventSource": "guardduty",
    "EventName": "CreateMalwareProtectionPlan",
    "Description": "Creates a new Malware Protection plan for the protected resource"
  },
  {
    "API": "guardduty:CreateMembers",
    "EventSource": "guardduty",
    "EventName": "CreateMembers",
    "Description": "Creates member accounts of the current Amazon Web Services account by specifying a list of Amazon Web Services account IDs"
  },
  {
    "API": "guardduty:CreatePublishingDestination",
    "EventSource": "guardduty",
    "EventName": "CreatePublishingDestination",
    "Description": "Creates a publishing destination to export findings to"
  },
  {
    "API": "guardduty:CreateSampleFindings",
    "EventSource": "guardduty",
    "EventName": "CreateSampleFindings",
    "Description": "Generates sample findings of types specified by the list of finding types"
  },
  {
    "API": "guardduty:CreateThreatIntelSet",
    "EventSource": "guardduty",
    "EventName": "CreateThreatIntelSet",
    "Description": "Creates a new ThreatIntelSet"
  },
  {
    "API": "guardduty:DeclineInvitations",
    "EventSource": "guardduty",
    "EventName": "DeclineInvitations",
    "Description": "Declines invitations sent to the current member account by Amazon Web Services accounts specified by their account IDs"
  },
  {
    "API": "guardduty:DeleteDetector",
    "EventSource": "guardduty",
    "EventName": "DeleteDetector",
    "Description": "Deletes an Amazon GuardDuty detector that is specified by the detector ID"
  },
  {
    "API": "guardduty:DeleteFilter",
    "EventSource": "guardduty",
    "EventName": "DeleteFilter",
    "Description": "Deletes the filter specified by the filter name"
  },
  {
    "API": "guardduty:DeleteInvitations",
    "EventSource": "guardduty",
    "EventName": "DeleteInvitations",
    "Description": "Deletes invitations sent to the current member account by Amazon Web Services accounts specified by their account IDs"
  },
  {
    "API": "guardduty:DeleteIpSet",
    "EventSource": "guardduty",
    "EventName": "DeleteIpSet",
    "Description": "Deletes the IPSet specified by the ``ipSetId``"
  },
  {
    "API": "guardduty:DeleteMalwareProtectionPlan",
    "EventSource": "guardduty",
    "EventName": "DeleteMalwareProtectionPlan",
    "Description": "Deletes the Malware Protection plan ID associated with the Malware Protection plan resource"
  },
  {
    "API": "guardduty:DeleteMembers",
    "EventSource": "guardduty",
    "EventName": "DeleteMembers",
    "Description": "Deletes GuardDuty member accounts (to the current GuardDuty administrator account) specified by the account IDs"
  },
  {
    "API": "guardduty:DeletePublishingDestination",
    "EventSource": "guardduty",
    "EventName": "DeletePublishingDestination",
    "Description": "Deletes the publishing definition with the specified ``destinationId``"
  },
  {
    "API": "guardduty:DeleteThreatIntelSet",
    "EventSource": "guardduty",
    "EventName": "DeleteThreatIntelSet",
    "Description": "Deletes the ThreatIntelSet specified by the ThreatIntelSet ID"
  },
  {
    "API": "guardduty:DescribeMalwareScans",
    "EventSource": "guardduty",
    "EventName": "DescribeMalwareScans",
    "Description": "Returns a list of malware scans"
  },
  {
    "API": "guardduty:DescribeOrganizationConfiguration",
    "EventSource": "guardduty",
    "EventName": "DescribeOrganizationConfiguration",
    "Description": "Returns information about the account selected as the delegated administrator for GuardDuty"
  },
  {
    "API": "guardduty:DescribePublishingDestination",
    "EventSource": "guardduty",
    "EventName": "DescribePublishingDestination",
    "Description": "Returns information about the publishing destination specified by the provided ``destinationId``"
  },
  {
    "API": "guardduty:DisableOrganizationAdminAccount",
    "EventSource": "guardduty",
    "EventName": "DisableOrganizationAdminAccount",
    "Description": "Removes the existing GuardDuty delegated administrator of the organization"
  },
  {
    "API": "guardduty:DisassociateFromAdministratorAccount",
    "EventSource": "guardduty",
    "EventName": "DisassociateFromAdministratorAccount",
    "Description": "Disassociates the current GuardDuty member account from its administrator account"
  },
  {
    "API": "guardduty:DisassociateFromMasterAccount",
    "EventSource": "guardduty",
    "EventName": "DisassociateFromMasterAccount",
    "Description": "Disassociates the current GuardDuty member account from its administrator account"
  },
  {
    "API": "guardduty:DisassociateMembers",
    "EventSource": "guardduty",
    "EventName": "DisassociateMembers",
    "Description": "Disassociates GuardDuty member accounts (from the current administrator account) specified by the account IDs"
  },
  {
    "API": "guardduty:EnableOrganizationAdminAccount",
    "EventSource": "guardduty",
    "EventName": "EnableOrganizationAdminAccount",
    "Description": "Designates an Amazon Web Services account within the organization as your GuardDuty delegated administrator"
  },
  {
    "API": "guardduty:GeneratePresignedUrl",
    "EventSource": "guardduty",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "guardduty:GetAdministratorAccount",
    "EventSource": "guardduty",
    "EventName": "GetAdministratorAccount",
    "Description": "Provides the details of the GuardDuty administrator account associated with the current GuardDuty member account"
  },
  {
    "API": "guardduty:GetCoverageStatistics",
    "EventSource": "guardduty",
    "EventName": "GetCoverageStatistics",
    "Description": "Retrieves aggregated statistics for your account"
  },
  {
    "API": "guardduty:GetDetector",
    "EventSource": "guardduty",
    "EventName": "GetDetector",
    "Description": "Retrieves an Amazon GuardDuty detector specified by the detectorId"
  },
  {
    "API": "guardduty:GetFilter",
    "EventSource": "guardduty",
    "EventName": "GetFilter",
    "Description": "Returns the details of the filter specified by the filter name"
  },
  {
    "API": "guardduty:GetFindings",
    "EventSource": "guardduty",
    "EventName": "GetFindings",
    "Description": "Describes Amazon GuardDuty findings specified by finding IDs"
  },
  {
    "API": "guardduty:GetFindingsStatistics",
    "EventSource": "guardduty",
    "EventName": "GetFindingsStatistics",
    "Description": "Lists Amazon GuardDuty findings statistics for the specified detector ID"
  },
  {
    "API": "guardduty:GetInvitationsCount",
    "EventSource": "guardduty",
    "EventName": "GetInvitationsCount",
    "Description": "Returns the count of all GuardDuty membership invitations that were sent to the current member account except the currently accepted invitation"
  },
  {
    "API": "guardduty:GetIpSet",
    "EventSource": "guardduty",
    "EventName": "GetIpSet",
    "Description": "Retrieves the IPSet specified by the ``ipSetId``"
  },
  {
    "API": "guardduty:GetMalwareProtectionPlan",
    "EventSource": "guardduty",
    "EventName": "GetMalwareProtectionPlan",
    "Description": "Retrieves the Malware Protection plan details associated with a Malware Protection plan ID"
  },
  {
    "API": "guardduty:GetMalwareScanSettings",
    "EventSource": "guardduty",
    "EventName": "GetMalwareScanSettings",
    "Description": "Returns the details of the malware scan settings"
  },
  {
    "API": "guardduty:GetMasterAccount",
    "EventSource": "guardduty",
    "EventName": "GetMasterAccount",
    "Description": "Provides the details for the GuardDuty administrator account associated with the current GuardDuty member account"
  },
  {
    "API": "guardduty:GetMemberDetectors",
    "EventSource": "guardduty",
    "EventName": "GetMemberDetectors",
    "Description": "Describes which data sources are enabled for the member account's detector"
  },
  {
    "API": "guardduty:GetMembers",
    "EventSource": "guardduty",
    "EventName": "GetMembers",
    "Description": "Retrieves GuardDuty member accounts (of the current GuardDuty administrator account) specified by the account IDs"
  },
  {
    "API": "guardduty:GetOrganizationStatistics",
    "EventSource": "guardduty",
    "EventName": "GetOrganizationStatistics",
    "Description": "Retrieves how many active member accounts have each feature enabled within GuardDuty"
  },
  {
    "API": "guardduty:GetRemainingFreeTrialDays",
    "EventSource": "guardduty",
    "EventName": "GetRemainingFreeTrialDays",
    "Description": "Provides the number of days left for each data source used in the free trial period"
  },
  {
    "API": "guardduty:GetThreatIntelSet",
    "EventSource": "guardduty",
    "EventName": "GetThreatIntelSet",
    "Description": "Retrieves the ThreatIntelSet that is specified by the ThreatIntelSet ID"
  },
  {
    "API": "guardduty:GetUsageStatistics",
    "EventSource": "guardduty",
    "EventName": "GetUsageStatistics",
    "Description": "Lists Amazon GuardDuty usage statistics over the last 30 days for the specified detector ID"
  },
  {
    "API": "guardduty:InviteMembers",
    "EventSource": "guardduty",
    "EventName": "InviteMembers",
    "Description": "Invites Amazon Web Services accounts to become members of an organization administered by the Amazon Web Services account that invokes this API"
  },
  {
    "API": "guardduty:ListCoverage",
    "EventSource": "guardduty",
    "EventName": "ListCoverage",
    "Description": "Lists coverage details for your GuardDuty account"
  },
  {
    "API": "guardduty:ListDetectors",
    "EventSource": "guardduty",
    "EventName": "ListDetectors",
    "Description": "Lists detectorIds of all the existing Amazon GuardDuty detector resources"
  },
  {
    "API": "guardduty:ListFilters",
    "EventSource": "guardduty",
    "EventName": "ListFilters",
    "Description": "Returns a paginated list of the current filters"
  },
  {
    "API": "guardduty:ListFindings",
    "EventSource": "guardduty",
    "EventName": "ListFindings",
    "Description": "Lists GuardDuty findings for the specified detector ID"
  },
  {
    "API": "guardduty:ListInvitations",
    "EventSource": "guardduty",
    "EventName": "ListInvitations",
    "Description": "Lists all GuardDuty membership invitations that were sent to the current Amazon Web Services account"
  },
  {
    "API": "guardduty:ListIpSets",
    "EventSource": "guardduty",
    "EventName": "ListIpSets",
    "Description": "Lists the IPSets of the GuardDuty service specified by the detector ID"
  },
  {
    "API": "guardduty:ListMalwareProtectionPlans",
    "EventSource": "guardduty",
    "EventName": "ListMalwareProtectionPlans",
    "Description": "Lists the Malware Protection plan IDs associated with the protected resources in your Amazon Web Services account"
  },
  {
    "API": "guardduty:ListMembers",
    "EventSource": "guardduty",
    "EventName": "ListMembers",
    "Description": "Lists details about all member accounts for the current GuardDuty administrator account"
  },
  {
    "API": "guardduty:ListOrganizationAdminAccounts",
    "EventSource": "guardduty",
    "EventName": "ListOrganizationAdminAccounts",
    "Description": "Lists the accounts designated as GuardDuty delegated administrators"
  },
  {
    "API": "guardduty:ListPublishingDestinations",
    "EventSource": "guardduty",
    "EventName": "ListPublishingDestinations",
    "Description": "Returns a list of publishing destinations associated with the specified ``detectorId``"
  },
  {
    "API": "guardduty:ListTagsForResource",
    "EventSource": "guardduty",
    "EventName": "ListTagsForResource",
    "Description": "Lists tags for a resource"
  },
  {
    "API": "guardduty:ListThreatIntelSets",
    "EventSource": "guardduty",
    "EventName": "ListThreatIntelSets",
    "Description": "Lists the ThreatIntelSets of the GuardDuty service specified by the detector ID"
  },
  {
    "API": "guardduty:StartMalwareScan",
    "EventSource": "guardduty",
    "EventName": "StartMalwareScan",
    "Description": "Initiates the malware scan"
  },
  {
    "API": "guardduty:StartMonitoringMembers",
    "EventSource": "guardduty",
    "EventName": "StartMonitoringMembers",
    "Description": "Turns on GuardDuty monitoring of the specified member accounts"
  },
  {
    "API": "guardduty:StopMonitoringMembers",
    "EventSource": "guardduty",
    "EventName": "StopMonitoringMembers",
    "Description": "Stops GuardDuty monitoring for the specified member accounts"
  },
  {
    "API": "guardduty:TagResource",
    "EventSource": "guardduty",
    "EventName": "TagResource",
    "Description": "Adds tags to a resource"
  },
  {
    "API": "guardduty:UnarchiveFindings",
    "EventSource": "guardduty",
    "EventName": "UnarchiveFindings",
    "Description": "Unarchives GuardDuty findings specified by the ``findingIds``"
  },
  {
    "API": "guardduty:UntagResource",
    "EventSource": "guardduty",
    "EventName": "UntagResource",
    "Description": "Removes tags from a resource"
  },
  {
    "API": "guardduty:UpdateDetector",
    "EventSource": "guardduty",
    "EventName": "UpdateDetector",
    "Description": "Updates the GuardDuty detector specified by the detector ID"
  },
  {
    "API": "guardduty:UpdateFilter",
    "EventSource": "guardduty",
    "EventName": "UpdateFilter",
    "Description": "Updates the filter specified by the filter name"
  },
  {
    "API": "guardduty:UpdateFindingsFeedback",
    "EventSource": "guardduty",
    "EventName": "UpdateFindingsFeedback",
    "Description": "Marks the specified GuardDuty findings as useful or not useful"
  },
  {
    "API": "guardduty:UpdateIpSet",
    "EventSource": "guardduty",
    "EventName": "UpdateIpSet",
    "Description": "Updates the IPSet specified by the IPSet ID"
  },
  {
    "API": "guardduty:UpdateMalwareProtectionPlan",
    "EventSource": "guardduty",
    "EventName": "UpdateMalwareProtectionPlan",
    "Description": "Updates an existing Malware Protection plan resource"
  },
  {
    "API": "guardduty:UpdateMalwareScanSettings",
    "EventSource": "guardduty",
    "EventName": "UpdateMalwareScanSettings",
    "Description": "Updates the malware scan settings"
  },
  {
    "API": "guardduty:UpdateMemberDetectors",
    "EventSource": "guardduty",
    "EventName": "UpdateMemberDetectors",
    "Description": "Contains information on member accounts to be updated"
  },
  {
    "API": "guardduty:UpdateOrganizationConfiguration",
    "EventSource": "guardduty",
    "EventName": "UpdateOrganizationConfiguration",
    "Description": "Configures the delegated administrator account with the provided values"
  },
  {
    "API": "guardduty:UpdatePublishingDestination",
    "EventSource": "guardduty",
    "EventName": "UpdatePublishingDestination",
    "Description": "Updates information about the publishing destination specified by the ``destinationId``"
  },
  {
    "API": "guardduty:UpdateThreatIntelSet",
    "EventSource": "guardduty",
    "EventName": "UpdateThreatIntelSet",
    "Description": "Updates the ThreatIntelSet specified by the ThreatIntelSet ID"
  },
  {
    "API": "health:DescribeAffectedAccountsForOrganization",
    "EventSource": "health",
    "EventName": "DescribeAffectedAccountsForOrganization",
    "Description": "Returns a list of accounts in the organization from Organizations that are affected by the provided event"
  },
  {
    "API": "health:DescribeAffectedEntities",
    "EventSource": "health",
    "EventName": "DescribeAffectedEntities",
    "Description": "Returns a list of entities that have been affected by the specified events, based on the specified filter criteria"
  },
  {
    "API": "health:DescribeAffectedEntitiesForOrganization",
    "EventSource": "health",
    "EventName": "DescribeAffectedEntitiesForOrganization",
    "Description": "Returns a list of entities that have been affected by one or more events for one or more accounts in your organization in Organizations, based on the filter criteria"
  },
  {
    "API": "health:DescribeEntityAggregates",
    "EventSource": "health",
    "EventName": "DescribeEntityAggregates",
    "Description": "Returns the number of entities that are affected by each of the specified events"
  },
  {
    "API": "health:DescribeEntityAggregatesForOrganization",
    "EventSource": "health",
    "EventName": "DescribeEntityAggregatesForOrganization",
    "Description": "Returns a list of entity aggregates for your Organizations that are affected by each of the specified events"
  },
  {
    "API": "health:DescribeEventAggregates",
    "EventSource": "health",
    "EventName": "DescribeEventAggregates",
    "Description": "Returns the number of events of each event type (issue, scheduled change, and account notification)"
  },
  {
    "API": "health:DescribeEventDetails",
    "EventSource": "health",
    "EventName": "DescribeEventDetails",
    "Description": "Returns detailed information about one or more specified events"
  },
  {
    "API": "health:DescribeEventDetailsForOrganization",
    "EventSource": "health",
    "EventName": "DescribeEventDetailsForOrganization",
    "Description": "Returns detailed information about one or more specified events for one or more Amazon Web Services accounts in your organization"
  },
  {
    "API": "health:DescribeEventTypes",
    "EventSource": "health",
    "EventName": "DescribeEventTypes",
    "Description": "Returns the event types that meet the specified filter criteria"
  },
  {
    "API": "health:DescribeEvents",
    "EventSource": "health",
    "EventName": "DescribeEvents",
    "Description": "Returns information about events that meet the specified filter criteria"
  },
  {
    "API": "health:DescribeEventsForOrganization",
    "EventSource": "health",
    "EventName": "DescribeEventsForOrganization",
    "Description": "Returns information about events across your organization in Organizations"
  },
  {
    "API": "health:DescribeHealthServiceStatusForOrganization",
    "EventSource": "health",
    "EventName": "DescribeHealthServiceStatusForOrganization",
    "Description": "This operation provides status information on enabling or disabling Health to work with your organization"
  },
  {
    "API": "health:DisableHealthServiceAccessForOrganization",
    "EventSource": "health",
    "EventName": "DisableHealthServiceAccessForOrganization",
    "Description": "Disables Health from working with Organizations"
  },
  {
    "API": "health:EnableHealthServiceAccessForOrganization",
    "EventSource": "health",
    "EventName": "EnableHealthServiceAccessForOrganization",
    "Description": "Enables Health to work with Organizations"
  },
  {
    "API": "health:GeneratePresignedUrl",
    "EventSource": "health",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "healthlake:CreateFhirDatastore",
    "EventSource": "healthlake",
    "EventName": "CreateFhirDatastore",
    "Description": "Creates a data store that can ingest and export FHIR formatted data"
  },
  {
    "API": "healthlake:DeleteFhirDatastore",
    "EventSource": "healthlake",
    "EventName": "DeleteFhirDatastore",
    "Description": "Deletes a data store"
  },
  {
    "API": "healthlake:DescribeFhirDatastore",
    "EventSource": "healthlake",
    "EventName": "DescribeFhirDatastore",
    "Description": "Gets the properties associated with the FHIR data store, including the data store ID, data store ARN, data store name, data store status, when the data store was created, data store type version, and the data store's endpoint"
  },
  {
    "API": "healthlake:DescribeFhirExportJob",
    "EventSource": "healthlake",
    "EventName": "DescribeFhirExportJob",
    "Description": "Displays the properties of a FHIR export job, including the ID, ARN, name, and the status of the job"
  },
  {
    "API": "healthlake:DescribeFhirImportJob",
    "EventSource": "healthlake",
    "EventName": "DescribeFhirImportJob",
    "Description": "Displays the properties of a FHIR import job, including the ID, ARN, name, and the status of the job"
  },
  {
    "API": "healthlake:GeneratePresignedUrl",
    "EventSource": "healthlake",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "healthlake:ListFhirDatastores",
    "EventSource": "healthlake",
    "EventName": "ListFhirDatastores",
    "Description": "Lists all FHIR data stores that are in the user’s account, regardless of data store status"
  },
  {
    "API": "healthlake:ListFhirExportJobs",
    "EventSource": "healthlake",
    "EventName": "ListFhirExportJobs",
    "Description": "Lists all FHIR export jobs associated with an account and their statuses"
  },
  {
    "API": "healthlake:ListFhirImportJobs",
    "EventSource": "healthlake",
    "EventName": "ListFhirImportJobs",
    "Description": "Lists all FHIR import jobs associated with an account and their statuses"
  },
  {
    "API": "healthlake:ListTagsForResource",
    "EventSource": "healthlake",
    "EventName": "ListTagsForResource",
    "Description": "Returns a list of all existing tags associated with a data store"
  },
  {
    "API": "healthlake:StartFhirExportJob",
    "EventSource": "healthlake",
    "EventName": "StartFhirExportJob",
    "Description": "Begins a FHIR export job"
  },
  {
    "API": "healthlake:StartFhirImportJob",
    "EventSource": "healthlake",
    "EventName": "StartFhirImportJob",
    "Description": "Begins a FHIR Import job"
  },
  {
    "API": "healthlake:TagResource",
    "EventSource": "healthlake",
    "EventName": "TagResource",
    "Description": "Adds a user specified key and value tag to a data store"
  },
  {
    "API": "healthlake:UntagResource",
    "EventSource": "healthlake",
    "EventName": "UntagResource",
    "Description": "Removes tags from a data store"
  },
  {
    "API": "iam:AddClientIdToOpenIdConnectProvider",
    "EventSource": "iam",
    "EventName": "AddClientIdToOpenIdConnectProvider",
    "Description": "Adds a new client ID (also known as audience) to the list of client IDs already registered for the specified IAM OpenID Connect (OIDC) provider resource"
  },
  {
    "API": "iam:AddRoleToInstanceProfile",
    "EventSource": "iam",
    "EventName": "AddRoleToInstanceProfile",
    "Description": "Adds the specified IAM role to the specified instance profile"
  },
  {
    "API": "iam:AddUserToGroup",
    "EventSource": "iam",
    "EventName": "AddUserToGroup",
    "Description": "Adds the specified user to the specified group"
  },
  {
    "API": "iam:AttachGroupPolicy",
    "EventSource": "iam",
    "EventName": "AttachGroupPolicy",
    "Description": "Attaches the specified managed policy to the specified IAM group"
  },
  {
    "API": "iam:AttachRolePolicy",
    "EventSource": "iam",
    "EventName": "AttachRolePolicy",
    "Description": "Attaches the specified managed policy to the specified IAM role"
  },
  {
    "API": "iam:AttachUserPolicy",
    "EventSource": "iam",
    "EventName": "AttachUserPolicy",
    "Description": "Attaches the specified managed policy to the specified user"
  },
  {
    "API": "iam:ChangePassword",
    "EventSource": "iam",
    "EventName": "ChangePassword",
    "Description": "Changes the password of the IAM user who is calling this operation"
  },
  {
    "API": "iam:CreateAccessKey",
    "EventSource": "iam",
    "EventName": "CreateAccessKey",
    "Description": "Creates a new Amazon Web Services secret access key and corresponding Amazon Web Services access key ID for the specified user"
  },
  {
    "API": "iam:CreateAccountAlias",
    "EventSource": "iam",
    "EventName": "CreateAccountAlias",
    "Description": "Creates an alias for your Amazon Web Services account"
  },
  {
    "API": "iam:CreateGroup",
    "EventSource": "iam",
    "EventName": "CreateGroup",
    "Description": "Creates a new group"
  },
  {
    "API": "iam:CreateInstanceProfile",
    "EventSource": "iam",
    "EventName": "CreateInstanceProfile",
    "Description": "Creates a new instance profile"
  },
  {
    "API": "iam:CreateLoginProfile",
    "EventSource": "iam",
    "EventName": "CreateLoginProfile",
    "Description": "Creates a password for the specified IAM user"
  },
  {
    "API": "iam:CreateOpenIdConnectProvider",
    "EventSource": "iam",
    "EventName": "CreateOpenIdConnectProvider",
    "Description": "Creates an IAM entity to describe an identity provider (IdP) that supports `OpenID Connect (OIDC) <http://openid"
  },
  {
    "API": "iam:CreatePolicy",
    "EventSource": "iam",
    "EventName": "CreatePolicy",
    "Description": "Creates a new managed policy for your Amazon Web Services account"
  },
  {
    "API": "iam:CreatePolicyVersion",
    "EventSource": "iam",
    "EventName": "CreatePolicyVersion",
    "Description": "Creates a new version of the specified managed policy"
  },
  {
    "API": "iam:CreateRole",
    "EventSource": "iam",
    "EventName": "CreateRole",
    "Description": "Creates a new role for your Amazon Web Services account"
  },
  {
    "API": "iam:CreateSamlProvider",
    "EventSource": "iam",
    "EventName": "CreateSamlProvider",
    "Description": "Creates an IAM resource that describes an identity provider (IdP) that supports SAML 2"
  },
  {
    "API": "iam:CreateServiceLinkedRole",
    "EventSource": "iam",
    "EventName": "CreateServiceLinkedRole",
    "Description": "Creates an IAM role that is linked to a specific Amazon Web Services service"
  },
  {
    "API": "iam:CreateServiceSpecificCredential",
    "EventSource": "iam",
    "EventName": "CreateServiceSpecificCredential",
    "Description": "Generates a set of credentials consisting of a user name and password that can be used to access the service specified in the request"
  },
  {
    "API": "iam:CreateUser",
    "EventSource": "iam",
    "EventName": "CreateUser",
    "Description": "Creates a new IAM user for your Amazon Web Services account"
  },
  {
    "API": "iam:CreateVirtualMfaDevice",
    "EventSource": "iam",
    "EventName": "CreateVirtualMfaDevice",
    "Description": "Creates a new virtual MFA device for the Amazon Web Services account"
  },
  {
    "API": "iam:DeactivateMfaDevice",
    "EventSource": "iam",
    "EventName": "DeactivateMfaDevice",
    "Description": "Deactivates the specified MFA device and removes it from association with the user name for which it was originally enabled"
  },
  {
    "API": "iam:DeleteAccessKey",
    "EventSource": "iam",
    "EventName": "DeleteAccessKey",
    "Description": "Deletes the access key pair associated with the specified IAM user"
  },
  {
    "API": "iam:DeleteAccountAlias",
    "EventSource": "iam",
    "EventName": "DeleteAccountAlias",
    "Description": "Deletes the specified Amazon Web Services account alias"
  },
  {
    "API": "iam:DeleteAccountPasswordPolicy",
    "EventSource": "iam",
    "EventName": "DeleteAccountPasswordPolicy",
    "Description": "Deletes the password policy for the Amazon Web Services account"
  },
  {
    "API": "iam:DeleteGroup",
    "EventSource": "iam",
    "EventName": "DeleteGroup",
    "Description": "Deletes the specified IAM group"
  },
  {
    "API": "iam:DeleteGroupPolicy",
    "EventSource": "iam",
    "EventName": "DeleteGroupPolicy",
    "Description": "Deletes the specified inline policy that is embedded in the specified IAM group"
  },
  {
    "API": "iam:DeleteInstanceProfile",
    "EventSource": "iam",
    "EventName": "DeleteInstanceProfile",
    "Description": "Deletes the specified instance profile"
  },
  {
    "API": "iam:DeleteLoginProfile",
    "EventSource": "iam",
    "EventName": "DeleteLoginProfile",
    "Description": "Deletes the password for the specified IAM user, For more information, see `Managing passwords for IAM users <https://docs"
  },
  {
    "API": "iam:DeleteOpenIdConnectProvider",
    "EventSource": "iam",
    "EventName": "DeleteOpenIdConnectProvider",
    "Description": "Deletes an OpenID Connect identity provider (IdP) resource object in IAM"
  },
  {
    "API": "iam:DeletePolicy",
    "EventSource": "iam",
    "EventName": "DeletePolicy",
    "Description": "Deletes the specified managed policy"
  },
  {
    "API": "iam:DeletePolicyVersion",
    "EventSource": "iam",
    "EventName": "DeletePolicyVersion",
    "Description": "Deletes the specified version from the specified managed policy"
  },
  {
    "API": "iam:DeleteRole",
    "EventSource": "iam",
    "EventName": "DeleteRole",
    "Description": "Deletes the specified role"
  },
  {
    "API": "iam:DeleteRolePermissionsBoundary",
    "EventSource": "iam",
    "EventName": "DeleteRolePermissionsBoundary",
    "Description": "Deletes the permissions boundary for the specified IAM role"
  },
  {
    "API": "iam:DeleteRolePolicy",
    "EventSource": "iam",
    "EventName": "DeleteRolePolicy",
    "Description": "Deletes the specified inline policy that is embedded in the specified IAM role"
  },
  {
    "API": "iam:DeleteSamlProvider",
    "EventSource": "iam",
    "EventName": "DeleteSamlProvider",
    "Description": "Deletes a SAML provider resource in IAM"
  },
  {
    "API": "iam:DeleteServerCertificate",
    "EventSource": "iam",
    "EventName": "DeleteServerCertificate",
    "Description": "Deletes the specified server certificate"
  },
  {
    "API": "iam:DeleteServiceLinkedRole",
    "EventSource": "iam",
    "EventName": "DeleteServiceLinkedRole",
    "Description": "Submits a service-linked role deletion request and returns a ``DeletionTaskId``, which you can use to check the status of the deletion"
  },
  {
    "API": "iam:DeleteServiceSpecificCredential",
    "EventSource": "iam",
    "EventName": "DeleteServiceSpecificCredential",
    "Description": "Deletes the specified service-specific credential"
  },
  {
    "API": "iam:DeleteSigningCertificate",
    "EventSource": "iam",
    "EventName": "DeleteSigningCertificate",
    "Description": "Deletes a signing certificate associated with the specified IAM user"
  },
  {
    "API": "iam:DeleteSshPublicKey",
    "EventSource": "iam",
    "EventName": "DeleteSshPublicKey",
    "Description": "Deletes the specified SSH public key"
  },
  {
    "API": "iam:DeleteUser",
    "EventSource": "iam",
    "EventName": "DeleteUser",
    "Description": "Deletes the specified IAM user"
  },
  {
    "API": "iam:DeleteUserPermissionsBoundary",
    "EventSource": "iam",
    "EventName": "DeleteUserPermissionsBoundary",
    "Description": "Deletes the permissions boundary for the specified IAM user"
  },
  {
    "API": "iam:DeleteUserPolicy",
    "EventSource": "iam",
    "EventName": "DeleteUserPolicy",
    "Description": "Deletes the specified inline policy that is embedded in the specified IAM user"
  },
  {
    "API": "iam:DeleteVirtualMfaDevice",
    "EventSource": "iam",
    "EventName": "DeleteVirtualMfaDevice",
    "Description": "Deletes a virtual MFA device"
  },
  {
    "API": "iam:DetachGroupPolicy",
    "EventSource": "iam",
    "EventName": "DetachGroupPolicy",
    "Description": "Removes the specified managed policy from the specified IAM group"
  },
  {
    "API": "iam:DetachRolePolicy",
    "EventSource": "iam",
    "EventName": "DetachRolePolicy",
    "Description": "Removes the specified managed policy from the specified role"
  },
  {
    "API": "iam:DetachUserPolicy",
    "EventSource": "iam",
    "EventName": "DetachUserPolicy",
    "Description": "Removes the specified managed policy from the specified user"
  },
  {
    "API": "iam:EnableMfaDevice",
    "EventSource": "iam",
    "EventName": "EnableMfaDevice",
    "Description": "Enables the specified MFA device and associates it with the specified IAM user"
  },
  {
    "API": "iam:GenerateCredentialReport",
    "EventSource": "iam",
    "EventName": "GenerateCredentialReport",
    "Description": "Generates a credential report for the Amazon Web Services account"
  },
  {
    "API": "iam:GenerateOrganizationsAccessReport",
    "EventSource": "iam",
    "EventName": "GenerateOrganizationsAccessReport",
    "Description": "Generates a report for service last accessed data for Organizations"
  },
  {
    "API": "iam:GeneratePresignedUrl",
    "EventSource": "iam",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "iam:GenerateServiceLastAccessedDetails",
    "EventSource": "iam",
    "EventName": "GenerateServiceLastAccessedDetails",
    "Description": "Generates a report that includes details about when an IAM resource (user, group, role, or policy) was last used in an attempt to access Amazon Web Services services"
  },
  {
    "API": "iam:GetAccessKeyLastUsed",
    "EventSource": "iam",
    "EventName": "GetAccessKeyLastUsed",
    "Description": "Retrieves information about when the specified access key was last used"
  },
  {
    "API": "iam:GetAccountAuthorizationDetails",
    "EventSource": "iam",
    "EventName": "GetAccountAuthorizationDetails",
    "Description": "Retrieves information about all IAM users, groups, roles, and policies in your Amazon Web Services account, including their relationships to one another"
  },
  {
    "API": "iam:GetAccountPasswordPolicy",
    "EventSource": "iam",
    "EventName": "GetAccountPasswordPolicy",
    "Description": "Retrieves the password policy for the Amazon Web Services account"
  },
  {
    "API": "iam:GetAccountSummary",
    "EventSource": "iam",
    "EventName": "GetAccountSummary",
    "Description": "Retrieves information about IAM entity usage and IAM quotas in the Amazon Web Services account"
  },
  {
    "API": "iam:GetContextKeysForCustomPolicy",
    "EventSource": "iam",
    "EventName": "GetContextKeysForCustomPolicy",
    "Description": "Gets a list of all of the context keys referenced in the input policies"
  },
  {
    "API": "iam:GetContextKeysForPrincipalPolicy",
    "EventSource": "iam",
    "EventName": "GetContextKeysForPrincipalPolicy",
    "Description": "Gets a list of all of the context keys referenced in all the IAM policies that are attached to the specified IAM entity"
  },
  {
    "API": "iam:GetCredentialReport",
    "EventSource": "iam",
    "EventName": "GetCredentialReport",
    "Description": "Retrieves a credential report for the Amazon Web Services account"
  },
  {
    "API": "iam:GetGroup",
    "EventSource": "iam",
    "EventName": "GetGroup",
    "Description": "Returns a list of IAM users that are in the specified IAM group"
  },
  {
    "API": "iam:GetGroupPolicy",
    "EventSource": "iam",
    "EventName": "GetGroupPolicy",
    "Description": "Retrieves the specified inline policy document that is embedded in the specified IAM group"
  },
  {
    "API": "iam:GetInstanceProfile",
    "EventSource": "iam",
    "EventName": "GetInstanceProfile",
    "Description": "Retrieves information about the specified instance profile, including the instance profile's path, GUID, ARN, and role"
  },
  {
    "API": "iam:GetLoginProfile",
    "EventSource": "iam",
    "EventName": "GetLoginProfile",
    "Description": "Retrieves the user name for the specified IAM user"
  },
  {
    "API": "iam:GetMfaDevice",
    "EventSource": "iam",
    "EventName": "GetMfaDevice",
    "Description": "Retrieves information about an MFA device for a specified user"
  },
  {
    "API": "iam:GetOpenIdConnectProvider",
    "EventSource": "iam",
    "EventName": "GetOpenIdConnectProvider",
    "Description": "Returns information about the specified OpenID Connect (OIDC) provider resource object in IAM"
  },
  {
    "API": "iam:GetOrganizationsAccessReport",
    "EventSource": "iam",
    "EventName": "GetOrganizationsAccessReport",
    "Description": "Retrieves the service last accessed data report for Organizations that was previously generated using the ``GenerateOrganizationsAccessReport`` operation"
  },
  {
    "API": "iam:GetPolicy",
    "EventSource": "iam",
    "EventName": "GetPolicy",
    "Description": "Retrieves information about the specified managed policy, including the policy's default version and the total number of IAM users, groups, and roles to which the policy is attached"
  },
  {
    "API": "iam:GetPolicyVersion",
    "EventSource": "iam",
    "EventName": "GetPolicyVersion",
    "Description": "Retrieves information about the specified version of the specified managed policy, including the policy document"
  },
  {
    "API": "iam:GetRole",
    "EventSource": "iam",
    "EventName": "GetRole",
    "Description": "Retrieves information about the specified role, including the role's path, GUID, ARN, and the role's trust policy that grants permission to assume the role"
  },
  {
    "API": "iam:GetRolePolicy",
    "EventSource": "iam",
    "EventName": "GetRolePolicy",
    "Description": "Retrieves the specified inline policy document that is embedded with the specified IAM role"
  },
  {
    "API": "iam:GetSamlProvider",
    "EventSource": "iam",
    "EventName": "GetSamlProvider",
    "Description": "Returns the SAML provider metadocument that was uploaded when the IAM SAML provider resource object was created or updated"
  },
  {
    "API": "iam:GetServerCertificate",
    "EventSource": "iam",
    "EventName": "GetServerCertificate",
    "Description": "Retrieves information about the specified server certificate stored in IAM"
  },
  {
    "API": "iam:GetServiceLastAccessedDetails",
    "EventSource": "iam",
    "EventName": "GetServiceLastAccessedDetails",
    "Description": "Retrieves a service last accessed report that was created using the ``GenerateServiceLastAccessedDetails`` operation"
  },
  {
    "API": "iam:GetServiceLastAccessedDetailsWithEntities",
    "EventSource": "iam",
    "EventName": "GetServiceLastAccessedDetailsWithEntities",
    "Description": "After you generate a group or policy report using the ``GenerateServiceLastAccessedDetails`` operation, you can use the ``JobId`` parameter in ``GetServiceLastAccessedDetailsWithEntities``"
  },
  {
    "API": "iam:GetServiceLinkedRoleDeletionStatus",
    "EventSource": "iam",
    "EventName": "GetServiceLinkedRoleDeletionStatus",
    "Description": "Retrieves the status of your service-linked role deletion"
  },
  {
    "API": "iam:GetSshPublicKey",
    "EventSource": "iam",
    "EventName": "GetSshPublicKey",
    "Description": "Retrieves the specified SSH public key, including metadata about the key"
  },
  {
    "API": "iam:GetUser",
    "EventSource": "iam",
    "EventName": "GetUser",
    "Description": "Retrieves information about the specified IAM user, including the user's creation date, path, unique ID, and ARN"
  },
  {
    "API": "iam:GetUserPolicy",
    "EventSource": "iam",
    "EventName": "GetUserPolicy",
    "Description": "Retrieves the specified inline policy document that is embedded in the specified IAM user"
  },
  {
    "API": "iam:ListAccessKeys",
    "EventSource": "iam",
    "EventName": "ListAccessKeys",
    "Description": "Returns information about the access key IDs associated with the specified IAM user"
  },
  {
    "API": "iam:ListAccountAliases",
    "EventSource": "iam",
    "EventName": "ListAccountAliases",
    "Description": "Lists the account alias associated with the Amazon Web Services account (Note: you can have only one)"
  },
  {
    "API": "iam:ListAttachedGroupPolicies",
    "EventSource": "iam",
    "EventName": "ListAttachedGroupPolicies",
    "Description": "Lists all managed policies that are attached to the specified IAM group"
  },
  {
    "API": "iam:ListAttachedRolePolicies",
    "EventSource": "iam",
    "EventName": "ListAttachedRolePolicies",
    "Description": "Lists all managed policies that are attached to the specified IAM role"
  },
  {
    "API": "iam:ListAttachedUserPolicies",
    "EventSource": "iam",
    "EventName": "ListAttachedUserPolicies",
    "Description": "Lists all managed policies that are attached to the specified IAM user"
  },
  {
    "API": "iam:ListEntitiesForPolicy",
    "EventSource": "iam",
    "EventName": "ListEntitiesForPolicy",
    "Description": "Lists all IAM users, groups, and roles that the specified managed policy is attached to"
  },
  {
    "API": "iam:ListGroupPolicies",
    "EventSource": "iam",
    "EventName": "ListGroupPolicies",
    "Description": "Lists the names of the inline policies that are embedded in the specified IAM group"
  },
  {
    "API": "iam:ListGroups",
    "EventSource": "iam",
    "EventName": "ListGroups",
    "Description": "Lists the IAM groups that have the specified path prefix"
  },
  {
    "API": "iam:ListGroupsForUser",
    "EventSource": "iam",
    "EventName": "ListGroupsForUser",
    "Description": "Lists the IAM groups that the specified IAM user belongs to"
  },
  {
    "API": "iam:ListInstanceProfileTags",
    "EventSource": "iam",
    "EventName": "ListInstanceProfileTags",
    "Description": "Lists the tags that are attached to the specified IAM instance profile"
  },
  {
    "API": "iam:ListInstanceProfiles",
    "EventSource": "iam",
    "EventName": "ListInstanceProfiles",
    "Description": "Lists the instance profiles that have the specified path prefix"
  },
  {
    "API": "iam:ListInstanceProfilesForRole",
    "EventSource": "iam",
    "EventName": "ListInstanceProfilesForRole",
    "Description": "Lists the instance profiles that have the specified associated IAM role"
  },
  {
    "API": "iam:ListMfaDeviceTags",
    "EventSource": "iam",
    "EventName": "ListMfaDeviceTags",
    "Description": "Lists the tags that are attached to the specified IAM virtual multi-factor authentication (MFA) device"
  },
  {
    "API": "iam:ListMfaDevices",
    "EventSource": "iam",
    "EventName": "ListMfaDevices",
    "Description": "Lists the MFA devices for an IAM user"
  },
  {
    "API": "iam:ListOpenIdConnectProviderTags",
    "EventSource": "iam",
    "EventName": "ListOpenIdConnectProviderTags",
    "Description": "Lists the tags that are attached to the specified OpenID Connect (OIDC)-compatible identity provider"
  },
  {
    "API": "iam:ListOpenIdConnectProviders",
    "EventSource": "iam",
    "EventName": "ListOpenIdConnectProviders",
    "Description": "Lists information about the IAM OpenID Connect (OIDC) provider resource objects defined in the Amazon Web Services account"
  },
  {
    "API": "iam:ListPolicies",
    "EventSource": "iam",
    "EventName": "ListPolicies",
    "Description": "Lists all the managed policies that are available in your Amazon Web Services account, including your own customer-defined managed policies and all Amazon Web Services managed policies"
  },
  {
    "API": "iam:ListPoliciesGrantingServiceAccess",
    "EventSource": "iam",
    "EventName": "ListPoliciesGrantingServiceAccess",
    "Description": "Retrieves a list of policies that the IAM identity (user, group, or role) can use to access each specified service"
  },
  {
    "API": "iam:ListPolicyTags",
    "EventSource": "iam",
    "EventName": "ListPolicyTags",
    "Description": "Lists the tags that are attached to the specified IAM customer managed policy"
  },
  {
    "API": "iam:ListPolicyVersions",
    "EventSource": "iam",
    "EventName": "ListPolicyVersions",
    "Description": "Lists information about the versions of the specified managed policy, including the version that is currently set as the policy's default version"
  },
  {
    "API": "iam:ListRolePolicies",
    "EventSource": "iam",
    "EventName": "ListRolePolicies",
    "Description": "Lists the names of the inline policies that are embedded in the specified IAM role"
  },
  {
    "API": "iam:ListRoleTags",
    "EventSource": "iam",
    "EventName": "ListRoleTags",
    "Description": "Lists the tags that are attached to the specified role"
  },
  {
    "API": "iam:ListRoles",
    "EventSource": "iam",
    "EventName": "ListRoles",
    "Description": "Lists the IAM roles that have the specified path prefix"
  },
  {
    "API": "iam:ListSamlProviderTags",
    "EventSource": "iam",
    "EventName": "ListSamlProviderTags",
    "Description": "Lists the tags that are attached to the specified Security Assertion Markup Language (SAML) identity provider"
  },
  {
    "API": "iam:ListSamlProviders",
    "EventSource": "iam",
    "EventName": "ListSamlProviders",
    "Description": "Lists the SAML provider resource objects defined in IAM in the account"
  },
  {
    "API": "iam:ListServerCertificateTags",
    "EventSource": "iam",
    "EventName": "ListServerCertificateTags",
    "Description": "Lists the tags that are attached to the specified IAM server certificate"
  },
  {
    "API": "iam:ListServerCertificates",
    "EventSource": "iam",
    "EventName": "ListServerCertificates",
    "Description": "Lists the server certificates stored in IAM that have the specified path prefix"
  },
  {
    "API": "iam:ListServiceSpecificCredentials",
    "EventSource": "iam",
    "EventName": "ListServiceSpecificCredentials",
    "Description": "Returns information about the service-specific credentials associated with the specified IAM user"
  },
  {
    "API": "iam:ListSigningCertificates",
    "EventSource": "iam",
    "EventName": "ListSigningCertificates",
    "Description": "Returns information about the signing certificates associated with the specified IAM user"
  },
  {
    "API": "iam:ListSshPublicKeys",
    "EventSource": "iam",
    "EventName": "ListSshPublicKeys",
    "Description": "Returns information about the SSH public keys associated with the specified IAM user"
  },
  {
    "API": "iam:ListUserPolicies",
    "EventSource": "iam",
    "EventName": "ListUserPolicies",
    "Description": "Lists the names of the inline policies embedded in the specified IAM user"
  },
  {
    "API": "iam:ListUserTags",
    "EventSource": "iam",
    "EventName": "ListUserTags",
    "Description": "Lists the tags that are attached to the specified IAM user"
  },
  {
    "API": "iam:ListUsers",
    "EventSource": "iam",
    "EventName": "ListUsers",
    "Description": "Lists the IAM users that have the specified path prefix"
  },
  {
    "API": "iam:ListVirtualMfaDevices",
    "EventSource": "iam",
    "EventName": "ListVirtualMfaDevices",
    "Description": "Lists the virtual MFA devices defined in the Amazon Web Services account by assignment status"
  },
  {
    "API": "iam:PutGroupPolicy",
    "EventSource": "iam",
    "EventName": "PutGroupPolicy",
    "Description": "Adds or updates an inline policy document that is embedded in the specified IAM group"
  },
  {
    "API": "iam:PutRolePermissionsBoundary",
    "EventSource": "iam",
    "EventName": "PutRolePermissionsBoundary",
    "Description": "Adds or updates the policy that is specified as the IAM role's permissions boundary"
  },
  {
    "API": "iam:PutRolePolicy",
    "EventSource": "iam",
    "EventName": "PutRolePolicy",
    "Description": "Adds or updates an inline policy document that is embedded in the specified IAM role"
  },
  {
    "API": "iam:PutUserPermissionsBoundary",
    "EventSource": "iam",
    "EventName": "PutUserPermissionsBoundary",
    "Description": "Adds or updates the policy that is specified as the IAM user's permissions boundary"
  },
  {
    "API": "iam:PutUserPolicy",
    "EventSource": "iam",
    "EventName": "PutUserPolicy",
    "Description": "Adds or updates an inline policy document that is embedded in the specified IAM user"
  },
  {
    "API": "iam:RemoveClientIdFromOpenIdConnectProvider",
    "EventSource": "iam",
    "EventName": "RemoveClientIdFromOpenIdConnectProvider",
    "Description": "Removes the specified client ID (also known as audience) from the list of client IDs registered for the specified IAM OpenID Connect (OIDC) provider resource object"
  },
  {
    "API": "iam:RemoveRoleFromInstanceProfile",
    "EventSource": "iam",
    "EventName": "RemoveRoleFromInstanceProfile",
    "Description": "Removes the specified IAM role from the specified Amazon EC2 instance profile"
  },
  {
    "API": "iam:RemoveUserFromGroup",
    "EventSource": "iam",
    "EventName": "RemoveUserFromGroup",
    "Description": "Removes the specified user from the specified group"
  },
  {
    "API": "iam:ResetServiceSpecificCredential",
    "EventSource": "iam",
    "EventName": "ResetServiceSpecificCredential",
    "Description": "Resets the password for a service-specific credential"
  },
  {
    "API": "iam:ResyncMfaDevice",
    "EventSource": "iam",
    "EventName": "ResyncMfaDevice",
    "Description": "Synchronizes the specified MFA device with its IAM resource object on the Amazon Web Services servers"
  },
  {
    "API": "iam:SetDefaultPolicyVersion",
    "EventSource": "iam",
    "EventName": "SetDefaultPolicyVersion",
    "Description": "Sets the specified version of the specified policy as the policy's default (operative) version"
  },
  {
    "API": "iam:SetSecurityTokenServicePreferences",
    "EventSource": "iam",
    "EventName": "SetSecurityTokenServicePreferences",
    "Description": "Sets the specified version of the global endpoint token as the token version used for the Amazon Web Services account"
  },
  {
    "API": "iam:SimulateCustomPolicy",
    "EventSource": "iam",
    "EventName": "SimulateCustomPolicy",
    "Description": "Simulate how a set of IAM policies and optionally a resource-based policy works with a list of API operations and Amazon Web Services resources to determine the policies' effective permissions"
  },
  {
    "API": "iam:SimulatePrincipalPolicy",
    "EventSource": "iam",
    "EventName": "SimulatePrincipalPolicy",
    "Description": "Simulate how a set of IAM policies attached to an IAM entity works with a list of API operations and Amazon Web Services resources to determine the policies' effective permissions"
  },
  {
    "API": "iam:TagInstanceProfile",
    "EventSource": "iam",
    "EventName": "TagInstanceProfile",
    "Description": "Adds one or more tags to an IAM instance profile"
  },
  {
    "API": "iam:TagMfaDevice",
    "EventSource": "iam",
    "EventName": "TagMfaDevice",
    "Description": "Adds one or more tags to an IAM virtual multi-factor authentication (MFA) device"
  },
  {
    "API": "iam:TagOpenIdConnectProvider",
    "EventSource": "iam",
    "EventName": "TagOpenIdConnectProvider",
    "Description": "Adds one or more tags to an OpenID Connect (OIDC)-compatible identity provider"
  },
  {
    "API": "iam:TagPolicy",
    "EventSource": "iam",
    "EventName": "TagPolicy",
    "Description": "Adds one or more tags to an IAM customer managed policy"
  },
  {
    "API": "iam:TagRole",
    "EventSource": "iam",
    "EventName": "TagRole",
    "Description": "Adds one or more tags to an IAM role"
  },
  {
    "API": "iam:TagSamlProvider",
    "EventSource": "iam",
    "EventName": "TagSamlProvider",
    "Description": "Adds one or more tags to a Security Assertion Markup Language (SAML) identity provider"
  },
  {
    "API": "iam:TagServerCertificate",
    "EventSource": "iam",
    "EventName": "TagServerCertificate",
    "Description": "Adds one or more tags to an IAM server certificate"
  },
  {
    "API": "iam:TagUser",
    "EventSource": "iam",
    "EventName": "TagUser",
    "Description": "Adds one or more tags to an IAM user"
  },
  {
    "API": "iam:UntagInstanceProfile",
    "EventSource": "iam",
    "EventName": "UntagInstanceProfile",
    "Description": "Removes the specified tags from the IAM instance profile"
  },
  {
    "API": "iam:UntagMfaDevice",
    "EventSource": "iam",
    "EventName": "UntagMfaDevice",
    "Description": "Removes the specified tags from the IAM virtual multi-factor authentication (MFA) device"
  },
  {
    "API": "iam:UntagOpenIdConnectProvider",
    "EventSource": "iam",
    "EventName": "UntagOpenIdConnectProvider",
    "Description": "Removes the specified tags from the specified OpenID Connect (OIDC)-compatible identity provider in IAM"
  },
  {
    "API": "iam:UntagPolicy",
    "EventSource": "iam",
    "EventName": "UntagPolicy",
    "Description": "Removes the specified tags from the customer managed policy"
  },
  {
    "API": "iam:UntagRole",
    "EventSource": "iam",
    "EventName": "UntagRole",
    "Description": "Removes the specified tags from the role"
  },
  {
    "API": "iam:UntagSamlProvider",
    "EventSource": "iam",
    "EventName": "UntagSamlProvider",
    "Description": "Removes the specified tags from the specified Security Assertion Markup Language (SAML) identity provider in IAM"
  },
  {
    "API": "iam:UntagServerCertificate",
    "EventSource": "iam",
    "EventName": "UntagServerCertificate",
    "Description": "Removes the specified tags from the IAM server certificate"
  },
  {
    "API": "iam:UntagUser",
    "EventSource": "iam",
    "EventName": "UntagUser",
    "Description": "Removes the specified tags from the user"
  },
  {
    "API": "iam:UpdateAccessKey",
    "EventSource": "iam",
    "EventName": "UpdateAccessKey",
    "Description": "Changes the status of the specified access key from Active to Inactive, or vice versa"
  },
  {
    "API": "iam:UpdateAccountPasswordPolicy",
    "EventSource": "iam",
    "EventName": "UpdateAccountPasswordPolicy",
    "Description": "Updates the password policy settings for the Amazon Web Services account"
  },
  {
    "API": "iam:UpdateAssumeRolePolicy",
    "EventSource": "iam",
    "EventName": "UpdateAssumeRolePolicy",
    "Description": "Updates the policy that grants an IAM entity permission to assume a role"
  },
  {
    "API": "iam:UpdateGroup",
    "EventSource": "iam",
    "EventName": "UpdateGroup",
    "Description": "Updates the name and/or the path of the specified IAM group"
  },
  {
    "API": "iam:UpdateLoginProfile",
    "EventSource": "iam",
    "EventName": "UpdateLoginProfile",
    "Description": "Changes the password for the specified IAM user"
  },
  {
    "API": "iam:UpdateOpenIdConnectProviderThumbprint",
    "EventSource": "iam",
    "EventName": "UpdateOpenIdConnectProviderThumbprint",
    "Description": "Replaces the existing list of server certificate thumbprints associated with an OpenID Connect (OIDC) provider resource object with a new list of thumbprints"
  },
  {
    "API": "iam:UpdateRole",
    "EventSource": "iam",
    "EventName": "UpdateRole",
    "Description": "Updates the description or maximum session duration setting of a role"
  },
  {
    "API": "iam:UpdateRoleDescription",
    "EventSource": "iam",
    "EventName": "UpdateRoleDescription",
    "Description": "Use  UpdateRole instead"
  },
  {
    "API": "iam:UpdateSamlProvider",
    "EventSource": "iam",
    "EventName": "UpdateSamlProvider",
    "Description": "Updates the metadata document for an existing SAML provider resource object"
  },
  {
    "API": "iam:UpdateServerCertificate",
    "EventSource": "iam",
    "EventName": "UpdateServerCertificate",
    "Description": "Updates the name and/or the path of the specified server certificate stored in IAM"
  },
  {
    "API": "iam:UpdateServiceSpecificCredential",
    "EventSource": "iam",
    "EventName": "UpdateServiceSpecificCredential",
    "Description": "Sets the status of a service-specific credential to ``Active`` or ``Inactive``"
  },
  {
    "API": "iam:UpdateSigningCertificate",
    "EventSource": "iam",
    "EventName": "UpdateSigningCertificate",
    "Description": "Changes the status of the specified user signing certificate from active to disabled, or vice versa"
  },
  {
    "API": "iam:UpdateSshPublicKey",
    "EventSource": "iam",
    "EventName": "UpdateSshPublicKey",
    "Description": "Sets the status of an IAM user's SSH public key to active or inactive"
  },
  {
    "API": "iam:UpdateUser",
    "EventSource": "iam",
    "EventName": "UpdateUser",
    "Description": "Updates the name and/or the path of the specified IAM user"
  },
  {
    "API": "iam:UploadServerCertificate",
    "EventSource": "iam",
    "EventName": "UploadServerCertificate",
    "Description": "Uploads a server certificate entity for the Amazon Web Services account"
  },
  {
    "API": "iam:UploadSigningCertificate",
    "EventSource": "iam",
    "EventName": "UploadSigningCertificate",
    "Description": "Uploads an X"
  },
  {
    "API": "iam:UploadSshPublicKey",
    "EventSource": "iam",
    "EventName": "UploadSshPublicKey",
    "Description": "Uploads an SSH public key and associates it with the specified IAM user"
  },
  {
    "API": "identitystore:CreateGroup",
    "EventSource": "identitystore",
    "EventName": "CreateGroup",
    "Description": "Creates a group within the specified identity store"
  },
  {
    "API": "identitystore:CreateGroupMembership",
    "EventSource": "identitystore",
    "EventName": "CreateGroupMembership",
    "Description": "Creates a relationship between a member and a group"
  },
  {
    "API": "identitystore:CreateUser",
    "EventSource": "identitystore",
    "EventName": "CreateUser",
    "Description": "Creates a user within the specified identity store"
  },
  {
    "API": "identitystore:DeleteGroup",
    "EventSource": "identitystore",
    "EventName": "DeleteGroup",
    "Description": "Delete a group within an identity store given ``GroupId``"
  },
  {
    "API": "identitystore:DeleteGroupMembership",
    "EventSource": "identitystore",
    "EventName": "DeleteGroupMembership",
    "Description": "Delete a membership within a group given ``MembershipId``"
  },
  {
    "API": "identitystore:DeleteUser",
    "EventSource": "identitystore",
    "EventName": "DeleteUser",
    "Description": "Deletes a user within an identity store given ``UserId``"
  },
  {
    "API": "identitystore:DescribeGroup",
    "EventSource": "identitystore",
    "EventName": "DescribeGroup",
    "Description": "Retrieves the group metadata and attributes from ``GroupId`` in an identity store"
  },
  {
    "API": "identitystore:DescribeGroupMembership",
    "EventSource": "identitystore",
    "EventName": "DescribeGroupMembership",
    "Description": "Retrieves membership metadata and attributes from ``MembershipId`` in an identity store"
  },
  {
    "API": "identitystore:DescribeUser",
    "EventSource": "identitystore",
    "EventName": "DescribeUser",
    "Description": "Retrieves the user metadata and attributes from the ``UserId`` in an identity store"
  },
  {
    "API": "identitystore:GeneratePresignedUrl",
    "EventSource": "identitystore",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "identitystore:GetGroupId",
    "EventSource": "identitystore",
    "EventName": "GetGroupId",
    "Description": "Retrieves ``GroupId`` in an identity store"
  },
  {
    "API": "identitystore:GetGroupMembershipId",
    "EventSource": "identitystore",
    "EventName": "GetGroupMembershipId",
    "Description": "Retrieves the ``MembershipId`` in an identity store"
  },
  {
    "API": "identitystore:GetUserId",
    "EventSource": "identitystore",
    "EventName": "GetUserId",
    "Description": "Retrieves the ``UserId`` in an identity store"
  },
  {
    "API": "identitystore:IsMemberInGroups",
    "EventSource": "identitystore",
    "EventName": "IsMemberInGroups",
    "Description": "Checks the user's membership in all requested groups and returns if the member exists in all queried groups"
  },
  {
    "API": "identitystore:ListGroupMemberships",
    "EventSource": "identitystore",
    "EventName": "ListGroupMemberships",
    "Description": "For the specified group in the specified identity store, returns the list of all ``GroupMembership`` objects and returns results in paginated form"
  },
  {
    "API": "identitystore:ListGroupMembershipsForMember",
    "EventSource": "identitystore",
    "EventName": "ListGroupMembershipsForMember",
    "Description": "For the specified member in the specified identity store, returns the list of all ``GroupMembership`` objects and returns results in paginated form"
  },
  {
    "API": "identitystore:ListGroups",
    "EventSource": "identitystore",
    "EventName": "ListGroups",
    "Description": "Lists all groups in the identity store"
  },
  {
    "API": "identitystore:ListUsers",
    "EventSource": "identitystore",
    "EventName": "ListUsers",
    "Description": "Lists all users in the identity store"
  },
  {
    "API": "identitystore:UpdateGroup",
    "EventSource": "identitystore",
    "EventName": "UpdateGroup",
    "Description": "For the specified group in the specified identity store, updates the group metadata and attributes"
  },
  {
    "API": "identitystore:UpdateUser",
    "EventSource": "identitystore",
    "EventName": "UpdateUser",
    "Description": "For the specified user in the specified identity store, updates the user metadata and attributes"
  },
  {
    "API": "imagebuilder:CancelImageCreation",
    "EventSource": "imagebuilder",
    "EventName": "CancelImageCreation",
    "Description": "CancelImageCreation cancels the creation of Image"
  },
  {
    "API": "imagebuilder:CancelLifecycleExecution",
    "EventSource": "imagebuilder",
    "EventName": "CancelLifecycleExecution",
    "Description": "Cancel a specific image lifecycle policy runtime instance"
  },
  {
    "API": "imagebuilder:CreateComponent",
    "EventSource": "imagebuilder",
    "EventName": "CreateComponent",
    "Description": "Creates a new component that can be used to build, validate, test, and assess your image"
  },
  {
    "API": "imagebuilder:CreateContainerRecipe",
    "EventSource": "imagebuilder",
    "EventName": "CreateContainerRecipe",
    "Description": "Creates a new container recipe"
  },
  {
    "API": "imagebuilder:CreateDistributionConfiguration",
    "EventSource": "imagebuilder",
    "EventName": "CreateDistributionConfiguration",
    "Description": "Creates a new distribution configuration"
  },
  {
    "API": "imagebuilder:CreateImage",
    "EventSource": "imagebuilder",
    "EventName": "CreateImage",
    "Description": "Creates a new image"
  },
  {
    "API": "imagebuilder:CreateImagePipeline",
    "EventSource": "imagebuilder",
    "EventName": "CreateImagePipeline",
    "Description": "Creates a new image pipeline"
  },
  {
    "API": "imagebuilder:CreateImageRecipe",
    "EventSource": "imagebuilder",
    "EventName": "CreateImageRecipe",
    "Description": "Creates a new image recipe"
  },
  {
    "API": "imagebuilder:CreateInfrastructureConfiguration",
    "EventSource": "imagebuilder",
    "EventName": "CreateInfrastructureConfiguration",
    "Description": "Creates a new infrastructure configuration"
  },
  {
    "API": "imagebuilder:CreateLifecyclePolicy",
    "EventSource": "imagebuilder",
    "EventName": "CreateLifecyclePolicy",
    "Description": "Create a lifecycle policy resource"
  },
  {
    "API": "imagebuilder:CreateWorkflow",
    "EventSource": "imagebuilder",
    "EventName": "CreateWorkflow",
    "Description": "Create a new workflow or a new version of an existing workflow"
  },
  {
    "API": "imagebuilder:DeleteComponent",
    "EventSource": "imagebuilder",
    "EventName": "DeleteComponent",
    "Description": "Deletes a component build version"
  },
  {
    "API": "imagebuilder:DeleteContainerRecipe",
    "EventSource": "imagebuilder",
    "EventName": "DeleteContainerRecipe",
    "Description": "Deletes a container recipe"
  },
  {
    "API": "imagebuilder:DeleteDistributionConfiguration",
    "EventSource": "imagebuilder",
    "EventName": "DeleteDistributionConfiguration",
    "Description": "Deletes a distribution configuration"
  },
  {
    "API": "imagebuilder:DeleteImage",
    "EventSource": "imagebuilder",
    "EventName": "DeleteImage",
    "Description": "Deletes an Image Builder image resource"
  },
  {
    "API": "imagebuilder:DeleteImagePipeline",
    "EventSource": "imagebuilder",
    "EventName": "DeleteImagePipeline",
    "Description": "Deletes an image pipeline"
  },
  {
    "API": "imagebuilder:DeleteImageRecipe",
    "EventSource": "imagebuilder",
    "EventName": "DeleteImageRecipe",
    "Description": "Deletes an image recipe"
  },
  {
    "API": "imagebuilder:DeleteInfrastructureConfiguration",
    "EventSource": "imagebuilder",
    "EventName": "DeleteInfrastructureConfiguration",
    "Description": "Deletes an infrastructure configuration"
  },
  {
    "API": "imagebuilder:DeleteLifecyclePolicy",
    "EventSource": "imagebuilder",
    "EventName": "DeleteLifecyclePolicy",
    "Description": "Delete the specified lifecycle policy resource"
  },
  {
    "API": "imagebuilder:DeleteWorkflow",
    "EventSource": "imagebuilder",
    "EventName": "DeleteWorkflow",
    "Description": "Deletes a specific workflow resource"
  },
  {
    "API": "imagebuilder:GeneratePresignedUrl",
    "EventSource": "imagebuilder",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "imagebuilder:GetComponent",
    "EventSource": "imagebuilder",
    "EventName": "GetComponent",
    "Description": "Gets a component object"
  },
  {
    "API": "imagebuilder:GetComponentPolicy",
    "EventSource": "imagebuilder",
    "EventName": "GetComponentPolicy",
    "Description": "Gets a component policy"
  },
  {
    "API": "imagebuilder:GetContainerRecipe",
    "EventSource": "imagebuilder",
    "EventName": "GetContainerRecipe",
    "Description": "Retrieves a container recipe"
  },
  {
    "API": "imagebuilder:GetContainerRecipePolicy",
    "EventSource": "imagebuilder",
    "EventName": "GetContainerRecipePolicy",
    "Description": "Retrieves the policy for a container recipe"
  },
  {
    "API": "imagebuilder:GetDistributionConfiguration",
    "EventSource": "imagebuilder",
    "EventName": "GetDistributionConfiguration",
    "Description": "Gets a distribution configuration"
  },
  {
    "API": "imagebuilder:GetImage",
    "EventSource": "imagebuilder",
    "EventName": "GetImage",
    "Description": "Gets an image"
  },
  {
    "API": "imagebuilder:GetImagePipeline",
    "EventSource": "imagebuilder",
    "EventName": "GetImagePipeline",
    "Description": "Gets an image pipeline"
  },
  {
    "API": "imagebuilder:GetImagePolicy",
    "EventSource": "imagebuilder",
    "EventName": "GetImagePolicy",
    "Description": "Gets an image policy"
  },
  {
    "API": "imagebuilder:GetImageRecipe",
    "EventSource": "imagebuilder",
    "EventName": "GetImageRecipe",
    "Description": "Gets an image recipe"
  },
  {
    "API": "imagebuilder:GetImageRecipePolicy",
    "EventSource": "imagebuilder",
    "EventName": "GetImageRecipePolicy",
    "Description": "Gets an image recipe policy"
  },
  {
    "API": "imagebuilder:GetInfrastructureConfiguration",
    "EventSource": "imagebuilder",
    "EventName": "GetInfrastructureConfiguration",
    "Description": "Gets an infrastructure configuration"
  },
  {
    "API": "imagebuilder:GetLifecycleExecution",
    "EventSource": "imagebuilder",
    "EventName": "GetLifecycleExecution",
    "Description": "Get the runtime information that was logged for a specific runtime instance of the lifecycle policy"
  },
  {
    "API": "imagebuilder:GetLifecyclePolicy",
    "EventSource": "imagebuilder",
    "EventName": "GetLifecyclePolicy",
    "Description": "Get details for the specified image lifecycle policy"
  },
  {
    "API": "imagebuilder:GetWorkflow",
    "EventSource": "imagebuilder",
    "EventName": "GetWorkflow",
    "Description": "Get a workflow resource object"
  },
  {
    "API": "imagebuilder:GetWorkflowExecution",
    "EventSource": "imagebuilder",
    "EventName": "GetWorkflowExecution",
    "Description": "Get the runtime information that was logged for a specific runtime instance of the workflow"
  },
  {
    "API": "imagebuilder:GetWorkflowStepExecution",
    "EventSource": "imagebuilder",
    "EventName": "GetWorkflowStepExecution",
    "Description": "Get the runtime information that was logged for a specific runtime instance of the workflow step"
  },
  {
    "API": "imagebuilder:ImportComponent",
    "EventSource": "imagebuilder",
    "EventName": "ImportComponent",
    "Description": "Imports a component and transforms its data into a component document"
  },
  {
    "API": "imagebuilder:ImportVmImage",
    "EventSource": "imagebuilder",
    "EventName": "ImportVmImage",
    "Description": "When you export your virtual machine (VM) from its virtualization environment, that process creates a set of one or more disk container files that act as snapshots of your VM’s environment, settings, and data"
  },
  {
    "API": "imagebuilder:ListComponentBuildVersions",
    "EventSource": "imagebuilder",
    "EventName": "ListComponentBuildVersions",
    "Description": "Returns the list of component build versions for the specified semantic version"
  },
  {
    "API": "imagebuilder:ListComponents",
    "EventSource": "imagebuilder",
    "EventName": "ListComponents",
    "Description": "Returns the list of components that can be filtered by name, or by using the listed ``filters`` to streamline results"
  },
  {
    "API": "imagebuilder:ListContainerRecipes",
    "EventSource": "imagebuilder",
    "EventName": "ListContainerRecipes",
    "Description": "Returns a list of container recipes"
  },
  {
    "API": "imagebuilder:ListDistributionConfigurations",
    "EventSource": "imagebuilder",
    "EventName": "ListDistributionConfigurations",
    "Description": "Returns a list of distribution configurations"
  },
  {
    "API": "imagebuilder:ListImageBuildVersions",
    "EventSource": "imagebuilder",
    "EventName": "ListImageBuildVersions",
    "Description": "Returns a list of image build versions"
  },
  {
    "API": "imagebuilder:ListImagePackages",
    "EventSource": "imagebuilder",
    "EventName": "ListImagePackages",
    "Description": "List the Packages that are associated with an Image Build Version, as determined by Amazon Web Services Systems Manager Inventory at build time"
  },
  {
    "API": "imagebuilder:ListImagePipelineImages",
    "EventSource": "imagebuilder",
    "EventName": "ListImagePipelineImages",
    "Description": "Returns a list of images created by the specified pipeline"
  },
  {
    "API": "imagebuilder:ListImagePipelines",
    "EventSource": "imagebuilder",
    "EventName": "ListImagePipelines",
    "Description": "Returns a list of image pipelines"
  },
  {
    "API": "imagebuilder:ListImageRecipes",
    "EventSource": "imagebuilder",
    "EventName": "ListImageRecipes",
    "Description": "Returns a list of image recipes"
  },
  {
    "API": "imagebuilder:ListImageScanFindingAggregations",
    "EventSource": "imagebuilder",
    "EventName": "ListImageScanFindingAggregations",
    "Description": "Returns a list of image scan aggregations for your account"
  },
  {
    "API": "imagebuilder:ListImageScanFindings",
    "EventSource": "imagebuilder",
    "EventName": "ListImageScanFindings",
    "Description": "Returns a list of image scan findings for your account"
  },
  {
    "API": "imagebuilder:ListImages",
    "EventSource": "imagebuilder",
    "EventName": "ListImages",
    "Description": "Returns the list of images that you have access to"
  },
  {
    "API": "imagebuilder:ListInfrastructureConfigurations",
    "EventSource": "imagebuilder",
    "EventName": "ListInfrastructureConfigurations",
    "Description": "Returns a list of infrastructure configurations"
  },
  {
    "API": "imagebuilder:ListLifecycleExecutionResources",
    "EventSource": "imagebuilder",
    "EventName": "ListLifecycleExecutionResources",
    "Description": "List resources that the runtime instance of the image lifecycle identified for lifecycle actions"
  },
  {
    "API": "imagebuilder:ListLifecycleExecutions",
    "EventSource": "imagebuilder",
    "EventName": "ListLifecycleExecutions",
    "Description": "Get the lifecycle runtime history for the specified resource"
  },
  {
    "API": "imagebuilder:ListLifecyclePolicies",
    "EventSource": "imagebuilder",
    "EventName": "ListLifecyclePolicies",
    "Description": "Get a list of lifecycle policies in your Amazon Web Services account"
  },
  {
    "API": "imagebuilder:ListTagsForResource",
    "EventSource": "imagebuilder",
    "EventName": "ListTagsForResource",
    "Description": "Returns the list of tags for the specified resource"
  },
  {
    "API": "imagebuilder:ListWaitingWorkflowSteps",
    "EventSource": "imagebuilder",
    "EventName": "ListWaitingWorkflowSteps",
    "Description": "Get a list of workflow steps that are waiting for action for workflows in your Amazon Web Services account"
  },
  {
    "API": "imagebuilder:ListWorkflowBuildVersions",
    "EventSource": "imagebuilder",
    "EventName": "ListWorkflowBuildVersions",
    "Description": "Returns a list of build versions for a specific workflow resource"
  },
  {
    "API": "imagebuilder:ListWorkflowExecutions",
    "EventSource": "imagebuilder",
    "EventName": "ListWorkflowExecutions",
    "Description": "Returns a list of workflow runtime instance metadata objects for a specific image build version"
  },
  {
    "API": "imagebuilder:ListWorkflowStepExecutions",
    "EventSource": "imagebuilder",
    "EventName": "ListWorkflowStepExecutions",
    "Description": "Returns runtime data for each step in a runtime instance of the workflow that you specify in the request"
  },
  {
    "API": "imagebuilder:ListWorkflows",
    "EventSource": "imagebuilder",
    "EventName": "ListWorkflows",
    "Description": "Lists workflow build versions based on filtering parameters"
  },
  {
    "API": "imagebuilder:PutComponentPolicy",
    "EventSource": "imagebuilder",
    "EventName": "PutComponentPolicy",
    "Description": "Applies a policy to a component"
  },
  {
    "API": "imagebuilder:PutContainerRecipePolicy",
    "EventSource": "imagebuilder",
    "EventName": "PutContainerRecipePolicy",
    "Description": "Applies a policy to a container image"
  },
  {
    "API": "imagebuilder:PutImagePolicy",
    "EventSource": "imagebuilder",
    "EventName": "PutImagePolicy",
    "Description": "Applies a policy to an image"
  },
  {
    "API": "imagebuilder:PutImageRecipePolicy",
    "EventSource": "imagebuilder",
    "EventName": "PutImageRecipePolicy",
    "Description": "Applies a policy to an image recipe"
  },
  {
    "API": "imagebuilder:SendWorkflowStepAction",
    "EventSource": "imagebuilder",
    "EventName": "SendWorkflowStepAction",
    "Description": "Pauses or resumes image creation when the associated workflow runs a ``WaitForAction`` step"
  },
  {
    "API": "imagebuilder:StartImagePipelineExecution",
    "EventSource": "imagebuilder",
    "EventName": "StartImagePipelineExecution",
    "Description": "Manually triggers a pipeline to create an image"
  },
  {
    "API": "imagebuilder:StartResourceStateUpdate",
    "EventSource": "imagebuilder",
    "EventName": "StartResourceStateUpdate",
    "Description": "Begin asynchronous resource state update for lifecycle changes to the specified image resources"
  },
  {
    "API": "imagebuilder:TagResource",
    "EventSource": "imagebuilder",
    "EventName": "TagResource",
    "Description": "Adds a tag to a resource"
  },
  {
    "API": "imagebuilder:UntagResource",
    "EventSource": "imagebuilder",
    "EventName": "UntagResource",
    "Description": "Removes a tag from a resource"
  },
  {
    "API": "imagebuilder:UpdateDistributionConfiguration",
    "EventSource": "imagebuilder",
    "EventName": "UpdateDistributionConfiguration",
    "Description": "Updates a new distribution configuration"
  },
  {
    "API": "imagebuilder:UpdateImagePipeline",
    "EventSource": "imagebuilder",
    "EventName": "UpdateImagePipeline",
    "Description": "Updates an image pipeline"
  },
  {
    "API": "imagebuilder:UpdateInfrastructureConfiguration",
    "EventSource": "imagebuilder",
    "EventName": "UpdateInfrastructureConfiguration",
    "Description": "Updates a new infrastructure configuration"
  },
  {
    "API": "imagebuilder:UpdateLifecyclePolicy",
    "EventSource": "imagebuilder",
    "EventName": "UpdateLifecyclePolicy",
    "Description": "Update the specified lifecycle policy"
  },
  {
    "API": "importexport:CancelJob",
    "EventSource": "importexport",
    "EventName": "CancelJob",
    "Description": "This operation cancels a specified job"
  },
  {
    "API": "importexport:CreateJob",
    "EventSource": "importexport",
    "EventName": "CreateJob",
    "Description": "This operation initiates the process of scheduling an upload or download of your data"
  },
  {
    "API": "importexport:GeneratePresignedUrl",
    "EventSource": "importexport",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "importexport:GetShippingLabel",
    "EventSource": "importexport",
    "EventName": "GetShippingLabel",
    "Description": "This operation generates a pre-paid UPS shipping label that you will use to ship your device to AWS for processing"
  },
  {
    "API": "importexport:GetStatus",
    "EventSource": "importexport",
    "EventName": "GetStatus",
    "Description": "This operation returns information about a job, including where the job is in the processing pipeline, the status of the results, and the signature value associated with the job"
  },
  {
    "API": "importexport:ListJobs",
    "EventSource": "importexport",
    "EventName": "ListJobs",
    "Description": "This operation returns the jobs associated with the requester"
  },
  {
    "API": "importexport:UpdateJob",
    "EventSource": "importexport",
    "EventName": "UpdateJob",
    "Description": "You use this operation to change the parameters specified in the original manifest file by supplying a new manifest file"
  },
  {
    "API": "inspector:AddAttributesToFindings",
    "EventSource": "inspector",
    "EventName": "AddAttributesToFindings",
    "Description": "Assigns attributes (key and value pairs) to the findings that are specified by the ARNs of the findings"
  },
  {
    "API": "inspector:CreateAssessmentTarget",
    "EventSource": "inspector",
    "EventName": "CreateAssessmentTarget",
    "Description": "Creates a new assessment target using the ARN of the resource group that is generated by  CreateResourceGroup"
  },
  {
    "API": "inspector:CreateAssessmentTemplate",
    "EventSource": "inspector",
    "EventName": "CreateAssessmentTemplate",
    "Description": "Creates an assessment template for the assessment target that is specified by the ARN of the assessment target"
  },
  {
    "API": "inspector:CreateExclusionsPreview",
    "EventSource": "inspector",
    "EventName": "CreateExclusionsPreview",
    "Description": "Starts the generation of an exclusions preview for the specified assessment template"
  },
  {
    "API": "inspector:CreateResourceGroup",
    "EventSource": "inspector",
    "EventName": "CreateResourceGroup",
    "Description": "Creates a resource group using the specified set of tags (key and value pairs) that are used to select the EC2 instances to be included in an Amazon Inspector assessment target"
  },
  {
    "API": "inspector:DeleteAssessmentRun",
    "EventSource": "inspector",
    "EventName": "DeleteAssessmentRun",
    "Description": "Deletes the assessment run that is specified by the ARN of the assessment run"
  },
  {
    "API": "inspector:DeleteAssessmentTarget",
    "EventSource": "inspector",
    "EventName": "DeleteAssessmentTarget",
    "Description": "Deletes the assessment target that is specified by the ARN of the assessment target"
  },
  {
    "API": "inspector:DeleteAssessmentTemplate",
    "EventSource": "inspector",
    "EventName": "DeleteAssessmentTemplate",
    "Description": "Deletes the assessment template that is specified by the ARN of the assessment template"
  },
  {
    "API": "inspector:DescribeAssessmentRuns",
    "EventSource": "inspector",
    "EventName": "DescribeAssessmentRuns",
    "Description": "Describes the assessment runs that are specified by the ARNs of the assessment runs"
  },
  {
    "API": "inspector:DescribeAssessmentTargets",
    "EventSource": "inspector",
    "EventName": "DescribeAssessmentTargets",
    "Description": "Describes the assessment targets that are specified by the ARNs of the assessment targets"
  },
  {
    "API": "inspector:DescribeAssessmentTemplates",
    "EventSource": "inspector",
    "EventName": "DescribeAssessmentTemplates",
    "Description": "Describes the assessment templates that are specified by the ARNs of the assessment templates"
  },
  {
    "API": "inspector:DescribeCrossAccountAccessRole",
    "EventSource": "inspector",
    "EventName": "DescribeCrossAccountAccessRole",
    "Description": "Describes the IAM role that enables Amazon Inspector to access your AWS account"
  },
  {
    "API": "inspector:DescribeExclusions",
    "EventSource": "inspector",
    "EventName": "DescribeExclusions",
    "Description": "Describes the exclusions that are specified by the exclusions' ARNs"
  },
  {
    "API": "inspector:DescribeFindings",
    "EventSource": "inspector",
    "EventName": "DescribeFindings",
    "Description": "Describes the findings that are specified by the ARNs of the findings"
  },
  {
    "API": "inspector:DescribeResourceGroups",
    "EventSource": "inspector",
    "EventName": "DescribeResourceGroups",
    "Description": "Describes the resource groups that are specified by the ARNs of the resource groups"
  },
  {
    "API": "inspector:DescribeRulesPackages",
    "EventSource": "inspector",
    "EventName": "DescribeRulesPackages",
    "Description": "Describes the rules packages that are specified by the ARNs of the rules packages"
  },
  {
    "API": "inspector:GeneratePresignedUrl",
    "EventSource": "inspector",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "inspector:GetAssessmentReport",
    "EventSource": "inspector",
    "EventName": "GetAssessmentReport",
    "Description": "Produces an assessment report that includes detailed and comprehensive results of a specified assessment run"
  },
  {
    "API": "inspector:GetExclusionsPreview",
    "EventSource": "inspector",
    "EventName": "GetExclusionsPreview",
    "Description": "Retrieves the exclusions preview (a list of ExclusionPreview objects) specified by the preview token"
  },
  {
    "API": "inspector:GetTelemetryMetadata",
    "EventSource": "inspector",
    "EventName": "GetTelemetryMetadata",
    "Description": "Information about the data that is collected for the specified assessment run"
  },
  {
    "API": "inspector:ListAssessmentRunAgents",
    "EventSource": "inspector",
    "EventName": "ListAssessmentRunAgents",
    "Description": "Lists the agents of the assessment runs that are specified by the ARNs of the assessment runs"
  },
  {
    "API": "inspector:ListAssessmentRuns",
    "EventSource": "inspector",
    "EventName": "ListAssessmentRuns",
    "Description": "Lists the assessment runs that correspond to the assessment templates that are specified by the ARNs of the assessment templates"
  },
  {
    "API": "inspector:ListAssessmentTargets",
    "EventSource": "inspector",
    "EventName": "ListAssessmentTargets",
    "Description": "Lists the ARNs of the assessment targets within this AWS account"
  },
  {
    "API": "inspector:ListAssessmentTemplates",
    "EventSource": "inspector",
    "EventName": "ListAssessmentTemplates",
    "Description": "Lists the assessment templates that correspond to the assessment targets that are specified by the ARNs of the assessment targets"
  },
  {
    "API": "inspector:ListEventSubscriptions",
    "EventSource": "inspector",
    "EventName": "ListEventSubscriptions",
    "Description": "Lists all the event subscriptions for the assessment template that is specified by the ARN of the assessment template"
  },
  {
    "API": "inspector:ListExclusions",
    "EventSource": "inspector",
    "EventName": "ListExclusions",
    "Description": "List exclusions that are generated by the assessment run"
  },
  {
    "API": "inspector:ListFindings",
    "EventSource": "inspector",
    "EventName": "ListFindings",
    "Description": "Lists findings that are generated by the assessment runs that are specified by the ARNs of the assessment runs"
  },
  {
    "API": "inspector:ListRulesPackages",
    "EventSource": "inspector",
    "EventName": "ListRulesPackages",
    "Description": "Lists all available Amazon Inspector rules packages"
  },
  {
    "API": "inspector:ListTagsForResource",
    "EventSource": "inspector",
    "EventName": "ListTagsForResource",
    "Description": "Lists all tags associated with an assessment template"
  },
  {
    "API": "inspector:PreviewAgents",
    "EventSource": "inspector",
    "EventName": "PreviewAgents",
    "Description": "Previews the agents installed on the EC2 instances that are part of the specified assessment target"
  },
  {
    "API": "inspector:RegisterCrossAccountAccessRole",
    "EventSource": "inspector",
    "EventName": "RegisterCrossAccountAccessRole",
    "Description": "Registers the IAM role that grants Amazon Inspector access to AWS Services needed to perform security assessments"
  },
  {
    "API": "inspector:RemoveAttributesFromFindings",
    "EventSource": "inspector",
    "EventName": "RemoveAttributesFromFindings",
    "Description": "Removes entire attributes (key and value pairs) from the findings that are specified by the ARNs of the findings where an attribute with the specified key exists"
  },
  {
    "API": "inspector:SetTagsForResource",
    "EventSource": "inspector",
    "EventName": "SetTagsForResource",
    "Description": "Sets tags (key and value pairs) to the assessment template that is specified by the ARN of the assessment template"
  },
  {
    "API": "inspector:StartAssessmentRun",
    "EventSource": "inspector",
    "EventName": "StartAssessmentRun",
    "Description": "Starts the assessment run specified by the ARN of the assessment template"
  },
  {
    "API": "inspector:StopAssessmentRun",
    "EventSource": "inspector",
    "EventName": "StopAssessmentRun",
    "Description": "Stops the assessment run that is specified by the ARN of the assessment run"
  },
  {
    "API": "inspector:SubscribeToEvent",
    "EventSource": "inspector",
    "EventName": "SubscribeToEvent",
    "Description": "Enables the process of sending Amazon Simple Notification Service (SNS) notifications about a specified event to a specified SNS topic"
  },
  {
    "API": "inspector:UnsubscribeFromEvent",
    "EventSource": "inspector",
    "EventName": "UnsubscribeFromEvent",
    "Description": "Disables the process of sending Amazon Simple Notification Service (SNS) notifications about a specified event to a specified SNS topic"
  },
  {
    "API": "inspector:UpdateAssessmentTarget",
    "EventSource": "inspector",
    "EventName": "UpdateAssessmentTarget",
    "Description": "Updates the assessment target that is specified by the ARN of the assessment target"
  },
  {
    "API": "inspector-scan:GeneratePresignedUrl",
    "EventSource": "inspector-scan",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "inspector-scan:ScanSbom",
    "EventSource": "inspector-scan",
    "EventName": "ScanSbom",
    "Description": "Scans a provided CycloneDX 1"
  },
  {
    "API": "inspector2:AssociateMember",
    "EventSource": "inspector2",
    "EventName": "AssociateMember",
    "Description": "Associates an Amazon Web Services account with an Amazon Inspector delegated administrator"
  },
  {
    "API": "inspector2:BatchGetAccountStatus",
    "EventSource": "inspector2",
    "EventName": "BatchGetAccountStatus",
    "Description": "Retrieves the Amazon Inspector status of multiple Amazon Web Services accounts within your environment"
  },
  {
    "API": "inspector2:BatchGetCodeSnippet",
    "EventSource": "inspector2",
    "EventName": "BatchGetCodeSnippet",
    "Description": "Retrieves code snippets from findings that Amazon Inspector detected code vulnerabilities in"
  },
  {
    "API": "inspector2:BatchGetFindingDetails",
    "EventSource": "inspector2",
    "EventName": "BatchGetFindingDetails",
    "Description": "Gets vulnerability details for findings"
  },
  {
    "API": "inspector2:BatchGetFreeTrialInfo",
    "EventSource": "inspector2",
    "EventName": "BatchGetFreeTrialInfo",
    "Description": "Gets free trial status for multiple Amazon Web Services accounts"
  },
  {
    "API": "inspector2:BatchGetMemberEc2DeepInspectionStatus",
    "EventSource": "inspector2",
    "EventName": "BatchGetMemberEc2DeepInspectionStatus",
    "Description": "Retrieves Amazon Inspector deep inspection activation status of multiple member accounts within your organization"
  },
  {
    "API": "inspector2:BatchUpdateMemberEc2DeepInspectionStatus",
    "EventSource": "inspector2",
    "EventName": "BatchUpdateMemberEc2DeepInspectionStatus",
    "Description": "Activates or deactivates Amazon Inspector deep inspection for the provided member accounts in your organization"
  },
  {
    "API": "inspector2:CancelFindingsReport",
    "EventSource": "inspector2",
    "EventName": "CancelFindingsReport",
    "Description": "Cancels the given findings report"
  },
  {
    "API": "inspector2:CancelSbomExport",
    "EventSource": "inspector2",
    "EventName": "CancelSbomExport",
    "Description": "Cancels a software bill of materials (SBOM) report"
  },
  {
    "API": "inspector2:CreateCisScanConfiguration",
    "EventSource": "inspector2",
    "EventName": "CreateCisScanConfiguration",
    "Description": "Creates a CIS scan configuration"
  },
  {
    "API": "inspector2:CreateFilter",
    "EventSource": "inspector2",
    "EventName": "CreateFilter",
    "Description": "Creates a filter resource using specified filter criteria"
  },
  {
    "API": "inspector2:CreateFindingsReport",
    "EventSource": "inspector2",
    "EventName": "CreateFindingsReport",
    "Description": "Creates a finding report"
  },
  {
    "API": "inspector2:CreateSbomExport",
    "EventSource": "inspector2",
    "EventName": "CreateSbomExport",
    "Description": "Creates a software bill of materials (SBOM) report"
  },
  {
    "API": "inspector2:DeleteCisScanConfiguration",
    "EventSource": "inspector2",
    "EventName": "DeleteCisScanConfiguration",
    "Description": "Deletes a CIS scan configuration"
  },
  {
    "API": "inspector2:DeleteFilter",
    "EventSource": "inspector2",
    "EventName": "DeleteFilter",
    "Description": "Deletes a filter resource"
  },
  {
    "API": "inspector2:DescribeOrganizationConfiguration",
    "EventSource": "inspector2",
    "EventName": "DescribeOrganizationConfiguration",
    "Description": "Describe Amazon Inspector configuration settings for an Amazon Web Services organization"
  },
  {
    "API": "inspector2:DisableDelegatedAdminAccount",
    "EventSource": "inspector2",
    "EventName": "DisableDelegatedAdminAccount",
    "Description": "Disables the Amazon Inspector delegated administrator for your organization"
  },
  {
    "API": "inspector2:DisassociateMember",
    "EventSource": "inspector2",
    "EventName": "DisassociateMember",
    "Description": "Disassociates a member account from an Amazon Inspector delegated administrator"
  },
  {
    "API": "inspector2:EnableDelegatedAdminAccount",
    "EventSource": "inspector2",
    "EventName": "EnableDelegatedAdminAccount",
    "Description": "Enables the Amazon Inspector delegated administrator for your Organizations organization"
  },
  {
    "API": "inspector2:GeneratePresignedUrl",
    "EventSource": "inspector2",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "inspector2:GetCisScanReport",
    "EventSource": "inspector2",
    "EventName": "GetCisScanReport",
    "Description": "Retrieves a CIS scan report"
  },
  {
    "API": "inspector2:GetCisScanResultDetails",
    "EventSource": "inspector2",
    "EventName": "GetCisScanResultDetails",
    "Description": "Retrieves CIS scan result details"
  },
  {
    "API": "inspector2:GetConfiguration",
    "EventSource": "inspector2",
    "EventName": "GetConfiguration",
    "Description": "Retrieves setting configurations for Inspector scans"
  },
  {
    "API": "inspector2:GetDelegatedAdminAccount",
    "EventSource": "inspector2",
    "EventName": "GetDelegatedAdminAccount",
    "Description": "Retrieves information about the Amazon Inspector delegated administrator for your organization"
  },
  {
    "API": "inspector2:GetEc2DeepInspectionConfiguration",
    "EventSource": "inspector2",
    "EventName": "GetEc2DeepInspectionConfiguration",
    "Description": "Retrieves the activation status of Amazon Inspector deep inspection and custom paths associated with your account"
  },
  {
    "API": "inspector2:GetEncryptionKey",
    "EventSource": "inspector2",
    "EventName": "GetEncryptionKey",
    "Description": "Gets an encryption key"
  },
  {
    "API": "inspector2:GetFindingsReportStatus",
    "EventSource": "inspector2",
    "EventName": "GetFindingsReportStatus",
    "Description": "Gets the status of a findings report"
  },
  {
    "API": "inspector2:GetMember",
    "EventSource": "inspector2",
    "EventName": "GetMember",
    "Description": "Gets member information for your organization"
  },
  {
    "API": "inspector2:GetSbomExport",
    "EventSource": "inspector2",
    "EventName": "GetSbomExport",
    "Description": "Gets details of a software bill of materials (SBOM) report"
  },
  {
    "API": "inspector2:ListAccountPermissions",
    "EventSource": "inspector2",
    "EventName": "ListAccountPermissions",
    "Description": "Lists the permissions an account has to configure Amazon Inspector"
  },
  {
    "API": "inspector2:ListCisScanConfigurations",
    "EventSource": "inspector2",
    "EventName": "ListCisScanConfigurations",
    "Description": "Lists CIS scan configurations"
  },
  {
    "API": "inspector2:ListCisScanResultsAggregatedByChecks",
    "EventSource": "inspector2",
    "EventName": "ListCisScanResultsAggregatedByChecks",
    "Description": "Lists scan results aggregated by checks"
  },
  {
    "API": "inspector2:ListCisScanResultsAggregatedByTargetResource",
    "EventSource": "inspector2",
    "EventName": "ListCisScanResultsAggregatedByTargetResource",
    "Description": "Lists scan results aggregated by a target resource"
  },
  {
    "API": "inspector2:ListCisScans",
    "EventSource": "inspector2",
    "EventName": "ListCisScans",
    "Description": "Returns a CIS scan list"
  },
  {
    "API": "inspector2:ListCoverage",
    "EventSource": "inspector2",
    "EventName": "ListCoverage",
    "Description": "Lists coverage details for you environment"
  },
  {
    "API": "inspector2:ListCoverageStatistics",
    "EventSource": "inspector2",
    "EventName": "ListCoverageStatistics",
    "Description": "Lists Amazon Inspector coverage statistics for your environment"
  },
  {
    "API": "inspector2:ListDelegatedAdminAccounts",
    "EventSource": "inspector2",
    "EventName": "ListDelegatedAdminAccounts",
    "Description": "Lists information about the Amazon Inspector delegated administrator of your organization"
  },
  {
    "API": "inspector2:ListFilters",
    "EventSource": "inspector2",
    "EventName": "ListFilters",
    "Description": "Lists the filters associated with your account"
  },
  {
    "API": "inspector2:ListFindingAggregations",
    "EventSource": "inspector2",
    "EventName": "ListFindingAggregations",
    "Description": "Lists aggregated finding data for your environment based on specific criteria"
  },
  {
    "API": "inspector2:ListFindings",
    "EventSource": "inspector2",
    "EventName": "ListFindings",
    "Description": "Lists findings for your environment"
  },
  {
    "API": "inspector2:ListMembers",
    "EventSource": "inspector2",
    "EventName": "ListMembers",
    "Description": "List members associated with the Amazon Inspector delegated administrator for your organization"
  },
  {
    "API": "inspector2:ListTagsForResource",
    "EventSource": "inspector2",
    "EventName": "ListTagsForResource",
    "Description": "Lists all tags attached to a given resource"
  },
  {
    "API": "inspector2:ListUsageTotals",
    "EventSource": "inspector2",
    "EventName": "ListUsageTotals",
    "Description": "Lists the Amazon Inspector usage totals over the last 30 days"
  },
  {
    "API": "inspector2:ResetEncryptionKey",
    "EventSource": "inspector2",
    "EventName": "ResetEncryptionKey",
    "Description": "Resets an encryption key"
  },
  {
    "API": "inspector2:SearchVulnerabilities",
    "EventSource": "inspector2",
    "EventName": "SearchVulnerabilities",
    "Description": "Lists Amazon Inspector coverage details for a specific vulnerability"
  },
  {
    "API": "inspector2:SendCisSessionHealth",
    "EventSource": "inspector2",
    "EventName": "SendCisSessionHealth",
    "Description": "Sends a CIS session health"
  },
  {
    "API": "inspector2:SendCisSessionTelemetry",
    "EventSource": "inspector2",
    "EventName": "SendCisSessionTelemetry",
    "Description": "Sends a CIS session telemetry"
  },
  {
    "API": "inspector2:StartCisSession",
    "EventSource": "inspector2",
    "EventName": "StartCisSession",
    "Description": "Starts a CIS session"
  },
  {
    "API": "inspector2:StopCisSession",
    "EventSource": "inspector2",
    "EventName": "StopCisSession",
    "Description": "Stops a CIS session"
  },
  {
    "API": "inspector2:TagResource",
    "EventSource": "inspector2",
    "EventName": "TagResource",
    "Description": "Adds tags to a resource"
  },
  {
    "API": "inspector2:UntagResource",
    "EventSource": "inspector2",
    "EventName": "UntagResource",
    "Description": "Removes tags from a resource"
  },
  {
    "API": "inspector2:UpdateCisScanConfiguration",
    "EventSource": "inspector2",
    "EventName": "UpdateCisScanConfiguration",
    "Description": "Updates a CIS scan configuration"
  },
  {
    "API": "inspector2:UpdateConfiguration",
    "EventSource": "inspector2",
    "EventName": "UpdateConfiguration",
    "Description": "Updates setting configurations for your Amazon Inspector account"
  },
  {
    "API": "inspector2:UpdateEc2DeepInspectionConfiguration",
    "EventSource": "inspector2",
    "EventName": "UpdateEc2DeepInspectionConfiguration",
    "Description": "Activates, deactivates Amazon Inspector deep inspection, or updates custom paths for your account"
  },
  {
    "API": "inspector2:UpdateEncryptionKey",
    "EventSource": "inspector2",
    "EventName": "UpdateEncryptionKey",
    "Description": "Updates an encryption key"
  },
  {
    "API": "inspector2:UpdateFilter",
    "EventSource": "inspector2",
    "EventName": "UpdateFilter",
    "Description": "Specifies the action that is to be applied to the findings that match the filter"
  },
  {
    "API": "inspector2:UpdateOrgEc2DeepInspectionConfiguration",
    "EventSource": "inspector2",
    "EventName": "UpdateOrgEc2DeepInspectionConfiguration",
    "Description": "Updates the Amazon Inspector deep inspection custom paths for your organization"
  },
  {
    "API": "inspector2:UpdateOrganizationConfiguration",
    "EventSource": "inspector2",
    "EventName": "UpdateOrganizationConfiguration",
    "Description": "Updates the configurations for your Amazon Inspector organization"
  },
  {
    "API": "internetmonitor:CreateMonitor",
    "EventSource": "internetmonitor",
    "EventName": "CreateMonitor",
    "Description": "Creates a monitor in Amazon CloudWatch Internet Monitor"
  },
  {
    "API": "internetmonitor:DeleteMonitor",
    "EventSource": "internetmonitor",
    "EventName": "DeleteMonitor",
    "Description": "Deletes a monitor in Amazon CloudWatch Internet Monitor"
  },
  {
    "API": "internetmonitor:GeneratePresignedUrl",
    "EventSource": "internetmonitor",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "internetmonitor:GetHealthEvent",
    "EventSource": "internetmonitor",
    "EventName": "GetHealthEvent",
    "Description": "Gets information that Amazon CloudWatch Internet Monitor has created and stored about a health event for a specified monitor"
  },
  {
    "API": "internetmonitor:GetInternetEvent",
    "EventSource": "internetmonitor",
    "EventName": "GetInternetEvent",
    "Description": "Gets information that Amazon CloudWatch Internet Monitor has generated about an internet event"
  },
  {
    "API": "internetmonitor:GetMonitor",
    "EventSource": "internetmonitor",
    "EventName": "GetMonitor",
    "Description": "Gets information about a monitor in Amazon CloudWatch Internet Monitor based on a monitor name"
  },
  {
    "API": "internetmonitor:GetQueryResults",
    "EventSource": "internetmonitor",
    "EventName": "GetQueryResults",
    "Description": "Return the data for a query with the Amazon CloudWatch Internet Monitor query interface"
  },
  {
    "API": "internetmonitor:GetQueryStatus",
    "EventSource": "internetmonitor",
    "EventName": "GetQueryStatus",
    "Description": "Returns the current status of a query for the Amazon CloudWatch Internet Monitor query interface, for a specified query ID and monitor"
  },
  {
    "API": "internetmonitor:ListHealthEvents",
    "EventSource": "internetmonitor",
    "EventName": "ListHealthEvents",
    "Description": "Lists all health events for a monitor in Amazon CloudWatch Internet Monitor"
  },
  {
    "API": "internetmonitor:ListInternetEvents",
    "EventSource": "internetmonitor",
    "EventName": "ListInternetEvents",
    "Description": "Lists internet events that cause performance or availability issues for client locations"
  },
  {
    "API": "internetmonitor:ListMonitors",
    "EventSource": "internetmonitor",
    "EventName": "ListMonitors",
    "Description": "Lists all of your monitors for Amazon CloudWatch Internet Monitor and their statuses, along with the Amazon Resource Name (ARN) and name of each monitor"
  },
  {
    "API": "internetmonitor:ListTagsForResource",
    "EventSource": "internetmonitor",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags for a resource"
  },
  {
    "API": "internetmonitor:StartQuery",
    "EventSource": "internetmonitor",
    "EventName": "StartQuery",
    "Description": "Start a query to return data for a specific query type for the Amazon CloudWatch Internet Monitor query interface"
  },
  {
    "API": "internetmonitor:StopQuery",
    "EventSource": "internetmonitor",
    "EventName": "StopQuery",
    "Description": "Stop a query that is progress for a specific monitor"
  },
  {
    "API": "internetmonitor:TagResource",
    "EventSource": "internetmonitor",
    "EventName": "TagResource",
    "Description": "Adds a tag to a resource"
  },
  {
    "API": "internetmonitor:UntagResource",
    "EventSource": "internetmonitor",
    "EventName": "UntagResource",
    "Description": "Removes a tag from a resource"
  },
  {
    "API": "internetmonitor:UpdateMonitor",
    "EventSource": "internetmonitor",
    "EventName": "UpdateMonitor",
    "Description": "Updates a monitor"
  },
  {
    "API": "iot:AcceptCertificateTransfer",
    "EventSource": "iot",
    "EventName": "AcceptCertificateTransfer",
    "Description": "Accepts a pending certificate transfer"
  },
  {
    "API": "iot:AddThingToBillingGroup",
    "EventSource": "iot",
    "EventName": "AddThingToBillingGroup",
    "Description": "Adds a thing to a billing group"
  },
  {
    "API": "iot:AddThingToThingGroup",
    "EventSource": "iot",
    "EventName": "AddThingToThingGroup",
    "Description": "Adds a thing to a thing group"
  },
  {
    "API": "iot:AssociateTargetsWithJob",
    "EventSource": "iot",
    "EventName": "AssociateTargetsWithJob",
    "Description": "Associates a group with a continuous job"
  },
  {
    "API": "iot:AttachPolicy",
    "EventSource": "iot",
    "EventName": "AttachPolicy",
    "Description": "Attaches the specified policy to the specified principal (certificate or other credential)"
  },
  {
    "API": "iot:AttachPrincipalPolicy",
    "EventSource": "iot",
    "EventName": "AttachPrincipalPolicy",
    "Description": "Attaches the specified policy to the specified principal (certificate or other credential)"
  },
  {
    "API": "iot:AttachSecurityProfile",
    "EventSource": "iot",
    "EventName": "AttachSecurityProfile",
    "Description": "Associates a Device Defender security profile with a thing group or this account"
  },
  {
    "API": "iot:AttachThingPrincipal",
    "EventSource": "iot",
    "EventName": "AttachThingPrincipal",
    "Description": "Attaches the specified principal to the specified thing"
  },
  {
    "API": "iot:CancelAuditMitigationActionsTask",
    "EventSource": "iot",
    "EventName": "CancelAuditMitigationActionsTask",
    "Description": "Cancels a mitigation action task that is in progress"
  },
  {
    "API": "iot:CancelAuditTask",
    "EventSource": "iot",
    "EventName": "CancelAuditTask",
    "Description": "Cancels an audit that is in progress"
  },
  {
    "API": "iot:CancelCertificateTransfer",
    "EventSource": "iot",
    "EventName": "CancelCertificateTransfer",
    "Description": "Cancels a pending transfer for the specified certificate"
  },
  {
    "API": "iot:CancelDetectMitigationActionsTask",
    "EventSource": "iot",
    "EventName": "CancelDetectMitigationActionsTask",
    "Description": "Cancels a Device Defender ML Detect mitigation action"
  },
  {
    "API": "iot:CancelJob",
    "EventSource": "iot",
    "EventName": "CancelJob",
    "Description": "Cancels a job"
  },
  {
    "API": "iot:CancelJobExecution",
    "EventSource": "iot",
    "EventName": "CancelJobExecution",
    "Description": "Cancels the execution of a job for a given thing"
  },
  {
    "API": "iot:ClearDefaultAuthorizer",
    "EventSource": "iot",
    "EventName": "ClearDefaultAuthorizer",
    "Description": "Clears the default authorizer"
  },
  {
    "API": "iot:ConfirmTopicRuleDestination",
    "EventSource": "iot",
    "EventName": "ConfirmTopicRuleDestination",
    "Description": "Confirms a topic rule destination"
  },
  {
    "API": "iot:CreateAuditSuppression",
    "EventSource": "iot",
    "EventName": "CreateAuditSuppression",
    "Description": "Creates a Device Defender audit suppression"
  },
  {
    "API": "iot:CreateAuthorizer",
    "EventSource": "iot",
    "EventName": "CreateAuthorizer",
    "Description": "Creates an authorizer"
  },
  {
    "API": "iot:CreateBillingGroup",
    "EventSource": "iot",
    "EventName": "CreateBillingGroup",
    "Description": "Creates a billing group"
  },
  {
    "API": "iot:CreateCertificateFromCsr",
    "EventSource": "iot",
    "EventName": "CreateCertificateFromCsr",
    "Description": "Creates an X"
  },
  {
    "API": "iot:CreateCertificateProvider",
    "EventSource": "iot",
    "EventName": "CreateCertificateProvider",
    "Description": "Creates an Amazon Web Services IoT Core certificate provider"
  },
  {
    "API": "iot:CreateCustomMetric",
    "EventSource": "iot",
    "EventName": "CreateCustomMetric",
    "Description": "Use this API to define a Custom Metric published by your devices to Device Defender"
  },
  {
    "API": "iot:CreateDimension",
    "EventSource": "iot",
    "EventName": "CreateDimension",
    "Description": "Create a dimension that you can use to limit the scope of a metric used in a security profile for IoT Device Defender"
  },
  {
    "API": "iot:CreateDomainConfiguration",
    "EventSource": "iot",
    "EventName": "CreateDomainConfiguration",
    "Description": "Creates a domain configuration"
  },
  {
    "API": "iot:CreateDynamicThingGroup",
    "EventSource": "iot",
    "EventName": "CreateDynamicThingGroup",
    "Description": "Creates a dynamic thing group"
  },
  {
    "API": "iot:CreateFleetMetric",
    "EventSource": "iot",
    "EventName": "CreateFleetMetric",
    "Description": "Creates a fleet metric"
  },
  {
    "API": "iot:CreateJob",
    "EventSource": "iot",
    "EventName": "CreateJob",
    "Description": "Creates a job"
  },
  {
    "API": "iot:CreateJobTemplate",
    "EventSource": "iot",
    "EventName": "CreateJobTemplate",
    "Description": "Creates a job template"
  },
  {
    "API": "iot:CreateKeysAndCertificate",
    "EventSource": "iot",
    "EventName": "CreateKeysAndCertificate",
    "Description": "Creates a 2048-bit RSA key pair and issues an X"
  },
  {
    "API": "iot:CreateMitigationAction",
    "EventSource": "iot",
    "EventName": "CreateMitigationAction",
    "Description": "Defines an action that can be applied to audit findings by using StartAuditMitigationActionsTask"
  },
  {
    "API": "iot:CreateOtaUpdate",
    "EventSource": "iot",
    "EventName": "CreateOtaUpdate",
    "Description": "Creates an IoT OTA update on a target group of things or groups"
  },
  {
    "API": "iot:CreatePackage",
    "EventSource": "iot",
    "EventName": "CreatePackage",
    "Description": "Creates an IoT software package that can be deployed to your fleet"
  },
  {
    "API": "iot:CreatePackageVersion",
    "EventSource": "iot",
    "EventName": "CreatePackageVersion",
    "Description": "Creates a new version for an existing IoT software package"
  },
  {
    "API": "iot:CreatePolicy",
    "EventSource": "iot",
    "EventName": "CreatePolicy",
    "Description": "Creates an IoT policy"
  },
  {
    "API": "iot:CreatePolicyVersion",
    "EventSource": "iot",
    "EventName": "CreatePolicyVersion",
    "Description": "Creates a new version of the specified IoT policy"
  },
  {
    "API": "iot:CreateProvisioningClaim",
    "EventSource": "iot",
    "EventName": "CreateProvisioningClaim",
    "Description": "Creates a provisioning claim"
  },
  {
    "API": "iot:CreateProvisioningTemplate",
    "EventSource": "iot",
    "EventName": "CreateProvisioningTemplate",
    "Description": "Creates a provisioning template"
  },
  {
    "API": "iot:CreateProvisioningTemplateVersion",
    "EventSource": "iot",
    "EventName": "CreateProvisioningTemplateVersion",
    "Description": "Creates a new version of a provisioning template"
  },
  {
    "API": "iot:CreateRoleAlias",
    "EventSource": "iot",
    "EventName": "CreateRoleAlias",
    "Description": "Creates a role alias"
  },
  {
    "API": "iot:CreateScheduledAudit",
    "EventSource": "iot",
    "EventName": "CreateScheduledAudit",
    "Description": "Creates a scheduled audit that is run at a specified time interval"
  },
  {
    "API": "iot:CreateSecurityProfile",
    "EventSource": "iot",
    "EventName": "CreateSecurityProfile",
    "Description": "Creates a Device Defender security profile"
  },
  {
    "API": "iot:CreateStream",
    "EventSource": "iot",
    "EventName": "CreateStream",
    "Description": "Creates a stream for delivering one or more large files in chunks over MQTT"
  },
  {
    "API": "iot:CreateThing",
    "EventSource": "iot",
    "EventName": "CreateThing",
    "Description": "Creates a thing record in the registry"
  },
  {
    "API": "iot:CreateThingGroup",
    "EventSource": "iot",
    "EventName": "CreateThingGroup",
    "Description": "Create a thing group"
  },
  {
    "API": "iot:CreateThingType",
    "EventSource": "iot",
    "EventName": "CreateThingType",
    "Description": "Creates a new thing type"
  },
  {
    "API": "iot:CreateTopicRule",
    "EventSource": "iot",
    "EventName": "CreateTopicRule",
    "Description": "Creates a rule"
  },
  {
    "API": "iot:CreateTopicRuleDestination",
    "EventSource": "iot",
    "EventName": "CreateTopicRuleDestination",
    "Description": "Creates a topic rule destination"
  },
  {
    "API": "iot:DeleteAccountAuditConfiguration",
    "EventSource": "iot",
    "EventName": "DeleteAccountAuditConfiguration",
    "Description": "Restores the default settings for Device Defender audits for this account"
  },
  {
    "API": "iot:DeleteAuditSuppression",
    "EventSource": "iot",
    "EventName": "DeleteAuditSuppression",
    "Description": "Deletes a Device Defender audit suppression"
  },
  {
    "API": "iot:DeleteAuthorizer",
    "EventSource": "iot",
    "EventName": "DeleteAuthorizer",
    "Description": "Deletes an authorizer"
  },
  {
    "API": "iot:DeleteBillingGroup",
    "EventSource": "iot",
    "EventName": "DeleteBillingGroup",
    "Description": "Deletes the billing group"
  },
  {
    "API": "iot:DeleteCaCertificate",
    "EventSource": "iot",
    "EventName": "DeleteCaCertificate",
    "Description": "Deletes a registered CA certificate"
  },
  {
    "API": "iot:DeleteCertificate",
    "EventSource": "iot",
    "EventName": "DeleteCertificate",
    "Description": "Deletes the specified certificate"
  },
  {
    "API": "iot:DeleteCertificateProvider",
    "EventSource": "iot",
    "EventName": "DeleteCertificateProvider",
    "Description": "Deletes a certificate provider"
  },
  {
    "API": "iot:DeleteCustomMetric",
    "EventSource": "iot",
    "EventName": "DeleteCustomMetric",
    "Description": "Deletes a Device Defender detect custom metric"
  },
  {
    "API": "iot:DeleteDimension",
    "EventSource": "iot",
    "EventName": "DeleteDimension",
    "Description": "Removes the specified dimension from your Amazon Web Services accounts"
  },
  {
    "API": "iot:DeleteDomainConfiguration",
    "EventSource": "iot",
    "EventName": "DeleteDomainConfiguration",
    "Description": "Deletes the specified domain configuration"
  },
  {
    "API": "iot:DeleteDynamicThingGroup",
    "EventSource": "iot",
    "EventName": "DeleteDynamicThingGroup",
    "Description": "Deletes a dynamic thing group"
  },
  {
    "API": "iot:DeleteFleetMetric",
    "EventSource": "iot",
    "EventName": "DeleteFleetMetric",
    "Description": "Deletes the specified fleet metric"
  },
  {
    "API": "iot:DeleteJob",
    "EventSource": "iot",
    "EventName": "DeleteJob",
    "Description": "Deletes a job and its related job executions"
  },
  {
    "API": "iot:DeleteJobExecution",
    "EventSource": "iot",
    "EventName": "DeleteJobExecution",
    "Description": "Deletes a job execution"
  },
  {
    "API": "iot:DeleteJobTemplate",
    "EventSource": "iot",
    "EventName": "DeleteJobTemplate",
    "Description": "Deletes the specified job template"
  },
  {
    "API": "iot:DeleteMitigationAction",
    "EventSource": "iot",
    "EventName": "DeleteMitigationAction",
    "Description": "Deletes a defined mitigation action from your Amazon Web Services accounts"
  },
  {
    "API": "iot:DeleteOtaUpdate",
    "EventSource": "iot",
    "EventName": "DeleteOtaUpdate",
    "Description": "Delete an OTA update"
  },
  {
    "API": "iot:DeletePackage",
    "EventSource": "iot",
    "EventName": "DeletePackage",
    "Description": "Deletes a specific version from a software package"
  },
  {
    "API": "iot:DeletePackageVersion",
    "EventSource": "iot",
    "EventName": "DeletePackageVersion",
    "Description": "Deletes a specific version from a software package"
  },
  {
    "API": "iot:DeletePolicy",
    "EventSource": "iot",
    "EventName": "DeletePolicy",
    "Description": "Deletes the specified policy"
  },
  {
    "API": "iot:DeletePolicyVersion",
    "EventSource": "iot",
    "EventName": "DeletePolicyVersion",
    "Description": "Deletes the specified version of the specified policy"
  },
  {
    "API": "iot:DeleteProvisioningTemplate",
    "EventSource": "iot",
    "EventName": "DeleteProvisioningTemplate",
    "Description": "Deletes a provisioning template"
  },
  {
    "API": "iot:DeleteProvisioningTemplateVersion",
    "EventSource": "iot",
    "EventName": "DeleteProvisioningTemplateVersion",
    "Description": "Deletes a provisioning template version"
  },
  {
    "API": "iot:DeleteRegistrationCode",
    "EventSource": "iot",
    "EventName": "DeleteRegistrationCode",
    "Description": "Deletes a CA certificate registration code"
  },
  {
    "API": "iot:DeleteRoleAlias",
    "EventSource": "iot",
    "EventName": "DeleteRoleAlias",
    "Description": "Deletes a role alias"
  },
  {
    "API": "iot:DeleteScheduledAudit",
    "EventSource": "iot",
    "EventName": "DeleteScheduledAudit",
    "Description": "Deletes a scheduled audit"
  },
  {
    "API": "iot:DeleteSecurityProfile",
    "EventSource": "iot",
    "EventName": "DeleteSecurityProfile",
    "Description": "Deletes a Device Defender security profile"
  },
  {
    "API": "iot:DeleteStream",
    "EventSource": "iot",
    "EventName": "DeleteStream",
    "Description": "Deletes a stream"
  },
  {
    "API": "iot:DeleteThing",
    "EventSource": "iot",
    "EventName": "DeleteThing",
    "Description": "Deletes the specified thing"
  },
  {
    "API": "iot:DeleteThingGroup",
    "EventSource": "iot",
    "EventName": "DeleteThingGroup",
    "Description": "Deletes a thing group"
  },
  {
    "API": "iot:DeleteThingType",
    "EventSource": "iot",
    "EventName": "DeleteThingType",
    "Description": "Deletes the specified thing type"
  },
  {
    "API": "iot:DeleteTopicRule",
    "EventSource": "iot",
    "EventName": "DeleteTopicRule",
    "Description": "Deletes the rule"
  },
  {
    "API": "iot:DeleteTopicRuleDestination",
    "EventSource": "iot",
    "EventName": "DeleteTopicRuleDestination",
    "Description": "Deletes a topic rule destination"
  },
  {
    "API": "iot:DeleteV2LoggingLevel",
    "EventSource": "iot",
    "EventName": "DeleteV2LoggingLevel",
    "Description": "Deletes a logging level"
  },
  {
    "API": "iot:DeprecateThingType",
    "EventSource": "iot",
    "EventName": "DeprecateThingType",
    "Description": "Deprecates a thing type"
  },
  {
    "API": "iot:DescribeAccountAuditConfiguration",
    "EventSource": "iot",
    "EventName": "DescribeAccountAuditConfiguration",
    "Description": "Gets information about the Device Defender audit settings for this account"
  },
  {
    "API": "iot:DescribeAuditFinding",
    "EventSource": "iot",
    "EventName": "DescribeAuditFinding",
    "Description": "Gets information about a single audit finding"
  },
  {
    "API": "iot:DescribeAuditMitigationActionsTask",
    "EventSource": "iot",
    "EventName": "DescribeAuditMitigationActionsTask",
    "Description": "Gets information about an audit mitigation task that is used to apply mitigation actions to a set of audit findings"
  },
  {
    "API": "iot:DescribeAuditSuppression",
    "EventSource": "iot",
    "EventName": "DescribeAuditSuppression",
    "Description": "Gets information about a Device Defender audit suppression"
  },
  {
    "API": "iot:DescribeAuditTask",
    "EventSource": "iot",
    "EventName": "DescribeAuditTask",
    "Description": "Gets information about a Device Defender audit"
  },
  {
    "API": "iot:DescribeAuthorizer",
    "EventSource": "iot",
    "EventName": "DescribeAuthorizer",
    "Description": "Describes an authorizer"
  },
  {
    "API": "iot:DescribeBillingGroup",
    "EventSource": "iot",
    "EventName": "DescribeBillingGroup",
    "Description": "Returns information about a billing group"
  },
  {
    "API": "iot:DescribeCaCertificate",
    "EventSource": "iot",
    "EventName": "DescribeCaCertificate",
    "Description": "Describes a registered CA certificate"
  },
  {
    "API": "iot:DescribeCertificate",
    "EventSource": "iot",
    "EventName": "DescribeCertificate",
    "Description": "Gets information about the specified certificate"
  },
  {
    "API": "iot:DescribeCertificateProvider",
    "EventSource": "iot",
    "EventName": "DescribeCertificateProvider",
    "Description": "Describes a certificate provider"
  },
  {
    "API": "iot:DescribeCustomMetric",
    "EventSource": "iot",
    "EventName": "DescribeCustomMetric",
    "Description": "Gets information about a Device Defender detect custom metric"
  },
  {
    "API": "iot:DescribeDefaultAuthorizer",
    "EventSource": "iot",
    "EventName": "DescribeDefaultAuthorizer",
    "Description": "Describes the default authorizer"
  },
  {
    "API": "iot:DescribeDetectMitigationActionsTask",
    "EventSource": "iot",
    "EventName": "DescribeDetectMitigationActionsTask",
    "Description": "Gets information about a Device Defender ML Detect mitigation action"
  },
  {
    "API": "iot:DescribeDimension",
    "EventSource": "iot",
    "EventName": "DescribeDimension",
    "Description": "Provides details about a dimension that is defined in your Amazon Web Services accounts"
  },
  {
    "API": "iot:DescribeDomainConfiguration",
    "EventSource": "iot",
    "EventName": "DescribeDomainConfiguration",
    "Description": "Gets summary information about a domain configuration"
  },
  {
    "API": "iot:DescribeEndpoint",
    "EventSource": "iot",
    "EventName": "DescribeEndpoint",
    "Description": "Returns or creates a unique endpoint specific to the Amazon Web Services account making the call"
  },
  {
    "API": "iot:DescribeEventConfigurations",
    "EventSource": "iot",
    "EventName": "DescribeEventConfigurations",
    "Description": "Describes event configurations"
  },
  {
    "API": "iot:DescribeFleetMetric",
    "EventSource": "iot",
    "EventName": "DescribeFleetMetric",
    "Description": "Gets information about the specified fleet metric"
  },
  {
    "API": "iot:DescribeIndex",
    "EventSource": "iot",
    "EventName": "DescribeIndex",
    "Description": "Describes a search index"
  },
  {
    "API": "iot:DescribeJob",
    "EventSource": "iot",
    "EventName": "DescribeJob",
    "Description": "Describes a job"
  },
  {
    "API": "iot:DescribeJobExecution",
    "EventSource": "iot",
    "EventName": "DescribeJobExecution",
    "Description": "Describes a job execution"
  },
  {
    "API": "iot:DescribeJobTemplate",
    "EventSource": "iot",
    "EventName": "DescribeJobTemplate",
    "Description": "Returns information about a job template"
  },
  {
    "API": "iot:DescribeManagedJobTemplate",
    "EventSource": "iot",
    "EventName": "DescribeManagedJobTemplate",
    "Description": "View details of a managed job template"
  },
  {
    "API": "iot:DescribeMitigationAction",
    "EventSource": "iot",
    "EventName": "DescribeMitigationAction",
    "Description": "Gets information about a mitigation action"
  },
  {
    "API": "iot:DescribeProvisioningTemplate",
    "EventSource": "iot",
    "EventName": "DescribeProvisioningTemplate",
    "Description": "Returns information about a provisioning template"
  },
  {
    "API": "iot:DescribeProvisioningTemplateVersion",
    "EventSource": "iot",
    "EventName": "DescribeProvisioningTemplateVersion",
    "Description": "Returns information about a provisioning template version"
  },
  {
    "API": "iot:DescribeRoleAlias",
    "EventSource": "iot",
    "EventName": "DescribeRoleAlias",
    "Description": "Describes a role alias"
  },
  {
    "API": "iot:DescribeScheduledAudit",
    "EventSource": "iot",
    "EventName": "DescribeScheduledAudit",
    "Description": "Gets information about a scheduled audit"
  },
  {
    "API": "iot:DescribeSecurityProfile",
    "EventSource": "iot",
    "EventName": "DescribeSecurityProfile",
    "Description": "Gets information about a Device Defender security profile"
  },
  {
    "API": "iot:DescribeStream",
    "EventSource": "iot",
    "EventName": "DescribeStream",
    "Description": "Gets information about a stream"
  },
  {
    "API": "iot:DescribeThing",
    "EventSource": "iot",
    "EventName": "DescribeThing",
    "Description": "Gets information about the specified thing"
  },
  {
    "API": "iot:DescribeThingGroup",
    "EventSource": "iot",
    "EventName": "DescribeThingGroup",
    "Description": "Describe a thing group"
  },
  {
    "API": "iot:DescribeThingRegistrationTask",
    "EventSource": "iot",
    "EventName": "DescribeThingRegistrationTask",
    "Description": "Describes a bulk thing provisioning task"
  },
  {
    "API": "iot:DescribeThingType",
    "EventSource": "iot",
    "EventName": "DescribeThingType",
    "Description": "Gets information about the specified thing type"
  },
  {
    "API": "iot:DetachPolicy",
    "EventSource": "iot",
    "EventName": "DetachPolicy",
    "Description": "Detaches a policy from the specified target"
  },
  {
    "API": "iot:DetachPrincipalPolicy",
    "EventSource": "iot",
    "EventName": "DetachPrincipalPolicy",
    "Description": "Removes the specified policy from the specified certificate"
  },
  {
    "API": "iot:DetachSecurityProfile",
    "EventSource": "iot",
    "EventName": "DetachSecurityProfile",
    "Description": "Disassociates a Device Defender security profile from a thing group or from this account"
  },
  {
    "API": "iot:DetachThingPrincipal",
    "EventSource": "iot",
    "EventName": "DetachThingPrincipal",
    "Description": "Detaches the specified principal from the specified thing"
  },
  {
    "API": "iot:DisableTopicRule",
    "EventSource": "iot",
    "EventName": "DisableTopicRule",
    "Description": "Disables the rule"
  },
  {
    "API": "iot:EnableTopicRule",
    "EventSource": "iot",
    "EventName": "EnableTopicRule",
    "Description": "Enables the rule"
  },
  {
    "API": "iot:GeneratePresignedUrl",
    "EventSource": "iot",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "iot:GetBehaviorModelTrainingSummaries",
    "EventSource": "iot",
    "EventName": "GetBehaviorModelTrainingSummaries",
    "Description": "Returns a Device Defender's ML Detect Security Profile training model's status"
  },
  {
    "API": "iot:GetBucketsAggregation",
    "EventSource": "iot",
    "EventName": "GetBucketsAggregation",
    "Description": "Aggregates on indexed data with search queries pertaining to particular fields"
  },
  {
    "API": "iot:GetCardinality",
    "EventSource": "iot",
    "EventName": "GetCardinality",
    "Description": "Returns the approximate count of unique values that match the query"
  },
  {
    "API": "iot:GetEffectivePolicies",
    "EventSource": "iot",
    "EventName": "GetEffectivePolicies",
    "Description": "Gets a list of the policies that have an effect on the authorization behavior of the specified device when it connects to the IoT device gateway"
  },
  {
    "API": "iot:GetIndexingConfiguration",
    "EventSource": "iot",
    "EventName": "GetIndexingConfiguration",
    "Description": "Gets the indexing configuration"
  },
  {
    "API": "iot:GetJobDocument",
    "EventSource": "iot",
    "EventName": "GetJobDocument",
    "Description": "Gets a job document"
  },
  {
    "API": "iot:GetLoggingOptions",
    "EventSource": "iot",
    "EventName": "GetLoggingOptions",
    "Description": "Gets the logging options"
  },
  {
    "API": "iot:GetOtaUpdate",
    "EventSource": "iot",
    "EventName": "GetOtaUpdate",
    "Description": "Gets an OTA update"
  },
  {
    "API": "iot:GetPackage",
    "EventSource": "iot",
    "EventName": "GetPackage",
    "Description": "Gets information about the specified software package"
  },
  {
    "API": "iot:GetPackageConfiguration",
    "EventSource": "iot",
    "EventName": "GetPackageConfiguration",
    "Description": "Gets information about the specified software package's configuration"
  },
  {
    "API": "iot:GetPackageVersion",
    "EventSource": "iot",
    "EventName": "GetPackageVersion",
    "Description": "Gets information about the specified package version"
  },
  {
    "API": "iot:GetPercentiles",
    "EventSource": "iot",
    "EventName": "GetPercentiles",
    "Description": "Groups the aggregated values that match the query into percentile groupings"
  },
  {
    "API": "iot:GetPolicy",
    "EventSource": "iot",
    "EventName": "GetPolicy",
    "Description": "Gets information about the specified policy with the policy document of the default version"
  },
  {
    "API": "iot:GetPolicyVersion",
    "EventSource": "iot",
    "EventName": "GetPolicyVersion",
    "Description": "Gets information about the specified policy version"
  },
  {
    "API": "iot:GetRegistrationCode",
    "EventSource": "iot",
    "EventName": "GetRegistrationCode",
    "Description": "Gets a registration code used to register a CA certificate with IoT"
  },
  {
    "API": "iot:GetStatistics",
    "EventSource": "iot",
    "EventName": "GetStatistics",
    "Description": "Returns the count, average, sum, minimum, maximum, sum of squares, variance, and standard deviation for the specified aggregated field"
  },
  {
    "API": "iot:GetTopicRule",
    "EventSource": "iot",
    "EventName": "GetTopicRule",
    "Description": "Gets information about the rule"
  },
  {
    "API": "iot:GetTopicRuleDestination",
    "EventSource": "iot",
    "EventName": "GetTopicRuleDestination",
    "Description": "Gets information about a topic rule destination"
  },
  {
    "API": "iot:GetV2LoggingOptions",
    "EventSource": "iot",
    "EventName": "GetV2LoggingOptions",
    "Description": "Gets the fine grained logging options"
  },
  {
    "API": "iot:ListActiveViolations",
    "EventSource": "iot",
    "EventName": "ListActiveViolations",
    "Description": "Lists the active violations for a given Device Defender security profile"
  },
  {
    "API": "iot:ListAttachedPolicies",
    "EventSource": "iot",
    "EventName": "ListAttachedPolicies",
    "Description": "Lists the policies attached to the specified thing group"
  },
  {
    "API": "iot:ListAuditFindings",
    "EventSource": "iot",
    "EventName": "ListAuditFindings",
    "Description": "Lists the findings (results) of a Device Defender audit or of the audits performed during a specified time period"
  },
  {
    "API": "iot:ListAuditMitigationActionsExecutions",
    "EventSource": "iot",
    "EventName": "ListAuditMitigationActionsExecutions",
    "Description": "Gets the status of audit mitigation action tasks that were executed"
  },
  {
    "API": "iot:ListAuditMitigationActionsTasks",
    "EventSource": "iot",
    "EventName": "ListAuditMitigationActionsTasks",
    "Description": "Gets a list of audit mitigation action tasks that match the specified filters"
  },
  {
    "API": "iot:ListAuditSuppressions",
    "EventSource": "iot",
    "EventName": "ListAuditSuppressions",
    "Description": "Lists your Device Defender audit listings"
  },
  {
    "API": "iot:ListAuditTasks",
    "EventSource": "iot",
    "EventName": "ListAuditTasks",
    "Description": "Lists the Device Defender audits that have been performed during a given time period"
  },
  {
    "API": "iot:ListAuthorizers",
    "EventSource": "iot",
    "EventName": "ListAuthorizers",
    "Description": "Lists the authorizers registered in your account"
  },
  {
    "API": "iot:ListBillingGroups",
    "EventSource": "iot",
    "EventName": "ListBillingGroups",
    "Description": "Lists the billing groups you have created"
  },
  {
    "API": "iot:ListCaCertificates",
    "EventSource": "iot",
    "EventName": "ListCaCertificates",
    "Description": "Lists the CA certificates registered for your Amazon Web Services account"
  },
  {
    "API": "iot:ListCertificateProviders",
    "EventSource": "iot",
    "EventName": "ListCertificateProviders",
    "Description": "Lists all your certificate providers in your Amazon Web Services account"
  },
  {
    "API": "iot:ListCertificates",
    "EventSource": "iot",
    "EventName": "ListCertificates",
    "Description": "Lists the certificates registered in your Amazon Web Services account"
  },
  {
    "API": "iot:ListCertificatesByCa",
    "EventSource": "iot",
    "EventName": "ListCertificatesByCa",
    "Description": "List the device certificates signed by the specified CA certificate"
  },
  {
    "API": "iot:ListCustomMetrics",
    "EventSource": "iot",
    "EventName": "ListCustomMetrics",
    "Description": "Lists your Device Defender detect custom metrics"
  },
  {
    "API": "iot:ListDetectMitigationActionsExecutions",
    "EventSource": "iot",
    "EventName": "ListDetectMitigationActionsExecutions",
    "Description": "Lists mitigation actions executions for a Device Defender ML Detect Security Profile"
  },
  {
    "API": "iot:ListDetectMitigationActionsTasks",
    "EventSource": "iot",
    "EventName": "ListDetectMitigationActionsTasks",
    "Description": "List of Device Defender ML Detect mitigation actions tasks"
  },
  {
    "API": "iot:ListDimensions",
    "EventSource": "iot",
    "EventName": "ListDimensions",
    "Description": "List the set of dimensions that are defined for your Amazon Web Services accounts"
  },
  {
    "API": "iot:ListDomainConfigurations",
    "EventSource": "iot",
    "EventName": "ListDomainConfigurations",
    "Description": "Gets a list of domain configurations for the user"
  },
  {
    "API": "iot:ListFleetMetrics",
    "EventSource": "iot",
    "EventName": "ListFleetMetrics",
    "Description": "Lists all your fleet metrics"
  },
  {
    "API": "iot:ListIndices",
    "EventSource": "iot",
    "EventName": "ListIndices",
    "Description": "Lists the search indices"
  },
  {
    "API": "iot:ListJobExecutionsForJob",
    "EventSource": "iot",
    "EventName": "ListJobExecutionsForJob",
    "Description": "Lists the job executions for a job"
  },
  {
    "API": "iot:ListJobExecutionsForThing",
    "EventSource": "iot",
    "EventName": "ListJobExecutionsForThing",
    "Description": "Lists the job executions for the specified thing"
  },
  {
    "API": "iot:ListJobTemplates",
    "EventSource": "iot",
    "EventName": "ListJobTemplates",
    "Description": "Returns a list of job templates"
  },
  {
    "API": "iot:ListJobs",
    "EventSource": "iot",
    "EventName": "ListJobs",
    "Description": "Lists jobs"
  },
  {
    "API": "iot:ListManagedJobTemplates",
    "EventSource": "iot",
    "EventName": "ListManagedJobTemplates",
    "Description": "Returns a list of managed job templates"
  },
  {
    "API": "iot:ListMetricValues",
    "EventSource": "iot",
    "EventName": "ListMetricValues",
    "Description": "Lists the values reported for an IoT Device Defender metric (device-side metric, cloud-side metric, or custom metric) by the given thing during the specified time period"
  },
  {
    "API": "iot:ListMitigationActions",
    "EventSource": "iot",
    "EventName": "ListMitigationActions",
    "Description": "Gets a list of all mitigation actions that match the specified filter criteria"
  },
  {
    "API": "iot:ListOtaUpdates",
    "EventSource": "iot",
    "EventName": "ListOtaUpdates",
    "Description": "Lists OTA updates"
  },
  {
    "API": "iot:ListOutgoingCertificates",
    "EventSource": "iot",
    "EventName": "ListOutgoingCertificates",
    "Description": "Lists certificates that are being transferred but not yet accepted"
  },
  {
    "API": "iot:ListPackageVersions",
    "EventSource": "iot",
    "EventName": "ListPackageVersions",
    "Description": "Lists the software package versions associated to the account"
  },
  {
    "API": "iot:ListPackages",
    "EventSource": "iot",
    "EventName": "ListPackages",
    "Description": "Lists the software packages associated to the account"
  },
  {
    "API": "iot:ListPolicies",
    "EventSource": "iot",
    "EventName": "ListPolicies",
    "Description": "Lists your policies"
  },
  {
    "API": "iot:ListPolicyPrincipals",
    "EventSource": "iot",
    "EventName": "ListPolicyPrincipals",
    "Description": "Lists the principals associated with the specified policy"
  },
  {
    "API": "iot:ListPolicyVersions",
    "EventSource": "iot",
    "EventName": "ListPolicyVersions",
    "Description": "Lists the versions of the specified policy and identifies the default version"
  },
  {
    "API": "iot:ListPrincipalPolicies",
    "EventSource": "iot",
    "EventName": "ListPrincipalPolicies",
    "Description": "Lists the policies attached to the specified principal"
  },
  {
    "API": "iot:ListPrincipalThings",
    "EventSource": "iot",
    "EventName": "ListPrincipalThings",
    "Description": "Lists the things associated with the specified principal"
  },
  {
    "API": "iot:ListProvisioningTemplateVersions",
    "EventSource": "iot",
    "EventName": "ListProvisioningTemplateVersions",
    "Description": "A list of provisioning template versions"
  },
  {
    "API": "iot:ListProvisioningTemplates",
    "EventSource": "iot",
    "EventName": "ListProvisioningTemplates",
    "Description": "Lists the provisioning templates in your Amazon Web Services account"
  },
  {
    "API": "iot:ListRelatedResourcesForAuditFinding",
    "EventSource": "iot",
    "EventName": "ListRelatedResourcesForAuditFinding",
    "Description": "The related resources of an Audit finding"
  },
  {
    "API": "iot:ListRoleAliases",
    "EventSource": "iot",
    "EventName": "ListRoleAliases",
    "Description": "Lists the role aliases registered in your account"
  },
  {
    "API": "iot:ListScheduledAudits",
    "EventSource": "iot",
    "EventName": "ListScheduledAudits",
    "Description": "Lists all of your scheduled audits"
  },
  {
    "API": "iot:ListSecurityProfiles",
    "EventSource": "iot",
    "EventName": "ListSecurityProfiles",
    "Description": "Lists the Device Defender security profiles you've created"
  },
  {
    "API": "iot:ListSecurityProfilesForTarget",
    "EventSource": "iot",
    "EventName": "ListSecurityProfilesForTarget",
    "Description": "Lists the Device Defender security profiles attached to a target (thing group)"
  },
  {
    "API": "iot:ListStreams",
    "EventSource": "iot",
    "EventName": "ListStreams",
    "Description": "Lists all of the streams in your Amazon Web Services account"
  },
  {
    "API": "iot:ListTagsForResource",
    "EventSource": "iot",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags (metadata) you have assigned to the resource"
  },
  {
    "API": "iot:ListTargetsForPolicy",
    "EventSource": "iot",
    "EventName": "ListTargetsForPolicy",
    "Description": "List targets for the specified policy"
  },
  {
    "API": "iot:ListTargetsForSecurityProfile",
    "EventSource": "iot",
    "EventName": "ListTargetsForSecurityProfile",
    "Description": "Lists the targets (thing groups) associated with a given Device Defender security profile"
  },
  {
    "API": "iot:ListThingGroups",
    "EventSource": "iot",
    "EventName": "ListThingGroups",
    "Description": "List the thing groups in your account"
  },
  {
    "API": "iot:ListThingGroupsForThing",
    "EventSource": "iot",
    "EventName": "ListThingGroupsForThing",
    "Description": "List the thing groups to which the specified thing belongs"
  },
  {
    "API": "iot:ListThingPrincipals",
    "EventSource": "iot",
    "EventName": "ListThingPrincipals",
    "Description": "Lists the principals associated with the specified thing"
  },
  {
    "API": "iot:ListThingRegistrationTaskReports",
    "EventSource": "iot",
    "EventName": "ListThingRegistrationTaskReports",
    "Description": "Information about the thing registration tasks"
  },
  {
    "API": "iot:ListThingRegistrationTasks",
    "EventSource": "iot",
    "EventName": "ListThingRegistrationTasks",
    "Description": "List bulk thing provisioning tasks"
  },
  {
    "API": "iot:ListThingTypes",
    "EventSource": "iot",
    "EventName": "ListThingTypes",
    "Description": "Lists the existing thing types"
  },
  {
    "API": "iot:ListThings",
    "EventSource": "iot",
    "EventName": "ListThings",
    "Description": "Lists your things"
  },
  {
    "API": "iot:ListThingsInBillingGroup",
    "EventSource": "iot",
    "EventName": "ListThingsInBillingGroup",
    "Description": "Lists the things you have added to the given billing group"
  },
  {
    "API": "iot:ListThingsInThingGroup",
    "EventSource": "iot",
    "EventName": "ListThingsInThingGroup",
    "Description": "Lists the things in the specified group"
  },
  {
    "API": "iot:ListTopicRuleDestinations",
    "EventSource": "iot",
    "EventName": "ListTopicRuleDestinations",
    "Description": "Lists all the topic rule destinations in your Amazon Web Services account"
  },
  {
    "API": "iot:ListTopicRules",
    "EventSource": "iot",
    "EventName": "ListTopicRules",
    "Description": "Lists the rules for the specific topic"
  },
  {
    "API": "iot:ListV2LoggingLevels",
    "EventSource": "iot",
    "EventName": "ListV2LoggingLevels",
    "Description": "Lists logging levels"
  },
  {
    "API": "iot:ListViolationEvents",
    "EventSource": "iot",
    "EventName": "ListViolationEvents",
    "Description": "Lists the Device Defender security profile violations discovered during the given time period"
  },
  {
    "API": "iot:PutVerificationStateOnViolation",
    "EventSource": "iot",
    "EventName": "PutVerificationStateOnViolation",
    "Description": "Set a verification state and provide a description of that verification state on a violation (detect alarm)"
  },
  {
    "API": "iot:RegisterCaCertificate",
    "EventSource": "iot",
    "EventName": "RegisterCaCertificate",
    "Description": "Registers a CA certificate with Amazon Web Services IoT Core"
  },
  {
    "API": "iot:RegisterCertificate",
    "EventSource": "iot",
    "EventName": "RegisterCertificate",
    "Description": "Registers a device certificate with IoT in the same `certificate mode <https://docs"
  },
  {
    "API": "iot:RegisterCertificateWithoutCa",
    "EventSource": "iot",
    "EventName": "RegisterCertificateWithoutCa",
    "Description": "Register a certificate that does not have a certificate authority (CA)"
  },
  {
    "API": "iot:RegisterThing",
    "EventSource": "iot",
    "EventName": "RegisterThing",
    "Description": "Provisions a thing in the device registry"
  },
  {
    "API": "iot:RejectCertificateTransfer",
    "EventSource": "iot",
    "EventName": "RejectCertificateTransfer",
    "Description": "Rejects a pending certificate transfer"
  },
  {
    "API": "iot:RemoveThingFromBillingGroup",
    "EventSource": "iot",
    "EventName": "RemoveThingFromBillingGroup",
    "Description": "Removes the given thing from the billing group"
  },
  {
    "API": "iot:RemoveThingFromThingGroup",
    "EventSource": "iot",
    "EventName": "RemoveThingFromThingGroup",
    "Description": "Remove the specified thing from the specified group"
  },
  {
    "API": "iot:ReplaceTopicRule",
    "EventSource": "iot",
    "EventName": "ReplaceTopicRule",
    "Description": "Replaces the rule"
  },
  {
    "API": "iot:SearchIndex",
    "EventSource": "iot",
    "EventName": "SearchIndex",
    "Description": "The query search index"
  },
  {
    "API": "iot:SetDefaultAuthorizer",
    "EventSource": "iot",
    "EventName": "SetDefaultAuthorizer",
    "Description": "Sets the default authorizer"
  },
  {
    "API": "iot:SetDefaultPolicyVersion",
    "EventSource": "iot",
    "EventName": "SetDefaultPolicyVersion",
    "Description": "Sets the specified version of the specified policy as the policy's default (operative) version"
  },
  {
    "API": "iot:SetLoggingOptions",
    "EventSource": "iot",
    "EventName": "SetLoggingOptions",
    "Description": "Sets the logging options"
  },
  {
    "API": "iot:SetV2LoggingLevel",
    "EventSource": "iot",
    "EventName": "SetV2LoggingLevel",
    "Description": "Sets the logging level"
  },
  {
    "API": "iot:SetV2LoggingOptions",
    "EventSource": "iot",
    "EventName": "SetV2LoggingOptions",
    "Description": "Sets the logging options for the V2 logging service"
  },
  {
    "API": "iot:StartAuditMitigationActionsTask",
    "EventSource": "iot",
    "EventName": "StartAuditMitigationActionsTask",
    "Description": "Starts a task that applies a set of mitigation actions to the specified target"
  },
  {
    "API": "iot:StartDetectMitigationActionsTask",
    "EventSource": "iot",
    "EventName": "StartDetectMitigationActionsTask",
    "Description": "Starts a Device Defender ML Detect mitigation actions task"
  },
  {
    "API": "iot:StartOnDemandAuditTask",
    "EventSource": "iot",
    "EventName": "StartOnDemandAuditTask",
    "Description": "Starts an on-demand Device Defender audit"
  },
  {
    "API": "iot:StartThingRegistrationTask",
    "EventSource": "iot",
    "EventName": "StartThingRegistrationTask",
    "Description": "Creates a bulk thing provisioning task"
  },
  {
    "API": "iot:StopThingRegistrationTask",
    "EventSource": "iot",
    "EventName": "StopThingRegistrationTask",
    "Description": "Cancels a bulk thing provisioning task"
  },
  {
    "API": "iot:TagResource",
    "EventSource": "iot",
    "EventName": "TagResource",
    "Description": "Adds to or modifies the tags of the given resource"
  },
  {
    "API": "iot:TestAuthorization",
    "EventSource": "iot",
    "EventName": "TestAuthorization",
    "Description": "Tests if a specified principal is authorized to perform an IoT action on a specified resource"
  },
  {
    "API": "iot:TestInvokeAuthorizer",
    "EventSource": "iot",
    "EventName": "TestInvokeAuthorizer",
    "Description": "Tests a custom authorization behavior by invoking a specified custom authorizer"
  },
  {
    "API": "iot:TransferCertificate",
    "EventSource": "iot",
    "EventName": "TransferCertificate",
    "Description": "Transfers the specified certificate to the specified Amazon Web Services account"
  },
  {
    "API": "iot:UntagResource",
    "EventSource": "iot",
    "EventName": "UntagResource",
    "Description": "Removes the given tags (metadata) from the resource"
  },
  {
    "API": "iot:UpdateAccountAuditConfiguration",
    "EventSource": "iot",
    "EventName": "UpdateAccountAuditConfiguration",
    "Description": "Configures or reconfigures the Device Defender audit settings for this account"
  },
  {
    "API": "iot:UpdateAuditSuppression",
    "EventSource": "iot",
    "EventName": "UpdateAuditSuppression",
    "Description": "Updates a Device Defender audit suppression"
  },
  {
    "API": "iot:UpdateAuthorizer",
    "EventSource": "iot",
    "EventName": "UpdateAuthorizer",
    "Description": "Updates an authorizer"
  },
  {
    "API": "iot:UpdateBillingGroup",
    "EventSource": "iot",
    "EventName": "UpdateBillingGroup",
    "Description": "Updates information about the billing group"
  },
  {
    "API": "iot:UpdateCaCertificate",
    "EventSource": "iot",
    "EventName": "UpdateCaCertificate",
    "Description": "Updates a registered CA certificate"
  },
  {
    "API": "iot:UpdateCertificate",
    "EventSource": "iot",
    "EventName": "UpdateCertificate",
    "Description": "Updates the status of the specified certificate"
  },
  {
    "API": "iot:UpdateCertificateProvider",
    "EventSource": "iot",
    "EventName": "UpdateCertificateProvider",
    "Description": "Updates a certificate provider"
  },
  {
    "API": "iot:UpdateCustomMetric",
    "EventSource": "iot",
    "EventName": "UpdateCustomMetric",
    "Description": "Updates a Device Defender detect custom metric"
  },
  {
    "API": "iot:UpdateDimension",
    "EventSource": "iot",
    "EventName": "UpdateDimension",
    "Description": "Updates the definition for a dimension"
  },
  {
    "API": "iot:UpdateDomainConfiguration",
    "EventSource": "iot",
    "EventName": "UpdateDomainConfiguration",
    "Description": "Updates values stored in the domain configuration"
  },
  {
    "API": "iot:UpdateDynamicThingGroup",
    "EventSource": "iot",
    "EventName": "UpdateDynamicThingGroup",
    "Description": "Updates a dynamic thing group"
  },
  {
    "API": "iot:UpdateEventConfigurations",
    "EventSource": "iot",
    "EventName": "UpdateEventConfigurations",
    "Description": "Updates the event configurations"
  },
  {
    "API": "iot:UpdateFleetMetric",
    "EventSource": "iot",
    "EventName": "UpdateFleetMetric",
    "Description": "Updates the data for a fleet metric"
  },
  {
    "API": "iot:UpdateIndexingConfiguration",
    "EventSource": "iot",
    "EventName": "UpdateIndexingConfiguration",
    "Description": "Updates the search configuration"
  },
  {
    "API": "iot:UpdateJob",
    "EventSource": "iot",
    "EventName": "UpdateJob",
    "Description": "Updates supported fields of the specified job"
  },
  {
    "API": "iot:UpdateMitigationAction",
    "EventSource": "iot",
    "EventName": "UpdateMitigationAction",
    "Description": "Updates the definition for the specified mitigation action"
  },
  {
    "API": "iot:UpdatePackage",
    "EventSource": "iot",
    "EventName": "UpdatePackage",
    "Description": "Updates the supported fields for a specific software package"
  },
  {
    "API": "iot:UpdatePackageConfiguration",
    "EventSource": "iot",
    "EventName": "UpdatePackageConfiguration",
    "Description": "Updates the software package configuration"
  },
  {
    "API": "iot:UpdatePackageVersion",
    "EventSource": "iot",
    "EventName": "UpdatePackageVersion",
    "Description": "Updates the supported fields for a specific package version"
  },
  {
    "API": "iot:UpdateProvisioningTemplate",
    "EventSource": "iot",
    "EventName": "UpdateProvisioningTemplate",
    "Description": "Updates a provisioning template"
  },
  {
    "API": "iot:UpdateRoleAlias",
    "EventSource": "iot",
    "EventName": "UpdateRoleAlias",
    "Description": "Updates a role alias"
  },
  {
    "API": "iot:UpdateScheduledAudit",
    "EventSource": "iot",
    "EventName": "UpdateScheduledAudit",
    "Description": "Updates a scheduled audit, including which checks are performed and how often the audit takes place"
  },
  {
    "API": "iot:UpdateSecurityProfile",
    "EventSource": "iot",
    "EventName": "UpdateSecurityProfile",
    "Description": "Updates a Device Defender security profile"
  },
  {
    "API": "iot:UpdateStream",
    "EventSource": "iot",
    "EventName": "UpdateStream",
    "Description": "Updates an existing stream"
  },
  {
    "API": "iot:UpdateThing",
    "EventSource": "iot",
    "EventName": "UpdateThing",
    "Description": "Updates the data for a thing"
  },
  {
    "API": "iot:UpdateThingGroup",
    "EventSource": "iot",
    "EventName": "UpdateThingGroup",
    "Description": "Update a thing group"
  },
  {
    "API": "iot:UpdateThingGroupsForThing",
    "EventSource": "iot",
    "EventName": "UpdateThingGroupsForThing",
    "Description": "Updates the groups to which the thing belongs"
  },
  {
    "API": "iot:UpdateTopicRuleDestination",
    "EventSource": "iot",
    "EventName": "UpdateTopicRuleDestination",
    "Description": "Updates a topic rule destination"
  },
  {
    "API": "iot:ValidateSecurityProfileBehaviors",
    "EventSource": "iot",
    "EventName": "ValidateSecurityProfileBehaviors",
    "Description": "Validates a Device Defender security profile behaviors specification"
  },
  {
    "API": "iot-data:DeleteThingShadow",
    "EventSource": "iot-data",
    "EventName": "DeleteThingShadow",
    "Description": "Deletes the shadow for the specified thing"
  },
  {
    "API": "iot-data:GeneratePresignedUrl",
    "EventSource": "iot-data",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "iot-data:GetRetainedMessage",
    "EventSource": "iot-data",
    "EventName": "GetRetainedMessage",
    "Description": "Gets the details of a single retained message for the specified topic"
  },
  {
    "API": "iot-data:GetThingShadow",
    "EventSource": "iot-data",
    "EventName": "GetThingShadow",
    "Description": "Gets the shadow for the specified thing"
  },
  {
    "API": "iot-data:ListNamedShadowsForThing",
    "EventSource": "iot-data",
    "EventName": "ListNamedShadowsForThing",
    "Description": "Lists the shadows for the specified thing"
  },
  {
    "API": "iot-data:ListRetainedMessages",
    "EventSource": "iot-data",
    "EventName": "ListRetainedMessages",
    "Description": "Lists summary information about the retained messages stored for the account"
  },
  {
    "API": "iot-data:UpdateThingShadow",
    "EventSource": "iot-data",
    "EventName": "UpdateThingShadow",
    "Description": "Updates the shadow for the specified thing"
  },
  {
    "API": "iot-jobs-data:DescribeJobExecution",
    "EventSource": "iot-jobs-data",
    "EventName": "DescribeJobExecution",
    "Description": "Gets details of a job execution"
  },
  {
    "API": "iot-jobs-data:GeneratePresignedUrl",
    "EventSource": "iot-jobs-data",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "iot-jobs-data:GetPendingJobExecutions",
    "EventSource": "iot-jobs-data",
    "EventName": "GetPendingJobExecutions",
    "Description": "Gets the list of all jobs for a thing that are not in a terminal status"
  },
  {
    "API": "iot-jobs-data:StartNextPendingJobExecution",
    "EventSource": "iot-jobs-data",
    "EventName": "StartNextPendingJobExecution",
    "Description": "Gets and starts the next pending (status IN_PROGRESS or QUEUED) job execution for a thing"
  },
  {
    "API": "iot-jobs-data:UpdateJobExecution",
    "EventSource": "iot-jobs-data",
    "EventName": "UpdateJobExecution",
    "Description": "Updates the status of a job execution"
  },
  {
    "API": "iot1click-devices:ClaimDevicesByClaimCode",
    "EventSource": "iot1click-devices",
    "EventName": "ClaimDevicesByClaimCode",
    "Description": "Adds device(s) to your account (i"
  },
  {
    "API": "iot1click-devices:DescribeDevice",
    "EventSource": "iot1click-devices",
    "EventName": "DescribeDevice",
    "Description": "Given a device ID, returns a DescribeDeviceResponse object describing the details of the device"
  },
  {
    "API": "iot1click-devices:FinalizeDeviceClaim",
    "EventSource": "iot1click-devices",
    "EventName": "FinalizeDeviceClaim",
    "Description": "Given a device ID, finalizes the claim request for the associated device"
  },
  {
    "API": "iot1click-devices:GeneratePresignedUrl",
    "EventSource": "iot1click-devices",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "iot1click-devices:GetDeviceMethods",
    "EventSource": "iot1click-devices",
    "EventName": "GetDeviceMethods",
    "Description": "Given a device ID, returns the invokable methods associated with the device"
  },
  {
    "API": "iot1click-devices:InitiateDeviceClaim",
    "EventSource": "iot1click-devices",
    "EventName": "InitiateDeviceClaim",
    "Description": "Given a device ID, initiates a claim request for the associated device"
  },
  {
    "API": "iot1click-devices:InvokeDeviceMethod",
    "EventSource": "iot1click-devices",
    "EventName": "InvokeDeviceMethod",
    "Description": "Given a device ID, issues a request to invoke a named device method (with possible parameters)"
  },
  {
    "API": "iot1click-devices:ListDeviceEvents",
    "EventSource": "iot1click-devices",
    "EventName": "ListDeviceEvents",
    "Description": "Using a device ID, returns a DeviceEventsResponse object containing an array of events for the device"
  },
  {
    "API": "iot1click-devices:ListDevices",
    "EventSource": "iot1click-devices",
    "EventName": "ListDevices",
    "Description": "Lists the 1-Click compatible devices associated with your AWS account"
  },
  {
    "API": "iot1click-devices:ListTagsForResource",
    "EventSource": "iot1click-devices",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags associated with the specified resource ARN"
  },
  {
    "API": "iot1click-devices:TagResource",
    "EventSource": "iot1click-devices",
    "EventName": "TagResource",
    "Description": "Adds or updates the tags associated with the resource ARN"
  },
  {
    "API": "iot1click-devices:UnclaimDevice",
    "EventSource": "iot1click-devices",
    "EventName": "UnclaimDevice",
    "Description": "Disassociates a device from your AWS account using its device ID"
  },
  {
    "API": "iot1click-devices:UntagResource",
    "EventSource": "iot1click-devices",
    "EventName": "UntagResource",
    "Description": "Using tag keys, deletes the tags (key/value pairs) associated with the specified resource ARN"
  },
  {
    "API": "iot1click-devices:UpdateDeviceState",
    "EventSource": "iot1click-devices",
    "EventName": "UpdateDeviceState",
    "Description": "Using a Boolean value (true or false), this operation enables or disables the device given a device ID"
  },
  {
    "API": "iot1click-projects:AssociateDeviceWithPlacement",
    "EventSource": "iot1click-projects",
    "EventName": "AssociateDeviceWithPlacement",
    "Description": "Associates a physical device with a placement"
  },
  {
    "API": "iot1click-projects:CreatePlacement",
    "EventSource": "iot1click-projects",
    "EventName": "CreatePlacement",
    "Description": "Creates an empty placement"
  },
  {
    "API": "iot1click-projects:CreateProject",
    "EventSource": "iot1click-projects",
    "EventName": "CreateProject",
    "Description": "Creates an empty project with a placement template"
  },
  {
    "API": "iot1click-projects:DeletePlacement",
    "EventSource": "iot1click-projects",
    "EventName": "DeletePlacement",
    "Description": "Deletes a placement"
  },
  {
    "API": "iot1click-projects:DeleteProject",
    "EventSource": "iot1click-projects",
    "EventName": "DeleteProject",
    "Description": "Deletes a project"
  },
  {
    "API": "iot1click-projects:DescribePlacement",
    "EventSource": "iot1click-projects",
    "EventName": "DescribePlacement",
    "Description": "Describes a placement in a project"
  },
  {
    "API": "iot1click-projects:DescribeProject",
    "EventSource": "iot1click-projects",
    "EventName": "DescribeProject",
    "Description": "Returns an object describing a project"
  },
  {
    "API": "iot1click-projects:DisassociateDeviceFromPlacement",
    "EventSource": "iot1click-projects",
    "EventName": "DisassociateDeviceFromPlacement",
    "Description": "Removes a physical device from a placement"
  },
  {
    "API": "iot1click-projects:GeneratePresignedUrl",
    "EventSource": "iot1click-projects",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "iot1click-projects:GetDevicesInPlacement",
    "EventSource": "iot1click-projects",
    "EventName": "GetDevicesInPlacement",
    "Description": "Returns an object enumerating the devices in a placement"
  },
  {
    "API": "iot1click-projects:ListPlacements",
    "EventSource": "iot1click-projects",
    "EventName": "ListPlacements",
    "Description": "Lists the placement(s) of a project"
  },
  {
    "API": "iot1click-projects:ListProjects",
    "EventSource": "iot1click-projects",
    "EventName": "ListProjects",
    "Description": "Lists the AWS IoT 1-Click project(s) associated with your AWS account and region"
  },
  {
    "API": "iot1click-projects:ListTagsForResource",
    "EventSource": "iot1click-projects",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags (metadata key/value pairs) which you have assigned to the resource"
  },
  {
    "API": "iot1click-projects:TagResource",
    "EventSource": "iot1click-projects",
    "EventName": "TagResource",
    "Description": "Creates or modifies tags for a resource"
  },
  {
    "API": "iot1click-projects:UntagResource",
    "EventSource": "iot1click-projects",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags (metadata key/value pairs) from a resource"
  },
  {
    "API": "iot1click-projects:UpdatePlacement",
    "EventSource": "iot1click-projects",
    "EventName": "UpdatePlacement",
    "Description": "Updates a placement with the given attributes"
  },
  {
    "API": "iot1click-projects:UpdateProject",
    "EventSource": "iot1click-projects",
    "EventName": "UpdateProject",
    "Description": "Updates a project associated with your AWS account and region"
  },
  {
    "API": "iotanalytics:BatchPutMessage",
    "EventSource": "iotanalytics",
    "EventName": "BatchPutMessage",
    "Description": "Sends messages to a channel"
  },
  {
    "API": "iotanalytics:CancelPipelineReprocessing",
    "EventSource": "iotanalytics",
    "EventName": "CancelPipelineReprocessing",
    "Description": "Cancels the reprocessing of data through the pipeline"
  },
  {
    "API": "iotanalytics:CreateChannel",
    "EventSource": "iotanalytics",
    "EventName": "CreateChannel",
    "Description": "Used to create a channel"
  },
  {
    "API": "iotanalytics:CreateDataset",
    "EventSource": "iotanalytics",
    "EventName": "CreateDataset",
    "Description": "Used to create a dataset"
  },
  {
    "API": "iotanalytics:CreateDatasetContent",
    "EventSource": "iotanalytics",
    "EventName": "CreateDatasetContent",
    "Description": "Creates the content of a dataset by applying a ``queryAction`` (a SQL query) or a ``containerAction`` (executing a containerized application)"
  },
  {
    "API": "iotanalytics:CreateDatastore",
    "EventSource": "iotanalytics",
    "EventName": "CreateDatastore",
    "Description": "Creates a data store, which is a repository for messages"
  },
  {
    "API": "iotanalytics:CreatePipeline",
    "EventSource": "iotanalytics",
    "EventName": "CreatePipeline",
    "Description": "Creates a pipeline"
  },
  {
    "API": "iotanalytics:DeleteChannel",
    "EventSource": "iotanalytics",
    "EventName": "DeleteChannel",
    "Description": "Deletes the specified channel"
  },
  {
    "API": "iotanalytics:DeleteDataset",
    "EventSource": "iotanalytics",
    "EventName": "DeleteDataset",
    "Description": "Deletes the specified dataset"
  },
  {
    "API": "iotanalytics:DeleteDatasetContent",
    "EventSource": "iotanalytics",
    "EventName": "DeleteDatasetContent",
    "Description": "Deletes the content of the specified dataset"
  },
  {
    "API": "iotanalytics:DeleteDatastore",
    "EventSource": "iotanalytics",
    "EventName": "DeleteDatastore",
    "Description": "Deletes the specified data store"
  },
  {
    "API": "iotanalytics:DeletePipeline",
    "EventSource": "iotanalytics",
    "EventName": "DeletePipeline",
    "Description": "Deletes the specified pipeline"
  },
  {
    "API": "iotanalytics:DescribeChannel",
    "EventSource": "iotanalytics",
    "EventName": "DescribeChannel",
    "Description": "Retrieves information about a channel"
  },
  {
    "API": "iotanalytics:DescribeDataset",
    "EventSource": "iotanalytics",
    "EventName": "DescribeDataset",
    "Description": "Retrieves information about a dataset"
  },
  {
    "API": "iotanalytics:DescribeDatastore",
    "EventSource": "iotanalytics",
    "EventName": "DescribeDatastore",
    "Description": "Retrieves information about a data store"
  },
  {
    "API": "iotanalytics:DescribeLoggingOptions",
    "EventSource": "iotanalytics",
    "EventName": "DescribeLoggingOptions",
    "Description": "Retrieves the current settings of the IoT Analytics logging options"
  },
  {
    "API": "iotanalytics:DescribePipeline",
    "EventSource": "iotanalytics",
    "EventName": "DescribePipeline",
    "Description": "Retrieves information about a pipeline"
  },
  {
    "API": "iotanalytics:GeneratePresignedUrl",
    "EventSource": "iotanalytics",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "iotanalytics:GetDatasetContent",
    "EventSource": "iotanalytics",
    "EventName": "GetDatasetContent",
    "Description": "Retrieves the contents of a dataset as presigned URIs"
  },
  {
    "API": "iotanalytics:ListChannels",
    "EventSource": "iotanalytics",
    "EventName": "ListChannels",
    "Description": "Retrieves a list of channels"
  },
  {
    "API": "iotanalytics:ListDatasetContents",
    "EventSource": "iotanalytics",
    "EventName": "ListDatasetContents",
    "Description": "Lists information about dataset contents that have been created"
  },
  {
    "API": "iotanalytics:ListDatasets",
    "EventSource": "iotanalytics",
    "EventName": "ListDatasets",
    "Description": "Retrieves information about datasets"
  },
  {
    "API": "iotanalytics:ListDatastores",
    "EventSource": "iotanalytics",
    "EventName": "ListDatastores",
    "Description": "Retrieves a list of data stores"
  },
  {
    "API": "iotanalytics:ListPipelines",
    "EventSource": "iotanalytics",
    "EventName": "ListPipelines",
    "Description": "Retrieves a list of pipelines"
  },
  {
    "API": "iotanalytics:ListTagsForResource",
    "EventSource": "iotanalytics",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags (metadata) that you have assigned to the resource"
  },
  {
    "API": "iotanalytics:PutLoggingOptions",
    "EventSource": "iotanalytics",
    "EventName": "PutLoggingOptions",
    "Description": "Sets or updates the IoT Analytics logging options"
  },
  {
    "API": "iotanalytics:RunPipelineActivity",
    "EventSource": "iotanalytics",
    "EventName": "RunPipelineActivity",
    "Description": "Simulates the results of running a pipeline activity on a message payload"
  },
  {
    "API": "iotanalytics:SampleChannelData",
    "EventSource": "iotanalytics",
    "EventName": "SampleChannelData",
    "Description": "Retrieves a sample of messages from the specified channel ingested during the specified timeframe"
  },
  {
    "API": "iotanalytics:StartPipelineReprocessing",
    "EventSource": "iotanalytics",
    "EventName": "StartPipelineReprocessing",
    "Description": "Starts the reprocessing of raw message data through the pipeline"
  },
  {
    "API": "iotanalytics:TagResource",
    "EventSource": "iotanalytics",
    "EventName": "TagResource",
    "Description": "Adds to or modifies the tags of the given resource"
  },
  {
    "API": "iotanalytics:UntagResource",
    "EventSource": "iotanalytics",
    "EventName": "UntagResource",
    "Description": "Removes the given tags (metadata) from the resource"
  },
  {
    "API": "iotanalytics:UpdateChannel",
    "EventSource": "iotanalytics",
    "EventName": "UpdateChannel",
    "Description": "Used to update the settings of a channel"
  },
  {
    "API": "iotanalytics:UpdateDataset",
    "EventSource": "iotanalytics",
    "EventName": "UpdateDataset",
    "Description": "Updates the settings of a dataset"
  },
  {
    "API": "iotanalytics:UpdateDatastore",
    "EventSource": "iotanalytics",
    "EventName": "UpdateDatastore",
    "Description": "Used to update the settings of a data store"
  },
  {
    "API": "iotanalytics:UpdatePipeline",
    "EventSource": "iotanalytics",
    "EventName": "UpdatePipeline",
    "Description": "Updates the settings of a pipeline"
  },
  {
    "API": "iotdeviceadvisor:CreateSuiteDefinition",
    "EventSource": "iotdeviceadvisor",
    "EventName": "CreateSuiteDefinition",
    "Description": "Creates a Device Advisor test suite"
  },
  {
    "API": "iotdeviceadvisor:DeleteSuiteDefinition",
    "EventSource": "iotdeviceadvisor",
    "EventName": "DeleteSuiteDefinition",
    "Description": "Deletes a Device Advisor test suite"
  },
  {
    "API": "iotdeviceadvisor:GeneratePresignedUrl",
    "EventSource": "iotdeviceadvisor",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "iotdeviceadvisor:GetEndpoint",
    "EventSource": "iotdeviceadvisor",
    "EventName": "GetEndpoint",
    "Description": "Gets information about an Device Advisor endpoint"
  },
  {
    "API": "iotdeviceadvisor:GetSuiteDefinition",
    "EventSource": "iotdeviceadvisor",
    "EventName": "GetSuiteDefinition",
    "Description": "Gets information about a Device Advisor test suite"
  },
  {
    "API": "iotdeviceadvisor:GetSuiteRun",
    "EventSource": "iotdeviceadvisor",
    "EventName": "GetSuiteRun",
    "Description": "Gets information about a Device Advisor test suite run"
  },
  {
    "API": "iotdeviceadvisor:GetSuiteRunReport",
    "EventSource": "iotdeviceadvisor",
    "EventName": "GetSuiteRunReport",
    "Description": "Gets a report download link for a successful Device Advisor qualifying test suite run"
  },
  {
    "API": "iotdeviceadvisor:ListSuiteDefinitions",
    "EventSource": "iotdeviceadvisor",
    "EventName": "ListSuiteDefinitions",
    "Description": "Lists the Device Advisor test suites you have created"
  },
  {
    "API": "iotdeviceadvisor:ListSuiteRuns",
    "EventSource": "iotdeviceadvisor",
    "EventName": "ListSuiteRuns",
    "Description": "Lists runs of the specified Device Advisor test suite"
  },
  {
    "API": "iotdeviceadvisor:ListTagsForResource",
    "EventSource": "iotdeviceadvisor",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags attached to an IoT Device Advisor resource"
  },
  {
    "API": "iotdeviceadvisor:StartSuiteRun",
    "EventSource": "iotdeviceadvisor",
    "EventName": "StartSuiteRun",
    "Description": "Starts a Device Advisor test suite run"
  },
  {
    "API": "iotdeviceadvisor:StopSuiteRun",
    "EventSource": "iotdeviceadvisor",
    "EventName": "StopSuiteRun",
    "Description": "Stops a Device Advisor test suite run that is currently running"
  },
  {
    "API": "iotdeviceadvisor:TagResource",
    "EventSource": "iotdeviceadvisor",
    "EventName": "TagResource",
    "Description": "Adds to and modifies existing tags of an IoT Device Advisor resource"
  },
  {
    "API": "iotdeviceadvisor:UntagResource",
    "EventSource": "iotdeviceadvisor",
    "EventName": "UntagResource",
    "Description": "Removes tags from an IoT Device Advisor resource"
  },
  {
    "API": "iotdeviceadvisor:UpdateSuiteDefinition",
    "EventSource": "iotdeviceadvisor",
    "EventName": "UpdateSuiteDefinition",
    "Description": "Updates a Device Advisor test suite"
  },
  {
    "API": "iotevents:CreateAlarmModel",
    "EventSource": "iotevents",
    "EventName": "CreateAlarmModel",
    "Description": "Creates an alarm model to monitor an AWS IoT Events input attribute"
  },
  {
    "API": "iotevents:CreateDetectorModel",
    "EventSource": "iotevents",
    "EventName": "CreateDetectorModel",
    "Description": "Creates a detector model"
  },
  {
    "API": "iotevents:CreateInput",
    "EventSource": "iotevents",
    "EventName": "CreateInput",
    "Description": "Creates an input"
  },
  {
    "API": "iotevents:DeleteAlarmModel",
    "EventSource": "iotevents",
    "EventName": "DeleteAlarmModel",
    "Description": "Deletes an alarm model"
  },
  {
    "API": "iotevents:DeleteDetectorModel",
    "EventSource": "iotevents",
    "EventName": "DeleteDetectorModel",
    "Description": "Deletes a detector model"
  },
  {
    "API": "iotevents:DeleteInput",
    "EventSource": "iotevents",
    "EventName": "DeleteInput",
    "Description": "Deletes an input"
  },
  {
    "API": "iotevents:DescribeAlarmModel",
    "EventSource": "iotevents",
    "EventName": "DescribeAlarmModel",
    "Description": "Retrieves information about an alarm model"
  },
  {
    "API": "iotevents:DescribeDetectorModel",
    "EventSource": "iotevents",
    "EventName": "DescribeDetectorModel",
    "Description": "Describes a detector model"
  },
  {
    "API": "iotevents:DescribeDetectorModelAnalysis",
    "EventSource": "iotevents",
    "EventName": "DescribeDetectorModelAnalysis",
    "Description": "Retrieves runtime information about a detector model analysis"
  },
  {
    "API": "iotevents:DescribeInput",
    "EventSource": "iotevents",
    "EventName": "DescribeInput",
    "Description": "Describes an input"
  },
  {
    "API": "iotevents:DescribeLoggingOptions",
    "EventSource": "iotevents",
    "EventName": "DescribeLoggingOptions",
    "Description": "Retrieves the current settings of the AWS IoT Events logging options"
  },
  {
    "API": "iotevents:GeneratePresignedUrl",
    "EventSource": "iotevents",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "iotevents:GetDetectorModelAnalysisResults",
    "EventSource": "iotevents",
    "EventName": "GetDetectorModelAnalysisResults",
    "Description": "Retrieves one or more analysis results of the detector model"
  },
  {
    "API": "iotevents:ListAlarmModelVersions",
    "EventSource": "iotevents",
    "EventName": "ListAlarmModelVersions",
    "Description": "Lists all the versions of an alarm model"
  },
  {
    "API": "iotevents:ListAlarmModels",
    "EventSource": "iotevents",
    "EventName": "ListAlarmModels",
    "Description": "Lists the alarm models that you created"
  },
  {
    "API": "iotevents:ListDetectorModelVersions",
    "EventSource": "iotevents",
    "EventName": "ListDetectorModelVersions",
    "Description": "Lists all the versions of a detector model"
  },
  {
    "API": "iotevents:ListDetectorModels",
    "EventSource": "iotevents",
    "EventName": "ListDetectorModels",
    "Description": "Lists the detector models you have created"
  },
  {
    "API": "iotevents:ListInputRoutings",
    "EventSource": "iotevents",
    "EventName": "ListInputRoutings",
    "Description": "Lists one or more input routings"
  },
  {
    "API": "iotevents:ListInputs",
    "EventSource": "iotevents",
    "EventName": "ListInputs",
    "Description": "Lists the inputs you have created"
  },
  {
    "API": "iotevents:ListTagsForResource",
    "EventSource": "iotevents",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags (metadata) you have assigned to the resource"
  },
  {
    "API": "iotevents:PutLoggingOptions",
    "EventSource": "iotevents",
    "EventName": "PutLoggingOptions",
    "Description": "Sets or updates the AWS IoT Events logging options"
  },
  {
    "API": "iotevents:StartDetectorModelAnalysis",
    "EventSource": "iotevents",
    "EventName": "StartDetectorModelAnalysis",
    "Description": "Performs an analysis of your detector model"
  },
  {
    "API": "iotevents:TagResource",
    "EventSource": "iotevents",
    "EventName": "TagResource",
    "Description": "Adds to or modifies the tags of the given resource"
  },
  {
    "API": "iotevents:UntagResource",
    "EventSource": "iotevents",
    "EventName": "UntagResource",
    "Description": "Removes the given tags (metadata) from the resource"
  },
  {
    "API": "iotevents:UpdateAlarmModel",
    "EventSource": "iotevents",
    "EventName": "UpdateAlarmModel",
    "Description": "Updates an alarm model"
  },
  {
    "API": "iotevents:UpdateDetectorModel",
    "EventSource": "iotevents",
    "EventName": "UpdateDetectorModel",
    "Description": "Updates a detector model"
  },
  {
    "API": "iotevents:UpdateInput",
    "EventSource": "iotevents",
    "EventName": "UpdateInput",
    "Description": "Updates an input"
  },
  {
    "API": "iotevents-data:BatchAcknowledgeAlarm",
    "EventSource": "iotevents-data",
    "EventName": "BatchAcknowledgeAlarm",
    "Description": "Acknowledges one or more alarms"
  },
  {
    "API": "iotevents-data:BatchDeleteDetector",
    "EventSource": "iotevents-data",
    "EventName": "BatchDeleteDetector",
    "Description": "Deletes one or more detectors that were created"
  },
  {
    "API": "iotevents-data:BatchDisableAlarm",
    "EventSource": "iotevents-data",
    "EventName": "BatchDisableAlarm",
    "Description": "Disables one or more alarms"
  },
  {
    "API": "iotevents-data:BatchEnableAlarm",
    "EventSource": "iotevents-data",
    "EventName": "BatchEnableAlarm",
    "Description": "Enables one or more alarms"
  },
  {
    "API": "iotevents-data:BatchPutMessage",
    "EventSource": "iotevents-data",
    "EventName": "BatchPutMessage",
    "Description": "Sends a set of messages to the IoT Events system"
  },
  {
    "API": "iotevents-data:BatchResetAlarm",
    "EventSource": "iotevents-data",
    "EventName": "BatchResetAlarm",
    "Description": "Resets one or more alarms"
  },
  {
    "API": "iotevents-data:BatchSnoozeAlarm",
    "EventSource": "iotevents-data",
    "EventName": "BatchSnoozeAlarm",
    "Description": "Changes one or more alarms to the snooze mode"
  },
  {
    "API": "iotevents-data:BatchUpdateDetector",
    "EventSource": "iotevents-data",
    "EventName": "BatchUpdateDetector",
    "Description": "Updates the state, variable values, and timer settings of one or more detectors (instances) of a specified detector model"
  },
  {
    "API": "iotevents-data:DescribeAlarm",
    "EventSource": "iotevents-data",
    "EventName": "DescribeAlarm",
    "Description": "Retrieves information about an alarm"
  },
  {
    "API": "iotevents-data:DescribeDetector",
    "EventSource": "iotevents-data",
    "EventName": "DescribeDetector",
    "Description": "Returns information about the specified detector (instance)"
  },
  {
    "API": "iotevents-data:GeneratePresignedUrl",
    "EventSource": "iotevents-data",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "iotevents-data:ListAlarms",
    "EventSource": "iotevents-data",
    "EventName": "ListAlarms",
    "Description": "Lists one or more alarms"
  },
  {
    "API": "iotevents-data:ListDetectors",
    "EventSource": "iotevents-data",
    "EventName": "ListDetectors",
    "Description": "Lists detectors (the instances of a detector model)"
  },
  {
    "API": "iotfleethub:CreateApplication",
    "EventSource": "iotfleethub",
    "EventName": "CreateApplication",
    "Description": "Creates a Fleet Hub for IoT Device Management web application"
  },
  {
    "API": "iotfleethub:DeleteApplication",
    "EventSource": "iotfleethub",
    "EventName": "DeleteApplication",
    "Description": "Deletes a Fleet Hub for IoT Device Management web application"
  },
  {
    "API": "iotfleethub:DescribeApplication",
    "EventSource": "iotfleethub",
    "EventName": "DescribeApplication",
    "Description": "Gets information about a Fleet Hub for IoT Device Management web application"
  },
  {
    "API": "iotfleethub:GeneratePresignedUrl",
    "EventSource": "iotfleethub",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "iotfleethub:ListApplications",
    "EventSource": "iotfleethub",
    "EventName": "ListApplications",
    "Description": "Gets a list of Fleet Hub for IoT Device Management web applications for the current account"
  },
  {
    "API": "iotfleethub:ListTagsForResource",
    "EventSource": "iotfleethub",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags for the specified resource"
  },
  {
    "API": "iotfleethub:TagResource",
    "EventSource": "iotfleethub",
    "EventName": "TagResource",
    "Description": "Adds to or modifies the tags of the specified resource"
  },
  {
    "API": "iotfleethub:UntagResource",
    "EventSource": "iotfleethub",
    "EventName": "UntagResource",
    "Description": "Removes the specified tags (metadata) from the resource"
  },
  {
    "API": "iotfleethub:UpdateApplication",
    "EventSource": "iotfleethub",
    "EventName": "UpdateApplication",
    "Description": "Updates information about a Fleet Hub for IoT Device Management web application"
  },
  {
    "API": "iotfleetwise:AssociateVehicleFleet",
    "EventSource": "iotfleetwise",
    "EventName": "AssociateVehicleFleet",
    "Description": "Adds, or associates, a vehicle with a fleet"
  },
  {
    "API": "iotfleetwise:BatchCreateVehicle",
    "EventSource": "iotfleetwise",
    "EventName": "BatchCreateVehicle",
    "Description": "Creates a group, or batch, of vehicles"
  },
  {
    "API": "iotfleetwise:BatchUpdateVehicle",
    "EventSource": "iotfleetwise",
    "EventName": "BatchUpdateVehicle",
    "Description": "Updates a group, or batch, of vehicles"
  },
  {
    "API": "iotfleetwise:CreateCampaign",
    "EventSource": "iotfleetwise",
    "EventName": "CreateCampaign",
    "Description": "Creates an orchestration of data collection rules"
  },
  {
    "API": "iotfleetwise:CreateDecoderManifest",
    "EventSource": "iotfleetwise",
    "EventName": "CreateDecoderManifest",
    "Description": "Creates the decoder manifest associated with a model manifest"
  },
  {
    "API": "iotfleetwise:CreateFleet",
    "EventSource": "iotfleetwise",
    "EventName": "CreateFleet",
    "Description": "Creates a fleet that represents a group of vehicles"
  },
  {
    "API": "iotfleetwise:CreateModelManifest",
    "EventSource": "iotfleetwise",
    "EventName": "CreateModelManifest",
    "Description": "Creates a vehicle model (model manifest) that specifies signals (attributes, branches, sensors, and actuators)"
  },
  {
    "API": "iotfleetwise:CreateSignalCatalog",
    "EventSource": "iotfleetwise",
    "EventName": "CreateSignalCatalog",
    "Description": "Creates a collection of standardized signals that can be reused to create vehicle models"
  },
  {
    "API": "iotfleetwise:CreateVehicle",
    "EventSource": "iotfleetwise",
    "EventName": "CreateVehicle",
    "Description": "Creates a vehicle, which is an instance of a vehicle model (model manifest)"
  },
  {
    "API": "iotfleetwise:DeleteCampaign",
    "EventSource": "iotfleetwise",
    "EventName": "DeleteCampaign",
    "Description": "Deletes a data collection campaign"
  },
  {
    "API": "iotfleetwise:DeleteDecoderManifest",
    "EventSource": "iotfleetwise",
    "EventName": "DeleteDecoderManifest",
    "Description": "Deletes a decoder manifest"
  },
  {
    "API": "iotfleetwise:DeleteFleet",
    "EventSource": "iotfleetwise",
    "EventName": "DeleteFleet",
    "Description": "Deletes a fleet"
  },
  {
    "API": "iotfleetwise:DeleteModelManifest",
    "EventSource": "iotfleetwise",
    "EventName": "DeleteModelManifest",
    "Description": "Deletes a vehicle model (model manifest)"
  },
  {
    "API": "iotfleetwise:DeleteSignalCatalog",
    "EventSource": "iotfleetwise",
    "EventName": "DeleteSignalCatalog",
    "Description": "Deletes a signal catalog"
  },
  {
    "API": "iotfleetwise:DeleteVehicle",
    "EventSource": "iotfleetwise",
    "EventName": "DeleteVehicle",
    "Description": "Deletes a vehicle and removes it from any campaigns"
  },
  {
    "API": "iotfleetwise:DisassociateVehicleFleet",
    "EventSource": "iotfleetwise",
    "EventName": "DisassociateVehicleFleet",
    "Description": "Removes, or disassociates, a vehicle from a fleet"
  },
  {
    "API": "iotfleetwise:GeneratePresignedUrl",
    "EventSource": "iotfleetwise",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "iotfleetwise:GetCampaign",
    "EventSource": "iotfleetwise",
    "EventName": "GetCampaign",
    "Description": "Retrieves information about a campaign"
  },
  {
    "API": "iotfleetwise:GetDecoderManifest",
    "EventSource": "iotfleetwise",
    "EventName": "GetDecoderManifest",
    "Description": "Retrieves information about a created decoder manifest"
  },
  {
    "API": "iotfleetwise:GetEncryptionConfiguration",
    "EventSource": "iotfleetwise",
    "EventName": "GetEncryptionConfiguration",
    "Description": "Retrieves the encryption configuration for resources and data in Amazon Web Services IoT FleetWise"
  },
  {
    "API": "iotfleetwise:GetFleet",
    "EventSource": "iotfleetwise",
    "EventName": "GetFleet",
    "Description": "Retrieves information about a fleet"
  },
  {
    "API": "iotfleetwise:GetLoggingOptions",
    "EventSource": "iotfleetwise",
    "EventName": "GetLoggingOptions",
    "Description": "Retrieves the logging options"
  },
  {
    "API": "iotfleetwise:GetModelManifest",
    "EventSource": "iotfleetwise",
    "EventName": "GetModelManifest",
    "Description": "Retrieves information about a vehicle model (model manifest)"
  },
  {
    "API": "iotfleetwise:GetRegisterAccountStatus",
    "EventSource": "iotfleetwise",
    "EventName": "GetRegisterAccountStatus",
    "Description": "Retrieves information about the status of registering your Amazon Web Services account, IAM, and Amazon Timestream resources so that Amazon Web Services IoT FleetWise can transfer your vehicle data to the Amazon Web Services Cloud"
  },
  {
    "API": "iotfleetwise:GetSignalCatalog",
    "EventSource": "iotfleetwise",
    "EventName": "GetSignalCatalog",
    "Description": "Retrieves information about a signal catalog"
  },
  {
    "API": "iotfleetwise:GetVehicle",
    "EventSource": "iotfleetwise",
    "EventName": "GetVehicle",
    "Description": "Retrieves information about a vehicle"
  },
  {
    "API": "iotfleetwise:GetVehicleStatus",
    "EventSource": "iotfleetwise",
    "EventName": "GetVehicleStatus",
    "Description": "Retrieves information about the status of a vehicle with any associated campaigns"
  },
  {
    "API": "iotfleetwise:ImportDecoderManifest",
    "EventSource": "iotfleetwise",
    "EventName": "ImportDecoderManifest",
    "Description": "Creates a decoder manifest using your existing CAN DBC file from your local device"
  },
  {
    "API": "iotfleetwise:ImportSignalCatalog",
    "EventSource": "iotfleetwise",
    "EventName": "ImportSignalCatalog",
    "Description": "Creates a signal catalog using your existing VSS formatted content from your local device"
  },
  {
    "API": "iotfleetwise:ListCampaigns",
    "EventSource": "iotfleetwise",
    "EventName": "ListCampaigns",
    "Description": "Lists information about created campaigns"
  },
  {
    "API": "iotfleetwise:ListDecoderManifestNetworkInterfaces",
    "EventSource": "iotfleetwise",
    "EventName": "ListDecoderManifestNetworkInterfaces",
    "Description": "Lists the network interfaces specified in a decoder manifest"
  },
  {
    "API": "iotfleetwise:ListDecoderManifestSignals",
    "EventSource": "iotfleetwise",
    "EventName": "ListDecoderManifestSignals",
    "Description": "A list of information about signal decoders specified in a decoder manifest"
  },
  {
    "API": "iotfleetwise:ListDecoderManifests",
    "EventSource": "iotfleetwise",
    "EventName": "ListDecoderManifests",
    "Description": "Lists decoder manifests"
  },
  {
    "API": "iotfleetwise:ListFleets",
    "EventSource": "iotfleetwise",
    "EventName": "ListFleets",
    "Description": "Retrieves information for each created fleet in an Amazon Web Services account"
  },
  {
    "API": "iotfleetwise:ListFleetsForVehicle",
    "EventSource": "iotfleetwise",
    "EventName": "ListFleetsForVehicle",
    "Description": "Retrieves a list of IDs for all fleets that the vehicle is associated with"
  },
  {
    "API": "iotfleetwise:ListModelManifestNodes",
    "EventSource": "iotfleetwise",
    "EventName": "ListModelManifestNodes",
    "Description": "Lists information about nodes specified in a vehicle model (model manifest)"
  },
  {
    "API": "iotfleetwise:ListModelManifests",
    "EventSource": "iotfleetwise",
    "EventName": "ListModelManifests",
    "Description": "Retrieves a list of vehicle models (model manifests)"
  },
  {
    "API": "iotfleetwise:ListSignalCatalogNodes",
    "EventSource": "iotfleetwise",
    "EventName": "ListSignalCatalogNodes",
    "Description": "Lists of information about the signals (nodes) specified in a signal catalog"
  },
  {
    "API": "iotfleetwise:ListSignalCatalogs",
    "EventSource": "iotfleetwise",
    "EventName": "ListSignalCatalogs",
    "Description": "Lists all the created signal catalogs in an Amazon Web Services account"
  },
  {
    "API": "iotfleetwise:ListTagsForResource",
    "EventSource": "iotfleetwise",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags (metadata) you have assigned to the resource"
  },
  {
    "API": "iotfleetwise:ListVehicles",
    "EventSource": "iotfleetwise",
    "EventName": "ListVehicles",
    "Description": "Retrieves a list of summaries of created vehicles"
  },
  {
    "API": "iotfleetwise:ListVehiclesInFleet",
    "EventSource": "iotfleetwise",
    "EventName": "ListVehiclesInFleet",
    "Description": "Retrieves a list of summaries of all vehicles associated with a fleet"
  },
  {
    "API": "iotfleetwise:PutEncryptionConfiguration",
    "EventSource": "iotfleetwise",
    "EventName": "PutEncryptionConfiguration",
    "Description": "Creates or updates the encryption configuration"
  },
  {
    "API": "iotfleetwise:PutLoggingOptions",
    "EventSource": "iotfleetwise",
    "EventName": "PutLoggingOptions",
    "Description": "Creates or updates the logging option"
  },
  {
    "API": "iotfleetwise:RegisterAccount",
    "EventSource": "iotfleetwise",
    "EventName": "RegisterAccount",
    "Description": ""
  },
  {
    "API": "iotfleetwise:TagResource",
    "EventSource": "iotfleetwise",
    "EventName": "TagResource",
    "Description": "Adds to or modifies the tags of the given resource"
  },
  {
    "API": "iotfleetwise:UntagResource",
    "EventSource": "iotfleetwise",
    "EventName": "UntagResource",
    "Description": "Removes the given tags (metadata) from the resource"
  },
  {
    "API": "iotfleetwise:UpdateCampaign",
    "EventSource": "iotfleetwise",
    "EventName": "UpdateCampaign",
    "Description": "Updates a campaign"
  },
  {
    "API": "iotfleetwise:UpdateDecoderManifest",
    "EventSource": "iotfleetwise",
    "EventName": "UpdateDecoderManifest",
    "Description": "Updates a decoder manifest"
  },
  {
    "API": "iotfleetwise:UpdateFleet",
    "EventSource": "iotfleetwise",
    "EventName": "UpdateFleet",
    "Description": "Updates the description of an existing fleet"
  },
  {
    "API": "iotfleetwise:UpdateModelManifest",
    "EventSource": "iotfleetwise",
    "EventName": "UpdateModelManifest",
    "Description": "Updates a vehicle model (model manifest)"
  },
  {
    "API": "iotfleetwise:UpdateSignalCatalog",
    "EventSource": "iotfleetwise",
    "EventName": "UpdateSignalCatalog",
    "Description": "Updates a signal catalog"
  },
  {
    "API": "iotfleetwise:UpdateVehicle",
    "EventSource": "iotfleetwise",
    "EventName": "UpdateVehicle",
    "Description": "Updates a vehicle"
  },
  {
    "API": "iotsecuretunneling:CloseTunnel",
    "EventSource": "iotsecuretunneling",
    "EventName": "CloseTunnel",
    "Description": "Closes a tunnel identified by the unique tunnel id"
  },
  {
    "API": "iotsecuretunneling:DescribeTunnel",
    "EventSource": "iotsecuretunneling",
    "EventName": "DescribeTunnel",
    "Description": "Gets information about a tunnel identified by the unique tunnel id"
  },
  {
    "API": "iotsecuretunneling:GeneratePresignedUrl",
    "EventSource": "iotsecuretunneling",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "iotsecuretunneling:ListTagsForResource",
    "EventSource": "iotsecuretunneling",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags for the specified resource"
  },
  {
    "API": "iotsecuretunneling:ListTunnels",
    "EventSource": "iotsecuretunneling",
    "EventName": "ListTunnels",
    "Description": "List all tunnels for an Amazon Web Services account"
  },
  {
    "API": "iotsecuretunneling:OpenTunnel",
    "EventSource": "iotsecuretunneling",
    "EventName": "OpenTunnel",
    "Description": "Creates a new tunnel, and returns two client access tokens for clients to use to connect to the IoT Secure Tunneling proxy server"
  },
  {
    "API": "iotsecuretunneling:RotateTunnelAccessToken",
    "EventSource": "iotsecuretunneling",
    "EventName": "RotateTunnelAccessToken",
    "Description": "Revokes the current client access token (CAT) and returns new CAT for clients to use when reconnecting to secure tunneling to access the same tunnel"
  },
  {
    "API": "iotsecuretunneling:TagResource",
    "EventSource": "iotsecuretunneling",
    "EventName": "TagResource",
    "Description": "A resource tag"
  },
  {
    "API": "iotsecuretunneling:UntagResource",
    "EventSource": "iotsecuretunneling",
    "EventName": "UntagResource",
    "Description": "Removes a tag from a resource"
  },
  {
    "API": "iotsitewise:AssociateAssets",
    "EventSource": "iotsitewise",
    "EventName": "AssociateAssets",
    "Description": "Associates a child asset with the given parent asset through a hierarchy defined in the parent asset's model"
  },
  {
    "API": "iotsitewise:AssociateTimeSeriesToAssetProperty",
    "EventSource": "iotsitewise",
    "EventName": "AssociateTimeSeriesToAssetProperty",
    "Description": "Associates a time series (data stream) with an asset property"
  },
  {
    "API": "iotsitewise:BatchAssociateProjectAssets",
    "EventSource": "iotsitewise",
    "EventName": "BatchAssociateProjectAssets",
    "Description": "Associates a group (batch) of assets with an IoT SiteWise Monitor project"
  },
  {
    "API": "iotsitewise:BatchDisassociateProjectAssets",
    "EventSource": "iotsitewise",
    "EventName": "BatchDisassociateProjectAssets",
    "Description": "Disassociates a group (batch) of assets from an IoT SiteWise Monitor project"
  },
  {
    "API": "iotsitewise:BatchGetAssetPropertyAggregates",
    "EventSource": "iotsitewise",
    "EventName": "BatchGetAssetPropertyAggregates",
    "Description": "Gets aggregated values (for example, average, minimum, and maximum) for one or more asset properties"
  },
  {
    "API": "iotsitewise:BatchGetAssetPropertyValue",
    "EventSource": "iotsitewise",
    "EventName": "BatchGetAssetPropertyValue",
    "Description": "Gets the current value for one or more asset properties"
  },
  {
    "API": "iotsitewise:BatchGetAssetPropertyValueHistory",
    "EventSource": "iotsitewise",
    "EventName": "BatchGetAssetPropertyValueHistory",
    "Description": "Gets the historical values for one or more asset properties"
  },
  {
    "API": "iotsitewise:BatchPutAssetPropertyValue",
    "EventSource": "iotsitewise",
    "EventName": "BatchPutAssetPropertyValue",
    "Description": "Sends a list of asset property values to IoT SiteWise"
  },
  {
    "API": "iotsitewise:CreateAccessPolicy",
    "EventSource": "iotsitewise",
    "EventName": "CreateAccessPolicy",
    "Description": "Creates an access policy that grants the specified identity (IAM Identity Center user, IAM Identity Center group, or IAM user) access to the specified IoT SiteWise Monitor portal or project resource"
  },
  {
    "API": "iotsitewise:CreateAsset",
    "EventSource": "iotsitewise",
    "EventName": "CreateAsset",
    "Description": "Creates an asset from an existing asset model"
  },
  {
    "API": "iotsitewise:CreateAssetModel",
    "EventSource": "iotsitewise",
    "EventName": "CreateAssetModel",
    "Description": "Creates an asset model from specified property and hierarchy definitions"
  },
  {
    "API": "iotsitewise:CreateAssetModelCompositeModel",
    "EventSource": "iotsitewise",
    "EventName": "CreateAssetModelCompositeModel",
    "Description": "Creates a custom composite model from specified property and hierarchy definitions"
  },
  {
    "API": "iotsitewise:CreateBulkImportJob",
    "EventSource": "iotsitewise",
    "EventName": "CreateBulkImportJob",
    "Description": "Defines a job to ingest data to IoT SiteWise from Amazon S3"
  },
  {
    "API": "iotsitewise:CreateDashboard",
    "EventSource": "iotsitewise",
    "EventName": "CreateDashboard",
    "Description": "Creates a dashboard in an IoT SiteWise Monitor project"
  },
  {
    "API": "iotsitewise:CreateGateway",
    "EventSource": "iotsitewise",
    "EventName": "CreateGateway",
    "Description": "Creates a gateway, which is a virtual or edge device that delivers industrial data streams from local servers to IoT SiteWise"
  },
  {
    "API": "iotsitewise:CreatePortal",
    "EventSource": "iotsitewise",
    "EventName": "CreatePortal",
    "Description": "Creates a portal, which can contain projects and dashboards"
  },
  {
    "API": "iotsitewise:CreateProject",
    "EventSource": "iotsitewise",
    "EventName": "CreateProject",
    "Description": "Creates a project in the specified portal"
  },
  {
    "API": "iotsitewise:DeleteAccessPolicy",
    "EventSource": "iotsitewise",
    "EventName": "DeleteAccessPolicy",
    "Description": "Deletes an access policy that grants the specified identity access to the specified IoT SiteWise Monitor resource"
  },
  {
    "API": "iotsitewise:DeleteAsset",
    "EventSource": "iotsitewise",
    "EventName": "DeleteAsset",
    "Description": "Deletes an asset"
  },
  {
    "API": "iotsitewise:DeleteAssetModel",
    "EventSource": "iotsitewise",
    "EventName": "DeleteAssetModel",
    "Description": "Deletes an asset model"
  },
  {
    "API": "iotsitewise:DeleteAssetModelCompositeModel",
    "EventSource": "iotsitewise",
    "EventName": "DeleteAssetModelCompositeModel",
    "Description": "Deletes a composite model"
  },
  {
    "API": "iotsitewise:DeleteDashboard",
    "EventSource": "iotsitewise",
    "EventName": "DeleteDashboard",
    "Description": "Deletes a dashboard from IoT SiteWise Monitor"
  },
  {
    "API": "iotsitewise:DeleteGateway",
    "EventSource": "iotsitewise",
    "EventName": "DeleteGateway",
    "Description": "Deletes a gateway from IoT SiteWise"
  },
  {
    "API": "iotsitewise:DeletePortal",
    "EventSource": "iotsitewise",
    "EventName": "DeletePortal",
    "Description": "Deletes a portal from IoT SiteWise Monitor"
  },
  {
    "API": "iotsitewise:DeleteProject",
    "EventSource": "iotsitewise",
    "EventName": "DeleteProject",
    "Description": "Deletes a project from IoT SiteWise Monitor"
  },
  {
    "API": "iotsitewise:DeleteTimeSeries",
    "EventSource": "iotsitewise",
    "EventName": "DeleteTimeSeries",
    "Description": "Deletes a time series (data stream)"
  },
  {
    "API": "iotsitewise:DescribeAccessPolicy",
    "EventSource": "iotsitewise",
    "EventName": "DescribeAccessPolicy",
    "Description": "Describes an access policy, which specifies an identity's access to an IoT SiteWise Monitor portal or project"
  },
  {
    "API": "iotsitewise:DescribeAction",
    "EventSource": "iotsitewise",
    "EventName": "DescribeAction",
    "Description": "Retrieves information about an action"
  },
  {
    "API": "iotsitewise:DescribeAsset",
    "EventSource": "iotsitewise",
    "EventName": "DescribeAsset",
    "Description": "Retrieves information about an asset"
  },
  {
    "API": "iotsitewise:DescribeAssetCompositeModel",
    "EventSource": "iotsitewise",
    "EventName": "DescribeAssetCompositeModel",
    "Description": "Retrieves information about an asset composite model (also known as an asset component)"
  },
  {
    "API": "iotsitewise:DescribeAssetModel",
    "EventSource": "iotsitewise",
    "EventName": "DescribeAssetModel",
    "Description": "Retrieves information about an asset model"
  },
  {
    "API": "iotsitewise:DescribeAssetModelCompositeModel",
    "EventSource": "iotsitewise",
    "EventName": "DescribeAssetModelCompositeModel",
    "Description": "Retrieves information about an asset model composite model (also known as an asset model component)"
  },
  {
    "API": "iotsitewise:DescribeAssetProperty",
    "EventSource": "iotsitewise",
    "EventName": "DescribeAssetProperty",
    "Description": "Retrieves information about an asset property"
  },
  {
    "API": "iotsitewise:DescribeBulkImportJob",
    "EventSource": "iotsitewise",
    "EventName": "DescribeBulkImportJob",
    "Description": "Retrieves information about a bulk import job request"
  },
  {
    "API": "iotsitewise:DescribeDashboard",
    "EventSource": "iotsitewise",
    "EventName": "DescribeDashboard",
    "Description": "Retrieves information about a dashboard"
  },
  {
    "API": "iotsitewise:DescribeDefaultEncryptionConfiguration",
    "EventSource": "iotsitewise",
    "EventName": "DescribeDefaultEncryptionConfiguration",
    "Description": "Retrieves information about the default encryption configuration for the Amazon Web Services account in the default or specified Region"
  },
  {
    "API": "iotsitewise:DescribeGateway",
    "EventSource": "iotsitewise",
    "EventName": "DescribeGateway",
    "Description": "Retrieves information about a gateway"
  },
  {
    "API": "iotsitewise:DescribeGatewayCapabilityConfiguration",
    "EventSource": "iotsitewise",
    "EventName": "DescribeGatewayCapabilityConfiguration",
    "Description": "Retrieves information about a gateway capability configuration"
  },
  {
    "API": "iotsitewise:DescribeLoggingOptions",
    "EventSource": "iotsitewise",
    "EventName": "DescribeLoggingOptions",
    "Description": "Retrieves the current IoT SiteWise logging options"
  },
  {
    "API": "iotsitewise:DescribePortal",
    "EventSource": "iotsitewise",
    "EventName": "DescribePortal",
    "Description": "Retrieves information about a portal"
  },
  {
    "API": "iotsitewise:DescribeProject",
    "EventSource": "iotsitewise",
    "EventName": "DescribeProject",
    "Description": "Retrieves information about a project"
  },
  {
    "API": "iotsitewise:DescribeStorageConfiguration",
    "EventSource": "iotsitewise",
    "EventName": "DescribeStorageConfiguration",
    "Description": "Retrieves information about the storage configuration for IoT SiteWise"
  },
  {
    "API": "iotsitewise:DescribeTimeSeries",
    "EventSource": "iotsitewise",
    "EventName": "DescribeTimeSeries",
    "Description": "Retrieves information about a time series (data stream)"
  },
  {
    "API": "iotsitewise:DisassociateAssets",
    "EventSource": "iotsitewise",
    "EventName": "DisassociateAssets",
    "Description": "Disassociates a child asset from the given parent asset through a hierarchy defined in the parent asset's model"
  },
  {
    "API": "iotsitewise:DisassociateTimeSeriesFromAssetProperty",
    "EventSource": "iotsitewise",
    "EventName": "DisassociateTimeSeriesFromAssetProperty",
    "Description": "Disassociates a time series (data stream) from an asset property"
  },
  {
    "API": "iotsitewise:ExecuteAction",
    "EventSource": "iotsitewise",
    "EventName": "ExecuteAction",
    "Description": "Executes an action on a target resource"
  },
  {
    "API": "iotsitewise:ExecuteQuery",
    "EventSource": "iotsitewise",
    "EventName": "ExecuteQuery",
    "Description": "Run SQL queries to retrieve metadata and time-series data from asset models, assets, measurements, metrics, transforms, and aggregates"
  },
  {
    "API": "iotsitewise:GeneratePresignedUrl",
    "EventSource": "iotsitewise",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "iotsitewise:GetAssetPropertyAggregates",
    "EventSource": "iotsitewise",
    "EventName": "GetAssetPropertyAggregates",
    "Description": "Gets aggregated values for an asset property"
  },
  {
    "API": "iotsitewise:GetAssetPropertyValue",
    "EventSource": "iotsitewise",
    "EventName": "GetAssetPropertyValue",
    "Description": "Gets an asset property's current value"
  },
  {
    "API": "iotsitewise:GetAssetPropertyValueHistory",
    "EventSource": "iotsitewise",
    "EventName": "GetAssetPropertyValueHistory",
    "Description": "Gets the history of an asset property's values"
  },
  {
    "API": "iotsitewise:GetInterpolatedAssetPropertyValues",
    "EventSource": "iotsitewise",
    "EventName": "GetInterpolatedAssetPropertyValues",
    "Description": "Get interpolated values for an asset property for a specified time interval, during a period of time"
  },
  {
    "API": "iotsitewise:ListAccessPolicies",
    "EventSource": "iotsitewise",
    "EventName": "ListAccessPolicies",
    "Description": "Retrieves a paginated list of access policies for an identity (an IAM Identity Center user, an IAM Identity Center group, or an IAM user) or an IoT SiteWise Monitor resource (a portal or project)"
  },
  {
    "API": "iotsitewise:ListActions",
    "EventSource": "iotsitewise",
    "EventName": "ListActions",
    "Description": "Retrieves a paginated list of actions for a specific target resource"
  },
  {
    "API": "iotsitewise:ListAssetModelCompositeModels",
    "EventSource": "iotsitewise",
    "EventName": "ListAssetModelCompositeModels",
    "Description": "Retrieves a paginated list of composite models associated with the asset model"
  },
  {
    "API": "iotsitewise:ListAssetModelProperties",
    "EventSource": "iotsitewise",
    "EventName": "ListAssetModelProperties",
    "Description": "Retrieves a paginated list of properties associated with an asset model"
  },
  {
    "API": "iotsitewise:ListAssetModels",
    "EventSource": "iotsitewise",
    "EventName": "ListAssetModels",
    "Description": "Retrieves a paginated list of summaries of all asset models"
  },
  {
    "API": "iotsitewise:ListAssetProperties",
    "EventSource": "iotsitewise",
    "EventName": "ListAssetProperties",
    "Description": "Retrieves a paginated list of properties associated with an asset"
  },
  {
    "API": "iotsitewise:ListAssetRelationships",
    "EventSource": "iotsitewise",
    "EventName": "ListAssetRelationships",
    "Description": "Retrieves a paginated list of asset relationships for an asset"
  },
  {
    "API": "iotsitewise:ListAssets",
    "EventSource": "iotsitewise",
    "EventName": "ListAssets",
    "Description": "Retrieves a paginated list of asset summaries"
  },
  {
    "API": "iotsitewise:ListAssociatedAssets",
    "EventSource": "iotsitewise",
    "EventName": "ListAssociatedAssets",
    "Description": "Retrieves a paginated list of associated assets"
  },
  {
    "API": "iotsitewise:ListBulkImportJobs",
    "EventSource": "iotsitewise",
    "EventName": "ListBulkImportJobs",
    "Description": "Retrieves a paginated list of bulk import job requests"
  },
  {
    "API": "iotsitewise:ListCompositionRelationships",
    "EventSource": "iotsitewise",
    "EventName": "ListCompositionRelationships",
    "Description": "Retrieves a paginated list of composition relationships for an asset model of type ``COMPONENT_MODEL``"
  },
  {
    "API": "iotsitewise:ListDashboards",
    "EventSource": "iotsitewise",
    "EventName": "ListDashboards",
    "Description": "Retrieves a paginated list of dashboards for an IoT SiteWise Monitor project"
  },
  {
    "API": "iotsitewise:ListGateways",
    "EventSource": "iotsitewise",
    "EventName": "ListGateways",
    "Description": "Retrieves a paginated list of gateways"
  },
  {
    "API": "iotsitewise:ListPortals",
    "EventSource": "iotsitewise",
    "EventName": "ListPortals",
    "Description": "Retrieves a paginated list of IoT SiteWise Monitor portals"
  },
  {
    "API": "iotsitewise:ListProjectAssets",
    "EventSource": "iotsitewise",
    "EventName": "ListProjectAssets",
    "Description": "Retrieves a paginated list of assets associated with an IoT SiteWise Monitor project"
  },
  {
    "API": "iotsitewise:ListProjects",
    "EventSource": "iotsitewise",
    "EventName": "ListProjects",
    "Description": "Retrieves a paginated list of projects for an IoT SiteWise Monitor portal"
  },
  {
    "API": "iotsitewise:ListTagsForResource",
    "EventSource": "iotsitewise",
    "EventName": "ListTagsForResource",
    "Description": "Retrieves the list of tags for an IoT SiteWise resource"
  },
  {
    "API": "iotsitewise:ListTimeSeries",
    "EventSource": "iotsitewise",
    "EventName": "ListTimeSeries",
    "Description": "Retrieves a paginated list of time series (data streams)"
  },
  {
    "API": "iotsitewise:PutDefaultEncryptionConfiguration",
    "EventSource": "iotsitewise",
    "EventName": "PutDefaultEncryptionConfiguration",
    "Description": "Sets the default encryption configuration for the Amazon Web Services account"
  },
  {
    "API": "iotsitewise:PutLoggingOptions",
    "EventSource": "iotsitewise",
    "EventName": "PutLoggingOptions",
    "Description": "Sets logging options for IoT SiteWise"
  },
  {
    "API": "iotsitewise:PutStorageConfiguration",
    "EventSource": "iotsitewise",
    "EventName": "PutStorageConfiguration",
    "Description": "Configures storage settings for IoT SiteWise"
  },
  {
    "API": "iotsitewise:TagResource",
    "EventSource": "iotsitewise",
    "EventName": "TagResource",
    "Description": "Adds tags to an IoT SiteWise resource"
  },
  {
    "API": "iotsitewise:UntagResource",
    "EventSource": "iotsitewise",
    "EventName": "UntagResource",
    "Description": "Removes a tag from an IoT SiteWise resource"
  },
  {
    "API": "iotsitewise:UpdateAccessPolicy",
    "EventSource": "iotsitewise",
    "EventName": "UpdateAccessPolicy",
    "Description": "Updates an existing access policy that specifies an identity's access to an IoT SiteWise Monitor portal or project resource"
  },
  {
    "API": "iotsitewise:UpdateAsset",
    "EventSource": "iotsitewise",
    "EventName": "UpdateAsset",
    "Description": "Updates an asset's name"
  },
  {
    "API": "iotsitewise:UpdateAssetModel",
    "EventSource": "iotsitewise",
    "EventName": "UpdateAssetModel",
    "Description": "Updates an asset model and all of the assets that were created from the model"
  },
  {
    "API": "iotsitewise:UpdateAssetModelCompositeModel",
    "EventSource": "iotsitewise",
    "EventName": "UpdateAssetModelCompositeModel",
    "Description": "Updates a composite model and all of the assets that were created from the model"
  },
  {
    "API": "iotsitewise:UpdateAssetProperty",
    "EventSource": "iotsitewise",
    "EventName": "UpdateAssetProperty",
    "Description": "Updates an asset property's alias and notification state"
  },
  {
    "API": "iotsitewise:UpdateDashboard",
    "EventSource": "iotsitewise",
    "EventName": "UpdateDashboard",
    "Description": "Updates an IoT SiteWise Monitor dashboard"
  },
  {
    "API": "iotsitewise:UpdateGateway",
    "EventSource": "iotsitewise",
    "EventName": "UpdateGateway",
    "Description": "Updates a gateway's name"
  },
  {
    "API": "iotsitewise:UpdateGatewayCapabilityConfiguration",
    "EventSource": "iotsitewise",
    "EventName": "UpdateGatewayCapabilityConfiguration",
    "Description": "Updates a gateway capability configuration or defines a new capability configuration"
  },
  {
    "API": "iotsitewise:UpdatePortal",
    "EventSource": "iotsitewise",
    "EventName": "UpdatePortal",
    "Description": "Updates an IoT SiteWise Monitor portal"
  },
  {
    "API": "iotsitewise:UpdateProject",
    "EventSource": "iotsitewise",
    "EventName": "UpdateProject",
    "Description": "Updates an IoT SiteWise Monitor project"
  },
  {
    "API": "iotthingsgraph:AssociateEntityToThing",
    "EventSource": "iotthingsgraph",
    "EventName": "AssociateEntityToThing",
    "Description": "Associates a device with a concrete thing that is in the user's registry"
  },
  {
    "API": "iotthingsgraph:CreateFlowTemplate",
    "EventSource": "iotthingsgraph",
    "EventName": "CreateFlowTemplate",
    "Description": "Creates a workflow template"
  },
  {
    "API": "iotthingsgraph:CreateSystemInstance",
    "EventSource": "iotthingsgraph",
    "EventName": "CreateSystemInstance",
    "Description": "Creates a system instance"
  },
  {
    "API": "iotthingsgraph:CreateSystemTemplate",
    "EventSource": "iotthingsgraph",
    "EventName": "CreateSystemTemplate",
    "Description": "Creates a system"
  },
  {
    "API": "iotthingsgraph:DeleteFlowTemplate",
    "EventSource": "iotthingsgraph",
    "EventName": "DeleteFlowTemplate",
    "Description": "Deletes a workflow"
  },
  {
    "API": "iotthingsgraph:DeleteNamespace",
    "EventSource": "iotthingsgraph",
    "EventName": "DeleteNamespace",
    "Description": "Deletes the specified namespace"
  },
  {
    "API": "iotthingsgraph:DeleteSystemInstance",
    "EventSource": "iotthingsgraph",
    "EventName": "DeleteSystemInstance",
    "Description": "Deletes a system instance"
  },
  {
    "API": "iotthingsgraph:DeleteSystemTemplate",
    "EventSource": "iotthingsgraph",
    "EventName": "DeleteSystemTemplate",
    "Description": "Deletes a system"
  },
  {
    "API": "iotthingsgraph:DeploySystemInstance",
    "EventSource": "iotthingsgraph",
    "EventName": "DeploySystemInstance",
    "Description": "**Greengrass and Cloud Deployments**"
  },
  {
    "API": "iotthingsgraph:DeprecateFlowTemplate",
    "EventSource": "iotthingsgraph",
    "EventName": "DeprecateFlowTemplate",
    "Description": "Deprecates the specified workflow"
  },
  {
    "API": "iotthingsgraph:DeprecateSystemTemplate",
    "EventSource": "iotthingsgraph",
    "EventName": "DeprecateSystemTemplate",
    "Description": "Deprecates the specified system"
  },
  {
    "API": "iotthingsgraph:DescribeNamespace",
    "EventSource": "iotthingsgraph",
    "EventName": "DescribeNamespace",
    "Description": "Gets the latest version of the user's namespace and the public version that it is tracking"
  },
  {
    "API": "iotthingsgraph:DissociateEntityFromThing",
    "EventSource": "iotthingsgraph",
    "EventName": "DissociateEntityFromThing",
    "Description": "Dissociates a device entity from a concrete thing"
  },
  {
    "API": "iotthingsgraph:GeneratePresignedUrl",
    "EventSource": "iotthingsgraph",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "iotthingsgraph:GetEntities",
    "EventSource": "iotthingsgraph",
    "EventName": "GetEntities",
    "Description": "Gets definitions of the specified entities"
  },
  {
    "API": "iotthingsgraph:GetFlowTemplate",
    "EventSource": "iotthingsgraph",
    "EventName": "GetFlowTemplate",
    "Description": "Gets the latest version of the ``DefinitionDocument`` and ``FlowTemplateSummary`` for the specified workflow"
  },
  {
    "API": "iotthingsgraph:GetFlowTemplateRevisions",
    "EventSource": "iotthingsgraph",
    "EventName": "GetFlowTemplateRevisions",
    "Description": "Gets revisions of the specified workflow"
  },
  {
    "API": "iotthingsgraph:GetNamespaceDeletionStatus",
    "EventSource": "iotthingsgraph",
    "EventName": "GetNamespaceDeletionStatus",
    "Description": "Gets the status of a namespace deletion task"
  },
  {
    "API": "iotthingsgraph:GetSystemInstance",
    "EventSource": "iotthingsgraph",
    "EventName": "GetSystemInstance",
    "Description": "Gets a system instance"
  },
  {
    "API": "iotthingsgraph:GetSystemTemplate",
    "EventSource": "iotthingsgraph",
    "EventName": "GetSystemTemplate",
    "Description": "Gets a system"
  },
  {
    "API": "iotthingsgraph:GetSystemTemplateRevisions",
    "EventSource": "iotthingsgraph",
    "EventName": "GetSystemTemplateRevisions",
    "Description": "Gets revisions made to the specified system template"
  },
  {
    "API": "iotthingsgraph:GetUploadStatus",
    "EventSource": "iotthingsgraph",
    "EventName": "GetUploadStatus",
    "Description": "Gets the status of the specified upload"
  },
  {
    "API": "iotthingsgraph:ListFlowExecutionMessages",
    "EventSource": "iotthingsgraph",
    "EventName": "ListFlowExecutionMessages",
    "Description": "Returns a list of objects that contain information about events in a flow execution"
  },
  {
    "API": "iotthingsgraph:ListTagsForResource",
    "EventSource": "iotthingsgraph",
    "EventName": "ListTagsForResource",
    "Description": "Lists all tags on an AWS IoT Things Graph resource"
  },
  {
    "API": "iotthingsgraph:SearchEntities",
    "EventSource": "iotthingsgraph",
    "EventName": "SearchEntities",
    "Description": "Searches for entities of the specified type"
  },
  {
    "API": "iotthingsgraph:SearchFlowExecutions",
    "EventSource": "iotthingsgraph",
    "EventName": "SearchFlowExecutions",
    "Description": "Searches for AWS IoT Things Graph workflow execution instances"
  },
  {
    "API": "iotthingsgraph:SearchFlowTemplates",
    "EventSource": "iotthingsgraph",
    "EventName": "SearchFlowTemplates",
    "Description": "Searches for summary information about workflows"
  },
  {
    "API": "iotthingsgraph:SearchSystemInstances",
    "EventSource": "iotthingsgraph",
    "EventName": "SearchSystemInstances",
    "Description": "Searches for system instances in the user's account"
  },
  {
    "API": "iotthingsgraph:SearchSystemTemplates",
    "EventSource": "iotthingsgraph",
    "EventName": "SearchSystemTemplates",
    "Description": "Searches for summary information about systems in the user's account"
  },
  {
    "API": "iotthingsgraph:SearchThings",
    "EventSource": "iotthingsgraph",
    "EventName": "SearchThings",
    "Description": "Searches for things associated with the specified entity"
  },
  {
    "API": "iotthingsgraph:TagResource",
    "EventSource": "iotthingsgraph",
    "EventName": "TagResource",
    "Description": "Creates a tag for the specified resource"
  },
  {
    "API": "iotthingsgraph:UndeploySystemInstance",
    "EventSource": "iotthingsgraph",
    "EventName": "UndeploySystemInstance",
    "Description": "Removes a system instance from its target (Cloud or Greengrass)"
  },
  {
    "API": "iotthingsgraph:UntagResource",
    "EventSource": "iotthingsgraph",
    "EventName": "UntagResource",
    "Description": "Removes a tag from the specified resource"
  },
  {
    "API": "iotthingsgraph:UpdateFlowTemplate",
    "EventSource": "iotthingsgraph",
    "EventName": "UpdateFlowTemplate",
    "Description": "Updates the specified workflow"
  },
  {
    "API": "iotthingsgraph:UpdateSystemTemplate",
    "EventSource": "iotthingsgraph",
    "EventName": "UpdateSystemTemplate",
    "Description": "Updates the specified system"
  },
  {
    "API": "iotthingsgraph:UploadEntityDefinitions",
    "EventSource": "iotthingsgraph",
    "EventName": "UploadEntityDefinitions",
    "Description": "Asynchronously uploads one or more entity definitions to the user's namespace"
  },
  {
    "API": "iottwinmaker:BatchPutPropertyValues",
    "EventSource": "iottwinmaker",
    "EventName": "BatchPutPropertyValues",
    "Description": "Sets values for multiple time series properties"
  },
  {
    "API": "iottwinmaker:CancelMetadataTransferJob",
    "EventSource": "iottwinmaker",
    "EventName": "CancelMetadataTransferJob",
    "Description": "Cancels the metadata transfer job"
  },
  {
    "API": "iottwinmaker:CreateComponentType",
    "EventSource": "iottwinmaker",
    "EventName": "CreateComponentType",
    "Description": "Creates a component type"
  },
  {
    "API": "iottwinmaker:CreateEntity",
    "EventSource": "iottwinmaker",
    "EventName": "CreateEntity",
    "Description": "Creates an entity"
  },
  {
    "API": "iottwinmaker:CreateMetadataTransferJob",
    "EventSource": "iottwinmaker",
    "EventName": "CreateMetadataTransferJob",
    "Description": "Creates a new metadata transfer job"
  },
  {
    "API": "iottwinmaker:CreateScene",
    "EventSource": "iottwinmaker",
    "EventName": "CreateScene",
    "Description": "Creates a scene"
  },
  {
    "API": "iottwinmaker:CreateSyncJob",
    "EventSource": "iottwinmaker",
    "EventName": "CreateSyncJob",
    "Description": "This action creates a SyncJob"
  },
  {
    "API": "iottwinmaker:CreateWorkspace",
    "EventSource": "iottwinmaker",
    "EventName": "CreateWorkspace",
    "Description": "Creates a workplace"
  },
  {
    "API": "iottwinmaker:DeleteComponentType",
    "EventSource": "iottwinmaker",
    "EventName": "DeleteComponentType",
    "Description": "Deletes a component type"
  },
  {
    "API": "iottwinmaker:DeleteEntity",
    "EventSource": "iottwinmaker",
    "EventName": "DeleteEntity",
    "Description": "Deletes an entity"
  },
  {
    "API": "iottwinmaker:DeleteScene",
    "EventSource": "iottwinmaker",
    "EventName": "DeleteScene",
    "Description": "Deletes a scene"
  },
  {
    "API": "iottwinmaker:DeleteSyncJob",
    "EventSource": "iottwinmaker",
    "EventName": "DeleteSyncJob",
    "Description": "Delete the SyncJob"
  },
  {
    "API": "iottwinmaker:DeleteWorkspace",
    "EventSource": "iottwinmaker",
    "EventName": "DeleteWorkspace",
    "Description": "Deletes a workspace"
  },
  {
    "API": "iottwinmaker:ExecuteQuery",
    "EventSource": "iottwinmaker",
    "EventName": "ExecuteQuery",
    "Description": "Run queries to access information from your knowledge graph of entities within individual workspaces"
  },
  {
    "API": "iottwinmaker:GeneratePresignedUrl",
    "EventSource": "iottwinmaker",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "iottwinmaker:GetComponentType",
    "EventSource": "iottwinmaker",
    "EventName": "GetComponentType",
    "Description": "Retrieves information about a component type"
  },
  {
    "API": "iottwinmaker:GetEntity",
    "EventSource": "iottwinmaker",
    "EventName": "GetEntity",
    "Description": "Retrieves information about an entity"
  },
  {
    "API": "iottwinmaker:GetMetadataTransferJob",
    "EventSource": "iottwinmaker",
    "EventName": "GetMetadataTransferJob",
    "Description": "Gets a nmetadata transfer job"
  },
  {
    "API": "iottwinmaker:GetPricingPlan",
    "EventSource": "iottwinmaker",
    "EventName": "GetPricingPlan",
    "Description": "Gets the pricing plan"
  },
  {
    "API": "iottwinmaker:GetPropertyValue",
    "EventSource": "iottwinmaker",
    "EventName": "GetPropertyValue",
    "Description": "Gets the property values for a component, component type, entity, or workspace"
  },
  {
    "API": "iottwinmaker:GetPropertyValueHistory",
    "EventSource": "iottwinmaker",
    "EventName": "GetPropertyValueHistory",
    "Description": "Retrieves information about the history of a time series property value for a component, component type, entity, or workspace"
  },
  {
    "API": "iottwinmaker:GetScene",
    "EventSource": "iottwinmaker",
    "EventName": "GetScene",
    "Description": "Retrieves information about a scene"
  },
  {
    "API": "iottwinmaker:GetSyncJob",
    "EventSource": "iottwinmaker",
    "EventName": "GetSyncJob",
    "Description": "Gets the SyncJob"
  },
  {
    "API": "iottwinmaker:GetWorkspace",
    "EventSource": "iottwinmaker",
    "EventName": "GetWorkspace",
    "Description": "Retrieves information about a workspace"
  },
  {
    "API": "iottwinmaker:ListComponentTypes",
    "EventSource": "iottwinmaker",
    "EventName": "ListComponentTypes",
    "Description": "Lists all component types in a workspace"
  },
  {
    "API": "iottwinmaker:ListComponents",
    "EventSource": "iottwinmaker",
    "EventName": "ListComponents",
    "Description": "This API lists the components of an entity"
  },
  {
    "API": "iottwinmaker:ListEntities",
    "EventSource": "iottwinmaker",
    "EventName": "ListEntities",
    "Description": "Lists all entities in a workspace"
  },
  {
    "API": "iottwinmaker:ListMetadataTransferJobs",
    "EventSource": "iottwinmaker",
    "EventName": "ListMetadataTransferJobs",
    "Description": "Lists the metadata transfer jobs"
  },
  {
    "API": "iottwinmaker:ListProperties",
    "EventSource": "iottwinmaker",
    "EventName": "ListProperties",
    "Description": "This API lists the properties of a component"
  },
  {
    "API": "iottwinmaker:ListScenes",
    "EventSource": "iottwinmaker",
    "EventName": "ListScenes",
    "Description": "Lists all scenes in a workspace"
  },
  {
    "API": "iottwinmaker:ListSyncJobs",
    "EventSource": "iottwinmaker",
    "EventName": "ListSyncJobs",
    "Description": "List all SyncJobs"
  },
  {
    "API": "iottwinmaker:ListSyncResources",
    "EventSource": "iottwinmaker",
    "EventName": "ListSyncResources",
    "Description": "Lists the sync resources"
  },
  {
    "API": "iottwinmaker:ListTagsForResource",
    "EventSource": "iottwinmaker",
    "EventName": "ListTagsForResource",
    "Description": "Lists all tags associated with a resource"
  },
  {
    "API": "iottwinmaker:ListWorkspaces",
    "EventSource": "iottwinmaker",
    "EventName": "ListWorkspaces",
    "Description": "Retrieves information about workspaces in the current account"
  },
  {
    "API": "iottwinmaker:TagResource",
    "EventSource": "iottwinmaker",
    "EventName": "TagResource",
    "Description": "Adds tags to a resource"
  },
  {
    "API": "iottwinmaker:UntagResource",
    "EventSource": "iottwinmaker",
    "EventName": "UntagResource",
    "Description": "Removes tags from a resource"
  },
  {
    "API": "iottwinmaker:UpdateComponentType",
    "EventSource": "iottwinmaker",
    "EventName": "UpdateComponentType",
    "Description": "Updates information in a component type"
  },
  {
    "API": "iottwinmaker:UpdateEntity",
    "EventSource": "iottwinmaker",
    "EventName": "UpdateEntity",
    "Description": "Updates an entity"
  },
  {
    "API": "iottwinmaker:UpdatePricingPlan",
    "EventSource": "iottwinmaker",
    "EventName": "UpdatePricingPlan",
    "Description": "Update the pricing plan"
  },
  {
    "API": "iottwinmaker:UpdateScene",
    "EventSource": "iottwinmaker",
    "EventName": "UpdateScene",
    "Description": "Updates a scene"
  },
  {
    "API": "iottwinmaker:UpdateWorkspace",
    "EventSource": "iottwinmaker",
    "EventName": "UpdateWorkspace",
    "Description": "Updates a workspace"
  },
  {
    "API": "iotwireless:AssociateAwsAccountWithPartnerAccount",
    "EventSource": "iotwireless",
    "EventName": "AssociateAwsAccountWithPartnerAccount",
    "Description": "Associates a partner account with your AWS account"
  },
  {
    "API": "iotwireless:AssociateMulticastGroupWithFuotaTask",
    "EventSource": "iotwireless",
    "EventName": "AssociateMulticastGroupWithFuotaTask",
    "Description": "Associate a multicast group with a FUOTA task"
  },
  {
    "API": "iotwireless:AssociateWirelessDeviceWithFuotaTask",
    "EventSource": "iotwireless",
    "EventName": "AssociateWirelessDeviceWithFuotaTask",
    "Description": "Associate a wireless device with a FUOTA task"
  },
  {
    "API": "iotwireless:AssociateWirelessDeviceWithMulticastGroup",
    "EventSource": "iotwireless",
    "EventName": "AssociateWirelessDeviceWithMulticastGroup",
    "Description": "Associates a wireless device with a multicast group"
  },
  {
    "API": "iotwireless:AssociateWirelessDeviceWithThing",
    "EventSource": "iotwireless",
    "EventName": "AssociateWirelessDeviceWithThing",
    "Description": "Associates a wireless device with a thing"
  },
  {
    "API": "iotwireless:AssociateWirelessGatewayWithCertificate",
    "EventSource": "iotwireless",
    "EventName": "AssociateWirelessGatewayWithCertificate",
    "Description": "Associates a wireless gateway with a certificate"
  },
  {
    "API": "iotwireless:AssociateWirelessGatewayWithThing",
    "EventSource": "iotwireless",
    "EventName": "AssociateWirelessGatewayWithThing",
    "Description": "Associates a wireless gateway with a thing"
  },
  {
    "API": "iotwireless:CancelMulticastGroupSession",
    "EventSource": "iotwireless",
    "EventName": "CancelMulticastGroupSession",
    "Description": "Cancels an existing multicast group session"
  },
  {
    "API": "iotwireless:CreateDestination",
    "EventSource": "iotwireless",
    "EventName": "CreateDestination",
    "Description": "Creates a new destination that maps a device message to an AWS IoT rule"
  },
  {
    "API": "iotwireless:CreateDeviceProfile",
    "EventSource": "iotwireless",
    "EventName": "CreateDeviceProfile",
    "Description": "Creates a new device profile"
  },
  {
    "API": "iotwireless:CreateFuotaTask",
    "EventSource": "iotwireless",
    "EventName": "CreateFuotaTask",
    "Description": "Creates a FUOTA task"
  },
  {
    "API": "iotwireless:CreateMulticastGroup",
    "EventSource": "iotwireless",
    "EventName": "CreateMulticastGroup",
    "Description": "Creates a multicast group"
  },
  {
    "API": "iotwireless:CreateNetworkAnalyzerConfiguration",
    "EventSource": "iotwireless",
    "EventName": "CreateNetworkAnalyzerConfiguration",
    "Description": "Creates a new network analyzer configuration"
  },
  {
    "API": "iotwireless:CreateServiceProfile",
    "EventSource": "iotwireless",
    "EventName": "CreateServiceProfile",
    "Description": "Creates a new service profile"
  },
  {
    "API": "iotwireless:CreateWirelessDevice",
    "EventSource": "iotwireless",
    "EventName": "CreateWirelessDevice",
    "Description": "Provisions a wireless device"
  },
  {
    "API": "iotwireless:CreateWirelessGateway",
    "EventSource": "iotwireless",
    "EventName": "CreateWirelessGateway",
    "Description": "Provisions a wireless gateway"
  },
  {
    "API": "iotwireless:CreateWirelessGatewayTask",
    "EventSource": "iotwireless",
    "EventName": "CreateWirelessGatewayTask",
    "Description": "Creates a task for a wireless gateway"
  },
  {
    "API": "iotwireless:CreateWirelessGatewayTaskDefinition",
    "EventSource": "iotwireless",
    "EventName": "CreateWirelessGatewayTaskDefinition",
    "Description": "Creates a gateway task definition"
  },
  {
    "API": "iotwireless:DeleteDestination",
    "EventSource": "iotwireless",
    "EventName": "DeleteDestination",
    "Description": "Deletes a destination"
  },
  {
    "API": "iotwireless:DeleteDeviceProfile",
    "EventSource": "iotwireless",
    "EventName": "DeleteDeviceProfile",
    "Description": "Deletes a device profile"
  },
  {
    "API": "iotwireless:DeleteFuotaTask",
    "EventSource": "iotwireless",
    "EventName": "DeleteFuotaTask",
    "Description": "Deletes a FUOTA task"
  },
  {
    "API": "iotwireless:DeleteMulticastGroup",
    "EventSource": "iotwireless",
    "EventName": "DeleteMulticastGroup",
    "Description": "Deletes a multicast group if it is not in use by a fuota task"
  },
  {
    "API": "iotwireless:DeleteNetworkAnalyzerConfiguration",
    "EventSource": "iotwireless",
    "EventName": "DeleteNetworkAnalyzerConfiguration",
    "Description": "Deletes a network analyzer configuration"
  },
  {
    "API": "iotwireless:DeleteQueuedMessages",
    "EventSource": "iotwireless",
    "EventName": "DeleteQueuedMessages",
    "Description": "Remove queued messages from the downlink queue"
  },
  {
    "API": "iotwireless:DeleteServiceProfile",
    "EventSource": "iotwireless",
    "EventName": "DeleteServiceProfile",
    "Description": "Deletes a service profile"
  },
  {
    "API": "iotwireless:DeleteWirelessDevice",
    "EventSource": "iotwireless",
    "EventName": "DeleteWirelessDevice",
    "Description": "Deletes a wireless device"
  },
  {
    "API": "iotwireless:DeleteWirelessDeviceImportTask",
    "EventSource": "iotwireless",
    "EventName": "DeleteWirelessDeviceImportTask",
    "Description": "Delete an import task"
  },
  {
    "API": "iotwireless:DeleteWirelessGateway",
    "EventSource": "iotwireless",
    "EventName": "DeleteWirelessGateway",
    "Description": "Deletes a wireless gateway"
  },
  {
    "API": "iotwireless:DeleteWirelessGatewayTask",
    "EventSource": "iotwireless",
    "EventName": "DeleteWirelessGatewayTask",
    "Description": "Deletes a wireless gateway task"
  },
  {
    "API": "iotwireless:DeleteWirelessGatewayTaskDefinition",
    "EventSource": "iotwireless",
    "EventName": "DeleteWirelessGatewayTaskDefinition",
    "Description": "Deletes a wireless gateway task definition"
  },
  {
    "API": "iotwireless:DeregisterWirelessDevice",
    "EventSource": "iotwireless",
    "EventName": "DeregisterWirelessDevice",
    "Description": "Deregister a wireless device from AWS IoT Wireless"
  },
  {
    "API": "iotwireless:DisassociateAwsAccountFromPartnerAccount",
    "EventSource": "iotwireless",
    "EventName": "DisassociateAwsAccountFromPartnerAccount",
    "Description": "Disassociates your AWS account from a partner account"
  },
  {
    "API": "iotwireless:DisassociateMulticastGroupFromFuotaTask",
    "EventSource": "iotwireless",
    "EventName": "DisassociateMulticastGroupFromFuotaTask",
    "Description": "Disassociates a multicast group from a fuota task"
  },
  {
    "API": "iotwireless:DisassociateWirelessDeviceFromFuotaTask",
    "EventSource": "iotwireless",
    "EventName": "DisassociateWirelessDeviceFromFuotaTask",
    "Description": "Disassociates a wireless device from a FUOTA task"
  },
  {
    "API": "iotwireless:DisassociateWirelessDeviceFromMulticastGroup",
    "EventSource": "iotwireless",
    "EventName": "DisassociateWirelessDeviceFromMulticastGroup",
    "Description": "Disassociates a wireless device from a multicast group"
  },
  {
    "API": "iotwireless:DisassociateWirelessDeviceFromThing",
    "EventSource": "iotwireless",
    "EventName": "DisassociateWirelessDeviceFromThing",
    "Description": "Disassociates a wireless device from its currently associated thing"
  },
  {
    "API": "iotwireless:DisassociateWirelessGatewayFromCertificate",
    "EventSource": "iotwireless",
    "EventName": "DisassociateWirelessGatewayFromCertificate",
    "Description": "Disassociates a wireless gateway from its currently associated certificate"
  },
  {
    "API": "iotwireless:DisassociateWirelessGatewayFromThing",
    "EventSource": "iotwireless",
    "EventName": "DisassociateWirelessGatewayFromThing",
    "Description": "Disassociates a wireless gateway from its currently associated thing"
  },
  {
    "API": "iotwireless:GeneratePresignedUrl",
    "EventSource": "iotwireless",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "iotwireless:GetDestination",
    "EventSource": "iotwireless",
    "EventName": "GetDestination",
    "Description": "Gets information about a destination"
  },
  {
    "API": "iotwireless:GetDeviceProfile",
    "EventSource": "iotwireless",
    "EventName": "GetDeviceProfile",
    "Description": "Gets information about a device profile"
  },
  {
    "API": "iotwireless:GetEventConfigurationByResourceTypes",
    "EventSource": "iotwireless",
    "EventName": "GetEventConfigurationByResourceTypes",
    "Description": "Get the event configuration based on resource types"
  },
  {
    "API": "iotwireless:GetFuotaTask",
    "EventSource": "iotwireless",
    "EventName": "GetFuotaTask",
    "Description": "Gets information about a FUOTA task"
  },
  {
    "API": "iotwireless:GetLogLevelsByResourceTypes",
    "EventSource": "iotwireless",
    "EventName": "GetLogLevelsByResourceTypes",
    "Description": "Returns current default log levels or log levels by resource types"
  },
  {
    "API": "iotwireless:GetMetricConfiguration",
    "EventSource": "iotwireless",
    "EventName": "GetMetricConfiguration",
    "Description": "Get the metric configuration status for this AWS account"
  },
  {
    "API": "iotwireless:GetMetrics",
    "EventSource": "iotwireless",
    "EventName": "GetMetrics",
    "Description": "Get the summary metrics for this AWS account"
  },
  {
    "API": "iotwireless:GetMulticastGroup",
    "EventSource": "iotwireless",
    "EventName": "GetMulticastGroup",
    "Description": "Gets information about a multicast group"
  },
  {
    "API": "iotwireless:GetMulticastGroupSession",
    "EventSource": "iotwireless",
    "EventName": "GetMulticastGroupSession",
    "Description": "Gets information about a multicast group session"
  },
  {
    "API": "iotwireless:GetNetworkAnalyzerConfiguration",
    "EventSource": "iotwireless",
    "EventName": "GetNetworkAnalyzerConfiguration",
    "Description": "Get network analyzer configuration"
  },
  {
    "API": "iotwireless:GetPartnerAccount",
    "EventSource": "iotwireless",
    "EventName": "GetPartnerAccount",
    "Description": "Gets information about a partner account"
  },
  {
    "API": "iotwireless:GetPosition",
    "EventSource": "iotwireless",
    "EventName": "GetPosition",
    "Description": "Get the position information for a given resource"
  },
  {
    "API": "iotwireless:GetPositionConfiguration",
    "EventSource": "iotwireless",
    "EventName": "GetPositionConfiguration",
    "Description": "Get position configuration for a given resource"
  },
  {
    "API": "iotwireless:GetPositionEstimate",
    "EventSource": "iotwireless",
    "EventName": "GetPositionEstimate",
    "Description": "Get estimated position information as a payload in GeoJSON format"
  },
  {
    "API": "iotwireless:GetResourceEventConfiguration",
    "EventSource": "iotwireless",
    "EventName": "GetResourceEventConfiguration",
    "Description": "Get the event configuration for a particular resource identifier"
  },
  {
    "API": "iotwireless:GetResourceLogLevel",
    "EventSource": "iotwireless",
    "EventName": "GetResourceLogLevel",
    "Description": "Fetches the log-level override, if any, for a given resource-ID and resource-type"
  },
  {
    "API": "iotwireless:GetResourcePosition",
    "EventSource": "iotwireless",
    "EventName": "GetResourcePosition",
    "Description": "Get the position information for a given wireless device or a wireless gateway resource"
  },
  {
    "API": "iotwireless:GetServiceEndpoint",
    "EventSource": "iotwireless",
    "EventName": "GetServiceEndpoint",
    "Description": "Gets the account-specific endpoint for Configuration and Update Server (CUPS) protocol or LoRaWAN Network Server (LNS) connections"
  },
  {
    "API": "iotwireless:GetServiceProfile",
    "EventSource": "iotwireless",
    "EventName": "GetServiceProfile",
    "Description": "Gets information about a service profile"
  },
  {
    "API": "iotwireless:GetWirelessDevice",
    "EventSource": "iotwireless",
    "EventName": "GetWirelessDevice",
    "Description": "Gets information about a wireless device"
  },
  {
    "API": "iotwireless:GetWirelessDeviceImportTask",
    "EventSource": "iotwireless",
    "EventName": "GetWirelessDeviceImportTask",
    "Description": "Get information about an import task and count of device onboarding summary information for the import task"
  },
  {
    "API": "iotwireless:GetWirelessDeviceStatistics",
    "EventSource": "iotwireless",
    "EventName": "GetWirelessDeviceStatistics",
    "Description": "Gets operating information about a wireless device"
  },
  {
    "API": "iotwireless:GetWirelessGateway",
    "EventSource": "iotwireless",
    "EventName": "GetWirelessGateway",
    "Description": "Gets information about a wireless gateway"
  },
  {
    "API": "iotwireless:GetWirelessGatewayCertificate",
    "EventSource": "iotwireless",
    "EventName": "GetWirelessGatewayCertificate",
    "Description": "Gets the ID of the certificate that is currently associated with a wireless gateway"
  },
  {
    "API": "iotwireless:GetWirelessGatewayFirmwareInformation",
    "EventSource": "iotwireless",
    "EventName": "GetWirelessGatewayFirmwareInformation",
    "Description": "Gets the firmware version and other information about a wireless gateway"
  },
  {
    "API": "iotwireless:GetWirelessGatewayStatistics",
    "EventSource": "iotwireless",
    "EventName": "GetWirelessGatewayStatistics",
    "Description": "Gets operating information about a wireless gateway"
  },
  {
    "API": "iotwireless:GetWirelessGatewayTask",
    "EventSource": "iotwireless",
    "EventName": "GetWirelessGatewayTask",
    "Description": "Gets information about a wireless gateway task"
  },
  {
    "API": "iotwireless:GetWirelessGatewayTaskDefinition",
    "EventSource": "iotwireless",
    "EventName": "GetWirelessGatewayTaskDefinition",
    "Description": "Gets information about a wireless gateway task definition"
  },
  {
    "API": "iotwireless:ListDestinations",
    "EventSource": "iotwireless",
    "EventName": "ListDestinations",
    "Description": "Lists the destinations registered to your AWS account"
  },
  {
    "API": "iotwireless:ListDeviceProfiles",
    "EventSource": "iotwireless",
    "EventName": "ListDeviceProfiles",
    "Description": "Lists the device profiles registered to your AWS account"
  },
  {
    "API": "iotwireless:ListDevicesForWirelessDeviceImportTask",
    "EventSource": "iotwireless",
    "EventName": "ListDevicesForWirelessDeviceImportTask",
    "Description": "List the Sidewalk devices in an import task and their onboarding status"
  },
  {
    "API": "iotwireless:ListEventConfigurations",
    "EventSource": "iotwireless",
    "EventName": "ListEventConfigurations",
    "Description": "List event configurations where at least one event topic has been enabled"
  },
  {
    "API": "iotwireless:ListFuotaTasks",
    "EventSource": "iotwireless",
    "EventName": "ListFuotaTasks",
    "Description": "Lists the FUOTA tasks registered to your AWS account"
  },
  {
    "API": "iotwireless:ListMulticastGroups",
    "EventSource": "iotwireless",
    "EventName": "ListMulticastGroups",
    "Description": "Lists the multicast groups registered to your AWS account"
  },
  {
    "API": "iotwireless:ListMulticastGroupsByFuotaTask",
    "EventSource": "iotwireless",
    "EventName": "ListMulticastGroupsByFuotaTask",
    "Description": "List all multicast groups associated with a fuota task"
  },
  {
    "API": "iotwireless:ListNetworkAnalyzerConfigurations",
    "EventSource": "iotwireless",
    "EventName": "ListNetworkAnalyzerConfigurations",
    "Description": "Lists the network analyzer configurations"
  },
  {
    "API": "iotwireless:ListPartnerAccounts",
    "EventSource": "iotwireless",
    "EventName": "ListPartnerAccounts",
    "Description": "Lists the partner accounts associated with your AWS account"
  },
  {
    "API": "iotwireless:ListPositionConfigurations",
    "EventSource": "iotwireless",
    "EventName": "ListPositionConfigurations",
    "Description": "List position configurations for a given resource, such as positioning solvers"
  },
  {
    "API": "iotwireless:ListQueuedMessages",
    "EventSource": "iotwireless",
    "EventName": "ListQueuedMessages",
    "Description": "List queued messages in the downlink queue"
  },
  {
    "API": "iotwireless:ListServiceProfiles",
    "EventSource": "iotwireless",
    "EventName": "ListServiceProfiles",
    "Description": "Lists the service profiles registered to your AWS account"
  },
  {
    "API": "iotwireless:ListTagsForResource",
    "EventSource": "iotwireless",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags (metadata) you have assigned to the resource"
  },
  {
    "API": "iotwireless:ListWirelessDeviceImportTasks",
    "EventSource": "iotwireless",
    "EventName": "ListWirelessDeviceImportTasks",
    "Description": "List wireless devices that have been added to an import task"
  },
  {
    "API": "iotwireless:ListWirelessDevices",
    "EventSource": "iotwireless",
    "EventName": "ListWirelessDevices",
    "Description": "Lists the wireless devices registered to your AWS account"
  },
  {
    "API": "iotwireless:ListWirelessGatewayTaskDefinitions",
    "EventSource": "iotwireless",
    "EventName": "ListWirelessGatewayTaskDefinitions",
    "Description": "List the wireless gateway tasks definitions registered to your AWS account"
  },
  {
    "API": "iotwireless:ListWirelessGateways",
    "EventSource": "iotwireless",
    "EventName": "ListWirelessGateways",
    "Description": "Lists the wireless gateways registered to your AWS account"
  },
  {
    "API": "iotwireless:PutPositionConfiguration",
    "EventSource": "iotwireless",
    "EventName": "PutPositionConfiguration",
    "Description": "Put position configuration for a given resource"
  },
  {
    "API": "iotwireless:PutResourceLogLevel",
    "EventSource": "iotwireless",
    "EventName": "PutResourceLogLevel",
    "Description": "Sets the log-level override for a resource-ID and resource-type"
  },
  {
    "API": "iotwireless:ResetAllResourceLogLevels",
    "EventSource": "iotwireless",
    "EventName": "ResetAllResourceLogLevels",
    "Description": "Removes the log-level overrides for all resources; both wireless devices and wireless gateways"
  },
  {
    "API": "iotwireless:ResetResourceLogLevel",
    "EventSource": "iotwireless",
    "EventName": "ResetResourceLogLevel",
    "Description": "Removes the log-level override, if any, for a specific resource-ID and resource-type"
  },
  {
    "API": "iotwireless:SendDataToMulticastGroup",
    "EventSource": "iotwireless",
    "EventName": "SendDataToMulticastGroup",
    "Description": "Sends the specified data to a multicast group"
  },
  {
    "API": "iotwireless:SendDataToWirelessDevice",
    "EventSource": "iotwireless",
    "EventName": "SendDataToWirelessDevice",
    "Description": "Sends a decrypted application data frame to a device"
  },
  {
    "API": "iotwireless:StartBulkAssociateWirelessDeviceWithMulticastGroup",
    "EventSource": "iotwireless",
    "EventName": "StartBulkAssociateWirelessDeviceWithMulticastGroup",
    "Description": "Starts a bulk association of all qualifying wireless devices with a multicast group"
  },
  {
    "API": "iotwireless:StartBulkDisassociateWirelessDeviceFromMulticastGroup",
    "EventSource": "iotwireless",
    "EventName": "StartBulkDisassociateWirelessDeviceFromMulticastGroup",
    "Description": "Starts a bulk disassociatin of all qualifying wireless devices from a multicast group"
  },
  {
    "API": "iotwireless:StartFuotaTask",
    "EventSource": "iotwireless",
    "EventName": "StartFuotaTask",
    "Description": "Starts a FUOTA task"
  },
  {
    "API": "iotwireless:StartMulticastGroupSession",
    "EventSource": "iotwireless",
    "EventName": "StartMulticastGroupSession",
    "Description": "Starts a multicast group session"
  },
  {
    "API": "iotwireless:StartSingleWirelessDeviceImportTask",
    "EventSource": "iotwireless",
    "EventName": "StartSingleWirelessDeviceImportTask",
    "Description": "Start import task for a single wireless device"
  },
  {
    "API": "iotwireless:StartWirelessDeviceImportTask",
    "EventSource": "iotwireless",
    "EventName": "StartWirelessDeviceImportTask",
    "Description": "Start import task for provisioning Sidewalk devices in bulk using an S3 CSV file"
  },
  {
    "API": "iotwireless:TagResource",
    "EventSource": "iotwireless",
    "EventName": "TagResource",
    "Description": "Adds a tag to a resource"
  },
  {
    "API": "iotwireless:TestWirelessDevice",
    "EventSource": "iotwireless",
    "EventName": "TestWirelessDevice",
    "Description": "Simulates a provisioned device by sending an uplink data payload of ``Hello``"
  },
  {
    "API": "iotwireless:UntagResource",
    "EventSource": "iotwireless",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags from a resource"
  },
  {
    "API": "iotwireless:UpdateDestination",
    "EventSource": "iotwireless",
    "EventName": "UpdateDestination",
    "Description": "Updates properties of a destination"
  },
  {
    "API": "iotwireless:UpdateEventConfigurationByResourceTypes",
    "EventSource": "iotwireless",
    "EventName": "UpdateEventConfigurationByResourceTypes",
    "Description": "Update the event configuration based on resource types"
  },
  {
    "API": "iotwireless:UpdateFuotaTask",
    "EventSource": "iotwireless",
    "EventName": "UpdateFuotaTask",
    "Description": "Updates properties of a FUOTA task"
  },
  {
    "API": "iotwireless:UpdateLogLevelsByResourceTypes",
    "EventSource": "iotwireless",
    "EventName": "UpdateLogLevelsByResourceTypes",
    "Description": "Set default log level, or log levels by resource types"
  },
  {
    "API": "iotwireless:UpdateMetricConfiguration",
    "EventSource": "iotwireless",
    "EventName": "UpdateMetricConfiguration",
    "Description": "Update the summary metric configuration"
  },
  {
    "API": "iotwireless:UpdateMulticastGroup",
    "EventSource": "iotwireless",
    "EventName": "UpdateMulticastGroup",
    "Description": "Updates properties of a multicast group session"
  },
  {
    "API": "iotwireless:UpdateNetworkAnalyzerConfiguration",
    "EventSource": "iotwireless",
    "EventName": "UpdateNetworkAnalyzerConfiguration",
    "Description": "Update network analyzer configuration"
  },
  {
    "API": "iotwireless:UpdatePartnerAccount",
    "EventSource": "iotwireless",
    "EventName": "UpdatePartnerAccount",
    "Description": "Updates properties of a partner account"
  },
  {
    "API": "iotwireless:UpdatePosition",
    "EventSource": "iotwireless",
    "EventName": "UpdatePosition",
    "Description": "Update the position information of a resource"
  },
  {
    "API": "iotwireless:UpdateResourceEventConfiguration",
    "EventSource": "iotwireless",
    "EventName": "UpdateResourceEventConfiguration",
    "Description": "Update the event configuration for a particular resource identifier"
  },
  {
    "API": "iotwireless:UpdateResourcePosition",
    "EventSource": "iotwireless",
    "EventName": "UpdateResourcePosition",
    "Description": "Update the position information of a given wireless device or a wireless gateway resource"
  },
  {
    "API": "iotwireless:UpdateWirelessDevice",
    "EventSource": "iotwireless",
    "EventName": "UpdateWirelessDevice",
    "Description": "Updates properties of a wireless device"
  },
  {
    "API": "iotwireless:UpdateWirelessDeviceImportTask",
    "EventSource": "iotwireless",
    "EventName": "UpdateWirelessDeviceImportTask",
    "Description": "Update an import task to add more devices to the task"
  },
  {
    "API": "iotwireless:UpdateWirelessGateway",
    "EventSource": "iotwireless",
    "EventName": "UpdateWirelessGateway",
    "Description": "Updates properties of a wireless gateway"
  },
  {
    "API": "ivs:BatchGetChannel",
    "EventSource": "ivs",
    "EventName": "BatchGetChannel",
    "Description": "Performs  GetChannel on multiple ARNs simultaneously"
  },
  {
    "API": "ivs:BatchGetStreamKey",
    "EventSource": "ivs",
    "EventName": "BatchGetStreamKey",
    "Description": "Performs  GetStreamKey on multiple ARNs simultaneously"
  },
  {
    "API": "ivs:BatchStartViewerSessionRevocation",
    "EventSource": "ivs",
    "EventName": "BatchStartViewerSessionRevocation",
    "Description": "Performs  StartViewerSessionRevocation on multiple channel ARN and viewer ID pairs simultaneously"
  },
  {
    "API": "ivs:CreateChannel",
    "EventSource": "ivs",
    "EventName": "CreateChannel",
    "Description": "Creates a new channel and an associated stream key to start streaming"
  },
  {
    "API": "ivs:CreatePlaybackRestrictionPolicy",
    "EventSource": "ivs",
    "EventName": "CreatePlaybackRestrictionPolicy",
    "Description": "Creates a new playback restriction policy, for constraining playback by countries and/or origins"
  },
  {
    "API": "ivs:CreateRecordingConfiguration",
    "EventSource": "ivs",
    "EventName": "CreateRecordingConfiguration",
    "Description": "Creates a new recording configuration, used to enable recording to Amazon S3"
  },
  {
    "API": "ivs:CreateStreamKey",
    "EventSource": "ivs",
    "EventName": "CreateStreamKey",
    "Description": "Creates a stream key, used to initiate a stream, for the specified channel ARN"
  },
  {
    "API": "ivs:DeleteChannel",
    "EventSource": "ivs",
    "EventName": "DeleteChannel",
    "Description": "Deletes the specified channel and its associated stream keys"
  },
  {
    "API": "ivs:DeletePlaybackKeyPair",
    "EventSource": "ivs",
    "EventName": "DeletePlaybackKeyPair",
    "Description": "Deletes a specified authorization key pair"
  },
  {
    "API": "ivs:DeletePlaybackRestrictionPolicy",
    "EventSource": "ivs",
    "EventName": "DeletePlaybackRestrictionPolicy",
    "Description": "Deletes the specified playback restriction policy"
  },
  {
    "API": "ivs:DeleteRecordingConfiguration",
    "EventSource": "ivs",
    "EventName": "DeleteRecordingConfiguration",
    "Description": "Deletes the recording configuration for the specified ARN"
  },
  {
    "API": "ivs:DeleteStreamKey",
    "EventSource": "ivs",
    "EventName": "DeleteStreamKey",
    "Description": "Deletes the stream key for the specified ARN, so it can no longer be used to stream"
  },
  {
    "API": "ivs:GeneratePresignedUrl",
    "EventSource": "ivs",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "ivs:GetChannel",
    "EventSource": "ivs",
    "EventName": "GetChannel",
    "Description": "Gets the channel configuration for the specified channel ARN"
  },
  {
    "API": "ivs:GetPlaybackKeyPair",
    "EventSource": "ivs",
    "EventName": "GetPlaybackKeyPair",
    "Description": "Gets a specified playback authorization key pair and returns the ``arn`` and ``fingerprint``"
  },
  {
    "API": "ivs:GetPlaybackRestrictionPolicy",
    "EventSource": "ivs",
    "EventName": "GetPlaybackRestrictionPolicy",
    "Description": "Gets the specified playback restriction policy"
  },
  {
    "API": "ivs:GetRecordingConfiguration",
    "EventSource": "ivs",
    "EventName": "GetRecordingConfiguration",
    "Description": "Gets the recording configuration for the specified ARN"
  },
  {
    "API": "ivs:GetStream",
    "EventSource": "ivs",
    "EventName": "GetStream",
    "Description": "Gets information about the active (live) stream on a specified channel"
  },
  {
    "API": "ivs:GetStreamKey",
    "EventSource": "ivs",
    "EventName": "GetStreamKey",
    "Description": "Gets stream-key information for a specified ARN"
  },
  {
    "API": "ivs:GetStreamSession",
    "EventSource": "ivs",
    "EventName": "GetStreamSession",
    "Description": "Gets metadata on a specified stream"
  },
  {
    "API": "ivs:ImportPlaybackKeyPair",
    "EventSource": "ivs",
    "EventName": "ImportPlaybackKeyPair",
    "Description": "Imports the public portion of a new key pair and returns its ``arn`` and ``fingerprint``"
  },
  {
    "API": "ivs:ListChannels",
    "EventSource": "ivs",
    "EventName": "ListChannels",
    "Description": "Gets summary information about all channels in your account, in the Amazon Web Services region where the API request is processed"
  },
  {
    "API": "ivs:ListPlaybackKeyPairs",
    "EventSource": "ivs",
    "EventName": "ListPlaybackKeyPairs",
    "Description": "Gets summary information about playback key pairs"
  },
  {
    "API": "ivs:ListPlaybackRestrictionPolicies",
    "EventSource": "ivs",
    "EventName": "ListPlaybackRestrictionPolicies",
    "Description": "Gets summary information about playback restriction policies"
  },
  {
    "API": "ivs:ListRecordingConfigurations",
    "EventSource": "ivs",
    "EventName": "ListRecordingConfigurations",
    "Description": "Gets summary information about all recording configurations in your account, in the Amazon Web Services region where the API request is processed"
  },
  {
    "API": "ivs:ListStreamKeys",
    "EventSource": "ivs",
    "EventName": "ListStreamKeys",
    "Description": "Gets summary information about stream keys for the specified channel"
  },
  {
    "API": "ivs:ListStreamSessions",
    "EventSource": "ivs",
    "EventName": "ListStreamSessions",
    "Description": "Gets a summary of current and previous streams for a specified channel in your account, in the AWS region where the API request is processed"
  },
  {
    "API": "ivs:ListStreams",
    "EventSource": "ivs",
    "EventName": "ListStreams",
    "Description": "Gets summary information about live streams in your account, in the Amazon Web Services region where the API request is processed"
  },
  {
    "API": "ivs:ListTagsForResource",
    "EventSource": "ivs",
    "EventName": "ListTagsForResource",
    "Description": "Gets information about Amazon Web Services tags for the specified ARN"
  },
  {
    "API": "ivs:PutMetadata",
    "EventSource": "ivs",
    "EventName": "PutMetadata",
    "Description": "Inserts metadata into the active stream of the specified channel"
  },
  {
    "API": "ivs:StartViewerSessionRevocation",
    "EventSource": "ivs",
    "EventName": "StartViewerSessionRevocation",
    "Description": "Starts the process of revoking the viewer session associated with a specified channel ARN and viewer ID"
  },
  {
    "API": "ivs:StopStream",
    "EventSource": "ivs",
    "EventName": "StopStream",
    "Description": "Disconnects the incoming RTMPS stream for the specified channel"
  },
  {
    "API": "ivs:TagResource",
    "EventSource": "ivs",
    "EventName": "TagResource",
    "Description": "Adds or updates tags for the Amazon Web Services resource with the specified ARN"
  },
  {
    "API": "ivs:UntagResource",
    "EventSource": "ivs",
    "EventName": "UntagResource",
    "Description": "Removes tags from the resource with the specified ARN"
  },
  {
    "API": "ivs:UpdateChannel",
    "EventSource": "ivs",
    "EventName": "UpdateChannel",
    "Description": "Updates a channel's configuration"
  },
  {
    "API": "ivs:UpdatePlaybackRestrictionPolicy",
    "EventSource": "ivs",
    "EventName": "UpdatePlaybackRestrictionPolicy",
    "Description": "Updates a specified playback restriction policy"
  },
  {
    "API": "ivs-realtime:CreateEncoderConfiguration",
    "EventSource": "ivs-realtime",
    "EventName": "CreateEncoderConfiguration",
    "Description": "Creates an EncoderConfiguration object"
  },
  {
    "API": "ivs-realtime:CreateParticipantToken",
    "EventSource": "ivs-realtime",
    "EventName": "CreateParticipantToken",
    "Description": "Creates an additional token for a specified stage"
  },
  {
    "API": "ivs-realtime:CreateStage",
    "EventSource": "ivs-realtime",
    "EventName": "CreateStage",
    "Description": "Creates a new stage (and optionally participant tokens)"
  },
  {
    "API": "ivs-realtime:CreateStorageConfiguration",
    "EventSource": "ivs-realtime",
    "EventName": "CreateStorageConfiguration",
    "Description": "Creates a new storage configuration, used to enable recording to Amazon S3"
  },
  {
    "API": "ivs-realtime:DeleteEncoderConfiguration",
    "EventSource": "ivs-realtime",
    "EventName": "DeleteEncoderConfiguration",
    "Description": "Deletes an EncoderConfiguration resource"
  },
  {
    "API": "ivs-realtime:DeleteStage",
    "EventSource": "ivs-realtime",
    "EventName": "DeleteStage",
    "Description": "Shuts down and deletes the specified stage (disconnecting all participants)"
  },
  {
    "API": "ivs-realtime:DeleteStorageConfiguration",
    "EventSource": "ivs-realtime",
    "EventName": "DeleteStorageConfiguration",
    "Description": "Deletes the storage configuration for the specified ARN"
  },
  {
    "API": "ivs-realtime:DisconnectParticipant",
    "EventSource": "ivs-realtime",
    "EventName": "DisconnectParticipant",
    "Description": "Disconnects a specified participant and revokes the participant permanently from a specified stage"
  },
  {
    "API": "ivs-realtime:GeneratePresignedUrl",
    "EventSource": "ivs-realtime",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "ivs-realtime:GetComposition",
    "EventSource": "ivs-realtime",
    "EventName": "GetComposition",
    "Description": "Get information about the specified Composition resource"
  },
  {
    "API": "ivs-realtime:GetEncoderConfiguration",
    "EventSource": "ivs-realtime",
    "EventName": "GetEncoderConfiguration",
    "Description": "Gets information about the specified EncoderConfiguration resource"
  },
  {
    "API": "ivs-realtime:GetParticipant",
    "EventSource": "ivs-realtime",
    "EventName": "GetParticipant",
    "Description": "Gets information about the specified participant token"
  },
  {
    "API": "ivs-realtime:GetStage",
    "EventSource": "ivs-realtime",
    "EventName": "GetStage",
    "Description": "Gets information for the specified stage"
  },
  {
    "API": "ivs-realtime:GetStageSession",
    "EventSource": "ivs-realtime",
    "EventName": "GetStageSession",
    "Description": "Gets information for the specified stage session"
  },
  {
    "API": "ivs-realtime:GetStorageConfiguration",
    "EventSource": "ivs-realtime",
    "EventName": "GetStorageConfiguration",
    "Description": "Gets the storage configuration for the specified ARN"
  },
  {
    "API": "ivs-realtime:ListCompositions",
    "EventSource": "ivs-realtime",
    "EventName": "ListCompositions",
    "Description": "Gets summary information about all Compositions in your account, in the AWS region where the API request is processed"
  },
  {
    "API": "ivs-realtime:ListEncoderConfigurations",
    "EventSource": "ivs-realtime",
    "EventName": "ListEncoderConfigurations",
    "Description": "Gets summary information about all EncoderConfigurations in your account, in the AWS region where the API request is processed"
  },
  {
    "API": "ivs-realtime:ListParticipantEvents",
    "EventSource": "ivs-realtime",
    "EventName": "ListParticipantEvents",
    "Description": "Lists events for a specified participant that occurred during a specified stage session"
  },
  {
    "API": "ivs-realtime:ListParticipants",
    "EventSource": "ivs-realtime",
    "EventName": "ListParticipants",
    "Description": "Lists all participants in a specified stage session"
  },
  {
    "API": "ivs-realtime:ListStageSessions",
    "EventSource": "ivs-realtime",
    "EventName": "ListStageSessions",
    "Description": "Gets all sessions for a specified stage"
  },
  {
    "API": "ivs-realtime:ListStages",
    "EventSource": "ivs-realtime",
    "EventName": "ListStages",
    "Description": "Gets summary information about all stages in your account, in the AWS region where the API request is processed"
  },
  {
    "API": "ivs-realtime:ListStorageConfigurations",
    "EventSource": "ivs-realtime",
    "EventName": "ListStorageConfigurations",
    "Description": "Gets summary information about all storage configurations in your account, in the AWS region where the API request is processed"
  },
  {
    "API": "ivs-realtime:ListTagsForResource",
    "EventSource": "ivs-realtime",
    "EventName": "ListTagsForResource",
    "Description": "Gets information about AWS tags for the specified ARN"
  },
  {
    "API": "ivs-realtime:StartComposition",
    "EventSource": "ivs-realtime",
    "EventName": "StartComposition",
    "Description": "Starts a Composition from a stage based on the configuration provided in the request"
  },
  {
    "API": "ivs-realtime:StopComposition",
    "EventSource": "ivs-realtime",
    "EventName": "StopComposition",
    "Description": "Stops and deletes a Composition resource"
  },
  {
    "API": "ivs-realtime:TagResource",
    "EventSource": "ivs-realtime",
    "EventName": "TagResource",
    "Description": "Adds or updates tags for the AWS resource with the specified ARN"
  },
  {
    "API": "ivs-realtime:UntagResource",
    "EventSource": "ivs-realtime",
    "EventName": "UntagResource",
    "Description": "Removes tags from the resource with the specified ARN"
  },
  {
    "API": "ivs-realtime:UpdateStage",
    "EventSource": "ivs-realtime",
    "EventName": "UpdateStage",
    "Description": "Updates a stage’s configuration"
  },
  {
    "API": "ivschat:CreateChatToken",
    "EventSource": "ivschat",
    "EventName": "CreateChatToken",
    "Description": "Creates an encrypted token that is used by a chat participant to establish an individual WebSocket chat connection to a room"
  },
  {
    "API": "ivschat:CreateLoggingConfiguration",
    "EventSource": "ivschat",
    "EventName": "CreateLoggingConfiguration",
    "Description": "Creates a logging configuration that allows clients to store and record sent messages"
  },
  {
    "API": "ivschat:CreateRoom",
    "EventSource": "ivschat",
    "EventName": "CreateRoom",
    "Description": "Creates a room that allows clients to connect and pass messages"
  },
  {
    "API": "ivschat:DeleteLoggingConfiguration",
    "EventSource": "ivschat",
    "EventName": "DeleteLoggingConfiguration",
    "Description": "Deletes the specified logging configuration"
  },
  {
    "API": "ivschat:DeleteMessage",
    "EventSource": "ivschat",
    "EventName": "DeleteMessage",
    "Description": "Sends an event to a specific room which directs clients to delete a specific message; that is, unrender it from view and delete it from the client’s chat history"
  },
  {
    "API": "ivschat:DeleteRoom",
    "EventSource": "ivschat",
    "EventName": "DeleteRoom",
    "Description": "Deletes the specified room"
  },
  {
    "API": "ivschat:DisconnectUser",
    "EventSource": "ivschat",
    "EventName": "DisconnectUser",
    "Description": "Disconnects all connections using a specified user ID from a room"
  },
  {
    "API": "ivschat:GeneratePresignedUrl",
    "EventSource": "ivschat",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "ivschat:GetLoggingConfiguration",
    "EventSource": "ivschat",
    "EventName": "GetLoggingConfiguration",
    "Description": "Gets the specified logging configuration"
  },
  {
    "API": "ivschat:GetRoom",
    "EventSource": "ivschat",
    "EventName": "GetRoom",
    "Description": "Gets the specified room"
  },
  {
    "API": "ivschat:ListLoggingConfigurations",
    "EventSource": "ivschat",
    "EventName": "ListLoggingConfigurations",
    "Description": "Gets summary information about all your logging configurations in the AWS region where the API request is processed"
  },
  {
    "API": "ivschat:ListRooms",
    "EventSource": "ivschat",
    "EventName": "ListRooms",
    "Description": "Gets summary information about all your rooms in the AWS region where the API request is processed"
  },
  {
    "API": "ivschat:ListTagsForResource",
    "EventSource": "ivschat",
    "EventName": "ListTagsForResource",
    "Description": "Gets information about AWS tags for the specified ARN"
  },
  {
    "API": "ivschat:SendEvent",
    "EventSource": "ivschat",
    "EventName": "SendEvent",
    "Description": "Sends an event to a room"
  },
  {
    "API": "ivschat:TagResource",
    "EventSource": "ivschat",
    "EventName": "TagResource",
    "Description": "Adds or updates tags for the AWS resource with the specified ARN"
  },
  {
    "API": "ivschat:UntagResource",
    "EventSource": "ivschat",
    "EventName": "UntagResource",
    "Description": "Removes tags from the resource with the specified ARN"
  },
  {
    "API": "ivschat:UpdateLoggingConfiguration",
    "EventSource": "ivschat",
    "EventName": "UpdateLoggingConfiguration",
    "Description": "Updates a specified logging configuration"
  },
  {
    "API": "ivschat:UpdateRoom",
    "EventSource": "ivschat",
    "EventName": "UpdateRoom",
    "Description": "Updates a room’s configuration"
  },
  {
    "API": "kafka:BatchAssociateScramSecret",
    "EventSource": "kafka",
    "EventName": "BatchAssociateScramSecret",
    "Description": "Associates one or more Scram Secrets with an Amazon MSK cluster"
  },
  {
    "API": "kafka:BatchDisassociateScramSecret",
    "EventSource": "kafka",
    "EventName": "BatchDisassociateScramSecret",
    "Description": "Disassociates one or more Scram Secrets from an Amazon MSK cluster"
  },
  {
    "API": "kafka:CreateCluster",
    "EventSource": "kafka",
    "EventName": "CreateCluster",
    "Description": "Creates a new MSK cluster"
  },
  {
    "API": "kafka:CreateClusterV2",
    "EventSource": "kafka",
    "EventName": "CreateClusterV2",
    "Description": "Creates a new MSK cluster"
  },
  {
    "API": "kafka:CreateConfiguration",
    "EventSource": "kafka",
    "EventName": "CreateConfiguration",
    "Description": "Creates a new MSK configuration"
  },
  {
    "API": "kafka:CreateReplicator",
    "EventSource": "kafka",
    "EventName": "CreateReplicator",
    "Description": "Creates the replicator"
  },
  {
    "API": "kafka:CreateVpcConnection",
    "EventSource": "kafka",
    "EventName": "CreateVpcConnection",
    "Description": "Creates a new MSK VPC connection"
  },
  {
    "API": "kafka:DeleteCluster",
    "EventSource": "kafka",
    "EventName": "DeleteCluster",
    "Description": "Deletes the MSK cluster specified by the Amazon Resource Name (ARN) in the request"
  },
  {
    "API": "kafka:DeleteClusterPolicy",
    "EventSource": "kafka",
    "EventName": "DeleteClusterPolicy",
    "Description": "Deletes the MSK cluster policy specified by the Amazon Resource Name (ARN) in the request"
  },
  {
    "API": "kafka:DeleteConfiguration",
    "EventSource": "kafka",
    "EventName": "DeleteConfiguration",
    "Description": "Deletes an MSK Configuration"
  },
  {
    "API": "kafka:DeleteReplicator",
    "EventSource": "kafka",
    "EventName": "DeleteReplicator",
    "Description": "Deletes a replicator"
  },
  {
    "API": "kafka:DeleteVpcConnection",
    "EventSource": "kafka",
    "EventName": "DeleteVpcConnection",
    "Description": "Deletes a MSK VPC connection"
  },
  {
    "API": "kafka:DescribeCluster",
    "EventSource": "kafka",
    "EventName": "DescribeCluster",
    "Description": "Returns a description of the MSK cluster whose Amazon Resource Name (ARN) is specified in the request"
  },
  {
    "API": "kafka:DescribeClusterOperation",
    "EventSource": "kafka",
    "EventName": "DescribeClusterOperation",
    "Description": "Returns a description of the cluster operation specified by the ARN"
  },
  {
    "API": "kafka:DescribeClusterOperationV2",
    "EventSource": "kafka",
    "EventName": "DescribeClusterOperationV2",
    "Description": "Returns a description of the cluster operation specified by the ARN"
  },
  {
    "API": "kafka:DescribeClusterV2",
    "EventSource": "kafka",
    "EventName": "DescribeClusterV2",
    "Description": "Returns a description of the MSK cluster whose Amazon Resource Name (ARN) is specified in the request"
  },
  {
    "API": "kafka:DescribeConfiguration",
    "EventSource": "kafka",
    "EventName": "DescribeConfiguration",
    "Description": "Returns a description of this MSK configuration"
  },
  {
    "API": "kafka:DescribeConfigurationRevision",
    "EventSource": "kafka",
    "EventName": "DescribeConfigurationRevision",
    "Description": "Returns a description of this revision of the configuration"
  },
  {
    "API": "kafka:DescribeReplicator",
    "EventSource": "kafka",
    "EventName": "DescribeReplicator",
    "Description": "Describes a replicator"
  },
  {
    "API": "kafka:DescribeVpcConnection",
    "EventSource": "kafka",
    "EventName": "DescribeVpcConnection",
    "Description": "Returns a description of this MSK VPC connection"
  },
  {
    "API": "kafka:GeneratePresignedUrl",
    "EventSource": "kafka",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "kafka:GetBootstrapBrokers",
    "EventSource": "kafka",
    "EventName": "GetBootstrapBrokers",
    "Description": "A list of brokers that a client application can use to bootstrap"
  },
  {
    "API": "kafka:GetClusterPolicy",
    "EventSource": "kafka",
    "EventName": "GetClusterPolicy",
    "Description": "Get the MSK cluster policy specified by the Amazon Resource Name (ARN) in the request"
  },
  {
    "API": "kafka:GetCompatibleKafkaVersions",
    "EventSource": "kafka",
    "EventName": "GetCompatibleKafkaVersions",
    "Description": "Gets the Apache Kafka versions to which you can update the MSK cluster"
  },
  {
    "API": "kafka:ListClientVpcConnections",
    "EventSource": "kafka",
    "EventName": "ListClientVpcConnections",
    "Description": "Returns a list of all the VPC connections in this Region"
  },
  {
    "API": "kafka:ListClusterOperations",
    "EventSource": "kafka",
    "EventName": "ListClusterOperations",
    "Description": "Returns a list of all the operations that have been performed on the specified MSK cluster"
  },
  {
    "API": "kafka:ListClusterOperationsV2",
    "EventSource": "kafka",
    "EventName": "ListClusterOperationsV2",
    "Description": "Returns a list of all the operations that have been performed on the specified MSK cluster"
  },
  {
    "API": "kafka:ListClusters",
    "EventSource": "kafka",
    "EventName": "ListClusters",
    "Description": "Returns a list of all the MSK clusters in the current Region"
  },
  {
    "API": "kafka:ListClustersV2",
    "EventSource": "kafka",
    "EventName": "ListClustersV2",
    "Description": "Returns a list of all the MSK clusters in the current Region"
  },
  {
    "API": "kafka:ListConfigurationRevisions",
    "EventSource": "kafka",
    "EventName": "ListConfigurationRevisions",
    "Description": "Returns a list of all the MSK configurations in this Region"
  },
  {
    "API": "kafka:ListConfigurations",
    "EventSource": "kafka",
    "EventName": "ListConfigurations",
    "Description": "Returns a list of all the MSK configurations in this Region"
  },
  {
    "API": "kafka:ListKafkaVersions",
    "EventSource": "kafka",
    "EventName": "ListKafkaVersions",
    "Description": "Returns a list of Apache Kafka versions"
  },
  {
    "API": "kafka:ListNodes",
    "EventSource": "kafka",
    "EventName": "ListNodes",
    "Description": "Returns a list of the broker nodes in the cluster"
  },
  {
    "API": "kafka:ListReplicators",
    "EventSource": "kafka",
    "EventName": "ListReplicators",
    "Description": "Lists the replicators"
  },
  {
    "API": "kafka:ListScramSecrets",
    "EventSource": "kafka",
    "EventName": "ListScramSecrets",
    "Description": "Returns a list of the Scram Secrets associated with an Amazon MSK cluster"
  },
  {
    "API": "kafka:ListTagsForResource",
    "EventSource": "kafka",
    "EventName": "ListTagsForResource",
    "Description": "Returns a list of the tags associated with the specified resource"
  },
  {
    "API": "kafka:ListVpcConnections",
    "EventSource": "kafka",
    "EventName": "ListVpcConnections",
    "Description": "Returns a list of all the VPC connections in this Region"
  },
  {
    "API": "kafka:PutClusterPolicy",
    "EventSource": "kafka",
    "EventName": "PutClusterPolicy",
    "Description": "Creates or updates the MSK cluster policy specified by the cluster Amazon Resource Name (ARN) in the request"
  },
  {
    "API": "kafka:RebootBroker",
    "EventSource": "kafka",
    "EventName": "RebootBroker",
    "Description": "Reboots brokers"
  },
  {
    "API": "kafka:RejectClientVpcConnection",
    "EventSource": "kafka",
    "EventName": "RejectClientVpcConnection",
    "Description": "Returns empty response"
  },
  {
    "API": "kafka:TagResource",
    "EventSource": "kafka",
    "EventName": "TagResource",
    "Description": "Adds tags to the specified MSK resource"
  },
  {
    "API": "kafka:UntagResource",
    "EventSource": "kafka",
    "EventName": "UntagResource",
    "Description": "Removes the tags associated with the keys that are provided in the query"
  },
  {
    "API": "kafka:UpdateBrokerCount",
    "EventSource": "kafka",
    "EventName": "UpdateBrokerCount",
    "Description": "Updates the number of broker nodes in the cluster"
  },
  {
    "API": "kafka:UpdateBrokerStorage",
    "EventSource": "kafka",
    "EventName": "UpdateBrokerStorage",
    "Description": "Updates the EBS storage associated with MSK brokers"
  },
  {
    "API": "kafka:UpdateBrokerType",
    "EventSource": "kafka",
    "EventName": "UpdateBrokerType",
    "Description": "Updates EC2 instance type"
  },
  {
    "API": "kafka:UpdateClusterConfiguration",
    "EventSource": "kafka",
    "EventName": "UpdateClusterConfiguration",
    "Description": "Updates the cluster with the configuration that is specified in the request body"
  },
  {
    "API": "kafka:UpdateClusterKafkaVersion",
    "EventSource": "kafka",
    "EventName": "UpdateClusterKafkaVersion",
    "Description": "Updates the Apache Kafka version for the cluster"
  },
  {
    "API": "kafka:UpdateConfiguration",
    "EventSource": "kafka",
    "EventName": "UpdateConfiguration",
    "Description": "Updates an MSK configuration"
  },
  {
    "API": "kafka:UpdateConnectivity",
    "EventSource": "kafka",
    "EventName": "UpdateConnectivity",
    "Description": "Updates the cluster's connectivity configuration"
  },
  {
    "API": "kafka:UpdateMonitoring",
    "EventSource": "kafka",
    "EventName": "UpdateMonitoring",
    "Description": "Updates the monitoring settings for the cluster"
  },
  {
    "API": "kafka:UpdateReplicationInfo",
    "EventSource": "kafka",
    "EventName": "UpdateReplicationInfo",
    "Description": "Updates replication info of a replicator"
  },
  {
    "API": "kafka:UpdateSecurity",
    "EventSource": "kafka",
    "EventName": "UpdateSecurity",
    "Description": "Updates the security settings for the cluster"
  },
  {
    "API": "kafka:UpdateStorage",
    "EventSource": "kafka",
    "EventName": "UpdateStorage",
    "Description": "Updates cluster broker volume size (or) sets cluster storage mode to TIERED"
  },
  {
    "API": "kafkaconnect:CreateConnector",
    "EventSource": "kafkaconnect",
    "EventName": "CreateConnector",
    "Description": "Creates a connector using the specified properties"
  },
  {
    "API": "kafkaconnect:CreateCustomPlugin",
    "EventSource": "kafkaconnect",
    "EventName": "CreateCustomPlugin",
    "Description": "Creates a custom plugin using the specified properties"
  },
  {
    "API": "kafkaconnect:CreateWorkerConfiguration",
    "EventSource": "kafkaconnect",
    "EventName": "CreateWorkerConfiguration",
    "Description": "Creates a worker configuration using the specified properties"
  },
  {
    "API": "kafkaconnect:DeleteConnector",
    "EventSource": "kafkaconnect",
    "EventName": "DeleteConnector",
    "Description": "Deletes the specified connector"
  },
  {
    "API": "kafkaconnect:DeleteCustomPlugin",
    "EventSource": "kafkaconnect",
    "EventName": "DeleteCustomPlugin",
    "Description": "Deletes a custom plugin"
  },
  {
    "API": "kafkaconnect:DeleteWorkerConfiguration",
    "EventSource": "kafkaconnect",
    "EventName": "DeleteWorkerConfiguration",
    "Description": "Deletes the specified worker configuration"
  },
  {
    "API": "kafkaconnect:DescribeConnector",
    "EventSource": "kafkaconnect",
    "EventName": "DescribeConnector",
    "Description": "Returns summary information about the connector"
  },
  {
    "API": "kafkaconnect:DescribeCustomPlugin",
    "EventSource": "kafkaconnect",
    "EventName": "DescribeCustomPlugin",
    "Description": "A summary description of the custom plugin"
  },
  {
    "API": "kafkaconnect:DescribeWorkerConfiguration",
    "EventSource": "kafkaconnect",
    "EventName": "DescribeWorkerConfiguration",
    "Description": "Returns information about a worker configuration"
  },
  {
    "API": "kafkaconnect:GeneratePresignedUrl",
    "EventSource": "kafkaconnect",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "kafkaconnect:ListConnectors",
    "EventSource": "kafkaconnect",
    "EventName": "ListConnectors",
    "Description": "Returns a list of all the connectors in this account and Region"
  },
  {
    "API": "kafkaconnect:ListCustomPlugins",
    "EventSource": "kafkaconnect",
    "EventName": "ListCustomPlugins",
    "Description": "Returns a list of all of the custom plugins in this account and Region"
  },
  {
    "API": "kafkaconnect:ListTagsForResource",
    "EventSource": "kafkaconnect",
    "EventName": "ListTagsForResource",
    "Description": "Lists all the tags attached to the specified resource"
  },
  {
    "API": "kafkaconnect:ListWorkerConfigurations",
    "EventSource": "kafkaconnect",
    "EventName": "ListWorkerConfigurations",
    "Description": "Returns a list of all of the worker configurations in this account and Region"
  },
  {
    "API": "kafkaconnect:TagResource",
    "EventSource": "kafkaconnect",
    "EventName": "TagResource",
    "Description": "Attaches tags to the specified resource"
  },
  {
    "API": "kafkaconnect:UntagResource",
    "EventSource": "kafkaconnect",
    "EventName": "UntagResource",
    "Description": "Removes tags from the specified resource"
  },
  {
    "API": "kafkaconnect:UpdateConnector",
    "EventSource": "kafkaconnect",
    "EventName": "UpdateConnector",
    "Description": "Updates the specified connector"
  },
  {
    "API": "kendra:AssociateEntitiesToExperience",
    "EventSource": "kendra",
    "EventName": "AssociateEntitiesToExperience",
    "Description": "Grants users or groups in your IAM Identity Center identity source access to your Amazon Kendra experience"
  },
  {
    "API": "kendra:AssociatePersonasToEntities",
    "EventSource": "kendra",
    "EventName": "AssociatePersonasToEntities",
    "Description": "Defines the specific permissions of users or groups in your IAM Identity Center identity source with access to your Amazon Kendra experience"
  },
  {
    "API": "kendra:BatchDeleteDocument",
    "EventSource": "kendra",
    "EventName": "BatchDeleteDocument",
    "Description": "Removes one or more documents from an index"
  },
  {
    "API": "kendra:BatchDeleteFeaturedResultsSet",
    "EventSource": "kendra",
    "EventName": "BatchDeleteFeaturedResultsSet",
    "Description": "Removes one or more sets of featured results"
  },
  {
    "API": "kendra:BatchGetDocumentStatus",
    "EventSource": "kendra",
    "EventName": "BatchGetDocumentStatus",
    "Description": "Returns the indexing status for one or more documents submitted with the `BatchPutDocument <https://docs"
  },
  {
    "API": "kendra:BatchPutDocument",
    "EventSource": "kendra",
    "EventName": "BatchPutDocument",
    "Description": "Adds one or more documents to an index"
  },
  {
    "API": "kendra:ClearQuerySuggestions",
    "EventSource": "kendra",
    "EventName": "ClearQuerySuggestions",
    "Description": "Clears existing query suggestions from an index"
  },
  {
    "API": "kendra:CreateAccessControlConfiguration",
    "EventSource": "kendra",
    "EventName": "CreateAccessControlConfiguration",
    "Description": "Creates an access configuration for your documents"
  },
  {
    "API": "kendra:CreateDataSource",
    "EventSource": "kendra",
    "EventName": "CreateDataSource",
    "Description": "Creates a data source connector that you want to use with an Amazon Kendra index"
  },
  {
    "API": "kendra:CreateExperience",
    "EventSource": "kendra",
    "EventName": "CreateExperience",
    "Description": "Creates an Amazon Kendra experience such as a search application"
  },
  {
    "API": "kendra:CreateFaq",
    "EventSource": "kendra",
    "EventName": "CreateFaq",
    "Description": "Creates a set of frequently ask questions (FAQs) using a specified FAQ file stored in an Amazon S3 bucket"
  },
  {
    "API": "kendra:CreateFeaturedResultsSet",
    "EventSource": "kendra",
    "EventName": "CreateFeaturedResultsSet",
    "Description": "Creates a set of featured results to display at the top of the search results page"
  },
  {
    "API": "kendra:CreateIndex",
    "EventSource": "kendra",
    "EventName": "CreateIndex",
    "Description": "Creates an Amazon Kendra index"
  },
  {
    "API": "kendra:CreateQuerySuggestionsBlockList",
    "EventSource": "kendra",
    "EventName": "CreateQuerySuggestionsBlockList",
    "Description": "Creates a block list to exlcude certain queries from suggestions"
  },
  {
    "API": "kendra:CreateThesaurus",
    "EventSource": "kendra",
    "EventName": "CreateThesaurus",
    "Description": "Creates a thesaurus for an index"
  },
  {
    "API": "kendra:DeleteAccessControlConfiguration",
    "EventSource": "kendra",
    "EventName": "DeleteAccessControlConfiguration",
    "Description": "Deletes an access control configuration that you created for your documents in an index"
  },
  {
    "API": "kendra:DeleteDataSource",
    "EventSource": "kendra",
    "EventName": "DeleteDataSource",
    "Description": "Deletes an Amazon Kendra data source connector"
  },
  {
    "API": "kendra:DeleteExperience",
    "EventSource": "kendra",
    "EventName": "DeleteExperience",
    "Description": "Deletes your Amazon Kendra experience such as a search application"
  },
  {
    "API": "kendra:DeleteFaq",
    "EventSource": "kendra",
    "EventName": "DeleteFaq",
    "Description": "Removes an FAQ from an index"
  },
  {
    "API": "kendra:DeleteIndex",
    "EventSource": "kendra",
    "EventName": "DeleteIndex",
    "Description": "Deletes an Amazon Kendra index"
  },
  {
    "API": "kendra:DeletePrincipalMapping",
    "EventSource": "kendra",
    "EventName": "DeletePrincipalMapping",
    "Description": "Deletes a group so that all users and sub groups that belong to the group can no longer access documents only available to that group"
  },
  {
    "API": "kendra:DeleteQuerySuggestionsBlockList",
    "EventSource": "kendra",
    "EventName": "DeleteQuerySuggestionsBlockList",
    "Description": "Deletes a block list used for query suggestions for an index"
  },
  {
    "API": "kendra:DeleteThesaurus",
    "EventSource": "kendra",
    "EventName": "DeleteThesaurus",
    "Description": "Deletes an Amazon Kendra thesaurus"
  },
  {
    "API": "kendra:DescribeAccessControlConfiguration",
    "EventSource": "kendra",
    "EventName": "DescribeAccessControlConfiguration",
    "Description": "Gets information about an access control configuration that you created for your documents in an index"
  },
  {
    "API": "kendra:DescribeDataSource",
    "EventSource": "kendra",
    "EventName": "DescribeDataSource",
    "Description": "Gets information about an Amazon Kendra data source connector"
  },
  {
    "API": "kendra:DescribeExperience",
    "EventSource": "kendra",
    "EventName": "DescribeExperience",
    "Description": "Gets information about your Amazon Kendra experience such as a search application"
  },
  {
    "API": "kendra:DescribeFaq",
    "EventSource": "kendra",
    "EventName": "DescribeFaq",
    "Description": "Gets information about an FAQ list"
  },
  {
    "API": "kendra:DescribeFeaturedResultsSet",
    "EventSource": "kendra",
    "EventName": "DescribeFeaturedResultsSet",
    "Description": "Gets information about a set of featured results"
  },
  {
    "API": "kendra:DescribeIndex",
    "EventSource": "kendra",
    "EventName": "DescribeIndex",
    "Description": "Gets information about an Amazon Kendra index"
  },
  {
    "API": "kendra:DescribePrincipalMapping",
    "EventSource": "kendra",
    "EventName": "DescribePrincipalMapping",
    "Description": "Describes the processing of ``PUT`` and ``DELETE`` actions for mapping users to their groups"
  },
  {
    "API": "kendra:DescribeQuerySuggestionsBlockList",
    "EventSource": "kendra",
    "EventName": "DescribeQuerySuggestionsBlockList",
    "Description": "Gets information about a block list used for query suggestions for an index"
  },
  {
    "API": "kendra:DescribeQuerySuggestionsConfig",
    "EventSource": "kendra",
    "EventName": "DescribeQuerySuggestionsConfig",
    "Description": "Gets information on the settings of query suggestions for an index"
  },
  {
    "API": "kendra:DescribeThesaurus",
    "EventSource": "kendra",
    "EventName": "DescribeThesaurus",
    "Description": "Gets information about an Amazon Kendra thesaurus"
  },
  {
    "API": "kendra:DisassociateEntitiesFromExperience",
    "EventSource": "kendra",
    "EventName": "DisassociateEntitiesFromExperience",
    "Description": "Prevents users or groups in your IAM Identity Center identity source from accessing your Amazon Kendra experience"
  },
  {
    "API": "kendra:DisassociatePersonasFromEntities",
    "EventSource": "kendra",
    "EventName": "DisassociatePersonasFromEntities",
    "Description": "Removes the specific permissions of users or groups in your IAM Identity Center identity source with access to your Amazon Kendra experience"
  },
  {
    "API": "kendra:GeneratePresignedUrl",
    "EventSource": "kendra",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "kendra:GetQuerySuggestions",
    "EventSource": "kendra",
    "EventName": "GetQuerySuggestions",
    "Description": "Fetches the queries that are suggested to your users"
  },
  {
    "API": "kendra:GetSnapshots",
    "EventSource": "kendra",
    "EventName": "GetSnapshots",
    "Description": "Retrieves search metrics data"
  },
  {
    "API": "kendra:ListAccessControlConfigurations",
    "EventSource": "kendra",
    "EventName": "ListAccessControlConfigurations",
    "Description": "Lists one or more access control configurations for an index"
  },
  {
    "API": "kendra:ListDataSourceSyncJobs",
    "EventSource": "kendra",
    "EventName": "ListDataSourceSyncJobs",
    "Description": "Gets statistics about synchronizing a data source connector"
  },
  {
    "API": "kendra:ListDataSources",
    "EventSource": "kendra",
    "EventName": "ListDataSources",
    "Description": "Lists the data source connectors that you have created"
  },
  {
    "API": "kendra:ListEntityPersonas",
    "EventSource": "kendra",
    "EventName": "ListEntityPersonas",
    "Description": "Lists specific permissions of users and groups with access to your Amazon Kendra experience"
  },
  {
    "API": "kendra:ListExperienceEntities",
    "EventSource": "kendra",
    "EventName": "ListExperienceEntities",
    "Description": "Lists users or groups in your IAM Identity Center identity source that are granted access to your Amazon Kendra experience"
  },
  {
    "API": "kendra:ListExperiences",
    "EventSource": "kendra",
    "EventName": "ListExperiences",
    "Description": "Lists one or more Amazon Kendra experiences"
  },
  {
    "API": "kendra:ListFaqs",
    "EventSource": "kendra",
    "EventName": "ListFaqs",
    "Description": "Gets a list of FAQ lists associated with an index"
  },
  {
    "API": "kendra:ListFeaturedResultsSets",
    "EventSource": "kendra",
    "EventName": "ListFeaturedResultsSets",
    "Description": "Lists all your sets of featured results for a given index"
  },
  {
    "API": "kendra:ListGroupsOlderThanOrderingId",
    "EventSource": "kendra",
    "EventName": "ListGroupsOlderThanOrderingId",
    "Description": "Provides a list of groups that are mapped to users before a given ordering or timestamp identifier"
  },
  {
    "API": "kendra:ListIndices",
    "EventSource": "kendra",
    "EventName": "ListIndices",
    "Description": "Lists the Amazon Kendra indexes that you created"
  },
  {
    "API": "kendra:ListQuerySuggestionsBlockLists",
    "EventSource": "kendra",
    "EventName": "ListQuerySuggestionsBlockLists",
    "Description": "Lists the block lists used for query suggestions for an index"
  },
  {
    "API": "kendra:ListTagsForResource",
    "EventSource": "kendra",
    "EventName": "ListTagsForResource",
    "Description": "Gets a list of tags associated with a specified resource"
  },
  {
    "API": "kendra:ListThesauri",
    "EventSource": "kendra",
    "EventName": "ListThesauri",
    "Description": "Lists the thesauri for an index"
  },
  {
    "API": "kendra:PutPrincipalMapping",
    "EventSource": "kendra",
    "EventName": "PutPrincipalMapping",
    "Description": "Maps users to their groups so that you only need to provide the user ID when you issue the query"
  },
  {
    "API": "kendra:StartDataSourceSyncJob",
    "EventSource": "kendra",
    "EventName": "StartDataSourceSyncJob",
    "Description": "Starts a synchronization job for a data source connector"
  },
  {
    "API": "kendra:StopDataSourceSyncJob",
    "EventSource": "kendra",
    "EventName": "StopDataSourceSyncJob",
    "Description": "Stops a synchronization job that is currently running"
  },
  {
    "API": "kendra:SubmitFeedback",
    "EventSource": "kendra",
    "EventName": "SubmitFeedback",
    "Description": "Enables you to provide feedback to Amazon Kendra to improve the performance of your index"
  },
  {
    "API": "kendra:TagResource",
    "EventSource": "kendra",
    "EventName": "TagResource",
    "Description": "Adds the specified tag to the specified index, FAQ, or data source resource"
  },
  {
    "API": "kendra:UntagResource",
    "EventSource": "kendra",
    "EventName": "UntagResource",
    "Description": "Removes a tag from an index, FAQ, or a data source"
  },
  {
    "API": "kendra:UpdateAccessControlConfiguration",
    "EventSource": "kendra",
    "EventName": "UpdateAccessControlConfiguration",
    "Description": "Updates an access control configuration for your documents in an index"
  },
  {
    "API": "kendra:UpdateDataSource",
    "EventSource": "kendra",
    "EventName": "UpdateDataSource",
    "Description": "Updates an Amazon Kendra data source connector"
  },
  {
    "API": "kendra:UpdateExperience",
    "EventSource": "kendra",
    "EventName": "UpdateExperience",
    "Description": "Updates your Amazon Kendra experience such as a search application"
  },
  {
    "API": "kendra:UpdateFeaturedResultsSet",
    "EventSource": "kendra",
    "EventName": "UpdateFeaturedResultsSet",
    "Description": "Updates a set of featured results"
  },
  {
    "API": "kendra:UpdateIndex",
    "EventSource": "kendra",
    "EventName": "UpdateIndex",
    "Description": "Updates an Amazon Kendra index"
  },
  {
    "API": "kendra:UpdateQuerySuggestionsBlockList",
    "EventSource": "kendra",
    "EventName": "UpdateQuerySuggestionsBlockList",
    "Description": "Updates a block list used for query suggestions for an index"
  },
  {
    "API": "kendra:UpdateQuerySuggestionsConfig",
    "EventSource": "kendra",
    "EventName": "UpdateQuerySuggestionsConfig",
    "Description": "Updates the settings of query suggestions for an index"
  },
  {
    "API": "kendra:UpdateThesaurus",
    "EventSource": "kendra",
    "EventName": "UpdateThesaurus",
    "Description": "Updates a thesaurus for an index"
  },
  {
    "API": "kendra-ranking:CreateRescoreExecutionPlan",
    "EventSource": "kendra-ranking",
    "EventName": "CreateRescoreExecutionPlan",
    "Description": "Creates a rescore execution plan"
  },
  {
    "API": "kendra-ranking:DeleteRescoreExecutionPlan",
    "EventSource": "kendra-ranking",
    "EventName": "DeleteRescoreExecutionPlan",
    "Description": "Deletes a rescore execution plan"
  },
  {
    "API": "kendra-ranking:DescribeRescoreExecutionPlan",
    "EventSource": "kendra-ranking",
    "EventName": "DescribeRescoreExecutionPlan",
    "Description": "Gets information about a rescore execution plan"
  },
  {
    "API": "kendra-ranking:GeneratePresignedUrl",
    "EventSource": "kendra-ranking",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "kendra-ranking:ListRescoreExecutionPlans",
    "EventSource": "kendra-ranking",
    "EventName": "ListRescoreExecutionPlans",
    "Description": "Lists your rescore execution plans"
  },
  {
    "API": "kendra-ranking:ListTagsForResource",
    "EventSource": "kendra-ranking",
    "EventName": "ListTagsForResource",
    "Description": "Gets a list of tags associated with a specified resource"
  },
  {
    "API": "kendra-ranking:TagResource",
    "EventSource": "kendra-ranking",
    "EventName": "TagResource",
    "Description": "Adds a specified tag to a specified rescore execution plan"
  },
  {
    "API": "kendra-ranking:UntagResource",
    "EventSource": "kendra-ranking",
    "EventName": "UntagResource",
    "Description": "Removes a tag from a rescore execution plan"
  },
  {
    "API": "kendra-ranking:UpdateRescoreExecutionPlan",
    "EventSource": "kendra-ranking",
    "EventName": "UpdateRescoreExecutionPlan",
    "Description": "Updates a rescore execution plan"
  },
  {
    "API": "keyspaces:CreateKeyspace",
    "EventSource": "keyspaces",
    "EventName": "CreateKeyspace",
    "Description": "The ``CreateKeyspace`` operation adds a new keyspace to your account"
  },
  {
    "API": "keyspaces:CreateTable",
    "EventSource": "keyspaces",
    "EventName": "CreateTable",
    "Description": "The ``CreateTable`` operation adds a new table to the specified keyspace"
  },
  {
    "API": "keyspaces:DeleteKeyspace",
    "EventSource": "keyspaces",
    "EventName": "DeleteKeyspace",
    "Description": "The ``DeleteKeyspace`` operation deletes a keyspace and all of its tables"
  },
  {
    "API": "keyspaces:DeleteTable",
    "EventSource": "keyspaces",
    "EventName": "DeleteTable",
    "Description": "The ``DeleteTable`` operation deletes a table and all of its data"
  },
  {
    "API": "keyspaces:GeneratePresignedUrl",
    "EventSource": "keyspaces",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "keyspaces:GetKeyspace",
    "EventSource": "keyspaces",
    "EventName": "GetKeyspace",
    "Description": "Returns the name and the Amazon Resource Name (ARN) of the specified table"
  },
  {
    "API": "keyspaces:GetTable",
    "EventSource": "keyspaces",
    "EventName": "GetTable",
    "Description": "Returns information about the table, including the table's name and current status, the keyspace name, configuration settings, and metadata"
  },
  {
    "API": "keyspaces:GetTableAutoScalingSettings",
    "EventSource": "keyspaces",
    "EventName": "GetTableAutoScalingSettings",
    "Description": "Returns auto scaling related settings of the specified table in JSON format"
  },
  {
    "API": "keyspaces:ListKeyspaces",
    "EventSource": "keyspaces",
    "EventName": "ListKeyspaces",
    "Description": "Returns a list of keyspaces"
  },
  {
    "API": "keyspaces:ListTables",
    "EventSource": "keyspaces",
    "EventName": "ListTables",
    "Description": "Returns a list of tables for a specified keyspace"
  },
  {
    "API": "keyspaces:ListTagsForResource",
    "EventSource": "keyspaces",
    "EventName": "ListTagsForResource",
    "Description": "Returns a list of all tags associated with the specified Amazon Keyspaces resource"
  },
  {
    "API": "keyspaces:RestoreTable",
    "EventSource": "keyspaces",
    "EventName": "RestoreTable",
    "Description": "Restores the table to the specified point in time within the ``earliest_restorable_timestamp`` and the current time"
  },
  {
    "API": "keyspaces:TagResource",
    "EventSource": "keyspaces",
    "EventName": "TagResource",
    "Description": "Associates a set of tags with a Amazon Keyspaces resource"
  },
  {
    "API": "keyspaces:UntagResource",
    "EventSource": "keyspaces",
    "EventName": "UntagResource",
    "Description": "Removes the association of tags from a Amazon Keyspaces resource"
  },
  {
    "API": "keyspaces:UpdateTable",
    "EventSource": "keyspaces",
    "EventName": "UpdateTable",
    "Description": "Adds new columns to the table or updates one of the table's settings, for example capacity mode, auto scaling, encryption, point-in-time recovery, or ttl settings"
  },
  {
    "API": "kinesis:AddTagsToStream",
    "EventSource": "kinesis",
    "EventName": "AddTagsToStream",
    "Description": "Adds or updates tags for the specified Kinesis data stream"
  },
  {
    "API": "kinesis:CreateStream",
    "EventSource": "kinesis",
    "EventName": "CreateStream",
    "Description": "Creates a Kinesis data stream"
  },
  {
    "API": "kinesis:DecreaseStreamRetentionPeriod",
    "EventSource": "kinesis",
    "EventName": "DecreaseStreamRetentionPeriod",
    "Description": "Decreases the Kinesis data stream's retention period, which is the length of time data records are accessible after they are added to the stream"
  },
  {
    "API": "kinesis:DeleteResourcePolicy",
    "EventSource": "kinesis",
    "EventName": "DeleteResourcePolicy",
    "Description": "Delete a policy for the specified data stream or consumer"
  },
  {
    "API": "kinesis:DeleteStream",
    "EventSource": "kinesis",
    "EventName": "DeleteStream",
    "Description": "Deletes a Kinesis data stream and all its shards and data"
  },
  {
    "API": "kinesis:DeregisterStreamConsumer",
    "EventSource": "kinesis",
    "EventName": "DeregisterStreamConsumer",
    "Description": "To deregister a consumer, provide its ARN"
  },
  {
    "API": "kinesis:DescribeLimits",
    "EventSource": "kinesis",
    "EventName": "DescribeLimits",
    "Description": "Describes the shard limits and usage for the account"
  },
  {
    "API": "kinesis:DescribeStream",
    "EventSource": "kinesis",
    "EventName": "DescribeStream",
    "Description": "Describes the specified Kinesis data stream"
  },
  {
    "API": "kinesis:DescribeStreamConsumer",
    "EventSource": "kinesis",
    "EventName": "DescribeStreamConsumer",
    "Description": "To get the description of a registered consumer, provide the ARN of the consumer"
  },
  {
    "API": "kinesis:DescribeStreamSummary",
    "EventSource": "kinesis",
    "EventName": "DescribeStreamSummary",
    "Description": "Provides a summarized description of the specified Kinesis data stream without the shard list"
  },
  {
    "API": "kinesis:DisableEnhancedMonitoring",
    "EventSource": "kinesis",
    "EventName": "DisableEnhancedMonitoring",
    "Description": "Disables enhanced monitoring"
  },
  {
    "API": "kinesis:EnableEnhancedMonitoring",
    "EventSource": "kinesis",
    "EventName": "EnableEnhancedMonitoring",
    "Description": "Enables enhanced Kinesis data stream monitoring for shard-level metrics"
  },
  {
    "API": "kinesis:GeneratePresignedUrl",
    "EventSource": "kinesis",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "kinesis:GetRecords",
    "EventSource": "kinesis",
    "EventName": "GetRecords",
    "Description": "Gets data records from a Kinesis data stream's shard"
  },
  {
    "API": "kinesis:GetResourcePolicy",
    "EventSource": "kinesis",
    "EventName": "GetResourcePolicy",
    "Description": "Returns a policy attached to the specified data stream or consumer"
  },
  {
    "API": "kinesis:GetShardIterator",
    "EventSource": "kinesis",
    "EventName": "GetShardIterator",
    "Description": "Gets an Amazon Kinesis shard iterator"
  },
  {
    "API": "kinesis:IncreaseStreamRetentionPeriod",
    "EventSource": "kinesis",
    "EventName": "IncreaseStreamRetentionPeriod",
    "Description": "Increases the Kinesis data stream's retention period, which is the length of time data records are accessible after they are added to the stream"
  },
  {
    "API": "kinesis:ListShards",
    "EventSource": "kinesis",
    "EventName": "ListShards",
    "Description": "Lists the shards in a stream and provides information about each shard"
  },
  {
    "API": "kinesis:ListStreamConsumers",
    "EventSource": "kinesis",
    "EventName": "ListStreamConsumers",
    "Description": "Lists the consumers registered to receive data from a stream using enhanced fan-out, and provides information about each consumer"
  },
  {
    "API": "kinesis:ListStreams",
    "EventSource": "kinesis",
    "EventName": "ListStreams",
    "Description": "Lists your Kinesis data streams"
  },
  {
    "API": "kinesis:ListTagsForStream",
    "EventSource": "kinesis",
    "EventName": "ListTagsForStream",
    "Description": "Lists the tags for the specified Kinesis data stream"
  },
  {
    "API": "kinesis:MergeShards",
    "EventSource": "kinesis",
    "EventName": "MergeShards",
    "Description": "Merges two adjacent shards in a Kinesis data stream and combines them into a single shard to reduce the stream's capacity to ingest and transport data"
  },
  {
    "API": "kinesis:PutRecord",
    "EventSource": "kinesis",
    "EventName": "PutRecord",
    "Description": "Writes a single data record into an Amazon Kinesis data stream"
  },
  {
    "API": "kinesis:PutRecords",
    "EventSource": "kinesis",
    "EventName": "PutRecords",
    "Description": "Writes multiple data records into a Kinesis data stream in a single call (also referred to as a ``PutRecords`` request)"
  },
  {
    "API": "kinesis:PutResourcePolicy",
    "EventSource": "kinesis",
    "EventName": "PutResourcePolicy",
    "Description": "Attaches a resource-based policy to a data stream or registered consumer"
  },
  {
    "API": "kinesis:RegisterStreamConsumer",
    "EventSource": "kinesis",
    "EventName": "RegisterStreamConsumer",
    "Description": "Registers a consumer with a Kinesis data stream"
  },
  {
    "API": "kinesis:RemoveTagsFromStream",
    "EventSource": "kinesis",
    "EventName": "RemoveTagsFromStream",
    "Description": "Removes tags from the specified Kinesis data stream"
  },
  {
    "API": "kinesis:SplitShard",
    "EventSource": "kinesis",
    "EventName": "SplitShard",
    "Description": "Splits a shard into two new shards in the Kinesis data stream, to increase the stream's capacity to ingest and transport data"
  },
  {
    "API": "kinesis:StartStreamEncryption",
    "EventSource": "kinesis",
    "EventName": "StartStreamEncryption",
    "Description": "Enables or updates server-side encryption using an Amazon Web Services KMS key for a specified stream"
  },
  {
    "API": "kinesis:StopStreamEncryption",
    "EventSource": "kinesis",
    "EventName": "StopStreamEncryption",
    "Description": "Disables server-side encryption for a specified stream"
  },
  {
    "API": "kinesis:SubscribeToShard",
    "EventSource": "kinesis",
    "EventName": "SubscribeToShard",
    "Description": "This operation establishes an HTTP/2 connection between the consumer you specify in the ``ConsumerARN`` parameter and the shard you specify in the ``ShardId`` parameter"
  },
  {
    "API": "kinesis:UpdateShardCount",
    "EventSource": "kinesis",
    "EventName": "UpdateShardCount",
    "Description": "Updates the shard count of the specified stream to the specified number of shards"
  },
  {
    "API": "kinesis:UpdateStreamMode",
    "EventSource": "kinesis",
    "EventName": "UpdateStreamMode",
    "Description": "Updates the capacity mode of the data stream"
  },
  {
    "API": "kinesis-video-archived-media:GeneratePresignedUrl",
    "EventSource": "kinesis-video-archived-media",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "kinesis-video-archived-media:GetClip",
    "EventSource": "kinesis-video-archived-media",
    "EventName": "GetClip",
    "Description": "Downloads an MP4 file (clip) containing the archived, on-demand media from the specified video stream over the specified time range"
  },
  {
    "API": "kinesis-video-archived-media:GetDashStreamingSessionUrl",
    "EventSource": "kinesis-video-archived-media",
    "EventName": "GetDashStreamingSessionUrl",
    "Description": "Retrieves an MPEG Dynamic Adaptive Streaming over HTTP (DASH) URL for the stream"
  },
  {
    "API": "kinesis-video-archived-media:GetHlsStreamingSessionUrl",
    "EventSource": "kinesis-video-archived-media",
    "EventName": "GetHlsStreamingSessionUrl",
    "Description": "Retrieves an HTTP Live Streaming (HLS) URL for the stream"
  },
  {
    "API": "kinesis-video-archived-media:GetImages",
    "EventSource": "kinesis-video-archived-media",
    "EventName": "GetImages",
    "Description": "Retrieves a list of images corresponding to each timestamp for a given time range, sampling interval, and image format configuration"
  },
  {
    "API": "kinesis-video-archived-media:GetMediaForFragmentList",
    "EventSource": "kinesis-video-archived-media",
    "EventName": "GetMediaForFragmentList",
    "Description": "Gets media for a list of fragments (specified by fragment number) from the archived data in an Amazon Kinesis video stream"
  },
  {
    "API": "kinesis-video-archived-media:ListFragments",
    "EventSource": "kinesis-video-archived-media",
    "EventName": "ListFragments",
    "Description": "Returns a list of  Fragment objects from the specified stream and timestamp range within the archived data"
  },
  {
    "API": "kinesis-video-media:GeneratePresignedUrl",
    "EventSource": "kinesis-video-media",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "kinesis-video-media:GetMedia",
    "EventSource": "kinesis-video-media",
    "EventName": "GetMedia",
    "Description": "Use this API to retrieve media content from a Kinesis video stream"
  },
  {
    "API": "kinesis-video-signaling:GeneratePresignedUrl",
    "EventSource": "kinesis-video-signaling",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "kinesis-video-signaling:GetIceServerConfig",
    "EventSource": "kinesis-video-signaling",
    "EventName": "GetIceServerConfig",
    "Description": "Gets the Interactive Connectivity Establishment (ICE) server configuration information, including URIs, username, and password which can be used to configure the WebRTC connection"
  },
  {
    "API": "kinesis-video-signaling:SendAlexaOfferToMaster",
    "EventSource": "kinesis-video-signaling",
    "EventName": "SendAlexaOfferToMaster",
    "Description": "This API allows you to connect WebRTC-enabled devices with Alexa display devices"
  },
  {
    "API": "kinesis-video-webrtc-storage:GeneratePresignedUrl",
    "EventSource": "kinesis-video-webrtc-storage",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "kinesis-video-webrtc-storage:JoinStorageSession",
    "EventSource": "kinesis-video-webrtc-storage",
    "EventName": "JoinStorageSession",
    "Description": "Join the ongoing one way-video and/or multi-way audio WebRTC session as a video producing device for an input channel"
  },
  {
    "API": "kinesisanalytics:AddApplicationCloudWatchLoggingOption",
    "EventSource": "kinesisanalytics",
    "EventName": "AddApplicationCloudWatchLoggingOption",
    "Description": ""
  },
  {
    "API": "kinesisanalytics:AddApplicationInput",
    "EventSource": "kinesisanalytics",
    "EventName": "AddApplicationInput",
    "Description": ""
  },
  {
    "API": "kinesisanalytics:AddApplicationInputProcessingConfiguration",
    "EventSource": "kinesisanalytics",
    "EventName": "AddApplicationInputProcessingConfiguration",
    "Description": ""
  },
  {
    "API": "kinesisanalytics:AddApplicationOutput",
    "EventSource": "kinesisanalytics",
    "EventName": "AddApplicationOutput",
    "Description": ""
  },
  {
    "API": "kinesisanalytics:AddApplicationReferenceDataSource",
    "EventSource": "kinesisanalytics",
    "EventName": "AddApplicationReferenceDataSource",
    "Description": ""
  },
  {
    "API": "kinesisanalytics:CreateApplication",
    "EventSource": "kinesisanalytics",
    "EventName": "CreateApplication",
    "Description": ""
  },
  {
    "API": "kinesisanalytics:DeleteApplication",
    "EventSource": "kinesisanalytics",
    "EventName": "DeleteApplication",
    "Description": ""
  },
  {
    "API": "kinesisanalytics:DeleteApplicationCloudWatchLoggingOption",
    "EventSource": "kinesisanalytics",
    "EventName": "DeleteApplicationCloudWatchLoggingOption",
    "Description": ""
  },
  {
    "API": "kinesisanalytics:DeleteApplicationInputProcessingConfiguration",
    "EventSource": "kinesisanalytics",
    "EventName": "DeleteApplicationInputProcessingConfiguration",
    "Description": ""
  },
  {
    "API": "kinesisanalytics:DeleteApplicationOutput",
    "EventSource": "kinesisanalytics",
    "EventName": "DeleteApplicationOutput",
    "Description": ""
  },
  {
    "API": "kinesisanalytics:DeleteApplicationReferenceDataSource",
    "EventSource": "kinesisanalytics",
    "EventName": "DeleteApplicationReferenceDataSource",
    "Description": ""
  },
  {
    "API": "kinesisanalytics:DescribeApplication",
    "EventSource": "kinesisanalytics",
    "EventName": "DescribeApplication",
    "Description": ""
  },
  {
    "API": "kinesisanalytics:DiscoverInputSchema",
    "EventSource": "kinesisanalytics",
    "EventName": "DiscoverInputSchema",
    "Description": ""
  },
  {
    "API": "kinesisanalytics:GeneratePresignedUrl",
    "EventSource": "kinesisanalytics",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "kinesisanalytics:ListApplications",
    "EventSource": "kinesisanalytics",
    "EventName": "ListApplications",
    "Description": ""
  },
  {
    "API": "kinesisanalytics:ListTagsForResource",
    "EventSource": "kinesisanalytics",
    "EventName": "ListTagsForResource",
    "Description": "Retrieves the list of key-value tags assigned to the application"
  },
  {
    "API": "kinesisanalytics:StartApplication",
    "EventSource": "kinesisanalytics",
    "EventName": "StartApplication",
    "Description": ""
  },
  {
    "API": "kinesisanalytics:StopApplication",
    "EventSource": "kinesisanalytics",
    "EventName": "StopApplication",
    "Description": ""
  },
  {
    "API": "kinesisanalytics:TagResource",
    "EventSource": "kinesisanalytics",
    "EventName": "TagResource",
    "Description": "Adds one or more key-value tags to a Kinesis Analytics application"
  },
  {
    "API": "kinesisanalytics:UntagResource",
    "EventSource": "kinesisanalytics",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags from a Kinesis Analytics application"
  },
  {
    "API": "kinesisanalytics:UpdateApplication",
    "EventSource": "kinesisanalytics",
    "EventName": "UpdateApplication",
    "Description": ""
  },
  {
    "API": "kinesisanalyticsv2:AddApplicationCloudWatchLoggingOption",
    "EventSource": "kinesisanalyticsv2",
    "EventName": "AddApplicationCloudWatchLoggingOption",
    "Description": "Adds an Amazon CloudWatch log stream to monitor application configuration errors"
  },
  {
    "API": "kinesisanalyticsv2:AddApplicationInput",
    "EventSource": "kinesisanalyticsv2",
    "EventName": "AddApplicationInput",
    "Description": "Adds a streaming source to your SQL-based Kinesis Data Analytics application"
  },
  {
    "API": "kinesisanalyticsv2:AddApplicationInputProcessingConfiguration",
    "EventSource": "kinesisanalyticsv2",
    "EventName": "AddApplicationInputProcessingConfiguration",
    "Description": "Adds an  InputProcessingConfiguration to a SQL-based Kinesis Data Analytics application"
  },
  {
    "API": "kinesisanalyticsv2:AddApplicationOutput",
    "EventSource": "kinesisanalyticsv2",
    "EventName": "AddApplicationOutput",
    "Description": "Adds an external destination to your SQL-based Kinesis Data Analytics application"
  },
  {
    "API": "kinesisanalyticsv2:AddApplicationReferenceDataSource",
    "EventSource": "kinesisanalyticsv2",
    "EventName": "AddApplicationReferenceDataSource",
    "Description": "Adds a reference data source to an existing SQL-based Kinesis Data Analytics application"
  },
  {
    "API": "kinesisanalyticsv2:AddApplicationVpcConfiguration",
    "EventSource": "kinesisanalyticsv2",
    "EventName": "AddApplicationVpcConfiguration",
    "Description": "Adds a Virtual Private Cloud (VPC) configuration to the application"
  },
  {
    "API": "kinesisanalyticsv2:CreateApplication",
    "EventSource": "kinesisanalyticsv2",
    "EventName": "CreateApplication",
    "Description": "Creates a Managed Service for Apache Flink application"
  },
  {
    "API": "kinesisanalyticsv2:CreateApplicationPresignedUrl",
    "EventSource": "kinesisanalyticsv2",
    "EventName": "CreateApplicationPresignedUrl",
    "Description": "Creates and returns a URL that you can use to connect to an application's extension"
  },
  {
    "API": "kinesisanalyticsv2:CreateApplicationSnapshot",
    "EventSource": "kinesisanalyticsv2",
    "EventName": "CreateApplicationSnapshot",
    "Description": "Creates a snapshot of the application's state data"
  },
  {
    "API": "kinesisanalyticsv2:DeleteApplication",
    "EventSource": "kinesisanalyticsv2",
    "EventName": "DeleteApplication",
    "Description": "Deletes the specified application"
  },
  {
    "API": "kinesisanalyticsv2:DeleteApplicationCloudWatchLoggingOption",
    "EventSource": "kinesisanalyticsv2",
    "EventName": "DeleteApplicationCloudWatchLoggingOption",
    "Description": "Deletes an Amazon CloudWatch log stream from an SQL-based Kinesis Data Analytics application"
  },
  {
    "API": "kinesisanalyticsv2:DeleteApplicationInputProcessingConfiguration",
    "EventSource": "kinesisanalyticsv2",
    "EventName": "DeleteApplicationInputProcessingConfiguration",
    "Description": "Deletes an  InputProcessingConfiguration from an input"
  },
  {
    "API": "kinesisanalyticsv2:DeleteApplicationOutput",
    "EventSource": "kinesisanalyticsv2",
    "EventName": "DeleteApplicationOutput",
    "Description": "Deletes the output destination configuration from your SQL-based Kinesis Data Analytics application's configuration"
  },
  {
    "API": "kinesisanalyticsv2:DeleteApplicationReferenceDataSource",
    "EventSource": "kinesisanalyticsv2",
    "EventName": "DeleteApplicationReferenceDataSource",
    "Description": "Deletes a reference data source configuration from the specified SQL-based Kinesis Data Analytics application's configuration"
  },
  {
    "API": "kinesisanalyticsv2:DeleteApplicationSnapshot",
    "EventSource": "kinesisanalyticsv2",
    "EventName": "DeleteApplicationSnapshot",
    "Description": "Deletes a snapshot of application state"
  },
  {
    "API": "kinesisanalyticsv2:DeleteApplicationVpcConfiguration",
    "EventSource": "kinesisanalyticsv2",
    "EventName": "DeleteApplicationVpcConfiguration",
    "Description": "Removes a VPC configuration from a Managed Service for Apache Flink application"
  },
  {
    "API": "kinesisanalyticsv2:DescribeApplication",
    "EventSource": "kinesisanalyticsv2",
    "EventName": "DescribeApplication",
    "Description": "Returns information about a specific Managed Service for Apache Flink application"
  },
  {
    "API": "kinesisanalyticsv2:DescribeApplicationSnapshot",
    "EventSource": "kinesisanalyticsv2",
    "EventName": "DescribeApplicationSnapshot",
    "Description": "Returns information about a snapshot of application state data"
  },
  {
    "API": "kinesisanalyticsv2:DescribeApplicationVersion",
    "EventSource": "kinesisanalyticsv2",
    "EventName": "DescribeApplicationVersion",
    "Description": "Provides a detailed description of a specified version of the application"
  },
  {
    "API": "kinesisanalyticsv2:DiscoverInputSchema",
    "EventSource": "kinesisanalyticsv2",
    "EventName": "DiscoverInputSchema",
    "Description": "Infers a schema for a SQL-based Kinesis Data Analytics application by evaluating sample records on the specified streaming source (Kinesis data stream or Kinesis Data Firehose delivery stream) or Amazon S3 object"
  },
  {
    "API": "kinesisanalyticsv2:GeneratePresignedUrl",
    "EventSource": "kinesisanalyticsv2",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "kinesisanalyticsv2:ListApplicationSnapshots",
    "EventSource": "kinesisanalyticsv2",
    "EventName": "ListApplicationSnapshots",
    "Description": "Lists information about the current application snapshots"
  },
  {
    "API": "kinesisanalyticsv2:ListApplicationVersions",
    "EventSource": "kinesisanalyticsv2",
    "EventName": "ListApplicationVersions",
    "Description": "Lists all the versions for the specified application, including versions that were rolled back"
  },
  {
    "API": "kinesisanalyticsv2:ListApplications",
    "EventSource": "kinesisanalyticsv2",
    "EventName": "ListApplications",
    "Description": "Returns a list of Managed Service for Apache Flink applications in your account"
  },
  {
    "API": "kinesisanalyticsv2:ListTagsForResource",
    "EventSource": "kinesisanalyticsv2",
    "EventName": "ListTagsForResource",
    "Description": "Retrieves the list of key-value tags assigned to the application"
  },
  {
    "API": "kinesisanalyticsv2:RollbackApplication",
    "EventSource": "kinesisanalyticsv2",
    "EventName": "RollbackApplication",
    "Description": "Reverts the application to the previous running version"
  },
  {
    "API": "kinesisanalyticsv2:StartApplication",
    "EventSource": "kinesisanalyticsv2",
    "EventName": "StartApplication",
    "Description": "Starts the specified Managed Service for Apache Flink application"
  },
  {
    "API": "kinesisanalyticsv2:StopApplication",
    "EventSource": "kinesisanalyticsv2",
    "EventName": "StopApplication",
    "Description": "Stops the application from processing data"
  },
  {
    "API": "kinesisanalyticsv2:TagResource",
    "EventSource": "kinesisanalyticsv2",
    "EventName": "TagResource",
    "Description": "Adds one or more key-value tags to a Managed Service for Apache Flink application"
  },
  {
    "API": "kinesisanalyticsv2:UntagResource",
    "EventSource": "kinesisanalyticsv2",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags from a Managed Service for Apache Flink application"
  },
  {
    "API": "kinesisanalyticsv2:UpdateApplication",
    "EventSource": "kinesisanalyticsv2",
    "EventName": "UpdateApplication",
    "Description": "Updates an existing Managed Service for Apache Flink application"
  },
  {
    "API": "kinesisanalyticsv2:UpdateApplicationMaintenanceConfiguration",
    "EventSource": "kinesisanalyticsv2",
    "EventName": "UpdateApplicationMaintenanceConfiguration",
    "Description": "Updates the maintenance configuration of the Managed Service for Apache Flink application"
  },
  {
    "API": "kinesisvideo:CreateSignalingChannel",
    "EventSource": "kinesisvideo",
    "EventName": "CreateSignalingChannel",
    "Description": "Creates a signaling channel"
  },
  {
    "API": "kinesisvideo:CreateStream",
    "EventSource": "kinesisvideo",
    "EventName": "CreateStream",
    "Description": "Creates a new Kinesis video stream"
  },
  {
    "API": "kinesisvideo:DeleteEdgeConfiguration",
    "EventSource": "kinesisvideo",
    "EventName": "DeleteEdgeConfiguration",
    "Description": "An asynchronous API that deletes a stream’s existing edge configuration, as well as the corresponding media from the Edge Agent"
  },
  {
    "API": "kinesisvideo:DeleteSignalingChannel",
    "EventSource": "kinesisvideo",
    "EventName": "DeleteSignalingChannel",
    "Description": "Deletes a specified signaling channel"
  },
  {
    "API": "kinesisvideo:DeleteStream",
    "EventSource": "kinesisvideo",
    "EventName": "DeleteStream",
    "Description": "Deletes a Kinesis video stream and the data contained in the stream"
  },
  {
    "API": "kinesisvideo:DescribeEdgeConfiguration",
    "EventSource": "kinesisvideo",
    "EventName": "DescribeEdgeConfiguration",
    "Description": "Describes a stream’s edge configuration that was set using the ``StartEdgeConfigurationUpdate`` API and the latest status of the edge agent's recorder and uploader jobs"
  },
  {
    "API": "kinesisvideo:DescribeImageGenerationConfiguration",
    "EventSource": "kinesisvideo",
    "EventName": "DescribeImageGenerationConfiguration",
    "Description": "Gets the ``ImageGenerationConfiguration`` for a given Kinesis video stream"
  },
  {
    "API": "kinesisvideo:DescribeMappedResourceConfiguration",
    "EventSource": "kinesisvideo",
    "EventName": "DescribeMappedResourceConfiguration",
    "Description": "Returns the most current information about the stream"
  },
  {
    "API": "kinesisvideo:DescribeMediaStorageConfiguration",
    "EventSource": "kinesisvideo",
    "EventName": "DescribeMediaStorageConfiguration",
    "Description": "Returns the most current information about the channel"
  },
  {
    "API": "kinesisvideo:DescribeNotificationConfiguration",
    "EventSource": "kinesisvideo",
    "EventName": "DescribeNotificationConfiguration",
    "Description": "Gets the ``NotificationConfiguration`` for a given Kinesis video stream"
  },
  {
    "API": "kinesisvideo:DescribeSignalingChannel",
    "EventSource": "kinesisvideo",
    "EventName": "DescribeSignalingChannel",
    "Description": "Returns the most current information about the signaling channel"
  },
  {
    "API": "kinesisvideo:DescribeStream",
    "EventSource": "kinesisvideo",
    "EventName": "DescribeStream",
    "Description": "Returns the most current information about the specified stream"
  },
  {
    "API": "kinesisvideo:GeneratePresignedUrl",
    "EventSource": "kinesisvideo",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "kinesisvideo:GetDataEndpoint",
    "EventSource": "kinesisvideo",
    "EventName": "GetDataEndpoint",
    "Description": "Gets an endpoint for a specified stream for either reading or writing"
  },
  {
    "API": "kinesisvideo:GetSignalingChannelEndpoint",
    "EventSource": "kinesisvideo",
    "EventName": "GetSignalingChannelEndpoint",
    "Description": "Provides an endpoint for the specified signaling channel to send and receive messages"
  },
  {
    "API": "kinesisvideo:ListEdgeAgentConfigurations",
    "EventSource": "kinesisvideo",
    "EventName": "ListEdgeAgentConfigurations",
    "Description": "Returns an array of edge configurations associated with the specified Edge Agent"
  },
  {
    "API": "kinesisvideo:ListSignalingChannels",
    "EventSource": "kinesisvideo",
    "EventName": "ListSignalingChannels",
    "Description": "Returns an array of ``ChannelInfo`` objects"
  },
  {
    "API": "kinesisvideo:ListStreams",
    "EventSource": "kinesisvideo",
    "EventName": "ListStreams",
    "Description": "Returns an array of ``StreamInfo`` objects"
  },
  {
    "API": "kinesisvideo:ListTagsForResource",
    "EventSource": "kinesisvideo",
    "EventName": "ListTagsForResource",
    "Description": "Returns a list of tags associated with the specified signaling channel"
  },
  {
    "API": "kinesisvideo:ListTagsForStream",
    "EventSource": "kinesisvideo",
    "EventName": "ListTagsForStream",
    "Description": "Returns a list of tags associated with the specified stream"
  },
  {
    "API": "kinesisvideo:StartEdgeConfigurationUpdate",
    "EventSource": "kinesisvideo",
    "EventName": "StartEdgeConfigurationUpdate",
    "Description": "An asynchronous API that updates a stream’s existing edge configuration"
  },
  {
    "API": "kinesisvideo:TagResource",
    "EventSource": "kinesisvideo",
    "EventName": "TagResource",
    "Description": "Adds one or more tags to a signaling channel"
  },
  {
    "API": "kinesisvideo:TagStream",
    "EventSource": "kinesisvideo",
    "EventName": "TagStream",
    "Description": "Adds one or more tags to a stream"
  },
  {
    "API": "kinesisvideo:UntagResource",
    "EventSource": "kinesisvideo",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags from a signaling channel"
  },
  {
    "API": "kinesisvideo:UntagStream",
    "EventSource": "kinesisvideo",
    "EventName": "UntagStream",
    "Description": "Removes one or more tags from a stream"
  },
  {
    "API": "kinesisvideo:UpdateDataRetention",
    "EventSource": "kinesisvideo",
    "EventName": "UpdateDataRetention",
    "Description": "Increases or decreases the stream's data retention period by the value that you specify"
  },
  {
    "API": "kinesisvideo:UpdateImageGenerationConfiguration",
    "EventSource": "kinesisvideo",
    "EventName": "UpdateImageGenerationConfiguration",
    "Description": "Updates the ``StreamInfo`` and ``ImageProcessingConfiguration`` fields"
  },
  {
    "API": "kinesisvideo:UpdateMediaStorageConfiguration",
    "EventSource": "kinesisvideo",
    "EventName": "UpdateMediaStorageConfiguration",
    "Description": "Associates a ``SignalingChannel`` to a stream to store the media"
  },
  {
    "API": "kinesisvideo:UpdateNotificationConfiguration",
    "EventSource": "kinesisvideo",
    "EventName": "UpdateNotificationConfiguration",
    "Description": "Updates the notification information for a stream"
  },
  {
    "API": "kinesisvideo:UpdateSignalingChannel",
    "EventSource": "kinesisvideo",
    "EventName": "UpdateSignalingChannel",
    "Description": "Updates the existing signaling channel"
  },
  {
    "API": "kinesisvideo:UpdateStream",
    "EventSource": "kinesisvideo",
    "EventName": "UpdateStream",
    "Description": "Updates stream metadata, such as the device name and media type"
  },
  {
    "API": "kms:CancelKeyDeletion",
    "EventSource": "kms",
    "EventName": "CancelKeyDeletion",
    "Description": "Cancels the deletion of a KMS key"
  },
  {
    "API": "kms:ConnectCustomKeyStore",
    "EventSource": "kms",
    "EventName": "ConnectCustomKeyStore",
    "Description": "Connects or reconnects a `custom key store <https://docs"
  },
  {
    "API": "kms:CreateAlias",
    "EventSource": "kms",
    "EventName": "CreateAlias",
    "Description": "Creates a friendly name for a KMS key"
  },
  {
    "API": "kms:CreateCustomKeyStore",
    "EventSource": "kms",
    "EventName": "CreateCustomKeyStore",
    "Description": "Creates a `custom key store <https://docs"
  },
  {
    "API": "kms:CreateGrant",
    "EventSource": "kms",
    "EventName": "CreateGrant",
    "Description": "Adds a grant to a KMS key"
  },
  {
    "API": "kms:CreateKey",
    "EventSource": "kms",
    "EventName": "CreateKey",
    "Description": "Creates a unique customer managed `KMS key <https://docs"
  },
  {
    "API": "kms:DeleteAlias",
    "EventSource": "kms",
    "EventName": "DeleteAlias",
    "Description": "Deletes the specified alias"
  },
  {
    "API": "kms:DeleteCustomKeyStore",
    "EventSource": "kms",
    "EventName": "DeleteCustomKeyStore",
    "Description": "Deletes a `custom key store <https://docs"
  },
  {
    "API": "kms:DeleteImportedKeyMaterial",
    "EventSource": "kms",
    "EventName": "DeleteImportedKeyMaterial",
    "Description": "Deletes key material that was previously imported"
  },
  {
    "API": "kms:DeriveSharedSecret",
    "EventSource": "kms",
    "EventName": "DeriveSharedSecret",
    "Description": "Derives a shared secret using a key agreement algorithm"
  },
  {
    "API": "kms:DescribeCustomKeyStores",
    "EventSource": "kms",
    "EventName": "DescribeCustomKeyStores",
    "Description": "Gets information about `custom key stores <https://docs"
  },
  {
    "API": "kms:DescribeKey",
    "EventSource": "kms",
    "EventName": "DescribeKey",
    "Description": "Provides detailed information about a KMS key"
  },
  {
    "API": "kms:DisableKey",
    "EventSource": "kms",
    "EventName": "DisableKey",
    "Description": "Sets the state of a KMS key to disabled"
  },
  {
    "API": "kms:DisableKeyRotation",
    "EventSource": "kms",
    "EventName": "DisableKeyRotation",
    "Description": "Disables `automatic rotation of the key material <https://docs"
  },
  {
    "API": "kms:DisconnectCustomKeyStore",
    "EventSource": "kms",
    "EventName": "DisconnectCustomKeyStore",
    "Description": "Disconnects the `custom key store <https://docs"
  },
  {
    "API": "kms:EnableKey",
    "EventSource": "kms",
    "EventName": "EnableKey",
    "Description": "Sets the key state of a KMS key to enabled"
  },
  {
    "API": "kms:EnableKeyRotation",
    "EventSource": "kms",
    "EventName": "EnableKeyRotation",
    "Description": "Enables `automatic rotation of the key material <https://docs"
  },
  {
    "API": "kms:GenerateDataKey",
    "EventSource": "kms",
    "EventName": "GenerateDataKey",
    "Description": "Returns a unique symmetric data key for use outside of KMS"
  },
  {
    "API": "kms:GenerateDataKeyPair",
    "EventSource": "kms",
    "EventName": "GenerateDataKeyPair",
    "Description": "Returns a unique asymmetric data key pair for use outside of KMS"
  },
  {
    "API": "kms:GenerateDataKeyPairWithoutPlaintext",
    "EventSource": "kms",
    "EventName": "GenerateDataKeyPairWithoutPlaintext",
    "Description": "Returns a unique asymmetric data key pair for use outside of KMS"
  },
  {
    "API": "kms:GenerateDataKeyWithoutPlaintext",
    "EventSource": "kms",
    "EventName": "GenerateDataKeyWithoutPlaintext",
    "Description": "Returns a unique symmetric data key for use outside of KMS"
  },
  {
    "API": "kms:GenerateMac",
    "EventSource": "kms",
    "EventName": "GenerateMac",
    "Description": "Generates a hash-based message authentication code (HMAC) for a message using an HMAC KMS key and a MAC algorithm that the key supports"
  },
  {
    "API": "kms:GeneratePresignedUrl",
    "EventSource": "kms",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "kms:GenerateRandom",
    "EventSource": "kms",
    "EventName": "GenerateRandom",
    "Description": "Returns a random byte string that is cryptographically secure"
  },
  {
    "API": "kms:GetKeyPolicy",
    "EventSource": "kms",
    "EventName": "GetKeyPolicy",
    "Description": "Gets a key policy attached to the specified KMS key"
  },
  {
    "API": "kms:GetKeyRotationStatus",
    "EventSource": "kms",
    "EventName": "GetKeyRotationStatus",
    "Description": "Provides detailed information about the rotation status for a KMS key, including whether `automatic rotation of the key material <https://docs"
  },
  {
    "API": "kms:GetParametersForImport",
    "EventSource": "kms",
    "EventName": "GetParametersForImport",
    "Description": "Returns the public key and an import token you need to import or reimport key material for a KMS key"
  },
  {
    "API": "kms:GetPublicKey",
    "EventSource": "kms",
    "EventName": "GetPublicKey",
    "Description": "Returns the public key of an asymmetric KMS key"
  },
  {
    "API": "kms:ImportKeyMaterial",
    "EventSource": "kms",
    "EventName": "ImportKeyMaterial",
    "Description": "Imports or reimports key material into an existing KMS key that was created without key material"
  },
  {
    "API": "kms:ListAliases",
    "EventSource": "kms",
    "EventName": "ListAliases",
    "Description": "Gets a list of aliases in the caller's Amazon Web Services account and region"
  },
  {
    "API": "kms:ListGrants",
    "EventSource": "kms",
    "EventName": "ListGrants",
    "Description": "Gets a list of all grants for the specified KMS key"
  },
  {
    "API": "kms:ListKeyPolicies",
    "EventSource": "kms",
    "EventName": "ListKeyPolicies",
    "Description": "Gets the names of the key policies that are attached to a KMS key"
  },
  {
    "API": "kms:ListKeyRotations",
    "EventSource": "kms",
    "EventName": "ListKeyRotations",
    "Description": "Returns information about all completed key material rotations for the specified KMS key"
  },
  {
    "API": "kms:ListKeys",
    "EventSource": "kms",
    "EventName": "ListKeys",
    "Description": "Gets a list of all KMS keys in the caller's Amazon Web Services account and Region"
  },
  {
    "API": "kms:ListResourceTags",
    "EventSource": "kms",
    "EventName": "ListResourceTags",
    "Description": "Returns all tags on the specified KMS key"
  },
  {
    "API": "kms:ListRetirableGrants",
    "EventSource": "kms",
    "EventName": "ListRetirableGrants",
    "Description": "Returns information about all grants in the Amazon Web Services account and Region that have the specified retiring principal"
  },
  {
    "API": "kms:PutKeyPolicy",
    "EventSource": "kms",
    "EventName": "PutKeyPolicy",
    "Description": "Attaches a key policy to the specified KMS key"
  },
  {
    "API": "kms:ReEncrypt",
    "EventSource": "kms",
    "EventName": "ReEncrypt",
    "Description": "Decrypts ciphertext and then reencrypts it entirely within KMS"
  },
  {
    "API": "kms:ReplicateKey",
    "EventSource": "kms",
    "EventName": "ReplicateKey",
    "Description": "Replicates a multi-Region key into the specified Region"
  },
  {
    "API": "kms:RetireGrant",
    "EventSource": "kms",
    "EventName": "RetireGrant",
    "Description": "Deletes a grant"
  },
  {
    "API": "kms:RevokeGrant",
    "EventSource": "kms",
    "EventName": "RevokeGrant",
    "Description": "Deletes the specified grant"
  },
  {
    "API": "kms:RotateKeyOnDemand",
    "EventSource": "kms",
    "EventName": "RotateKeyOnDemand",
    "Description": "Immediately initiates rotation of the key material of the specified symmetric encryption KMS key"
  },
  {
    "API": "kms:ScheduleKeyDeletion",
    "EventSource": "kms",
    "EventName": "ScheduleKeyDeletion",
    "Description": "Schedules the deletion of a KMS key"
  },
  {
    "API": "kms:TagResource",
    "EventSource": "kms",
    "EventName": "TagResource",
    "Description": "Adds or edits tags on a `customer managed key <https://docs"
  },
  {
    "API": "kms:UntagResource",
    "EventSource": "kms",
    "EventName": "UntagResource",
    "Description": "Deletes tags from a `customer managed key <https://docs"
  },
  {
    "API": "kms:UpdateAlias",
    "EventSource": "kms",
    "EventName": "UpdateAlias",
    "Description": "Associates an existing KMS alias with a different KMS key"
  },
  {
    "API": "kms:UpdateCustomKeyStore",
    "EventSource": "kms",
    "EventName": "UpdateCustomKeyStore",
    "Description": "Changes the properties of a custom key store"
  },
  {
    "API": "kms:UpdateKeyDescription",
    "EventSource": "kms",
    "EventName": "UpdateKeyDescription",
    "Description": "Updates the description of a KMS key"
  },
  {
    "API": "kms:UpdatePrimaryRegion",
    "EventSource": "kms",
    "EventName": "UpdatePrimaryRegion",
    "Description": "Changes the primary key of a multi-Region key"
  },
  {
    "API": "kms:VerifyMac",
    "EventSource": "kms",
    "EventName": "VerifyMac",
    "Description": "Verifies the hash-based message authentication code (HMAC) for a specified message, HMAC KMS key, and MAC algorithm"
  },
  {
    "API": "lakeformation:AddLfTagsToResource",
    "EventSource": "lakeformation",
    "EventName": "AddLfTagsToResource",
    "Description": "Attaches one or more LF-tags to an existing resource"
  },
  {
    "API": "lakeformation:AssumeDecoratedRoleWithSaml",
    "EventSource": "lakeformation",
    "EventName": "AssumeDecoratedRoleWithSaml",
    "Description": "Allows a caller to assume an IAM role decorated as the SAML user specified in the SAML assertion included in the request"
  },
  {
    "API": "lakeformation:BatchGrantPermissions",
    "EventSource": "lakeformation",
    "EventName": "BatchGrantPermissions",
    "Description": "Batch operation to grant permissions to the principal"
  },
  {
    "API": "lakeformation:BatchRevokePermissions",
    "EventSource": "lakeformation",
    "EventName": "BatchRevokePermissions",
    "Description": "Batch operation to revoke permissions from the principal"
  },
  {
    "API": "lakeformation:CancelTransaction",
    "EventSource": "lakeformation",
    "EventName": "CancelTransaction",
    "Description": "Attempts to cancel the specified transaction"
  },
  {
    "API": "lakeformation:CommitTransaction",
    "EventSource": "lakeformation",
    "EventName": "CommitTransaction",
    "Description": "Attempts to commit the specified transaction"
  },
  {
    "API": "lakeformation:CreateDataCellsFilter",
    "EventSource": "lakeformation",
    "EventName": "CreateDataCellsFilter",
    "Description": "Creates a data cell filter to allow one to grant access to certain columns on certain rows"
  },
  {
    "API": "lakeformation:CreateLakeFormationIdentityCenterConfiguration",
    "EventSource": "lakeformation",
    "EventName": "CreateLakeFormationIdentityCenterConfiguration",
    "Description": "Creates an IAM Identity Center connection with Lake Formation to allow IAM Identity Center users and groups to access Data Catalog resources"
  },
  {
    "API": "lakeformation:CreateLakeFormationOptIn",
    "EventSource": "lakeformation",
    "EventName": "CreateLakeFormationOptIn",
    "Description": "Enforce Lake Formation permissions for the given databases, tables, and principals"
  },
  {
    "API": "lakeformation:CreateLfTag",
    "EventSource": "lakeformation",
    "EventName": "CreateLfTag",
    "Description": "Creates an LF-tag with the specified name and values"
  },
  {
    "API": "lakeformation:DeleteDataCellsFilter",
    "EventSource": "lakeformation",
    "EventName": "DeleteDataCellsFilter",
    "Description": "Deletes a data cell filter"
  },
  {
    "API": "lakeformation:DeleteLakeFormationIdentityCenterConfiguration",
    "EventSource": "lakeformation",
    "EventName": "DeleteLakeFormationIdentityCenterConfiguration",
    "Description": "Deletes an IAM Identity Center connection with Lake Formation"
  },
  {
    "API": "lakeformation:DeleteLakeFormationOptIn",
    "EventSource": "lakeformation",
    "EventName": "DeleteLakeFormationOptIn",
    "Description": "Remove the Lake Formation permissions enforcement of the given databases, tables, and principals"
  },
  {
    "API": "lakeformation:DeleteLfTag",
    "EventSource": "lakeformation",
    "EventName": "DeleteLfTag",
    "Description": "Deletes the specified LF-tag given a key name"
  },
  {
    "API": "lakeformation:DeleteObjectsOnCancel",
    "EventSource": "lakeformation",
    "EventName": "DeleteObjectsOnCancel",
    "Description": "For a specific governed table, provides a list of Amazon S3 objects that will be written during the current transaction and that can be automatically deleted if the transaction is canceled"
  },
  {
    "API": "lakeformation:DeregisterResource",
    "EventSource": "lakeformation",
    "EventName": "DeregisterResource",
    "Description": "Deregisters the resource as managed by the Data Catalog"
  },
  {
    "API": "lakeformation:DescribeLakeFormationIdentityCenterConfiguration",
    "EventSource": "lakeformation",
    "EventName": "DescribeLakeFormationIdentityCenterConfiguration",
    "Description": "Retrieves the instance ARN and application ARN for the connection"
  },
  {
    "API": "lakeformation:DescribeResource",
    "EventSource": "lakeformation",
    "EventName": "DescribeResource",
    "Description": "Retrieves the current data access role for the given resource registered in Lake Formation"
  },
  {
    "API": "lakeformation:DescribeTransaction",
    "EventSource": "lakeformation",
    "EventName": "DescribeTransaction",
    "Description": "Returns the details of a single transaction"
  },
  {
    "API": "lakeformation:ExtendTransaction",
    "EventSource": "lakeformation",
    "EventName": "ExtendTransaction",
    "Description": "Indicates to the service that the specified transaction is still active and should not be treated as idle and aborted"
  },
  {
    "API": "lakeformation:GeneratePresignedUrl",
    "EventSource": "lakeformation",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "lakeformation:GetDataCellsFilter",
    "EventSource": "lakeformation",
    "EventName": "GetDataCellsFilter",
    "Description": "Returns a data cells filter"
  },
  {
    "API": "lakeformation:GetDataLakePrincipal",
    "EventSource": "lakeformation",
    "EventName": "GetDataLakePrincipal",
    "Description": "Returns the identity of the invoking principal"
  },
  {
    "API": "lakeformation:GetDataLakeSettings",
    "EventSource": "lakeformation",
    "EventName": "GetDataLakeSettings",
    "Description": "Retrieves the list of the data lake administrators of a Lake Formation-managed data lake"
  },
  {
    "API": "lakeformation:GetEffectivePermissionsForPath",
    "EventSource": "lakeformation",
    "EventName": "GetEffectivePermissionsForPath",
    "Description": "Returns the Lake Formation permissions for a specified table or database resource located at a path in Amazon S3"
  },
  {
    "API": "lakeformation:GetLfTag",
    "EventSource": "lakeformation",
    "EventName": "GetLfTag",
    "Description": "Returns an LF-tag definition"
  },
  {
    "API": "lakeformation:GetQueryState",
    "EventSource": "lakeformation",
    "EventName": "GetQueryState",
    "Description": "Returns the state of a query previously submitted"
  },
  {
    "API": "lakeformation:GetQueryStatistics",
    "EventSource": "lakeformation",
    "EventName": "GetQueryStatistics",
    "Description": "Retrieves statistics on the planning and execution of a query"
  },
  {
    "API": "lakeformation:GetResourceLfTags",
    "EventSource": "lakeformation",
    "EventName": "GetResourceLfTags",
    "Description": "Returns the LF-tags applied to a resource"
  },
  {
    "API": "lakeformation:GetTableObjects",
    "EventSource": "lakeformation",
    "EventName": "GetTableObjects",
    "Description": "Returns the set of Amazon S3 objects that make up the specified governed table"
  },
  {
    "API": "lakeformation:GetTemporaryGluePartitionCredentials",
    "EventSource": "lakeformation",
    "EventName": "GetTemporaryGluePartitionCredentials",
    "Description": "This API is identical to ``GetTemporaryTableCredentials`` except that this is used when the target Data Catalog resource is of type Partition"
  },
  {
    "API": "lakeformation:GetTemporaryGlueTableCredentials",
    "EventSource": "lakeformation",
    "EventName": "GetTemporaryGlueTableCredentials",
    "Description": "Allows a caller in a secure environment to assume a role with permission to access Amazon S3"
  },
  {
    "API": "lakeformation:GetWorkUnitResults",
    "EventSource": "lakeformation",
    "EventName": "GetWorkUnitResults",
    "Description": "Returns the work units resulting from the query"
  },
  {
    "API": "lakeformation:GetWorkUnits",
    "EventSource": "lakeformation",
    "EventName": "GetWorkUnits",
    "Description": "Retrieves the work units generated by the ``StartQueryPlanning`` operation"
  },
  {
    "API": "lakeformation:GrantPermissions",
    "EventSource": "lakeformation",
    "EventName": "GrantPermissions",
    "Description": "Grants permissions to the principal to access metadata in the Data Catalog and data organized in underlying data storage such as Amazon S3"
  },
  {
    "API": "lakeformation:ListDataCellsFilter",
    "EventSource": "lakeformation",
    "EventName": "ListDataCellsFilter",
    "Description": "Lists all the data cell filters on a table"
  },
  {
    "API": "lakeformation:ListLakeFormationOptIns",
    "EventSource": "lakeformation",
    "EventName": "ListLakeFormationOptIns",
    "Description": "Retrieve the current list of resources and principals that are opt in to enforce Lake Formation permissions"
  },
  {
    "API": "lakeformation:ListLfTags",
    "EventSource": "lakeformation",
    "EventName": "ListLfTags",
    "Description": "Lists LF-tags that the requester has permission to view"
  },
  {
    "API": "lakeformation:ListPermissions",
    "EventSource": "lakeformation",
    "EventName": "ListPermissions",
    "Description": "Returns a list of the principal permissions on the resource, filtered by the permissions of the caller"
  },
  {
    "API": "lakeformation:ListResources",
    "EventSource": "lakeformation",
    "EventName": "ListResources",
    "Description": "Lists the resources registered to be managed by the Data Catalog"
  },
  {
    "API": "lakeformation:ListTableStorageOptimizers",
    "EventSource": "lakeformation",
    "EventName": "ListTableStorageOptimizers",
    "Description": "Returns the configuration of all storage optimizers associated with a specified table"
  },
  {
    "API": "lakeformation:ListTransactions",
    "EventSource": "lakeformation",
    "EventName": "ListTransactions",
    "Description": "Returns metadata about transactions and their status"
  },
  {
    "API": "lakeformation:PutDataLakeSettings",
    "EventSource": "lakeformation",
    "EventName": "PutDataLakeSettings",
    "Description": "Sets the list of data lake administrators who have admin privileges on all resources managed by Lake Formation"
  },
  {
    "API": "lakeformation:RegisterResource",
    "EventSource": "lakeformation",
    "EventName": "RegisterResource",
    "Description": "Registers the resource as managed by the Data Catalog"
  },
  {
    "API": "lakeformation:RemoveLfTagsFromResource",
    "EventSource": "lakeformation",
    "EventName": "RemoveLfTagsFromResource",
    "Description": "Removes an LF-tag from the resource"
  },
  {
    "API": "lakeformation:RevokePermissions",
    "EventSource": "lakeformation",
    "EventName": "RevokePermissions",
    "Description": "Revokes permissions to the principal to access metadata in the Data Catalog and data organized in underlying data storage such as Amazon S3"
  },
  {
    "API": "lakeformation:SearchDatabasesByLfTags",
    "EventSource": "lakeformation",
    "EventName": "SearchDatabasesByLfTags",
    "Description": "This operation allows a search on ``DATABASE`` resources by ``TagCondition``"
  },
  {
    "API": "lakeformation:SearchTablesByLfTags",
    "EventSource": "lakeformation",
    "EventName": "SearchTablesByLfTags",
    "Description": "This operation allows a search on ``TABLE`` resources by ``LFTag``s"
  },
  {
    "API": "lakeformation:StartQueryPlanning",
    "EventSource": "lakeformation",
    "EventName": "StartQueryPlanning",
    "Description": "Submits a request to process a query statement"
  },
  {
    "API": "lakeformation:StartTransaction",
    "EventSource": "lakeformation",
    "EventName": "StartTransaction",
    "Description": "Starts a new transaction and returns its transaction ID"
  },
  {
    "API": "lakeformation:UpdateDataCellsFilter",
    "EventSource": "lakeformation",
    "EventName": "UpdateDataCellsFilter",
    "Description": "Updates a data cell filter"
  },
  {
    "API": "lakeformation:UpdateLakeFormationIdentityCenterConfiguration",
    "EventSource": "lakeformation",
    "EventName": "UpdateLakeFormationIdentityCenterConfiguration",
    "Description": "Updates the IAM Identity Center connection parameters"
  },
  {
    "API": "lakeformation:UpdateLfTag",
    "EventSource": "lakeformation",
    "EventName": "UpdateLfTag",
    "Description": "Updates the list of possible values for the specified LF-tag key"
  },
  {
    "API": "lakeformation:UpdateResource",
    "EventSource": "lakeformation",
    "EventName": "UpdateResource",
    "Description": "Updates the data access role used for vending access to the given (registered) resource in Lake Formation"
  },
  {
    "API": "lakeformation:UpdateTableObjects",
    "EventSource": "lakeformation",
    "EventName": "UpdateTableObjects",
    "Description": "Updates the manifest of Amazon S3 objects that make up the specified governed table"
  },
  {
    "API": "lakeformation:UpdateTableStorageOptimizer",
    "EventSource": "lakeformation",
    "EventName": "UpdateTableStorageOptimizer",
    "Description": "Updates the configuration of the storage optimizers for a table"
  },
  {
    "API": "lambda:AddLayerVersionPermission",
    "EventSource": "lambda",
    "EventName": "AddLayerVersionPermission",
    "Description": "Adds permissions to the resource-based policy of a version of an `Lambda layer <https://docs"
  },
  {
    "API": "lambda:AddPermission",
    "EventSource": "lambda",
    "EventName": "AddPermission",
    "Description": "Grants an Amazon Web Service, Amazon Web Services account, or Amazon Web Services organization permission to use a function"
  },
  {
    "API": "lambda:CreateAlias",
    "EventSource": "lambda",
    "EventName": "CreateAlias",
    "Description": "Creates an `alias <https://docs"
  },
  {
    "API": "lambda:CreateCodeSigningConfig",
    "EventSource": "lambda",
    "EventName": "CreateCodeSigningConfig",
    "Description": "Creates a code signing configuration"
  },
  {
    "API": "lambda:CreateEventSourceMapping",
    "EventSource": "lambda",
    "EventName": "CreateEventSourceMapping",
    "Description": "Creates a mapping between an event source and an Lambda function"
  },
  {
    "API": "lambda:CreateFunction",
    "EventSource": "lambda",
    "EventName": "CreateFunction",
    "Description": "Creates a Lambda function"
  },
  {
    "API": "lambda:CreateFunctionUrlConfig",
    "EventSource": "lambda",
    "EventName": "CreateFunctionUrlConfig",
    "Description": "Creates a Lambda function URL with the specified configuration parameters"
  },
  {
    "API": "lambda:DeleteAlias",
    "EventSource": "lambda",
    "EventName": "DeleteAlias",
    "Description": "Deletes a Lambda function `alias <https://docs"
  },
  {
    "API": "lambda:DeleteCodeSigningConfig",
    "EventSource": "lambda",
    "EventName": "DeleteCodeSigningConfig",
    "Description": "Deletes the code signing configuration"
  },
  {
    "API": "lambda:DeleteEventSourceMapping",
    "EventSource": "lambda",
    "EventName": "DeleteEventSourceMapping",
    "Description": "Deletes an `event source mapping <https://docs"
  },
  {
    "API": "lambda:DeleteFunction",
    "EventSource": "lambda",
    "EventName": "DeleteFunction",
    "Description": "Deletes a Lambda function"
  },
  {
    "API": "lambda:DeleteFunctionCodeSigningConfig",
    "EventSource": "lambda",
    "EventName": "DeleteFunctionCodeSigningConfig",
    "Description": "Removes the code signing configuration from the function"
  },
  {
    "API": "lambda:DeleteFunctionConcurrency",
    "EventSource": "lambda",
    "EventName": "DeleteFunctionConcurrency",
    "Description": "Removes a concurrent execution limit from a function"
  },
  {
    "API": "lambda:DeleteFunctionEventInvokeConfig",
    "EventSource": "lambda",
    "EventName": "DeleteFunctionEventInvokeConfig",
    "Description": "Deletes the configuration for asynchronous invocation for a function, version, or alias"
  },
  {
    "API": "lambda:DeleteFunctionUrlConfig",
    "EventSource": "lambda",
    "EventName": "DeleteFunctionUrlConfig",
    "Description": "Deletes a Lambda function URL"
  },
  {
    "API": "lambda:DeleteLayerVersion",
    "EventSource": "lambda",
    "EventName": "DeleteLayerVersion",
    "Description": "Deletes a version of an `Lambda layer <https://docs"
  },
  {
    "API": "lambda:DeleteProvisionedConcurrencyConfig",
    "EventSource": "lambda",
    "EventName": "DeleteProvisionedConcurrencyConfig",
    "Description": "Deletes the provisioned concurrency configuration for a function"
  },
  {
    "API": "lambda:GeneratePresignedUrl",
    "EventSource": "lambda",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "lambda:GetAccountSettings",
    "EventSource": "lambda",
    "EventName": "GetAccountSettings",
    "Description": "Retrieves details about your account's `limits <https://docs"
  },
  {
    "API": "lambda:GetAlias",
    "EventSource": "lambda",
    "EventName": "GetAlias",
    "Description": "Returns details about a Lambda function `alias <https://docs"
  },
  {
    "API": "lambda:GetCodeSigningConfig",
    "EventSource": "lambda",
    "EventName": "GetCodeSigningConfig",
    "Description": "Returns information about the specified code signing configuration"
  },
  {
    "API": "lambda:GetEventSourceMapping",
    "EventSource": "lambda",
    "EventName": "GetEventSourceMapping",
    "Description": "Returns details about an event source mapping"
  },
  {
    "API": "lambda:GetFunction",
    "EventSource": "lambda",
    "EventName": "GetFunction",
    "Description": "Returns information about the function or function version, with a link to download the deployment package that's valid for 10 minutes"
  },
  {
    "API": "lambda:GetFunctionCodeSigningConfig",
    "EventSource": "lambda",
    "EventName": "GetFunctionCodeSigningConfig",
    "Description": "Returns the code signing configuration for the specified function"
  },
  {
    "API": "lambda:GetFunctionConcurrency",
    "EventSource": "lambda",
    "EventName": "GetFunctionConcurrency",
    "Description": "Returns details about the reserved concurrency configuration for a function"
  },
  {
    "API": "lambda:GetFunctionConfiguration",
    "EventSource": "lambda",
    "EventName": "GetFunctionConfiguration",
    "Description": "Returns the version-specific settings of a Lambda function or version"
  },
  {
    "API": "lambda:GetFunctionEventInvokeConfig",
    "EventSource": "lambda",
    "EventName": "GetFunctionEventInvokeConfig",
    "Description": "Retrieves the configuration for asynchronous invocation for a function, version, or alias"
  },
  {
    "API": "lambda:GetFunctionUrlConfig",
    "EventSource": "lambda",
    "EventName": "GetFunctionUrlConfig",
    "Description": "Returns details about a Lambda function URL"
  },
  {
    "API": "lambda:GetLayerVersion",
    "EventSource": "lambda",
    "EventName": "GetLayerVersion",
    "Description": "Returns information about a version of an `Lambda layer <https://docs"
  },
  {
    "API": "lambda:GetLayerVersionByArn",
    "EventSource": "lambda",
    "EventName": "GetLayerVersionByArn",
    "Description": "Returns information about a version of an `Lambda layer <https://docs"
  },
  {
    "API": "lambda:GetLayerVersionPolicy",
    "EventSource": "lambda",
    "EventName": "GetLayerVersionPolicy",
    "Description": "Returns the permission policy for a version of an `Lambda layer <https://docs"
  },
  {
    "API": "lambda:GetPolicy",
    "EventSource": "lambda",
    "EventName": "GetPolicy",
    "Description": "Returns the `resource-based IAM policy <https://docs"
  },
  {
    "API": "lambda:GetProvisionedConcurrencyConfig",
    "EventSource": "lambda",
    "EventName": "GetProvisionedConcurrencyConfig",
    "Description": "Retrieves the provisioned concurrency configuration for a function's alias or version"
  },
  {
    "API": "lambda:GetRuntimeManagementConfig",
    "EventSource": "lambda",
    "EventName": "GetRuntimeManagementConfig",
    "Description": "Retrieves the runtime management configuration for a function's version"
  },
  {
    "API": "lambda:InvokeAsync",
    "EventSource": "lambda",
    "EventName": "InvokeAsync",
    "Description": ""
  },
  {
    "API": "lambda:InvokeWithResponseStream",
    "EventSource": "lambda",
    "EventName": "InvokeWithResponseStream",
    "Description": "Configure your Lambda functions to stream response payloads back to clients"
  },
  {
    "API": "lambda:ListAliases",
    "EventSource": "lambda",
    "EventName": "ListAliases",
    "Description": "Returns a list of `aliases <https://docs"
  },
  {
    "API": "lambda:ListCodeSigningConfigs",
    "EventSource": "lambda",
    "EventName": "ListCodeSigningConfigs",
    "Description": "Returns a list of `code signing configurations <https://docs"
  },
  {
    "API": "lambda:ListEventSourceMappings",
    "EventSource": "lambda",
    "EventName": "ListEventSourceMappings",
    "Description": "Lists event source mappings"
  },
  {
    "API": "lambda:ListFunctionEventInvokeConfigs",
    "EventSource": "lambda",
    "EventName": "ListFunctionEventInvokeConfigs",
    "Description": "Retrieves a list of configurations for asynchronous invocation for a function"
  },
  {
    "API": "lambda:ListFunctionUrlConfigs",
    "EventSource": "lambda",
    "EventName": "ListFunctionUrlConfigs",
    "Description": "Returns a list of Lambda function URLs for the specified function"
  },
  {
    "API": "lambda:ListFunctions",
    "EventSource": "lambda",
    "EventName": "ListFunctions",
    "Description": "Returns a list of Lambda functions, with the version-specific configuration of each"
  },
  {
    "API": "lambda:ListFunctionsByCodeSigningConfig",
    "EventSource": "lambda",
    "EventName": "ListFunctionsByCodeSigningConfig",
    "Description": "List the functions that use the specified code signing configuration"
  },
  {
    "API": "lambda:ListLayerVersions",
    "EventSource": "lambda",
    "EventName": "ListLayerVersions",
    "Description": "Lists the versions of an `Lambda layer <https://docs"
  },
  {
    "API": "lambda:ListLayers",
    "EventSource": "lambda",
    "EventName": "ListLayers",
    "Description": "Lists `Lambda layers <https://docs"
  },
  {
    "API": "lambda:ListProvisionedConcurrencyConfigs",
    "EventSource": "lambda",
    "EventName": "ListProvisionedConcurrencyConfigs",
    "Description": "Retrieves a list of provisioned concurrency configurations for a function"
  },
  {
    "API": "lambda:ListTags",
    "EventSource": "lambda",
    "EventName": "ListTags",
    "Description": "Returns a function's `tags <https://docs"
  },
  {
    "API": "lambda:ListVersionsByFunction",
    "EventSource": "lambda",
    "EventName": "ListVersionsByFunction",
    "Description": "Returns a list of `versions <https://docs"
  },
  {
    "API": "lambda:PublishLayerVersion",
    "EventSource": "lambda",
    "EventName": "PublishLayerVersion",
    "Description": "Creates an `Lambda layer <https://docs"
  },
  {
    "API": "lambda:PublishVersion",
    "EventSource": "lambda",
    "EventName": "PublishVersion",
    "Description": "Creates a `version <https://docs"
  },
  {
    "API": "lambda:PutFunctionCodeSigningConfig",
    "EventSource": "lambda",
    "EventName": "PutFunctionCodeSigningConfig",
    "Description": "Update the code signing configuration for the function"
  },
  {
    "API": "lambda:PutFunctionConcurrency",
    "EventSource": "lambda",
    "EventName": "PutFunctionConcurrency",
    "Description": "Sets the maximum number of simultaneous executions for a function, and reserves capacity for that concurrency level"
  },
  {
    "API": "lambda:PutFunctionEventInvokeConfig",
    "EventSource": "lambda",
    "EventName": "PutFunctionEventInvokeConfig",
    "Description": "Configures options for `asynchronous invocation <https://docs"
  },
  {
    "API": "lambda:PutProvisionedConcurrencyConfig",
    "EventSource": "lambda",
    "EventName": "PutProvisionedConcurrencyConfig",
    "Description": "Adds a provisioned concurrency configuration to a function's alias or version"
  },
  {
    "API": "lambda:PutRuntimeManagementConfig",
    "EventSource": "lambda",
    "EventName": "PutRuntimeManagementConfig",
    "Description": "Sets the runtime management configuration for a function's version"
  },
  {
    "API": "lambda:RemoveLayerVersionPermission",
    "EventSource": "lambda",
    "EventName": "RemoveLayerVersionPermission",
    "Description": "Removes a statement from the permissions policy for a version of an `Lambda layer <https://docs"
  },
  {
    "API": "lambda:RemovePermission",
    "EventSource": "lambda",
    "EventName": "RemovePermission",
    "Description": "Revokes function-use permission from an Amazon Web Service or another Amazon Web Services account"
  },
  {
    "API": "lambda:TagResource",
    "EventSource": "lambda",
    "EventName": "TagResource",
    "Description": "Adds `tags <https://docs"
  },
  {
    "API": "lambda:UntagResource",
    "EventSource": "lambda",
    "EventName": "UntagResource",
    "Description": "Removes `tags <https://docs"
  },
  {
    "API": "lambda:UpdateAlias",
    "EventSource": "lambda",
    "EventName": "UpdateAlias",
    "Description": "Updates the configuration of a Lambda function `alias <https://docs"
  },
  {
    "API": "lambda:UpdateCodeSigningConfig",
    "EventSource": "lambda",
    "EventName": "UpdateCodeSigningConfig",
    "Description": "Update the code signing configuration"
  },
  {
    "API": "lambda:UpdateEventSourceMapping",
    "EventSource": "lambda",
    "EventName": "UpdateEventSourceMapping",
    "Description": "Updates an event source mapping"
  },
  {
    "API": "lambda:UpdateFunctionCode",
    "EventSource": "lambda",
    "EventName": "UpdateFunctionCode",
    "Description": "Updates a Lambda function's code"
  },
  {
    "API": "lambda:UpdateFunctionConfiguration",
    "EventSource": "lambda",
    "EventName": "UpdateFunctionConfiguration",
    "Description": "Modify the version-specific settings of a Lambda function"
  },
  {
    "API": "lambda:UpdateFunctionEventInvokeConfig",
    "EventSource": "lambda",
    "EventName": "UpdateFunctionEventInvokeConfig",
    "Description": "Updates the configuration for asynchronous invocation for a function, version, or alias"
  },
  {
    "API": "lambda:UpdateFunctionUrlConfig",
    "EventSource": "lambda",
    "EventName": "UpdateFunctionUrlConfig",
    "Description": "Updates the configuration for a Lambda function URL"
  },
  {
    "API": "launch-wizard:CreateDeployment",
    "EventSource": "launch-wizard",
    "EventName": "CreateDeployment",
    "Description": "Creates a deployment for the given workload"
  },
  {
    "API": "launch-wizard:DeleteDeployment",
    "EventSource": "launch-wizard",
    "EventName": "DeleteDeployment",
    "Description": "Deletes a deployment"
  },
  {
    "API": "launch-wizard:GeneratePresignedUrl",
    "EventSource": "launch-wizard",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "launch-wizard:GetDeployment",
    "EventSource": "launch-wizard",
    "EventName": "GetDeployment",
    "Description": "Returns information about the deployment"
  },
  {
    "API": "launch-wizard:GetWorkload",
    "EventSource": "launch-wizard",
    "EventName": "GetWorkload",
    "Description": "Returns information about a workload"
  },
  {
    "API": "launch-wizard:GetWorkloadDeploymentPattern",
    "EventSource": "launch-wizard",
    "EventName": "GetWorkloadDeploymentPattern",
    "Description": "Returns details for a given workload and deployment pattern, including the available specifications"
  },
  {
    "API": "launch-wizard:ListDeploymentEvents",
    "EventSource": "launch-wizard",
    "EventName": "ListDeploymentEvents",
    "Description": "Lists the events of a deployment"
  },
  {
    "API": "launch-wizard:ListDeployments",
    "EventSource": "launch-wizard",
    "EventName": "ListDeployments",
    "Description": "Lists the deployments that have been created"
  },
  {
    "API": "launch-wizard:ListTagsForResource",
    "EventSource": "launch-wizard",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags associated with a specified resource"
  },
  {
    "API": "launch-wizard:ListWorkloadDeploymentPatterns",
    "EventSource": "launch-wizard",
    "EventName": "ListWorkloadDeploymentPatterns",
    "Description": "Lists the workload deployment patterns for a given workload name"
  },
  {
    "API": "launch-wizard:ListWorkloads",
    "EventSource": "launch-wizard",
    "EventName": "ListWorkloads",
    "Description": "Lists the available workload names"
  },
  {
    "API": "launch-wizard:TagResource",
    "EventSource": "launch-wizard",
    "EventName": "TagResource",
    "Description": "Adds the specified tags to the given resource"
  },
  {
    "API": "launch-wizard:UntagResource",
    "EventSource": "launch-wizard",
    "EventName": "UntagResource",
    "Description": "Removes the specified tags from the given resource"
  },
  {
    "API": "lex-models:CreateBotVersion",
    "EventSource": "lex-models",
    "EventName": "CreateBotVersion",
    "Description": "Creates a new version of the bot based on the ``$LATEST`` version"
  },
  {
    "API": "lex-models:CreateIntentVersion",
    "EventSource": "lex-models",
    "EventName": "CreateIntentVersion",
    "Description": "Creates a new version of an intent based on the ``$LATEST`` version of the intent"
  },
  {
    "API": "lex-models:CreateSlotTypeVersion",
    "EventSource": "lex-models",
    "EventName": "CreateSlotTypeVersion",
    "Description": "Creates a new version of a slot type based on the ``$LATEST`` version of the specified slot type"
  },
  {
    "API": "lex-models:DeleteBot",
    "EventSource": "lex-models",
    "EventName": "DeleteBot",
    "Description": "Deletes all versions of the bot, including the ``$LATEST`` version"
  },
  {
    "API": "lex-models:DeleteBotAlias",
    "EventSource": "lex-models",
    "EventName": "DeleteBotAlias",
    "Description": "Deletes an alias for the specified bot"
  },
  {
    "API": "lex-models:DeleteBotChannelAssociation",
    "EventSource": "lex-models",
    "EventName": "DeleteBotChannelAssociation",
    "Description": "Deletes the association between an Amazon Lex bot and a messaging platform"
  },
  {
    "API": "lex-models:DeleteBotVersion",
    "EventSource": "lex-models",
    "EventName": "DeleteBotVersion",
    "Description": "Deletes a specific version of a bot"
  },
  {
    "API": "lex-models:DeleteIntent",
    "EventSource": "lex-models",
    "EventName": "DeleteIntent",
    "Description": "Deletes all versions of the intent, including the ``$LATEST`` version"
  },
  {
    "API": "lex-models:DeleteIntentVersion",
    "EventSource": "lex-models",
    "EventName": "DeleteIntentVersion",
    "Description": "Deletes a specific version of an intent"
  },
  {
    "API": "lex-models:DeleteSlotType",
    "EventSource": "lex-models",
    "EventName": "DeleteSlotType",
    "Description": "Deletes all versions of the slot type, including the ``$LATEST`` version"
  },
  {
    "API": "lex-models:DeleteSlotTypeVersion",
    "EventSource": "lex-models",
    "EventName": "DeleteSlotTypeVersion",
    "Description": "Deletes a specific version of a slot type"
  },
  {
    "API": "lex-models:DeleteUtterances",
    "EventSource": "lex-models",
    "EventName": "DeleteUtterances",
    "Description": "Deletes stored utterances"
  },
  {
    "API": "lex-models:GeneratePresignedUrl",
    "EventSource": "lex-models",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "lex-models:GetBot",
    "EventSource": "lex-models",
    "EventName": "GetBot",
    "Description": "Returns metadata information for a specific bot"
  },
  {
    "API": "lex-models:GetBotAlias",
    "EventSource": "lex-models",
    "EventName": "GetBotAlias",
    "Description": "Returns information about an Amazon Lex bot alias"
  },
  {
    "API": "lex-models:GetBotAliases",
    "EventSource": "lex-models",
    "EventName": "GetBotAliases",
    "Description": "Returns a list of aliases for a specified Amazon Lex bot"
  },
  {
    "API": "lex-models:GetBotChannelAssociation",
    "EventSource": "lex-models",
    "EventName": "GetBotChannelAssociation",
    "Description": "Returns information about the association between an Amazon Lex bot and a messaging platform"
  },
  {
    "API": "lex-models:GetBotChannelAssociations",
    "EventSource": "lex-models",
    "EventName": "GetBotChannelAssociations",
    "Description": "Returns a list of all of the channels associated with the specified bot"
  },
  {
    "API": "lex-models:GetBotVersions",
    "EventSource": "lex-models",
    "EventName": "GetBotVersions",
    "Description": "Gets information about all of the versions of a bot"
  },
  {
    "API": "lex-models:GetBots",
    "EventSource": "lex-models",
    "EventName": "GetBots",
    "Description": "Returns bot information as follows:"
  },
  {
    "API": "lex-models:GetBuiltinIntent",
    "EventSource": "lex-models",
    "EventName": "GetBuiltinIntent",
    "Description": "Returns information about a built-in intent"
  },
  {
    "API": "lex-models:GetBuiltinIntents",
    "EventSource": "lex-models",
    "EventName": "GetBuiltinIntents",
    "Description": "Gets a list of built-in intents that meet the specified criteria"
  },
  {
    "API": "lex-models:GetBuiltinSlotTypes",
    "EventSource": "lex-models",
    "EventName": "GetBuiltinSlotTypes",
    "Description": "Gets a list of built-in slot types that meet the specified criteria"
  },
  {
    "API": "lex-models:GetExport",
    "EventSource": "lex-models",
    "EventName": "GetExport",
    "Description": "Exports the contents of a Amazon Lex resource in a specified format"
  },
  {
    "API": "lex-models:GetImport",
    "EventSource": "lex-models",
    "EventName": "GetImport",
    "Description": "Gets information about an import job started with the ``StartImport`` operation"
  },
  {
    "API": "lex-models:GetIntent",
    "EventSource": "lex-models",
    "EventName": "GetIntent",
    "Description": "Returns information about an intent"
  },
  {
    "API": "lex-models:GetIntentVersions",
    "EventSource": "lex-models",
    "EventName": "GetIntentVersions",
    "Description": "Gets information about all of the versions of an intent"
  },
  {
    "API": "lex-models:GetIntents",
    "EventSource": "lex-models",
    "EventName": "GetIntents",
    "Description": "Returns intent information as follows:"
  },
  {
    "API": "lex-models:GetMigration",
    "EventSource": "lex-models",
    "EventName": "GetMigration",
    "Description": "Provides details about an ongoing or complete migration from an Amazon Lex V1 bot to an Amazon Lex V2 bot"
  },
  {
    "API": "lex-models:GetMigrations",
    "EventSource": "lex-models",
    "EventName": "GetMigrations",
    "Description": "Gets a list of migrations between Amazon Lex V1 and Amazon Lex V2"
  },
  {
    "API": "lex-models:GetSlotType",
    "EventSource": "lex-models",
    "EventName": "GetSlotType",
    "Description": "Returns information about a specific version of a slot type"
  },
  {
    "API": "lex-models:GetSlotTypeVersions",
    "EventSource": "lex-models",
    "EventName": "GetSlotTypeVersions",
    "Description": "Gets information about all versions of a slot type"
  },
  {
    "API": "lex-models:GetSlotTypes",
    "EventSource": "lex-models",
    "EventName": "GetSlotTypes",
    "Description": "Returns slot type information as follows:"
  },
  {
    "API": "lex-models:GetUtterancesView",
    "EventSource": "lex-models",
    "EventName": "GetUtterancesView",
    "Description": "Use the ``GetUtterancesView`` operation to get information about the utterances that your users have made to your bot"
  },
  {
    "API": "lex-models:ListTagsForResource",
    "EventSource": "lex-models",
    "EventName": "ListTagsForResource",
    "Description": "Gets a list of tags associated with the specified resource"
  },
  {
    "API": "lex-models:PutBot",
    "EventSource": "lex-models",
    "EventName": "PutBot",
    "Description": "Creates an Amazon Lex conversational bot or replaces an existing bot"
  },
  {
    "API": "lex-models:PutBotAlias",
    "EventSource": "lex-models",
    "EventName": "PutBotAlias",
    "Description": "Creates an alias for the specified version of the bot or replaces an alias for the specified bot"
  },
  {
    "API": "lex-models:PutIntent",
    "EventSource": "lex-models",
    "EventName": "PutIntent",
    "Description": "Creates an intent or replaces an existing intent"
  },
  {
    "API": "lex-models:PutSlotType",
    "EventSource": "lex-models",
    "EventName": "PutSlotType",
    "Description": "Creates a custom slot type or replaces an existing custom slot type"
  },
  {
    "API": "lex-models:StartImport",
    "EventSource": "lex-models",
    "EventName": "StartImport",
    "Description": "Starts a job to import a resource to Amazon Lex"
  },
  {
    "API": "lex-models:StartMigration",
    "EventSource": "lex-models",
    "EventName": "StartMigration",
    "Description": "Starts migrating a bot from Amazon Lex V1 to Amazon Lex V2"
  },
  {
    "API": "lex-models:TagResource",
    "EventSource": "lex-models",
    "EventName": "TagResource",
    "Description": "Adds the specified tags to the specified resource"
  },
  {
    "API": "lex-models:UntagResource",
    "EventSource": "lex-models",
    "EventName": "UntagResource",
    "Description": "Removes tags from a bot, bot alias or bot channel"
  },
  {
    "API": "lex-runtime:DeleteSession",
    "EventSource": "lex-runtime",
    "EventName": "DeleteSession",
    "Description": "Removes session information for a specified bot, alias, and user ID"
  },
  {
    "API": "lex-runtime:GeneratePresignedUrl",
    "EventSource": "lex-runtime",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "lex-runtime:GetSession",
    "EventSource": "lex-runtime",
    "EventName": "GetSession",
    "Description": "Returns session information for a specified bot, alias, and user ID"
  },
  {
    "API": "lex-runtime:PostContent",
    "EventSource": "lex-runtime",
    "EventName": "PostContent",
    "Description": "Sends user input (text or speech) to Amazon Lex"
  },
  {
    "API": "lex-runtime:PostText",
    "EventSource": "lex-runtime",
    "EventName": "PostText",
    "Description": "Sends user input to Amazon Lex"
  },
  {
    "API": "lex-runtime:PutSession",
    "EventSource": "lex-runtime",
    "EventName": "PutSession",
    "Description": "Creates a new session or modifies an existing session with an Amazon Lex bot"
  },
  {
    "API": "lexv2-models:BatchCreateCustomVocabularyItem",
    "EventSource": "lexv2-models",
    "EventName": "BatchCreateCustomVocabularyItem",
    "Description": "Create a batch of custom vocabulary items for a given bot locale's custom vocabulary"
  },
  {
    "API": "lexv2-models:BatchDeleteCustomVocabularyItem",
    "EventSource": "lexv2-models",
    "EventName": "BatchDeleteCustomVocabularyItem",
    "Description": "Delete a batch of custom vocabulary items for a given bot locale's custom vocabulary"
  },
  {
    "API": "lexv2-models:BatchUpdateCustomVocabularyItem",
    "EventSource": "lexv2-models",
    "EventName": "BatchUpdateCustomVocabularyItem",
    "Description": "Update a batch of custom vocabulary items for a given bot locale's custom vocabulary"
  },
  {
    "API": "lexv2-models:BuildBotLocale",
    "EventSource": "lexv2-models",
    "EventName": "BuildBotLocale",
    "Description": "Builds a bot, its intents, and its slot types into a specific locale"
  },
  {
    "API": "lexv2-models:CreateBot",
    "EventSource": "lexv2-models",
    "EventName": "CreateBot",
    "Description": "Creates an Amazon Lex conversational bot"
  },
  {
    "API": "lexv2-models:CreateBotAlias",
    "EventSource": "lexv2-models",
    "EventName": "CreateBotAlias",
    "Description": "Creates an alias for the specified version of a bot"
  },
  {
    "API": "lexv2-models:CreateBotLocale",
    "EventSource": "lexv2-models",
    "EventName": "CreateBotLocale",
    "Description": "Creates a locale in the bot"
  },
  {
    "API": "lexv2-models:CreateBotReplica",
    "EventSource": "lexv2-models",
    "EventName": "CreateBotReplica",
    "Description": "Action to create a replication of the source bot in the secondary region"
  },
  {
    "API": "lexv2-models:CreateBotVersion",
    "EventSource": "lexv2-models",
    "EventName": "CreateBotVersion",
    "Description": "Creates an immutable version of the bot"
  },
  {
    "API": "lexv2-models:CreateExport",
    "EventSource": "lexv2-models",
    "EventName": "CreateExport",
    "Description": "Creates a zip archive containing the contents of a bot or a bot locale"
  },
  {
    "API": "lexv2-models:CreateIntent",
    "EventSource": "lexv2-models",
    "EventName": "CreateIntent",
    "Description": "Creates an intent"
  },
  {
    "API": "lexv2-models:CreateResourcePolicy",
    "EventSource": "lexv2-models",
    "EventName": "CreateResourcePolicy",
    "Description": "Creates a new resource policy with the specified policy statements"
  },
  {
    "API": "lexv2-models:CreateResourcePolicyStatement",
    "EventSource": "lexv2-models",
    "EventName": "CreateResourcePolicyStatement",
    "Description": "Adds a new resource policy statement to a bot or bot alias"
  },
  {
    "API": "lexv2-models:CreateSlot",
    "EventSource": "lexv2-models",
    "EventName": "CreateSlot",
    "Description": "Creates a slot in an intent"
  },
  {
    "API": "lexv2-models:CreateSlotType",
    "EventSource": "lexv2-models",
    "EventName": "CreateSlotType",
    "Description": "Creates a custom slot type"
  },
  {
    "API": "lexv2-models:CreateTestSetDiscrepancyReport",
    "EventSource": "lexv2-models",
    "EventName": "CreateTestSetDiscrepancyReport",
    "Description": "Create a report that describes the differences between the bot and the test set"
  },
  {
    "API": "lexv2-models:CreateUploadUrl",
    "EventSource": "lexv2-models",
    "EventName": "CreateUploadUrl",
    "Description": "Gets a pre-signed S3 write URL that you use to upload the zip archive when importing a bot or a bot locale"
  },
  {
    "API": "lexv2-models:DeleteBot",
    "EventSource": "lexv2-models",
    "EventName": "DeleteBot",
    "Description": "Deletes all versions of a bot, including the ``Draft`` version"
  },
  {
    "API": "lexv2-models:DeleteBotAlias",
    "EventSource": "lexv2-models",
    "EventName": "DeleteBotAlias",
    "Description": "Deletes the specified bot alias"
  },
  {
    "API": "lexv2-models:DeleteBotLocale",
    "EventSource": "lexv2-models",
    "EventName": "DeleteBotLocale",
    "Description": "Removes a locale from a bot"
  },
  {
    "API": "lexv2-models:DeleteBotReplica",
    "EventSource": "lexv2-models",
    "EventName": "DeleteBotReplica",
    "Description": "The action to delete the replicated bot in the secondary region"
  },
  {
    "API": "lexv2-models:DeleteBotVersion",
    "EventSource": "lexv2-models",
    "EventName": "DeleteBotVersion",
    "Description": "Deletes a specific version of a bot"
  },
  {
    "API": "lexv2-models:DeleteCustomVocabulary",
    "EventSource": "lexv2-models",
    "EventName": "DeleteCustomVocabulary",
    "Description": "Removes a custom vocabulary from the specified locale in the specified bot"
  },
  {
    "API": "lexv2-models:DeleteExport",
    "EventSource": "lexv2-models",
    "EventName": "DeleteExport",
    "Description": "Removes a previous export and the associated files stored in an S3 bucket"
  },
  {
    "API": "lexv2-models:DeleteImport",
    "EventSource": "lexv2-models",
    "EventName": "DeleteImport",
    "Description": "Removes a previous import and the associated file stored in an S3 bucket"
  },
  {
    "API": "lexv2-models:DeleteIntent",
    "EventSource": "lexv2-models",
    "EventName": "DeleteIntent",
    "Description": "Removes the specified intent"
  },
  {
    "API": "lexv2-models:DeleteResourcePolicy",
    "EventSource": "lexv2-models",
    "EventName": "DeleteResourcePolicy",
    "Description": "Removes an existing policy from a bot or bot alias"
  },
  {
    "API": "lexv2-models:DeleteResourcePolicyStatement",
    "EventSource": "lexv2-models",
    "EventName": "DeleteResourcePolicyStatement",
    "Description": "Deletes a policy statement from a resource policy"
  },
  {
    "API": "lexv2-models:DeleteSlot",
    "EventSource": "lexv2-models",
    "EventName": "DeleteSlot",
    "Description": "Deletes the specified slot from an intent"
  },
  {
    "API": "lexv2-models:DeleteSlotType",
    "EventSource": "lexv2-models",
    "EventName": "DeleteSlotType",
    "Description": "Deletes a slot type from a bot locale"
  },
  {
    "API": "lexv2-models:DeleteTestSet",
    "EventSource": "lexv2-models",
    "EventName": "DeleteTestSet",
    "Description": "The action to delete the selected test set"
  },
  {
    "API": "lexv2-models:DeleteUtterances",
    "EventSource": "lexv2-models",
    "EventName": "DeleteUtterances",
    "Description": "Deletes stored utterances"
  },
  {
    "API": "lexv2-models:DescribeBot",
    "EventSource": "lexv2-models",
    "EventName": "DescribeBot",
    "Description": "Provides metadata information about a bot"
  },
  {
    "API": "lexv2-models:DescribeBotAlias",
    "EventSource": "lexv2-models",
    "EventName": "DescribeBotAlias",
    "Description": "Get information about a specific bot alias"
  },
  {
    "API": "lexv2-models:DescribeBotLocale",
    "EventSource": "lexv2-models",
    "EventName": "DescribeBotLocale",
    "Description": "Describes the settings that a bot has for a specific locale"
  },
  {
    "API": "lexv2-models:DescribeBotRecommendation",
    "EventSource": "lexv2-models",
    "EventName": "DescribeBotRecommendation",
    "Description": "Provides metadata information about a bot recommendation"
  },
  {
    "API": "lexv2-models:DescribeBotReplica",
    "EventSource": "lexv2-models",
    "EventName": "DescribeBotReplica",
    "Description": "Monitors the bot replication status through the UI console"
  },
  {
    "API": "lexv2-models:DescribeBotResourceGeneration",
    "EventSource": "lexv2-models",
    "EventName": "DescribeBotResourceGeneration",
    "Description": "Returns information about a request to generate a bot through natural language description, made through the ``StartBotResource`` API"
  },
  {
    "API": "lexv2-models:DescribeBotVersion",
    "EventSource": "lexv2-models",
    "EventName": "DescribeBotVersion",
    "Description": "Provides metadata about a version of a bot"
  },
  {
    "API": "lexv2-models:DescribeCustomVocabularyMetadata",
    "EventSource": "lexv2-models",
    "EventName": "DescribeCustomVocabularyMetadata",
    "Description": "Provides metadata information about a custom vocabulary"
  },
  {
    "API": "lexv2-models:DescribeExport",
    "EventSource": "lexv2-models",
    "EventName": "DescribeExport",
    "Description": "Gets information about a specific export"
  },
  {
    "API": "lexv2-models:DescribeImport",
    "EventSource": "lexv2-models",
    "EventName": "DescribeImport",
    "Description": "Gets information about a specific import"
  },
  {
    "API": "lexv2-models:DescribeIntent",
    "EventSource": "lexv2-models",
    "EventName": "DescribeIntent",
    "Description": "Returns metadata about an intent"
  },
  {
    "API": "lexv2-models:DescribeResourcePolicy",
    "EventSource": "lexv2-models",
    "EventName": "DescribeResourcePolicy",
    "Description": "Gets the resource policy and policy revision for a bot or bot alias"
  },
  {
    "API": "lexv2-models:DescribeSlot",
    "EventSource": "lexv2-models",
    "EventName": "DescribeSlot",
    "Description": "Gets metadata information about a slot"
  },
  {
    "API": "lexv2-models:DescribeSlotType",
    "EventSource": "lexv2-models",
    "EventName": "DescribeSlotType",
    "Description": "Gets metadata information about a slot type"
  },
  {
    "API": "lexv2-models:DescribeTestExecution",
    "EventSource": "lexv2-models",
    "EventName": "DescribeTestExecution",
    "Description": "Gets metadata information about the test execution"
  },
  {
    "API": "lexv2-models:DescribeTestSet",
    "EventSource": "lexv2-models",
    "EventName": "DescribeTestSet",
    "Description": "Gets metadata information about the test set"
  },
  {
    "API": "lexv2-models:DescribeTestSetDiscrepancyReport",
    "EventSource": "lexv2-models",
    "EventName": "DescribeTestSetDiscrepancyReport",
    "Description": "Gets metadata information about the test set discrepancy report"
  },
  {
    "API": "lexv2-models:DescribeTestSetGeneration",
    "EventSource": "lexv2-models",
    "EventName": "DescribeTestSetGeneration",
    "Description": "Gets metadata information about the test set generation"
  },
  {
    "API": "lexv2-models:GenerateBotElement",
    "EventSource": "lexv2-models",
    "EventName": "GenerateBotElement",
    "Description": "Generates sample utterances for an intent"
  },
  {
    "API": "lexv2-models:GeneratePresignedUrl",
    "EventSource": "lexv2-models",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "lexv2-models:GetTestExecutionArtifactsUrl",
    "EventSource": "lexv2-models",
    "EventName": "GetTestExecutionArtifactsUrl",
    "Description": "The pre-signed Amazon S3 URL to download the test execution result artifacts"
  },
  {
    "API": "lexv2-models:ListAggregatedUtterances",
    "EventSource": "lexv2-models",
    "EventName": "ListAggregatedUtterances",
    "Description": "Provides a list of utterances that users have sent to the bot"
  },
  {
    "API": "lexv2-models:ListBotAliasReplicas",
    "EventSource": "lexv2-models",
    "EventName": "ListBotAliasReplicas",
    "Description": "The action to list the replicated bots created from the source bot alias"
  },
  {
    "API": "lexv2-models:ListBotAliases",
    "EventSource": "lexv2-models",
    "EventName": "ListBotAliases",
    "Description": "Gets a list of aliases for the specified bot"
  },
  {
    "API": "lexv2-models:ListBotLocales",
    "EventSource": "lexv2-models",
    "EventName": "ListBotLocales",
    "Description": "Gets a list of locales for the specified bot"
  },
  {
    "API": "lexv2-models:ListBotRecommendations",
    "EventSource": "lexv2-models",
    "EventName": "ListBotRecommendations",
    "Description": "Get a list of bot recommendations that meet the specified criteria"
  },
  {
    "API": "lexv2-models:ListBotReplicas",
    "EventSource": "lexv2-models",
    "EventName": "ListBotReplicas",
    "Description": "The action to list the replicated bots"
  },
  {
    "API": "lexv2-models:ListBotResourceGenerations",
    "EventSource": "lexv2-models",
    "EventName": "ListBotResourceGenerations",
    "Description": "Lists the generation requests made for a bot locale"
  },
  {
    "API": "lexv2-models:ListBotVersionReplicas",
    "EventSource": "lexv2-models",
    "EventName": "ListBotVersionReplicas",
    "Description": "Contains information about all the versions replication statuses applicable for Global Resiliency"
  },
  {
    "API": "lexv2-models:ListBotVersions",
    "EventSource": "lexv2-models",
    "EventName": "ListBotVersions",
    "Description": "Gets information about all of the versions of a bot"
  },
  {
    "API": "lexv2-models:ListBots",
    "EventSource": "lexv2-models",
    "EventName": "ListBots",
    "Description": "Gets a list of available bots"
  },
  {
    "API": "lexv2-models:ListBuiltInIntents",
    "EventSource": "lexv2-models",
    "EventName": "ListBuiltInIntents",
    "Description": "Gets a list of built-in intents provided by Amazon Lex that you can use in your bot"
  },
  {
    "API": "lexv2-models:ListBuiltInSlotTypes",
    "EventSource": "lexv2-models",
    "EventName": "ListBuiltInSlotTypes",
    "Description": "Gets a list of built-in slot types that meet the specified criteria"
  },
  {
    "API": "lexv2-models:ListCustomVocabularyItems",
    "EventSource": "lexv2-models",
    "EventName": "ListCustomVocabularyItems",
    "Description": "Paginated list of custom vocabulary items for a given bot locale's custom vocabulary"
  },
  {
    "API": "lexv2-models:ListExports",
    "EventSource": "lexv2-models",
    "EventName": "ListExports",
    "Description": "Lists the exports for a bot, bot locale, or custom vocabulary"
  },
  {
    "API": "lexv2-models:ListImports",
    "EventSource": "lexv2-models",
    "EventName": "ListImports",
    "Description": "Lists the imports for a bot, bot locale, or custom vocabulary"
  },
  {
    "API": "lexv2-models:ListIntentMetrics",
    "EventSource": "lexv2-models",
    "EventName": "ListIntentMetrics",
    "Description": "Retrieves summary metrics for the intents in your bot"
  },
  {
    "API": "lexv2-models:ListIntentPaths",
    "EventSource": "lexv2-models",
    "EventName": "ListIntentPaths",
    "Description": "Retrieves summary statistics for a path of intents that users take over sessions with your bot"
  },
  {
    "API": "lexv2-models:ListIntentStageMetrics",
    "EventSource": "lexv2-models",
    "EventName": "ListIntentStageMetrics",
    "Description": "Retrieves summary metrics for the stages within intents in your bot"
  },
  {
    "API": "lexv2-models:ListIntents",
    "EventSource": "lexv2-models",
    "EventName": "ListIntents",
    "Description": "Get a list of intents that meet the specified criteria"
  },
  {
    "API": "lexv2-models:ListRecommendedIntents",
    "EventSource": "lexv2-models",
    "EventName": "ListRecommendedIntents",
    "Description": "Gets a list of recommended intents provided by the bot recommendation that you can use in your bot"
  },
  {
    "API": "lexv2-models:ListSessionAnalyticsData",
    "EventSource": "lexv2-models",
    "EventName": "ListSessionAnalyticsData",
    "Description": "Retrieves a list of metadata for individual user sessions with your bot"
  },
  {
    "API": "lexv2-models:ListSessionMetrics",
    "EventSource": "lexv2-models",
    "EventName": "ListSessionMetrics",
    "Description": "Retrieves summary metrics for the user sessions with your bot"
  },
  {
    "API": "lexv2-models:ListSlotTypes",
    "EventSource": "lexv2-models",
    "EventName": "ListSlotTypes",
    "Description": "Gets a list of slot types that match the specified criteria"
  },
  {
    "API": "lexv2-models:ListSlots",
    "EventSource": "lexv2-models",
    "EventName": "ListSlots",
    "Description": "Gets a list of slots that match the specified criteria"
  },
  {
    "API": "lexv2-models:ListTagsForResource",
    "EventSource": "lexv2-models",
    "EventName": "ListTagsForResource",
    "Description": "Gets a list of tags associated with a resource"
  },
  {
    "API": "lexv2-models:ListTestExecutionResultItems",
    "EventSource": "lexv2-models",
    "EventName": "ListTestExecutionResultItems",
    "Description": "Gets a list of test execution result items"
  },
  {
    "API": "lexv2-models:ListTestExecutions",
    "EventSource": "lexv2-models",
    "EventName": "ListTestExecutions",
    "Description": "The list of test set executions"
  },
  {
    "API": "lexv2-models:ListTestSetRecords",
    "EventSource": "lexv2-models",
    "EventName": "ListTestSetRecords",
    "Description": "The list of test set records"
  },
  {
    "API": "lexv2-models:ListTestSets",
    "EventSource": "lexv2-models",
    "EventName": "ListTestSets",
    "Description": "The list of the test sets"
  },
  {
    "API": "lexv2-models:ListUtteranceAnalyticsData",
    "EventSource": "lexv2-models",
    "EventName": "ListUtteranceAnalyticsData",
    "Description": ""
  },
  {
    "API": "lexv2-models:ListUtteranceMetrics",
    "EventSource": "lexv2-models",
    "EventName": "ListUtteranceMetrics",
    "Description": ""
  },
  {
    "API": "lexv2-models:SearchAssociatedTranscripts",
    "EventSource": "lexv2-models",
    "EventName": "SearchAssociatedTranscripts",
    "Description": "Search for associated transcripts that meet the specified criteria"
  },
  {
    "API": "lexv2-models:StartBotRecommendation",
    "EventSource": "lexv2-models",
    "EventName": "StartBotRecommendation",
    "Description": "Use this to provide your transcript data, and to start the bot recommendation process"
  },
  {
    "API": "lexv2-models:StartBotResourceGeneration",
    "EventSource": "lexv2-models",
    "EventName": "StartBotResourceGeneration",
    "Description": "Starts a request for the descriptive bot builder to generate a bot locale configuration based on the prompt you provide it"
  },
  {
    "API": "lexv2-models:StartImport",
    "EventSource": "lexv2-models",
    "EventName": "StartImport",
    "Description": "Starts importing a bot, bot locale, or custom vocabulary from a zip archive that you uploaded to an S3 bucket"
  },
  {
    "API": "lexv2-models:StartTestExecution",
    "EventSource": "lexv2-models",
    "EventName": "StartTestExecution",
    "Description": "The action to start test set execution"
  },
  {
    "API": "lexv2-models:StartTestSetGeneration",
    "EventSource": "lexv2-models",
    "EventName": "StartTestSetGeneration",
    "Description": "The action to start the generation of test set"
  },
  {
    "API": "lexv2-models:StopBotRecommendation",
    "EventSource": "lexv2-models",
    "EventName": "StopBotRecommendation",
    "Description": "Stop an already running Bot Recommendation request"
  },
  {
    "API": "lexv2-models:TagResource",
    "EventSource": "lexv2-models",
    "EventName": "TagResource",
    "Description": "Adds the specified tags to the specified resource"
  },
  {
    "API": "lexv2-models:UntagResource",
    "EventSource": "lexv2-models",
    "EventName": "UntagResource",
    "Description": "Removes tags from a bot, bot alias, or bot channel"
  },
  {
    "API": "lexv2-models:UpdateBot",
    "EventSource": "lexv2-models",
    "EventName": "UpdateBot",
    "Description": "Updates the configuration of an existing bot"
  },
  {
    "API": "lexv2-models:UpdateBotAlias",
    "EventSource": "lexv2-models",
    "EventName": "UpdateBotAlias",
    "Description": "Updates the configuration of an existing bot alias"
  },
  {
    "API": "lexv2-models:UpdateBotLocale",
    "EventSource": "lexv2-models",
    "EventName": "UpdateBotLocale",
    "Description": "Updates the settings that a bot has for a specific locale"
  },
  {
    "API": "lexv2-models:UpdateBotRecommendation",
    "EventSource": "lexv2-models",
    "EventName": "UpdateBotRecommendation",
    "Description": "Updates an existing bot recommendation request"
  },
  {
    "API": "lexv2-models:UpdateExport",
    "EventSource": "lexv2-models",
    "EventName": "UpdateExport",
    "Description": "Updates the password used to protect an export zip archive"
  },
  {
    "API": "lexv2-models:UpdateIntent",
    "EventSource": "lexv2-models",
    "EventName": "UpdateIntent",
    "Description": "Updates the settings for an intent"
  },
  {
    "API": "lexv2-models:UpdateResourcePolicy",
    "EventSource": "lexv2-models",
    "EventName": "UpdateResourcePolicy",
    "Description": "Replaces the existing resource policy for a bot or bot alias with a new one"
  },
  {
    "API": "lexv2-models:UpdateSlot",
    "EventSource": "lexv2-models",
    "EventName": "UpdateSlot",
    "Description": "Updates the settings for a slot"
  },
  {
    "API": "lexv2-models:UpdateSlotType",
    "EventSource": "lexv2-models",
    "EventName": "UpdateSlotType",
    "Description": "Updates the configuration of an existing slot type"
  },
  {
    "API": "lexv2-models:UpdateTestSet",
    "EventSource": "lexv2-models",
    "EventName": "UpdateTestSet",
    "Description": "The action to update the test set"
  },
  {
    "API": "lexv2-runtime:DeleteSession",
    "EventSource": "lexv2-runtime",
    "EventName": "DeleteSession",
    "Description": "Removes session information for a specified bot, alias, and user ID"
  },
  {
    "API": "lexv2-runtime:GeneratePresignedUrl",
    "EventSource": "lexv2-runtime",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "lexv2-runtime:GetSession",
    "EventSource": "lexv2-runtime",
    "EventName": "GetSession",
    "Description": "Returns session information for a specified bot, alias, and user"
  },
  {
    "API": "lexv2-runtime:PutSession",
    "EventSource": "lexv2-runtime",
    "EventName": "PutSession",
    "Description": "Creates a new session or modifies an existing session with an Amazon Lex V2 bot"
  },
  {
    "API": "lexv2-runtime:RecognizeText",
    "EventSource": "lexv2-runtime",
    "EventName": "RecognizeText",
    "Description": "Sends user input to Amazon Lex V2"
  },
  {
    "API": "lexv2-runtime:RecognizeUtterance",
    "EventSource": "lexv2-runtime",
    "EventName": "RecognizeUtterance",
    "Description": "Sends user input to Amazon Lex V2"
  },
  {
    "API": "license-manager:AcceptGrant",
    "EventSource": "license-manager",
    "EventName": "AcceptGrant",
    "Description": "Accepts the specified grant"
  },
  {
    "API": "license-manager:CheckInLicense",
    "EventSource": "license-manager",
    "EventName": "CheckInLicense",
    "Description": "Checks in the specified license"
  },
  {
    "API": "license-manager:CheckoutBorrowLicense",
    "EventSource": "license-manager",
    "EventName": "CheckoutBorrowLicense",
    "Description": "Checks out the specified license for offline use"
  },
  {
    "API": "license-manager:CheckoutLicense",
    "EventSource": "license-manager",
    "EventName": "CheckoutLicense",
    "Description": "Checks out the specified license"
  },
  {
    "API": "license-manager:CreateGrant",
    "EventSource": "license-manager",
    "EventName": "CreateGrant",
    "Description": "Creates a grant for the specified license"
  },
  {
    "API": "license-manager:CreateGrantVersion",
    "EventSource": "license-manager",
    "EventName": "CreateGrantVersion",
    "Description": "Creates a new version of the specified grant"
  },
  {
    "API": "license-manager:CreateLicense",
    "EventSource": "license-manager",
    "EventName": "CreateLicense",
    "Description": "Creates a license"
  },
  {
    "API": "license-manager:CreateLicenseConfiguration",
    "EventSource": "license-manager",
    "EventName": "CreateLicenseConfiguration",
    "Description": "Creates a license configuration"
  },
  {
    "API": "license-manager:CreateLicenseConversionTaskForResource",
    "EventSource": "license-manager",
    "EventName": "CreateLicenseConversionTaskForResource",
    "Description": "Creates a new license conversion task"
  },
  {
    "API": "license-manager:CreateLicenseManagerReportGenerator",
    "EventSource": "license-manager",
    "EventName": "CreateLicenseManagerReportGenerator",
    "Description": "Creates a report generator"
  },
  {
    "API": "license-manager:CreateLicenseVersion",
    "EventSource": "license-manager",
    "EventName": "CreateLicenseVersion",
    "Description": "Creates a new version of the specified license"
  },
  {
    "API": "license-manager:CreateToken",
    "EventSource": "license-manager",
    "EventName": "CreateToken",
    "Description": "Creates a long-lived token"
  },
  {
    "API": "license-manager:DeleteGrant",
    "EventSource": "license-manager",
    "EventName": "DeleteGrant",
    "Description": "Deletes the specified grant"
  },
  {
    "API": "license-manager:DeleteLicense",
    "EventSource": "license-manager",
    "EventName": "DeleteLicense",
    "Description": "Deletes the specified license"
  },
  {
    "API": "license-manager:DeleteLicenseConfiguration",
    "EventSource": "license-manager",
    "EventName": "DeleteLicenseConfiguration",
    "Description": "Deletes the specified license configuration"
  },
  {
    "API": "license-manager:DeleteLicenseManagerReportGenerator",
    "EventSource": "license-manager",
    "EventName": "DeleteLicenseManagerReportGenerator",
    "Description": "Deletes the specified report generator"
  },
  {
    "API": "license-manager:DeleteToken",
    "EventSource": "license-manager",
    "EventName": "DeleteToken",
    "Description": "Deletes the specified token"
  },
  {
    "API": "license-manager:ExtendLicenseConsumption",
    "EventSource": "license-manager",
    "EventName": "ExtendLicenseConsumption",
    "Description": "Extends the expiration date for license consumption"
  },
  {
    "API": "license-manager:GeneratePresignedUrl",
    "EventSource": "license-manager",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "license-manager:GetAccessToken",
    "EventSource": "license-manager",
    "EventName": "GetAccessToken",
    "Description": "Gets a temporary access token to use with AssumeRoleWithWebIdentity"
  },
  {
    "API": "license-manager:GetGrant",
    "EventSource": "license-manager",
    "EventName": "GetGrant",
    "Description": "Gets detailed information about the specified grant"
  },
  {
    "API": "license-manager:GetLicense",
    "EventSource": "license-manager",
    "EventName": "GetLicense",
    "Description": "Gets detailed information about the specified license"
  },
  {
    "API": "license-manager:GetLicenseConfiguration",
    "EventSource": "license-manager",
    "EventName": "GetLicenseConfiguration",
    "Description": "Gets detailed information about the specified license configuration"
  },
  {
    "API": "license-manager:GetLicenseConversionTask",
    "EventSource": "license-manager",
    "EventName": "GetLicenseConversionTask",
    "Description": "Gets information about the specified license type conversion task"
  },
  {
    "API": "license-manager:GetLicenseManagerReportGenerator",
    "EventSource": "license-manager",
    "EventName": "GetLicenseManagerReportGenerator",
    "Description": "Gets information about the specified report generator"
  },
  {
    "API": "license-manager:GetLicenseUsage",
    "EventSource": "license-manager",
    "EventName": "GetLicenseUsage",
    "Description": "Gets detailed information about the usage of the specified license"
  },
  {
    "API": "license-manager:GetServiceSettings",
    "EventSource": "license-manager",
    "EventName": "GetServiceSettings",
    "Description": "Gets the License Manager settings for the current Region"
  },
  {
    "API": "license-manager:ListAssociationsForLicenseConfiguration",
    "EventSource": "license-manager",
    "EventName": "ListAssociationsForLicenseConfiguration",
    "Description": "Lists the resource associations for the specified license configuration"
  },
  {
    "API": "license-manager:ListDistributedGrants",
    "EventSource": "license-manager",
    "EventName": "ListDistributedGrants",
    "Description": "Lists the grants distributed for the specified license"
  },
  {
    "API": "license-manager:ListFailuresForLicenseConfigurationOperations",
    "EventSource": "license-manager",
    "EventName": "ListFailuresForLicenseConfigurationOperations",
    "Description": "Lists the license configuration operations that failed"
  },
  {
    "API": "license-manager:ListLicenseConfigurations",
    "EventSource": "license-manager",
    "EventName": "ListLicenseConfigurations",
    "Description": "Lists the license configurations for your account"
  },
  {
    "API": "license-manager:ListLicenseConversionTasks",
    "EventSource": "license-manager",
    "EventName": "ListLicenseConversionTasks",
    "Description": "Lists the license type conversion tasks for your account"
  },
  {
    "API": "license-manager:ListLicenseManagerReportGenerators",
    "EventSource": "license-manager",
    "EventName": "ListLicenseManagerReportGenerators",
    "Description": "Lists the report generators for your account"
  },
  {
    "API": "license-manager:ListLicenseSpecificationsForResource",
    "EventSource": "license-manager",
    "EventName": "ListLicenseSpecificationsForResource",
    "Description": "Describes the license configurations for the specified resource"
  },
  {
    "API": "license-manager:ListLicenseVersions",
    "EventSource": "license-manager",
    "EventName": "ListLicenseVersions",
    "Description": "Lists all versions of the specified license"
  },
  {
    "API": "license-manager:ListLicenses",
    "EventSource": "license-manager",
    "EventName": "ListLicenses",
    "Description": "Lists the licenses for your account"
  },
  {
    "API": "license-manager:ListReceivedGrants",
    "EventSource": "license-manager",
    "EventName": "ListReceivedGrants",
    "Description": "Lists grants that are received"
  },
  {
    "API": "license-manager:ListReceivedGrantsForOrganization",
    "EventSource": "license-manager",
    "EventName": "ListReceivedGrantsForOrganization",
    "Description": "Lists the grants received for all accounts in the organization"
  },
  {
    "API": "license-manager:ListReceivedLicenses",
    "EventSource": "license-manager",
    "EventName": "ListReceivedLicenses",
    "Description": "Lists received licenses"
  },
  {
    "API": "license-manager:ListReceivedLicensesForOrganization",
    "EventSource": "license-manager",
    "EventName": "ListReceivedLicensesForOrganization",
    "Description": "Lists the licenses received for all accounts in the organization"
  },
  {
    "API": "license-manager:ListResourceInventory",
    "EventSource": "license-manager",
    "EventName": "ListResourceInventory",
    "Description": "Lists resources managed using Systems Manager inventory"
  },
  {
    "API": "license-manager:ListTagsForResource",
    "EventSource": "license-manager",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags for the specified license configuration"
  },
  {
    "API": "license-manager:ListTokens",
    "EventSource": "license-manager",
    "EventName": "ListTokens",
    "Description": "Lists your tokens"
  },
  {
    "API": "license-manager:ListUsageForLicenseConfiguration",
    "EventSource": "license-manager",
    "EventName": "ListUsageForLicenseConfiguration",
    "Description": "Lists all license usage records for a license configuration, displaying license consumption details by resource at a selected point in time"
  },
  {
    "API": "license-manager:RejectGrant",
    "EventSource": "license-manager",
    "EventName": "RejectGrant",
    "Description": "Rejects the specified grant"
  },
  {
    "API": "license-manager:TagResource",
    "EventSource": "license-manager",
    "EventName": "TagResource",
    "Description": "Adds the specified tags to the specified license configuration"
  },
  {
    "API": "license-manager:UntagResource",
    "EventSource": "license-manager",
    "EventName": "UntagResource",
    "Description": "Removes the specified tags from the specified license configuration"
  },
  {
    "API": "license-manager:UpdateLicenseConfiguration",
    "EventSource": "license-manager",
    "EventName": "UpdateLicenseConfiguration",
    "Description": "Modifies the attributes of an existing license configuration"
  },
  {
    "API": "license-manager:UpdateLicenseManagerReportGenerator",
    "EventSource": "license-manager",
    "EventName": "UpdateLicenseManagerReportGenerator",
    "Description": "Updates a report generator"
  },
  {
    "API": "license-manager:UpdateLicenseSpecificationsForResource",
    "EventSource": "license-manager",
    "EventName": "UpdateLicenseSpecificationsForResource",
    "Description": "Adds or removes the specified license configurations for the specified Amazon Web Services resource"
  },
  {
    "API": "license-manager:UpdateServiceSettings",
    "EventSource": "license-manager",
    "EventName": "UpdateServiceSettings",
    "Description": "Updates License Manager settings for the current Region"
  },
  {
    "API": "license-manager-linux-subscriptions:GeneratePresignedUrl",
    "EventSource": "license-manager-linux-subscriptions",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "license-manager-linux-subscriptions:GetServiceSettings",
    "EventSource": "license-manager-linux-subscriptions",
    "EventName": "GetServiceSettings",
    "Description": "Lists the Linux subscriptions service settings"
  },
  {
    "API": "license-manager-linux-subscriptions:ListLinuxSubscriptionInstances",
    "EventSource": "license-manager-linux-subscriptions",
    "EventName": "ListLinuxSubscriptionInstances",
    "Description": "Lists the running Amazon EC2 instances that were discovered with commercial Linux subscriptions"
  },
  {
    "API": "license-manager-linux-subscriptions:ListLinuxSubscriptions",
    "EventSource": "license-manager-linux-subscriptions",
    "EventName": "ListLinuxSubscriptions",
    "Description": "Lists the Linux subscriptions that have been discovered"
  },
  {
    "API": "license-manager-linux-subscriptions:UpdateServiceSettings",
    "EventSource": "license-manager-linux-subscriptions",
    "EventName": "UpdateServiceSettings",
    "Description": "Updates the service settings for Linux subscriptions"
  },
  {
    "API": "license-manager-user-subscriptions:AssociateUser",
    "EventSource": "license-manager-user-subscriptions",
    "EventName": "AssociateUser",
    "Description": "Associates the user to an EC2 instance to utilize user-based subscriptions"
  },
  {
    "API": "license-manager-user-subscriptions:DeregisterIdentityProvider",
    "EventSource": "license-manager-user-subscriptions",
    "EventName": "DeregisterIdentityProvider",
    "Description": "Deregisters the identity provider from providing user-based subscriptions"
  },
  {
    "API": "license-manager-user-subscriptions:DisassociateUser",
    "EventSource": "license-manager-user-subscriptions",
    "EventName": "DisassociateUser",
    "Description": "Disassociates the user from an EC2 instance providing user-based subscriptions"
  },
  {
    "API": "license-manager-user-subscriptions:GeneratePresignedUrl",
    "EventSource": "license-manager-user-subscriptions",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "license-manager-user-subscriptions:ListIdentityProviders",
    "EventSource": "license-manager-user-subscriptions",
    "EventName": "ListIdentityProviders",
    "Description": "Lists the identity providers for user-based subscriptions"
  },
  {
    "API": "license-manager-user-subscriptions:ListInstances",
    "EventSource": "license-manager-user-subscriptions",
    "EventName": "ListInstances",
    "Description": "Lists the EC2 instances providing user-based subscriptions"
  },
  {
    "API": "license-manager-user-subscriptions:ListProductSubscriptions",
    "EventSource": "license-manager-user-subscriptions",
    "EventName": "ListProductSubscriptions",
    "Description": "Lists the user-based subscription products available from an identity provider"
  },
  {
    "API": "license-manager-user-subscriptions:ListUserAssociations",
    "EventSource": "license-manager-user-subscriptions",
    "EventName": "ListUserAssociations",
    "Description": "Lists user associations for an identity provider"
  },
  {
    "API": "license-manager-user-subscriptions:RegisterIdentityProvider",
    "EventSource": "license-manager-user-subscriptions",
    "EventName": "RegisterIdentityProvider",
    "Description": "Registers an identity provider for user-based subscriptions"
  },
  {
    "API": "license-manager-user-subscriptions:StartProductSubscription",
    "EventSource": "license-manager-user-subscriptions",
    "EventName": "StartProductSubscription",
    "Description": "Starts a product subscription for a user with the specified identity provider"
  },
  {
    "API": "license-manager-user-subscriptions:StopProductSubscription",
    "EventSource": "license-manager-user-subscriptions",
    "EventName": "StopProductSubscription",
    "Description": "Stops a product subscription for a user with the specified identity provider"
  },
  {
    "API": "license-manager-user-subscriptions:UpdateIdentityProviderSettings",
    "EventSource": "license-manager-user-subscriptions",
    "EventName": "UpdateIdentityProviderSettings",
    "Description": "Updates additional product configuration settings for the registered identity provider"
  },
  {
    "API": "lightsail:AllocateStaticIp",
    "EventSource": "lightsail",
    "EventName": "AllocateStaticIp",
    "Description": "Allocates a static IP address"
  },
  {
    "API": "lightsail:AttachCertificateToDistribution",
    "EventSource": "lightsail",
    "EventName": "AttachCertificateToDistribution",
    "Description": "Attaches an SSL/TLS certificate to your Amazon Lightsail content delivery network (CDN) distribution"
  },
  {
    "API": "lightsail:AttachDisk",
    "EventSource": "lightsail",
    "EventName": "AttachDisk",
    "Description": "Attaches a block storage disk to a running or stopped Lightsail instance and exposes it to the instance with the specified disk name"
  },
  {
    "API": "lightsail:AttachInstancesToLoadBalancer",
    "EventSource": "lightsail",
    "EventName": "AttachInstancesToLoadBalancer",
    "Description": "Attaches one or more Lightsail instances to a load balancer"
  },
  {
    "API": "lightsail:AttachLoadBalancerTlsCertificate",
    "EventSource": "lightsail",
    "EventName": "AttachLoadBalancerTlsCertificate",
    "Description": "Attaches a Transport Layer Security (TLS) certificate to your load balancer"
  },
  {
    "API": "lightsail:AttachStaticIp",
    "EventSource": "lightsail",
    "EventName": "AttachStaticIp",
    "Description": "Attaches a static IP address to a specific Amazon Lightsail instance"
  },
  {
    "API": "lightsail:CloseInstancePublicPorts",
    "EventSource": "lightsail",
    "EventName": "CloseInstancePublicPorts",
    "Description": "Closes ports for a specific Amazon Lightsail instance"
  },
  {
    "API": "lightsail:CopySnapshot",
    "EventSource": "lightsail",
    "EventName": "CopySnapshot",
    "Description": "Copies a manual snapshot of an instance or disk as another manual snapshot, or copies an automatic snapshot of an instance or disk as a manual snapshot"
  },
  {
    "API": "lightsail:CreateBucket",
    "EventSource": "lightsail",
    "EventName": "CreateBucket",
    "Description": "Creates an Amazon Lightsail bucket"
  },
  {
    "API": "lightsail:CreateBucketAccessKey",
    "EventSource": "lightsail",
    "EventName": "CreateBucketAccessKey",
    "Description": "Creates a new access key for the specified Amazon Lightsail bucket"
  },
  {
    "API": "lightsail:CreateCertificate",
    "EventSource": "lightsail",
    "EventName": "CreateCertificate",
    "Description": "Creates an SSL/TLS certificate for an Amazon Lightsail content delivery network (CDN) distribution and a container service"
  },
  {
    "API": "lightsail:CreateCloudFormationStack",
    "EventSource": "lightsail",
    "EventName": "CreateCloudFormationStack",
    "Description": "Creates an AWS CloudFormation stack, which creates a new Amazon EC2 instance from an exported Amazon Lightsail snapshot"
  },
  {
    "API": "lightsail:CreateContactMethod",
    "EventSource": "lightsail",
    "EventName": "CreateContactMethod",
    "Description": "Creates an email or SMS text message contact method"
  },
  {
    "API": "lightsail:CreateContainerService",
    "EventSource": "lightsail",
    "EventName": "CreateContainerService",
    "Description": "Creates an Amazon Lightsail container service"
  },
  {
    "API": "lightsail:CreateContainerServiceDeployment",
    "EventSource": "lightsail",
    "EventName": "CreateContainerServiceDeployment",
    "Description": "Creates a deployment for your Amazon Lightsail container service"
  },
  {
    "API": "lightsail:CreateContainerServiceRegistryLogin",
    "EventSource": "lightsail",
    "EventName": "CreateContainerServiceRegistryLogin",
    "Description": "Creates a temporary set of log in credentials that you can use to log in to the Docker process on your local machine"
  },
  {
    "API": "lightsail:CreateDisk",
    "EventSource": "lightsail",
    "EventName": "CreateDisk",
    "Description": "Creates a block storage disk that can be attached to an Amazon Lightsail instance in the same Availability Zone ( ``us-east-2a``)"
  },
  {
    "API": "lightsail:CreateDiskFromSnapshot",
    "EventSource": "lightsail",
    "EventName": "CreateDiskFromSnapshot",
    "Description": "Creates a block storage disk from a manual or automatic snapshot of a disk"
  },
  {
    "API": "lightsail:CreateDiskSnapshot",
    "EventSource": "lightsail",
    "EventName": "CreateDiskSnapshot",
    "Description": "Creates a snapshot of a block storage disk"
  },
  {
    "API": "lightsail:CreateDistribution",
    "EventSource": "lightsail",
    "EventName": "CreateDistribution",
    "Description": "Creates an Amazon Lightsail content delivery network (CDN) distribution"
  },
  {
    "API": "lightsail:CreateDomain",
    "EventSource": "lightsail",
    "EventName": "CreateDomain",
    "Description": "Creates a domain resource for the specified domain (example"
  },
  {
    "API": "lightsail:CreateDomainEntry",
    "EventSource": "lightsail",
    "EventName": "CreateDomainEntry",
    "Description": "Creates one of the following domain name system (DNS) records in a domain DNS zone: Address (A), canonical name (CNAME), mail exchanger (MX), name server (NS), start of authority (SOA), service locator (SRV), or text (TXT)"
  },
  {
    "API": "lightsail:CreateGuiSessionAccessDetails",
    "EventSource": "lightsail",
    "EventName": "CreateGuiSessionAccessDetails",
    "Description": "Creates two URLs that are used to access a virtual computer’s graphical user interface (GUI) session"
  },
  {
    "API": "lightsail:CreateInstanceSnapshot",
    "EventSource": "lightsail",
    "EventName": "CreateInstanceSnapshot",
    "Description": "Creates a snapshot of a specific virtual private server, or *instance*"
  },
  {
    "API": "lightsail:CreateInstances",
    "EventSource": "lightsail",
    "EventName": "CreateInstances",
    "Description": "Creates one or more Amazon Lightsail instances"
  },
  {
    "API": "lightsail:CreateInstancesFromSnapshot",
    "EventSource": "lightsail",
    "EventName": "CreateInstancesFromSnapshot",
    "Description": "Creates one or more new instances from a manual or automatic snapshot of an instance"
  },
  {
    "API": "lightsail:CreateKeyPair",
    "EventSource": "lightsail",
    "EventName": "CreateKeyPair",
    "Description": "Creates a custom SSH key pair that you can use with an Amazon Lightsail instance"
  },
  {
    "API": "lightsail:CreateLoadBalancer",
    "EventSource": "lightsail",
    "EventName": "CreateLoadBalancer",
    "Description": "Creates a Lightsail load balancer"
  },
  {
    "API": "lightsail:CreateLoadBalancerTlsCertificate",
    "EventSource": "lightsail",
    "EventName": "CreateLoadBalancerTlsCertificate",
    "Description": "Creates an SSL/TLS certificate for an Amazon Lightsail load balancer"
  },
  {
    "API": "lightsail:CreateRelationalDatabase",
    "EventSource": "lightsail",
    "EventName": "CreateRelationalDatabase",
    "Description": "Creates a new database in Amazon Lightsail"
  },
  {
    "API": "lightsail:CreateRelationalDatabaseFromSnapshot",
    "EventSource": "lightsail",
    "EventName": "CreateRelationalDatabaseFromSnapshot",
    "Description": "Creates a new database from an existing database snapshot in Amazon Lightsail"
  },
  {
    "API": "lightsail:CreateRelationalDatabaseSnapshot",
    "EventSource": "lightsail",
    "EventName": "CreateRelationalDatabaseSnapshot",
    "Description": "Creates a snapshot of your database in Amazon Lightsail"
  },
  {
    "API": "lightsail:DeleteAlarm",
    "EventSource": "lightsail",
    "EventName": "DeleteAlarm",
    "Description": "Deletes an alarm"
  },
  {
    "API": "lightsail:DeleteAutoSnapshot",
    "EventSource": "lightsail",
    "EventName": "DeleteAutoSnapshot",
    "Description": "Deletes an automatic snapshot of an instance or disk"
  },
  {
    "API": "lightsail:DeleteBucket",
    "EventSource": "lightsail",
    "EventName": "DeleteBucket",
    "Description": "Deletes a Amazon Lightsail bucket"
  },
  {
    "API": "lightsail:DeleteBucketAccessKey",
    "EventSource": "lightsail",
    "EventName": "DeleteBucketAccessKey",
    "Description": "Deletes an access key for the specified Amazon Lightsail bucket"
  },
  {
    "API": "lightsail:DeleteCertificate",
    "EventSource": "lightsail",
    "EventName": "DeleteCertificate",
    "Description": "Deletes an SSL/TLS certificate for your Amazon Lightsail content delivery network (CDN) distribution"
  },
  {
    "API": "lightsail:DeleteContactMethod",
    "EventSource": "lightsail",
    "EventName": "DeleteContactMethod",
    "Description": "Deletes a contact method"
  },
  {
    "API": "lightsail:DeleteContainerImage",
    "EventSource": "lightsail",
    "EventName": "DeleteContainerImage",
    "Description": "Deletes a container image that is registered to your Amazon Lightsail container service"
  },
  {
    "API": "lightsail:DeleteContainerService",
    "EventSource": "lightsail",
    "EventName": "DeleteContainerService",
    "Description": "Deletes your Amazon Lightsail container service"
  },
  {
    "API": "lightsail:DeleteDisk",
    "EventSource": "lightsail",
    "EventName": "DeleteDisk",
    "Description": "Deletes the specified block storage disk"
  },
  {
    "API": "lightsail:DeleteDiskSnapshot",
    "EventSource": "lightsail",
    "EventName": "DeleteDiskSnapshot",
    "Description": "Deletes the specified disk snapshot"
  },
  {
    "API": "lightsail:DeleteDistribution",
    "EventSource": "lightsail",
    "EventName": "DeleteDistribution",
    "Description": "Deletes your Amazon Lightsail content delivery network (CDN) distribution"
  },
  {
    "API": "lightsail:DeleteDomain",
    "EventSource": "lightsail",
    "EventName": "DeleteDomain",
    "Description": "Deletes the specified domain recordset and all of its domain records"
  },
  {
    "API": "lightsail:DeleteDomainEntry",
    "EventSource": "lightsail",
    "EventName": "DeleteDomainEntry",
    "Description": "Deletes a specific domain entry"
  },
  {
    "API": "lightsail:DeleteInstance",
    "EventSource": "lightsail",
    "EventName": "DeleteInstance",
    "Description": "Deletes an Amazon Lightsail instance"
  },
  {
    "API": "lightsail:DeleteInstanceSnapshot",
    "EventSource": "lightsail",
    "EventName": "DeleteInstanceSnapshot",
    "Description": "Deletes a specific snapshot of a virtual private server (or *instance*)"
  },
  {
    "API": "lightsail:DeleteKeyPair",
    "EventSource": "lightsail",
    "EventName": "DeleteKeyPair",
    "Description": "Deletes the specified key pair by removing the public key from Amazon Lightsail"
  },
  {
    "API": "lightsail:DeleteKnownHostKeys",
    "EventSource": "lightsail",
    "EventName": "DeleteKnownHostKeys",
    "Description": "Deletes the known host key or certificate used by the Amazon Lightsail browser-based SSH or RDP clients to authenticate an instance"
  },
  {
    "API": "lightsail:DeleteLoadBalancer",
    "EventSource": "lightsail",
    "EventName": "DeleteLoadBalancer",
    "Description": "Deletes a Lightsail load balancer and all its associated SSL/TLS certificates"
  },
  {
    "API": "lightsail:DeleteLoadBalancerTlsCertificate",
    "EventSource": "lightsail",
    "EventName": "DeleteLoadBalancerTlsCertificate",
    "Description": "Deletes an SSL/TLS certificate associated with a Lightsail load balancer"
  },
  {
    "API": "lightsail:DeleteRelationalDatabase",
    "EventSource": "lightsail",
    "EventName": "DeleteRelationalDatabase",
    "Description": "Deletes a database in Amazon Lightsail"
  },
  {
    "API": "lightsail:DeleteRelationalDatabaseSnapshot",
    "EventSource": "lightsail",
    "EventName": "DeleteRelationalDatabaseSnapshot",
    "Description": "Deletes a database snapshot in Amazon Lightsail"
  },
  {
    "API": "lightsail:DetachCertificateFromDistribution",
    "EventSource": "lightsail",
    "EventName": "DetachCertificateFromDistribution",
    "Description": "Detaches an SSL/TLS certificate from your Amazon Lightsail content delivery network (CDN) distribution"
  },
  {
    "API": "lightsail:DetachDisk",
    "EventSource": "lightsail",
    "EventName": "DetachDisk",
    "Description": "Detaches a stopped block storage disk from a Lightsail instance"
  },
  {
    "API": "lightsail:DetachInstancesFromLoadBalancer",
    "EventSource": "lightsail",
    "EventName": "DetachInstancesFromLoadBalancer",
    "Description": "Detaches the specified instances from a Lightsail load balancer"
  },
  {
    "API": "lightsail:DetachStaticIp",
    "EventSource": "lightsail",
    "EventName": "DetachStaticIp",
    "Description": "Detaches a static IP from the Amazon Lightsail instance to which it is attached"
  },
  {
    "API": "lightsail:DisableAddOn",
    "EventSource": "lightsail",
    "EventName": "DisableAddOn",
    "Description": "Disables an add-on for an Amazon Lightsail resource"
  },
  {
    "API": "lightsail:DownloadDefaultKeyPair",
    "EventSource": "lightsail",
    "EventName": "DownloadDefaultKeyPair",
    "Description": "Downloads the regional Amazon Lightsail default key pair"
  },
  {
    "API": "lightsail:EnableAddOn",
    "EventSource": "lightsail",
    "EventName": "EnableAddOn",
    "Description": "Enables or modifies an add-on for an Amazon Lightsail resource"
  },
  {
    "API": "lightsail:ExportSnapshot",
    "EventSource": "lightsail",
    "EventName": "ExportSnapshot",
    "Description": "Exports an Amazon Lightsail instance or block storage disk snapshot to Amazon Elastic Compute Cloud (Amazon EC2)"
  },
  {
    "API": "lightsail:GeneratePresignedUrl",
    "EventSource": "lightsail",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "lightsail:GetActiveNames",
    "EventSource": "lightsail",
    "EventName": "GetActiveNames",
    "Description": "Returns the names of all active (not deleted) resources"
  },
  {
    "API": "lightsail:GetAlarms",
    "EventSource": "lightsail",
    "EventName": "GetAlarms",
    "Description": "Returns information about the configured alarms"
  },
  {
    "API": "lightsail:GetAutoSnapshots",
    "EventSource": "lightsail",
    "EventName": "GetAutoSnapshots",
    "Description": "Returns the available automatic snapshots for an instance or disk"
  },
  {
    "API": "lightsail:GetBlueprints",
    "EventSource": "lightsail",
    "EventName": "GetBlueprints",
    "Description": "Returns the list of available instance images, or *blueprints*"
  },
  {
    "API": "lightsail:GetBucketAccessKeys",
    "EventSource": "lightsail",
    "EventName": "GetBucketAccessKeys",
    "Description": "Returns the existing access key IDs for the specified Amazon Lightsail bucket"
  },
  {
    "API": "lightsail:GetBucketBundles",
    "EventSource": "lightsail",
    "EventName": "GetBucketBundles",
    "Description": "Returns the bundles that you can apply to a Amazon Lightsail bucket"
  },
  {
    "API": "lightsail:GetBucketMetricData",
    "EventSource": "lightsail",
    "EventName": "GetBucketMetricData",
    "Description": "Returns the data points of a specific metric for an Amazon Lightsail bucket"
  },
  {
    "API": "lightsail:GetBuckets",
    "EventSource": "lightsail",
    "EventName": "GetBuckets",
    "Description": "Returns information about one or more Amazon Lightsail buckets"
  },
  {
    "API": "lightsail:GetBundles",
    "EventSource": "lightsail",
    "EventName": "GetBundles",
    "Description": "Returns the bundles that you can apply to an Amazon Lightsail instance when you create it"
  },
  {
    "API": "lightsail:GetCertificates",
    "EventSource": "lightsail",
    "EventName": "GetCertificates",
    "Description": "Returns information about one or more Amazon Lightsail SSL/TLS certificates"
  },
  {
    "API": "lightsail:GetCloudFormationStackRecords",
    "EventSource": "lightsail",
    "EventName": "GetCloudFormationStackRecords",
    "Description": "Returns the CloudFormation stack record created as a result of the ``create cloud formation stack`` operation"
  },
  {
    "API": "lightsail:GetContactMethods",
    "EventSource": "lightsail",
    "EventName": "GetContactMethods",
    "Description": "Returns information about the configured contact methods"
  },
  {
    "API": "lightsail:GetContainerApiMetadata",
    "EventSource": "lightsail",
    "EventName": "GetContainerApiMetadata",
    "Description": "Returns information about Amazon Lightsail containers, such as the current version of the Lightsail Control (lightsailctl) plugin"
  },
  {
    "API": "lightsail:GetContainerImages",
    "EventSource": "lightsail",
    "EventName": "GetContainerImages",
    "Description": "Returns the container images that are registered to your Amazon Lightsail container service"
  },
  {
    "API": "lightsail:GetContainerLog",
    "EventSource": "lightsail",
    "EventName": "GetContainerLog",
    "Description": "Returns the log events of a container of your Amazon Lightsail container service"
  },
  {
    "API": "lightsail:GetContainerServiceDeployments",
    "EventSource": "lightsail",
    "EventName": "GetContainerServiceDeployments",
    "Description": "Returns the deployments for your Amazon Lightsail container service"
  },
  {
    "API": "lightsail:GetContainerServiceMetricData",
    "EventSource": "lightsail",
    "EventName": "GetContainerServiceMetricData",
    "Description": "Returns the data points of a specific metric of your Amazon Lightsail container service"
  },
  {
    "API": "lightsail:GetContainerServicePowers",
    "EventSource": "lightsail",
    "EventName": "GetContainerServicePowers",
    "Description": "Returns the list of powers that can be specified for your Amazon Lightsail container services"
  },
  {
    "API": "lightsail:GetContainerServices",
    "EventSource": "lightsail",
    "EventName": "GetContainerServices",
    "Description": "Returns information about one or more of your Amazon Lightsail container services"
  },
  {
    "API": "lightsail:GetCostEstimate",
    "EventSource": "lightsail",
    "EventName": "GetCostEstimate",
    "Description": "Retrieves information about the cost estimate for a specified resource"
  },
  {
    "API": "lightsail:GetDisk",
    "EventSource": "lightsail",
    "EventName": "GetDisk",
    "Description": "Returns information about a specific block storage disk"
  },
  {
    "API": "lightsail:GetDiskSnapshot",
    "EventSource": "lightsail",
    "EventName": "GetDiskSnapshot",
    "Description": "Returns information about a specific block storage disk snapshot"
  },
  {
    "API": "lightsail:GetDiskSnapshots",
    "EventSource": "lightsail",
    "EventName": "GetDiskSnapshots",
    "Description": "Returns information about all block storage disk snapshots in your AWS account and region"
  },
  {
    "API": "lightsail:GetDisks",
    "EventSource": "lightsail",
    "EventName": "GetDisks",
    "Description": "Returns information about all block storage disks in your AWS account and region"
  },
  {
    "API": "lightsail:GetDistributionBundles",
    "EventSource": "lightsail",
    "EventName": "GetDistributionBundles",
    "Description": "Returns the bundles that can be applied to your Amazon Lightsail content delivery network (CDN) distributions"
  },
  {
    "API": "lightsail:GetDistributionLatestCacheReset",
    "EventSource": "lightsail",
    "EventName": "GetDistributionLatestCacheReset",
    "Description": "Returns the timestamp and status of the last cache reset of a specific Amazon Lightsail content delivery network (CDN) distribution"
  },
  {
    "API": "lightsail:GetDistributionMetricData",
    "EventSource": "lightsail",
    "EventName": "GetDistributionMetricData",
    "Description": "Returns the data points of a specific metric for an Amazon Lightsail content delivery network (CDN) distribution"
  },
  {
    "API": "lightsail:GetDistributions",
    "EventSource": "lightsail",
    "EventName": "GetDistributions",
    "Description": "Returns information about one or more of your Amazon Lightsail content delivery network (CDN) distributions"
  },
  {
    "API": "lightsail:GetDomain",
    "EventSource": "lightsail",
    "EventName": "GetDomain",
    "Description": "Returns information about a specific domain recordset"
  },
  {
    "API": "lightsail:GetDomains",
    "EventSource": "lightsail",
    "EventName": "GetDomains",
    "Description": "Returns a list of all domains in the user's account"
  },
  {
    "API": "lightsail:GetExportSnapshotRecords",
    "EventSource": "lightsail",
    "EventName": "GetExportSnapshotRecords",
    "Description": "Returns all export snapshot records created as a result of the ``export snapshot`` operation"
  },
  {
    "API": "lightsail:GetInstance",
    "EventSource": "lightsail",
    "EventName": "GetInstance",
    "Description": "Returns information about a specific Amazon Lightsail instance, which is a virtual private server"
  },
  {
    "API": "lightsail:GetInstanceAccessDetails",
    "EventSource": "lightsail",
    "EventName": "GetInstanceAccessDetails",
    "Description": "Returns temporary SSH keys you can use to connect to a specific virtual private server, or *instance*"
  },
  {
    "API": "lightsail:GetInstanceMetricData",
    "EventSource": "lightsail",
    "EventName": "GetInstanceMetricData",
    "Description": "Returns the data points for the specified Amazon Lightsail instance metric, given an instance name"
  },
  {
    "API": "lightsail:GetInstancePortStates",
    "EventSource": "lightsail",
    "EventName": "GetInstancePortStates",
    "Description": "Returns the firewall port states for a specific Amazon Lightsail instance, the IP addresses allowed to connect to the instance through the ports, and the protocol"
  },
  {
    "API": "lightsail:GetInstanceSnapshot",
    "EventSource": "lightsail",
    "EventName": "GetInstanceSnapshot",
    "Description": "Returns information about a specific instance snapshot"
  },
  {
    "API": "lightsail:GetInstanceSnapshots",
    "EventSource": "lightsail",
    "EventName": "GetInstanceSnapshots",
    "Description": "Returns all instance snapshots for the user's account"
  },
  {
    "API": "lightsail:GetInstanceState",
    "EventSource": "lightsail",
    "EventName": "GetInstanceState",
    "Description": "Returns the state of a specific instance"
  },
  {
    "API": "lightsail:GetInstances",
    "EventSource": "lightsail",
    "EventName": "GetInstances",
    "Description": "Returns information about all Amazon Lightsail virtual private servers, or *instances*"
  },
  {
    "API": "lightsail:GetKeyPair",
    "EventSource": "lightsail",
    "EventName": "GetKeyPair",
    "Description": "Returns information about a specific key pair"
  },
  {
    "API": "lightsail:GetKeyPairs",
    "EventSource": "lightsail",
    "EventName": "GetKeyPairs",
    "Description": "Returns information about all key pairs in the user's account"
  },
  {
    "API": "lightsail:GetLoadBalancer",
    "EventSource": "lightsail",
    "EventName": "GetLoadBalancer",
    "Description": "Returns information about the specified Lightsail load balancer"
  },
  {
    "API": "lightsail:GetLoadBalancerMetricData",
    "EventSource": "lightsail",
    "EventName": "GetLoadBalancerMetricData",
    "Description": "Returns information about health metrics for your Lightsail load balancer"
  },
  {
    "API": "lightsail:GetLoadBalancerTlsCertificates",
    "EventSource": "lightsail",
    "EventName": "GetLoadBalancerTlsCertificates",
    "Description": "Returns information about the TLS certificates that are associated with the specified Lightsail load balancer"
  },
  {
    "API": "lightsail:GetLoadBalancerTlsPolicies",
    "EventSource": "lightsail",
    "EventName": "GetLoadBalancerTlsPolicies",
    "Description": "Returns a list of TLS security policies that you can apply to Lightsail load balancers"
  },
  {
    "API": "lightsail:GetLoadBalancers",
    "EventSource": "lightsail",
    "EventName": "GetLoadBalancers",
    "Description": "Returns information about all load balancers in an account"
  },
  {
    "API": "lightsail:GetOperation",
    "EventSource": "lightsail",
    "EventName": "GetOperation",
    "Description": "Returns information about a specific operation"
  },
  {
    "API": "lightsail:GetOperations",
    "EventSource": "lightsail",
    "EventName": "GetOperations",
    "Description": "Returns information about all operations"
  },
  {
    "API": "lightsail:GetOperationsForResource",
    "EventSource": "lightsail",
    "EventName": "GetOperationsForResource",
    "Description": "Gets operations for a specific resource (an instance or a static IP)"
  },
  {
    "API": "lightsail:GetRegions",
    "EventSource": "lightsail",
    "EventName": "GetRegions",
    "Description": "Returns a list of all valid regions for Amazon Lightsail"
  },
  {
    "API": "lightsail:GetRelationalDatabase",
    "EventSource": "lightsail",
    "EventName": "GetRelationalDatabase",
    "Description": "Returns information about a specific database in Amazon Lightsail"
  },
  {
    "API": "lightsail:GetRelationalDatabaseBlueprints",
    "EventSource": "lightsail",
    "EventName": "GetRelationalDatabaseBlueprints",
    "Description": "Returns a list of available database blueprints in Amazon Lightsail"
  },
  {
    "API": "lightsail:GetRelationalDatabaseBundles",
    "EventSource": "lightsail",
    "EventName": "GetRelationalDatabaseBundles",
    "Description": "Returns the list of bundles that are available in Amazon Lightsail"
  },
  {
    "API": "lightsail:GetRelationalDatabaseEvents",
    "EventSource": "lightsail",
    "EventName": "GetRelationalDatabaseEvents",
    "Description": "Returns a list of events for a specific database in Amazon Lightsail"
  },
  {
    "API": "lightsail:GetRelationalDatabaseLogEvents",
    "EventSource": "lightsail",
    "EventName": "GetRelationalDatabaseLogEvents",
    "Description": "Returns a list of log events for a database in Amazon Lightsail"
  },
  {
    "API": "lightsail:GetRelationalDatabaseLogStreams",
    "EventSource": "lightsail",
    "EventName": "GetRelationalDatabaseLogStreams",
    "Description": "Returns a list of available log streams for a specific database in Amazon Lightsail"
  },
  {
    "API": "lightsail:GetRelationalDatabaseMasterUserPassword",
    "EventSource": "lightsail",
    "EventName": "GetRelationalDatabaseMasterUserPassword",
    "Description": "Returns the current, previous, or pending versions of the master user password for a Lightsail database"
  },
  {
    "API": "lightsail:GetRelationalDatabaseMetricData",
    "EventSource": "lightsail",
    "EventName": "GetRelationalDatabaseMetricData",
    "Description": "Returns the data points of the specified metric for a database in Amazon Lightsail"
  },
  {
    "API": "lightsail:GetRelationalDatabaseParameters",
    "EventSource": "lightsail",
    "EventName": "GetRelationalDatabaseParameters",
    "Description": "Returns all of the runtime parameters offered by the underlying database software, or engine, for a specific database in Amazon Lightsail"
  },
  {
    "API": "lightsail:GetRelationalDatabaseSnapshot",
    "EventSource": "lightsail",
    "EventName": "GetRelationalDatabaseSnapshot",
    "Description": "Returns information about a specific database snapshot in Amazon Lightsail"
  },
  {
    "API": "lightsail:GetRelationalDatabaseSnapshots",
    "EventSource": "lightsail",
    "EventName": "GetRelationalDatabaseSnapshots",
    "Description": "Returns information about all of your database snapshots in Amazon Lightsail"
  },
  {
    "API": "lightsail:GetRelationalDatabases",
    "EventSource": "lightsail",
    "EventName": "GetRelationalDatabases",
    "Description": "Returns information about all of your databases in Amazon Lightsail"
  },
  {
    "API": "lightsail:GetSetupHistory",
    "EventSource": "lightsail",
    "EventName": "GetSetupHistory",
    "Description": "Returns detailed information for five of the most recent ``SetupInstanceHttps`` requests that were ran on the target instance"
  },
  {
    "API": "lightsail:GetStaticIp",
    "EventSource": "lightsail",
    "EventName": "GetStaticIp",
    "Description": "Returns information about an Amazon Lightsail static IP"
  },
  {
    "API": "lightsail:GetStaticIps",
    "EventSource": "lightsail",
    "EventName": "GetStaticIps",
    "Description": "Returns information about all static IPs in the user's account"
  },
  {
    "API": "lightsail:ImportKeyPair",
    "EventSource": "lightsail",
    "EventName": "ImportKeyPair",
    "Description": "Imports a public SSH key from a specific key pair"
  },
  {
    "API": "lightsail:IsVpcPeered",
    "EventSource": "lightsail",
    "EventName": "IsVpcPeered",
    "Description": "Returns a Boolean value indicating whether your Lightsail VPC is peered"
  },
  {
    "API": "lightsail:OpenInstancePublicPorts",
    "EventSource": "lightsail",
    "EventName": "OpenInstancePublicPorts",
    "Description": "Opens ports for a specific Amazon Lightsail instance, and specifies the IP addresses allowed to connect to the instance through the ports, and the protocol"
  },
  {
    "API": "lightsail:PeerVpc",
    "EventSource": "lightsail",
    "EventName": "PeerVpc",
    "Description": "Peers the Lightsail VPC with the user's default VPC"
  },
  {
    "API": "lightsail:PutAlarm",
    "EventSource": "lightsail",
    "EventName": "PutAlarm",
    "Description": "Creates or updates an alarm, and associates it with the specified metric"
  },
  {
    "API": "lightsail:PutInstancePublicPorts",
    "EventSource": "lightsail",
    "EventName": "PutInstancePublicPorts",
    "Description": "Opens ports for a specific Amazon Lightsail instance, and specifies the IP addresses allowed to connect to the instance through the ports, and the protocol"
  },
  {
    "API": "lightsail:RebootInstance",
    "EventSource": "lightsail",
    "EventName": "RebootInstance",
    "Description": "Restarts a specific instance"
  },
  {
    "API": "lightsail:RebootRelationalDatabase",
    "EventSource": "lightsail",
    "EventName": "RebootRelationalDatabase",
    "Description": "Restarts a specific database in Amazon Lightsail"
  },
  {
    "API": "lightsail:RegisterContainerImage",
    "EventSource": "lightsail",
    "EventName": "RegisterContainerImage",
    "Description": "Registers a container image to your Amazon Lightsail container service"
  },
  {
    "API": "lightsail:ReleaseStaticIp",
    "EventSource": "lightsail",
    "EventName": "ReleaseStaticIp",
    "Description": "Deletes a specific static IP from your account"
  },
  {
    "API": "lightsail:ResetDistributionCache",
    "EventSource": "lightsail",
    "EventName": "ResetDistributionCache",
    "Description": "Deletes currently cached content from your Amazon Lightsail content delivery network (CDN) distribution"
  },
  {
    "API": "lightsail:SendContactMethodVerification",
    "EventSource": "lightsail",
    "EventName": "SendContactMethodVerification",
    "Description": "Sends a verification request to an email contact method to ensure it's owned by the requester"
  },
  {
    "API": "lightsail:SetIpAddressType",
    "EventSource": "lightsail",
    "EventName": "SetIpAddressType",
    "Description": "Sets the IP address type for an Amazon Lightsail resource"
  },
  {
    "API": "lightsail:SetResourceAccessForBucket",
    "EventSource": "lightsail",
    "EventName": "SetResourceAccessForBucket",
    "Description": "Sets the Amazon Lightsail resources that can access the specified Lightsail bucket"
  },
  {
    "API": "lightsail:SetupInstanceHttps",
    "EventSource": "lightsail",
    "EventName": "SetupInstanceHttps",
    "Description": "Creates an SSL/TLS certificate that secures traffic for your website"
  },
  {
    "API": "lightsail:StartGuiSession",
    "EventSource": "lightsail",
    "EventName": "StartGuiSession",
    "Description": "Initiates a graphical user interface (GUI) session that’s used to access a virtual computer’s operating system and application"
  },
  {
    "API": "lightsail:StartInstance",
    "EventSource": "lightsail",
    "EventName": "StartInstance",
    "Description": "Starts a specific Amazon Lightsail instance from a stopped state"
  },
  {
    "API": "lightsail:StartRelationalDatabase",
    "EventSource": "lightsail",
    "EventName": "StartRelationalDatabase",
    "Description": "Starts a specific database from a stopped state in Amazon Lightsail"
  },
  {
    "API": "lightsail:StopGuiSession",
    "EventSource": "lightsail",
    "EventName": "StopGuiSession",
    "Description": "Terminates a web-based NICE DCV session that’s used to access a virtual computer’s operating system or application"
  },
  {
    "API": "lightsail:StopInstance",
    "EventSource": "lightsail",
    "EventName": "StopInstance",
    "Description": "Stops a specific Amazon Lightsail instance that is currently running"
  },
  {
    "API": "lightsail:StopRelationalDatabase",
    "EventSource": "lightsail",
    "EventName": "StopRelationalDatabase",
    "Description": "Stops a specific database that is currently running in Amazon Lightsail"
  },
  {
    "API": "lightsail:TagResource",
    "EventSource": "lightsail",
    "EventName": "TagResource",
    "Description": "Adds one or more tags to the specified Amazon Lightsail resource"
  },
  {
    "API": "lightsail:TestAlarm",
    "EventSource": "lightsail",
    "EventName": "TestAlarm",
    "Description": "Tests an alarm by displaying a banner on the Amazon Lightsail console"
  },
  {
    "API": "lightsail:UnpeerVpc",
    "EventSource": "lightsail",
    "EventName": "UnpeerVpc",
    "Description": "Unpeers the Lightsail VPC from the user's default VPC"
  },
  {
    "API": "lightsail:UntagResource",
    "EventSource": "lightsail",
    "EventName": "UntagResource",
    "Description": "Deletes the specified set of tag keys and their values from the specified Amazon Lightsail resource"
  },
  {
    "API": "lightsail:UpdateBucket",
    "EventSource": "lightsail",
    "EventName": "UpdateBucket",
    "Description": "Updates an existing Amazon Lightsail bucket"
  },
  {
    "API": "lightsail:UpdateBucketBundle",
    "EventSource": "lightsail",
    "EventName": "UpdateBucketBundle",
    "Description": "Updates the bundle, or storage plan, of an existing Amazon Lightsail bucket"
  },
  {
    "API": "lightsail:UpdateContainerService",
    "EventSource": "lightsail",
    "EventName": "UpdateContainerService",
    "Description": "Updates the configuration of your Amazon Lightsail container service, such as its power, scale, and public domain names"
  },
  {
    "API": "lightsail:UpdateDistribution",
    "EventSource": "lightsail",
    "EventName": "UpdateDistribution",
    "Description": "Updates an existing Amazon Lightsail content delivery network (CDN) distribution"
  },
  {
    "API": "lightsail:UpdateDistributionBundle",
    "EventSource": "lightsail",
    "EventName": "UpdateDistributionBundle",
    "Description": "Updates the bundle of your Amazon Lightsail content delivery network (CDN) distribution"
  },
  {
    "API": "lightsail:UpdateDomainEntry",
    "EventSource": "lightsail",
    "EventName": "UpdateDomainEntry",
    "Description": "Updates a domain recordset after it is created"
  },
  {
    "API": "lightsail:UpdateInstanceMetadataOptions",
    "EventSource": "lightsail",
    "EventName": "UpdateInstanceMetadataOptions",
    "Description": "Modifies the Amazon Lightsail instance metadata parameters on a running or stopped instance"
  },
  {
    "API": "lightsail:UpdateLoadBalancerAttribute",
    "EventSource": "lightsail",
    "EventName": "UpdateLoadBalancerAttribute",
    "Description": "Updates the specified attribute for a load balancer"
  },
  {
    "API": "lightsail:UpdateRelationalDatabase",
    "EventSource": "lightsail",
    "EventName": "UpdateRelationalDatabase",
    "Description": "Allows the update of one or more attributes of a database in Amazon Lightsail"
  },
  {
    "API": "lightsail:UpdateRelationalDatabaseParameters",
    "EventSource": "lightsail",
    "EventName": "UpdateRelationalDatabaseParameters",
    "Description": "Allows the update of one or more parameters of a database in Amazon Lightsail"
  },
  {
    "API": "location:AssociateTrackerConsumer",
    "EventSource": "location",
    "EventName": "AssociateTrackerConsumer",
    "Description": "Creates an association between a geofence collection and a tracker resource"
  },
  {
    "API": "location:BatchDeleteDevicePositionHistory",
    "EventSource": "location",
    "EventName": "BatchDeleteDevicePositionHistory",
    "Description": "Deletes the position history of one or more devices from a tracker resource"
  },
  {
    "API": "location:BatchDeleteGeofence",
    "EventSource": "location",
    "EventName": "BatchDeleteGeofence",
    "Description": "Deletes a batch of geofences from a geofence collection"
  },
  {
    "API": "location:BatchEvaluateGeofences",
    "EventSource": "location",
    "EventName": "BatchEvaluateGeofences",
    "Description": "Evaluates device positions against the geofence geometries from a given geofence collection"
  },
  {
    "API": "location:BatchGetDevicePosition",
    "EventSource": "location",
    "EventName": "BatchGetDevicePosition",
    "Description": "Lists the latest device positions for requested devices"
  },
  {
    "API": "location:BatchPutGeofence",
    "EventSource": "location",
    "EventName": "BatchPutGeofence",
    "Description": "A batch request for storing geofence geometries into a given geofence collection, or updates the geometry of an existing geofence if a geofence ID is included in the request"
  },
  {
    "API": "location:BatchUpdateDevicePosition",
    "EventSource": "location",
    "EventName": "BatchUpdateDevicePosition",
    "Description": "Uploads position update data for one or more devices to a tracker resource (up to 10 devices per batch)"
  },
  {
    "API": "location:CalculateRoute",
    "EventSource": "location",
    "EventName": "CalculateRoute",
    "Description": "`Calculates a route <https://docs"
  },
  {
    "API": "location:CalculateRouteMatrix",
    "EventSource": "location",
    "EventName": "CalculateRouteMatrix",
    "Description": "`Calculates a route matrix <https://docs"
  },
  {
    "API": "location:CreateGeofenceCollection",
    "EventSource": "location",
    "EventName": "CreateGeofenceCollection",
    "Description": "Creates a geofence collection, which manages and stores geofences"
  },
  {
    "API": "location:CreateKey",
    "EventSource": "location",
    "EventName": "CreateKey",
    "Description": "Creates an API key resource in your Amazon Web Services account, which lets you grant actions for Amazon Location resources to the API key bearer"
  },
  {
    "API": "location:CreateMap",
    "EventSource": "location",
    "EventName": "CreateMap",
    "Description": "Creates a map resource in your Amazon Web Services account, which provides map tiles of different styles sourced from global location data providers"
  },
  {
    "API": "location:CreatePlaceIndex",
    "EventSource": "location",
    "EventName": "CreatePlaceIndex",
    "Description": "Creates a place index resource in your Amazon Web Services account"
  },
  {
    "API": "location:CreateRouteCalculator",
    "EventSource": "location",
    "EventName": "CreateRouteCalculator",
    "Description": "Creates a route calculator resource in your Amazon Web Services account"
  },
  {
    "API": "location:CreateTracker",
    "EventSource": "location",
    "EventName": "CreateTracker",
    "Description": "Creates a tracker resource in your Amazon Web Services account, which lets you retrieve current and historical location of devices"
  },
  {
    "API": "location:DeleteGeofenceCollection",
    "EventSource": "location",
    "EventName": "DeleteGeofenceCollection",
    "Description": "Deletes a geofence collection from your Amazon Web Services account"
  },
  {
    "API": "location:DeleteKey",
    "EventSource": "location",
    "EventName": "DeleteKey",
    "Description": "Deletes the specified API key"
  },
  {
    "API": "location:DeleteMap",
    "EventSource": "location",
    "EventName": "DeleteMap",
    "Description": "Deletes a map resource from your Amazon Web Services account"
  },
  {
    "API": "location:DeletePlaceIndex",
    "EventSource": "location",
    "EventName": "DeletePlaceIndex",
    "Description": "Deletes a place index resource from your Amazon Web Services account"
  },
  {
    "API": "location:DeleteRouteCalculator",
    "EventSource": "location",
    "EventName": "DeleteRouteCalculator",
    "Description": "Deletes a route calculator resource from your Amazon Web Services account"
  },
  {
    "API": "location:DeleteTracker",
    "EventSource": "location",
    "EventName": "DeleteTracker",
    "Description": "Deletes a tracker resource from your Amazon Web Services account"
  },
  {
    "API": "location:DescribeGeofenceCollection",
    "EventSource": "location",
    "EventName": "DescribeGeofenceCollection",
    "Description": "Retrieves the geofence collection details"
  },
  {
    "API": "location:DescribeKey",
    "EventSource": "location",
    "EventName": "DescribeKey",
    "Description": "Retrieves the API key resource details"
  },
  {
    "API": "location:DescribeMap",
    "EventSource": "location",
    "EventName": "DescribeMap",
    "Description": "Retrieves the map resource details"
  },
  {
    "API": "location:DescribePlaceIndex",
    "EventSource": "location",
    "EventName": "DescribePlaceIndex",
    "Description": "Retrieves the place index resource details"
  },
  {
    "API": "location:DescribeRouteCalculator",
    "EventSource": "location",
    "EventName": "DescribeRouteCalculator",
    "Description": "Retrieves the route calculator resource details"
  },
  {
    "API": "location:DescribeTracker",
    "EventSource": "location",
    "EventName": "DescribeTracker",
    "Description": "Retrieves the tracker resource details"
  },
  {
    "API": "location:DisassociateTrackerConsumer",
    "EventSource": "location",
    "EventName": "DisassociateTrackerConsumer",
    "Description": "Removes the association between a tracker resource and a geofence collection"
  },
  {
    "API": "location:ForecastGeofenceEvents",
    "EventSource": "location",
    "EventName": "ForecastGeofenceEvents",
    "Description": "Evaluates device positions against geofence geometries from a given geofence collection"
  },
  {
    "API": "location:GeneratePresignedUrl",
    "EventSource": "location",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "location:GetDevicePosition",
    "EventSource": "location",
    "EventName": "GetDevicePosition",
    "Description": "Retrieves a device's most recent position according to its sample time"
  },
  {
    "API": "location:GetDevicePositionHistory",
    "EventSource": "location",
    "EventName": "GetDevicePositionHistory",
    "Description": "Retrieves the device position history from a tracker resource within a specified range of time"
  },
  {
    "API": "location:GetGeofence",
    "EventSource": "location",
    "EventName": "GetGeofence",
    "Description": "Retrieves the geofence details from a geofence collection"
  },
  {
    "API": "location:GetMapGlyphs",
    "EventSource": "location",
    "EventName": "GetMapGlyphs",
    "Description": "Retrieves glyphs used to display labels on a map"
  },
  {
    "API": "location:GetMapSprites",
    "EventSource": "location",
    "EventName": "GetMapSprites",
    "Description": "Retrieves the sprite sheet corresponding to a map resource"
  },
  {
    "API": "location:GetMapStyleDescriptor",
    "EventSource": "location",
    "EventName": "GetMapStyleDescriptor",
    "Description": "Retrieves the map style descriptor from a map resource"
  },
  {
    "API": "location:GetMapTile",
    "EventSource": "location",
    "EventName": "GetMapTile",
    "Description": "Retrieves a vector data tile from the map resource"
  },
  {
    "API": "location:GetPlace",
    "EventSource": "location",
    "EventName": "GetPlace",
    "Description": "Finds a place by its unique ID"
  },
  {
    "API": "location:ListDevicePositions",
    "EventSource": "location",
    "EventName": "ListDevicePositions",
    "Description": "A batch request to retrieve all device positions"
  },
  {
    "API": "location:ListGeofenceCollections",
    "EventSource": "location",
    "EventName": "ListGeofenceCollections",
    "Description": "Lists geofence collections in your Amazon Web Services account"
  },
  {
    "API": "location:ListGeofences",
    "EventSource": "location",
    "EventName": "ListGeofences",
    "Description": "Lists geofences stored in a given geofence collection"
  },
  {
    "API": "location:ListKeys",
    "EventSource": "location",
    "EventName": "ListKeys",
    "Description": "Lists API key resources in your Amazon Web Services account"
  },
  {
    "API": "location:ListMaps",
    "EventSource": "location",
    "EventName": "ListMaps",
    "Description": "Lists map resources in your Amazon Web Services account"
  },
  {
    "API": "location:ListPlaceIndexes",
    "EventSource": "location",
    "EventName": "ListPlaceIndexes",
    "Description": "Lists place index resources in your Amazon Web Services account"
  },
  {
    "API": "location:ListRouteCalculators",
    "EventSource": "location",
    "EventName": "ListRouteCalculators",
    "Description": "Lists route calculator resources in your Amazon Web Services account"
  },
  {
    "API": "location:ListTagsForResource",
    "EventSource": "location",
    "EventName": "ListTagsForResource",
    "Description": "Returns a list of tags that are applied to the specified Amazon Location resource"
  },
  {
    "API": "location:ListTrackerConsumers",
    "EventSource": "location",
    "EventName": "ListTrackerConsumers",
    "Description": "Lists geofence collections currently associated to the given tracker resource"
  },
  {
    "API": "location:ListTrackers",
    "EventSource": "location",
    "EventName": "ListTrackers",
    "Description": "Lists tracker resources in your Amazon Web Services account"
  },
  {
    "API": "location:PutGeofence",
    "EventSource": "location",
    "EventName": "PutGeofence",
    "Description": "Stores a geofence geometry in a given geofence collection, or updates the geometry of an existing geofence if a geofence ID is included in the request"
  },
  {
    "API": "location:SearchPlaceIndexForPosition",
    "EventSource": "location",
    "EventName": "SearchPlaceIndexForPosition",
    "Description": "Reverse geocodes a given coordinate and returns a legible address"
  },
  {
    "API": "location:SearchPlaceIndexForSuggestions",
    "EventSource": "location",
    "EventName": "SearchPlaceIndexForSuggestions",
    "Description": "Generates suggestions for addresses and points of interest based on partial or misspelled free-form text"
  },
  {
    "API": "location:SearchPlaceIndexForText",
    "EventSource": "location",
    "EventName": "SearchPlaceIndexForText",
    "Description": "Geocodes free-form text, such as an address, name, city, or region to allow you to search for Places or points of interest"
  },
  {
    "API": "location:TagResource",
    "EventSource": "location",
    "EventName": "TagResource",
    "Description": "Assigns one or more tags (key-value pairs) to the specified Amazon Location Service resource"
  },
  {
    "API": "location:UntagResource",
    "EventSource": "location",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags from the specified Amazon Location resource"
  },
  {
    "API": "location:UpdateGeofenceCollection",
    "EventSource": "location",
    "EventName": "UpdateGeofenceCollection",
    "Description": "Updates the specified properties of a given geofence collection"
  },
  {
    "API": "location:UpdateKey",
    "EventSource": "location",
    "EventName": "UpdateKey",
    "Description": "Updates the specified properties of a given API key resource"
  },
  {
    "API": "location:UpdateMap",
    "EventSource": "location",
    "EventName": "UpdateMap",
    "Description": "Updates the specified properties of a given map resource"
  },
  {
    "API": "location:UpdatePlaceIndex",
    "EventSource": "location",
    "EventName": "UpdatePlaceIndex",
    "Description": "Updates the specified properties of a given place index resource"
  },
  {
    "API": "location:UpdateRouteCalculator",
    "EventSource": "location",
    "EventName": "UpdateRouteCalculator",
    "Description": "Updates the specified properties for a given route calculator resource"
  },
  {
    "API": "location:UpdateTracker",
    "EventSource": "location",
    "EventName": "UpdateTracker",
    "Description": "Updates the specified properties of a given tracker resource"
  },
  {
    "API": "location:VerifyDevicePosition",
    "EventSource": "location",
    "EventName": "VerifyDevicePosition",
    "Description": "Verifies the integrity of the device's position by determining if it was reported behind a proxy, and by comparing it to an inferred position estimated based on the device's state"
  },
  {
    "API": "logs:AssociateKmsKey",
    "EventSource": "logs",
    "EventName": "AssociateKmsKey",
    "Description": "Associates the specified KMS key with either one log group in the account, or with all stored CloudWatch Logs query insights results in the account"
  },
  {
    "API": "logs:CancelExportTask",
    "EventSource": "logs",
    "EventName": "CancelExportTask",
    "Description": "Cancels the specified export task"
  },
  {
    "API": "logs:CreateDelivery",
    "EventSource": "logs",
    "EventName": "CreateDelivery",
    "Description": "Creates a *delivery*"
  },
  {
    "API": "logs:CreateExportTask",
    "EventSource": "logs",
    "EventName": "CreateExportTask",
    "Description": "Creates an export task so that you can efficiently export data from a log group to an Amazon S3 bucket"
  },
  {
    "API": "logs:CreateLogAnomalyDetector",
    "EventSource": "logs",
    "EventName": "CreateLogAnomalyDetector",
    "Description": "Creates an *anomaly detector* that regularly scans one or more log groups and look for patterns and anomalies in the logs"
  },
  {
    "API": "logs:CreateLogGroup",
    "EventSource": "logs",
    "EventName": "CreateLogGroup",
    "Description": "Creates a log group with the specified name"
  },
  {
    "API": "logs:CreateLogStream",
    "EventSource": "logs",
    "EventName": "CreateLogStream",
    "Description": "Creates a log stream for the specified log group"
  },
  {
    "API": "logs:DeleteAccountPolicy",
    "EventSource": "logs",
    "EventName": "DeleteAccountPolicy",
    "Description": "Deletes a CloudWatch Logs account policy"
  },
  {
    "API": "logs:DeleteDataProtectionPolicy",
    "EventSource": "logs",
    "EventName": "DeleteDataProtectionPolicy",
    "Description": "Deletes the data protection policy from the specified log group"
  },
  {
    "API": "logs:DeleteDelivery",
    "EventSource": "logs",
    "EventName": "DeleteDelivery",
    "Description": "Deletes s *delivery*"
  },
  {
    "API": "logs:DeleteDeliveryDestination",
    "EventSource": "logs",
    "EventName": "DeleteDeliveryDestination",
    "Description": "Deletes a *delivery destination*"
  },
  {
    "API": "logs:DeleteDeliveryDestinationPolicy",
    "EventSource": "logs",
    "EventName": "DeleteDeliveryDestinationPolicy",
    "Description": "Deletes a delivery destination policy"
  },
  {
    "API": "logs:DeleteDeliverySource",
    "EventSource": "logs",
    "EventName": "DeleteDeliverySource",
    "Description": "Deletes a *delivery source*"
  },
  {
    "API": "logs:DeleteDestination",
    "EventSource": "logs",
    "EventName": "DeleteDestination",
    "Description": "Deletes the specified destination, and eventually disables all the subscription filters that publish to it"
  },
  {
    "API": "logs:DeleteLogAnomalyDetector",
    "EventSource": "logs",
    "EventName": "DeleteLogAnomalyDetector",
    "Description": "Deletes the specified CloudWatch Logs anomaly detector"
  },
  {
    "API": "logs:DeleteLogGroup",
    "EventSource": "logs",
    "EventName": "DeleteLogGroup",
    "Description": "Deletes the specified log group and permanently deletes all the archived log events associated with the log group"
  },
  {
    "API": "logs:DeleteLogStream",
    "EventSource": "logs",
    "EventName": "DeleteLogStream",
    "Description": "Deletes the specified log stream and permanently deletes all the archived log events associated with the log stream"
  },
  {
    "API": "logs:DeleteMetricFilter",
    "EventSource": "logs",
    "EventName": "DeleteMetricFilter",
    "Description": "Deletes the specified metric filter"
  },
  {
    "API": "logs:DeleteQueryDefinition",
    "EventSource": "logs",
    "EventName": "DeleteQueryDefinition",
    "Description": "Deletes a saved CloudWatch Logs Insights query definition"
  },
  {
    "API": "logs:DeleteResourcePolicy",
    "EventSource": "logs",
    "EventName": "DeleteResourcePolicy",
    "Description": "Deletes a resource policy from this account"
  },
  {
    "API": "logs:DeleteRetentionPolicy",
    "EventSource": "logs",
    "EventName": "DeleteRetentionPolicy",
    "Description": "Deletes the specified retention policy"
  },
  {
    "API": "logs:DeleteSubscriptionFilter",
    "EventSource": "logs",
    "EventName": "DeleteSubscriptionFilter",
    "Description": "Deletes the specified subscription filter"
  },
  {
    "API": "logs:DescribeAccountPolicies",
    "EventSource": "logs",
    "EventName": "DescribeAccountPolicies",
    "Description": "Returns a list of all CloudWatch Logs account policies in the account"
  },
  {
    "API": "logs:DescribeDeliveries",
    "EventSource": "logs",
    "EventName": "DescribeDeliveries",
    "Description": "Retrieves a list of the deliveries that have been created in the account"
  },
  {
    "API": "logs:DescribeDeliveryDestinations",
    "EventSource": "logs",
    "EventName": "DescribeDeliveryDestinations",
    "Description": "Retrieves a list of the delivery destinations that have been created in the account"
  },
  {
    "API": "logs:DescribeDeliverySources",
    "EventSource": "logs",
    "EventName": "DescribeDeliverySources",
    "Description": "Retrieves a list of the delivery sources that have been created in the account"
  },
  {
    "API": "logs:DescribeDestinations",
    "EventSource": "logs",
    "EventName": "DescribeDestinations",
    "Description": "Lists all your destinations"
  },
  {
    "API": "logs:DescribeExportTasks",
    "EventSource": "logs",
    "EventName": "DescribeExportTasks",
    "Description": "Lists the specified export tasks"
  },
  {
    "API": "logs:DescribeLogGroups",
    "EventSource": "logs",
    "EventName": "DescribeLogGroups",
    "Description": "Lists the specified log groups"
  },
  {
    "API": "logs:DescribeLogStreams",
    "EventSource": "logs",
    "EventName": "DescribeLogStreams",
    "Description": "Lists the log streams for the specified log group"
  },
  {
    "API": "logs:DescribeMetricFilters",
    "EventSource": "logs",
    "EventName": "DescribeMetricFilters",
    "Description": "Lists the specified metric filters"
  },
  {
    "API": "logs:DescribeQueries",
    "EventSource": "logs",
    "EventName": "DescribeQueries",
    "Description": "Returns a list of CloudWatch Logs Insights queries that are scheduled, running, or have been run recently in this account"
  },
  {
    "API": "logs:DescribeQueryDefinitions",
    "EventSource": "logs",
    "EventName": "DescribeQueryDefinitions",
    "Description": "This operation returns a paginated list of your saved CloudWatch Logs Insights query definitions"
  },
  {
    "API": "logs:DescribeResourcePolicies",
    "EventSource": "logs",
    "EventName": "DescribeResourcePolicies",
    "Description": "Lists the resource policies in this account"
  },
  {
    "API": "logs:DescribeSubscriptionFilters",
    "EventSource": "logs",
    "EventName": "DescribeSubscriptionFilters",
    "Description": "Lists the subscription filters for the specified log group"
  },
  {
    "API": "logs:DisassociateKmsKey",
    "EventSource": "logs",
    "EventName": "DisassociateKmsKey",
    "Description": "Disassociates the specified KMS key from the specified log group or from all CloudWatch Logs Insights query results in the account"
  },
  {
    "API": "logs:FilterLogEvents",
    "EventSource": "logs",
    "EventName": "FilterLogEvents",
    "Description": "Lists log events from the specified log group"
  },
  {
    "API": "logs:GeneratePresignedUrl",
    "EventSource": "logs",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "logs:GetDataProtectionPolicy",
    "EventSource": "logs",
    "EventName": "GetDataProtectionPolicy",
    "Description": "Returns information about a log group data protection policy"
  },
  {
    "API": "logs:GetDelivery",
    "EventSource": "logs",
    "EventName": "GetDelivery",
    "Description": "Returns complete information about one logical *delivery*"
  },
  {
    "API": "logs:GetDeliveryDestination",
    "EventSource": "logs",
    "EventName": "GetDeliveryDestination",
    "Description": "Retrieves complete information about one delivery destination"
  },
  {
    "API": "logs:GetDeliveryDestinationPolicy",
    "EventSource": "logs",
    "EventName": "GetDeliveryDestinationPolicy",
    "Description": "Retrieves the delivery destination policy assigned to the delivery destination that you specify"
  },
  {
    "API": "logs:GetDeliverySource",
    "EventSource": "logs",
    "EventName": "GetDeliverySource",
    "Description": "Retrieves complete information about one delivery source"
  },
  {
    "API": "logs:GetLogAnomalyDetector",
    "EventSource": "logs",
    "EventName": "GetLogAnomalyDetector",
    "Description": "Retrieves information about the log anomaly detector that you specify"
  },
  {
    "API": "logs:GetLogEvents",
    "EventSource": "logs",
    "EventName": "GetLogEvents",
    "Description": "Lists log events from the specified log stream"
  },
  {
    "API": "logs:GetLogGroupFields",
    "EventSource": "logs",
    "EventName": "GetLogGroupFields",
    "Description": "Returns a list of the fields that are included in log events in the specified log group"
  },
  {
    "API": "logs:GetLogRecord",
    "EventSource": "logs",
    "EventName": "GetLogRecord",
    "Description": "Retrieves all of the fields and values of a single log event"
  },
  {
    "API": "logs:GetQueryResults",
    "EventSource": "logs",
    "EventName": "GetQueryResults",
    "Description": "Returns the results from the specified query"
  },
  {
    "API": "logs:ListAnomalies",
    "EventSource": "logs",
    "EventName": "ListAnomalies",
    "Description": "Returns a list of anomalies that log anomaly detectors have found"
  },
  {
    "API": "logs:ListLogAnomalyDetectors",
    "EventSource": "logs",
    "EventName": "ListLogAnomalyDetectors",
    "Description": "Retrieves a list of the log anomaly detectors in the account"
  },
  {
    "API": "logs:ListTagsForResource",
    "EventSource": "logs",
    "EventName": "ListTagsForResource",
    "Description": "Displays the tags associated with a CloudWatch Logs resource"
  },
  {
    "API": "logs:ListTagsLogGroup",
    "EventSource": "logs",
    "EventName": "ListTagsLogGroup",
    "Description": ""
  },
  {
    "API": "logs:PutAccountPolicy",
    "EventSource": "logs",
    "EventName": "PutAccountPolicy",
    "Description": "Creates an account-level data protection policy or subscription filter policy that applies to all log groups or a subset of log groups in the account"
  },
  {
    "API": "logs:PutDataProtectionPolicy",
    "EventSource": "logs",
    "EventName": "PutDataProtectionPolicy",
    "Description": "Creates a data protection policy for the specified log group"
  },
  {
    "API": "logs:PutDeliveryDestination",
    "EventSource": "logs",
    "EventName": "PutDeliveryDestination",
    "Description": "Creates or updates a logical *delivery destination*"
  },
  {
    "API": "logs:PutDeliveryDestinationPolicy",
    "EventSource": "logs",
    "EventName": "PutDeliveryDestinationPolicy",
    "Description": "Creates and assigns an IAM policy that grants permissions to CloudWatch Logs to deliver logs cross-account to a specified destination in this account"
  },
  {
    "API": "logs:PutDeliverySource",
    "EventSource": "logs",
    "EventName": "PutDeliverySource",
    "Description": "Creates or updates a logical *delivery source*"
  },
  {
    "API": "logs:PutDestination",
    "EventSource": "logs",
    "EventName": "PutDestination",
    "Description": "Creates or updates a destination"
  },
  {
    "API": "logs:PutDestinationPolicy",
    "EventSource": "logs",
    "EventName": "PutDestinationPolicy",
    "Description": "Creates or updates an access policy associated with an existing destination"
  },
  {
    "API": "logs:PutLogEvents",
    "EventSource": "logs",
    "EventName": "PutLogEvents",
    "Description": "Uploads a batch of log events to the specified log stream"
  },
  {
    "API": "logs:PutMetricFilter",
    "EventSource": "logs",
    "EventName": "PutMetricFilter",
    "Description": "Creates or updates a metric filter and associates it with the specified log group"
  },
  {
    "API": "logs:PutQueryDefinition",
    "EventSource": "logs",
    "EventName": "PutQueryDefinition",
    "Description": "Creates or updates a query definition for CloudWatch Logs Insights"
  },
  {
    "API": "logs:PutResourcePolicy",
    "EventSource": "logs",
    "EventName": "PutResourcePolicy",
    "Description": "Creates or updates a resource policy allowing other Amazon Web Services services to put log events to this account, such as Amazon Route 53"
  },
  {
    "API": "logs:PutRetentionPolicy",
    "EventSource": "logs",
    "EventName": "PutRetentionPolicy",
    "Description": "Sets the retention of the specified log group"
  },
  {
    "API": "logs:PutSubscriptionFilter",
    "EventSource": "logs",
    "EventName": "PutSubscriptionFilter",
    "Description": "Creates or updates a subscription filter and associates it with the specified log group"
  },
  {
    "API": "logs:StartLiveTail",
    "EventSource": "logs",
    "EventName": "StartLiveTail",
    "Description": "Starts a Live Tail streaming session for one or more log groups"
  },
  {
    "API": "logs:StartQuery",
    "EventSource": "logs",
    "EventName": "StartQuery",
    "Description": "Schedules a query of a log group using CloudWatch Logs Insights"
  },
  {
    "API": "logs:StopQuery",
    "EventSource": "logs",
    "EventName": "StopQuery",
    "Description": "Stops a CloudWatch Logs Insights query that is in progress"
  },
  {
    "API": "logs:TagLogGroup",
    "EventSource": "logs",
    "EventName": "TagLogGroup",
    "Description": ""
  },
  {
    "API": "logs:TagResource",
    "EventSource": "logs",
    "EventName": "TagResource",
    "Description": "Assigns one or more tags (key-value pairs) to the specified CloudWatch Logs resource"
  },
  {
    "API": "logs:TestMetricFilter",
    "EventSource": "logs",
    "EventName": "TestMetricFilter",
    "Description": "Tests the filter pattern of a metric filter against a sample of log event messages"
  },
  {
    "API": "logs:UntagLogGroup",
    "EventSource": "logs",
    "EventName": "UntagLogGroup",
    "Description": ""
  },
  {
    "API": "logs:UntagResource",
    "EventSource": "logs",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags from the specified resource"
  },
  {
    "API": "logs:UpdateAnomaly",
    "EventSource": "logs",
    "EventName": "UpdateAnomaly",
    "Description": "Use this operation to *suppress* anomaly detection for a specified anomaly or pattern"
  },
  {
    "API": "logs:UpdateLogAnomalyDetector",
    "EventSource": "logs",
    "EventName": "UpdateLogAnomalyDetector",
    "Description": "Updates an existing log anomaly detector"
  },
  {
    "API": "lookoutequipment:CreateDataset",
    "EventSource": "lookoutequipment",
    "EventName": "CreateDataset",
    "Description": "Creates a container for a collection of data being ingested for analysis"
  },
  {
    "API": "lookoutequipment:CreateInferenceScheduler",
    "EventSource": "lookoutequipment",
    "EventName": "CreateInferenceScheduler",
    "Description": "Creates a scheduled inference"
  },
  {
    "API": "lookoutequipment:CreateLabel",
    "EventSource": "lookoutequipment",
    "EventName": "CreateLabel",
    "Description": "Creates a label for an event"
  },
  {
    "API": "lookoutequipment:CreateLabelGroup",
    "EventSource": "lookoutequipment",
    "EventName": "CreateLabelGroup",
    "Description": "Creates a group of labels"
  },
  {
    "API": "lookoutequipment:CreateModel",
    "EventSource": "lookoutequipment",
    "EventName": "CreateModel",
    "Description": "Creates a machine learning model for data inference"
  },
  {
    "API": "lookoutequipment:CreateRetrainingScheduler",
    "EventSource": "lookoutequipment",
    "EventName": "CreateRetrainingScheduler",
    "Description": "Creates a retraining scheduler on the specified model"
  },
  {
    "API": "lookoutequipment:DeleteDataset",
    "EventSource": "lookoutequipment",
    "EventName": "DeleteDataset",
    "Description": "Deletes a dataset and associated artifacts"
  },
  {
    "API": "lookoutequipment:DeleteInferenceScheduler",
    "EventSource": "lookoutequipment",
    "EventName": "DeleteInferenceScheduler",
    "Description": "Deletes an inference scheduler that has been set up"
  },
  {
    "API": "lookoutequipment:DeleteLabel",
    "EventSource": "lookoutequipment",
    "EventName": "DeleteLabel",
    "Description": "Deletes a label"
  },
  {
    "API": "lookoutequipment:DeleteLabelGroup",
    "EventSource": "lookoutequipment",
    "EventName": "DeleteLabelGroup",
    "Description": "Deletes a group of labels"
  },
  {
    "API": "lookoutequipment:DeleteModel",
    "EventSource": "lookoutequipment",
    "EventName": "DeleteModel",
    "Description": "Deletes a machine learning model currently available for Amazon Lookout for Equipment"
  },
  {
    "API": "lookoutequipment:DeleteResourcePolicy",
    "EventSource": "lookoutequipment",
    "EventName": "DeleteResourcePolicy",
    "Description": "Deletes the resource policy attached to the resource"
  },
  {
    "API": "lookoutequipment:DeleteRetrainingScheduler",
    "EventSource": "lookoutequipment",
    "EventName": "DeleteRetrainingScheduler",
    "Description": "Deletes a retraining scheduler from a model"
  },
  {
    "API": "lookoutequipment:DescribeDataIngestionJob",
    "EventSource": "lookoutequipment",
    "EventName": "DescribeDataIngestionJob",
    "Description": "Provides information on a specific data ingestion job such as creation time, dataset ARN, and status"
  },
  {
    "API": "lookoutequipment:DescribeDataset",
    "EventSource": "lookoutequipment",
    "EventName": "DescribeDataset",
    "Description": "Provides a JSON description of the data in each time series dataset, including names, column names, and data types"
  },
  {
    "API": "lookoutequipment:DescribeInferenceScheduler",
    "EventSource": "lookoutequipment",
    "EventName": "DescribeInferenceScheduler",
    "Description": "Specifies information about the inference scheduler being used, including name, model, status, and associated metadata"
  },
  {
    "API": "lookoutequipment:DescribeLabel",
    "EventSource": "lookoutequipment",
    "EventName": "DescribeLabel",
    "Description": "Returns the name of the label"
  },
  {
    "API": "lookoutequipment:DescribeLabelGroup",
    "EventSource": "lookoutequipment",
    "EventName": "DescribeLabelGroup",
    "Description": "Returns information about the label group"
  },
  {
    "API": "lookoutequipment:DescribeModel",
    "EventSource": "lookoutequipment",
    "EventName": "DescribeModel",
    "Description": "Provides a JSON containing the overall information about a specific machine learning model, including model name and ARN, dataset, training and evaluation information, status, and so on"
  },
  {
    "API": "lookoutequipment:DescribeModelVersion",
    "EventSource": "lookoutequipment",
    "EventName": "DescribeModelVersion",
    "Description": "Retrieves information about a specific machine learning model version"
  },
  {
    "API": "lookoutequipment:DescribeResourcePolicy",
    "EventSource": "lookoutequipment",
    "EventName": "DescribeResourcePolicy",
    "Description": "Provides the details of a resource policy attached to a resource"
  },
  {
    "API": "lookoutequipment:DescribeRetrainingScheduler",
    "EventSource": "lookoutequipment",
    "EventName": "DescribeRetrainingScheduler",
    "Description": "Provides a description of the retraining scheduler, including information such as the model name and retraining parameters"
  },
  {
    "API": "lookoutequipment:GeneratePresignedUrl",
    "EventSource": "lookoutequipment",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "lookoutequipment:ImportDataset",
    "EventSource": "lookoutequipment",
    "EventName": "ImportDataset",
    "Description": "Imports a dataset"
  },
  {
    "API": "lookoutequipment:ImportModelVersion",
    "EventSource": "lookoutequipment",
    "EventName": "ImportModelVersion",
    "Description": "Imports a model that has been trained successfully"
  },
  {
    "API": "lookoutequipment:ListDataIngestionJobs",
    "EventSource": "lookoutequipment",
    "EventName": "ListDataIngestionJobs",
    "Description": "Provides a list of all data ingestion jobs, including dataset name and ARN, S3 location of the input data, status, and so on"
  },
  {
    "API": "lookoutequipment:ListDatasets",
    "EventSource": "lookoutequipment",
    "EventName": "ListDatasets",
    "Description": "Lists all datasets currently available in your account, filtering on the dataset name"
  },
  {
    "API": "lookoutequipment:ListInferenceEvents",
    "EventSource": "lookoutequipment",
    "EventName": "ListInferenceEvents",
    "Description": "Lists all inference events that have been found for the specified inference scheduler"
  },
  {
    "API": "lookoutequipment:ListInferenceExecutions",
    "EventSource": "lookoutequipment",
    "EventName": "ListInferenceExecutions",
    "Description": "Lists all inference executions that have been performed by the specified inference scheduler"
  },
  {
    "API": "lookoutequipment:ListInferenceSchedulers",
    "EventSource": "lookoutequipment",
    "EventName": "ListInferenceSchedulers",
    "Description": "Retrieves a list of all inference schedulers currently available for your account"
  },
  {
    "API": "lookoutequipment:ListLabelGroups",
    "EventSource": "lookoutequipment",
    "EventName": "ListLabelGroups",
    "Description": "Returns a list of the label groups"
  },
  {
    "API": "lookoutequipment:ListLabels",
    "EventSource": "lookoutequipment",
    "EventName": "ListLabels",
    "Description": "Provides a list of labels"
  },
  {
    "API": "lookoutequipment:ListModelVersions",
    "EventSource": "lookoutequipment",
    "EventName": "ListModelVersions",
    "Description": "Generates a list of all model versions for a given model, including the model version, model version ARN, and status"
  },
  {
    "API": "lookoutequipment:ListModels",
    "EventSource": "lookoutequipment",
    "EventName": "ListModels",
    "Description": "Generates a list of all models in the account, including model name and ARN, dataset, and status"
  },
  {
    "API": "lookoutequipment:ListRetrainingSchedulers",
    "EventSource": "lookoutequipment",
    "EventName": "ListRetrainingSchedulers",
    "Description": "Lists all retraining schedulers in your account, filtering by model name prefix and status"
  },
  {
    "API": "lookoutequipment:ListSensorStatistics",
    "EventSource": "lookoutequipment",
    "EventName": "ListSensorStatistics",
    "Description": "Lists statistics about the data collected for each of the sensors that have been successfully ingested in the particular dataset"
  },
  {
    "API": "lookoutequipment:ListTagsForResource",
    "EventSource": "lookoutequipment",
    "EventName": "ListTagsForResource",
    "Description": "Lists all the tags for a specified resource, including key and value"
  },
  {
    "API": "lookoutequipment:PutResourcePolicy",
    "EventSource": "lookoutequipment",
    "EventName": "PutResourcePolicy",
    "Description": "Creates a resource control policy for a given resource"
  },
  {
    "API": "lookoutequipment:StartDataIngestionJob",
    "EventSource": "lookoutequipment",
    "EventName": "StartDataIngestionJob",
    "Description": "Starts a data ingestion job"
  },
  {
    "API": "lookoutequipment:StartInferenceScheduler",
    "EventSource": "lookoutequipment",
    "EventName": "StartInferenceScheduler",
    "Description": "Starts an inference scheduler"
  },
  {
    "API": "lookoutequipment:StartRetrainingScheduler",
    "EventSource": "lookoutequipment",
    "EventName": "StartRetrainingScheduler",
    "Description": "Starts a retraining scheduler"
  },
  {
    "API": "lookoutequipment:StopInferenceScheduler",
    "EventSource": "lookoutequipment",
    "EventName": "StopInferenceScheduler",
    "Description": "Stops an inference scheduler"
  },
  {
    "API": "lookoutequipment:StopRetrainingScheduler",
    "EventSource": "lookoutequipment",
    "EventName": "StopRetrainingScheduler",
    "Description": "Stops a retraining scheduler"
  },
  {
    "API": "lookoutequipment:TagResource",
    "EventSource": "lookoutequipment",
    "EventName": "TagResource",
    "Description": "Associates a given tag to a resource in your account"
  },
  {
    "API": "lookoutequipment:UntagResource",
    "EventSource": "lookoutequipment",
    "EventName": "UntagResource",
    "Description": "Removes a specific tag from a given resource"
  },
  {
    "API": "lookoutequipment:UpdateActiveModelVersion",
    "EventSource": "lookoutequipment",
    "EventName": "UpdateActiveModelVersion",
    "Description": "Sets the active model version for a given machine learning model"
  },
  {
    "API": "lookoutequipment:UpdateInferenceScheduler",
    "EventSource": "lookoutequipment",
    "EventName": "UpdateInferenceScheduler",
    "Description": "Updates an inference scheduler"
  },
  {
    "API": "lookoutequipment:UpdateLabelGroup",
    "EventSource": "lookoutequipment",
    "EventName": "UpdateLabelGroup",
    "Description": "Updates the label group"
  },
  {
    "API": "lookoutequipment:UpdateModel",
    "EventSource": "lookoutequipment",
    "EventName": "UpdateModel",
    "Description": "Updates a model in the account"
  },
  {
    "API": "lookoutequipment:UpdateRetrainingScheduler",
    "EventSource": "lookoutequipment",
    "EventName": "UpdateRetrainingScheduler",
    "Description": "Updates a retraining scheduler"
  },
  {
    "API": "lookoutmetrics:ActivateAnomalyDetector",
    "EventSource": "lookoutmetrics",
    "EventName": "ActivateAnomalyDetector",
    "Description": "Activates an anomaly detector"
  },
  {
    "API": "lookoutmetrics:BackTestAnomalyDetector",
    "EventSource": "lookoutmetrics",
    "EventName": "BackTestAnomalyDetector",
    "Description": "Runs a backtest for anomaly detection for the specified resource"
  },
  {
    "API": "lookoutmetrics:CreateAlert",
    "EventSource": "lookoutmetrics",
    "EventName": "CreateAlert",
    "Description": "Creates an alert for an anomaly detector"
  },
  {
    "API": "lookoutmetrics:CreateAnomalyDetector",
    "EventSource": "lookoutmetrics",
    "EventName": "CreateAnomalyDetector",
    "Description": "Creates an anomaly detector"
  },
  {
    "API": "lookoutmetrics:CreateMetricSet",
    "EventSource": "lookoutmetrics",
    "EventName": "CreateMetricSet",
    "Description": "Creates a dataset"
  },
  {
    "API": "lookoutmetrics:DeactivateAnomalyDetector",
    "EventSource": "lookoutmetrics",
    "EventName": "DeactivateAnomalyDetector",
    "Description": "Deactivates an anomaly detector"
  },
  {
    "API": "lookoutmetrics:DeleteAlert",
    "EventSource": "lookoutmetrics",
    "EventName": "DeleteAlert",
    "Description": "Deletes an alert"
  },
  {
    "API": "lookoutmetrics:DeleteAnomalyDetector",
    "EventSource": "lookoutmetrics",
    "EventName": "DeleteAnomalyDetector",
    "Description": "Deletes a detector"
  },
  {
    "API": "lookoutmetrics:DescribeAlert",
    "EventSource": "lookoutmetrics",
    "EventName": "DescribeAlert",
    "Description": "Describes an alert"
  },
  {
    "API": "lookoutmetrics:DescribeAnomalyDetectionExecutions",
    "EventSource": "lookoutmetrics",
    "EventName": "DescribeAnomalyDetectionExecutions",
    "Description": "Returns information about the status of the specified anomaly detection jobs"
  },
  {
    "API": "lookoutmetrics:DescribeAnomalyDetector",
    "EventSource": "lookoutmetrics",
    "EventName": "DescribeAnomalyDetector",
    "Description": "Describes a detector"
  },
  {
    "API": "lookoutmetrics:DescribeMetricSet",
    "EventSource": "lookoutmetrics",
    "EventName": "DescribeMetricSet",
    "Description": "Describes a dataset"
  },
  {
    "API": "lookoutmetrics:DetectMetricSetConfig",
    "EventSource": "lookoutmetrics",
    "EventName": "DetectMetricSetConfig",
    "Description": "Detects an Amazon S3 dataset's file format, interval, and offset"
  },
  {
    "API": "lookoutmetrics:GeneratePresignedUrl",
    "EventSource": "lookoutmetrics",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "lookoutmetrics:GetAnomalyGroup",
    "EventSource": "lookoutmetrics",
    "EventName": "GetAnomalyGroup",
    "Description": "Returns details about a group of anomalous metrics"
  },
  {
    "API": "lookoutmetrics:GetDataQualityMetrics",
    "EventSource": "lookoutmetrics",
    "EventName": "GetDataQualityMetrics",
    "Description": "Returns details about the requested data quality metrics"
  },
  {
    "API": "lookoutmetrics:GetFeedback",
    "EventSource": "lookoutmetrics",
    "EventName": "GetFeedback",
    "Description": "Get feedback for an anomaly group"
  },
  {
    "API": "lookoutmetrics:GetSampleData",
    "EventSource": "lookoutmetrics",
    "EventName": "GetSampleData",
    "Description": "Returns a selection of sample records from an Amazon S3 datasource"
  },
  {
    "API": "lookoutmetrics:ListAlerts",
    "EventSource": "lookoutmetrics",
    "EventName": "ListAlerts",
    "Description": "Lists the alerts attached to a detector"
  },
  {
    "API": "lookoutmetrics:ListAnomalyDetectors",
    "EventSource": "lookoutmetrics",
    "EventName": "ListAnomalyDetectors",
    "Description": "Lists the detectors in the current AWS Region"
  },
  {
    "API": "lookoutmetrics:ListAnomalyGroupRelatedMetrics",
    "EventSource": "lookoutmetrics",
    "EventName": "ListAnomalyGroupRelatedMetrics",
    "Description": "Returns a list of measures that are potential causes or effects of an anomaly group"
  },
  {
    "API": "lookoutmetrics:ListAnomalyGroupSummaries",
    "EventSource": "lookoutmetrics",
    "EventName": "ListAnomalyGroupSummaries",
    "Description": "Returns a list of anomaly groups"
  },
  {
    "API": "lookoutmetrics:ListAnomalyGroupTimeSeries",
    "EventSource": "lookoutmetrics",
    "EventName": "ListAnomalyGroupTimeSeries",
    "Description": "Gets a list of anomalous metrics for a measure in an anomaly group"
  },
  {
    "API": "lookoutmetrics:ListMetricSets",
    "EventSource": "lookoutmetrics",
    "EventName": "ListMetricSets",
    "Description": "Lists the datasets in the current AWS Region"
  },
  {
    "API": "lookoutmetrics:ListTagsForResource",
    "EventSource": "lookoutmetrics",
    "EventName": "ListTagsForResource",
    "Description": "Gets a list of `tags <https://docs"
  },
  {
    "API": "lookoutmetrics:PutFeedback",
    "EventSource": "lookoutmetrics",
    "EventName": "PutFeedback",
    "Description": "Add feedback for an anomalous metric"
  },
  {
    "API": "lookoutmetrics:TagResource",
    "EventSource": "lookoutmetrics",
    "EventName": "TagResource",
    "Description": "Adds `tags <https://docs"
  },
  {
    "API": "lookoutmetrics:UntagResource",
    "EventSource": "lookoutmetrics",
    "EventName": "UntagResource",
    "Description": "Removes `tags <https://docs"
  },
  {
    "API": "lookoutmetrics:UpdateAlert",
    "EventSource": "lookoutmetrics",
    "EventName": "UpdateAlert",
    "Description": "Make changes to an existing alert"
  },
  {
    "API": "lookoutmetrics:UpdateAnomalyDetector",
    "EventSource": "lookoutmetrics",
    "EventName": "UpdateAnomalyDetector",
    "Description": "Updates a detector"
  },
  {
    "API": "lookoutmetrics:UpdateMetricSet",
    "EventSource": "lookoutmetrics",
    "EventName": "UpdateMetricSet",
    "Description": "Updates a dataset"
  },
  {
    "API": "lookoutvision:CreateDataset",
    "EventSource": "lookoutvision",
    "EventName": "CreateDataset",
    "Description": "Creates a new dataset in an Amazon Lookout for Vision project"
  },
  {
    "API": "lookoutvision:CreateModel",
    "EventSource": "lookoutvision",
    "EventName": "CreateModel",
    "Description": "Creates a new version of a model within an an Amazon Lookout for Vision project"
  },
  {
    "API": "lookoutvision:CreateProject",
    "EventSource": "lookoutvision",
    "EventName": "CreateProject",
    "Description": "Creates an empty Amazon Lookout for Vision project"
  },
  {
    "API": "lookoutvision:DeleteDataset",
    "EventSource": "lookoutvision",
    "EventName": "DeleteDataset",
    "Description": "Deletes an existing Amazon Lookout for Vision ``dataset``"
  },
  {
    "API": "lookoutvision:DeleteModel",
    "EventSource": "lookoutvision",
    "EventName": "DeleteModel",
    "Description": "Deletes an Amazon Lookout for Vision model"
  },
  {
    "API": "lookoutvision:DeleteProject",
    "EventSource": "lookoutvision",
    "EventName": "DeleteProject",
    "Description": "Deletes an Amazon Lookout for Vision project"
  },
  {
    "API": "lookoutvision:DescribeDataset",
    "EventSource": "lookoutvision",
    "EventName": "DescribeDataset",
    "Description": "Describe an Amazon Lookout for Vision dataset"
  },
  {
    "API": "lookoutvision:DescribeModel",
    "EventSource": "lookoutvision",
    "EventName": "DescribeModel",
    "Description": "Describes a version of an Amazon Lookout for Vision model"
  },
  {
    "API": "lookoutvision:DescribeModelPackagingJob",
    "EventSource": "lookoutvision",
    "EventName": "DescribeModelPackagingJob",
    "Description": "Describes an Amazon Lookout for Vision model packaging job"
  },
  {
    "API": "lookoutvision:DescribeProject",
    "EventSource": "lookoutvision",
    "EventName": "DescribeProject",
    "Description": "Describes an Amazon Lookout for Vision project"
  },
  {
    "API": "lookoutvision:DetectAnomalies",
    "EventSource": "lookoutvision",
    "EventName": "DetectAnomalies",
    "Description": "Detects anomalies in an image that you supply"
  },
  {
    "API": "lookoutvision:GeneratePresignedUrl",
    "EventSource": "lookoutvision",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "lookoutvision:ListDatasetEntries",
    "EventSource": "lookoutvision",
    "EventName": "ListDatasetEntries",
    "Description": "Lists the JSON Lines within a dataset"
  },
  {
    "API": "lookoutvision:ListModelPackagingJobs",
    "EventSource": "lookoutvision",
    "EventName": "ListModelPackagingJobs",
    "Description": "Lists the model packaging jobs created for an Amazon Lookout for Vision project"
  },
  {
    "API": "lookoutvision:ListModels",
    "EventSource": "lookoutvision",
    "EventName": "ListModels",
    "Description": "Lists the versions of a model in an Amazon Lookout for Vision project"
  },
  {
    "API": "lookoutvision:ListProjects",
    "EventSource": "lookoutvision",
    "EventName": "ListProjects",
    "Description": "Lists the Amazon Lookout for Vision projects in your AWS account that are in the AWS Region in which you call ``ListProjects``"
  },
  {
    "API": "lookoutvision:ListTagsForResource",
    "EventSource": "lookoutvision",
    "EventName": "ListTagsForResource",
    "Description": "Returns a list of tags attached to the specified Amazon Lookout for Vision model"
  },
  {
    "API": "lookoutvision:StartModel",
    "EventSource": "lookoutvision",
    "EventName": "StartModel",
    "Description": "Starts the running of the version of an Amazon Lookout for Vision model"
  },
  {
    "API": "lookoutvision:StartModelPackagingJob",
    "EventSource": "lookoutvision",
    "EventName": "StartModelPackagingJob",
    "Description": "Starts an Amazon Lookout for Vision model packaging job"
  },
  {
    "API": "lookoutvision:StopModel",
    "EventSource": "lookoutvision",
    "EventName": "StopModel",
    "Description": "Stops the hosting of a running model"
  },
  {
    "API": "lookoutvision:TagResource",
    "EventSource": "lookoutvision",
    "EventName": "TagResource",
    "Description": "Adds one or more key-value tags to an Amazon Lookout for Vision model"
  },
  {
    "API": "lookoutvision:UntagResource",
    "EventSource": "lookoutvision",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags from an Amazon Lookout for Vision model"
  },
  {
    "API": "lookoutvision:UpdateDatasetEntries",
    "EventSource": "lookoutvision",
    "EventName": "UpdateDatasetEntries",
    "Description": "Adds or updates one or more JSON Line entries in a dataset"
  },
  {
    "API": "m2:CancelBatchJobExecution",
    "EventSource": "m2",
    "EventName": "CancelBatchJobExecution",
    "Description": "Cancels the running of a specific batch job execution"
  },
  {
    "API": "m2:CreateApplication",
    "EventSource": "m2",
    "EventName": "CreateApplication",
    "Description": "Creates a new application with given parameters"
  },
  {
    "API": "m2:CreateDataSetImportTask",
    "EventSource": "m2",
    "EventName": "CreateDataSetImportTask",
    "Description": "Starts a data set import task for a specific application"
  },
  {
    "API": "m2:CreateDeployment",
    "EventSource": "m2",
    "EventName": "CreateDeployment",
    "Description": "Creates and starts a deployment to deploy an application into a runtime environment"
  },
  {
    "API": "m2:CreateEnvironment",
    "EventSource": "m2",
    "EventName": "CreateEnvironment",
    "Description": "Creates a runtime environment for a given runtime engine"
  },
  {
    "API": "m2:DeleteApplication",
    "EventSource": "m2",
    "EventName": "DeleteApplication",
    "Description": "Deletes a specific application"
  },
  {
    "API": "m2:DeleteApplicationFromEnvironment",
    "EventSource": "m2",
    "EventName": "DeleteApplicationFromEnvironment",
    "Description": "Deletes a specific application from the specific runtime environment where it was previously deployed"
  },
  {
    "API": "m2:DeleteEnvironment",
    "EventSource": "m2",
    "EventName": "DeleteEnvironment",
    "Description": "Deletes a specific runtime environment"
  },
  {
    "API": "m2:GeneratePresignedUrl",
    "EventSource": "m2",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "m2:GetApplication",
    "EventSource": "m2",
    "EventName": "GetApplication",
    "Description": "Describes the details of a specific application"
  },
  {
    "API": "m2:GetApplicationVersion",
    "EventSource": "m2",
    "EventName": "GetApplicationVersion",
    "Description": "Returns details about a specific version of a specific application"
  },
  {
    "API": "m2:GetBatchJobExecution",
    "EventSource": "m2",
    "EventName": "GetBatchJobExecution",
    "Description": "Gets the details of a specific batch job execution for a specific application"
  },
  {
    "API": "m2:GetDataSetDetails",
    "EventSource": "m2",
    "EventName": "GetDataSetDetails",
    "Description": "Gets the details of a specific data set"
  },
  {
    "API": "m2:GetDataSetImportTask",
    "EventSource": "m2",
    "EventName": "GetDataSetImportTask",
    "Description": "Gets the status of a data set import task initiated with the  CreateDataSetImportTask operation"
  },
  {
    "API": "m2:GetDeployment",
    "EventSource": "m2",
    "EventName": "GetDeployment",
    "Description": "Gets details of a specific deployment with a given deployment identifier"
  },
  {
    "API": "m2:GetEnvironment",
    "EventSource": "m2",
    "EventName": "GetEnvironment",
    "Description": "Describes a specific runtime environment"
  },
  {
    "API": "m2:GetSignedBluinsightsUrl",
    "EventSource": "m2",
    "EventName": "GetSignedBluinsightsUrl",
    "Description": "Gets a single sign-on URL that can be used to connect to AWS Blu Insights"
  },
  {
    "API": "m2:ListApplicationVersions",
    "EventSource": "m2",
    "EventName": "ListApplicationVersions",
    "Description": "Returns a list of the application versions for a specific application"
  },
  {
    "API": "m2:ListApplications",
    "EventSource": "m2",
    "EventName": "ListApplications",
    "Description": "Lists the applications associated with a specific Amazon Web Services account"
  },
  {
    "API": "m2:ListBatchJobDefinitions",
    "EventSource": "m2",
    "EventName": "ListBatchJobDefinitions",
    "Description": "Lists all the available batch job definitions based on the batch job resources uploaded during the application creation"
  },
  {
    "API": "m2:ListBatchJobExecutions",
    "EventSource": "m2",
    "EventName": "ListBatchJobExecutions",
    "Description": "Lists historical, current, and scheduled batch job executions for a specific application"
  },
  {
    "API": "m2:ListBatchJobRestartPoints",
    "EventSource": "m2",
    "EventName": "ListBatchJobRestartPoints",
    "Description": "Lists all the job steps for JCL files to restart a batch job"
  },
  {
    "API": "m2:ListDataSetImportHistory",
    "EventSource": "m2",
    "EventName": "ListDataSetImportHistory",
    "Description": "Lists the data set imports for the specified application"
  },
  {
    "API": "m2:ListDataSets",
    "EventSource": "m2",
    "EventName": "ListDataSets",
    "Description": "Lists the data sets imported for a specific application"
  },
  {
    "API": "m2:ListDeployments",
    "EventSource": "m2",
    "EventName": "ListDeployments",
    "Description": "Returns a list of all deployments of a specific application"
  },
  {
    "API": "m2:ListEngineVersions",
    "EventSource": "m2",
    "EventName": "ListEngineVersions",
    "Description": "Lists the available engine versions"
  },
  {
    "API": "m2:ListEnvironments",
    "EventSource": "m2",
    "EventName": "ListEnvironments",
    "Description": "Lists the runtime environments"
  },
  {
    "API": "m2:ListTagsForResource",
    "EventSource": "m2",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags for the specified resource"
  },
  {
    "API": "m2:StartApplication",
    "EventSource": "m2",
    "EventName": "StartApplication",
    "Description": "Starts an application that is currently stopped"
  },
  {
    "API": "m2:StartBatchJob",
    "EventSource": "m2",
    "EventName": "StartBatchJob",
    "Description": "Starts a batch job and returns the unique identifier of this execution of the batch job"
  },
  {
    "API": "m2:StopApplication",
    "EventSource": "m2",
    "EventName": "StopApplication",
    "Description": "Stops a running application"
  },
  {
    "API": "m2:TagResource",
    "EventSource": "m2",
    "EventName": "TagResource",
    "Description": "Adds one or more tags to the specified resource"
  },
  {
    "API": "m2:UntagResource",
    "EventSource": "m2",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags from the specified resource"
  },
  {
    "API": "m2:UpdateApplication",
    "EventSource": "m2",
    "EventName": "UpdateApplication",
    "Description": "Updates an application and creates a new version"
  },
  {
    "API": "m2:UpdateEnvironment",
    "EventSource": "m2",
    "EventName": "UpdateEnvironment",
    "Description": "Updates the configuration details for a specific runtime environment"
  },
  {
    "API": "machinelearning:AddTags",
    "EventSource": "machinelearning",
    "EventName": "AddTags",
    "Description": "Adds one or more tags to an object, up to a limit of 10"
  },
  {
    "API": "machinelearning:CreateBatchPrediction",
    "EventSource": "machinelearning",
    "EventName": "CreateBatchPrediction",
    "Description": "Generates predictions for a group of observations"
  },
  {
    "API": "machinelearning:CreateDataSourceFromRds",
    "EventSource": "machinelearning",
    "EventName": "CreateDataSourceFromRds",
    "Description": "Creates a ``DataSource`` object from an `Amazon Relational Database Service <http://aws"
  },
  {
    "API": "machinelearning:CreateDataSourceFromRedshift",
    "EventSource": "machinelearning",
    "EventName": "CreateDataSourceFromRedshift",
    "Description": "Creates a ``DataSource`` from a database hosted on an Amazon Redshift cluster"
  },
  {
    "API": "machinelearning:CreateDataSourceFromS3",
    "EventSource": "machinelearning",
    "EventName": "CreateDataSourceFromS3",
    "Description": "Creates a ``DataSource`` object"
  },
  {
    "API": "machinelearning:CreateEvaluation",
    "EventSource": "machinelearning",
    "EventName": "CreateEvaluation",
    "Description": "Creates a new ``Evaluation`` of an ``MLModel``"
  },
  {
    "API": "machinelearning:CreateMlModel",
    "EventSource": "machinelearning",
    "EventName": "CreateMlModel",
    "Description": "Creates a new ``MLModel`` using the ``DataSource`` and the recipe as information sources"
  },
  {
    "API": "machinelearning:CreateRealtimeEndpoint",
    "EventSource": "machinelearning",
    "EventName": "CreateRealtimeEndpoint",
    "Description": "Creates a real-time endpoint for the ``MLModel``"
  },
  {
    "API": "machinelearning:DeleteBatchPrediction",
    "EventSource": "machinelearning",
    "EventName": "DeleteBatchPrediction",
    "Description": "Assigns the DELETED status to a ``BatchPrediction``, rendering it unusable"
  },
  {
    "API": "machinelearning:DeleteDataSource",
    "EventSource": "machinelearning",
    "EventName": "DeleteDataSource",
    "Description": "Assigns the DELETED status to a ``DataSource``, rendering it unusable"
  },
  {
    "API": "machinelearning:DeleteEvaluation",
    "EventSource": "machinelearning",
    "EventName": "DeleteEvaluation",
    "Description": "Assigns the ``DELETED`` status to an ``Evaluation``, rendering it unusable"
  },
  {
    "API": "machinelearning:DeleteMlModel",
    "EventSource": "machinelearning",
    "EventName": "DeleteMlModel",
    "Description": "Assigns the ``DELETED`` status to an ``MLModel``, rendering it unusable"
  },
  {
    "API": "machinelearning:DeleteRealtimeEndpoint",
    "EventSource": "machinelearning",
    "EventName": "DeleteRealtimeEndpoint",
    "Description": "Deletes a real time endpoint of an ``MLModel``"
  },
  {
    "API": "machinelearning:DeleteTags",
    "EventSource": "machinelearning",
    "EventName": "DeleteTags",
    "Description": "Deletes the specified tags associated with an ML object"
  },
  {
    "API": "machinelearning:DescribeBatchPredictions",
    "EventSource": "machinelearning",
    "EventName": "DescribeBatchPredictions",
    "Description": "Returns a list of ``BatchPrediction`` operations that match the search criteria in the request"
  },
  {
    "API": "machinelearning:DescribeDataSources",
    "EventSource": "machinelearning",
    "EventName": "DescribeDataSources",
    "Description": "Returns a list of ``DataSource`` that match the search criteria in the request"
  },
  {
    "API": "machinelearning:DescribeEvaluations",
    "EventSource": "machinelearning",
    "EventName": "DescribeEvaluations",
    "Description": "Returns a list of ``DescribeEvaluations`` that match the search criteria in the request"
  },
  {
    "API": "machinelearning:DescribeMlModels",
    "EventSource": "machinelearning",
    "EventName": "DescribeMlModels",
    "Description": "Returns a list of ``MLModel`` that match the search criteria in the request"
  },
  {
    "API": "machinelearning:DescribeTags",
    "EventSource": "machinelearning",
    "EventName": "DescribeTags",
    "Description": "Describes one or more of the tags for your Amazon ML object"
  },
  {
    "API": "machinelearning:GeneratePresignedUrl",
    "EventSource": "machinelearning",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "machinelearning:GetBatchPrediction",
    "EventSource": "machinelearning",
    "EventName": "GetBatchPrediction",
    "Description": "Returns a ``BatchPrediction`` that includes detailed metadata, status, and data file information for a ``Batch Prediction`` request"
  },
  {
    "API": "machinelearning:GetDataSource",
    "EventSource": "machinelearning",
    "EventName": "GetDataSource",
    "Description": "Returns a ``DataSource`` that includes metadata and data file information, as well as the current status of the ``DataSource``"
  },
  {
    "API": "machinelearning:GetEvaluation",
    "EventSource": "machinelearning",
    "EventName": "GetEvaluation",
    "Description": "Returns an ``Evaluation`` that includes metadata as well as the current status of the ``Evaluation``"
  },
  {
    "API": "machinelearning:GetMlModel",
    "EventSource": "machinelearning",
    "EventName": "GetMlModel",
    "Description": "Returns an ``MLModel`` that includes detailed metadata, data source information, and the current status of the ``MLModel``"
  },
  {
    "API": "machinelearning:UpdateBatchPrediction",
    "EventSource": "machinelearning",
    "EventName": "UpdateBatchPrediction",
    "Description": "Updates the ``BatchPredictionName`` of a ``BatchPrediction``"
  },
  {
    "API": "machinelearning:UpdateDataSource",
    "EventSource": "machinelearning",
    "EventName": "UpdateDataSource",
    "Description": "Updates the ``DataSourceName`` of a ``DataSource``"
  },
  {
    "API": "machinelearning:UpdateEvaluation",
    "EventSource": "machinelearning",
    "EventName": "UpdateEvaluation",
    "Description": "Updates the ``EvaluationName`` of an ``Evaluation``"
  },
  {
    "API": "machinelearning:UpdateMlModel",
    "EventSource": "machinelearning",
    "EventName": "UpdateMlModel",
    "Description": "Updates the ``MLModelName`` and the ``ScoreThreshold`` of an ``MLModel``"
  },
  {
    "API": "macie2:AcceptInvitation",
    "EventSource": "macie2",
    "EventName": "AcceptInvitation",
    "Description": "Accepts an Amazon Macie membership invitation that was received from a specific account"
  },
  {
    "API": "macie2:BatchGetCustomDataIdentifiers",
    "EventSource": "macie2",
    "EventName": "BatchGetCustomDataIdentifiers",
    "Description": "Retrieves information about one or more custom data identifiers"
  },
  {
    "API": "macie2:BatchUpdateAutomatedDiscoveryAccounts",
    "EventSource": "macie2",
    "EventName": "BatchUpdateAutomatedDiscoveryAccounts",
    "Description": "Changes the status of automated sensitive data discovery for one or more accounts"
  },
  {
    "API": "macie2:CreateAllowList",
    "EventSource": "macie2",
    "EventName": "CreateAllowList",
    "Description": "Creates and defines the settings for an allow list"
  },
  {
    "API": "macie2:CreateClassificationJob",
    "EventSource": "macie2",
    "EventName": "CreateClassificationJob",
    "Description": "Creates and defines the settings for a classification job"
  },
  {
    "API": "macie2:CreateCustomDataIdentifier",
    "EventSource": "macie2",
    "EventName": "CreateCustomDataIdentifier",
    "Description": "Creates and defines the criteria and other settings for a custom data identifier"
  },
  {
    "API": "macie2:CreateFindingsFilter",
    "EventSource": "macie2",
    "EventName": "CreateFindingsFilter",
    "Description": "Creates and defines the criteria and other settings for a findings filter"
  },
  {
    "API": "macie2:CreateInvitations",
    "EventSource": "macie2",
    "EventName": "CreateInvitations",
    "Description": "Sends an Amazon Macie membership invitation to one or more accounts"
  },
  {
    "API": "macie2:CreateMember",
    "EventSource": "macie2",
    "EventName": "CreateMember",
    "Description": "Associates an account with an Amazon Macie administrator account"
  },
  {
    "API": "macie2:CreateSampleFindings",
    "EventSource": "macie2",
    "EventName": "CreateSampleFindings",
    "Description": "Creates sample findings"
  },
  {
    "API": "macie2:DeclineInvitations",
    "EventSource": "macie2",
    "EventName": "DeclineInvitations",
    "Description": "Declines Amazon Macie membership invitations that were received from specific accounts"
  },
  {
    "API": "macie2:DeleteAllowList",
    "EventSource": "macie2",
    "EventName": "DeleteAllowList",
    "Description": "Deletes an allow list"
  },
  {
    "API": "macie2:DeleteCustomDataIdentifier",
    "EventSource": "macie2",
    "EventName": "DeleteCustomDataIdentifier",
    "Description": "Soft deletes a custom data identifier"
  },
  {
    "API": "macie2:DeleteFindingsFilter",
    "EventSource": "macie2",
    "EventName": "DeleteFindingsFilter",
    "Description": "Deletes a findings filter"
  },
  {
    "API": "macie2:DeleteInvitations",
    "EventSource": "macie2",
    "EventName": "DeleteInvitations",
    "Description": "Deletes Amazon Macie membership invitations that were received from specific accounts"
  },
  {
    "API": "macie2:DeleteMember",
    "EventSource": "macie2",
    "EventName": "DeleteMember",
    "Description": "Deletes the association between an Amazon Macie administrator account and an account"
  },
  {
    "API": "macie2:DescribeBuckets",
    "EventSource": "macie2",
    "EventName": "DescribeBuckets",
    "Description": "Retrieves (queries) statistical data and other information about one or more S3 buckets that Amazon Macie monitors and analyzes for an account"
  },
  {
    "API": "macie2:DescribeClassificationJob",
    "EventSource": "macie2",
    "EventName": "DescribeClassificationJob",
    "Description": "Retrieves the status and settings for a classification job"
  },
  {
    "API": "macie2:DescribeOrganizationConfiguration",
    "EventSource": "macie2",
    "EventName": "DescribeOrganizationConfiguration",
    "Description": "Retrieves the Amazon Macie configuration settings for an organization in Organizations"
  },
  {
    "API": "macie2:DisableMacie",
    "EventSource": "macie2",
    "EventName": "DisableMacie",
    "Description": "Disables Amazon Macie and deletes all settings and resources for a Macie account"
  },
  {
    "API": "macie2:DisableOrganizationAdminAccount",
    "EventSource": "macie2",
    "EventName": "DisableOrganizationAdminAccount",
    "Description": "Disables an account as the delegated Amazon Macie administrator account for an organization in Organizations"
  },
  {
    "API": "macie2:DisassociateFromAdministratorAccount",
    "EventSource": "macie2",
    "EventName": "DisassociateFromAdministratorAccount",
    "Description": "Disassociates a member account from its Amazon Macie administrator account"
  },
  {
    "API": "macie2:DisassociateFromMasterAccount",
    "EventSource": "macie2",
    "EventName": "DisassociateFromMasterAccount",
    "Description": "(Deprecated) Disassociates a member account from its Amazon Macie administrator account"
  },
  {
    "API": "macie2:DisassociateMember",
    "EventSource": "macie2",
    "EventName": "DisassociateMember",
    "Description": "Disassociates an Amazon Macie administrator account from a member account"
  },
  {
    "API": "macie2:EnableMacie",
    "EventSource": "macie2",
    "EventName": "EnableMacie",
    "Description": "Enables Amazon Macie and specifies the configuration settings for a Macie account"
  },
  {
    "API": "macie2:EnableOrganizationAdminAccount",
    "EventSource": "macie2",
    "EventName": "EnableOrganizationAdminAccount",
    "Description": "Designates an account as the delegated Amazon Macie administrator account for an organization in Organizations"
  },
  {
    "API": "macie2:GeneratePresignedUrl",
    "EventSource": "macie2",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "macie2:GetAdministratorAccount",
    "EventSource": "macie2",
    "EventName": "GetAdministratorAccount",
    "Description": "Retrieves information about the Amazon Macie administrator account for an account"
  },
  {
    "API": "macie2:GetAllowList",
    "EventSource": "macie2",
    "EventName": "GetAllowList",
    "Description": "Retrieves the settings and status of an allow list"
  },
  {
    "API": "macie2:GetAutomatedDiscoveryConfiguration",
    "EventSource": "macie2",
    "EventName": "GetAutomatedDiscoveryConfiguration",
    "Description": "Retrieves the configuration settings and status of automated sensitive data discovery for an organization or standalone account"
  },
  {
    "API": "macie2:GetBucketStatistics",
    "EventSource": "macie2",
    "EventName": "GetBucketStatistics",
    "Description": "Retrieves (queries) aggregated statistical data about all the S3 buckets that Amazon Macie monitors and analyzes for an account"
  },
  {
    "API": "macie2:GetClassificationExportConfiguration",
    "EventSource": "macie2",
    "EventName": "GetClassificationExportConfiguration",
    "Description": "Retrieves the configuration settings for storing data classification results"
  },
  {
    "API": "macie2:GetClassificationScope",
    "EventSource": "macie2",
    "EventName": "GetClassificationScope",
    "Description": "Retrieves the classification scope settings for an account"
  },
  {
    "API": "macie2:GetCustomDataIdentifier",
    "EventSource": "macie2",
    "EventName": "GetCustomDataIdentifier",
    "Description": "Retrieves the criteria and other settings for a custom data identifier"
  },
  {
    "API": "macie2:GetFindingStatistics",
    "EventSource": "macie2",
    "EventName": "GetFindingStatistics",
    "Description": "Retrieves (queries) aggregated statistical data about findings"
  },
  {
    "API": "macie2:GetFindings",
    "EventSource": "macie2",
    "EventName": "GetFindings",
    "Description": "Retrieves the details of one or more findings"
  },
  {
    "API": "macie2:GetFindingsFilter",
    "EventSource": "macie2",
    "EventName": "GetFindingsFilter",
    "Description": "Retrieves the criteria and other settings for a findings filter"
  },
  {
    "API": "macie2:GetFindingsPublicationConfiguration",
    "EventSource": "macie2",
    "EventName": "GetFindingsPublicationConfiguration",
    "Description": "Retrieves the configuration settings for publishing findings to Security Hub"
  },
  {
    "API": "macie2:GetInvitationsCount",
    "EventSource": "macie2",
    "EventName": "GetInvitationsCount",
    "Description": "Retrieves the count of Amazon Macie membership invitations that were received by an account"
  },
  {
    "API": "macie2:GetMacieSession",
    "EventSource": "macie2",
    "EventName": "GetMacieSession",
    "Description": "Retrieves the status and configuration settings for an Amazon Macie account"
  },
  {
    "API": "macie2:GetMasterAccount",
    "EventSource": "macie2",
    "EventName": "GetMasterAccount",
    "Description": "(Deprecated) Retrieves information about the Amazon Macie administrator account for an account"
  },
  {
    "API": "macie2:GetMember",
    "EventSource": "macie2",
    "EventName": "GetMember",
    "Description": "Retrieves information about an account that's associated with an Amazon Macie administrator account"
  },
  {
    "API": "macie2:GetResourceProfile",
    "EventSource": "macie2",
    "EventName": "GetResourceProfile",
    "Description": "Retrieves (queries) sensitive data discovery statistics and the sensitivity score for an S3 bucket"
  },
  {
    "API": "macie2:GetRevealConfiguration",
    "EventSource": "macie2",
    "EventName": "GetRevealConfiguration",
    "Description": "Retrieves the status and configuration settings for retrieving occurrences of sensitive data reported by findings"
  },
  {
    "API": "macie2:GetSensitiveDataOccurrences",
    "EventSource": "macie2",
    "EventName": "GetSensitiveDataOccurrences",
    "Description": "Retrieves occurrences of sensitive data reported by a finding"
  },
  {
    "API": "macie2:GetSensitiveDataOccurrencesAvailability",
    "EventSource": "macie2",
    "EventName": "GetSensitiveDataOccurrencesAvailability",
    "Description": "Checks whether occurrences of sensitive data can be retrieved for a finding"
  },
  {
    "API": "macie2:GetSensitivityInspectionTemplate",
    "EventSource": "macie2",
    "EventName": "GetSensitivityInspectionTemplate",
    "Description": "Retrieves the settings for the sensitivity inspection template for an account"
  },
  {
    "API": "macie2:GetUsageStatistics",
    "EventSource": "macie2",
    "EventName": "GetUsageStatistics",
    "Description": "Retrieves (queries) quotas and aggregated usage data for one or more accounts"
  },
  {
    "API": "macie2:GetUsageTotals",
    "EventSource": "macie2",
    "EventName": "GetUsageTotals",
    "Description": "Retrieves (queries) aggregated usage data for an account"
  },
  {
    "API": "macie2:ListAllowLists",
    "EventSource": "macie2",
    "EventName": "ListAllowLists",
    "Description": "Retrieves a subset of information about all the allow lists for an account"
  },
  {
    "API": "macie2:ListAutomatedDiscoveryAccounts",
    "EventSource": "macie2",
    "EventName": "ListAutomatedDiscoveryAccounts",
    "Description": "Retrieves the status of automated sensitive data discovery for one or more accounts"
  },
  {
    "API": "macie2:ListClassificationJobs",
    "EventSource": "macie2",
    "EventName": "ListClassificationJobs",
    "Description": "Retrieves a subset of information about one or more classification jobs"
  },
  {
    "API": "macie2:ListClassificationScopes",
    "EventSource": "macie2",
    "EventName": "ListClassificationScopes",
    "Description": "Retrieves a subset of information about the classification scope for an account"
  },
  {
    "API": "macie2:ListCustomDataIdentifiers",
    "EventSource": "macie2",
    "EventName": "ListCustomDataIdentifiers",
    "Description": "Retrieves a subset of information about all the custom data identifiers for an account"
  },
  {
    "API": "macie2:ListFindings",
    "EventSource": "macie2",
    "EventName": "ListFindings",
    "Description": "Retrieves a subset of information about one or more findings"
  },
  {
    "API": "macie2:ListFindingsFilters",
    "EventSource": "macie2",
    "EventName": "ListFindingsFilters",
    "Description": "Retrieves a subset of information about all the findings filters for an account"
  },
  {
    "API": "macie2:ListInvitations",
    "EventSource": "macie2",
    "EventName": "ListInvitations",
    "Description": "Retrieves information about Amazon Macie membership invitations that were received by an account"
  },
  {
    "API": "macie2:ListManagedDataIdentifiers",
    "EventSource": "macie2",
    "EventName": "ListManagedDataIdentifiers",
    "Description": "Retrieves information about all the managed data identifiers that Amazon Macie currently provides"
  },
  {
    "API": "macie2:ListMembers",
    "EventSource": "macie2",
    "EventName": "ListMembers",
    "Description": "Retrieves information about the accounts that are associated with an Amazon Macie administrator account"
  },
  {
    "API": "macie2:ListOrganizationAdminAccounts",
    "EventSource": "macie2",
    "EventName": "ListOrganizationAdminAccounts",
    "Description": "Retrieves information about the delegated Amazon Macie administrator account for an organization in Organizations"
  },
  {
    "API": "macie2:ListResourceProfileArtifacts",
    "EventSource": "macie2",
    "EventName": "ListResourceProfileArtifacts",
    "Description": "Retrieves information about objects that Amazon Macie selected from an S3 bucket for automated sensitive data discovery"
  },
  {
    "API": "macie2:ListResourceProfileDetections",
    "EventSource": "macie2",
    "EventName": "ListResourceProfileDetections",
    "Description": "Retrieves information about the types and amount of sensitive data that Amazon Macie found in an S3 bucket"
  },
  {
    "API": "macie2:ListSensitivityInspectionTemplates",
    "EventSource": "macie2",
    "EventName": "ListSensitivityInspectionTemplates",
    "Description": "Retrieves a subset of information about the sensitivity inspection template for an account"
  },
  {
    "API": "macie2:ListTagsForResource",
    "EventSource": "macie2",
    "EventName": "ListTagsForResource",
    "Description": "Retrieves the tags (keys and values) that are associated with an Amazon Macie resource"
  },
  {
    "API": "macie2:PutClassificationExportConfiguration",
    "EventSource": "macie2",
    "EventName": "PutClassificationExportConfiguration",
    "Description": "Adds or updates the configuration settings for storing data classification results"
  },
  {
    "API": "macie2:PutFindingsPublicationConfiguration",
    "EventSource": "macie2",
    "EventName": "PutFindingsPublicationConfiguration",
    "Description": "Updates the configuration settings for publishing findings to Security Hub"
  },
  {
    "API": "macie2:SearchResources",
    "EventSource": "macie2",
    "EventName": "SearchResources",
    "Description": "Retrieves (queries) statistical data and other information about Amazon Web Services resources that Amazon Macie monitors and analyzes"
  },
  {
    "API": "macie2:TagResource",
    "EventSource": "macie2",
    "EventName": "TagResource",
    "Description": "Adds or updates one or more tags (keys and values) that are associated with an Amazon Macie resource"
  },
  {
    "API": "macie2:TestCustomDataIdentifier",
    "EventSource": "macie2",
    "EventName": "TestCustomDataIdentifier",
    "Description": "Tests criteria for a custom data identifier"
  },
  {
    "API": "macie2:UntagResource",
    "EventSource": "macie2",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags (keys and values) from an Amazon Macie resource"
  },
  {
    "API": "macie2:UpdateAllowList",
    "EventSource": "macie2",
    "EventName": "UpdateAllowList",
    "Description": "Updates the settings for an allow list"
  },
  {
    "API": "macie2:UpdateAutomatedDiscoveryConfiguration",
    "EventSource": "macie2",
    "EventName": "UpdateAutomatedDiscoveryConfiguration",
    "Description": "Changes the configuration settings and status of automated sensitive data discovery for an organization or standalone account"
  },
  {
    "API": "macie2:UpdateClassificationJob",
    "EventSource": "macie2",
    "EventName": "UpdateClassificationJob",
    "Description": "Changes the status of a classification job"
  },
  {
    "API": "macie2:UpdateClassificationScope",
    "EventSource": "macie2",
    "EventName": "UpdateClassificationScope",
    "Description": "Updates the classification scope settings for an account"
  },
  {
    "API": "macie2:UpdateFindingsFilter",
    "EventSource": "macie2",
    "EventName": "UpdateFindingsFilter",
    "Description": "Updates the criteria and other settings for a findings filter"
  },
  {
    "API": "macie2:UpdateMacieSession",
    "EventSource": "macie2",
    "EventName": "UpdateMacieSession",
    "Description": "Suspends or re-enables Amazon Macie, or updates the configuration settings for a Macie account"
  },
  {
    "API": "macie2:UpdateMemberSession",
    "EventSource": "macie2",
    "EventName": "UpdateMemberSession",
    "Description": "Enables an Amazon Macie administrator to suspend or re-enable Macie for a member account"
  },
  {
    "API": "macie2:UpdateOrganizationConfiguration",
    "EventSource": "macie2",
    "EventName": "UpdateOrganizationConfiguration",
    "Description": "Updates the Amazon Macie configuration settings for an organization in Organizations"
  },
  {
    "API": "macie2:UpdateResourceProfile",
    "EventSource": "macie2",
    "EventName": "UpdateResourceProfile",
    "Description": "Updates the sensitivity score for an S3 bucket"
  },
  {
    "API": "macie2:UpdateResourceProfileDetections",
    "EventSource": "macie2",
    "EventName": "UpdateResourceProfileDetections",
    "Description": "Updates the sensitivity scoring settings for an S3 bucket"
  },
  {
    "API": "macie2:UpdateRevealConfiguration",
    "EventSource": "macie2",
    "EventName": "UpdateRevealConfiguration",
    "Description": "Updates the status and configuration settings for retrieving occurrences of sensitive data reported by findings"
  },
  {
    "API": "macie2:UpdateSensitivityInspectionTemplate",
    "EventSource": "macie2",
    "EventName": "UpdateSensitivityInspectionTemplate",
    "Description": "Updates the settings for the sensitivity inspection template for an account"
  },
  {
    "API": "mailmanager:CreateAddonInstance",
    "EventSource": "mailmanager",
    "EventName": "CreateAddonInstance",
    "Description": "Creates an Add On instance for the subscription indicated in the request"
  },
  {
    "API": "mailmanager:CreateAddonSubscription",
    "EventSource": "mailmanager",
    "EventName": "CreateAddonSubscription",
    "Description": "Creates a subscription for an Add On representing the acceptance of its terms of use and additional pricing"
  },
  {
    "API": "mailmanager:CreateArchive",
    "EventSource": "mailmanager",
    "EventName": "CreateArchive",
    "Description": "Creates a new email archive resource for storing and retaining emails"
  },
  {
    "API": "mailmanager:CreateIngressPoint",
    "EventSource": "mailmanager",
    "EventName": "CreateIngressPoint",
    "Description": "Provision a new ingress endpoint resource"
  },
  {
    "API": "mailmanager:CreateRelay",
    "EventSource": "mailmanager",
    "EventName": "CreateRelay",
    "Description": "Creates a relay resource which can be used in rules to relay incoming emails to defined relay destinations"
  },
  {
    "API": "mailmanager:CreateRuleSet",
    "EventSource": "mailmanager",
    "EventName": "CreateRuleSet",
    "Description": "Provision a new rule set"
  },
  {
    "API": "mailmanager:CreateTrafficPolicy",
    "EventSource": "mailmanager",
    "EventName": "CreateTrafficPolicy",
    "Description": "Provision a new traffic policy resource"
  },
  {
    "API": "mailmanager:DeleteAddonInstance",
    "EventSource": "mailmanager",
    "EventName": "DeleteAddonInstance",
    "Description": "Deletes an Add On instance"
  },
  {
    "API": "mailmanager:DeleteAddonSubscription",
    "EventSource": "mailmanager",
    "EventName": "DeleteAddonSubscription",
    "Description": "Deletes an Add On subscription"
  },
  {
    "API": "mailmanager:DeleteArchive",
    "EventSource": "mailmanager",
    "EventName": "DeleteArchive",
    "Description": "Initiates deletion of an email archive"
  },
  {
    "API": "mailmanager:DeleteIngressPoint",
    "EventSource": "mailmanager",
    "EventName": "DeleteIngressPoint",
    "Description": "Delete an ingress endpoint resource"
  },
  {
    "API": "mailmanager:DeleteRelay",
    "EventSource": "mailmanager",
    "EventName": "DeleteRelay",
    "Description": "Deletes an existing relay resource"
  },
  {
    "API": "mailmanager:DeleteRuleSet",
    "EventSource": "mailmanager",
    "EventName": "DeleteRuleSet",
    "Description": "Delete a rule set"
  },
  {
    "API": "mailmanager:DeleteTrafficPolicy",
    "EventSource": "mailmanager",
    "EventName": "DeleteTrafficPolicy",
    "Description": "Delete a traffic policy resource"
  },
  {
    "API": "mailmanager:GeneratePresignedUrl",
    "EventSource": "mailmanager",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "mailmanager:GetAddonInstance",
    "EventSource": "mailmanager",
    "EventName": "GetAddonInstance",
    "Description": "Gets detailed information about an Add On instance"
  },
  {
    "API": "mailmanager:GetAddonSubscription",
    "EventSource": "mailmanager",
    "EventName": "GetAddonSubscription",
    "Description": "Gets detailed information about an Add On subscription"
  },
  {
    "API": "mailmanager:GetArchive",
    "EventSource": "mailmanager",
    "EventName": "GetArchive",
    "Description": "Retrieves the full details and current state of a specified email archive"
  },
  {
    "API": "mailmanager:GetArchiveExport",
    "EventSource": "mailmanager",
    "EventName": "GetArchiveExport",
    "Description": "Retrieves the details and current status of a specific email archive export job"
  },
  {
    "API": "mailmanager:GetArchiveMessage",
    "EventSource": "mailmanager",
    "EventName": "GetArchiveMessage",
    "Description": "Returns a pre-signed URL that provides temporary download access to the specific email message stored in the archive"
  },
  {
    "API": "mailmanager:GetArchiveMessageContent",
    "EventSource": "mailmanager",
    "EventName": "GetArchiveMessageContent",
    "Description": "Returns the textual content of a specific email message stored in the archive"
  },
  {
    "API": "mailmanager:GetArchiveSearch",
    "EventSource": "mailmanager",
    "EventName": "GetArchiveSearch",
    "Description": "Retrieves the details and current status of a specific email archive search job"
  },
  {
    "API": "mailmanager:GetArchiveSearchResults",
    "EventSource": "mailmanager",
    "EventName": "GetArchiveSearchResults",
    "Description": "Returns the results of a completed email archive search job"
  },
  {
    "API": "mailmanager:GetIngressPoint",
    "EventSource": "mailmanager",
    "EventName": "GetIngressPoint",
    "Description": "Fetch ingress endpoint resource attributes"
  },
  {
    "API": "mailmanager:GetRelay",
    "EventSource": "mailmanager",
    "EventName": "GetRelay",
    "Description": "Fetch the relay resource and it's attributes"
  },
  {
    "API": "mailmanager:GetRuleSet",
    "EventSource": "mailmanager",
    "EventName": "GetRuleSet",
    "Description": "Fetch attributes of a rule set"
  },
  {
    "API": "mailmanager:GetTrafficPolicy",
    "EventSource": "mailmanager",
    "EventName": "GetTrafficPolicy",
    "Description": "Fetch attributes of a traffic policy resource"
  },
  {
    "API": "mailmanager:ListAddonInstances",
    "EventSource": "mailmanager",
    "EventName": "ListAddonInstances",
    "Description": "Lists all Add On instances in your account"
  },
  {
    "API": "mailmanager:ListAddonSubscriptions",
    "EventSource": "mailmanager",
    "EventName": "ListAddonSubscriptions",
    "Description": "Lists all Add On subscriptions in your account"
  },
  {
    "API": "mailmanager:ListArchiveExports",
    "EventSource": "mailmanager",
    "EventName": "ListArchiveExports",
    "Description": "Returns a list of email archive export jobs"
  },
  {
    "API": "mailmanager:ListArchiveSearches",
    "EventSource": "mailmanager",
    "EventName": "ListArchiveSearches",
    "Description": "Returns a list of email archive search jobs"
  },
  {
    "API": "mailmanager:ListArchives",
    "EventSource": "mailmanager",
    "EventName": "ListArchives",
    "Description": "Returns a list of all email archives in your account"
  },
  {
    "API": "mailmanager:ListIngressPoints",
    "EventSource": "mailmanager",
    "EventName": "ListIngressPoints",
    "Description": "List all ingress endpoint resources"
  },
  {
    "API": "mailmanager:ListRelays",
    "EventSource": "mailmanager",
    "EventName": "ListRelays",
    "Description": "Lists all the existing relay resources"
  },
  {
    "API": "mailmanager:ListRuleSets",
    "EventSource": "mailmanager",
    "EventName": "ListRuleSets",
    "Description": "List rule sets for this account"
  },
  {
    "API": "mailmanager:ListTagsForResource",
    "EventSource": "mailmanager",
    "EventName": "ListTagsForResource",
    "Description": "Retrieves the list of tags (keys and values) assigned to the resource"
  },
  {
    "API": "mailmanager:ListTrafficPolicies",
    "EventSource": "mailmanager",
    "EventName": "ListTrafficPolicies",
    "Description": "List traffic policy resources"
  },
  {
    "API": "mailmanager:StartArchiveExport",
    "EventSource": "mailmanager",
    "EventName": "StartArchiveExport",
    "Description": "Initiates an export of emails from the specified archive"
  },
  {
    "API": "mailmanager:StartArchiveSearch",
    "EventSource": "mailmanager",
    "EventName": "StartArchiveSearch",
    "Description": "Initiates a search across emails in the specified archive"
  },
  {
    "API": "mailmanager:StopArchiveExport",
    "EventSource": "mailmanager",
    "EventName": "StopArchiveExport",
    "Description": "Stops an in-progress export of emails from an archive"
  },
  {
    "API": "mailmanager:StopArchiveSearch",
    "EventSource": "mailmanager",
    "EventName": "StopArchiveSearch",
    "Description": "Stops an in-progress archive search job"
  },
  {
    "API": "mailmanager:TagResource",
    "EventSource": "mailmanager",
    "EventName": "TagResource",
    "Description": "Adds one or more tags (keys and values) to a specified resource"
  },
  {
    "API": "mailmanager:UntagResource",
    "EventSource": "mailmanager",
    "EventName": "UntagResource",
    "Description": "Remove one or more tags (keys and values) from a specified resource"
  },
  {
    "API": "mailmanager:UpdateArchive",
    "EventSource": "mailmanager",
    "EventName": "UpdateArchive",
    "Description": "Updates the attributes of an existing email archive"
  },
  {
    "API": "mailmanager:UpdateIngressPoint",
    "EventSource": "mailmanager",
    "EventName": "UpdateIngressPoint",
    "Description": "Update attributes of a provisioned ingress endpoint resource"
  },
  {
    "API": "mailmanager:UpdateRelay",
    "EventSource": "mailmanager",
    "EventName": "UpdateRelay",
    "Description": "Updates the attributes of an existing relay resource"
  },
  {
    "API": "mailmanager:UpdateRuleSet",
    "EventSource": "mailmanager",
    "EventName": "UpdateRuleSet",
    "Description": ">Update attributes of an already provisioned rule set"
  },
  {
    "API": "mailmanager:UpdateTrafficPolicy",
    "EventSource": "mailmanager",
    "EventName": "UpdateTrafficPolicy",
    "Description": "Update attributes of an already provisioned traffic policy resource"
  },
  {
    "API": "managedblockchain:CreateAccessor",
    "EventSource": "managedblockchain",
    "EventName": "CreateAccessor",
    "Description": "Creates a new accessor for use with Amazon Managed Blockchain service that supports token based access"
  },
  {
    "API": "managedblockchain:CreateMember",
    "EventSource": "managedblockchain",
    "EventName": "CreateMember",
    "Description": "Creates a member within a Managed Blockchain network"
  },
  {
    "API": "managedblockchain:CreateNetwork",
    "EventSource": "managedblockchain",
    "EventName": "CreateNetwork",
    "Description": "Creates a new blockchain network using Amazon Managed Blockchain"
  },
  {
    "API": "managedblockchain:CreateNode",
    "EventSource": "managedblockchain",
    "EventName": "CreateNode",
    "Description": "Creates a node on the specified blockchain network"
  },
  {
    "API": "managedblockchain:CreateProposal",
    "EventSource": "managedblockchain",
    "EventName": "CreateProposal",
    "Description": "Creates a proposal for a change to the network that other members of the network can vote on, for example, a proposal to add a new member to the network"
  },
  {
    "API": "managedblockchain:DeleteAccessor",
    "EventSource": "managedblockchain",
    "EventName": "DeleteAccessor",
    "Description": "Deletes an accessor that your Amazon Web Services account owns"
  },
  {
    "API": "managedblockchain:DeleteMember",
    "EventSource": "managedblockchain",
    "EventName": "DeleteMember",
    "Description": "Deletes a member"
  },
  {
    "API": "managedblockchain:DeleteNode",
    "EventSource": "managedblockchain",
    "EventName": "DeleteNode",
    "Description": "Deletes a node that your Amazon Web Services account owns"
  },
  {
    "API": "managedblockchain:GeneratePresignedUrl",
    "EventSource": "managedblockchain",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "managedblockchain:GetAccessor",
    "EventSource": "managedblockchain",
    "EventName": "GetAccessor",
    "Description": "Returns detailed information about an accessor"
  },
  {
    "API": "managedblockchain:GetMember",
    "EventSource": "managedblockchain",
    "EventName": "GetMember",
    "Description": "Returns detailed information about a member"
  },
  {
    "API": "managedblockchain:GetNetwork",
    "EventSource": "managedblockchain",
    "EventName": "GetNetwork",
    "Description": "Returns detailed information about a network"
  },
  {
    "API": "managedblockchain:GetNode",
    "EventSource": "managedblockchain",
    "EventName": "GetNode",
    "Description": "Returns detailed information about a node"
  },
  {
    "API": "managedblockchain:GetProposal",
    "EventSource": "managedblockchain",
    "EventName": "GetProposal",
    "Description": "Returns detailed information about a proposal"
  },
  {
    "API": "managedblockchain:ListAccessors",
    "EventSource": "managedblockchain",
    "EventName": "ListAccessors",
    "Description": "Returns a list of the accessors and their properties"
  },
  {
    "API": "managedblockchain:ListInvitations",
    "EventSource": "managedblockchain",
    "EventName": "ListInvitations",
    "Description": "Returns a list of all invitations for the current Amazon Web Services account"
  },
  {
    "API": "managedblockchain:ListMembers",
    "EventSource": "managedblockchain",
    "EventName": "ListMembers",
    "Description": "Returns a list of the members in a network and properties of their configurations"
  },
  {
    "API": "managedblockchain:ListNetworks",
    "EventSource": "managedblockchain",
    "EventName": "ListNetworks",
    "Description": "Returns information about the networks in which the current Amazon Web Services account participates"
  },
  {
    "API": "managedblockchain:ListNodes",
    "EventSource": "managedblockchain",
    "EventName": "ListNodes",
    "Description": "Returns information about the nodes within a network"
  },
  {
    "API": "managedblockchain:ListProposalVotes",
    "EventSource": "managedblockchain",
    "EventName": "ListProposalVotes",
    "Description": "Returns the list of votes for a specified proposal, including the value of each vote and the unique identifier of the member that cast the vote"
  },
  {
    "API": "managedblockchain:ListProposals",
    "EventSource": "managedblockchain",
    "EventName": "ListProposals",
    "Description": "Returns a list of proposals for the network"
  },
  {
    "API": "managedblockchain:ListTagsForResource",
    "EventSource": "managedblockchain",
    "EventName": "ListTagsForResource",
    "Description": "Returns a list of tags for the specified resource"
  },
  {
    "API": "managedblockchain:RejectInvitation",
    "EventSource": "managedblockchain",
    "EventName": "RejectInvitation",
    "Description": "Rejects an invitation to join a network"
  },
  {
    "API": "managedblockchain:TagResource",
    "EventSource": "managedblockchain",
    "EventName": "TagResource",
    "Description": "Adds or overwrites the specified tags for the specified Amazon Managed Blockchain resource"
  },
  {
    "API": "managedblockchain:UntagResource",
    "EventSource": "managedblockchain",
    "EventName": "UntagResource",
    "Description": "Removes the specified tags from the Amazon Managed Blockchain resource"
  },
  {
    "API": "managedblockchain:UpdateMember",
    "EventSource": "managedblockchain",
    "EventName": "UpdateMember",
    "Description": "Updates a member configuration with new parameters"
  },
  {
    "API": "managedblockchain:UpdateNode",
    "EventSource": "managedblockchain",
    "EventName": "UpdateNode",
    "Description": "Updates a node configuration with new parameters"
  },
  {
    "API": "managedblockchain:VoteOnProposal",
    "EventSource": "managedblockchain",
    "EventName": "VoteOnProposal",
    "Description": "Casts a vote for a specified ``ProposalId`` on behalf of a member"
  },
  {
    "API": "managedblockchain-query:BatchGetTokenBalance",
    "EventSource": "managedblockchain-query",
    "EventName": "BatchGetTokenBalance",
    "Description": "Gets the token balance for a batch of tokens by using the ``BatchGetTokenBalance`` action for every token in the request"
  },
  {
    "API": "managedblockchain-query:GeneratePresignedUrl",
    "EventSource": "managedblockchain-query",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "managedblockchain-query:GetAssetContract",
    "EventSource": "managedblockchain-query",
    "EventName": "GetAssetContract",
    "Description": "Gets the information about a specific contract deployed on the blockchain"
  },
  {
    "API": "managedblockchain-query:GetTokenBalance",
    "EventSource": "managedblockchain-query",
    "EventName": "GetTokenBalance",
    "Description": "Gets the balance of a specific token, including native tokens, for a given address (wallet or contract) on the blockchain"
  },
  {
    "API": "managedblockchain-query:GetTransaction",
    "EventSource": "managedblockchain-query",
    "EventName": "GetTransaction",
    "Description": "Gets the details of a transaction"
  },
  {
    "API": "managedblockchain-query:ListAssetContracts",
    "EventSource": "managedblockchain-query",
    "EventName": "ListAssetContracts",
    "Description": "Lists all the contracts for a given contract type deployed by an address (either a contract address or a wallet address)"
  },
  {
    "API": "managedblockchain-query:ListFilteredTransactionEvents",
    "EventSource": "managedblockchain-query",
    "EventName": "ListFilteredTransactionEvents",
    "Description": "Lists all the transaction events for an address on the blockchain"
  },
  {
    "API": "managedblockchain-query:ListTokenBalances",
    "EventSource": "managedblockchain-query",
    "EventName": "ListTokenBalances",
    "Description": "This action returns the following for a given blockchain network:"
  },
  {
    "API": "managedblockchain-query:ListTransactionEvents",
    "EventSource": "managedblockchain-query",
    "EventName": "ListTransactionEvents",
    "Description": "Lists all the transaction events for a transaction"
  },
  {
    "API": "managedblockchain-query:ListTransactions",
    "EventSource": "managedblockchain-query",
    "EventName": "ListTransactions",
    "Description": "Lists all the transaction events for a transaction"
  },
  {
    "API": "marketplace-agreement:DescribeAgreement",
    "EventSource": "marketplace-agreement",
    "EventName": "DescribeAgreement",
    "Description": "Provides details about an agreement, such as the proposer, acceptor, start date, and end date"
  },
  {
    "API": "marketplace-agreement:GeneratePresignedUrl",
    "EventSource": "marketplace-agreement",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "marketplace-agreement:GetAgreementTerms",
    "EventSource": "marketplace-agreement",
    "EventName": "GetAgreementTerms",
    "Description": "Obtains details about the terms in an agreement that you participated in as proposer or acceptor"
  },
  {
    "API": "marketplace-agreement:SearchAgreements",
    "EventSource": "marketplace-agreement",
    "EventName": "SearchAgreements",
    "Description": "Searches across all agreements that a proposer or an acceptor has in AWS Marketplace"
  },
  {
    "API": "marketplace-catalog:BatchDescribeEntities",
    "EventSource": "marketplace-catalog",
    "EventName": "BatchDescribeEntities",
    "Description": "Returns metadata and content for multiple entities"
  },
  {
    "API": "marketplace-catalog:CancelChangeSet",
    "EventSource": "marketplace-catalog",
    "EventName": "CancelChangeSet",
    "Description": "Used to cancel an open change request"
  },
  {
    "API": "marketplace-catalog:DeleteResourcePolicy",
    "EventSource": "marketplace-catalog",
    "EventName": "DeleteResourcePolicy",
    "Description": "Deletes a resource-based policy on an entity that is identified by its resource ARN"
  },
  {
    "API": "marketplace-catalog:DescribeChangeSet",
    "EventSource": "marketplace-catalog",
    "EventName": "DescribeChangeSet",
    "Description": "Provides information about a given change set"
  },
  {
    "API": "marketplace-catalog:DescribeEntity",
    "EventSource": "marketplace-catalog",
    "EventName": "DescribeEntity",
    "Description": "Returns the metadata and content of the entity"
  },
  {
    "API": "marketplace-catalog:GeneratePresignedUrl",
    "EventSource": "marketplace-catalog",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "marketplace-catalog:GetResourcePolicy",
    "EventSource": "marketplace-catalog",
    "EventName": "GetResourcePolicy",
    "Description": "Gets a resource-based policy of an entity that is identified by its resource ARN"
  },
  {
    "API": "marketplace-catalog:ListChangeSets",
    "EventSource": "marketplace-catalog",
    "EventName": "ListChangeSets",
    "Description": "Returns the list of change sets owned by the account being used to make the call"
  },
  {
    "API": "marketplace-catalog:ListEntities",
    "EventSource": "marketplace-catalog",
    "EventName": "ListEntities",
    "Description": "Provides the list of entities of a given type"
  },
  {
    "API": "marketplace-catalog:ListTagsForResource",
    "EventSource": "marketplace-catalog",
    "EventName": "ListTagsForResource",
    "Description": "Lists all tags that have been added to a resource (either an `entity <https://docs"
  },
  {
    "API": "marketplace-catalog:PutResourcePolicy",
    "EventSource": "marketplace-catalog",
    "EventName": "PutResourcePolicy",
    "Description": "Attaches a resource-based policy to an entity"
  },
  {
    "API": "marketplace-catalog:StartChangeSet",
    "EventSource": "marketplace-catalog",
    "EventName": "StartChangeSet",
    "Description": "Allows you to request changes for your entities"
  },
  {
    "API": "marketplace-catalog:TagResource",
    "EventSource": "marketplace-catalog",
    "EventName": "TagResource",
    "Description": "Tags a resource (either an `entity <https://docs"
  },
  {
    "API": "marketplace-catalog:UntagResource",
    "EventSource": "marketplace-catalog",
    "EventName": "UntagResource",
    "Description": "Removes a tag or list of tags from a resource (either an `entity <https://docs"
  },
  {
    "API": "marketplace-deployment:GeneratePresignedUrl",
    "EventSource": "marketplace-deployment",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "marketplace-deployment:ListTagsForResource",
    "EventSource": "marketplace-deployment",
    "EventName": "ListTagsForResource",
    "Description": "Lists all tags that have been added to a deployment parameter resource"
  },
  {
    "API": "marketplace-deployment:PutDeploymentParameter",
    "EventSource": "marketplace-deployment",
    "EventName": "PutDeploymentParameter",
    "Description": "Creates or updates a deployment parameter and is targeted by ``catalog`` and ``agreementId``"
  },
  {
    "API": "marketplace-deployment:TagResource",
    "EventSource": "marketplace-deployment",
    "EventName": "TagResource",
    "Description": "Tags a resource"
  },
  {
    "API": "marketplace-deployment:UntagResource",
    "EventSource": "marketplace-deployment",
    "EventName": "UntagResource",
    "Description": "Removes a tag or list of tags from a resource"
  },
  {
    "API": "marketplace-entitlement:GeneratePresignedUrl",
    "EventSource": "marketplace-entitlement",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "marketplace-entitlement:GetEntitlements",
    "EventSource": "marketplace-entitlement",
    "EventName": "GetEntitlements",
    "Description": "GetEntitlements retrieves entitlement values for a given product"
  },
  {
    "API": "marketplacecommerceanalytics:GenerateDataSet",
    "EventSource": "marketplacecommerceanalytics",
    "EventName": "GenerateDataSet",
    "Description": "Given a data set type and data set publication date, asynchronously publishes the requested data set to the specified S3 bucket and notifies the specified SNS topic once the data is available"
  },
  {
    "API": "marketplacecommerceanalytics:GeneratePresignedUrl",
    "EventSource": "marketplacecommerceanalytics",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "marketplacecommerceanalytics:StartSupportDataExport",
    "EventSource": "marketplacecommerceanalytics",
    "EventName": "StartSupportDataExport",
    "Description": "*This target has been deprecated"
  },
  {
    "API": "mediaconnect:AddBridgeOutputs",
    "EventSource": "mediaconnect",
    "EventName": "AddBridgeOutputs",
    "Description": "Adds outputs to an existing bridge"
  },
  {
    "API": "mediaconnect:AddBridgeSources",
    "EventSource": "mediaconnect",
    "EventName": "AddBridgeSources",
    "Description": "Adds sources to an existing bridge"
  },
  {
    "API": "mediaconnect:AddFlowMediaStreams",
    "EventSource": "mediaconnect",
    "EventName": "AddFlowMediaStreams",
    "Description": "Adds media streams to an existing flow"
  },
  {
    "API": "mediaconnect:AddFlowOutputs",
    "EventSource": "mediaconnect",
    "EventName": "AddFlowOutputs",
    "Description": "Adds outputs to an existing flow"
  },
  {
    "API": "mediaconnect:AddFlowSources",
    "EventSource": "mediaconnect",
    "EventName": "AddFlowSources",
    "Description": "Adds Sources to flow"
  },
  {
    "API": "mediaconnect:AddFlowVpcInterfaces",
    "EventSource": "mediaconnect",
    "EventName": "AddFlowVpcInterfaces",
    "Description": "Adds VPC interfaces to flow"
  },
  {
    "API": "mediaconnect:CreateBridge",
    "EventSource": "mediaconnect",
    "EventName": "CreateBridge",
    "Description": "Creates a new bridge"
  },
  {
    "API": "mediaconnect:CreateFlow",
    "EventSource": "mediaconnect",
    "EventName": "CreateFlow",
    "Description": "Creates a new flow"
  },
  {
    "API": "mediaconnect:CreateGateway",
    "EventSource": "mediaconnect",
    "EventName": "CreateGateway",
    "Description": "Creates a new gateway"
  },
  {
    "API": "mediaconnect:DeleteBridge",
    "EventSource": "mediaconnect",
    "EventName": "DeleteBridge",
    "Description": "Deletes a bridge"
  },
  {
    "API": "mediaconnect:DeleteFlow",
    "EventSource": "mediaconnect",
    "EventName": "DeleteFlow",
    "Description": "Deletes a flow"
  },
  {
    "API": "mediaconnect:DeleteGateway",
    "EventSource": "mediaconnect",
    "EventName": "DeleteGateway",
    "Description": "Deletes a gateway"
  },
  {
    "API": "mediaconnect:DeregisterGatewayInstance",
    "EventSource": "mediaconnect",
    "EventName": "DeregisterGatewayInstance",
    "Description": "Deregisters an instance"
  },
  {
    "API": "mediaconnect:DescribeBridge",
    "EventSource": "mediaconnect",
    "EventName": "DescribeBridge",
    "Description": "Displays the details of a bridge"
  },
  {
    "API": "mediaconnect:DescribeFlow",
    "EventSource": "mediaconnect",
    "EventName": "DescribeFlow",
    "Description": "Displays the details of a flow"
  },
  {
    "API": "mediaconnect:DescribeFlowSourceMetadata",
    "EventSource": "mediaconnect",
    "EventName": "DescribeFlowSourceMetadata",
    "Description": "Displays details of the flow's source stream"
  },
  {
    "API": "mediaconnect:DescribeGateway",
    "EventSource": "mediaconnect",
    "EventName": "DescribeGateway",
    "Description": "Displays the details of a gateway"
  },
  {
    "API": "mediaconnect:DescribeGatewayInstance",
    "EventSource": "mediaconnect",
    "EventName": "DescribeGatewayInstance",
    "Description": "Displays the details of an instance"
  },
  {
    "API": "mediaconnect:DescribeOffering",
    "EventSource": "mediaconnect",
    "EventName": "DescribeOffering",
    "Description": "Displays the details of an offering"
  },
  {
    "API": "mediaconnect:DescribeReservation",
    "EventSource": "mediaconnect",
    "EventName": "DescribeReservation",
    "Description": "Displays the details of a reservation"
  },
  {
    "API": "mediaconnect:GeneratePresignedUrl",
    "EventSource": "mediaconnect",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "mediaconnect:GrantFlowEntitlements",
    "EventSource": "mediaconnect",
    "EventName": "GrantFlowEntitlements",
    "Description": "Grants entitlements to an existing flow"
  },
  {
    "API": "mediaconnect:ListBridges",
    "EventSource": "mediaconnect",
    "EventName": "ListBridges",
    "Description": "Displays a list of bridges that are associated with this account and an optionally specified Arn"
  },
  {
    "API": "mediaconnect:ListEntitlements",
    "EventSource": "mediaconnect",
    "EventName": "ListEntitlements",
    "Description": "Displays a list of all entitlements that have been granted to this account"
  },
  {
    "API": "mediaconnect:ListFlows",
    "EventSource": "mediaconnect",
    "EventName": "ListFlows",
    "Description": "Displays a list of flows that are associated with this account"
  },
  {
    "API": "mediaconnect:ListGatewayInstances",
    "EventSource": "mediaconnect",
    "EventName": "ListGatewayInstances",
    "Description": "Displays a list of instances associated with the AWS account"
  },
  {
    "API": "mediaconnect:ListGateways",
    "EventSource": "mediaconnect",
    "EventName": "ListGateways",
    "Description": "Displays a list of gateways that are associated with this account"
  },
  {
    "API": "mediaconnect:ListOfferings",
    "EventSource": "mediaconnect",
    "EventName": "ListOfferings",
    "Description": "Displays a list of all offerings that are available to this account in the current AWS Region"
  },
  {
    "API": "mediaconnect:ListReservations",
    "EventSource": "mediaconnect",
    "EventName": "ListReservations",
    "Description": "Displays a list of all reservations that have been purchased by this account in the current AWS Region"
  },
  {
    "API": "mediaconnect:ListTagsForResource",
    "EventSource": "mediaconnect",
    "EventName": "ListTagsForResource",
    "Description": "List all tags on an AWS Elemental MediaConnect resource"
  },
  {
    "API": "mediaconnect:PurchaseOffering",
    "EventSource": "mediaconnect",
    "EventName": "PurchaseOffering",
    "Description": "Submits a request to purchase an offering"
  },
  {
    "API": "mediaconnect:RemoveBridgeOutput",
    "EventSource": "mediaconnect",
    "EventName": "RemoveBridgeOutput",
    "Description": "Removes an output from a bridge"
  },
  {
    "API": "mediaconnect:RemoveBridgeSource",
    "EventSource": "mediaconnect",
    "EventName": "RemoveBridgeSource",
    "Description": "Removes a source from a bridge"
  },
  {
    "API": "mediaconnect:RemoveFlowMediaStream",
    "EventSource": "mediaconnect",
    "EventName": "RemoveFlowMediaStream",
    "Description": "Removes a media stream from a flow"
  },
  {
    "API": "mediaconnect:RemoveFlowOutput",
    "EventSource": "mediaconnect",
    "EventName": "RemoveFlowOutput",
    "Description": "Removes an output from an existing flow"
  },
  {
    "API": "mediaconnect:RemoveFlowSource",
    "EventSource": "mediaconnect",
    "EventName": "RemoveFlowSource",
    "Description": "Removes a source from an existing flow"
  },
  {
    "API": "mediaconnect:RemoveFlowVpcInterface",
    "EventSource": "mediaconnect",
    "EventName": "RemoveFlowVpcInterface",
    "Description": "Removes a VPC Interface from an existing flow"
  },
  {
    "API": "mediaconnect:RevokeFlowEntitlement",
    "EventSource": "mediaconnect",
    "EventName": "RevokeFlowEntitlement",
    "Description": "Revokes an entitlement from a flow"
  },
  {
    "API": "mediaconnect:StartFlow",
    "EventSource": "mediaconnect",
    "EventName": "StartFlow",
    "Description": "Starts a flow"
  },
  {
    "API": "mediaconnect:StopFlow",
    "EventSource": "mediaconnect",
    "EventName": "StopFlow",
    "Description": "Stops a flow"
  },
  {
    "API": "mediaconnect:TagResource",
    "EventSource": "mediaconnect",
    "EventName": "TagResource",
    "Description": "Associates the specified tags to a resource with the specified resourceArn"
  },
  {
    "API": "mediaconnect:UntagResource",
    "EventSource": "mediaconnect",
    "EventName": "UntagResource",
    "Description": "Deletes specified tags from a resource"
  },
  {
    "API": "mediaconnect:UpdateBridge",
    "EventSource": "mediaconnect",
    "EventName": "UpdateBridge",
    "Description": "Updates the bridge"
  },
  {
    "API": "mediaconnect:UpdateBridgeOutput",
    "EventSource": "mediaconnect",
    "EventName": "UpdateBridgeOutput",
    "Description": "Updates an existing bridge output"
  },
  {
    "API": "mediaconnect:UpdateBridgeSource",
    "EventSource": "mediaconnect",
    "EventName": "UpdateBridgeSource",
    "Description": "Updates an existing bridge source"
  },
  {
    "API": "mediaconnect:UpdateBridgeState",
    "EventSource": "mediaconnect",
    "EventName": "UpdateBridgeState",
    "Description": "Updates the bridge state"
  },
  {
    "API": "mediaconnect:UpdateFlow",
    "EventSource": "mediaconnect",
    "EventName": "UpdateFlow",
    "Description": "Updates flow"
  },
  {
    "API": "mediaconnect:UpdateFlowEntitlement",
    "EventSource": "mediaconnect",
    "EventName": "UpdateFlowEntitlement",
    "Description": "You can change an entitlement's description, subscribers, and encryption"
  },
  {
    "API": "mediaconnect:UpdateFlowMediaStream",
    "EventSource": "mediaconnect",
    "EventName": "UpdateFlowMediaStream",
    "Description": "Updates an existing media stream"
  },
  {
    "API": "mediaconnect:UpdateFlowOutput",
    "EventSource": "mediaconnect",
    "EventName": "UpdateFlowOutput",
    "Description": "Updates an existing flow output"
  },
  {
    "API": "mediaconnect:UpdateFlowSource",
    "EventSource": "mediaconnect",
    "EventName": "UpdateFlowSource",
    "Description": "Updates the source of a flow"
  },
  {
    "API": "mediaconnect:UpdateGatewayInstance",
    "EventSource": "mediaconnect",
    "EventName": "UpdateGatewayInstance",
    "Description": "Updates the configuration of an existing Gateway Instance"
  },
  {
    "API": "mediaconvert:AssociateCertificate",
    "EventSource": "mediaconvert",
    "EventName": "AssociateCertificate",
    "Description": "Associates an AWS Certificate Manager (ACM) Amazon Resource Name (ARN) with AWS Elemental MediaConvert"
  },
  {
    "API": "mediaconvert:CancelJob",
    "EventSource": "mediaconvert",
    "EventName": "CancelJob",
    "Description": "Permanently cancel a job"
  },
  {
    "API": "mediaconvert:CreateJob",
    "EventSource": "mediaconvert",
    "EventName": "CreateJob",
    "Description": "Create a new transcoding job"
  },
  {
    "API": "mediaconvert:CreateJobTemplate",
    "EventSource": "mediaconvert",
    "EventName": "CreateJobTemplate",
    "Description": "Create a new job template"
  },
  {
    "API": "mediaconvert:CreatePreset",
    "EventSource": "mediaconvert",
    "EventName": "CreatePreset",
    "Description": "Create a new preset"
  },
  {
    "API": "mediaconvert:CreateQueue",
    "EventSource": "mediaconvert",
    "EventName": "CreateQueue",
    "Description": "Create a new transcoding queue"
  },
  {
    "API": "mediaconvert:DeleteJobTemplate",
    "EventSource": "mediaconvert",
    "EventName": "DeleteJobTemplate",
    "Description": "Permanently delete a job template you have created"
  },
  {
    "API": "mediaconvert:DeletePolicy",
    "EventSource": "mediaconvert",
    "EventName": "DeletePolicy",
    "Description": "Permanently delete a policy that you created"
  },
  {
    "API": "mediaconvert:DeletePreset",
    "EventSource": "mediaconvert",
    "EventName": "DeletePreset",
    "Description": "Permanently delete a preset you have created"
  },
  {
    "API": "mediaconvert:DeleteQueue",
    "EventSource": "mediaconvert",
    "EventName": "DeleteQueue",
    "Description": "Permanently delete a queue you have created"
  },
  {
    "API": "mediaconvert:DescribeEndpoints",
    "EventSource": "mediaconvert",
    "EventName": "DescribeEndpoints",
    "Description": "Send a request with an empty body to the regional API endpoint to get your account API endpoint"
  },
  {
    "API": "mediaconvert:DisassociateCertificate",
    "EventSource": "mediaconvert",
    "EventName": "DisassociateCertificate",
    "Description": "Removes an association between the Amazon Resource Name (ARN) of an AWS Certificate Manager (ACM) certificate and an AWS Elemental MediaConvert resource"
  },
  {
    "API": "mediaconvert:GeneratePresignedUrl",
    "EventSource": "mediaconvert",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "mediaconvert:GetJob",
    "EventSource": "mediaconvert",
    "EventName": "GetJob",
    "Description": "Retrieve the JSON for a specific transcoding job"
  },
  {
    "API": "mediaconvert:GetJobTemplate",
    "EventSource": "mediaconvert",
    "EventName": "GetJobTemplate",
    "Description": "Retrieve the JSON for a specific job template"
  },
  {
    "API": "mediaconvert:GetPolicy",
    "EventSource": "mediaconvert",
    "EventName": "GetPolicy",
    "Description": "Retrieve the JSON for your policy"
  },
  {
    "API": "mediaconvert:GetPreset",
    "EventSource": "mediaconvert",
    "EventName": "GetPreset",
    "Description": "Retrieve the JSON for a specific preset"
  },
  {
    "API": "mediaconvert:GetQueue",
    "EventSource": "mediaconvert",
    "EventName": "GetQueue",
    "Description": "Retrieve the JSON for a specific queue"
  },
  {
    "API": "mediaconvert:ListJobTemplates",
    "EventSource": "mediaconvert",
    "EventName": "ListJobTemplates",
    "Description": "Retrieve a JSON array of up to twenty of your job templates"
  },
  {
    "API": "mediaconvert:ListJobs",
    "EventSource": "mediaconvert",
    "EventName": "ListJobs",
    "Description": "Retrieve a JSON array of up to twenty of your most recently created jobs"
  },
  {
    "API": "mediaconvert:ListPresets",
    "EventSource": "mediaconvert",
    "EventName": "ListPresets",
    "Description": "Retrieve a JSON array of up to twenty of your presets"
  },
  {
    "API": "mediaconvert:ListQueues",
    "EventSource": "mediaconvert",
    "EventName": "ListQueues",
    "Description": "Retrieve a JSON array of up to twenty of your queues"
  },
  {
    "API": "mediaconvert:ListTagsForResource",
    "EventSource": "mediaconvert",
    "EventName": "ListTagsForResource",
    "Description": "Retrieve the tags for a MediaConvert resource"
  },
  {
    "API": "mediaconvert:PutPolicy",
    "EventSource": "mediaconvert",
    "EventName": "PutPolicy",
    "Description": "Create or change your policy"
  },
  {
    "API": "mediaconvert:SearchJobs",
    "EventSource": "mediaconvert",
    "EventName": "SearchJobs",
    "Description": "Retrieve a JSON array that includes job details for up to twenty of your most recent jobs"
  },
  {
    "API": "mediaconvert:TagResource",
    "EventSource": "mediaconvert",
    "EventName": "TagResource",
    "Description": "Add tags to a MediaConvert queue, preset, or job template"
  },
  {
    "API": "mediaconvert:UntagResource",
    "EventSource": "mediaconvert",
    "EventName": "UntagResource",
    "Description": "Remove tags from a MediaConvert queue, preset, or job template"
  },
  {
    "API": "mediaconvert:UpdateJobTemplate",
    "EventSource": "mediaconvert",
    "EventName": "UpdateJobTemplate",
    "Description": "Modify one of your existing job templates"
  },
  {
    "API": "mediaconvert:UpdatePreset",
    "EventSource": "mediaconvert",
    "EventName": "UpdatePreset",
    "Description": "Modify one of your existing presets"
  },
  {
    "API": "mediaconvert:UpdateQueue",
    "EventSource": "mediaconvert",
    "EventName": "UpdateQueue",
    "Description": "Modify one of your existing queues"
  },
  {
    "API": "medialive:AcceptInputDeviceTransfer",
    "EventSource": "medialive",
    "EventName": "AcceptInputDeviceTransfer",
    "Description": "Accept an incoming input device transfer"
  },
  {
    "API": "medialive:BatchDelete",
    "EventSource": "medialive",
    "EventName": "BatchDelete",
    "Description": "Starts delete of resources"
  },
  {
    "API": "medialive:BatchStart",
    "EventSource": "medialive",
    "EventName": "BatchStart",
    "Description": "Starts existing resources"
  },
  {
    "API": "medialive:BatchStop",
    "EventSource": "medialive",
    "EventName": "BatchStop",
    "Description": "Stops running resources"
  },
  {
    "API": "medialive:BatchUpdateSchedule",
    "EventSource": "medialive",
    "EventName": "BatchUpdateSchedule",
    "Description": "Update a channel schedule"
  },
  {
    "API": "medialive:CancelInputDeviceTransfer",
    "EventSource": "medialive",
    "EventName": "CancelInputDeviceTransfer",
    "Description": "Cancel an input device transfer that you have requested"
  },
  {
    "API": "medialive:ClaimDevice",
    "EventSource": "medialive",
    "EventName": "ClaimDevice",
    "Description": "Send a request to claim an AWS Elemental device that you have purchased from a third-party vendor"
  },
  {
    "API": "medialive:CreateChannel",
    "EventSource": "medialive",
    "EventName": "CreateChannel",
    "Description": "Creates a new channel"
  },
  {
    "API": "medialive:CreateCloudWatchAlarmTemplate",
    "EventSource": "medialive",
    "EventName": "CreateCloudWatchAlarmTemplate",
    "Description": "Creates a cloudwatch alarm template to dynamically generate cloudwatch metric alarms on targeted resource types"
  },
  {
    "API": "medialive:CreateCloudWatchAlarmTemplateGroup",
    "EventSource": "medialive",
    "EventName": "CreateCloudWatchAlarmTemplateGroup",
    "Description": "Creates a cloudwatch alarm template group to group your cloudwatch alarm templates and to attach to signal maps for dynamically creating alarms"
  },
  {
    "API": "medialive:CreateEventBridgeRuleTemplate",
    "EventSource": "medialive",
    "EventName": "CreateEventBridgeRuleTemplate",
    "Description": "Creates an eventbridge rule template to monitor events and send notifications to your targeted resources"
  },
  {
    "API": "medialive:CreateEventBridgeRuleTemplateGroup",
    "EventSource": "medialive",
    "EventName": "CreateEventBridgeRuleTemplateGroup",
    "Description": "Creates an eventbridge rule template group to group your eventbridge rule templates and to attach to signal maps for dynamically creating notification rules"
  },
  {
    "API": "medialive:CreateInput",
    "EventSource": "medialive",
    "EventName": "CreateInput",
    "Description": "Create an input"
  },
  {
    "API": "medialive:CreateInputSecurityGroup",
    "EventSource": "medialive",
    "EventName": "CreateInputSecurityGroup",
    "Description": "Creates a Input Security Group"
  },
  {
    "API": "medialive:CreateMultiplex",
    "EventSource": "medialive",
    "EventName": "CreateMultiplex",
    "Description": "Create a new multiplex"
  },
  {
    "API": "medialive:CreateMultiplexProgram",
    "EventSource": "medialive",
    "EventName": "CreateMultiplexProgram",
    "Description": "Create a new program in the multiplex"
  },
  {
    "API": "medialive:CreatePartnerInput",
    "EventSource": "medialive",
    "EventName": "CreatePartnerInput",
    "Description": "Create a partner input"
  },
  {
    "API": "medialive:CreateSignalMap",
    "EventSource": "medialive",
    "EventName": "CreateSignalMap",
    "Description": "Initiates the creation of a new signal map"
  },
  {
    "API": "medialive:CreateTags",
    "EventSource": "medialive",
    "EventName": "CreateTags",
    "Description": "Create tags for a resource"
  },
  {
    "API": "medialive:DeleteChannel",
    "EventSource": "medialive",
    "EventName": "DeleteChannel",
    "Description": "Starts deletion of channel"
  },
  {
    "API": "medialive:DeleteCloudWatchAlarmTemplate",
    "EventSource": "medialive",
    "EventName": "DeleteCloudWatchAlarmTemplate",
    "Description": "Deletes a cloudwatch alarm template"
  },
  {
    "API": "medialive:DeleteCloudWatchAlarmTemplateGroup",
    "EventSource": "medialive",
    "EventName": "DeleteCloudWatchAlarmTemplateGroup",
    "Description": "Deletes a cloudwatch alarm template group"
  },
  {
    "API": "medialive:DeleteEventBridgeRuleTemplate",
    "EventSource": "medialive",
    "EventName": "DeleteEventBridgeRuleTemplate",
    "Description": "Deletes an eventbridge rule template"
  },
  {
    "API": "medialive:DeleteEventBridgeRuleTemplateGroup",
    "EventSource": "medialive",
    "EventName": "DeleteEventBridgeRuleTemplateGroup",
    "Description": "Deletes an eventbridge rule template group"
  },
  {
    "API": "medialive:DeleteInput",
    "EventSource": "medialive",
    "EventName": "DeleteInput",
    "Description": "Deletes the input end point"
  },
  {
    "API": "medialive:DeleteInputSecurityGroup",
    "EventSource": "medialive",
    "EventName": "DeleteInputSecurityGroup",
    "Description": "Deletes an Input Security Group"
  },
  {
    "API": "medialive:DeleteMultiplex",
    "EventSource": "medialive",
    "EventName": "DeleteMultiplex",
    "Description": "Delete a multiplex"
  },
  {
    "API": "medialive:DeleteMultiplexProgram",
    "EventSource": "medialive",
    "EventName": "DeleteMultiplexProgram",
    "Description": "Delete a program from a multiplex"
  },
  {
    "API": "medialive:DeleteReservation",
    "EventSource": "medialive",
    "EventName": "DeleteReservation",
    "Description": "Delete an expired reservation"
  },
  {
    "API": "medialive:DeleteSchedule",
    "EventSource": "medialive",
    "EventName": "DeleteSchedule",
    "Description": "Delete all schedule actions on a channel"
  },
  {
    "API": "medialive:DeleteSignalMap",
    "EventSource": "medialive",
    "EventName": "DeleteSignalMap",
    "Description": "Deletes the specified signal map"
  },
  {
    "API": "medialive:DeleteTags",
    "EventSource": "medialive",
    "EventName": "DeleteTags",
    "Description": "Removes tags for a resource"
  },
  {
    "API": "medialive:DescribeAccountConfiguration",
    "EventSource": "medialive",
    "EventName": "DescribeAccountConfiguration",
    "Description": "Describe account configuration"
  },
  {
    "API": "medialive:DescribeChannel",
    "EventSource": "medialive",
    "EventName": "DescribeChannel",
    "Description": "Gets details about a channel"
  },
  {
    "API": "medialive:DescribeInput",
    "EventSource": "medialive",
    "EventName": "DescribeInput",
    "Description": "Produces details about an input"
  },
  {
    "API": "medialive:DescribeInputDevice",
    "EventSource": "medialive",
    "EventName": "DescribeInputDevice",
    "Description": "Gets the details for the input device"
  },
  {
    "API": "medialive:DescribeInputDeviceThumbnail",
    "EventSource": "medialive",
    "EventName": "DescribeInputDeviceThumbnail",
    "Description": "Get the latest thumbnail data for the input device"
  },
  {
    "API": "medialive:DescribeInputSecurityGroup",
    "EventSource": "medialive",
    "EventName": "DescribeInputSecurityGroup",
    "Description": "Produces a summary of an Input Security Group"
  },
  {
    "API": "medialive:DescribeMultiplex",
    "EventSource": "medialive",
    "EventName": "DescribeMultiplex",
    "Description": "Gets details about a multiplex"
  },
  {
    "API": "medialive:DescribeMultiplexProgram",
    "EventSource": "medialive",
    "EventName": "DescribeMultiplexProgram",
    "Description": "Get the details for a program in a multiplex"
  },
  {
    "API": "medialive:DescribeOffering",
    "EventSource": "medialive",
    "EventName": "DescribeOffering",
    "Description": "Get details for an offering"
  },
  {
    "API": "medialive:DescribeReservation",
    "EventSource": "medialive",
    "EventName": "DescribeReservation",
    "Description": "Get details for a reservation"
  },
  {
    "API": "medialive:DescribeSchedule",
    "EventSource": "medialive",
    "EventName": "DescribeSchedule",
    "Description": "Get a channel schedule"
  },
  {
    "API": "medialive:DescribeThumbnails",
    "EventSource": "medialive",
    "EventName": "DescribeThumbnails",
    "Description": "Describe the latest thumbnails data"
  },
  {
    "API": "medialive:GeneratePresignedUrl",
    "EventSource": "medialive",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "medialive:GetCloudWatchAlarmTemplate",
    "EventSource": "medialive",
    "EventName": "GetCloudWatchAlarmTemplate",
    "Description": "Retrieves the specified cloudwatch alarm template"
  },
  {
    "API": "medialive:GetCloudWatchAlarmTemplateGroup",
    "EventSource": "medialive",
    "EventName": "GetCloudWatchAlarmTemplateGroup",
    "Description": "Retrieves the specified cloudwatch alarm template group"
  },
  {
    "API": "medialive:GetEventBridgeRuleTemplate",
    "EventSource": "medialive",
    "EventName": "GetEventBridgeRuleTemplate",
    "Description": "Retrieves the specified eventbridge rule template"
  },
  {
    "API": "medialive:GetEventBridgeRuleTemplateGroup",
    "EventSource": "medialive",
    "EventName": "GetEventBridgeRuleTemplateGroup",
    "Description": "Retrieves the specified eventbridge rule template group"
  },
  {
    "API": "medialive:GetSignalMap",
    "EventSource": "medialive",
    "EventName": "GetSignalMap",
    "Description": "Retrieves the specified signal map"
  },
  {
    "API": "medialive:ListChannels",
    "EventSource": "medialive",
    "EventName": "ListChannels",
    "Description": "Produces list of channels that have been created"
  },
  {
    "API": "medialive:ListCloudWatchAlarmTemplateGroups",
    "EventSource": "medialive",
    "EventName": "ListCloudWatchAlarmTemplateGroups",
    "Description": "Lists cloudwatch alarm template groups"
  },
  {
    "API": "medialive:ListCloudWatchAlarmTemplates",
    "EventSource": "medialive",
    "EventName": "ListCloudWatchAlarmTemplates",
    "Description": "Lists cloudwatch alarm templates"
  },
  {
    "API": "medialive:ListEventBridgeRuleTemplateGroups",
    "EventSource": "medialive",
    "EventName": "ListEventBridgeRuleTemplateGroups",
    "Description": "Lists eventbridge rule template groups"
  },
  {
    "API": "medialive:ListEventBridgeRuleTemplates",
    "EventSource": "medialive",
    "EventName": "ListEventBridgeRuleTemplates",
    "Description": "Lists eventbridge rule templates"
  },
  {
    "API": "medialive:ListInputDeviceTransfers",
    "EventSource": "medialive",
    "EventName": "ListInputDeviceTransfers",
    "Description": "List input devices that are currently being transferred"
  },
  {
    "API": "medialive:ListInputDevices",
    "EventSource": "medialive",
    "EventName": "ListInputDevices",
    "Description": "List input devices"
  },
  {
    "API": "medialive:ListInputSecurityGroups",
    "EventSource": "medialive",
    "EventName": "ListInputSecurityGroups",
    "Description": "Produces a list of Input Security Groups for an account"
  },
  {
    "API": "medialive:ListInputs",
    "EventSource": "medialive",
    "EventName": "ListInputs",
    "Description": "Produces list of inputs that have been created"
  },
  {
    "API": "medialive:ListMultiplexPrograms",
    "EventSource": "medialive",
    "EventName": "ListMultiplexPrograms",
    "Description": "List the programs that currently exist for a specific multiplex"
  },
  {
    "API": "medialive:ListMultiplexes",
    "EventSource": "medialive",
    "EventName": "ListMultiplexes",
    "Description": "Retrieve a list of the existing multiplexes"
  },
  {
    "API": "medialive:ListOfferings",
    "EventSource": "medialive",
    "EventName": "ListOfferings",
    "Description": "List offerings available for purchase"
  },
  {
    "API": "medialive:ListReservations",
    "EventSource": "medialive",
    "EventName": "ListReservations",
    "Description": "List purchased reservations"
  },
  {
    "API": "medialive:ListSignalMaps",
    "EventSource": "medialive",
    "EventName": "ListSignalMaps",
    "Description": "Lists signal maps"
  },
  {
    "API": "medialive:ListTagsForResource",
    "EventSource": "medialive",
    "EventName": "ListTagsForResource",
    "Description": "Produces list of tags that have been created for a resource"
  },
  {
    "API": "medialive:PurchaseOffering",
    "EventSource": "medialive",
    "EventName": "PurchaseOffering",
    "Description": "Purchase an offering and create a reservation"
  },
  {
    "API": "medialive:RebootInputDevice",
    "EventSource": "medialive",
    "EventName": "RebootInputDevice",
    "Description": "Send a reboot command to the specified input device"
  },
  {
    "API": "medialive:RejectInputDeviceTransfer",
    "EventSource": "medialive",
    "EventName": "RejectInputDeviceTransfer",
    "Description": "Reject the transfer of the specified input device to your AWS account"
  },
  {
    "API": "medialive:RestartChannelPipelines",
    "EventSource": "medialive",
    "EventName": "RestartChannelPipelines",
    "Description": "Restart pipelines in one channel that is currently running"
  },
  {
    "API": "medialive:StartChannel",
    "EventSource": "medialive",
    "EventName": "StartChannel",
    "Description": "Starts an existing channel"
  },
  {
    "API": "medialive:StartDeleteMonitorDeployment",
    "EventSource": "medialive",
    "EventName": "StartDeleteMonitorDeployment",
    "Description": "Initiates a deployment to delete the monitor of the specified signal map"
  },
  {
    "API": "medialive:StartInputDevice",
    "EventSource": "medialive",
    "EventName": "StartInputDevice",
    "Description": "Start an input device that is attached to a MediaConnect flow"
  },
  {
    "API": "medialive:StartInputDeviceMaintenanceWindow",
    "EventSource": "medialive",
    "EventName": "StartInputDeviceMaintenanceWindow",
    "Description": "Start a maintenance window for the specified input device"
  },
  {
    "API": "medialive:StartMonitorDeployment",
    "EventSource": "medialive",
    "EventName": "StartMonitorDeployment",
    "Description": "Initiates a deployment to deploy the latest monitor of the specified signal map"
  },
  {
    "API": "medialive:StartMultiplex",
    "EventSource": "medialive",
    "EventName": "StartMultiplex",
    "Description": "Start (run) the multiplex"
  },
  {
    "API": "medialive:StartUpdateSignalMap",
    "EventSource": "medialive",
    "EventName": "StartUpdateSignalMap",
    "Description": "Initiates an update for the specified signal map"
  },
  {
    "API": "medialive:StopChannel",
    "EventSource": "medialive",
    "EventName": "StopChannel",
    "Description": "Stops a running channel"
  },
  {
    "API": "medialive:StopInputDevice",
    "EventSource": "medialive",
    "EventName": "StopInputDevice",
    "Description": "Stop an input device that is attached to a MediaConnect flow"
  },
  {
    "API": "medialive:StopMultiplex",
    "EventSource": "medialive",
    "EventName": "StopMultiplex",
    "Description": "Stops a running multiplex"
  },
  {
    "API": "medialive:TransferInputDevice",
    "EventSource": "medialive",
    "EventName": "TransferInputDevice",
    "Description": "Start an input device transfer to another AWS account"
  },
  {
    "API": "medialive:UpdateAccountConfiguration",
    "EventSource": "medialive",
    "EventName": "UpdateAccountConfiguration",
    "Description": "Update account configuration"
  },
  {
    "API": "medialive:UpdateChannel",
    "EventSource": "medialive",
    "EventName": "UpdateChannel",
    "Description": "Updates a channel"
  },
  {
    "API": "medialive:UpdateChannelClass",
    "EventSource": "medialive",
    "EventName": "UpdateChannelClass",
    "Description": "Changes the class of the channel"
  },
  {
    "API": "medialive:UpdateCloudWatchAlarmTemplate",
    "EventSource": "medialive",
    "EventName": "UpdateCloudWatchAlarmTemplate",
    "Description": "Updates the specified cloudwatch alarm template"
  },
  {
    "API": "medialive:UpdateCloudWatchAlarmTemplateGroup",
    "EventSource": "medialive",
    "EventName": "UpdateCloudWatchAlarmTemplateGroup",
    "Description": "Updates the specified cloudwatch alarm template group"
  },
  {
    "API": "medialive:UpdateEventBridgeRuleTemplate",
    "EventSource": "medialive",
    "EventName": "UpdateEventBridgeRuleTemplate",
    "Description": "Updates the specified eventbridge rule template"
  },
  {
    "API": "medialive:UpdateEventBridgeRuleTemplateGroup",
    "EventSource": "medialive",
    "EventName": "UpdateEventBridgeRuleTemplateGroup",
    "Description": "Updates the specified eventbridge rule template group"
  },
  {
    "API": "medialive:UpdateInput",
    "EventSource": "medialive",
    "EventName": "UpdateInput",
    "Description": "Updates an input"
  },
  {
    "API": "medialive:UpdateInputDevice",
    "EventSource": "medialive",
    "EventName": "UpdateInputDevice",
    "Description": "Updates the parameters for the input device"
  },
  {
    "API": "medialive:UpdateInputSecurityGroup",
    "EventSource": "medialive",
    "EventName": "UpdateInputSecurityGroup",
    "Description": "Update an Input Security Group's Whilelists"
  },
  {
    "API": "medialive:UpdateMultiplex",
    "EventSource": "medialive",
    "EventName": "UpdateMultiplex",
    "Description": "Updates a multiplex"
  },
  {
    "API": "medialive:UpdateMultiplexProgram",
    "EventSource": "medialive",
    "EventName": "UpdateMultiplexProgram",
    "Description": "Update a program in a multiplex"
  },
  {
    "API": "medialive:UpdateReservation",
    "EventSource": "medialive",
    "EventName": "UpdateReservation",
    "Description": "Update reservation"
  },
  {
    "API": "mediapackage:ConfigureLogs",
    "EventSource": "mediapackage",
    "EventName": "ConfigureLogs",
    "Description": "Changes the Channel's properities to configure log subscription"
  },
  {
    "API": "mediapackage:CreateChannel",
    "EventSource": "mediapackage",
    "EventName": "CreateChannel",
    "Description": "Creates a new Channel"
  },
  {
    "API": "mediapackage:CreateHarvestJob",
    "EventSource": "mediapackage",
    "EventName": "CreateHarvestJob",
    "Description": "Creates a new HarvestJob record"
  },
  {
    "API": "mediapackage:CreateOriginEndpoint",
    "EventSource": "mediapackage",
    "EventName": "CreateOriginEndpoint",
    "Description": "Creates a new OriginEndpoint record"
  },
  {
    "API": "mediapackage:DeleteChannel",
    "EventSource": "mediapackage",
    "EventName": "DeleteChannel",
    "Description": "Deletes an existing Channel"
  },
  {
    "API": "mediapackage:DeleteOriginEndpoint",
    "EventSource": "mediapackage",
    "EventName": "DeleteOriginEndpoint",
    "Description": "Deletes an existing OriginEndpoint"
  },
  {
    "API": "mediapackage:DescribeChannel",
    "EventSource": "mediapackage",
    "EventName": "DescribeChannel",
    "Description": "Gets details about a Channel"
  },
  {
    "API": "mediapackage:DescribeHarvestJob",
    "EventSource": "mediapackage",
    "EventName": "DescribeHarvestJob",
    "Description": "Gets details about an existing HarvestJob"
  },
  {
    "API": "mediapackage:DescribeOriginEndpoint",
    "EventSource": "mediapackage",
    "EventName": "DescribeOriginEndpoint",
    "Description": "Gets details about an existing OriginEndpoint"
  },
  {
    "API": "mediapackage:GeneratePresignedUrl",
    "EventSource": "mediapackage",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "mediapackage:ListChannels",
    "EventSource": "mediapackage",
    "EventName": "ListChannels",
    "Description": "Returns a collection of Channels"
  },
  {
    "API": "mediapackage:ListHarvestJobs",
    "EventSource": "mediapackage",
    "EventName": "ListHarvestJobs",
    "Description": "Returns a collection of HarvestJob records"
  },
  {
    "API": "mediapackage:ListOriginEndpoints",
    "EventSource": "mediapackage",
    "EventName": "ListOriginEndpoints",
    "Description": "Returns a collection of OriginEndpoint records"
  },
  {
    "API": "mediapackage:ListTagsForResource",
    "EventSource": "mediapackage",
    "EventName": "ListTagsForResource",
    "Description": "See also: `AWS API Documentation <https://docs"
  },
  {
    "API": "mediapackage:RotateChannelCredentials",
    "EventSource": "mediapackage",
    "EventName": "RotateChannelCredentials",
    "Description": "Changes the Channel's first IngestEndpoint's username and password"
  },
  {
    "API": "mediapackage:RotateIngestEndpointCredentials",
    "EventSource": "mediapackage",
    "EventName": "RotateIngestEndpointCredentials",
    "Description": "Rotate the IngestEndpoint's username and password, as specified by the IngestEndpoint's id"
  },
  {
    "API": "mediapackage:TagResource",
    "EventSource": "mediapackage",
    "EventName": "TagResource",
    "Description": "See also: `AWS API Documentation <https://docs"
  },
  {
    "API": "mediapackage:UntagResource",
    "EventSource": "mediapackage",
    "EventName": "UntagResource",
    "Description": "See also: `AWS API Documentation <https://docs"
  },
  {
    "API": "mediapackage:UpdateChannel",
    "EventSource": "mediapackage",
    "EventName": "UpdateChannel",
    "Description": "Updates an existing Channel"
  },
  {
    "API": "mediapackage:UpdateOriginEndpoint",
    "EventSource": "mediapackage",
    "EventName": "UpdateOriginEndpoint",
    "Description": "Updates an existing OriginEndpoint"
  },
  {
    "API": "mediapackage-vod:ConfigureLogs",
    "EventSource": "mediapackage-vod",
    "EventName": "ConfigureLogs",
    "Description": "Changes the packaging group's properities to configure log subscription"
  },
  {
    "API": "mediapackage-vod:CreateAsset",
    "EventSource": "mediapackage-vod",
    "EventName": "CreateAsset",
    "Description": "Creates a new MediaPackage VOD Asset resource"
  },
  {
    "API": "mediapackage-vod:CreatePackagingConfiguration",
    "EventSource": "mediapackage-vod",
    "EventName": "CreatePackagingConfiguration",
    "Description": "Creates a new MediaPackage VOD PackagingConfiguration resource"
  },
  {
    "API": "mediapackage-vod:CreatePackagingGroup",
    "EventSource": "mediapackage-vod",
    "EventName": "CreatePackagingGroup",
    "Description": "Creates a new MediaPackage VOD PackagingGroup resource"
  },
  {
    "API": "mediapackage-vod:DeleteAsset",
    "EventSource": "mediapackage-vod",
    "EventName": "DeleteAsset",
    "Description": "Deletes an existing MediaPackage VOD Asset resource"
  },
  {
    "API": "mediapackage-vod:DeletePackagingConfiguration",
    "EventSource": "mediapackage-vod",
    "EventName": "DeletePackagingConfiguration",
    "Description": "Deletes a MediaPackage VOD PackagingConfiguration resource"
  },
  {
    "API": "mediapackage-vod:DeletePackagingGroup",
    "EventSource": "mediapackage-vod",
    "EventName": "DeletePackagingGroup",
    "Description": "Deletes a MediaPackage VOD PackagingGroup resource"
  },
  {
    "API": "mediapackage-vod:DescribeAsset",
    "EventSource": "mediapackage-vod",
    "EventName": "DescribeAsset",
    "Description": "Returns a description of a MediaPackage VOD Asset resource"
  },
  {
    "API": "mediapackage-vod:DescribePackagingConfiguration",
    "EventSource": "mediapackage-vod",
    "EventName": "DescribePackagingConfiguration",
    "Description": "Returns a description of a MediaPackage VOD PackagingConfiguration resource"
  },
  {
    "API": "mediapackage-vod:DescribePackagingGroup",
    "EventSource": "mediapackage-vod",
    "EventName": "DescribePackagingGroup",
    "Description": "Returns a description of a MediaPackage VOD PackagingGroup resource"
  },
  {
    "API": "mediapackage-vod:GeneratePresignedUrl",
    "EventSource": "mediapackage-vod",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "mediapackage-vod:ListAssets",
    "EventSource": "mediapackage-vod",
    "EventName": "ListAssets",
    "Description": "Returns a collection of MediaPackage VOD Asset resources"
  },
  {
    "API": "mediapackage-vod:ListPackagingConfigurations",
    "EventSource": "mediapackage-vod",
    "EventName": "ListPackagingConfigurations",
    "Description": "Returns a collection of MediaPackage VOD PackagingConfiguration resources"
  },
  {
    "API": "mediapackage-vod:ListPackagingGroups",
    "EventSource": "mediapackage-vod",
    "EventName": "ListPackagingGroups",
    "Description": "Returns a collection of MediaPackage VOD PackagingGroup resources"
  },
  {
    "API": "mediapackage-vod:ListTagsForResource",
    "EventSource": "mediapackage-vod",
    "EventName": "ListTagsForResource",
    "Description": "Returns a list of the tags assigned to the specified resource"
  },
  {
    "API": "mediapackage-vod:TagResource",
    "EventSource": "mediapackage-vod",
    "EventName": "TagResource",
    "Description": "Adds tags to the specified resource"
  },
  {
    "API": "mediapackage-vod:UntagResource",
    "EventSource": "mediapackage-vod",
    "EventName": "UntagResource",
    "Description": "Removes tags from the specified resource"
  },
  {
    "API": "mediapackage-vod:UpdatePackagingGroup",
    "EventSource": "mediapackage-vod",
    "EventName": "UpdatePackagingGroup",
    "Description": "Updates a specific packaging group"
  },
  {
    "API": "mediapackagev2:CreateChannel",
    "EventSource": "mediapackagev2",
    "EventName": "CreateChannel",
    "Description": "Create a channel to start receiving content streams"
  },
  {
    "API": "mediapackagev2:CreateChannelGroup",
    "EventSource": "mediapackagev2",
    "EventName": "CreateChannelGroup",
    "Description": "Create a channel group to group your channels and origin endpoints"
  },
  {
    "API": "mediapackagev2:CreateOriginEndpoint",
    "EventSource": "mediapackagev2",
    "EventName": "CreateOriginEndpoint",
    "Description": "The endpoint is attached to a channel, and represents the output of the live content"
  },
  {
    "API": "mediapackagev2:DeleteChannel",
    "EventSource": "mediapackagev2",
    "EventName": "DeleteChannel",
    "Description": "Delete a channel to stop AWS Elemental MediaPackage from receiving further content"
  },
  {
    "API": "mediapackagev2:DeleteChannelGroup",
    "EventSource": "mediapackagev2",
    "EventName": "DeleteChannelGroup",
    "Description": "Delete a channel group"
  },
  {
    "API": "mediapackagev2:DeleteChannelPolicy",
    "EventSource": "mediapackagev2",
    "EventName": "DeleteChannelPolicy",
    "Description": "Delete a channel policy"
  },
  {
    "API": "mediapackagev2:DeleteOriginEndpoint",
    "EventSource": "mediapackagev2",
    "EventName": "DeleteOriginEndpoint",
    "Description": "Origin endpoints can serve content until they're deleted"
  },
  {
    "API": "mediapackagev2:DeleteOriginEndpointPolicy",
    "EventSource": "mediapackagev2",
    "EventName": "DeleteOriginEndpointPolicy",
    "Description": "Delete an origin endpoint policy"
  },
  {
    "API": "mediapackagev2:GeneratePresignedUrl",
    "EventSource": "mediapackagev2",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "mediapackagev2:GetChannel",
    "EventSource": "mediapackagev2",
    "EventName": "GetChannel",
    "Description": "Retrieves the specified channel that's configured in AWS Elemental MediaPackage, including the origin endpoints that are associated with it"
  },
  {
    "API": "mediapackagev2:GetChannelGroup",
    "EventSource": "mediapackagev2",
    "EventName": "GetChannelGroup",
    "Description": "Retrieves the specified channel group that's configured in AWS Elemental MediaPackage, including the channels and origin endpoints that are associated with it"
  },
  {
    "API": "mediapackagev2:GetChannelPolicy",
    "EventSource": "mediapackagev2",
    "EventName": "GetChannelPolicy",
    "Description": "Retrieves the specified channel policy that's configured in AWS Elemental MediaPackage"
  },
  {
    "API": "mediapackagev2:GetOriginEndpoint",
    "EventSource": "mediapackagev2",
    "EventName": "GetOriginEndpoint",
    "Description": "Retrieves the specified origin endpoint that's configured in AWS Elemental MediaPackage to obtain its playback URL and to view the packaging settings that it's currently using"
  },
  {
    "API": "mediapackagev2:GetOriginEndpointPolicy",
    "EventSource": "mediapackagev2",
    "EventName": "GetOriginEndpointPolicy",
    "Description": "Retrieves the specified origin endpoint policy that's configured in AWS Elemental MediaPackage"
  },
  {
    "API": "mediapackagev2:ListChannelGroups",
    "EventSource": "mediapackagev2",
    "EventName": "ListChannelGroups",
    "Description": "Retrieves all channel groups that are configured in AWS Elemental MediaPackage, including the channels and origin endpoints that are associated with it"
  },
  {
    "API": "mediapackagev2:ListChannels",
    "EventSource": "mediapackagev2",
    "EventName": "ListChannels",
    "Description": "Retrieves all channels in a specific channel group that are configured in AWS Elemental MediaPackage, including the origin endpoints that are associated with it"
  },
  {
    "API": "mediapackagev2:ListOriginEndpoints",
    "EventSource": "mediapackagev2",
    "EventName": "ListOriginEndpoints",
    "Description": "Retrieves all origin endpoints in a specific channel that are configured in AWS Elemental MediaPackage"
  },
  {
    "API": "mediapackagev2:ListTagsForResource",
    "EventSource": "mediapackagev2",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags assigned to a resource"
  },
  {
    "API": "mediapackagev2:PutChannelPolicy",
    "EventSource": "mediapackagev2",
    "EventName": "PutChannelPolicy",
    "Description": "Attaches an IAM policy to the specified channel"
  },
  {
    "API": "mediapackagev2:PutOriginEndpointPolicy",
    "EventSource": "mediapackagev2",
    "EventName": "PutOriginEndpointPolicy",
    "Description": "Attaches an IAM policy to the specified origin endpoint"
  },
  {
    "API": "mediapackagev2:TagResource",
    "EventSource": "mediapackagev2",
    "EventName": "TagResource",
    "Description": "Assigns one of more tags (key-value pairs) to the specified MediaPackage resource"
  },
  {
    "API": "mediapackagev2:UntagResource",
    "EventSource": "mediapackagev2",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags from the specified resource"
  },
  {
    "API": "mediapackagev2:UpdateChannel",
    "EventSource": "mediapackagev2",
    "EventName": "UpdateChannel",
    "Description": "Update the specified channel"
  },
  {
    "API": "mediapackagev2:UpdateChannelGroup",
    "EventSource": "mediapackagev2",
    "EventName": "UpdateChannelGroup",
    "Description": "Update the specified channel group"
  },
  {
    "API": "mediapackagev2:UpdateOriginEndpoint",
    "EventSource": "mediapackagev2",
    "EventName": "UpdateOriginEndpoint",
    "Description": "Update the specified origin endpoint"
  },
  {
    "API": "mediastore:CreateContainer",
    "EventSource": "mediastore",
    "EventName": "CreateContainer",
    "Description": "Creates a storage container to hold objects"
  },
  {
    "API": "mediastore:DeleteContainer",
    "EventSource": "mediastore",
    "EventName": "DeleteContainer",
    "Description": "Deletes the specified container"
  },
  {
    "API": "mediastore:DeleteContainerPolicy",
    "EventSource": "mediastore",
    "EventName": "DeleteContainerPolicy",
    "Description": "Deletes the access policy that is associated with the specified container"
  },
  {
    "API": "mediastore:DeleteCorsPolicy",
    "EventSource": "mediastore",
    "EventName": "DeleteCorsPolicy",
    "Description": "Deletes the cross-origin resource sharing (CORS) configuration information that is set for the container"
  },
  {
    "API": "mediastore:DeleteLifecyclePolicy",
    "EventSource": "mediastore",
    "EventName": "DeleteLifecyclePolicy",
    "Description": "Removes an object lifecycle policy from a container"
  },
  {
    "API": "mediastore:DeleteMetricPolicy",
    "EventSource": "mediastore",
    "EventName": "DeleteMetricPolicy",
    "Description": "Deletes the metric policy that is associated with the specified container"
  },
  {
    "API": "mediastore:DescribeContainer",
    "EventSource": "mediastore",
    "EventName": "DescribeContainer",
    "Description": "Retrieves the properties of the requested container"
  },
  {
    "API": "mediastore:GeneratePresignedUrl",
    "EventSource": "mediastore",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "mediastore:GetContainerPolicy",
    "EventSource": "mediastore",
    "EventName": "GetContainerPolicy",
    "Description": "Retrieves the access policy for the specified container"
  },
  {
    "API": "mediastore:GetCorsPolicy",
    "EventSource": "mediastore",
    "EventName": "GetCorsPolicy",
    "Description": "Returns the cross-origin resource sharing (CORS) configuration information that is set for the container"
  },
  {
    "API": "mediastore:GetLifecyclePolicy",
    "EventSource": "mediastore",
    "EventName": "GetLifecyclePolicy",
    "Description": "Retrieves the object lifecycle policy that is assigned to a container"
  },
  {
    "API": "mediastore:GetMetricPolicy",
    "EventSource": "mediastore",
    "EventName": "GetMetricPolicy",
    "Description": "Returns the metric policy for the specified container"
  },
  {
    "API": "mediastore:ListContainers",
    "EventSource": "mediastore",
    "EventName": "ListContainers",
    "Description": "Lists the properties of all containers in AWS Elemental MediaStore"
  },
  {
    "API": "mediastore:ListTagsForResource",
    "EventSource": "mediastore",
    "EventName": "ListTagsForResource",
    "Description": "Returns a list of the tags assigned to the specified container"
  },
  {
    "API": "mediastore:PutContainerPolicy",
    "EventSource": "mediastore",
    "EventName": "PutContainerPolicy",
    "Description": "Creates an access policy for the specified container to restrict the users and clients that can access it"
  },
  {
    "API": "mediastore:PutCorsPolicy",
    "EventSource": "mediastore",
    "EventName": "PutCorsPolicy",
    "Description": "Sets the cross-origin resource sharing (CORS) configuration on a container so that the container can service cross-origin requests"
  },
  {
    "API": "mediastore:PutLifecyclePolicy",
    "EventSource": "mediastore",
    "EventName": "PutLifecyclePolicy",
    "Description": "Writes an object lifecycle policy to a container"
  },
  {
    "API": "mediastore:PutMetricPolicy",
    "EventSource": "mediastore",
    "EventName": "PutMetricPolicy",
    "Description": "The metric policy that you want to add to the container"
  },
  {
    "API": "mediastore:StartAccessLogging",
    "EventSource": "mediastore",
    "EventName": "StartAccessLogging",
    "Description": "Starts access logging on the specified container"
  },
  {
    "API": "mediastore:StopAccessLogging",
    "EventSource": "mediastore",
    "EventName": "StopAccessLogging",
    "Description": "Stops access logging on the specified container"
  },
  {
    "API": "mediastore:TagResource",
    "EventSource": "mediastore",
    "EventName": "TagResource",
    "Description": "Adds tags to the specified AWS Elemental MediaStore container"
  },
  {
    "API": "mediastore:UntagResource",
    "EventSource": "mediastore",
    "EventName": "UntagResource",
    "Description": "Removes tags from the specified container"
  },
  {
    "API": "mediastore-data:DeleteObject",
    "EventSource": "mediastore-data",
    "EventName": "DeleteObject",
    "Description": "Deletes an object at the specified path"
  },
  {
    "API": "mediastore-data:DescribeObject",
    "EventSource": "mediastore-data",
    "EventName": "DescribeObject",
    "Description": "Gets the headers for an object at the specified path"
  },
  {
    "API": "mediastore-data:GeneratePresignedUrl",
    "EventSource": "mediastore-data",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "mediastore-data:GetObject",
    "EventSource": "mediastore-data",
    "EventName": "GetObject",
    "Description": "Downloads the object at the specified path"
  },
  {
    "API": "mediastore-data:ListItems",
    "EventSource": "mediastore-data",
    "EventName": "ListItems",
    "Description": "Provides a list of metadata entries about folders and objects in the specified folder"
  },
  {
    "API": "mediastore-data:PutObject",
    "EventSource": "mediastore-data",
    "EventName": "PutObject",
    "Description": "Uploads an object to the specified path"
  },
  {
    "API": "mediatailor:ConfigureLogsForChannel",
    "EventSource": "mediatailor",
    "EventName": "ConfigureLogsForChannel",
    "Description": "Configures Amazon CloudWatch log settings for a channel"
  },
  {
    "API": "mediatailor:ConfigureLogsForPlaybackConfiguration",
    "EventSource": "mediatailor",
    "EventName": "ConfigureLogsForPlaybackConfiguration",
    "Description": "Amazon CloudWatch log settings for a playback configuration"
  },
  {
    "API": "mediatailor:CreateChannel",
    "EventSource": "mediatailor",
    "EventName": "CreateChannel",
    "Description": "Creates a channel"
  },
  {
    "API": "mediatailor:CreateLiveSource",
    "EventSource": "mediatailor",
    "EventName": "CreateLiveSource",
    "Description": "The live source configuration"
  },
  {
    "API": "mediatailor:CreatePrefetchSchedule",
    "EventSource": "mediatailor",
    "EventName": "CreatePrefetchSchedule",
    "Description": "Creates a prefetch schedule for a playback configuration"
  },
  {
    "API": "mediatailor:CreateProgram",
    "EventSource": "mediatailor",
    "EventName": "CreateProgram",
    "Description": "Creates a program within a channel"
  },
  {
    "API": "mediatailor:CreateSourceLocation",
    "EventSource": "mediatailor",
    "EventName": "CreateSourceLocation",
    "Description": "Creates a source location"
  },
  {
    "API": "mediatailor:CreateVodSource",
    "EventSource": "mediatailor",
    "EventName": "CreateVodSource",
    "Description": "The VOD source configuration parameters"
  },
  {
    "API": "mediatailor:DeleteChannel",
    "EventSource": "mediatailor",
    "EventName": "DeleteChannel",
    "Description": "Deletes a channel"
  },
  {
    "API": "mediatailor:DeleteChannelPolicy",
    "EventSource": "mediatailor",
    "EventName": "DeleteChannelPolicy",
    "Description": "The channel policy to delete"
  },
  {
    "API": "mediatailor:DeleteLiveSource",
    "EventSource": "mediatailor",
    "EventName": "DeleteLiveSource",
    "Description": "The live source to delete"
  },
  {
    "API": "mediatailor:DeletePlaybackConfiguration",
    "EventSource": "mediatailor",
    "EventName": "DeletePlaybackConfiguration",
    "Description": "Deletes a playback configuration"
  },
  {
    "API": "mediatailor:DeletePrefetchSchedule",
    "EventSource": "mediatailor",
    "EventName": "DeletePrefetchSchedule",
    "Description": "Deletes a prefetch schedule for a specific playback configuration"
  },
  {
    "API": "mediatailor:DeleteProgram",
    "EventSource": "mediatailor",
    "EventName": "DeleteProgram",
    "Description": "Deletes a program within a channel"
  },
  {
    "API": "mediatailor:DeleteSourceLocation",
    "EventSource": "mediatailor",
    "EventName": "DeleteSourceLocation",
    "Description": "Deletes a source location"
  },
  {
    "API": "mediatailor:DeleteVodSource",
    "EventSource": "mediatailor",
    "EventName": "DeleteVodSource",
    "Description": "The video on demand (VOD) source to delete"
  },
  {
    "API": "mediatailor:DescribeChannel",
    "EventSource": "mediatailor",
    "EventName": "DescribeChannel",
    "Description": "Describes a channel"
  },
  {
    "API": "mediatailor:DescribeLiveSource",
    "EventSource": "mediatailor",
    "EventName": "DescribeLiveSource",
    "Description": "The live source to describe"
  },
  {
    "API": "mediatailor:DescribeProgram",
    "EventSource": "mediatailor",
    "EventName": "DescribeProgram",
    "Description": "Describes a program within a channel"
  },
  {
    "API": "mediatailor:DescribeSourceLocation",
    "EventSource": "mediatailor",
    "EventName": "DescribeSourceLocation",
    "Description": "Describes a source location"
  },
  {
    "API": "mediatailor:DescribeVodSource",
    "EventSource": "mediatailor",
    "EventName": "DescribeVodSource",
    "Description": "Provides details about a specific video on demand (VOD) source in a specific source location"
  },
  {
    "API": "mediatailor:GeneratePresignedUrl",
    "EventSource": "mediatailor",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "mediatailor:GetChannelPolicy",
    "EventSource": "mediatailor",
    "EventName": "GetChannelPolicy",
    "Description": "Returns the channel's IAM policy"
  },
  {
    "API": "mediatailor:GetChannelSchedule",
    "EventSource": "mediatailor",
    "EventName": "GetChannelSchedule",
    "Description": "Retrieves information about your channel's schedule"
  },
  {
    "API": "mediatailor:GetPlaybackConfiguration",
    "EventSource": "mediatailor",
    "EventName": "GetPlaybackConfiguration",
    "Description": "Retrieves a playback configuration"
  },
  {
    "API": "mediatailor:GetPrefetchSchedule",
    "EventSource": "mediatailor",
    "EventName": "GetPrefetchSchedule",
    "Description": "Retrieves a prefetch schedule for a playback configuration"
  },
  {
    "API": "mediatailor:ListAlerts",
    "EventSource": "mediatailor",
    "EventName": "ListAlerts",
    "Description": "Lists the alerts that are associated with a MediaTailor channel assembly resource"
  },
  {
    "API": "mediatailor:ListChannels",
    "EventSource": "mediatailor",
    "EventName": "ListChannels",
    "Description": "Retrieves information about the channels that are associated with the current AWS account"
  },
  {
    "API": "mediatailor:ListLiveSources",
    "EventSource": "mediatailor",
    "EventName": "ListLiveSources",
    "Description": "Lists the live sources contained in a source location"
  },
  {
    "API": "mediatailor:ListPlaybackConfigurations",
    "EventSource": "mediatailor",
    "EventName": "ListPlaybackConfigurations",
    "Description": "Retrieves existing playback configurations"
  },
  {
    "API": "mediatailor:ListPrefetchSchedules",
    "EventSource": "mediatailor",
    "EventName": "ListPrefetchSchedules",
    "Description": "Lists the prefetch schedules for a playback configuration"
  },
  {
    "API": "mediatailor:ListSourceLocations",
    "EventSource": "mediatailor",
    "EventName": "ListSourceLocations",
    "Description": "Lists the source locations for a channel"
  },
  {
    "API": "mediatailor:ListTagsForResource",
    "EventSource": "mediatailor",
    "EventName": "ListTagsForResource",
    "Description": "A list of tags that are associated with this resource"
  },
  {
    "API": "mediatailor:ListVodSources",
    "EventSource": "mediatailor",
    "EventName": "ListVodSources",
    "Description": "Lists the VOD sources contained in a source location"
  },
  {
    "API": "mediatailor:PutChannelPolicy",
    "EventSource": "mediatailor",
    "EventName": "PutChannelPolicy",
    "Description": "Creates an IAM policy for the channel"
  },
  {
    "API": "mediatailor:PutPlaybackConfiguration",
    "EventSource": "mediatailor",
    "EventName": "PutPlaybackConfiguration",
    "Description": "Creates a playback configuration"
  },
  {
    "API": "mediatailor:StartChannel",
    "EventSource": "mediatailor",
    "EventName": "StartChannel",
    "Description": "Starts a channel"
  },
  {
    "API": "mediatailor:StopChannel",
    "EventSource": "mediatailor",
    "EventName": "StopChannel",
    "Description": "Stops a channel"
  },
  {
    "API": "mediatailor:TagResource",
    "EventSource": "mediatailor",
    "EventName": "TagResource",
    "Description": "The resource to tag"
  },
  {
    "API": "mediatailor:UntagResource",
    "EventSource": "mediatailor",
    "EventName": "UntagResource",
    "Description": "The resource to untag"
  },
  {
    "API": "mediatailor:UpdateChannel",
    "EventSource": "mediatailor",
    "EventName": "UpdateChannel",
    "Description": "Updates a channel"
  },
  {
    "API": "mediatailor:UpdateLiveSource",
    "EventSource": "mediatailor",
    "EventName": "UpdateLiveSource",
    "Description": "Updates a live source's configuration"
  },
  {
    "API": "mediatailor:UpdateProgram",
    "EventSource": "mediatailor",
    "EventName": "UpdateProgram",
    "Description": "Updates a program within a channel"
  },
  {
    "API": "mediatailor:UpdateSourceLocation",
    "EventSource": "mediatailor",
    "EventName": "UpdateSourceLocation",
    "Description": "Updates a source location"
  },
  {
    "API": "mediatailor:UpdateVodSource",
    "EventSource": "mediatailor",
    "EventName": "UpdateVodSource",
    "Description": "Updates a VOD source's configuration"
  },
  {
    "API": "medical-imaging:CopyImageSet",
    "EventSource": "medical-imaging",
    "EventName": "CopyImageSet",
    "Description": "Copy an image set"
  },
  {
    "API": "medical-imaging:CreateDatastore",
    "EventSource": "medical-imaging",
    "EventName": "CreateDatastore",
    "Description": "Create a data store"
  },
  {
    "API": "medical-imaging:DeleteDatastore",
    "EventSource": "medical-imaging",
    "EventName": "DeleteDatastore",
    "Description": "Delete a data store"
  },
  {
    "API": "medical-imaging:DeleteImageSet",
    "EventSource": "medical-imaging",
    "EventName": "DeleteImageSet",
    "Description": "Delete an image set"
  },
  {
    "API": "medical-imaging:GeneratePresignedUrl",
    "EventSource": "medical-imaging",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "medical-imaging:GetDatastore",
    "EventSource": "medical-imaging",
    "EventName": "GetDatastore",
    "Description": "Get data store properties"
  },
  {
    "API": "medical-imaging:GetDicomImportJob",
    "EventSource": "medical-imaging",
    "EventName": "GetDicomImportJob",
    "Description": "Get the import job properties to learn more about the job or job progress"
  },
  {
    "API": "medical-imaging:GetImageFrame",
    "EventSource": "medical-imaging",
    "EventName": "GetImageFrame",
    "Description": "Get an image frame (pixel data) for an image set"
  },
  {
    "API": "medical-imaging:GetImageSet",
    "EventSource": "medical-imaging",
    "EventName": "GetImageSet",
    "Description": "Get image set properties"
  },
  {
    "API": "medical-imaging:GetImageSetMetadata",
    "EventSource": "medical-imaging",
    "EventName": "GetImageSetMetadata",
    "Description": "Get metadata attributes for an image set"
  },
  {
    "API": "medical-imaging:ListDatastores",
    "EventSource": "medical-imaging",
    "EventName": "ListDatastores",
    "Description": "List data stores"
  },
  {
    "API": "medical-imaging:ListDicomImportJobs",
    "EventSource": "medical-imaging",
    "EventName": "ListDicomImportJobs",
    "Description": "List import jobs created for a specific data store"
  },
  {
    "API": "medical-imaging:ListImageSetVersions",
    "EventSource": "medical-imaging",
    "EventName": "ListImageSetVersions",
    "Description": "List image set versions"
  },
  {
    "API": "medical-imaging:ListTagsForResource",
    "EventSource": "medical-imaging",
    "EventName": "ListTagsForResource",
    "Description": "Lists all tags associated with a medical imaging resource"
  },
  {
    "API": "medical-imaging:SearchImageSets",
    "EventSource": "medical-imaging",
    "EventName": "SearchImageSets",
    "Description": "Search image sets based on defined input attributes"
  },
  {
    "API": "medical-imaging:StartDicomImportJob",
    "EventSource": "medical-imaging",
    "EventName": "StartDicomImportJob",
    "Description": "Start importing bulk data into an ``ACTIVE`` data store"
  },
  {
    "API": "medical-imaging:TagResource",
    "EventSource": "medical-imaging",
    "EventName": "TagResource",
    "Description": "Adds a user-specifed key and value tag to a medical imaging resource"
  },
  {
    "API": "medical-imaging:UntagResource",
    "EventSource": "medical-imaging",
    "EventName": "UntagResource",
    "Description": "Removes tags from a medical imaging resource"
  },
  {
    "API": "medical-imaging:UpdateImageSetMetadata",
    "EventSource": "medical-imaging",
    "EventName": "UpdateImageSetMetadata",
    "Description": "Update image set metadata attributes"
  },
  {
    "API": "memorydb:BatchUpdateCluster",
    "EventSource": "memorydb",
    "EventName": "BatchUpdateCluster",
    "Description": "Apply the service update to a list of clusters supplied"
  },
  {
    "API": "memorydb:CopySnapshot",
    "EventSource": "memorydb",
    "EventName": "CopySnapshot",
    "Description": "Makes a copy of an existing snapshot"
  },
  {
    "API": "memorydb:CreateAcl",
    "EventSource": "memorydb",
    "EventName": "CreateAcl",
    "Description": "Creates an Access Control List"
  },
  {
    "API": "memorydb:CreateCluster",
    "EventSource": "memorydb",
    "EventName": "CreateCluster",
    "Description": "Creates a cluster"
  },
  {
    "API": "memorydb:CreateParameterGroup",
    "EventSource": "memorydb",
    "EventName": "CreateParameterGroup",
    "Description": "Creates a new MemoryDB parameter group"
  },
  {
    "API": "memorydb:CreateSnapshot",
    "EventSource": "memorydb",
    "EventName": "CreateSnapshot",
    "Description": "Creates a copy of an entire cluster at a specific moment in time"
  },
  {
    "API": "memorydb:CreateSubnetGroup",
    "EventSource": "memorydb",
    "EventName": "CreateSubnetGroup",
    "Description": "Creates a subnet group"
  },
  {
    "API": "memorydb:CreateUser",
    "EventSource": "memorydb",
    "EventName": "CreateUser",
    "Description": "Creates a MemoryDB user"
  },
  {
    "API": "memorydb:DeleteAcl",
    "EventSource": "memorydb",
    "EventName": "DeleteAcl",
    "Description": "Deletes an Access Control List"
  },
  {
    "API": "memorydb:DeleteCluster",
    "EventSource": "memorydb",
    "EventName": "DeleteCluster",
    "Description": "Deletes a cluster"
  },
  {
    "API": "memorydb:DeleteParameterGroup",
    "EventSource": "memorydb",
    "EventName": "DeleteParameterGroup",
    "Description": "Deletes the specified parameter group"
  },
  {
    "API": "memorydb:DeleteSnapshot",
    "EventSource": "memorydb",
    "EventName": "DeleteSnapshot",
    "Description": "Deletes an existing snapshot"
  },
  {
    "API": "memorydb:DeleteSubnetGroup",
    "EventSource": "memorydb",
    "EventName": "DeleteSubnetGroup",
    "Description": "Deletes a subnet group"
  },
  {
    "API": "memorydb:DeleteUser",
    "EventSource": "memorydb",
    "EventName": "DeleteUser",
    "Description": "Deletes a user"
  },
  {
    "API": "memorydb:DescribeAcls",
    "EventSource": "memorydb",
    "EventName": "DescribeAcls",
    "Description": "Returns a list of ACLs"
  },
  {
    "API": "memorydb:DescribeClusters",
    "EventSource": "memorydb",
    "EventName": "DescribeClusters",
    "Description": "Returns information about all provisioned clusters if no cluster identifier is specified, or about a specific cluster if a cluster name is supplied"
  },
  {
    "API": "memorydb:DescribeEngineVersions",
    "EventSource": "memorydb",
    "EventName": "DescribeEngineVersions",
    "Description": "Returns a list of the available Redis engine versions"
  },
  {
    "API": "memorydb:DescribeEvents",
    "EventSource": "memorydb",
    "EventName": "DescribeEvents",
    "Description": "Returns events related to clusters, security groups, and parameter groups"
  },
  {
    "API": "memorydb:DescribeParameterGroups",
    "EventSource": "memorydb",
    "EventName": "DescribeParameterGroups",
    "Description": "Returns a list of parameter group descriptions"
  },
  {
    "API": "memorydb:DescribeParameters",
    "EventSource": "memorydb",
    "EventName": "DescribeParameters",
    "Description": "Returns the detailed parameter list for a particular parameter group"
  },
  {
    "API": "memorydb:DescribeReservedNodes",
    "EventSource": "memorydb",
    "EventName": "DescribeReservedNodes",
    "Description": "Returns information about reserved nodes for this account, or about a specified reserved node"
  },
  {
    "API": "memorydb:DescribeReservedNodesOfferings",
    "EventSource": "memorydb",
    "EventName": "DescribeReservedNodesOfferings",
    "Description": "Lists available reserved node offerings"
  },
  {
    "API": "memorydb:DescribeServiceUpdates",
    "EventSource": "memorydb",
    "EventName": "DescribeServiceUpdates",
    "Description": "Returns details of the service updates"
  },
  {
    "API": "memorydb:DescribeSnapshots",
    "EventSource": "memorydb",
    "EventName": "DescribeSnapshots",
    "Description": "Returns information about cluster snapshots"
  },
  {
    "API": "memorydb:DescribeSubnetGroups",
    "EventSource": "memorydb",
    "EventName": "DescribeSubnetGroups",
    "Description": "Returns a list of subnet group descriptions"
  },
  {
    "API": "memorydb:DescribeUsers",
    "EventSource": "memorydb",
    "EventName": "DescribeUsers",
    "Description": "Returns a list of users"
  },
  {
    "API": "memorydb:FailoverShard",
    "EventSource": "memorydb",
    "EventName": "FailoverShard",
    "Description": "Used to failover a shard"
  },
  {
    "API": "memorydb:GeneratePresignedUrl",
    "EventSource": "memorydb",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "memorydb:ListAllowedNodeTypeUpdates",
    "EventSource": "memorydb",
    "EventName": "ListAllowedNodeTypeUpdates",
    "Description": "Lists all available node types that you can scale to from your cluster's current node type"
  },
  {
    "API": "memorydb:ListTags",
    "EventSource": "memorydb",
    "EventName": "ListTags",
    "Description": "Lists all tags currently on a named resource"
  },
  {
    "API": "memorydb:PurchaseReservedNodesOffering",
    "EventSource": "memorydb",
    "EventName": "PurchaseReservedNodesOffering",
    "Description": "Allows you to purchase a reserved node offering"
  },
  {
    "API": "memorydb:ResetParameterGroup",
    "EventSource": "memorydb",
    "EventName": "ResetParameterGroup",
    "Description": "Modifies the parameters of a parameter group to the engine or system default value"
  },
  {
    "API": "memorydb:TagResource",
    "EventSource": "memorydb",
    "EventName": "TagResource",
    "Description": "A tag is a key-value pair where the key and value are case-sensitive"
  },
  {
    "API": "memorydb:UntagResource",
    "EventSource": "memorydb",
    "EventName": "UntagResource",
    "Description": "Use this operation to remove tags on a resource"
  },
  {
    "API": "memorydb:UpdateAcl",
    "EventSource": "memorydb",
    "EventName": "UpdateAcl",
    "Description": "Changes the list of users that belong to the Access Control List"
  },
  {
    "API": "memorydb:UpdateCluster",
    "EventSource": "memorydb",
    "EventName": "UpdateCluster",
    "Description": "Modifies the settings for a cluster"
  },
  {
    "API": "memorydb:UpdateParameterGroup",
    "EventSource": "memorydb",
    "EventName": "UpdateParameterGroup",
    "Description": "Updates the parameters of a parameter group"
  },
  {
    "API": "memorydb:UpdateSubnetGroup",
    "EventSource": "memorydb",
    "EventName": "UpdateSubnetGroup",
    "Description": "Updates a subnet group"
  },
  {
    "API": "memorydb:UpdateUser",
    "EventSource": "memorydb",
    "EventName": "UpdateUser",
    "Description": "Changes user password(s) and/or access string"
  },
  {
    "API": "meteringmarketplace:BatchMeterUsage",
    "EventSource": "meteringmarketplace",
    "EventName": "BatchMeterUsage",
    "Description": "``BatchMeterUsage`` is called from a SaaS application listed on AWS Marketplace to post metering records for a set of customers"
  },
  {
    "API": "meteringmarketplace:GeneratePresignedUrl",
    "EventSource": "meteringmarketplace",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "meteringmarketplace:MeterUsage",
    "EventSource": "meteringmarketplace",
    "EventName": "MeterUsage",
    "Description": "API to emit metering records"
  },
  {
    "API": "meteringmarketplace:RegisterUsage",
    "EventSource": "meteringmarketplace",
    "EventName": "RegisterUsage",
    "Description": "Paid container software products sold through AWS Marketplace must integrate with the AWS Marketplace Metering Service and call the ``RegisterUsage`` operation for software entitlement and metering"
  },
  {
    "API": "meteringmarketplace:ResolveCustomer",
    "EventSource": "meteringmarketplace",
    "EventName": "ResolveCustomer",
    "Description": "``ResolveCustomer`` is called by a SaaS application during the registration process"
  },
  {
    "API": "mgh:AssociateCreatedArtifact",
    "EventSource": "mgh",
    "EventName": "AssociateCreatedArtifact",
    "Description": "Associates a created artifact of an AWS cloud resource, the target receiving the migration, with the migration task performed by a migration tool"
  },
  {
    "API": "mgh:AssociateDiscoveredResource",
    "EventSource": "mgh",
    "EventName": "AssociateDiscoveredResource",
    "Description": "Associates a discovered resource ID from Application Discovery Service with a migration task"
  },
  {
    "API": "mgh:CreateProgressUpdateStream",
    "EventSource": "mgh",
    "EventName": "CreateProgressUpdateStream",
    "Description": "Creates a progress update stream which is an AWS resource used for access control as well as a namespace for migration task names that is implicitly linked to your AWS account"
  },
  {
    "API": "mgh:DeleteProgressUpdateStream",
    "EventSource": "mgh",
    "EventName": "DeleteProgressUpdateStream",
    "Description": "Deletes a progress update stream, including all of its tasks, which was previously created as an AWS resource used for access control"
  },
  {
    "API": "mgh:DescribeApplicationState",
    "EventSource": "mgh",
    "EventName": "DescribeApplicationState",
    "Description": "Gets the migration status of an application"
  },
  {
    "API": "mgh:DescribeMigrationTask",
    "EventSource": "mgh",
    "EventName": "DescribeMigrationTask",
    "Description": "Retrieves a list of all attributes associated with a specific migration task"
  },
  {
    "API": "mgh:DisassociateCreatedArtifact",
    "EventSource": "mgh",
    "EventName": "DisassociateCreatedArtifact",
    "Description": "Disassociates a created artifact of an AWS resource with a migration task performed by a migration tool that was previously associated"
  },
  {
    "API": "mgh:DisassociateDiscoveredResource",
    "EventSource": "mgh",
    "EventName": "DisassociateDiscoveredResource",
    "Description": "Disassociate an Application Discovery Service discovered resource from a migration task"
  },
  {
    "API": "mgh:GeneratePresignedUrl",
    "EventSource": "mgh",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "mgh:ImportMigrationTask",
    "EventSource": "mgh",
    "EventName": "ImportMigrationTask",
    "Description": "Registers a new migration task which represents a server, database, etc"
  },
  {
    "API": "mgh:ListApplicationStates",
    "EventSource": "mgh",
    "EventName": "ListApplicationStates",
    "Description": "Lists all the migration statuses for your applications"
  },
  {
    "API": "mgh:ListCreatedArtifacts",
    "EventSource": "mgh",
    "EventName": "ListCreatedArtifacts",
    "Description": "Lists the created artifacts attached to a given migration task in an update stream"
  },
  {
    "API": "mgh:ListDiscoveredResources",
    "EventSource": "mgh",
    "EventName": "ListDiscoveredResources",
    "Description": "Lists discovered resources associated with the given ``MigrationTask``"
  },
  {
    "API": "mgh:ListMigrationTasks",
    "EventSource": "mgh",
    "EventName": "ListMigrationTasks",
    "Description": "Lists all, or filtered by resource name, migration tasks associated with the user account making this call"
  },
  {
    "API": "mgh:ListProgressUpdateStreams",
    "EventSource": "mgh",
    "EventName": "ListProgressUpdateStreams",
    "Description": "Lists progress update streams associated with the user account making this call"
  },
  {
    "API": "mgh:NotifyApplicationState",
    "EventSource": "mgh",
    "EventName": "NotifyApplicationState",
    "Description": "Sets the migration state of an application"
  },
  {
    "API": "mgh:NotifyMigrationTaskState",
    "EventSource": "mgh",
    "EventName": "NotifyMigrationTaskState",
    "Description": "Notifies Migration Hub of the current status, progress, or other detail regarding a migration task"
  },
  {
    "API": "mgh:PutResourceAttributes",
    "EventSource": "mgh",
    "EventName": "PutResourceAttributes",
    "Description": "Provides identifying details of the resource being migrated so that it can be associated in the Application Discovery Service repository"
  },
  {
    "API": "mgn:ArchiveApplication",
    "EventSource": "mgn",
    "EventName": "ArchiveApplication",
    "Description": "Archive application"
  },
  {
    "API": "mgn:ArchiveWave",
    "EventSource": "mgn",
    "EventName": "ArchiveWave",
    "Description": "Archive wave"
  },
  {
    "API": "mgn:AssociateApplications",
    "EventSource": "mgn",
    "EventName": "AssociateApplications",
    "Description": "Associate applications to wave"
  },
  {
    "API": "mgn:AssociateSourceServers",
    "EventSource": "mgn",
    "EventName": "AssociateSourceServers",
    "Description": "Associate source servers to application"
  },
  {
    "API": "mgn:ChangeServerLifeCycleState",
    "EventSource": "mgn",
    "EventName": "ChangeServerLifeCycleState",
    "Description": "Allows the user to set the SourceServer"
  },
  {
    "API": "mgn:CreateApplication",
    "EventSource": "mgn",
    "EventName": "CreateApplication",
    "Description": "Create application"
  },
  {
    "API": "mgn:CreateConnector",
    "EventSource": "mgn",
    "EventName": "CreateConnector",
    "Description": "Create Connector"
  },
  {
    "API": "mgn:CreateLaunchConfigurationTemplate",
    "EventSource": "mgn",
    "EventName": "CreateLaunchConfigurationTemplate",
    "Description": "Creates a new Launch Configuration Template"
  },
  {
    "API": "mgn:CreateReplicationConfigurationTemplate",
    "EventSource": "mgn",
    "EventName": "CreateReplicationConfigurationTemplate",
    "Description": "Creates a new ReplicationConfigurationTemplate"
  },
  {
    "API": "mgn:CreateWave",
    "EventSource": "mgn",
    "EventName": "CreateWave",
    "Description": "Create wave"
  },
  {
    "API": "mgn:DeleteApplication",
    "EventSource": "mgn",
    "EventName": "DeleteApplication",
    "Description": "Delete application"
  },
  {
    "API": "mgn:DeleteConnector",
    "EventSource": "mgn",
    "EventName": "DeleteConnector",
    "Description": "Delete Connector"
  },
  {
    "API": "mgn:DeleteJob",
    "EventSource": "mgn",
    "EventName": "DeleteJob",
    "Description": "Deletes a single Job by ID"
  },
  {
    "API": "mgn:DeleteLaunchConfigurationTemplate",
    "EventSource": "mgn",
    "EventName": "DeleteLaunchConfigurationTemplate",
    "Description": "Deletes a single Launch Configuration Template by ID"
  },
  {
    "API": "mgn:DeleteReplicationConfigurationTemplate",
    "EventSource": "mgn",
    "EventName": "DeleteReplicationConfigurationTemplate",
    "Description": "Deletes a single Replication Configuration Template by ID"
  },
  {
    "API": "mgn:DeleteSourceServer",
    "EventSource": "mgn",
    "EventName": "DeleteSourceServer",
    "Description": "Deletes a single source server by ID"
  },
  {
    "API": "mgn:DeleteVcenterClient",
    "EventSource": "mgn",
    "EventName": "DeleteVcenterClient",
    "Description": "Deletes a given vCenter client by ID"
  },
  {
    "API": "mgn:DeleteWave",
    "EventSource": "mgn",
    "EventName": "DeleteWave",
    "Description": "Delete wave"
  },
  {
    "API": "mgn:DescribeJobLogItems",
    "EventSource": "mgn",
    "EventName": "DescribeJobLogItems",
    "Description": "Retrieves detailed job log items with paging"
  },
  {
    "API": "mgn:DescribeJobs",
    "EventSource": "mgn",
    "EventName": "DescribeJobs",
    "Description": "Returns a list of Jobs"
  },
  {
    "API": "mgn:DescribeLaunchConfigurationTemplates",
    "EventSource": "mgn",
    "EventName": "DescribeLaunchConfigurationTemplates",
    "Description": "Lists all Launch Configuration Templates, filtered by Launch Configuration Template IDs"
  },
  {
    "API": "mgn:DescribeReplicationConfigurationTemplates",
    "EventSource": "mgn",
    "EventName": "DescribeReplicationConfigurationTemplates",
    "Description": "Lists all ReplicationConfigurationTemplates, filtered by Source Server IDs"
  },
  {
    "API": "mgn:DescribeSourceServers",
    "EventSource": "mgn",
    "EventName": "DescribeSourceServers",
    "Description": "Retrieves all SourceServers or multiple SourceServers by ID"
  },
  {
    "API": "mgn:DescribeVcenterClients",
    "EventSource": "mgn",
    "EventName": "DescribeVcenterClients",
    "Description": "Returns a list of the installed vCenter clients"
  },
  {
    "API": "mgn:DisassociateApplications",
    "EventSource": "mgn",
    "EventName": "DisassociateApplications",
    "Description": "Disassociate applications from wave"
  },
  {
    "API": "mgn:DisassociateSourceServers",
    "EventSource": "mgn",
    "EventName": "DisassociateSourceServers",
    "Description": "Disassociate source servers from application"
  },
  {
    "API": "mgn:DisconnectFromService",
    "EventSource": "mgn",
    "EventName": "DisconnectFromService",
    "Description": "Disconnects specific Source Servers from Application Migration Service"
  },
  {
    "API": "mgn:FinalizeCutover",
    "EventSource": "mgn",
    "EventName": "FinalizeCutover",
    "Description": "Finalizes the cutover immediately for specific Source Servers"
  },
  {
    "API": "mgn:GeneratePresignedUrl",
    "EventSource": "mgn",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "mgn:GetLaunchConfiguration",
    "EventSource": "mgn",
    "EventName": "GetLaunchConfiguration",
    "Description": "Lists all LaunchConfigurations available, filtered by Source Server IDs"
  },
  {
    "API": "mgn:GetReplicationConfiguration",
    "EventSource": "mgn",
    "EventName": "GetReplicationConfiguration",
    "Description": "Lists all ReplicationConfigurations, filtered by Source Server ID"
  },
  {
    "API": "mgn:InitializeService",
    "EventSource": "mgn",
    "EventName": "InitializeService",
    "Description": "Initialize Application Migration Service"
  },
  {
    "API": "mgn:ListApplications",
    "EventSource": "mgn",
    "EventName": "ListApplications",
    "Description": "Retrieves all applications or multiple applications by ID"
  },
  {
    "API": "mgn:ListConnectors",
    "EventSource": "mgn",
    "EventName": "ListConnectors",
    "Description": "List Connectors"
  },
  {
    "API": "mgn:ListExportErrors",
    "EventSource": "mgn",
    "EventName": "ListExportErrors",
    "Description": "List export errors"
  },
  {
    "API": "mgn:ListExports",
    "EventSource": "mgn",
    "EventName": "ListExports",
    "Description": "List exports"
  },
  {
    "API": "mgn:ListImportErrors",
    "EventSource": "mgn",
    "EventName": "ListImportErrors",
    "Description": "List import errors"
  },
  {
    "API": "mgn:ListImports",
    "EventSource": "mgn",
    "EventName": "ListImports",
    "Description": "List imports"
  },
  {
    "API": "mgn:ListManagedAccounts",
    "EventSource": "mgn",
    "EventName": "ListManagedAccounts",
    "Description": "List Managed Accounts"
  },
  {
    "API": "mgn:ListSourceServerActions",
    "EventSource": "mgn",
    "EventName": "ListSourceServerActions",
    "Description": "List source server post migration custom actions"
  },
  {
    "API": "mgn:ListTagsForResource",
    "EventSource": "mgn",
    "EventName": "ListTagsForResource",
    "Description": "List all tags for your Application Migration Service resources"
  },
  {
    "API": "mgn:ListTemplateActions",
    "EventSource": "mgn",
    "EventName": "ListTemplateActions",
    "Description": "List template post migration custom actions"
  },
  {
    "API": "mgn:ListWaves",
    "EventSource": "mgn",
    "EventName": "ListWaves",
    "Description": "Retrieves all waves or multiple waves by ID"
  },
  {
    "API": "mgn:MarkAsArchived",
    "EventSource": "mgn",
    "EventName": "MarkAsArchived",
    "Description": "Archives specific Source Servers by setting the SourceServer"
  },
  {
    "API": "mgn:PauseReplication",
    "EventSource": "mgn",
    "EventName": "PauseReplication",
    "Description": "Pause Replication"
  },
  {
    "API": "mgn:PutSourceServerAction",
    "EventSource": "mgn",
    "EventName": "PutSourceServerAction",
    "Description": "Put source server post migration custom action"
  },
  {
    "API": "mgn:PutTemplateAction",
    "EventSource": "mgn",
    "EventName": "PutTemplateAction",
    "Description": "Put template post migration custom action"
  },
  {
    "API": "mgn:RemoveSourceServerAction",
    "EventSource": "mgn",
    "EventName": "RemoveSourceServerAction",
    "Description": "Remove source server post migration custom action"
  },
  {
    "API": "mgn:RemoveTemplateAction",
    "EventSource": "mgn",
    "EventName": "RemoveTemplateAction",
    "Description": "Remove template post migration custom action"
  },
  {
    "API": "mgn:ResumeReplication",
    "EventSource": "mgn",
    "EventName": "ResumeReplication",
    "Description": "Resume Replication"
  },
  {
    "API": "mgn:RetryDataReplication",
    "EventSource": "mgn",
    "EventName": "RetryDataReplication",
    "Description": "Causes the data replication initiation sequence to begin immediately upon next Handshake for specified SourceServer IDs, regardless of when the previous initiation started"
  },
  {
    "API": "mgn:StartCutover",
    "EventSource": "mgn",
    "EventName": "StartCutover",
    "Description": "Launches a Cutover Instance for specific Source Servers"
  },
  {
    "API": "mgn:StartExport",
    "EventSource": "mgn",
    "EventName": "StartExport",
    "Description": "Start export"
  },
  {
    "API": "mgn:StartImport",
    "EventSource": "mgn",
    "EventName": "StartImport",
    "Description": "Start import"
  },
  {
    "API": "mgn:StartReplication",
    "EventSource": "mgn",
    "EventName": "StartReplication",
    "Description": "Starts replication for SNAPSHOT_SHIPPING agents"
  },
  {
    "API": "mgn:StartTest",
    "EventSource": "mgn",
    "EventName": "StartTest",
    "Description": "Launches a Test Instance for specific Source Servers"
  },
  {
    "API": "mgn:StopReplication",
    "EventSource": "mgn",
    "EventName": "StopReplication",
    "Description": "Stop Replication"
  },
  {
    "API": "mgn:TagResource",
    "EventSource": "mgn",
    "EventName": "TagResource",
    "Description": "Adds or overwrites only the specified tags for the specified Application Migration Service resource or resources"
  },
  {
    "API": "mgn:TerminateTargetInstances",
    "EventSource": "mgn",
    "EventName": "TerminateTargetInstances",
    "Description": "Starts a job that terminates specific launched EC2 Test and Cutover instances"
  },
  {
    "API": "mgn:UnarchiveApplication",
    "EventSource": "mgn",
    "EventName": "UnarchiveApplication",
    "Description": "Unarchive application"
  },
  {
    "API": "mgn:UnarchiveWave",
    "EventSource": "mgn",
    "EventName": "UnarchiveWave",
    "Description": "Unarchive wave"
  },
  {
    "API": "mgn:UntagResource",
    "EventSource": "mgn",
    "EventName": "UntagResource",
    "Description": "Deletes the specified set of tags from the specified set of Application Migration Service resources"
  },
  {
    "API": "mgn:UpdateApplication",
    "EventSource": "mgn",
    "EventName": "UpdateApplication",
    "Description": "Update application"
  },
  {
    "API": "mgn:UpdateConnector",
    "EventSource": "mgn",
    "EventName": "UpdateConnector",
    "Description": "Update Connector"
  },
  {
    "API": "mgn:UpdateLaunchConfiguration",
    "EventSource": "mgn",
    "EventName": "UpdateLaunchConfiguration",
    "Description": "Updates multiple LaunchConfigurations by Source Server ID"
  },
  {
    "API": "mgn:UpdateLaunchConfigurationTemplate",
    "EventSource": "mgn",
    "EventName": "UpdateLaunchConfigurationTemplate",
    "Description": "Updates an existing Launch Configuration Template by ID"
  },
  {
    "API": "mgn:UpdateReplicationConfiguration",
    "EventSource": "mgn",
    "EventName": "UpdateReplicationConfiguration",
    "Description": "Allows you to update multiple ReplicationConfigurations by Source Server ID"
  },
  {
    "API": "mgn:UpdateReplicationConfigurationTemplate",
    "EventSource": "mgn",
    "EventName": "UpdateReplicationConfigurationTemplate",
    "Description": "Updates multiple ReplicationConfigurationTemplates by ID"
  },
  {
    "API": "mgn:UpdateSourceServer",
    "EventSource": "mgn",
    "EventName": "UpdateSourceServer",
    "Description": "Update Source Server"
  },
  {
    "API": "mgn:UpdateSourceServerReplicationType",
    "EventSource": "mgn",
    "EventName": "UpdateSourceServerReplicationType",
    "Description": "Allows you to change between the AGENT_BASED replication type and the SNAPSHOT_SHIPPING replication type"
  },
  {
    "API": "mgn:UpdateWave",
    "EventSource": "mgn",
    "EventName": "UpdateWave",
    "Description": "Update wave"
  },
  {
    "API": "migration-hub-refactor-spaces:CreateApplication",
    "EventSource": "migration-hub-refactor-spaces",
    "EventName": "CreateApplication",
    "Description": "Creates an Amazon Web Services Migration Hub Refactor Spaces application"
  },
  {
    "API": "migration-hub-refactor-spaces:CreateEnvironment",
    "EventSource": "migration-hub-refactor-spaces",
    "EventName": "CreateEnvironment",
    "Description": "Creates an Amazon Web Services Migration Hub Refactor Spaces environment"
  },
  {
    "API": "migration-hub-refactor-spaces:CreateRoute",
    "EventSource": "migration-hub-refactor-spaces",
    "EventName": "CreateRoute",
    "Description": "Creates an Amazon Web Services Migration Hub Refactor Spaces route"
  },
  {
    "API": "migration-hub-refactor-spaces:CreateService",
    "EventSource": "migration-hub-refactor-spaces",
    "EventName": "CreateService",
    "Description": "Creates an Amazon Web Services Migration Hub Refactor Spaces service"
  },
  {
    "API": "migration-hub-refactor-spaces:DeleteApplication",
    "EventSource": "migration-hub-refactor-spaces",
    "EventName": "DeleteApplication",
    "Description": "Deletes an Amazon Web Services Migration Hub Refactor Spaces application"
  },
  {
    "API": "migration-hub-refactor-spaces:DeleteEnvironment",
    "EventSource": "migration-hub-refactor-spaces",
    "EventName": "DeleteEnvironment",
    "Description": "Deletes an Amazon Web Services Migration Hub Refactor Spaces environment"
  },
  {
    "API": "migration-hub-refactor-spaces:DeleteResourcePolicy",
    "EventSource": "migration-hub-refactor-spaces",
    "EventName": "DeleteResourcePolicy",
    "Description": "Deletes the resource policy set for the environment"
  },
  {
    "API": "migration-hub-refactor-spaces:DeleteRoute",
    "EventSource": "migration-hub-refactor-spaces",
    "EventName": "DeleteRoute",
    "Description": "Deletes an Amazon Web Services Migration Hub Refactor Spaces route"
  },
  {
    "API": "migration-hub-refactor-spaces:DeleteService",
    "EventSource": "migration-hub-refactor-spaces",
    "EventName": "DeleteService",
    "Description": "Deletes an Amazon Web Services Migration Hub Refactor Spaces service"
  },
  {
    "API": "migration-hub-refactor-spaces:GeneratePresignedUrl",
    "EventSource": "migration-hub-refactor-spaces",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "migration-hub-refactor-spaces:GetApplication",
    "EventSource": "migration-hub-refactor-spaces",
    "EventName": "GetApplication",
    "Description": "Gets an Amazon Web Services Migration Hub Refactor Spaces application"
  },
  {
    "API": "migration-hub-refactor-spaces:GetEnvironment",
    "EventSource": "migration-hub-refactor-spaces",
    "EventName": "GetEnvironment",
    "Description": "Gets an Amazon Web Services Migration Hub Refactor Spaces environment"
  },
  {
    "API": "migration-hub-refactor-spaces:GetResourcePolicy",
    "EventSource": "migration-hub-refactor-spaces",
    "EventName": "GetResourcePolicy",
    "Description": "Gets the resource-based permission policy that is set for the given environment"
  },
  {
    "API": "migration-hub-refactor-spaces:GetRoute",
    "EventSource": "migration-hub-refactor-spaces",
    "EventName": "GetRoute",
    "Description": "Gets an Amazon Web Services Migration Hub Refactor Spaces route"
  },
  {
    "API": "migration-hub-refactor-spaces:GetService",
    "EventSource": "migration-hub-refactor-spaces",
    "EventName": "GetService",
    "Description": "Gets an Amazon Web Services Migration Hub Refactor Spaces service"
  },
  {
    "API": "migration-hub-refactor-spaces:ListApplications",
    "EventSource": "migration-hub-refactor-spaces",
    "EventName": "ListApplications",
    "Description": "Lists all the Amazon Web Services Migration Hub Refactor Spaces applications within an environment"
  },
  {
    "API": "migration-hub-refactor-spaces:ListEnvironmentVpcs",
    "EventSource": "migration-hub-refactor-spaces",
    "EventName": "ListEnvironmentVpcs",
    "Description": "Lists all Amazon Web Services Migration Hub Refactor Spaces service virtual private clouds (VPCs) that are part of the environment"
  },
  {
    "API": "migration-hub-refactor-spaces:ListEnvironments",
    "EventSource": "migration-hub-refactor-spaces",
    "EventName": "ListEnvironments",
    "Description": "Lists Amazon Web Services Migration Hub Refactor Spaces environments owned by a caller account or shared with the caller account"
  },
  {
    "API": "migration-hub-refactor-spaces:ListRoutes",
    "EventSource": "migration-hub-refactor-spaces",
    "EventName": "ListRoutes",
    "Description": "Lists all the Amazon Web Services Migration Hub Refactor Spaces routes within an application"
  },
  {
    "API": "migration-hub-refactor-spaces:ListServices",
    "EventSource": "migration-hub-refactor-spaces",
    "EventName": "ListServices",
    "Description": "Lists all the Amazon Web Services Migration Hub Refactor Spaces services within an application"
  },
  {
    "API": "migration-hub-refactor-spaces:ListTagsForResource",
    "EventSource": "migration-hub-refactor-spaces",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags of a resource"
  },
  {
    "API": "migration-hub-refactor-spaces:PutResourcePolicy",
    "EventSource": "migration-hub-refactor-spaces",
    "EventName": "PutResourcePolicy",
    "Description": "Attaches a resource-based permission policy to the Amazon Web Services Migration Hub Refactor Spaces environment"
  },
  {
    "API": "migration-hub-refactor-spaces:TagResource",
    "EventSource": "migration-hub-refactor-spaces",
    "EventName": "TagResource",
    "Description": "Removes the tags of a given resource"
  },
  {
    "API": "migration-hub-refactor-spaces:UntagResource",
    "EventSource": "migration-hub-refactor-spaces",
    "EventName": "UntagResource",
    "Description": "Adds to or modifies the tags of the given resource"
  },
  {
    "API": "migration-hub-refactor-spaces:UpdateRoute",
    "EventSource": "migration-hub-refactor-spaces",
    "EventName": "UpdateRoute",
    "Description": "Updates an Amazon Web Services Migration Hub Refactor Spaces route"
  },
  {
    "API": "migrationhub-config:CreateHomeRegionControl",
    "EventSource": "migrationhub-config",
    "EventName": "CreateHomeRegionControl",
    "Description": "This API sets up the home region for the calling account only"
  },
  {
    "API": "migrationhub-config:DeleteHomeRegionControl",
    "EventSource": "migrationhub-config",
    "EventName": "DeleteHomeRegionControl",
    "Description": "This operation deletes the home region configuration for the calling account"
  },
  {
    "API": "migrationhub-config:DescribeHomeRegionControls",
    "EventSource": "migrationhub-config",
    "EventName": "DescribeHomeRegionControls",
    "Description": "This API permits filtering on the ``ControlId`` and ``HomeRegion`` fields"
  },
  {
    "API": "migrationhub-config:GeneratePresignedUrl",
    "EventSource": "migrationhub-config",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "migrationhub-config:GetHomeRegion",
    "EventSource": "migrationhub-config",
    "EventName": "GetHomeRegion",
    "Description": "Returns the calling account’s home region, if configured"
  },
  {
    "API": "migrationhuborchestrator:CreateTemplate",
    "EventSource": "migrationhuborchestrator",
    "EventName": "CreateTemplate",
    "Description": "Creates a migration workflow template"
  },
  {
    "API": "migrationhuborchestrator:CreateWorkflow",
    "EventSource": "migrationhuborchestrator",
    "EventName": "CreateWorkflow",
    "Description": "Create a workflow to orchestrate your migrations"
  },
  {
    "API": "migrationhuborchestrator:CreateWorkflowStep",
    "EventSource": "migrationhuborchestrator",
    "EventName": "CreateWorkflowStep",
    "Description": "Create a step in the migration workflow"
  },
  {
    "API": "migrationhuborchestrator:CreateWorkflowStepGroup",
    "EventSource": "migrationhuborchestrator",
    "EventName": "CreateWorkflowStepGroup",
    "Description": "Create a step group in a migration workflow"
  },
  {
    "API": "migrationhuborchestrator:DeleteTemplate",
    "EventSource": "migrationhuborchestrator",
    "EventName": "DeleteTemplate",
    "Description": "Deletes a migration workflow template"
  },
  {
    "API": "migrationhuborchestrator:DeleteWorkflow",
    "EventSource": "migrationhuborchestrator",
    "EventName": "DeleteWorkflow",
    "Description": "Delete a migration workflow"
  },
  {
    "API": "migrationhuborchestrator:DeleteWorkflowStep",
    "EventSource": "migrationhuborchestrator",
    "EventName": "DeleteWorkflowStep",
    "Description": "Delete a step in a migration workflow"
  },
  {
    "API": "migrationhuborchestrator:DeleteWorkflowStepGroup",
    "EventSource": "migrationhuborchestrator",
    "EventName": "DeleteWorkflowStepGroup",
    "Description": "Delete a step group in a migration workflow"
  },
  {
    "API": "migrationhuborchestrator:GeneratePresignedUrl",
    "EventSource": "migrationhuborchestrator",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "migrationhuborchestrator:GetTemplate",
    "EventSource": "migrationhuborchestrator",
    "EventName": "GetTemplate",
    "Description": "Get the template you want to use for creating a migration workflow"
  },
  {
    "API": "migrationhuborchestrator:GetTemplateStep",
    "EventSource": "migrationhuborchestrator",
    "EventName": "GetTemplateStep",
    "Description": "Get a specific step in a template"
  },
  {
    "API": "migrationhuborchestrator:GetTemplateStepGroup",
    "EventSource": "migrationhuborchestrator",
    "EventName": "GetTemplateStepGroup",
    "Description": "Get a step group in a template"
  },
  {
    "API": "migrationhuborchestrator:GetWorkflow",
    "EventSource": "migrationhuborchestrator",
    "EventName": "GetWorkflow",
    "Description": "Get migration workflow"
  },
  {
    "API": "migrationhuborchestrator:GetWorkflowStep",
    "EventSource": "migrationhuborchestrator",
    "EventName": "GetWorkflowStep",
    "Description": "Get a step in the migration workflow"
  },
  {
    "API": "migrationhuborchestrator:GetWorkflowStepGroup",
    "EventSource": "migrationhuborchestrator",
    "EventName": "GetWorkflowStepGroup",
    "Description": "Get the step group of a migration workflow"
  },
  {
    "API": "migrationhuborchestrator:ListPlugins",
    "EventSource": "migrationhuborchestrator",
    "EventName": "ListPlugins",
    "Description": "List AWS Migration Hub Orchestrator plugins"
  },
  {
    "API": "migrationhuborchestrator:ListTagsForResource",
    "EventSource": "migrationhuborchestrator",
    "EventName": "ListTagsForResource",
    "Description": "List the tags added to a resource"
  },
  {
    "API": "migrationhuborchestrator:ListTemplateStepGroups",
    "EventSource": "migrationhuborchestrator",
    "EventName": "ListTemplateStepGroups",
    "Description": "List the step groups in a template"
  },
  {
    "API": "migrationhuborchestrator:ListTemplateSteps",
    "EventSource": "migrationhuborchestrator",
    "EventName": "ListTemplateSteps",
    "Description": "List the steps in a template"
  },
  {
    "API": "migrationhuborchestrator:ListTemplates",
    "EventSource": "migrationhuborchestrator",
    "EventName": "ListTemplates",
    "Description": "List the templates available in Migration Hub Orchestrator to create a migration workflow"
  },
  {
    "API": "migrationhuborchestrator:ListWorkflowStepGroups",
    "EventSource": "migrationhuborchestrator",
    "EventName": "ListWorkflowStepGroups",
    "Description": "List the step groups in a migration workflow"
  },
  {
    "API": "migrationhuborchestrator:ListWorkflowSteps",
    "EventSource": "migrationhuborchestrator",
    "EventName": "ListWorkflowSteps",
    "Description": "List the steps in a workflow"
  },
  {
    "API": "migrationhuborchestrator:ListWorkflows",
    "EventSource": "migrationhuborchestrator",
    "EventName": "ListWorkflows",
    "Description": "List the migration workflows"
  },
  {
    "API": "migrationhuborchestrator:RetryWorkflowStep",
    "EventSource": "migrationhuborchestrator",
    "EventName": "RetryWorkflowStep",
    "Description": "Retry a failed step in a migration workflow"
  },
  {
    "API": "migrationhuborchestrator:StartWorkflow",
    "EventSource": "migrationhuborchestrator",
    "EventName": "StartWorkflow",
    "Description": "Start a migration workflow"
  },
  {
    "API": "migrationhuborchestrator:StopWorkflow",
    "EventSource": "migrationhuborchestrator",
    "EventName": "StopWorkflow",
    "Description": "Stop an ongoing migration workflow"
  },
  {
    "API": "migrationhuborchestrator:TagResource",
    "EventSource": "migrationhuborchestrator",
    "EventName": "TagResource",
    "Description": "Tag a resource by specifying its Amazon Resource Name (ARN)"
  },
  {
    "API": "migrationhuborchestrator:UntagResource",
    "EventSource": "migrationhuborchestrator",
    "EventName": "UntagResource",
    "Description": "Deletes the tags for a resource"
  },
  {
    "API": "migrationhuborchestrator:UpdateTemplate",
    "EventSource": "migrationhuborchestrator",
    "EventName": "UpdateTemplate",
    "Description": "Updates a migration workflow template"
  },
  {
    "API": "migrationhuborchestrator:UpdateWorkflow",
    "EventSource": "migrationhuborchestrator",
    "EventName": "UpdateWorkflow",
    "Description": "Update a migration workflow"
  },
  {
    "API": "migrationhuborchestrator:UpdateWorkflowStep",
    "EventSource": "migrationhuborchestrator",
    "EventName": "UpdateWorkflowStep",
    "Description": "Update a step in a migration workflow"
  },
  {
    "API": "migrationhuborchestrator:UpdateWorkflowStepGroup",
    "EventSource": "migrationhuborchestrator",
    "EventName": "UpdateWorkflowStepGroup",
    "Description": "Update the step group in a migration workflow"
  },
  {
    "API": "migrationhubstrategy:GeneratePresignedUrl",
    "EventSource": "migrationhubstrategy",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "migrationhubstrategy:GetApplicationComponentDetails",
    "EventSource": "migrationhubstrategy",
    "EventName": "GetApplicationComponentDetails",
    "Description": "Retrieves details about an application component"
  },
  {
    "API": "migrationhubstrategy:GetApplicationComponentStrategies",
    "EventSource": "migrationhubstrategy",
    "EventName": "GetApplicationComponentStrategies",
    "Description": "Retrieves a list of all the recommended strategies and tools for an application component running on a server"
  },
  {
    "API": "migrationhubstrategy:GetAssessment",
    "EventSource": "migrationhubstrategy",
    "EventName": "GetAssessment",
    "Description": "Retrieves the status of an on-going assessment"
  },
  {
    "API": "migrationhubstrategy:GetImportFileTask",
    "EventSource": "migrationhubstrategy",
    "EventName": "GetImportFileTask",
    "Description": "Retrieves the details about a specific import task"
  },
  {
    "API": "migrationhubstrategy:GetLatestAssessmentId",
    "EventSource": "migrationhubstrategy",
    "EventName": "GetLatestAssessmentId",
    "Description": "Retrieve the latest ID of a specific assessment task"
  },
  {
    "API": "migrationhubstrategy:GetPortfolioPreferences",
    "EventSource": "migrationhubstrategy",
    "EventName": "GetPortfolioPreferences",
    "Description": "Retrieves your migration and modernization preferences"
  },
  {
    "API": "migrationhubstrategy:GetPortfolioSummary",
    "EventSource": "migrationhubstrategy",
    "EventName": "GetPortfolioSummary",
    "Description": "Retrieves overall summary including the number of servers to rehost and the overall number of anti-patterns"
  },
  {
    "API": "migrationhubstrategy:GetRecommendationReportDetails",
    "EventSource": "migrationhubstrategy",
    "EventName": "GetRecommendationReportDetails",
    "Description": "Retrieves detailed information about the specified recommendation report"
  },
  {
    "API": "migrationhubstrategy:GetServerDetails",
    "EventSource": "migrationhubstrategy",
    "EventName": "GetServerDetails",
    "Description": "Retrieves detailed information about a specified server"
  },
  {
    "API": "migrationhubstrategy:GetServerStrategies",
    "EventSource": "migrationhubstrategy",
    "EventName": "GetServerStrategies",
    "Description": "Retrieves recommended strategies and tools for the specified server"
  },
  {
    "API": "migrationhubstrategy:ListAnalyzableServers",
    "EventSource": "migrationhubstrategy",
    "EventName": "ListAnalyzableServers",
    "Description": "Retrieves a list of all the servers fetched from customer vCenter using Strategy Recommendation Collector"
  },
  {
    "API": "migrationhubstrategy:ListApplicationComponents",
    "EventSource": "migrationhubstrategy",
    "EventName": "ListApplicationComponents",
    "Description": "Retrieves a list of all the application components (processes)"
  },
  {
    "API": "migrationhubstrategy:ListCollectors",
    "EventSource": "migrationhubstrategy",
    "EventName": "ListCollectors",
    "Description": "Retrieves a list of all the installed collectors"
  },
  {
    "API": "migrationhubstrategy:ListImportFileTask",
    "EventSource": "migrationhubstrategy",
    "EventName": "ListImportFileTask",
    "Description": "Retrieves a list of all the imports performed"
  },
  {
    "API": "migrationhubstrategy:ListServers",
    "EventSource": "migrationhubstrategy",
    "EventName": "ListServers",
    "Description": "Returns a list of all the servers"
  },
  {
    "API": "migrationhubstrategy:PutPortfolioPreferences",
    "EventSource": "migrationhubstrategy",
    "EventName": "PutPortfolioPreferences",
    "Description": "Saves the specified migration and modernization preferences"
  },
  {
    "API": "migrationhubstrategy:StartAssessment",
    "EventSource": "migrationhubstrategy",
    "EventName": "StartAssessment",
    "Description": "Starts the assessment of an on-premises environment"
  },
  {
    "API": "migrationhubstrategy:StartImportFileTask",
    "EventSource": "migrationhubstrategy",
    "EventName": "StartImportFileTask",
    "Description": "Starts a file import"
  },
  {
    "API": "migrationhubstrategy:StartRecommendationReportGeneration",
    "EventSource": "migrationhubstrategy",
    "EventName": "StartRecommendationReportGeneration",
    "Description": "Starts generating a recommendation report"
  },
  {
    "API": "migrationhubstrategy:StopAssessment",
    "EventSource": "migrationhubstrategy",
    "EventName": "StopAssessment",
    "Description": "Stops the assessment of an on-premises environment"
  },
  {
    "API": "migrationhubstrategy:UpdateApplicationComponentConfig",
    "EventSource": "migrationhubstrategy",
    "EventName": "UpdateApplicationComponentConfig",
    "Description": "Updates the configuration of an application component"
  },
  {
    "API": "migrationhubstrategy:UpdateServerConfig",
    "EventSource": "migrationhubstrategy",
    "EventName": "UpdateServerConfig",
    "Description": "Updates the configuration of the specified server"
  },
  {
    "API": "mobile:CreateProject",
    "EventSource": "mobile",
    "EventName": "CreateProject",
    "Description": "Creates an AWS Mobile Hub project"
  },
  {
    "API": "mobile:DeleteProject",
    "EventSource": "mobile",
    "EventName": "DeleteProject",
    "Description": "Delets a project in AWS Mobile Hub"
  },
  {
    "API": "mobile:DescribeBundle",
    "EventSource": "mobile",
    "EventName": "DescribeBundle",
    "Description": "Get the bundle details for the requested bundle id"
  },
  {
    "API": "mobile:DescribeProject",
    "EventSource": "mobile",
    "EventName": "DescribeProject",
    "Description": "Gets details about a project in AWS Mobile Hub"
  },
  {
    "API": "mobile:ExportBundle",
    "EventSource": "mobile",
    "EventName": "ExportBundle",
    "Description": "Generates customized software development kit (SDK) and or tool packages used to integrate mobile web or mobile app clients with backend AWS resources"
  },
  {
    "API": "mobile:ExportProject",
    "EventSource": "mobile",
    "EventName": "ExportProject",
    "Description": "Exports project configuration to a snapshot which can be downloaded and shared"
  },
  {
    "API": "mobile:GeneratePresignedUrl",
    "EventSource": "mobile",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "mobile:ListBundles",
    "EventSource": "mobile",
    "EventName": "ListBundles",
    "Description": "List all available bundles"
  },
  {
    "API": "mobile:ListProjects",
    "EventSource": "mobile",
    "EventName": "ListProjects",
    "Description": "Lists projects in AWS Mobile Hub"
  },
  {
    "API": "mobile:UpdateProject",
    "EventSource": "mobile",
    "EventName": "UpdateProject",
    "Description": "Update an existing project"
  },
  {
    "API": "mq:CreateBroker",
    "EventSource": "mq",
    "EventName": "CreateBroker",
    "Description": "Creates a broker"
  },
  {
    "API": "mq:CreateConfiguration",
    "EventSource": "mq",
    "EventName": "CreateConfiguration",
    "Description": "Creates a new configuration for the specified configuration name"
  },
  {
    "API": "mq:CreateTags",
    "EventSource": "mq",
    "EventName": "CreateTags",
    "Description": "Add a tag to a resource"
  },
  {
    "API": "mq:CreateUser",
    "EventSource": "mq",
    "EventName": "CreateUser",
    "Description": "Creates an ActiveMQ user"
  },
  {
    "API": "mq:DeleteBroker",
    "EventSource": "mq",
    "EventName": "DeleteBroker",
    "Description": "Deletes a broker"
  },
  {
    "API": "mq:DeleteTags",
    "EventSource": "mq",
    "EventName": "DeleteTags",
    "Description": "Removes a tag from a resource"
  },
  {
    "API": "mq:DeleteUser",
    "EventSource": "mq",
    "EventName": "DeleteUser",
    "Description": "Deletes an ActiveMQ user"
  },
  {
    "API": "mq:DescribeBroker",
    "EventSource": "mq",
    "EventName": "DescribeBroker",
    "Description": "Returns information about the specified broker"
  },
  {
    "API": "mq:DescribeBrokerEngineTypes",
    "EventSource": "mq",
    "EventName": "DescribeBrokerEngineTypes",
    "Description": "Describe available engine types and versions"
  },
  {
    "API": "mq:DescribeBrokerInstanceOptions",
    "EventSource": "mq",
    "EventName": "DescribeBrokerInstanceOptions",
    "Description": "Describe available broker instance options"
  },
  {
    "API": "mq:DescribeConfiguration",
    "EventSource": "mq",
    "EventName": "DescribeConfiguration",
    "Description": "Returns information about the specified configuration"
  },
  {
    "API": "mq:DescribeConfigurationRevision",
    "EventSource": "mq",
    "EventName": "DescribeConfigurationRevision",
    "Description": "Returns the specified configuration revision for the specified configuration"
  },
  {
    "API": "mq:DescribeUser",
    "EventSource": "mq",
    "EventName": "DescribeUser",
    "Description": "Returns information about an ActiveMQ user"
  },
  {
    "API": "mq:GeneratePresignedUrl",
    "EventSource": "mq",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "mq:ListBrokers",
    "EventSource": "mq",
    "EventName": "ListBrokers",
    "Description": "Returns a list of all brokers"
  },
  {
    "API": "mq:ListConfigurationRevisions",
    "EventSource": "mq",
    "EventName": "ListConfigurationRevisions",
    "Description": "Returns a list of all revisions for the specified configuration"
  },
  {
    "API": "mq:ListConfigurations",
    "EventSource": "mq",
    "EventName": "ListConfigurations",
    "Description": "Returns a list of all configurations"
  },
  {
    "API": "mq:ListTags",
    "EventSource": "mq",
    "EventName": "ListTags",
    "Description": "Lists tags for a resource"
  },
  {
    "API": "mq:ListUsers",
    "EventSource": "mq",
    "EventName": "ListUsers",
    "Description": "Returns a list of all ActiveMQ users"
  },
  {
    "API": "mq:RebootBroker",
    "EventSource": "mq",
    "EventName": "RebootBroker",
    "Description": "Reboots a broker"
  },
  {
    "API": "mq:UpdateBroker",
    "EventSource": "mq",
    "EventName": "UpdateBroker",
    "Description": "Adds a pending configuration change to a broker"
  },
  {
    "API": "mq:UpdateConfiguration",
    "EventSource": "mq",
    "EventName": "UpdateConfiguration",
    "Description": "Updates the specified configuration"
  },
  {
    "API": "mq:UpdateUser",
    "EventSource": "mq",
    "EventName": "UpdateUser",
    "Description": "Updates the information for an ActiveMQ user"
  },
  {
    "API": "mturk:AcceptQualificationRequest",
    "EventSource": "mturk",
    "EventName": "AcceptQualificationRequest",
    "Description": "The ``AcceptQualificationRequest`` operation approves a Worker's request for a Qualification"
  },
  {
    "API": "mturk:ApproveAssignment",
    "EventSource": "mturk",
    "EventName": "ApproveAssignment",
    "Description": "The ``ApproveAssignment`` operation approves the results of a completed assignment"
  },
  {
    "API": "mturk:AssociateQualificationWithWorker",
    "EventSource": "mturk",
    "EventName": "AssociateQualificationWithWorker",
    "Description": "The ``AssociateQualificationWithWorker`` operation gives a Worker a Qualification"
  },
  {
    "API": "mturk:CreateAdditionalAssignmentsForHit",
    "EventSource": "mturk",
    "EventName": "CreateAdditionalAssignmentsForHit",
    "Description": "The ``CreateAdditionalAssignmentsForHIT`` operation increases the maximum number of assignments of an existing HIT"
  },
  {
    "API": "mturk:CreateHit",
    "EventSource": "mturk",
    "EventName": "CreateHit",
    "Description": "The ``CreateHIT`` operation creates a new Human Intelligence Task (HIT)"
  },
  {
    "API": "mturk:CreateHitType",
    "EventSource": "mturk",
    "EventName": "CreateHitType",
    "Description": "The ``CreateHITType`` operation creates a new HIT type"
  },
  {
    "API": "mturk:CreateHitWithHitType",
    "EventSource": "mturk",
    "EventName": "CreateHitWithHitType",
    "Description": "The ``CreateHITWithHITType`` operation creates a new Human Intelligence Task (HIT) using an existing HITTypeID generated by the ``CreateHITType`` operation"
  },
  {
    "API": "mturk:CreateQualificationType",
    "EventSource": "mturk",
    "EventName": "CreateQualificationType",
    "Description": "The ``CreateQualificationType`` operation creates a new Qualification type, which is represented by a ``QualificationType`` data structure"
  },
  {
    "API": "mturk:CreateWorkerBlock",
    "EventSource": "mturk",
    "EventName": "CreateWorkerBlock",
    "Description": "The ``CreateWorkerBlock`` operation allows you to prevent a Worker from working on your HITs"
  },
  {
    "API": "mturk:DeleteHit",
    "EventSource": "mturk",
    "EventName": "DeleteHit",
    "Description": "The ``DeleteHIT`` operation is used to delete HIT that is no longer needed"
  },
  {
    "API": "mturk:DeleteQualificationType",
    "EventSource": "mturk",
    "EventName": "DeleteQualificationType",
    "Description": "The ``DeleteQualificationType`` deletes a Qualification type and deletes any HIT types that are associated with the Qualification type"
  },
  {
    "API": "mturk:DeleteWorkerBlock",
    "EventSource": "mturk",
    "EventName": "DeleteWorkerBlock",
    "Description": "The ``DeleteWorkerBlock`` operation allows you to reinstate a blocked Worker to work on your HITs"
  },
  {
    "API": "mturk:DisassociateQualificationFromWorker",
    "EventSource": "mturk",
    "EventName": "DisassociateQualificationFromWorker",
    "Description": "The ``DisassociateQualificationFromWorker`` revokes a previously granted Qualification from a user"
  },
  {
    "API": "mturk:GeneratePresignedUrl",
    "EventSource": "mturk",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "mturk:GetAccountBalance",
    "EventSource": "mturk",
    "EventName": "GetAccountBalance",
    "Description": "The ``GetAccountBalance`` operation retrieves the Prepaid HITs balance in your Amazon Mechanical Turk account if you are a Prepaid Requester"
  },
  {
    "API": "mturk:GetAssignment",
    "EventSource": "mturk",
    "EventName": "GetAssignment",
    "Description": "The ``GetAssignment`` operation retrieves the details of the specified Assignment"
  },
  {
    "API": "mturk:GetFileUploadUrl",
    "EventSource": "mturk",
    "EventName": "GetFileUploadUrl",
    "Description": "The ``GetFileUploadURL`` operation generates and returns a temporary URL"
  },
  {
    "API": "mturk:GetHit",
    "EventSource": "mturk",
    "EventName": "GetHit",
    "Description": "The ``GetHIT`` operation retrieves the details of the specified HIT"
  },
  {
    "API": "mturk:GetQualificationScore",
    "EventSource": "mturk",
    "EventName": "GetQualificationScore",
    "Description": "The ``GetQualificationScore`` operation returns the value of a Worker's Qualification for a given Qualification type"
  },
  {
    "API": "mturk:GetQualificationType",
    "EventSource": "mturk",
    "EventName": "GetQualificationType",
    "Description": "The ``GetQualificationType``operation retrieves information about a Qualification type using its ID"
  },
  {
    "API": "mturk:ListAssignmentsForHit",
    "EventSource": "mturk",
    "EventName": "ListAssignmentsForHit",
    "Description": "The ``ListAssignmentsForHIT`` operation retrieves completed assignments for a HIT"
  },
  {
    "API": "mturk:ListBonusPayments",
    "EventSource": "mturk",
    "EventName": "ListBonusPayments",
    "Description": "The ``ListBonusPayments`` operation retrieves the amounts of bonuses you have paid to Workers for a given HIT or assignment"
  },
  {
    "API": "mturk:ListHits",
    "EventSource": "mturk",
    "EventName": "ListHits",
    "Description": "The ``ListHITs`` operation returns all of a Requester's HITs"
  },
  {
    "API": "mturk:ListHitsForQualificationType",
    "EventSource": "mturk",
    "EventName": "ListHitsForQualificationType",
    "Description": "The ``ListHITsForQualificationType`` operation returns the HITs that use the given Qualification type for a Qualification requirement"
  },
  {
    "API": "mturk:ListQualificationRequests",
    "EventSource": "mturk",
    "EventName": "ListQualificationRequests",
    "Description": "The ``ListQualificationRequests`` operation retrieves requests for Qualifications of a particular Qualification type"
  },
  {
    "API": "mturk:ListQualificationTypes",
    "EventSource": "mturk",
    "EventName": "ListQualificationTypes",
    "Description": "The ``ListQualificationTypes`` operation returns a list of Qualification types, filtered by an optional search term"
  },
  {
    "API": "mturk:ListReviewPolicyResultsForHit",
    "EventSource": "mturk",
    "EventName": "ListReviewPolicyResultsForHit",
    "Description": "The ``ListReviewPolicyResultsForHIT`` operation retrieves the computed results and the actions taken in the course of executing your Review Policies for a given HIT"
  },
  {
    "API": "mturk:ListReviewableHits",
    "EventSource": "mturk",
    "EventName": "ListReviewableHits",
    "Description": "The ``ListReviewableHITs`` operation retrieves the HITs with Status equal to Reviewable or Status equal to Reviewing that belong to the Requester calling the operation"
  },
  {
    "API": "mturk:ListWorkerBlocks",
    "EventSource": "mturk",
    "EventName": "ListWorkerBlocks",
    "Description": "The ``ListWorkersBlocks`` operation retrieves a list of Workers who are blocked from working on your HITs"
  },
  {
    "API": "mturk:ListWorkersWithQualificationType",
    "EventSource": "mturk",
    "EventName": "ListWorkersWithQualificationType",
    "Description": "The ``ListWorkersWithQualificationType`` operation returns all of the Workers that have been associated with a given Qualification type"
  },
  {
    "API": "mturk:NotifyWorkers",
    "EventSource": "mturk",
    "EventName": "NotifyWorkers",
    "Description": "The ``NotifyWorkers`` operation sends an email to one or more Workers that you specify with the Worker ID"
  },
  {
    "API": "mturk:RejectAssignment",
    "EventSource": "mturk",
    "EventName": "RejectAssignment",
    "Description": "The ``RejectAssignment`` operation rejects the results of a completed assignment"
  },
  {
    "API": "mturk:RejectQualificationRequest",
    "EventSource": "mturk",
    "EventName": "RejectQualificationRequest",
    "Description": "The ``RejectQualificationRequest`` operation rejects a user's request for a Qualification"
  },
  {
    "API": "mturk:SendBonus",
    "EventSource": "mturk",
    "EventName": "SendBonus",
    "Description": "The ``SendBonus`` operation issues a payment of money from your account to a Worker"
  },
  {
    "API": "mturk:SendTestEventNotification",
    "EventSource": "mturk",
    "EventName": "SendTestEventNotification",
    "Description": "The ``SendTestEventNotification`` operation causes Amazon Mechanical Turk to send a notification message as if a HIT event occurred, according to the provided notification specification"
  },
  {
    "API": "mturk:UpdateExpirationForHit",
    "EventSource": "mturk",
    "EventName": "UpdateExpirationForHit",
    "Description": "The ``UpdateExpirationForHIT`` operation allows you update the expiration time of a HIT"
  },
  {
    "API": "mturk:UpdateHitReviewStatus",
    "EventSource": "mturk",
    "EventName": "UpdateHitReviewStatus",
    "Description": "The ``UpdateHITReviewStatus`` operation updates the status of a HIT"
  },
  {
    "API": "mturk:UpdateHitTypeOfHit",
    "EventSource": "mturk",
    "EventName": "UpdateHitTypeOfHit",
    "Description": "The ``UpdateHITTypeOfHIT`` operation allows you to change the HITType properties of a HIT"
  },
  {
    "API": "mturk:UpdateNotificationSettings",
    "EventSource": "mturk",
    "EventName": "UpdateNotificationSettings",
    "Description": "The ``UpdateNotificationSettings`` operation creates, updates, disables or re-enables notifications for a HIT type"
  },
  {
    "API": "mturk:UpdateQualificationType",
    "EventSource": "mturk",
    "EventName": "UpdateQualificationType",
    "Description": "The ``UpdateQualificationType`` operation modifies the attributes of an existing Qualification type, which is represented by a QualificationType data structure"
  },
  {
    "API": "mwaa:CreateCliToken",
    "EventSource": "mwaa",
    "EventName": "CreateCliToken",
    "Description": "Creates a CLI token for the Airflow CLI"
  },
  {
    "API": "mwaa:CreateEnvironment",
    "EventSource": "mwaa",
    "EventName": "CreateEnvironment",
    "Description": "Creates an Amazon Managed Workflows for Apache Airflow (MWAA) environment"
  },
  {
    "API": "mwaa:CreateWebLoginToken",
    "EventSource": "mwaa",
    "EventName": "CreateWebLoginToken",
    "Description": "Creates a web login token for the Airflow Web UI"
  },
  {
    "API": "mwaa:DeleteEnvironment",
    "EventSource": "mwaa",
    "EventName": "DeleteEnvironment",
    "Description": "Deletes an Amazon Managed Workflows for Apache Airflow (MWAA) environment"
  },
  {
    "API": "mwaa:GeneratePresignedUrl",
    "EventSource": "mwaa",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "mwaa:GetEnvironment",
    "EventSource": "mwaa",
    "EventName": "GetEnvironment",
    "Description": "Describes an Amazon Managed Workflows for Apache Airflow (MWAA) environment"
  },
  {
    "API": "mwaa:ListEnvironments",
    "EventSource": "mwaa",
    "EventName": "ListEnvironments",
    "Description": "Lists the Amazon Managed Workflows for Apache Airflow (MWAA) environments"
  },
  {
    "API": "mwaa:ListTagsForResource",
    "EventSource": "mwaa",
    "EventName": "ListTagsForResource",
    "Description": "Lists the key-value tag pairs associated to the Amazon Managed Workflows for Apache Airflow (MWAA) environment"
  },
  {
    "API": "mwaa:PublishMetrics",
    "EventSource": "mwaa",
    "EventName": "PublishMetrics",
    "Description": "**Internal only**"
  },
  {
    "API": "mwaa:TagResource",
    "EventSource": "mwaa",
    "EventName": "TagResource",
    "Description": "Associates key-value tag pairs to your Amazon Managed Workflows for Apache Airflow (MWAA) environment"
  },
  {
    "API": "mwaa:UntagResource",
    "EventSource": "mwaa",
    "EventName": "UntagResource",
    "Description": "Removes key-value tag pairs associated to your Amazon Managed Workflows for Apache Airflow (MWAA) environment"
  },
  {
    "API": "mwaa:UpdateEnvironment",
    "EventSource": "mwaa",
    "EventName": "UpdateEnvironment",
    "Description": "Updates an Amazon Managed Workflows for Apache Airflow (MWAA) environment"
  },
  {
    "API": "neptune:AddRoleToDbCluster",
    "EventSource": "neptune",
    "EventName": "AddRoleToDbCluster",
    "Description": "Associates an Identity and Access Management (IAM) role with an Neptune DB cluster"
  },
  {
    "API": "neptune:AddSourceIdentifierToSubscription",
    "EventSource": "neptune",
    "EventName": "AddSourceIdentifierToSubscription",
    "Description": "Adds a source identifier to an existing event notification subscription"
  },
  {
    "API": "neptune:AddTagsToResource",
    "EventSource": "neptune",
    "EventName": "AddTagsToResource",
    "Description": "Adds metadata tags to an Amazon Neptune resource"
  },
  {
    "API": "neptune:ApplyPendingMaintenanceAction",
    "EventSource": "neptune",
    "EventName": "ApplyPendingMaintenanceAction",
    "Description": "Applies a pending maintenance action to a resource (for example, to a DB instance)"
  },
  {
    "API": "neptune:CopyDbClusterParameterGroup",
    "EventSource": "neptune",
    "EventName": "CopyDbClusterParameterGroup",
    "Description": "Copies the specified DB cluster parameter group"
  },
  {
    "API": "neptune:CopyDbClusterSnapshot",
    "EventSource": "neptune",
    "EventName": "CopyDbClusterSnapshot",
    "Description": "Copies a snapshot of a DB cluster"
  },
  {
    "API": "neptune:CopyDbParameterGroup",
    "EventSource": "neptune",
    "EventName": "CopyDbParameterGroup",
    "Description": "Copies the specified DB parameter group"
  },
  {
    "API": "neptune:CreateDbCluster",
    "EventSource": "neptune",
    "EventName": "CreateDbCluster",
    "Description": "Creates a new Amazon Neptune DB cluster"
  },
  {
    "API": "neptune:CreateDbClusterEndpoint",
    "EventSource": "neptune",
    "EventName": "CreateDbClusterEndpoint",
    "Description": "Creates a new custom endpoint and associates it with an Amazon Neptune DB cluster"
  },
  {
    "API": "neptune:CreateDbClusterParameterGroup",
    "EventSource": "neptune",
    "EventName": "CreateDbClusterParameterGroup",
    "Description": "Creates a new DB cluster parameter group"
  },
  {
    "API": "neptune:CreateDbClusterSnapshot",
    "EventSource": "neptune",
    "EventName": "CreateDbClusterSnapshot",
    "Description": "Creates a snapshot of a DB cluster"
  },
  {
    "API": "neptune:CreateDbInstance",
    "EventSource": "neptune",
    "EventName": "CreateDbInstance",
    "Description": "Creates a new DB instance"
  },
  {
    "API": "neptune:CreateDbParameterGroup",
    "EventSource": "neptune",
    "EventName": "CreateDbParameterGroup",
    "Description": "Creates a new DB parameter group"
  },
  {
    "API": "neptune:CreateDbSubnetGroup",
    "EventSource": "neptune",
    "EventName": "CreateDbSubnetGroup",
    "Description": "Creates a new DB subnet group"
  },
  {
    "API": "neptune:CreateEventSubscription",
    "EventSource": "neptune",
    "EventName": "CreateEventSubscription",
    "Description": "Creates an event notification subscription"
  },
  {
    "API": "neptune:CreateGlobalCluster",
    "EventSource": "neptune",
    "EventName": "CreateGlobalCluster",
    "Description": "Creates a Neptune global database spread across multiple Amazon Regions"
  },
  {
    "API": "neptune:DeleteDbCluster",
    "EventSource": "neptune",
    "EventName": "DeleteDbCluster",
    "Description": "The DeleteDBCluster action deletes a previously provisioned DB cluster"
  },
  {
    "API": "neptune:DeleteDbClusterEndpoint",
    "EventSource": "neptune",
    "EventName": "DeleteDbClusterEndpoint",
    "Description": "Deletes a custom endpoint and removes it from an Amazon Neptune DB cluster"
  },
  {
    "API": "neptune:DeleteDbClusterParameterGroup",
    "EventSource": "neptune",
    "EventName": "DeleteDbClusterParameterGroup",
    "Description": "Deletes a specified DB cluster parameter group"
  },
  {
    "API": "neptune:DeleteDbClusterSnapshot",
    "EventSource": "neptune",
    "EventName": "DeleteDbClusterSnapshot",
    "Description": "Deletes a DB cluster snapshot"
  },
  {
    "API": "neptune:DeleteDbInstance",
    "EventSource": "neptune",
    "EventName": "DeleteDbInstance",
    "Description": "The DeleteDBInstance action deletes a previously provisioned DB instance"
  },
  {
    "API": "neptune:DeleteDbParameterGroup",
    "EventSource": "neptune",
    "EventName": "DeleteDbParameterGroup",
    "Description": "Deletes a specified DBParameterGroup"
  },
  {
    "API": "neptune:DeleteDbSubnetGroup",
    "EventSource": "neptune",
    "EventName": "DeleteDbSubnetGroup",
    "Description": "Deletes a DB subnet group"
  },
  {
    "API": "neptune:DeleteEventSubscription",
    "EventSource": "neptune",
    "EventName": "DeleteEventSubscription",
    "Description": "Deletes an event notification subscription"
  },
  {
    "API": "neptune:DeleteGlobalCluster",
    "EventSource": "neptune",
    "EventName": "DeleteGlobalCluster",
    "Description": "Deletes a global database"
  },
  {
    "API": "neptune:DescribeDbClusterEndpoints",
    "EventSource": "neptune",
    "EventName": "DescribeDbClusterEndpoints",
    "Description": "Returns information about endpoints for an Amazon Neptune DB cluster"
  },
  {
    "API": "neptune:DescribeDbClusterParameterGroups",
    "EventSource": "neptune",
    "EventName": "DescribeDbClusterParameterGroups",
    "Description": "Returns a list of ``DBClusterParameterGroup`` descriptions"
  },
  {
    "API": "neptune:DescribeDbClusterParameters",
    "EventSource": "neptune",
    "EventName": "DescribeDbClusterParameters",
    "Description": "Returns the detailed parameter list for a particular DB cluster parameter group"
  },
  {
    "API": "neptune:DescribeDbClusterSnapshotAttributes",
    "EventSource": "neptune",
    "EventName": "DescribeDbClusterSnapshotAttributes",
    "Description": "Returns a list of DB cluster snapshot attribute names and values for a manual DB cluster snapshot"
  },
  {
    "API": "neptune:DescribeDbClusterSnapshots",
    "EventSource": "neptune",
    "EventName": "DescribeDbClusterSnapshots",
    "Description": "Returns information about DB cluster snapshots"
  },
  {
    "API": "neptune:DescribeDbClusters",
    "EventSource": "neptune",
    "EventName": "DescribeDbClusters",
    "Description": "Returns information about provisioned DB clusters, and supports pagination"
  },
  {
    "API": "neptune:DescribeDbEngineVersions",
    "EventSource": "neptune",
    "EventName": "DescribeDbEngineVersions",
    "Description": "Returns a list of the available DB engines"
  },
  {
    "API": "neptune:DescribeDbInstances",
    "EventSource": "neptune",
    "EventName": "DescribeDbInstances",
    "Description": "Returns information about provisioned instances, and supports pagination"
  },
  {
    "API": "neptune:DescribeDbParameterGroups",
    "EventSource": "neptune",
    "EventName": "DescribeDbParameterGroups",
    "Description": "Returns a list of ``DBParameterGroup`` descriptions"
  },
  {
    "API": "neptune:DescribeDbParameters",
    "EventSource": "neptune",
    "EventName": "DescribeDbParameters",
    "Description": "Returns the detailed parameter list for a particular DB parameter group"
  },
  {
    "API": "neptune:DescribeDbSubnetGroups",
    "EventSource": "neptune",
    "EventName": "DescribeDbSubnetGroups",
    "Description": "Returns a list of DBSubnetGroup descriptions"
  },
  {
    "API": "neptune:DescribeEngineDefaultClusterParameters",
    "EventSource": "neptune",
    "EventName": "DescribeEngineDefaultClusterParameters",
    "Description": "Returns the default engine and system parameter information for the cluster database engine"
  },
  {
    "API": "neptune:DescribeEngineDefaultParameters",
    "EventSource": "neptune",
    "EventName": "DescribeEngineDefaultParameters",
    "Description": "Returns the default engine and system parameter information for the specified database engine"
  },
  {
    "API": "neptune:DescribeEventCategories",
    "EventSource": "neptune",
    "EventName": "DescribeEventCategories",
    "Description": "Displays a list of categories for all event source types, or, if specified, for a specified source type"
  },
  {
    "API": "neptune:DescribeEventSubscriptions",
    "EventSource": "neptune",
    "EventName": "DescribeEventSubscriptions",
    "Description": "Lists all the subscription descriptions for a customer account"
  },
  {
    "API": "neptune:DescribeEvents",
    "EventSource": "neptune",
    "EventName": "DescribeEvents",
    "Description": "Returns events related to DB instances, DB security groups, DB snapshots, and DB parameter groups for the past 14 days"
  },
  {
    "API": "neptune:DescribeGlobalClusters",
    "EventSource": "neptune",
    "EventName": "DescribeGlobalClusters",
    "Description": "Returns information about Neptune global database clusters"
  },
  {
    "API": "neptune:DescribeOrderableDbInstanceOptions",
    "EventSource": "neptune",
    "EventName": "DescribeOrderableDbInstanceOptions",
    "Description": "Returns a list of orderable DB instance options for the specified engine"
  },
  {
    "API": "neptune:DescribePendingMaintenanceActions",
    "EventSource": "neptune",
    "EventName": "DescribePendingMaintenanceActions",
    "Description": "Returns a list of resources (for example, DB instances) that have at least one pending maintenance action"
  },
  {
    "API": "neptune:DescribeValidDbInstanceModifications",
    "EventSource": "neptune",
    "EventName": "DescribeValidDbInstanceModifications",
    "Description": "You can call  DescribeValidDBInstanceModifications to learn what modifications you can make to your DB instance"
  },
  {
    "API": "neptune:FailoverDbCluster",
    "EventSource": "neptune",
    "EventName": "FailoverDbCluster",
    "Description": "Forces a failover for a DB cluster"
  },
  {
    "API": "neptune:FailoverGlobalCluster",
    "EventSource": "neptune",
    "EventName": "FailoverGlobalCluster",
    "Description": "Initiates the failover process for a Neptune global database"
  },
  {
    "API": "neptune:GeneratePresignedUrl",
    "EventSource": "neptune",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "neptune:ListTagsForResource",
    "EventSource": "neptune",
    "EventName": "ListTagsForResource",
    "Description": "Lists all tags on an Amazon Neptune resource"
  },
  {
    "API": "neptune:ModifyDbCluster",
    "EventSource": "neptune",
    "EventName": "ModifyDbCluster",
    "Description": "Modify a setting for a DB cluster"
  },
  {
    "API": "neptune:ModifyDbClusterEndpoint",
    "EventSource": "neptune",
    "EventName": "ModifyDbClusterEndpoint",
    "Description": "Modifies the properties of an endpoint in an Amazon Neptune DB cluster"
  },
  {
    "API": "neptune:ModifyDbClusterParameterGroup",
    "EventSource": "neptune",
    "EventName": "ModifyDbClusterParameterGroup",
    "Description": "Modifies the parameters of a DB cluster parameter group"
  },
  {
    "API": "neptune:ModifyDbClusterSnapshotAttribute",
    "EventSource": "neptune",
    "EventName": "ModifyDbClusterSnapshotAttribute",
    "Description": "Adds an attribute and values to, or removes an attribute and values from, a manual DB cluster snapshot"
  },
  {
    "API": "neptune:ModifyDbInstance",
    "EventSource": "neptune",
    "EventName": "ModifyDbInstance",
    "Description": "Modifies settings for a DB instance"
  },
  {
    "API": "neptune:ModifyDbParameterGroup",
    "EventSource": "neptune",
    "EventName": "ModifyDbParameterGroup",
    "Description": "Modifies the parameters of a DB parameter group"
  },
  {
    "API": "neptune:ModifyDbSubnetGroup",
    "EventSource": "neptune",
    "EventName": "ModifyDbSubnetGroup",
    "Description": "Modifies an existing DB subnet group"
  },
  {
    "API": "neptune:ModifyEventSubscription",
    "EventSource": "neptune",
    "EventName": "ModifyEventSubscription",
    "Description": "Modifies an existing event notification subscription"
  },
  {
    "API": "neptune:ModifyGlobalCluster",
    "EventSource": "neptune",
    "EventName": "ModifyGlobalCluster",
    "Description": "Modify a setting for an Amazon Neptune global cluster"
  },
  {
    "API": "neptune:PromoteReadReplicaDbCluster",
    "EventSource": "neptune",
    "EventName": "PromoteReadReplicaDbCluster",
    "Description": "Not supported"
  },
  {
    "API": "neptune:RebootDbInstance",
    "EventSource": "neptune",
    "EventName": "RebootDbInstance",
    "Description": "You might need to reboot your DB instance, usually for maintenance reasons"
  },
  {
    "API": "neptune:RemoveFromGlobalCluster",
    "EventSource": "neptune",
    "EventName": "RemoveFromGlobalCluster",
    "Description": "Detaches a Neptune DB cluster from a Neptune global database"
  },
  {
    "API": "neptune:RemoveRoleFromDbCluster",
    "EventSource": "neptune",
    "EventName": "RemoveRoleFromDbCluster",
    "Description": "Disassociates an Identity and Access Management (IAM) role from a DB cluster"
  },
  {
    "API": "neptune:RemoveSourceIdentifierFromSubscription",
    "EventSource": "neptune",
    "EventName": "RemoveSourceIdentifierFromSubscription",
    "Description": "Removes a source identifier from an existing event notification subscription"
  },
  {
    "API": "neptune:RemoveTagsFromResource",
    "EventSource": "neptune",
    "EventName": "RemoveTagsFromResource",
    "Description": "Removes metadata tags from an Amazon Neptune resource"
  },
  {
    "API": "neptune:ResetDbClusterParameterGroup",
    "EventSource": "neptune",
    "EventName": "ResetDbClusterParameterGroup",
    "Description": "Modifies the parameters of a DB cluster parameter group to the default value"
  },
  {
    "API": "neptune:ResetDbParameterGroup",
    "EventSource": "neptune",
    "EventName": "ResetDbParameterGroup",
    "Description": "Modifies the parameters of a DB parameter group to the engine/system default value"
  },
  {
    "API": "neptune:RestoreDbClusterFromSnapshot",
    "EventSource": "neptune",
    "EventName": "RestoreDbClusterFromSnapshot",
    "Description": "Creates a new DB cluster from a DB snapshot or DB cluster snapshot"
  },
  {
    "API": "neptune:RestoreDbClusterToPointInTime",
    "EventSource": "neptune",
    "EventName": "RestoreDbClusterToPointInTime",
    "Description": "Restores a DB cluster to an arbitrary point in time"
  },
  {
    "API": "neptune:StartDbCluster",
    "EventSource": "neptune",
    "EventName": "StartDbCluster",
    "Description": "Starts an Amazon Neptune DB cluster that was stopped using the Amazon console, the Amazon CLI stop-db-cluster command, or the StopDBCluster API"
  },
  {
    "API": "neptune:StopDbCluster",
    "EventSource": "neptune",
    "EventName": "StopDbCluster",
    "Description": "Stops an Amazon Neptune DB cluster"
  },
  {
    "API": "neptune-graph:CancelImportTask",
    "EventSource": "neptune-graph",
    "EventName": "CancelImportTask",
    "Description": "Deletes the specified import task"
  },
  {
    "API": "neptune-graph:CancelQuery",
    "EventSource": "neptune-graph",
    "EventName": "CancelQuery",
    "Description": "Cancels a specified query"
  },
  {
    "API": "neptune-graph:CreateGraph",
    "EventSource": "neptune-graph",
    "EventName": "CreateGraph",
    "Description": "Creates a new Neptune Analytics graph"
  },
  {
    "API": "neptune-graph:CreateGraphSnapshot",
    "EventSource": "neptune-graph",
    "EventName": "CreateGraphSnapshot",
    "Description": "Creates a snapshot of the specific graph"
  },
  {
    "API": "neptune-graph:CreateGraphUsingImportTask",
    "EventSource": "neptune-graph",
    "EventName": "CreateGraphUsingImportTask",
    "Description": "Creates a new Neptune Analytics graph and imports data into it, either from Amazon Simple Storage Service (S3) or from a Neptune database or a Neptune database snapshot"
  },
  {
    "API": "neptune-graph:CreatePrivateGraphEndpoint",
    "EventSource": "neptune-graph",
    "EventName": "CreatePrivateGraphEndpoint",
    "Description": "Create a private graph endpoint to allow private access from to the graph from within a VPC"
  },
  {
    "API": "neptune-graph:DeleteGraph",
    "EventSource": "neptune-graph",
    "EventName": "DeleteGraph",
    "Description": "Deletes the specified graph"
  },
  {
    "API": "neptune-graph:DeleteGraphSnapshot",
    "EventSource": "neptune-graph",
    "EventName": "DeleteGraphSnapshot",
    "Description": "Deletes the specifed graph snapshot"
  },
  {
    "API": "neptune-graph:DeletePrivateGraphEndpoint",
    "EventSource": "neptune-graph",
    "EventName": "DeletePrivateGraphEndpoint",
    "Description": "Deletes a private graph endpoint"
  },
  {
    "API": "neptune-graph:ExecuteQuery",
    "EventSource": "neptune-graph",
    "EventName": "ExecuteQuery",
    "Description": "Execute an openCypher query"
  },
  {
    "API": "neptune-graph:GeneratePresignedUrl",
    "EventSource": "neptune-graph",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "neptune-graph:GetGraph",
    "EventSource": "neptune-graph",
    "EventName": "GetGraph",
    "Description": "Gets information about a specified graph"
  },
  {
    "API": "neptune-graph:GetGraphSnapshot",
    "EventSource": "neptune-graph",
    "EventName": "GetGraphSnapshot",
    "Description": "Retrieves a specified graph snapshot"
  },
  {
    "API": "neptune-graph:GetGraphSummary",
    "EventSource": "neptune-graph",
    "EventName": "GetGraphSummary",
    "Description": "Gets a graph summary for a property graph"
  },
  {
    "API": "neptune-graph:GetImportTask",
    "EventSource": "neptune-graph",
    "EventName": "GetImportTask",
    "Description": "Retrieves a specified import task"
  },
  {
    "API": "neptune-graph:GetPrivateGraphEndpoint",
    "EventSource": "neptune-graph",
    "EventName": "GetPrivateGraphEndpoint",
    "Description": "Retrieves information about a specified private endpoint"
  },
  {
    "API": "neptune-graph:GetQuery",
    "EventSource": "neptune-graph",
    "EventName": "GetQuery",
    "Description": "Retrieves the status of a specified query"
  },
  {
    "API": "neptune-graph:ListGraphSnapshots",
    "EventSource": "neptune-graph",
    "EventName": "ListGraphSnapshots",
    "Description": "Lists available snapshots of a specified Neptune Analytics graph"
  },
  {
    "API": "neptune-graph:ListGraphs",
    "EventSource": "neptune-graph",
    "EventName": "ListGraphs",
    "Description": "Lists available Neptune Analytics graphs"
  },
  {
    "API": "neptune-graph:ListImportTasks",
    "EventSource": "neptune-graph",
    "EventName": "ListImportTasks",
    "Description": "Lists import tasks"
  },
  {
    "API": "neptune-graph:ListPrivateGraphEndpoints",
    "EventSource": "neptune-graph",
    "EventName": "ListPrivateGraphEndpoints",
    "Description": "Lists private endpoints for a specified Neptune Analytics graph"
  },
  {
    "API": "neptune-graph:ListQueries",
    "EventSource": "neptune-graph",
    "EventName": "ListQueries",
    "Description": "Lists active openCypher queries"
  },
  {
    "API": "neptune-graph:ListTagsForResource",
    "EventSource": "neptune-graph",
    "EventName": "ListTagsForResource",
    "Description": "Lists tags associated with a specified resource"
  },
  {
    "API": "neptune-graph:ResetGraph",
    "EventSource": "neptune-graph",
    "EventName": "ResetGraph",
    "Description": "Empties the data from a specified Neptune Analytics graph"
  },
  {
    "API": "neptune-graph:RestoreGraphFromSnapshot",
    "EventSource": "neptune-graph",
    "EventName": "RestoreGraphFromSnapshot",
    "Description": "Restores a graph from a snapshot"
  },
  {
    "API": "neptune-graph:StartImportTask",
    "EventSource": "neptune-graph",
    "EventName": "StartImportTask",
    "Description": "Import data into existing Neptune Analytics graph from Amazon Simple Storage Service (S3)"
  },
  {
    "API": "neptune-graph:TagResource",
    "EventSource": "neptune-graph",
    "EventName": "TagResource",
    "Description": "Adds tags to the specified resource"
  },
  {
    "API": "neptune-graph:UntagResource",
    "EventSource": "neptune-graph",
    "EventName": "UntagResource",
    "Description": "Removes the specified tags from the specified resource"
  },
  {
    "API": "neptune-graph:UpdateGraph",
    "EventSource": "neptune-graph",
    "EventName": "UpdateGraph",
    "Description": "Updates the configuration of a specified Neptune Analytics graph"
  },
  {
    "API": "neptunedata:CancelGremlinQuery",
    "EventSource": "neptunedata",
    "EventName": "CancelGremlinQuery",
    "Description": "Cancels a Gremlin query"
  },
  {
    "API": "neptunedata:CancelLoaderJob",
    "EventSource": "neptunedata",
    "EventName": "CancelLoaderJob",
    "Description": "Cancels a specified load job"
  },
  {
    "API": "neptunedata:CancelMlDataProcessingJob",
    "EventSource": "neptunedata",
    "EventName": "CancelMlDataProcessingJob",
    "Description": "Cancels a Neptune ML data processing job"
  },
  {
    "API": "neptunedata:CancelMlModelTrainingJob",
    "EventSource": "neptunedata",
    "EventName": "CancelMlModelTrainingJob",
    "Description": "Cancels a Neptune ML model training job"
  },
  {
    "API": "neptunedata:CancelMlModelTransformJob",
    "EventSource": "neptunedata",
    "EventName": "CancelMlModelTransformJob",
    "Description": "Cancels a specified model transform job"
  },
  {
    "API": "neptunedata:CancelOpenCypherQuery",
    "EventSource": "neptunedata",
    "EventName": "CancelOpenCypherQuery",
    "Description": "Cancels a specified openCypher query"
  },
  {
    "API": "neptunedata:CreateMlEndpoint",
    "EventSource": "neptunedata",
    "EventName": "CreateMlEndpoint",
    "Description": "Creates a new Neptune ML inference endpoint that lets you query one specific model that the model-training process constructed"
  },
  {
    "API": "neptunedata:DeleteMlEndpoint",
    "EventSource": "neptunedata",
    "EventName": "DeleteMlEndpoint",
    "Description": "Cancels the creation of a Neptune ML inference endpoint"
  },
  {
    "API": "neptunedata:DeletePropertygraphStatistics",
    "EventSource": "neptunedata",
    "EventName": "DeletePropertygraphStatistics",
    "Description": "Deletes statistics for Gremlin and openCypher (property graph) data"
  },
  {
    "API": "neptunedata:DeleteSparqlStatistics",
    "EventSource": "neptunedata",
    "EventName": "DeleteSparqlStatistics",
    "Description": "Deletes SPARQL statistics"
  },
  {
    "API": "neptunedata:ExecuteFastReset",
    "EventSource": "neptunedata",
    "EventName": "ExecuteFastReset",
    "Description": "The fast reset REST API lets you reset a Neptune graph quicky and easily, removing all of its data"
  },
  {
    "API": "neptunedata:ExecuteGremlinExplainQuery",
    "EventSource": "neptunedata",
    "EventName": "ExecuteGremlinExplainQuery",
    "Description": "Executes a Gremlin Explain query"
  },
  {
    "API": "neptunedata:ExecuteGremlinProfileQuery",
    "EventSource": "neptunedata",
    "EventName": "ExecuteGremlinProfileQuery",
    "Description": "Executes a Gremlin Profile query, which runs a specified traversal, collects various metrics about the run, and produces a profile report as output"
  },
  {
    "API": "neptunedata:ExecuteGremlinQuery",
    "EventSource": "neptunedata",
    "EventName": "ExecuteGremlinQuery",
    "Description": "This commands executes a Gremlin query"
  },
  {
    "API": "neptunedata:ExecuteOpenCypherExplainQuery",
    "EventSource": "neptunedata",
    "EventName": "ExecuteOpenCypherExplainQuery",
    "Description": "Executes an openCypher ``explain`` request"
  },
  {
    "API": "neptunedata:ExecuteOpenCypherQuery",
    "EventSource": "neptunedata",
    "EventName": "ExecuteOpenCypherQuery",
    "Description": "Executes an openCypher query"
  },
  {
    "API": "neptunedata:GeneratePresignedUrl",
    "EventSource": "neptunedata",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "neptunedata:GetEngineStatus",
    "EventSource": "neptunedata",
    "EventName": "GetEngineStatus",
    "Description": "Retrieves the status of the graph database on the host"
  },
  {
    "API": "neptunedata:GetGremlinQueryStatus",
    "EventSource": "neptunedata",
    "EventName": "GetGremlinQueryStatus",
    "Description": "Gets the status of a specified Gremlin query"
  },
  {
    "API": "neptunedata:GetLoaderJobStatus",
    "EventSource": "neptunedata",
    "EventName": "GetLoaderJobStatus",
    "Description": "Gets status information about a specified load job"
  },
  {
    "API": "neptunedata:GetMlDataProcessingJob",
    "EventSource": "neptunedata",
    "EventName": "GetMlDataProcessingJob",
    "Description": "Retrieves information about a specified data processing job"
  },
  {
    "API": "neptunedata:GetMlEndpoint",
    "EventSource": "neptunedata",
    "EventName": "GetMlEndpoint",
    "Description": "Retrieves details about an inference endpoint"
  },
  {
    "API": "neptunedata:GetMlModelTrainingJob",
    "EventSource": "neptunedata",
    "EventName": "GetMlModelTrainingJob",
    "Description": "Retrieves information about a Neptune ML model training job"
  },
  {
    "API": "neptunedata:GetMlModelTransformJob",
    "EventSource": "neptunedata",
    "EventName": "GetMlModelTransformJob",
    "Description": "Gets information about a specified model transform job"
  },
  {
    "API": "neptunedata:GetOpenCypherQueryStatus",
    "EventSource": "neptunedata",
    "EventName": "GetOpenCypherQueryStatus",
    "Description": "Retrieves the status of a specified openCypher query"
  },
  {
    "API": "neptunedata:GetPropertygraphStatistics",
    "EventSource": "neptunedata",
    "EventName": "GetPropertygraphStatistics",
    "Description": "Gets property graph statistics (Gremlin and openCypher)"
  },
  {
    "API": "neptunedata:GetPropertygraphStream",
    "EventSource": "neptunedata",
    "EventName": "GetPropertygraphStream",
    "Description": "Gets a stream for a property graph"
  },
  {
    "API": "neptunedata:GetPropertygraphSummary",
    "EventSource": "neptunedata",
    "EventName": "GetPropertygraphSummary",
    "Description": "Gets a graph summary for a property graph"
  },
  {
    "API": "neptunedata:GetRdfGraphSummary",
    "EventSource": "neptunedata",
    "EventName": "GetRdfGraphSummary",
    "Description": "Gets a graph summary for an RDF graph"
  },
  {
    "API": "neptunedata:GetSparqlStatistics",
    "EventSource": "neptunedata",
    "EventName": "GetSparqlStatistics",
    "Description": "Gets RDF statistics (SPARQL)"
  },
  {
    "API": "neptunedata:GetSparqlStream",
    "EventSource": "neptunedata",
    "EventName": "GetSparqlStream",
    "Description": "Gets a stream for an RDF graph"
  },
  {
    "API": "neptunedata:ListGremlinQueries",
    "EventSource": "neptunedata",
    "EventName": "ListGremlinQueries",
    "Description": "Lists active Gremlin queries"
  },
  {
    "API": "neptunedata:ListLoaderJobs",
    "EventSource": "neptunedata",
    "EventName": "ListLoaderJobs",
    "Description": "Retrieves a list of the ``loadIds`` for all active loader jobs"
  },
  {
    "API": "neptunedata:ListMlDataProcessingJobs",
    "EventSource": "neptunedata",
    "EventName": "ListMlDataProcessingJobs",
    "Description": "Returns a list of Neptune ML data processing jobs"
  },
  {
    "API": "neptunedata:ListMlEndpoints",
    "EventSource": "neptunedata",
    "EventName": "ListMlEndpoints",
    "Description": "Lists existing inference endpoints"
  },
  {
    "API": "neptunedata:ListMlModelTrainingJobs",
    "EventSource": "neptunedata",
    "EventName": "ListMlModelTrainingJobs",
    "Description": "Lists Neptune ML model-training jobs"
  },
  {
    "API": "neptunedata:ListMlModelTransformJobs",
    "EventSource": "neptunedata",
    "EventName": "ListMlModelTransformJobs",
    "Description": "Returns a list of model transform job IDs"
  },
  {
    "API": "neptunedata:ListOpenCypherQueries",
    "EventSource": "neptunedata",
    "EventName": "ListOpenCypherQueries",
    "Description": "Lists active openCypher queries"
  },
  {
    "API": "neptunedata:ManagePropertygraphStatistics",
    "EventSource": "neptunedata",
    "EventName": "ManagePropertygraphStatistics",
    "Description": "Manages the generation and use of property graph statistics"
  },
  {
    "API": "neptunedata:ManageSparqlStatistics",
    "EventSource": "neptunedata",
    "EventName": "ManageSparqlStatistics",
    "Description": "Manages the generation and use of RDF graph statistics"
  },
  {
    "API": "neptunedata:StartLoaderJob",
    "EventSource": "neptunedata",
    "EventName": "StartLoaderJob",
    "Description": "Starts a Neptune bulk loader job to load data from an Amazon S3 bucket into a Neptune DB instance"
  },
  {
    "API": "neptunedata:StartMlDataProcessingJob",
    "EventSource": "neptunedata",
    "EventName": "StartMlDataProcessingJob",
    "Description": "Creates a new Neptune ML data processing job for processing the graph data exported from Neptune for training"
  },
  {
    "API": "neptunedata:StartMlModelTrainingJob",
    "EventSource": "neptunedata",
    "EventName": "StartMlModelTrainingJob",
    "Description": "Creates a new Neptune ML model training job"
  },
  {
    "API": "neptunedata:StartMlModelTransformJob",
    "EventSource": "neptunedata",
    "EventName": "StartMlModelTransformJob",
    "Description": "Creates a new model transform job"
  },
  {
    "API": "network-firewall:AssociateFirewallPolicy",
    "EventSource": "network-firewall",
    "EventName": "AssociateFirewallPolicy",
    "Description": "Associates a  FirewallPolicy to a  Firewall"
  },
  {
    "API": "network-firewall:AssociateSubnets",
    "EventSource": "network-firewall",
    "EventName": "AssociateSubnets",
    "Description": "Associates the specified subnets in the Amazon VPC to the firewall"
  },
  {
    "API": "network-firewall:CreateFirewall",
    "EventSource": "network-firewall",
    "EventName": "CreateFirewall",
    "Description": "Creates an Network Firewall  Firewall and accompanying  FirewallStatus for a VPC"
  },
  {
    "API": "network-firewall:CreateFirewallPolicy",
    "EventSource": "network-firewall",
    "EventName": "CreateFirewallPolicy",
    "Description": "Creates the firewall policy for the firewall according to the specifications"
  },
  {
    "API": "network-firewall:CreateRuleGroup",
    "EventSource": "network-firewall",
    "EventName": "CreateRuleGroup",
    "Description": "Creates the specified stateless or stateful rule group, which includes the rules for network traffic inspection, a capacity setting, and tags"
  },
  {
    "API": "network-firewall:CreateTlsInspectionConfiguration",
    "EventSource": "network-firewall",
    "EventName": "CreateTlsInspectionConfiguration",
    "Description": "Creates an Network Firewall TLS inspection configuration"
  },
  {
    "API": "network-firewall:DeleteFirewall",
    "EventSource": "network-firewall",
    "EventName": "DeleteFirewall",
    "Description": "Deletes the specified  Firewall and its  FirewallStatus"
  },
  {
    "API": "network-firewall:DeleteFirewallPolicy",
    "EventSource": "network-firewall",
    "EventName": "DeleteFirewallPolicy",
    "Description": "Deletes the specified  FirewallPolicy"
  },
  {
    "API": "network-firewall:DeleteResourcePolicy",
    "EventSource": "network-firewall",
    "EventName": "DeleteResourcePolicy",
    "Description": "Deletes a resource policy that you created in a  PutResourcePolicy request"
  },
  {
    "API": "network-firewall:DeleteRuleGroup",
    "EventSource": "network-firewall",
    "EventName": "DeleteRuleGroup",
    "Description": "Deletes the specified  RuleGroup"
  },
  {
    "API": "network-firewall:DeleteTlsInspectionConfiguration",
    "EventSource": "network-firewall",
    "EventName": "DeleteTlsInspectionConfiguration",
    "Description": "Deletes the specified  TLSInspectionConfiguration"
  },
  {
    "API": "network-firewall:DescribeFirewall",
    "EventSource": "network-firewall",
    "EventName": "DescribeFirewall",
    "Description": "Returns the data objects for the specified firewall"
  },
  {
    "API": "network-firewall:DescribeFirewallPolicy",
    "EventSource": "network-firewall",
    "EventName": "DescribeFirewallPolicy",
    "Description": "Returns the data objects for the specified firewall policy"
  },
  {
    "API": "network-firewall:DescribeLoggingConfiguration",
    "EventSource": "network-firewall",
    "EventName": "DescribeLoggingConfiguration",
    "Description": "Returns the logging configuration for the specified firewall"
  },
  {
    "API": "network-firewall:DescribeResourcePolicy",
    "EventSource": "network-firewall",
    "EventName": "DescribeResourcePolicy",
    "Description": "Retrieves a resource policy that you created in a  PutResourcePolicy request"
  },
  {
    "API": "network-firewall:DescribeRuleGroup",
    "EventSource": "network-firewall",
    "EventName": "DescribeRuleGroup",
    "Description": "Returns the data objects for the specified rule group"
  },
  {
    "API": "network-firewall:DescribeRuleGroupMetadata",
    "EventSource": "network-firewall",
    "EventName": "DescribeRuleGroupMetadata",
    "Description": "High-level information about a rule group, returned by operations like create and describe"
  },
  {
    "API": "network-firewall:DescribeTlsInspectionConfiguration",
    "EventSource": "network-firewall",
    "EventName": "DescribeTlsInspectionConfiguration",
    "Description": "Returns the data objects for the specified TLS inspection configuration"
  },
  {
    "API": "network-firewall:DisassociateSubnets",
    "EventSource": "network-firewall",
    "EventName": "DisassociateSubnets",
    "Description": "Removes the specified subnet associations from the firewall"
  },
  {
    "API": "network-firewall:GeneratePresignedUrl",
    "EventSource": "network-firewall",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "network-firewall:ListFirewallPolicies",
    "EventSource": "network-firewall",
    "EventName": "ListFirewallPolicies",
    "Description": "Retrieves the metadata for the firewall policies that you have defined"
  },
  {
    "API": "network-firewall:ListFirewalls",
    "EventSource": "network-firewall",
    "EventName": "ListFirewalls",
    "Description": "Retrieves the metadata for the firewalls that you have defined"
  },
  {
    "API": "network-firewall:ListRuleGroups",
    "EventSource": "network-firewall",
    "EventName": "ListRuleGroups",
    "Description": "Retrieves the metadata for the rule groups that you have defined"
  },
  {
    "API": "network-firewall:ListTagsForResource",
    "EventSource": "network-firewall",
    "EventName": "ListTagsForResource",
    "Description": "Retrieves the tags associated with the specified resource"
  },
  {
    "API": "network-firewall:ListTlsInspectionConfigurations",
    "EventSource": "network-firewall",
    "EventName": "ListTlsInspectionConfigurations",
    "Description": "Retrieves the metadata for the TLS inspection configurations that you have defined"
  },
  {
    "API": "network-firewall:PutResourcePolicy",
    "EventSource": "network-firewall",
    "EventName": "PutResourcePolicy",
    "Description": "Creates or updates an IAM policy for your rule group or firewall policy"
  },
  {
    "API": "network-firewall:TagResource",
    "EventSource": "network-firewall",
    "EventName": "TagResource",
    "Description": "Adds the specified tags to the specified resource"
  },
  {
    "API": "network-firewall:UntagResource",
    "EventSource": "network-firewall",
    "EventName": "UntagResource",
    "Description": "Removes the tags with the specified keys from the specified resource"
  },
  {
    "API": "network-firewall:UpdateFirewallDeleteProtection",
    "EventSource": "network-firewall",
    "EventName": "UpdateFirewallDeleteProtection",
    "Description": "Modifies the flag, ``DeleteProtection``, which indicates whether it is possible to delete the firewall"
  },
  {
    "API": "network-firewall:UpdateFirewallDescription",
    "EventSource": "network-firewall",
    "EventName": "UpdateFirewallDescription",
    "Description": "Modifies the description for the specified firewall"
  },
  {
    "API": "network-firewall:UpdateFirewallEncryptionConfiguration",
    "EventSource": "network-firewall",
    "EventName": "UpdateFirewallEncryptionConfiguration",
    "Description": "A complex type that contains settings for encryption of your firewall resources"
  },
  {
    "API": "network-firewall:UpdateFirewallPolicy",
    "EventSource": "network-firewall",
    "EventName": "UpdateFirewallPolicy",
    "Description": "Updates the properties of the specified firewall policy"
  },
  {
    "API": "network-firewall:UpdateFirewallPolicyChangeProtection",
    "EventSource": "network-firewall",
    "EventName": "UpdateFirewallPolicyChangeProtection",
    "Description": "Modifies the flag, ``ChangeProtection``, which indicates whether it is possible to change the firewall"
  },
  {
    "API": "network-firewall:UpdateLoggingConfiguration",
    "EventSource": "network-firewall",
    "EventName": "UpdateLoggingConfiguration",
    "Description": "Sets the logging configuration for the specified firewall"
  },
  {
    "API": "network-firewall:UpdateRuleGroup",
    "EventSource": "network-firewall",
    "EventName": "UpdateRuleGroup",
    "Description": "Updates the rule settings for the specified rule group"
  },
  {
    "API": "network-firewall:UpdateSubnetChangeProtection",
    "EventSource": "network-firewall",
    "EventName": "UpdateSubnetChangeProtection",
    "Description": "See also: `AWS API Documentation <https://docs"
  },
  {
    "API": "network-firewall:UpdateTlsInspectionConfiguration",
    "EventSource": "network-firewall",
    "EventName": "UpdateTlsInspectionConfiguration",
    "Description": "Updates the TLS inspection configuration settings for the specified TLS inspection configuration"
  },
  {
    "API": "networkmanager:AcceptAttachment",
    "EventSource": "networkmanager",
    "EventName": "AcceptAttachment",
    "Description": "Accepts a core network attachment request"
  },
  {
    "API": "networkmanager:AssociateConnectPeer",
    "EventSource": "networkmanager",
    "EventName": "AssociateConnectPeer",
    "Description": "Associates a core network Connect peer with a device and optionally, with a link"
  },
  {
    "API": "networkmanager:AssociateCustomerGateway",
    "EventSource": "networkmanager",
    "EventName": "AssociateCustomerGateway",
    "Description": "Associates a customer gateway with a device and optionally, with a link"
  },
  {
    "API": "networkmanager:AssociateLink",
    "EventSource": "networkmanager",
    "EventName": "AssociateLink",
    "Description": "Associates a link to a device"
  },
  {
    "API": "networkmanager:AssociateTransitGatewayConnectPeer",
    "EventSource": "networkmanager",
    "EventName": "AssociateTransitGatewayConnectPeer",
    "Description": "Associates a transit gateway Connect peer with a device, and optionally, with a link"
  },
  {
    "API": "networkmanager:CreateConnectAttachment",
    "EventSource": "networkmanager",
    "EventName": "CreateConnectAttachment",
    "Description": "Creates a core network Connect attachment from a specified core network attachment"
  },
  {
    "API": "networkmanager:CreateConnectPeer",
    "EventSource": "networkmanager",
    "EventName": "CreateConnectPeer",
    "Description": "Creates a core network Connect peer for a specified core network connect attachment between a core network and an appliance"
  },
  {
    "API": "networkmanager:CreateConnection",
    "EventSource": "networkmanager",
    "EventName": "CreateConnection",
    "Description": "Creates a connection between two devices"
  },
  {
    "API": "networkmanager:CreateCoreNetwork",
    "EventSource": "networkmanager",
    "EventName": "CreateCoreNetwork",
    "Description": "Creates a core network as part of your global network, and optionally, with a core network policy"
  },
  {
    "API": "networkmanager:CreateDevice",
    "EventSource": "networkmanager",
    "EventName": "CreateDevice",
    "Description": "Creates a new device in a global network"
  },
  {
    "API": "networkmanager:CreateGlobalNetwork",
    "EventSource": "networkmanager",
    "EventName": "CreateGlobalNetwork",
    "Description": "Creates a new, empty global network"
  },
  {
    "API": "networkmanager:CreateLink",
    "EventSource": "networkmanager",
    "EventName": "CreateLink",
    "Description": "Creates a new link for a specified site"
  },
  {
    "API": "networkmanager:CreateSite",
    "EventSource": "networkmanager",
    "EventName": "CreateSite",
    "Description": "Creates a new site in a global network"
  },
  {
    "API": "networkmanager:CreateSiteToSiteVpnAttachment",
    "EventSource": "networkmanager",
    "EventName": "CreateSiteToSiteVpnAttachment",
    "Description": "Creates an Amazon Web Services site-to-site VPN attachment on an edge location of a core network"
  },
  {
    "API": "networkmanager:CreateTransitGatewayPeering",
    "EventSource": "networkmanager",
    "EventName": "CreateTransitGatewayPeering",
    "Description": "Creates a transit gateway peering connection"
  },
  {
    "API": "networkmanager:CreateTransitGatewayRouteTableAttachment",
    "EventSource": "networkmanager",
    "EventName": "CreateTransitGatewayRouteTableAttachment",
    "Description": "Creates a transit gateway route table attachment"
  },
  {
    "API": "networkmanager:CreateVpcAttachment",
    "EventSource": "networkmanager",
    "EventName": "CreateVpcAttachment",
    "Description": "Creates a VPC attachment on an edge location of a core network"
  },
  {
    "API": "networkmanager:DeleteAttachment",
    "EventSource": "networkmanager",
    "EventName": "DeleteAttachment",
    "Description": "Deletes an attachment"
  },
  {
    "API": "networkmanager:DeleteConnectPeer",
    "EventSource": "networkmanager",
    "EventName": "DeleteConnectPeer",
    "Description": "Deletes a Connect peer"
  },
  {
    "API": "networkmanager:DeleteConnection",
    "EventSource": "networkmanager",
    "EventName": "DeleteConnection",
    "Description": "Deletes the specified connection in your global network"
  },
  {
    "API": "networkmanager:DeleteCoreNetwork",
    "EventSource": "networkmanager",
    "EventName": "DeleteCoreNetwork",
    "Description": "Deletes a core network along with all core network policies"
  },
  {
    "API": "networkmanager:DeleteCoreNetworkPolicyVersion",
    "EventSource": "networkmanager",
    "EventName": "DeleteCoreNetworkPolicyVersion",
    "Description": "Deletes a policy version from a core network"
  },
  {
    "API": "networkmanager:DeleteDevice",
    "EventSource": "networkmanager",
    "EventName": "DeleteDevice",
    "Description": "Deletes an existing device"
  },
  {
    "API": "networkmanager:DeleteGlobalNetwork",
    "EventSource": "networkmanager",
    "EventName": "DeleteGlobalNetwork",
    "Description": "Deletes an existing global network"
  },
  {
    "API": "networkmanager:DeleteLink",
    "EventSource": "networkmanager",
    "EventName": "DeleteLink",
    "Description": "Deletes an existing link"
  },
  {
    "API": "networkmanager:DeletePeering",
    "EventSource": "networkmanager",
    "EventName": "DeletePeering",
    "Description": "Deletes an existing peering connection"
  },
  {
    "API": "networkmanager:DeleteResourcePolicy",
    "EventSource": "networkmanager",
    "EventName": "DeleteResourcePolicy",
    "Description": "Deletes a resource policy for the specified resource"
  },
  {
    "API": "networkmanager:DeleteSite",
    "EventSource": "networkmanager",
    "EventName": "DeleteSite",
    "Description": "Deletes an existing site"
  },
  {
    "API": "networkmanager:DeregisterTransitGateway",
    "EventSource": "networkmanager",
    "EventName": "DeregisterTransitGateway",
    "Description": "Deregisters a transit gateway from your global network"
  },
  {
    "API": "networkmanager:DescribeGlobalNetworks",
    "EventSource": "networkmanager",
    "EventName": "DescribeGlobalNetworks",
    "Description": "Describes one or more global networks"
  },
  {
    "API": "networkmanager:DisassociateConnectPeer",
    "EventSource": "networkmanager",
    "EventName": "DisassociateConnectPeer",
    "Description": "Disassociates a core network Connect peer from a device and a link"
  },
  {
    "API": "networkmanager:DisassociateCustomerGateway",
    "EventSource": "networkmanager",
    "EventName": "DisassociateCustomerGateway",
    "Description": "Disassociates a customer gateway from a device and a link"
  },
  {
    "API": "networkmanager:DisassociateLink",
    "EventSource": "networkmanager",
    "EventName": "DisassociateLink",
    "Description": "Disassociates an existing device from a link"
  },
  {
    "API": "networkmanager:DisassociateTransitGatewayConnectPeer",
    "EventSource": "networkmanager",
    "EventName": "DisassociateTransitGatewayConnectPeer",
    "Description": "Disassociates a transit gateway Connect peer from a device and link"
  },
  {
    "API": "networkmanager:ExecuteCoreNetworkChangeSet",
    "EventSource": "networkmanager",
    "EventName": "ExecuteCoreNetworkChangeSet",
    "Description": "Executes a change set on your core network"
  },
  {
    "API": "networkmanager:GeneratePresignedUrl",
    "EventSource": "networkmanager",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "networkmanager:GetConnectAttachment",
    "EventSource": "networkmanager",
    "EventName": "GetConnectAttachment",
    "Description": "Returns information about a core network Connect attachment"
  },
  {
    "API": "networkmanager:GetConnectPeer",
    "EventSource": "networkmanager",
    "EventName": "GetConnectPeer",
    "Description": "Returns information about a core network Connect peer"
  },
  {
    "API": "networkmanager:GetConnectPeerAssociations",
    "EventSource": "networkmanager",
    "EventName": "GetConnectPeerAssociations",
    "Description": "Returns information about a core network Connect peer associations"
  },
  {
    "API": "networkmanager:GetConnections",
    "EventSource": "networkmanager",
    "EventName": "GetConnections",
    "Description": "Gets information about one or more of your connections in a global network"
  },
  {
    "API": "networkmanager:GetCoreNetwork",
    "EventSource": "networkmanager",
    "EventName": "GetCoreNetwork",
    "Description": "Returns information about the LIVE policy for a core network"
  },
  {
    "API": "networkmanager:GetCoreNetworkChangeEvents",
    "EventSource": "networkmanager",
    "EventName": "GetCoreNetworkChangeEvents",
    "Description": "Returns information about a core network change event"
  },
  {
    "API": "networkmanager:GetCoreNetworkChangeSet",
    "EventSource": "networkmanager",
    "EventName": "GetCoreNetworkChangeSet",
    "Description": "Returns a change set between the LIVE core network policy and a submitted policy"
  },
  {
    "API": "networkmanager:GetCoreNetworkPolicy",
    "EventSource": "networkmanager",
    "EventName": "GetCoreNetworkPolicy",
    "Description": "Returns details about a core network policy"
  },
  {
    "API": "networkmanager:GetCustomerGatewayAssociations",
    "EventSource": "networkmanager",
    "EventName": "GetCustomerGatewayAssociations",
    "Description": "Gets the association information for customer gateways that are associated with devices and links in your global network"
  },
  {
    "API": "networkmanager:GetDevices",
    "EventSource": "networkmanager",
    "EventName": "GetDevices",
    "Description": "Gets information about one or more of your devices in a global network"
  },
  {
    "API": "networkmanager:GetLinkAssociations",
    "EventSource": "networkmanager",
    "EventName": "GetLinkAssociations",
    "Description": "Gets the link associations for a device or a link"
  },
  {
    "API": "networkmanager:GetLinks",
    "EventSource": "networkmanager",
    "EventName": "GetLinks",
    "Description": "Gets information about one or more links in a specified global network"
  },
  {
    "API": "networkmanager:GetNetworkResourceCounts",
    "EventSource": "networkmanager",
    "EventName": "GetNetworkResourceCounts",
    "Description": "Gets the count of network resources, by resource type, for the specified global network"
  },
  {
    "API": "networkmanager:GetNetworkResourceRelationships",
    "EventSource": "networkmanager",
    "EventName": "GetNetworkResourceRelationships",
    "Description": "Gets the network resource relationships for the specified global network"
  },
  {
    "API": "networkmanager:GetNetworkResources",
    "EventSource": "networkmanager",
    "EventName": "GetNetworkResources",
    "Description": "Describes the network resources for the specified global network"
  },
  {
    "API": "networkmanager:GetNetworkRoutes",
    "EventSource": "networkmanager",
    "EventName": "GetNetworkRoutes",
    "Description": "Gets the network routes of the specified global network"
  },
  {
    "API": "networkmanager:GetNetworkTelemetry",
    "EventSource": "networkmanager",
    "EventName": "GetNetworkTelemetry",
    "Description": "Gets the network telemetry of the specified global network"
  },
  {
    "API": "networkmanager:GetResourcePolicy",
    "EventSource": "networkmanager",
    "EventName": "GetResourcePolicy",
    "Description": "Returns information about a resource policy"
  },
  {
    "API": "networkmanager:GetRouteAnalysis",
    "EventSource": "networkmanager",
    "EventName": "GetRouteAnalysis",
    "Description": "Gets information about the specified route analysis"
  },
  {
    "API": "networkmanager:GetSiteToSiteVpnAttachment",
    "EventSource": "networkmanager",
    "EventName": "GetSiteToSiteVpnAttachment",
    "Description": "Returns information about a site-to-site VPN attachment"
  },
  {
    "API": "networkmanager:GetSites",
    "EventSource": "networkmanager",
    "EventName": "GetSites",
    "Description": "Gets information about one or more of your sites in a global network"
  },
  {
    "API": "networkmanager:GetTransitGatewayConnectPeerAssociations",
    "EventSource": "networkmanager",
    "EventName": "GetTransitGatewayConnectPeerAssociations",
    "Description": "Gets information about one or more of your transit gateway Connect peer associations in a global network"
  },
  {
    "API": "networkmanager:GetTransitGatewayPeering",
    "EventSource": "networkmanager",
    "EventName": "GetTransitGatewayPeering",
    "Description": "Returns information about a transit gateway peer"
  },
  {
    "API": "networkmanager:GetTransitGatewayRegistrations",
    "EventSource": "networkmanager",
    "EventName": "GetTransitGatewayRegistrations",
    "Description": "Gets information about the transit gateway registrations in a specified global network"
  },
  {
    "API": "networkmanager:GetTransitGatewayRouteTableAttachment",
    "EventSource": "networkmanager",
    "EventName": "GetTransitGatewayRouteTableAttachment",
    "Description": "Returns information about a transit gateway route table attachment"
  },
  {
    "API": "networkmanager:GetVpcAttachment",
    "EventSource": "networkmanager",
    "EventName": "GetVpcAttachment",
    "Description": "Returns information about a VPC attachment"
  },
  {
    "API": "networkmanager:ListAttachments",
    "EventSource": "networkmanager",
    "EventName": "ListAttachments",
    "Description": "Returns a list of core network attachments"
  },
  {
    "API": "networkmanager:ListConnectPeers",
    "EventSource": "networkmanager",
    "EventName": "ListConnectPeers",
    "Description": "Returns a list of core network Connect peers"
  },
  {
    "API": "networkmanager:ListCoreNetworkPolicyVersions",
    "EventSource": "networkmanager",
    "EventName": "ListCoreNetworkPolicyVersions",
    "Description": "Returns a list of core network policy versions"
  },
  {
    "API": "networkmanager:ListCoreNetworks",
    "EventSource": "networkmanager",
    "EventName": "ListCoreNetworks",
    "Description": "Returns a list of owned and shared core networks"
  },
  {
    "API": "networkmanager:ListOrganizationServiceAccessStatus",
    "EventSource": "networkmanager",
    "EventName": "ListOrganizationServiceAccessStatus",
    "Description": "Gets the status of the Service Linked Role (SLR) deployment for the accounts in a given Amazon Web Services Organization"
  },
  {
    "API": "networkmanager:ListPeerings",
    "EventSource": "networkmanager",
    "EventName": "ListPeerings",
    "Description": "Lists the peerings for a core network"
  },
  {
    "API": "networkmanager:ListTagsForResource",
    "EventSource": "networkmanager",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags for a specified resource"
  },
  {
    "API": "networkmanager:PutCoreNetworkPolicy",
    "EventSource": "networkmanager",
    "EventName": "PutCoreNetworkPolicy",
    "Description": "Creates a new, immutable version of a core network policy"
  },
  {
    "API": "networkmanager:PutResourcePolicy",
    "EventSource": "networkmanager",
    "EventName": "PutResourcePolicy",
    "Description": "Creates or updates a resource policy"
  },
  {
    "API": "networkmanager:RegisterTransitGateway",
    "EventSource": "networkmanager",
    "EventName": "RegisterTransitGateway",
    "Description": "Registers a transit gateway in your global network"
  },
  {
    "API": "networkmanager:RejectAttachment",
    "EventSource": "networkmanager",
    "EventName": "RejectAttachment",
    "Description": "Rejects a core network attachment request"
  },
  {
    "API": "networkmanager:RestoreCoreNetworkPolicyVersion",
    "EventSource": "networkmanager",
    "EventName": "RestoreCoreNetworkPolicyVersion",
    "Description": "Restores a previous policy version as a new, immutable version of a core network policy"
  },
  {
    "API": "networkmanager:StartOrganizationServiceAccessUpdate",
    "EventSource": "networkmanager",
    "EventName": "StartOrganizationServiceAccessUpdate",
    "Description": "Enables the Network Manager service for an Amazon Web Services Organization"
  },
  {
    "API": "networkmanager:StartRouteAnalysis",
    "EventSource": "networkmanager",
    "EventName": "StartRouteAnalysis",
    "Description": "Starts analyzing the routing path between the specified source and destination"
  },
  {
    "API": "networkmanager:TagResource",
    "EventSource": "networkmanager",
    "EventName": "TagResource",
    "Description": "Tags a specified resource"
  },
  {
    "API": "networkmanager:UntagResource",
    "EventSource": "networkmanager",
    "EventName": "UntagResource",
    "Description": "Removes tags from a specified resource"
  },
  {
    "API": "networkmanager:UpdateConnection",
    "EventSource": "networkmanager",
    "EventName": "UpdateConnection",
    "Description": "Updates the information for an existing connection"
  },
  {
    "API": "networkmanager:UpdateCoreNetwork",
    "EventSource": "networkmanager",
    "EventName": "UpdateCoreNetwork",
    "Description": "Updates the description of a core network"
  },
  {
    "API": "networkmanager:UpdateDevice",
    "EventSource": "networkmanager",
    "EventName": "UpdateDevice",
    "Description": "Updates the details for an existing device"
  },
  {
    "API": "networkmanager:UpdateGlobalNetwork",
    "EventSource": "networkmanager",
    "EventName": "UpdateGlobalNetwork",
    "Description": "Updates an existing global network"
  },
  {
    "API": "networkmanager:UpdateLink",
    "EventSource": "networkmanager",
    "EventName": "UpdateLink",
    "Description": "Updates the details for an existing link"
  },
  {
    "API": "networkmanager:UpdateNetworkResourceMetadata",
    "EventSource": "networkmanager",
    "EventName": "UpdateNetworkResourceMetadata",
    "Description": "Updates the resource metadata for the specified global network"
  },
  {
    "API": "networkmanager:UpdateSite",
    "EventSource": "networkmanager",
    "EventName": "UpdateSite",
    "Description": "Updates the information for an existing site"
  },
  {
    "API": "networkmanager:UpdateVpcAttachment",
    "EventSource": "networkmanager",
    "EventName": "UpdateVpcAttachment",
    "Description": "Updates a VPC attachment"
  },
  {
    "API": "networkmonitor:CreateMonitor",
    "EventSource": "networkmonitor",
    "EventName": "CreateMonitor",
    "Description": "Creates a monitor between a source subnet and destination IP address"
  },
  {
    "API": "networkmonitor:CreateProbe",
    "EventSource": "networkmonitor",
    "EventName": "CreateProbe",
    "Description": "Create a probe within a monitor"
  },
  {
    "API": "networkmonitor:DeleteMonitor",
    "EventSource": "networkmonitor",
    "EventName": "DeleteMonitor",
    "Description": "Deletes a specified monitor"
  },
  {
    "API": "networkmonitor:DeleteProbe",
    "EventSource": "networkmonitor",
    "EventName": "DeleteProbe",
    "Description": "Deletes the specified probe"
  },
  {
    "API": "networkmonitor:GeneratePresignedUrl",
    "EventSource": "networkmonitor",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "networkmonitor:GetMonitor",
    "EventSource": "networkmonitor",
    "EventName": "GetMonitor",
    "Description": "Returns details about a specific monitor"
  },
  {
    "API": "networkmonitor:GetProbe",
    "EventSource": "networkmonitor",
    "EventName": "GetProbe",
    "Description": "Returns the details about a probe"
  },
  {
    "API": "networkmonitor:ListMonitors",
    "EventSource": "networkmonitor",
    "EventName": "ListMonitors",
    "Description": "Returns a list of all of your monitors"
  },
  {
    "API": "networkmonitor:ListTagsForResource",
    "EventSource": "networkmonitor",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags assigned to this resource"
  },
  {
    "API": "networkmonitor:TagResource",
    "EventSource": "networkmonitor",
    "EventName": "TagResource",
    "Description": "Adds key-value pairs to a monitor or probe"
  },
  {
    "API": "networkmonitor:UntagResource",
    "EventSource": "networkmonitor",
    "EventName": "UntagResource",
    "Description": "Removes a key-value pair from a monitor or probe"
  },
  {
    "API": "networkmonitor:UpdateMonitor",
    "EventSource": "networkmonitor",
    "EventName": "UpdateMonitor",
    "Description": "Updates the ``aggregationPeriod`` for a monitor"
  },
  {
    "API": "networkmonitor:UpdateProbe",
    "EventSource": "networkmonitor",
    "EventName": "UpdateProbe",
    "Description": "Updates a monitor probe"
  },
  {
    "API": "nimble:AcceptEulas",
    "EventSource": "nimble",
    "EventName": "AcceptEulas",
    "Description": "Accept EULAs"
  },
  {
    "API": "nimble:CreateLaunchProfile",
    "EventSource": "nimble",
    "EventName": "CreateLaunchProfile",
    "Description": "Create a launch profile"
  },
  {
    "API": "nimble:CreateStreamingImage",
    "EventSource": "nimble",
    "EventName": "CreateStreamingImage",
    "Description": "Creates a streaming image resource in a studio"
  },
  {
    "API": "nimble:CreateStreamingSession",
    "EventSource": "nimble",
    "EventName": "CreateStreamingSession",
    "Description": "Creates a streaming session in a studio"
  },
  {
    "API": "nimble:CreateStreamingSessionStream",
    "EventSource": "nimble",
    "EventName": "CreateStreamingSessionStream",
    "Description": "Creates a streaming session stream for a streaming session"
  },
  {
    "API": "nimble:CreateStudio",
    "EventSource": "nimble",
    "EventName": "CreateStudio",
    "Description": "Create a new studio"
  },
  {
    "API": "nimble:CreateStudioComponent",
    "EventSource": "nimble",
    "EventName": "CreateStudioComponent",
    "Description": "Creates a studio component resource"
  },
  {
    "API": "nimble:DeleteLaunchProfile",
    "EventSource": "nimble",
    "EventName": "DeleteLaunchProfile",
    "Description": "Permanently delete a launch profile"
  },
  {
    "API": "nimble:DeleteLaunchProfileMember",
    "EventSource": "nimble",
    "EventName": "DeleteLaunchProfileMember",
    "Description": "Delete a user from launch profile membership"
  },
  {
    "API": "nimble:DeleteStreamingImage",
    "EventSource": "nimble",
    "EventName": "DeleteStreamingImage",
    "Description": "Delete streaming image"
  },
  {
    "API": "nimble:DeleteStreamingSession",
    "EventSource": "nimble",
    "EventName": "DeleteStreamingSession",
    "Description": "Deletes streaming session resource"
  },
  {
    "API": "nimble:DeleteStudio",
    "EventSource": "nimble",
    "EventName": "DeleteStudio",
    "Description": "Delete a studio resource"
  },
  {
    "API": "nimble:DeleteStudioComponent",
    "EventSource": "nimble",
    "EventName": "DeleteStudioComponent",
    "Description": "Deletes a studio component resource"
  },
  {
    "API": "nimble:DeleteStudioMember",
    "EventSource": "nimble",
    "EventName": "DeleteStudioMember",
    "Description": "Delete a user from studio membership"
  },
  {
    "API": "nimble:GeneratePresignedUrl",
    "EventSource": "nimble",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "nimble:GetEula",
    "EventSource": "nimble",
    "EventName": "GetEula",
    "Description": "Get EULA"
  },
  {
    "API": "nimble:GetLaunchProfile",
    "EventSource": "nimble",
    "EventName": "GetLaunchProfile",
    "Description": "Get a launch profile"
  },
  {
    "API": "nimble:GetLaunchProfileDetails",
    "EventSource": "nimble",
    "EventName": "GetLaunchProfileDetails",
    "Description": "Launch profile details include the launch profile resource and summary information of resources that are used by, or available to, the launch profile"
  },
  {
    "API": "nimble:GetLaunchProfileInitialization",
    "EventSource": "nimble",
    "EventName": "GetLaunchProfileInitialization",
    "Description": "Get a launch profile initialization"
  },
  {
    "API": "nimble:GetLaunchProfileMember",
    "EventSource": "nimble",
    "EventName": "GetLaunchProfileMember",
    "Description": "Get a user persona in launch profile membership"
  },
  {
    "API": "nimble:GetStreamingImage",
    "EventSource": "nimble",
    "EventName": "GetStreamingImage",
    "Description": "Get streaming image"
  },
  {
    "API": "nimble:GetStreamingSession",
    "EventSource": "nimble",
    "EventName": "GetStreamingSession",
    "Description": "Gets StreamingSession resource"
  },
  {
    "API": "nimble:GetStreamingSessionBackup",
    "EventSource": "nimble",
    "EventName": "GetStreamingSessionBackup",
    "Description": "Gets ``StreamingSessionBackup`` resource"
  },
  {
    "API": "nimble:GetStreamingSessionStream",
    "EventSource": "nimble",
    "EventName": "GetStreamingSessionStream",
    "Description": "Gets a StreamingSessionStream for a streaming session"
  },
  {
    "API": "nimble:GetStudio",
    "EventSource": "nimble",
    "EventName": "GetStudio",
    "Description": "Get a studio resource"
  },
  {
    "API": "nimble:GetStudioComponent",
    "EventSource": "nimble",
    "EventName": "GetStudioComponent",
    "Description": "Gets a studio component resource"
  },
  {
    "API": "nimble:GetStudioMember",
    "EventSource": "nimble",
    "EventName": "GetStudioMember",
    "Description": "Get a user's membership in a studio"
  },
  {
    "API": "nimble:ListEulaAcceptances",
    "EventSource": "nimble",
    "EventName": "ListEulaAcceptances",
    "Description": "List EULA acceptances"
  },
  {
    "API": "nimble:ListEulas",
    "EventSource": "nimble",
    "EventName": "ListEulas",
    "Description": "List EULAs"
  },
  {
    "API": "nimble:ListLaunchProfileMembers",
    "EventSource": "nimble",
    "EventName": "ListLaunchProfileMembers",
    "Description": "Get all users in a given launch profile membership"
  },
  {
    "API": "nimble:ListLaunchProfiles",
    "EventSource": "nimble",
    "EventName": "ListLaunchProfiles",
    "Description": "List all the launch profiles a studio"
  },
  {
    "API": "nimble:ListStreamingImages",
    "EventSource": "nimble",
    "EventName": "ListStreamingImages",
    "Description": "List the streaming image resources available to this studio"
  },
  {
    "API": "nimble:ListStreamingSessionBackups",
    "EventSource": "nimble",
    "EventName": "ListStreamingSessionBackups",
    "Description": "Lists the backups of a streaming session in a studio"
  },
  {
    "API": "nimble:ListStreamingSessions",
    "EventSource": "nimble",
    "EventName": "ListStreamingSessions",
    "Description": "Lists the streaming sessions in a studio"
  },
  {
    "API": "nimble:ListStudioComponents",
    "EventSource": "nimble",
    "EventName": "ListStudioComponents",
    "Description": "Lists the ``StudioComponents`` in a studio"
  },
  {
    "API": "nimble:ListStudioMembers",
    "EventSource": "nimble",
    "EventName": "ListStudioMembers",
    "Description": "Get all users in a given studio membership"
  },
  {
    "API": "nimble:ListStudios",
    "EventSource": "nimble",
    "EventName": "ListStudios",
    "Description": "List studios in your Amazon Web Services accounts in the requested Amazon Web Services Region"
  },
  {
    "API": "nimble:ListTagsForResource",
    "EventSource": "nimble",
    "EventName": "ListTagsForResource",
    "Description": "Gets the tags for a resource, given its Amazon Resource Names (ARN)"
  },
  {
    "API": "nimble:PutLaunchProfileMembers",
    "EventSource": "nimble",
    "EventName": "PutLaunchProfileMembers",
    "Description": "Add/update users with given persona to launch profile membership"
  },
  {
    "API": "nimble:PutStudioMembers",
    "EventSource": "nimble",
    "EventName": "PutStudioMembers",
    "Description": "Add/update users with given persona to studio membership"
  },
  {
    "API": "nimble:StartStreamingSession",
    "EventSource": "nimble",
    "EventName": "StartStreamingSession",
    "Description": "Transitions sessions from the ``STOPPED`` state into the ``READY`` state"
  },
  {
    "API": "nimble:StartStudioSsoConfigurationRepair",
    "EventSource": "nimble",
    "EventName": "StartStudioSsoConfigurationRepair",
    "Description": "Repairs the IAM Identity Center configuration for a given studio"
  },
  {
    "API": "nimble:StopStreamingSession",
    "EventSource": "nimble",
    "EventName": "StopStreamingSession",
    "Description": "Transitions sessions from the ``READY`` state into the ``STOPPED`` state"
  },
  {
    "API": "nimble:TagResource",
    "EventSource": "nimble",
    "EventName": "TagResource",
    "Description": "Creates tags for a resource, given its ARN"
  },
  {
    "API": "nimble:UntagResource",
    "EventSource": "nimble",
    "EventName": "UntagResource",
    "Description": "Deletes the tags for a resource"
  },
  {
    "API": "nimble:UpdateLaunchProfile",
    "EventSource": "nimble",
    "EventName": "UpdateLaunchProfile",
    "Description": "Update a launch profile"
  },
  {
    "API": "nimble:UpdateLaunchProfileMember",
    "EventSource": "nimble",
    "EventName": "UpdateLaunchProfileMember",
    "Description": "Update a user persona in launch profile membership"
  },
  {
    "API": "nimble:UpdateStreamingImage",
    "EventSource": "nimble",
    "EventName": "UpdateStreamingImage",
    "Description": "Update streaming image"
  },
  {
    "API": "nimble:UpdateStudio",
    "EventSource": "nimble",
    "EventName": "UpdateStudio",
    "Description": "Update a Studio resource"
  },
  {
    "API": "nimble:UpdateStudioComponent",
    "EventSource": "nimble",
    "EventName": "UpdateStudioComponent",
    "Description": "Updates a studio component resource"
  },
  {
    "API": "oam:CreateLink",
    "EventSource": "oam",
    "EventName": "CreateLink",
    "Description": "Creates a link between a source account and a sink that you have created in a monitoring account"
  },
  {
    "API": "oam:CreateSink",
    "EventSource": "oam",
    "EventName": "CreateSink",
    "Description": "Use this to create a *sink* in the current account, so that it can be used as a monitoring account in CloudWatch cross-account observability"
  },
  {
    "API": "oam:DeleteLink",
    "EventSource": "oam",
    "EventName": "DeleteLink",
    "Description": "Deletes a link between a monitoring account sink and a source account"
  },
  {
    "API": "oam:DeleteSink",
    "EventSource": "oam",
    "EventName": "DeleteSink",
    "Description": "Deletes a sink"
  },
  {
    "API": "oam:GeneratePresignedUrl",
    "EventSource": "oam",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "oam:GetLink",
    "EventSource": "oam",
    "EventName": "GetLink",
    "Description": "Returns complete information about one link"
  },
  {
    "API": "oam:GetSink",
    "EventSource": "oam",
    "EventName": "GetSink",
    "Description": "Returns complete information about one monitoring account sink"
  },
  {
    "API": "oam:GetSinkPolicy",
    "EventSource": "oam",
    "EventName": "GetSinkPolicy",
    "Description": "Returns the current sink policy attached to this sink"
  },
  {
    "API": "oam:ListAttachedLinks",
    "EventSource": "oam",
    "EventName": "ListAttachedLinks",
    "Description": "Returns a list of source account links that are linked to this monitoring account sink"
  },
  {
    "API": "oam:ListLinks",
    "EventSource": "oam",
    "EventName": "ListLinks",
    "Description": "Use this operation in a source account to return a list of links to monitoring account sinks that this source account has"
  },
  {
    "API": "oam:ListSinks",
    "EventSource": "oam",
    "EventName": "ListSinks",
    "Description": "Use this operation in a monitoring account to return the list of sinks created in that account"
  },
  {
    "API": "oam:ListTagsForResource",
    "EventSource": "oam",
    "EventName": "ListTagsForResource",
    "Description": "Displays the tags associated with a resource"
  },
  {
    "API": "oam:PutSinkPolicy",
    "EventSource": "oam",
    "EventName": "PutSinkPolicy",
    "Description": "Creates or updates the resource policy that grants permissions to source accounts to link to the monitoring account sink"
  },
  {
    "API": "oam:TagResource",
    "EventSource": "oam",
    "EventName": "TagResource",
    "Description": "Assigns one or more tags (key-value pairs) to the specified resource"
  },
  {
    "API": "oam:UntagResource",
    "EventSource": "oam",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags from the specified resource"
  },
  {
    "API": "oam:UpdateLink",
    "EventSource": "oam",
    "EventName": "UpdateLink",
    "Description": "Use this operation to change what types of data are shared from a source account to its linked monitoring account sink"
  },
  {
    "API": "omics:AbortMultipartReadSetUpload",
    "EventSource": "omics",
    "EventName": "AbortMultipartReadSetUpload",
    "Description": "Stops a multipart upload"
  },
  {
    "API": "omics:AcceptShare",
    "EventSource": "omics",
    "EventName": "AcceptShare",
    "Description": "Accept a resource share request"
  },
  {
    "API": "omics:BatchDeleteReadSet",
    "EventSource": "omics",
    "EventName": "BatchDeleteReadSet",
    "Description": "Deletes one or more read sets"
  },
  {
    "API": "omics:CancelAnnotationImportJob",
    "EventSource": "omics",
    "EventName": "CancelAnnotationImportJob",
    "Description": "Cancels an annotation import job"
  },
  {
    "API": "omics:CancelRun",
    "EventSource": "omics",
    "EventName": "CancelRun",
    "Description": "Cancels a run"
  },
  {
    "API": "omics:CancelVariantImportJob",
    "EventSource": "omics",
    "EventName": "CancelVariantImportJob",
    "Description": "Cancels a variant import job"
  },
  {
    "API": "omics:CompleteMultipartReadSetUpload",
    "EventSource": "omics",
    "EventName": "CompleteMultipartReadSetUpload",
    "Description": "Concludes a multipart upload once you have uploaded all the components"
  },
  {
    "API": "omics:CreateAnnotationStore",
    "EventSource": "omics",
    "EventName": "CreateAnnotationStore",
    "Description": "Creates an annotation store"
  },
  {
    "API": "omics:CreateAnnotationStoreVersion",
    "EventSource": "omics",
    "EventName": "CreateAnnotationStoreVersion",
    "Description": "Creates a new version of an annotation store"
  },
  {
    "API": "omics:CreateMultipartReadSetUpload",
    "EventSource": "omics",
    "EventName": "CreateMultipartReadSetUpload",
    "Description": "Begins a multipart read set upload"
  },
  {
    "API": "omics:CreateReferenceStore",
    "EventSource": "omics",
    "EventName": "CreateReferenceStore",
    "Description": "Creates a reference store"
  },
  {
    "API": "omics:CreateRunGroup",
    "EventSource": "omics",
    "EventName": "CreateRunGroup",
    "Description": "Creates a run group"
  },
  {
    "API": "omics:CreateSequenceStore",
    "EventSource": "omics",
    "EventName": "CreateSequenceStore",
    "Description": "Creates a sequence store"
  },
  {
    "API": "omics:CreateShare",
    "EventSource": "omics",
    "EventName": "CreateShare",
    "Description": "Creates a cross-account shared resource"
  },
  {
    "API": "omics:CreateVariantStore",
    "EventSource": "omics",
    "EventName": "CreateVariantStore",
    "Description": "Creates a variant store"
  },
  {
    "API": "omics:CreateWorkflow",
    "EventSource": "omics",
    "EventName": "CreateWorkflow",
    "Description": "Creates a workflow"
  },
  {
    "API": "omics:DeleteAnnotationStore",
    "EventSource": "omics",
    "EventName": "DeleteAnnotationStore",
    "Description": "Deletes an annotation store"
  },
  {
    "API": "omics:DeleteAnnotationStoreVersions",
    "EventSource": "omics",
    "EventName": "DeleteAnnotationStoreVersions",
    "Description": "Deletes one or multiple versions of an annotation store"
  },
  {
    "API": "omics:DeleteReference",
    "EventSource": "omics",
    "EventName": "DeleteReference",
    "Description": "Deletes a genome reference"
  },
  {
    "API": "omics:DeleteReferenceStore",
    "EventSource": "omics",
    "EventName": "DeleteReferenceStore",
    "Description": "Deletes a genome reference store"
  },
  {
    "API": "omics:DeleteRun",
    "EventSource": "omics",
    "EventName": "DeleteRun",
    "Description": "Deletes a workflow run"
  },
  {
    "API": "omics:DeleteRunGroup",
    "EventSource": "omics",
    "EventName": "DeleteRunGroup",
    "Description": "Deletes a workflow run group"
  },
  {
    "API": "omics:DeleteSequenceStore",
    "EventSource": "omics",
    "EventName": "DeleteSequenceStore",
    "Description": "Deletes a sequence store"
  },
  {
    "API": "omics:DeleteShare",
    "EventSource": "omics",
    "EventName": "DeleteShare",
    "Description": "Deletes a resource share"
  },
  {
    "API": "omics:DeleteVariantStore",
    "EventSource": "omics",
    "EventName": "DeleteVariantStore",
    "Description": "Deletes a variant store"
  },
  {
    "API": "omics:DeleteWorkflow",
    "EventSource": "omics",
    "EventName": "DeleteWorkflow",
    "Description": "Deletes a workflow"
  },
  {
    "API": "omics:GeneratePresignedUrl",
    "EventSource": "omics",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "omics:GetAnnotationImportJob",
    "EventSource": "omics",
    "EventName": "GetAnnotationImportJob",
    "Description": "Gets information about an annotation import job"
  },
  {
    "API": "omics:GetAnnotationStore",
    "EventSource": "omics",
    "EventName": "GetAnnotationStore",
    "Description": "Gets information about an annotation store"
  },
  {
    "API": "omics:GetAnnotationStoreVersion",
    "EventSource": "omics",
    "EventName": "GetAnnotationStoreVersion",
    "Description": "Retrieves the metadata for an annotation store version"
  },
  {
    "API": "omics:GetReadSet",
    "EventSource": "omics",
    "EventName": "GetReadSet",
    "Description": "Gets a file from a read set"
  },
  {
    "API": "omics:GetReadSetActivationJob",
    "EventSource": "omics",
    "EventName": "GetReadSetActivationJob",
    "Description": "Gets information about a read set activation job"
  },
  {
    "API": "omics:GetReadSetExportJob",
    "EventSource": "omics",
    "EventName": "GetReadSetExportJob",
    "Description": "Gets information about a read set export job"
  },
  {
    "API": "omics:GetReadSetImportJob",
    "EventSource": "omics",
    "EventName": "GetReadSetImportJob",
    "Description": "Gets information about a read set import job"
  },
  {
    "API": "omics:GetReadSetMetadata",
    "EventSource": "omics",
    "EventName": "GetReadSetMetadata",
    "Description": "Gets details about a read set"
  },
  {
    "API": "omics:GetReference",
    "EventSource": "omics",
    "EventName": "GetReference",
    "Description": "Gets a reference file"
  },
  {
    "API": "omics:GetReferenceImportJob",
    "EventSource": "omics",
    "EventName": "GetReferenceImportJob",
    "Description": "Gets information about a reference import job"
  },
  {
    "API": "omics:GetReferenceMetadata",
    "EventSource": "omics",
    "EventName": "GetReferenceMetadata",
    "Description": "Gets information about a genome reference's metadata"
  },
  {
    "API": "omics:GetReferenceStore",
    "EventSource": "omics",
    "EventName": "GetReferenceStore",
    "Description": "Gets information about a reference store"
  },
  {
    "API": "omics:GetRun",
    "EventSource": "omics",
    "EventName": "GetRun",
    "Description": "Gets information about a workflow run"
  },
  {
    "API": "omics:GetRunGroup",
    "EventSource": "omics",
    "EventName": "GetRunGroup",
    "Description": "Gets information about a workflow run group"
  },
  {
    "API": "omics:GetRunTask",
    "EventSource": "omics",
    "EventName": "GetRunTask",
    "Description": "Gets information about a workflow run task"
  },
  {
    "API": "omics:GetSequenceStore",
    "EventSource": "omics",
    "EventName": "GetSequenceStore",
    "Description": "Gets information about a sequence store"
  },
  {
    "API": "omics:GetShare",
    "EventSource": "omics",
    "EventName": "GetShare",
    "Description": "Retrieves the metadata for the specified resource share"
  },
  {
    "API": "omics:GetVariantImportJob",
    "EventSource": "omics",
    "EventName": "GetVariantImportJob",
    "Description": "Gets information about a variant import job"
  },
  {
    "API": "omics:GetVariantStore",
    "EventSource": "omics",
    "EventName": "GetVariantStore",
    "Description": "Gets information about a variant store"
  },
  {
    "API": "omics:GetWorkflow",
    "EventSource": "omics",
    "EventName": "GetWorkflow",
    "Description": "Gets information about a workflow"
  },
  {
    "API": "omics:ListAnnotationImportJobs",
    "EventSource": "omics",
    "EventName": "ListAnnotationImportJobs",
    "Description": "Retrieves a list of annotation import jobs"
  },
  {
    "API": "omics:ListAnnotationStoreVersions",
    "EventSource": "omics",
    "EventName": "ListAnnotationStoreVersions",
    "Description": "Lists the versions of an annotation store"
  },
  {
    "API": "omics:ListAnnotationStores",
    "EventSource": "omics",
    "EventName": "ListAnnotationStores",
    "Description": "Retrieves a list of annotation stores"
  },
  {
    "API": "omics:ListMultipartReadSetUploads",
    "EventSource": "omics",
    "EventName": "ListMultipartReadSetUploads",
    "Description": "Lists multipart read set uploads and for in progress uploads"
  },
  {
    "API": "omics:ListReadSetActivationJobs",
    "EventSource": "omics",
    "EventName": "ListReadSetActivationJobs",
    "Description": "Retrieves a list of read set activation jobs"
  },
  {
    "API": "omics:ListReadSetExportJobs",
    "EventSource": "omics",
    "EventName": "ListReadSetExportJobs",
    "Description": "Retrieves a list of read set export jobs"
  },
  {
    "API": "omics:ListReadSetImportJobs",
    "EventSource": "omics",
    "EventName": "ListReadSetImportJobs",
    "Description": "Retrieves a list of read set import jobs"
  },
  {
    "API": "omics:ListReadSetUploadParts",
    "EventSource": "omics",
    "EventName": "ListReadSetUploadParts",
    "Description": "This operation will list all parts in a requested multipart upload for a sequence store"
  },
  {
    "API": "omics:ListReadSets",
    "EventSource": "omics",
    "EventName": "ListReadSets",
    "Description": "Retrieves a list of read sets"
  },
  {
    "API": "omics:ListReferenceImportJobs",
    "EventSource": "omics",
    "EventName": "ListReferenceImportJobs",
    "Description": "Retrieves a list of reference import jobs"
  },
  {
    "API": "omics:ListReferenceStores",
    "EventSource": "omics",
    "EventName": "ListReferenceStores",
    "Description": "Retrieves a list of reference stores"
  },
  {
    "API": "omics:ListReferences",
    "EventSource": "omics",
    "EventName": "ListReferences",
    "Description": "Retrieves a list of references"
  },
  {
    "API": "omics:ListRunGroups",
    "EventSource": "omics",
    "EventName": "ListRunGroups",
    "Description": "Retrieves a list of run groups"
  },
  {
    "API": "omics:ListRunTasks",
    "EventSource": "omics",
    "EventName": "ListRunTasks",
    "Description": "Retrieves a list of tasks for a run"
  },
  {
    "API": "omics:ListRuns",
    "EventSource": "omics",
    "EventName": "ListRuns",
    "Description": "Retrieves a list of runs"
  },
  {
    "API": "omics:ListSequenceStores",
    "EventSource": "omics",
    "EventName": "ListSequenceStores",
    "Description": "Retrieves a list of sequence stores"
  },
  {
    "API": "omics:ListShares",
    "EventSource": "omics",
    "EventName": "ListShares",
    "Description": "Retrieves the resource shares associated with an account"
  },
  {
    "API": "omics:ListTagsForResource",
    "EventSource": "omics",
    "EventName": "ListTagsForResource",
    "Description": "Retrieves a list of tags for a resource"
  },
  {
    "API": "omics:ListVariantImportJobs",
    "EventSource": "omics",
    "EventName": "ListVariantImportJobs",
    "Description": "Retrieves a list of variant import jobs"
  },
  {
    "API": "omics:ListVariantStores",
    "EventSource": "omics",
    "EventName": "ListVariantStores",
    "Description": "Retrieves a list of variant stores"
  },
  {
    "API": "omics:ListWorkflows",
    "EventSource": "omics",
    "EventName": "ListWorkflows",
    "Description": "Retrieves a list of workflows"
  },
  {
    "API": "omics:StartAnnotationImportJob",
    "EventSource": "omics",
    "EventName": "StartAnnotationImportJob",
    "Description": "Starts an annotation import job"
  },
  {
    "API": "omics:StartReadSetActivationJob",
    "EventSource": "omics",
    "EventName": "StartReadSetActivationJob",
    "Description": "Activates an archived read set"
  },
  {
    "API": "omics:StartReadSetExportJob",
    "EventSource": "omics",
    "EventName": "StartReadSetExportJob",
    "Description": "Exports a read set to Amazon S3"
  },
  {
    "API": "omics:StartReadSetImportJob",
    "EventSource": "omics",
    "EventName": "StartReadSetImportJob",
    "Description": "Starts a read set import job"
  },
  {
    "API": "omics:StartReferenceImportJob",
    "EventSource": "omics",
    "EventName": "StartReferenceImportJob",
    "Description": "Starts a reference import job"
  },
  {
    "API": "omics:StartRun",
    "EventSource": "omics",
    "EventName": "StartRun",
    "Description": "Starts a workflow run"
  },
  {
    "API": "omics:StartVariantImportJob",
    "EventSource": "omics",
    "EventName": "StartVariantImportJob",
    "Description": "Starts a variant import job"
  },
  {
    "API": "omics:TagResource",
    "EventSource": "omics",
    "EventName": "TagResource",
    "Description": "Tags a resource"
  },
  {
    "API": "omics:UntagResource",
    "EventSource": "omics",
    "EventName": "UntagResource",
    "Description": "Removes tags from a resource"
  },
  {
    "API": "omics:UpdateAnnotationStore",
    "EventSource": "omics",
    "EventName": "UpdateAnnotationStore",
    "Description": "Updates an annotation store"
  },
  {
    "API": "omics:UpdateAnnotationStoreVersion",
    "EventSource": "omics",
    "EventName": "UpdateAnnotationStoreVersion",
    "Description": "Updates the description of an annotation store version"
  },
  {
    "API": "omics:UpdateRunGroup",
    "EventSource": "omics",
    "EventName": "UpdateRunGroup",
    "Description": "Updates a run group"
  },
  {
    "API": "omics:UpdateVariantStore",
    "EventSource": "omics",
    "EventName": "UpdateVariantStore",
    "Description": "Updates a variant store"
  },
  {
    "API": "omics:UpdateWorkflow",
    "EventSource": "omics",
    "EventName": "UpdateWorkflow",
    "Description": "Updates a workflow"
  },
  {
    "API": "omics:UploadReadSetPart",
    "EventSource": "omics",
    "EventName": "UploadReadSetPart",
    "Description": "This operation uploads a specific part of a read set"
  },
  {
    "API": "opensearch:AcceptInboundConnection",
    "EventSource": "opensearch",
    "EventName": "AcceptInboundConnection",
    "Description": "Allows the destination Amazon OpenSearch Service domain owner to accept an inbound cross-cluster search connection request"
  },
  {
    "API": "opensearch:AddDataSource",
    "EventSource": "opensearch",
    "EventName": "AddDataSource",
    "Description": "Creates a new direct-query data source to the specified domain"
  },
  {
    "API": "opensearch:AddTags",
    "EventSource": "opensearch",
    "EventName": "AddTags",
    "Description": "Attaches tags to an existing Amazon OpenSearch Service domain"
  },
  {
    "API": "opensearch:AssociatePackage",
    "EventSource": "opensearch",
    "EventName": "AssociatePackage",
    "Description": "Associates a package with an Amazon OpenSearch Service domain"
  },
  {
    "API": "opensearch:AuthorizeVpcEndpointAccess",
    "EventSource": "opensearch",
    "EventName": "AuthorizeVpcEndpointAccess",
    "Description": "Provides access to an Amazon OpenSearch Service domain through the use of an interface VPC endpoint"
  },
  {
    "API": "opensearch:CancelDomainConfigChange",
    "EventSource": "opensearch",
    "EventName": "CancelDomainConfigChange",
    "Description": "Cancels a pending configuration change on an Amazon OpenSearch Service domain"
  },
  {
    "API": "opensearch:CancelServiceSoftwareUpdate",
    "EventSource": "opensearch",
    "EventName": "CancelServiceSoftwareUpdate",
    "Description": "Cancels a scheduled service software update for an Amazon OpenSearch Service domain"
  },
  {
    "API": "opensearch:CreateDomain",
    "EventSource": "opensearch",
    "EventName": "CreateDomain",
    "Description": "Creates an Amazon OpenSearch Service domain"
  },
  {
    "API": "opensearch:CreateOutboundConnection",
    "EventSource": "opensearch",
    "EventName": "CreateOutboundConnection",
    "Description": "Creates a new cross-cluster search connection from a source Amazon OpenSearch Service domain to a destination domain"
  },
  {
    "API": "opensearch:CreatePackage",
    "EventSource": "opensearch",
    "EventName": "CreatePackage",
    "Description": "Creates a package for use with Amazon OpenSearch Service domains"
  },
  {
    "API": "opensearch:CreateVpcEndpoint",
    "EventSource": "opensearch",
    "EventName": "CreateVpcEndpoint",
    "Description": "Creates an Amazon OpenSearch Service-managed VPC endpoint"
  },
  {
    "API": "opensearch:DeleteDataSource",
    "EventSource": "opensearch",
    "EventName": "DeleteDataSource",
    "Description": "Deletes a direct-query data source"
  },
  {
    "API": "opensearch:DeleteDomain",
    "EventSource": "opensearch",
    "EventName": "DeleteDomain",
    "Description": "Deletes an Amazon OpenSearch Service domain and all of its data"
  },
  {
    "API": "opensearch:DeleteInboundConnection",
    "EventSource": "opensearch",
    "EventName": "DeleteInboundConnection",
    "Description": "Allows the destination Amazon OpenSearch Service domain owner to delete an existing inbound cross-cluster search connection"
  },
  {
    "API": "opensearch:DeleteOutboundConnection",
    "EventSource": "opensearch",
    "EventName": "DeleteOutboundConnection",
    "Description": "Allows the source Amazon OpenSearch Service domain owner to delete an existing outbound cross-cluster search connection"
  },
  {
    "API": "opensearch:DeletePackage",
    "EventSource": "opensearch",
    "EventName": "DeletePackage",
    "Description": "Deletes an Amazon OpenSearch Service package"
  },
  {
    "API": "opensearch:DeleteVpcEndpoint",
    "EventSource": "opensearch",
    "EventName": "DeleteVpcEndpoint",
    "Description": "Deletes an Amazon OpenSearch Service-managed interface VPC endpoint"
  },
  {
    "API": "opensearch:DescribeDomain",
    "EventSource": "opensearch",
    "EventName": "DescribeDomain",
    "Description": "Describes the domain configuration for the specified Amazon OpenSearch Service domain, including the domain ID, domain service endpoint, and domain ARN"
  },
  {
    "API": "opensearch:DescribeDomainAutoTunes",
    "EventSource": "opensearch",
    "EventName": "DescribeDomainAutoTunes",
    "Description": "Returns the list of optimizations that Auto-Tune has made to an Amazon OpenSearch Service domain"
  },
  {
    "API": "opensearch:DescribeDomainChangeProgress",
    "EventSource": "opensearch",
    "EventName": "DescribeDomainChangeProgress",
    "Description": "Returns information about the current blue/green deployment happening on an Amazon OpenSearch Service domain"
  },
  {
    "API": "opensearch:DescribeDomainConfig",
    "EventSource": "opensearch",
    "EventName": "DescribeDomainConfig",
    "Description": "Returns the configuration of an Amazon OpenSearch Service domain"
  },
  {
    "API": "opensearch:DescribeDomainHealth",
    "EventSource": "opensearch",
    "EventName": "DescribeDomainHealth",
    "Description": "Returns information about domain and node health, the standby Availability Zone, number of nodes per Availability Zone, and shard count per node"
  },
  {
    "API": "opensearch:DescribeDomainNodes",
    "EventSource": "opensearch",
    "EventName": "DescribeDomainNodes",
    "Description": "Returns information about domain and nodes, including data nodes, master nodes, ultrawarm nodes, Availability Zone(s), standby nodes, node configurations, and node states"
  },
  {
    "API": "opensearch:DescribeDomains",
    "EventSource": "opensearch",
    "EventName": "DescribeDomains",
    "Description": "Returns domain configuration information about the specified Amazon OpenSearch Service domains"
  },
  {
    "API": "opensearch:DescribeDryRunProgress",
    "EventSource": "opensearch",
    "EventName": "DescribeDryRunProgress",
    "Description": "Describes the progress of a pre-update dry run analysis on an Amazon OpenSearch Service domain"
  },
  {
    "API": "opensearch:DescribeInboundConnections",
    "EventSource": "opensearch",
    "EventName": "DescribeInboundConnections",
    "Description": "Lists all the inbound cross-cluster search connections for a destination (remote) Amazon OpenSearch Service domain"
  },
  {
    "API": "opensearch:DescribeInstanceTypeLimits",
    "EventSource": "opensearch",
    "EventName": "DescribeInstanceTypeLimits",
    "Description": "Describes the instance count, storage, and master node limits for a given OpenSearch or Elasticsearch version and instance type"
  },
  {
    "API": "opensearch:DescribeOutboundConnections",
    "EventSource": "opensearch",
    "EventName": "DescribeOutboundConnections",
    "Description": "Lists all the outbound cross-cluster connections for a local (source) Amazon OpenSearch Service domain"
  },
  {
    "API": "opensearch:DescribePackages",
    "EventSource": "opensearch",
    "EventName": "DescribePackages",
    "Description": "Describes all packages available to OpenSearch Service"
  },
  {
    "API": "opensearch:DescribeReservedInstanceOfferings",
    "EventSource": "opensearch",
    "EventName": "DescribeReservedInstanceOfferings",
    "Description": "Describes the available Amazon OpenSearch Service Reserved Instance offerings for a given Region"
  },
  {
    "API": "opensearch:DescribeReservedInstances",
    "EventSource": "opensearch",
    "EventName": "DescribeReservedInstances",
    "Description": "Describes the Amazon OpenSearch Service instances that you have reserved in a given Region"
  },
  {
    "API": "opensearch:DescribeVpcEndpoints",
    "EventSource": "opensearch",
    "EventName": "DescribeVpcEndpoints",
    "Description": "Describes one or more Amazon OpenSearch Service-managed VPC endpoints"
  },
  {
    "API": "opensearch:DissociatePackage",
    "EventSource": "opensearch",
    "EventName": "DissociatePackage",
    "Description": "Removes a package from the specified Amazon OpenSearch Service domain"
  },
  {
    "API": "opensearch:GeneratePresignedUrl",
    "EventSource": "opensearch",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "opensearch:GetCompatibleVersions",
    "EventSource": "opensearch",
    "EventName": "GetCompatibleVersions",
    "Description": "Returns a map of OpenSearch or Elasticsearch versions and the versions you can upgrade them to"
  },
  {
    "API": "opensearch:GetDataSource",
    "EventSource": "opensearch",
    "EventName": "GetDataSource",
    "Description": "Retrieves information about a direct query data source"
  },
  {
    "API": "opensearch:GetDomainMaintenanceStatus",
    "EventSource": "opensearch",
    "EventName": "GetDomainMaintenanceStatus",
    "Description": "The status of the maintenance action"
  },
  {
    "API": "opensearch:GetPackageVersionHistory",
    "EventSource": "opensearch",
    "EventName": "GetPackageVersionHistory",
    "Description": "Returns a list of Amazon OpenSearch Service package versions, along with their creation time, commit message, and plugin properties (if the package is a zip plugin package)"
  },
  {
    "API": "opensearch:GetUpgradeHistory",
    "EventSource": "opensearch",
    "EventName": "GetUpgradeHistory",
    "Description": "Retrieves the complete history of the last 10 upgrades performed on an Amazon OpenSearch Service domain"
  },
  {
    "API": "opensearch:GetUpgradeStatus",
    "EventSource": "opensearch",
    "EventName": "GetUpgradeStatus",
    "Description": "Returns the most recent status of the last upgrade or upgrade eligibility check performed on an Amazon OpenSearch Service domain"
  },
  {
    "API": "opensearch:ListDataSources",
    "EventSource": "opensearch",
    "EventName": "ListDataSources",
    "Description": "Lists direct-query data sources for a specific domain"
  },
  {
    "API": "opensearch:ListDomainMaintenances",
    "EventSource": "opensearch",
    "EventName": "ListDomainMaintenances",
    "Description": "A list of maintenance actions for the domain"
  },
  {
    "API": "opensearch:ListDomainNames",
    "EventSource": "opensearch",
    "EventName": "ListDomainNames",
    "Description": "Returns the names of all Amazon OpenSearch Service domains owned by the current user in the active Region"
  },
  {
    "API": "opensearch:ListDomainsForPackage",
    "EventSource": "opensearch",
    "EventName": "ListDomainsForPackage",
    "Description": "Lists all Amazon OpenSearch Service domains associated with a given package"
  },
  {
    "API": "opensearch:ListInstanceTypeDetails",
    "EventSource": "opensearch",
    "EventName": "ListInstanceTypeDetails",
    "Description": "Lists all instance types and available features for a given OpenSearch or Elasticsearch version"
  },
  {
    "API": "opensearch:ListPackagesForDomain",
    "EventSource": "opensearch",
    "EventName": "ListPackagesForDomain",
    "Description": "Lists all packages associated with an Amazon OpenSearch Service domain"
  },
  {
    "API": "opensearch:ListScheduledActions",
    "EventSource": "opensearch",
    "EventName": "ListScheduledActions",
    "Description": "Retrieves a list of configuration changes that are scheduled for a domain"
  },
  {
    "API": "opensearch:ListTags",
    "EventSource": "opensearch",
    "EventName": "ListTags",
    "Description": "Returns all resource tags for an Amazon OpenSearch Service domain"
  },
  {
    "API": "opensearch:ListVersions",
    "EventSource": "opensearch",
    "EventName": "ListVersions",
    "Description": "Lists all versions of OpenSearch and Elasticsearch that Amazon OpenSearch Service supports"
  },
  {
    "API": "opensearch:ListVpcEndpointAccess",
    "EventSource": "opensearch",
    "EventName": "ListVpcEndpointAccess",
    "Description": "Retrieves information about each Amazon Web Services principal that is allowed to access a given Amazon OpenSearch Service domain through the use of an interface VPC endpoint"
  },
  {
    "API": "opensearch:ListVpcEndpoints",
    "EventSource": "opensearch",
    "EventName": "ListVpcEndpoints",
    "Description": "Retrieves all Amazon OpenSearch Service-managed VPC endpoints in the current Amazon Web Services account and Region"
  },
  {
    "API": "opensearch:ListVpcEndpointsForDomain",
    "EventSource": "opensearch",
    "EventName": "ListVpcEndpointsForDomain",
    "Description": "Retrieves all Amazon OpenSearch Service-managed VPC endpoints associated with a particular domain"
  },
  {
    "API": "opensearch:PurchaseReservedInstanceOffering",
    "EventSource": "opensearch",
    "EventName": "PurchaseReservedInstanceOffering",
    "Description": "Allows you to purchase Amazon OpenSearch Service Reserved Instances"
  },
  {
    "API": "opensearch:RejectInboundConnection",
    "EventSource": "opensearch",
    "EventName": "RejectInboundConnection",
    "Description": "Allows the remote Amazon OpenSearch Service domain owner to reject an inbound cross-cluster connection request"
  },
  {
    "API": "opensearch:RemoveTags",
    "EventSource": "opensearch",
    "EventName": "RemoveTags",
    "Description": "Removes the specified set of tags from an Amazon OpenSearch Service domain"
  },
  {
    "API": "opensearch:RevokeVpcEndpointAccess",
    "EventSource": "opensearch",
    "EventName": "RevokeVpcEndpointAccess",
    "Description": "Revokes access to an Amazon OpenSearch Service domain that was provided through an interface VPC endpoint"
  },
  {
    "API": "opensearch:StartDomainMaintenance",
    "EventSource": "opensearch",
    "EventName": "StartDomainMaintenance",
    "Description": "Starts the node maintenance process on the data node"
  },
  {
    "API": "opensearch:StartServiceSoftwareUpdate",
    "EventSource": "opensearch",
    "EventName": "StartServiceSoftwareUpdate",
    "Description": "Schedules a service software update for an Amazon OpenSearch Service domain"
  },
  {
    "API": "opensearch:UpdateDataSource",
    "EventSource": "opensearch",
    "EventName": "UpdateDataSource",
    "Description": "Updates a direct-query data source"
  },
  {
    "API": "opensearch:UpdateDomainConfig",
    "EventSource": "opensearch",
    "EventName": "UpdateDomainConfig",
    "Description": "Modifies the cluster configuration of the specified Amazon OpenSearch Service domain"
  },
  {
    "API": "opensearch:UpdatePackage",
    "EventSource": "opensearch",
    "EventName": "UpdatePackage",
    "Description": "Updates a package for use with Amazon OpenSearch Service domains"
  },
  {
    "API": "opensearch:UpdateScheduledAction",
    "EventSource": "opensearch",
    "EventName": "UpdateScheduledAction",
    "Description": "Reschedules a planned domain configuration change for a later time"
  },
  {
    "API": "opensearch:UpdateVpcEndpoint",
    "EventSource": "opensearch",
    "EventName": "UpdateVpcEndpoint",
    "Description": "Modifies an Amazon OpenSearch Service-managed interface VPC endpoint"
  },
  {
    "API": "opensearch:UpgradeDomain",
    "EventSource": "opensearch",
    "EventName": "UpgradeDomain",
    "Description": "Allows you to either upgrade your Amazon OpenSearch Service domain or perform an upgrade eligibility check to a compatible version of OpenSearch or Elasticsearch"
  },
  {
    "API": "opensearchserverless:BatchGetCollection",
    "EventSource": "opensearchserverless",
    "EventName": "BatchGetCollection",
    "Description": "Returns attributes for one or more collections, including the collection endpoint and the OpenSearch Dashboards endpoint"
  },
  {
    "API": "opensearchserverless:BatchGetEffectiveLifecyclePolicy",
    "EventSource": "opensearchserverless",
    "EventName": "BatchGetEffectiveLifecyclePolicy",
    "Description": "Returns a list of successful and failed retrievals for the OpenSearch Serverless indexes"
  },
  {
    "API": "opensearchserverless:BatchGetLifecyclePolicy",
    "EventSource": "opensearchserverless",
    "EventName": "BatchGetLifecyclePolicy",
    "Description": "Returns one or more configured OpenSearch Serverless lifecycle policies"
  },
  {
    "API": "opensearchserverless:BatchGetVpcEndpoint",
    "EventSource": "opensearchserverless",
    "EventName": "BatchGetVpcEndpoint",
    "Description": "Returns attributes for one or more VPC endpoints associated with the current account"
  },
  {
    "API": "opensearchserverless:CreateAccessPolicy",
    "EventSource": "opensearchserverless",
    "EventName": "CreateAccessPolicy",
    "Description": "Creates a data access policy for OpenSearch Serverless"
  },
  {
    "API": "opensearchserverless:CreateCollection",
    "EventSource": "opensearchserverless",
    "EventName": "CreateCollection",
    "Description": "Creates a new OpenSearch Serverless collection"
  },
  {
    "API": "opensearchserverless:CreateLifecyclePolicy",
    "EventSource": "opensearchserverless",
    "EventName": "CreateLifecyclePolicy",
    "Description": "Creates a lifecyle policy to be applied to OpenSearch Serverless indexes"
  },
  {
    "API": "opensearchserverless:CreateSecurityConfig",
    "EventSource": "opensearchserverless",
    "EventName": "CreateSecurityConfig",
    "Description": "Specifies a security configuration for OpenSearch Serverless"
  },
  {
    "API": "opensearchserverless:CreateSecurityPolicy",
    "EventSource": "opensearchserverless",
    "EventName": "CreateSecurityPolicy",
    "Description": "Creates a security policy to be used by one or more OpenSearch Serverless collections"
  },
  {
    "API": "opensearchserverless:CreateVpcEndpoint",
    "EventSource": "opensearchserverless",
    "EventName": "CreateVpcEndpoint",
    "Description": "Creates an OpenSearch Serverless-managed interface VPC endpoint"
  },
  {
    "API": "opensearchserverless:DeleteAccessPolicy",
    "EventSource": "opensearchserverless",
    "EventName": "DeleteAccessPolicy",
    "Description": "Deletes an OpenSearch Serverless access policy"
  },
  {
    "API": "opensearchserverless:DeleteCollection",
    "EventSource": "opensearchserverless",
    "EventName": "DeleteCollection",
    "Description": "Deletes an OpenSearch Serverless collection"
  },
  {
    "API": "opensearchserverless:DeleteLifecyclePolicy",
    "EventSource": "opensearchserverless",
    "EventName": "DeleteLifecyclePolicy",
    "Description": "Deletes an OpenSearch Serverless lifecycle policy"
  },
  {
    "API": "opensearchserverless:DeleteSecurityConfig",
    "EventSource": "opensearchserverless",
    "EventName": "DeleteSecurityConfig",
    "Description": "Deletes a security configuration for OpenSearch Serverless"
  },
  {
    "API": "opensearchserverless:DeleteSecurityPolicy",
    "EventSource": "opensearchserverless",
    "EventName": "DeleteSecurityPolicy",
    "Description": "Deletes an OpenSearch Serverless security policy"
  },
  {
    "API": "opensearchserverless:DeleteVpcEndpoint",
    "EventSource": "opensearchserverless",
    "EventName": "DeleteVpcEndpoint",
    "Description": "Deletes an OpenSearch Serverless-managed interface endpoint"
  },
  {
    "API": "opensearchserverless:GeneratePresignedUrl",
    "EventSource": "opensearchserverless",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "opensearchserverless:GetAccessPolicy",
    "EventSource": "opensearchserverless",
    "EventName": "GetAccessPolicy",
    "Description": "Returns an OpenSearch Serverless access policy"
  },
  {
    "API": "opensearchserverless:GetAccountSettings",
    "EventSource": "opensearchserverless",
    "EventName": "GetAccountSettings",
    "Description": "Returns account-level settings related to OpenSearch Serverless"
  },
  {
    "API": "opensearchserverless:GetPoliciesStats",
    "EventSource": "opensearchserverless",
    "EventName": "GetPoliciesStats",
    "Description": "Returns statistical information about your OpenSearch Serverless access policies, security configurations, and security policies"
  },
  {
    "API": "opensearchserverless:GetSecurityConfig",
    "EventSource": "opensearchserverless",
    "EventName": "GetSecurityConfig",
    "Description": "Returns information about an OpenSearch Serverless security configuration"
  },
  {
    "API": "opensearchserverless:GetSecurityPolicy",
    "EventSource": "opensearchserverless",
    "EventName": "GetSecurityPolicy",
    "Description": "Returns information about a configured OpenSearch Serverless security policy"
  },
  {
    "API": "opensearchserverless:ListAccessPolicies",
    "EventSource": "opensearchserverless",
    "EventName": "ListAccessPolicies",
    "Description": "Returns information about a list of OpenSearch Serverless access policies"
  },
  {
    "API": "opensearchserverless:ListCollections",
    "EventSource": "opensearchserverless",
    "EventName": "ListCollections",
    "Description": "Lists all OpenSearch Serverless collections"
  },
  {
    "API": "opensearchserverless:ListLifecyclePolicies",
    "EventSource": "opensearchserverless",
    "EventName": "ListLifecyclePolicies",
    "Description": "Returns a list of OpenSearch Serverless lifecycle policies"
  },
  {
    "API": "opensearchserverless:ListSecurityConfigs",
    "EventSource": "opensearchserverless",
    "EventName": "ListSecurityConfigs",
    "Description": "Returns information about configured OpenSearch Serverless security configurations"
  },
  {
    "API": "opensearchserverless:ListSecurityPolicies",
    "EventSource": "opensearchserverless",
    "EventName": "ListSecurityPolicies",
    "Description": "Returns information about configured OpenSearch Serverless security policies"
  },
  {
    "API": "opensearchserverless:ListTagsForResource",
    "EventSource": "opensearchserverless",
    "EventName": "ListTagsForResource",
    "Description": "Returns the tags for an OpenSearch Serverless resource"
  },
  {
    "API": "opensearchserverless:ListVpcEndpoints",
    "EventSource": "opensearchserverless",
    "EventName": "ListVpcEndpoints",
    "Description": "Returns the OpenSearch Serverless-managed interface VPC endpoints associated with the current account"
  },
  {
    "API": "opensearchserverless:TagResource",
    "EventSource": "opensearchserverless",
    "EventName": "TagResource",
    "Description": "Associates tags with an OpenSearch Serverless resource"
  },
  {
    "API": "opensearchserverless:UntagResource",
    "EventSource": "opensearchserverless",
    "EventName": "UntagResource",
    "Description": "Removes a tag or set of tags from an OpenSearch Serverless resource"
  },
  {
    "API": "opensearchserverless:UpdateAccessPolicy",
    "EventSource": "opensearchserverless",
    "EventName": "UpdateAccessPolicy",
    "Description": "Updates an OpenSearch Serverless access policy"
  },
  {
    "API": "opensearchserverless:UpdateAccountSettings",
    "EventSource": "opensearchserverless",
    "EventName": "UpdateAccountSettings",
    "Description": "Update the OpenSearch Serverless settings for the current Amazon Web Services account"
  },
  {
    "API": "opensearchserverless:UpdateCollection",
    "EventSource": "opensearchserverless",
    "EventName": "UpdateCollection",
    "Description": "Updates an OpenSearch Serverless collection"
  },
  {
    "API": "opensearchserverless:UpdateLifecyclePolicy",
    "EventSource": "opensearchserverless",
    "EventName": "UpdateLifecyclePolicy",
    "Description": "Updates an OpenSearch Serverless access policy"
  },
  {
    "API": "opensearchserverless:UpdateSecurityConfig",
    "EventSource": "opensearchserverless",
    "EventName": "UpdateSecurityConfig",
    "Description": "Updates a security configuration for OpenSearch Serverless"
  },
  {
    "API": "opensearchserverless:UpdateSecurityPolicy",
    "EventSource": "opensearchserverless",
    "EventName": "UpdateSecurityPolicy",
    "Description": "Updates an OpenSearch Serverless security policy"
  },
  {
    "API": "opensearchserverless:UpdateVpcEndpoint",
    "EventSource": "opensearchserverless",
    "EventName": "UpdateVpcEndpoint",
    "Description": "Updates an OpenSearch Serverless-managed interface endpoint"
  },
  {
    "API": "opsworks:AssignInstance",
    "EventSource": "opsworks",
    "EventName": "AssignInstance",
    "Description": "Assign a registered instance to a layer"
  },
  {
    "API": "opsworks:AssignVolume",
    "EventSource": "opsworks",
    "EventName": "AssignVolume",
    "Description": "Assigns one of the stack's registered Amazon EBS volumes to a specified instance"
  },
  {
    "API": "opsworks:AssociateElasticIp",
    "EventSource": "opsworks",
    "EventName": "AssociateElasticIp",
    "Description": "Associates one of the stack's registered Elastic IP addresses with a specified instance"
  },
  {
    "API": "opsworks:AttachElasticLoadBalancer",
    "EventSource": "opsworks",
    "EventName": "AttachElasticLoadBalancer",
    "Description": "Attaches an Elastic Load Balancing load balancer to a specified layer"
  },
  {
    "API": "opsworks:CloneStack",
    "EventSource": "opsworks",
    "EventName": "CloneStack",
    "Description": "Creates a clone of a specified stack"
  },
  {
    "API": "opsworks:CreateApp",
    "EventSource": "opsworks",
    "EventName": "CreateApp",
    "Description": "Creates an app for a specified stack"
  },
  {
    "API": "opsworks:CreateDeployment",
    "EventSource": "opsworks",
    "EventName": "CreateDeployment",
    "Description": "Runs deployment or stack commands"
  },
  {
    "API": "opsworks:CreateInstance",
    "EventSource": "opsworks",
    "EventName": "CreateInstance",
    "Description": "Creates an instance in a specified stack"
  },
  {
    "API": "opsworks:CreateLayer",
    "EventSource": "opsworks",
    "EventName": "CreateLayer",
    "Description": "Creates a layer"
  },
  {
    "API": "opsworks:CreateStack",
    "EventSource": "opsworks",
    "EventName": "CreateStack",
    "Description": "Creates a new stack"
  },
  {
    "API": "opsworks:CreateUserProfile",
    "EventSource": "opsworks",
    "EventName": "CreateUserProfile",
    "Description": "Creates a new user profile"
  },
  {
    "API": "opsworks:DeleteApp",
    "EventSource": "opsworks",
    "EventName": "DeleteApp",
    "Description": "Deletes a specified app"
  },
  {
    "API": "opsworks:DeleteInstance",
    "EventSource": "opsworks",
    "EventName": "DeleteInstance",
    "Description": "Deletes a specified instance, which terminates the associated Amazon EC2 instance"
  },
  {
    "API": "opsworks:DeleteLayer",
    "EventSource": "opsworks",
    "EventName": "DeleteLayer",
    "Description": "Deletes a specified layer"
  },
  {
    "API": "opsworks:DeleteStack",
    "EventSource": "opsworks",
    "EventName": "DeleteStack",
    "Description": "Deletes a specified stack"
  },
  {
    "API": "opsworks:DeleteUserProfile",
    "EventSource": "opsworks",
    "EventName": "DeleteUserProfile",
    "Description": "Deletes a user profile"
  },
  {
    "API": "opsworks:DeregisterEcsCluster",
    "EventSource": "opsworks",
    "EventName": "DeregisterEcsCluster",
    "Description": "Deregisters a specified Amazon ECS cluster from a stack"
  },
  {
    "API": "opsworks:DeregisterElasticIp",
    "EventSource": "opsworks",
    "EventName": "DeregisterElasticIp",
    "Description": "Deregisters a specified Elastic IP address"
  },
  {
    "API": "opsworks:DeregisterInstance",
    "EventSource": "opsworks",
    "EventName": "DeregisterInstance",
    "Description": "Deregister an instance from OpsWorks Stacks"
  },
  {
    "API": "opsworks:DeregisterRdsDbInstance",
    "EventSource": "opsworks",
    "EventName": "DeregisterRdsDbInstance",
    "Description": "Deregisters an Amazon RDS instance"
  },
  {
    "API": "opsworks:DeregisterVolume",
    "EventSource": "opsworks",
    "EventName": "DeregisterVolume",
    "Description": "Deregisters an Amazon EBS volume"
  },
  {
    "API": "opsworks:DescribeAgentVersions",
    "EventSource": "opsworks",
    "EventName": "DescribeAgentVersions",
    "Description": "Describes the available OpsWorks Stacks agent versions"
  },
  {
    "API": "opsworks:DescribeApps",
    "EventSource": "opsworks",
    "EventName": "DescribeApps",
    "Description": "Requests a description of a specified set of apps"
  },
  {
    "API": "opsworks:DescribeCommands",
    "EventSource": "opsworks",
    "EventName": "DescribeCommands",
    "Description": "Describes the results of specified commands"
  },
  {
    "API": "opsworks:DescribeDeployments",
    "EventSource": "opsworks",
    "EventName": "DescribeDeployments",
    "Description": "Requests a description of a specified set of deployments"
  },
  {
    "API": "opsworks:DescribeEcsClusters",
    "EventSource": "opsworks",
    "EventName": "DescribeEcsClusters",
    "Description": "Describes Amazon ECS clusters that are registered with a stack"
  },
  {
    "API": "opsworks:DescribeElasticIps",
    "EventSource": "opsworks",
    "EventName": "DescribeElasticIps",
    "Description": "Describes `Elastic IP addresses <https://docs"
  },
  {
    "API": "opsworks:DescribeElasticLoadBalancers",
    "EventSource": "opsworks",
    "EventName": "DescribeElasticLoadBalancers",
    "Description": "Describes a stack's Elastic Load Balancing instances"
  },
  {
    "API": "opsworks:DescribeInstances",
    "EventSource": "opsworks",
    "EventName": "DescribeInstances",
    "Description": "Requests a description of a set of instances"
  },
  {
    "API": "opsworks:DescribeLayers",
    "EventSource": "opsworks",
    "EventName": "DescribeLayers",
    "Description": "Requests a description of one or more layers in a specified stack"
  },
  {
    "API": "opsworks:DescribeLoadBasedAutoScaling",
    "EventSource": "opsworks",
    "EventName": "DescribeLoadBasedAutoScaling",
    "Description": "Describes load-based auto scaling configurations for specified layers"
  },
  {
    "API": "opsworks:DescribeMyUserProfile",
    "EventSource": "opsworks",
    "EventName": "DescribeMyUserProfile",
    "Description": "Describes a user's SSH information"
  },
  {
    "API": "opsworks:DescribeOperatingSystems",
    "EventSource": "opsworks",
    "EventName": "DescribeOperatingSystems",
    "Description": "Describes the operating systems that are supported by OpsWorks Stacks"
  },
  {
    "API": "opsworks:DescribePermissions",
    "EventSource": "opsworks",
    "EventName": "DescribePermissions",
    "Description": "Describes the permissions for a specified stack"
  },
  {
    "API": "opsworks:DescribeRaidArrays",
    "EventSource": "opsworks",
    "EventName": "DescribeRaidArrays",
    "Description": "Describe an instance's RAID arrays"
  },
  {
    "API": "opsworks:DescribeRdsDbInstances",
    "EventSource": "opsworks",
    "EventName": "DescribeRdsDbInstances",
    "Description": "Describes Amazon RDS instances"
  },
  {
    "API": "opsworks:DescribeServiceErrors",
    "EventSource": "opsworks",
    "EventName": "DescribeServiceErrors",
    "Description": "Describes OpsWorks Stacks service errors"
  },
  {
    "API": "opsworks:DescribeStackProvisioningParameters",
    "EventSource": "opsworks",
    "EventName": "DescribeStackProvisioningParameters",
    "Description": "Requests a description of a stack's provisioning parameters"
  },
  {
    "API": "opsworks:DescribeStackSummary",
    "EventSource": "opsworks",
    "EventName": "DescribeStackSummary",
    "Description": "Describes the number of layers and apps in a specified stack, and the number of instances in each state, such as ``running_setup`` or ``online``"
  },
  {
    "API": "opsworks:DescribeStacks",
    "EventSource": "opsworks",
    "EventName": "DescribeStacks",
    "Description": "Requests a description of one or more stacks"
  },
  {
    "API": "opsworks:DescribeTimeBasedAutoScaling",
    "EventSource": "opsworks",
    "EventName": "DescribeTimeBasedAutoScaling",
    "Description": "Describes time-based auto scaling configurations for specified instances"
  },
  {
    "API": "opsworks:DescribeUserProfiles",
    "EventSource": "opsworks",
    "EventName": "DescribeUserProfiles",
    "Description": "Describe specified users"
  },
  {
    "API": "opsworks:DescribeVolumes",
    "EventSource": "opsworks",
    "EventName": "DescribeVolumes",
    "Description": "Describes an instance's Amazon EBS volumes"
  },
  {
    "API": "opsworks:DetachElasticLoadBalancer",
    "EventSource": "opsworks",
    "EventName": "DetachElasticLoadBalancer",
    "Description": "Detaches a specified Elastic Load Balancing instance from its layer"
  },
  {
    "API": "opsworks:DisassociateElasticIp",
    "EventSource": "opsworks",
    "EventName": "DisassociateElasticIp",
    "Description": "Disassociates an Elastic IP address from its instance"
  },
  {
    "API": "opsworks:GeneratePresignedUrl",
    "EventSource": "opsworks",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "opsworks:GetHostnameSuggestion",
    "EventSource": "opsworks",
    "EventName": "GetHostnameSuggestion",
    "Description": "Gets a generated host name for the specified layer, based on the current host name theme"
  },
  {
    "API": "opsworks:GrantAccess",
    "EventSource": "opsworks",
    "EventName": "GrantAccess",
    "Description": ""
  },
  {
    "API": "opsworks:ListTags",
    "EventSource": "opsworks",
    "EventName": "ListTags",
    "Description": "Returns a list of tags that are applied to the specified stack or layer"
  },
  {
    "API": "opsworks:RebootInstance",
    "EventSource": "opsworks",
    "EventName": "RebootInstance",
    "Description": "Reboots a specified instance"
  },
  {
    "API": "opsworks:RegisterEcsCluster",
    "EventSource": "opsworks",
    "EventName": "RegisterEcsCluster",
    "Description": "Registers a specified Amazon ECS cluster with a stack"
  },
  {
    "API": "opsworks:RegisterElasticIp",
    "EventSource": "opsworks",
    "EventName": "RegisterElasticIp",
    "Description": "Registers an Elastic IP address with a specified stack"
  },
  {
    "API": "opsworks:RegisterInstance",
    "EventSource": "opsworks",
    "EventName": "RegisterInstance",
    "Description": "Registers instances that were created outside of OpsWorks Stacks with a specified stack"
  },
  {
    "API": "opsworks:RegisterRdsDbInstance",
    "EventSource": "opsworks",
    "EventName": "RegisterRdsDbInstance",
    "Description": "Registers an Amazon RDS instance with a stack"
  },
  {
    "API": "opsworks:RegisterVolume",
    "EventSource": "opsworks",
    "EventName": "RegisterVolume",
    "Description": "Registers an Amazon EBS volume with a specified stack"
  },
  {
    "API": "opsworks:SetLoadBasedAutoScaling",
    "EventSource": "opsworks",
    "EventName": "SetLoadBasedAutoScaling",
    "Description": "Specify the load-based auto scaling configuration for a specified layer"
  },
  {
    "API": "opsworks:SetPermission",
    "EventSource": "opsworks",
    "EventName": "SetPermission",
    "Description": "Specifies a user's permissions"
  },
  {
    "API": "opsworks:SetTimeBasedAutoScaling",
    "EventSource": "opsworks",
    "EventName": "SetTimeBasedAutoScaling",
    "Description": "Specify the time-based auto scaling configuration for a specified instance"
  },
  {
    "API": "opsworks:StartInstance",
    "EventSource": "opsworks",
    "EventName": "StartInstance",
    "Description": "Starts a specified instance"
  },
  {
    "API": "opsworks:StartStack",
    "EventSource": "opsworks",
    "EventName": "StartStack",
    "Description": "Starts a stack's instances"
  },
  {
    "API": "opsworks:StopInstance",
    "EventSource": "opsworks",
    "EventName": "StopInstance",
    "Description": "Stops a specified instance"
  },
  {
    "API": "opsworks:StopStack",
    "EventSource": "opsworks",
    "EventName": "StopStack",
    "Description": "Stops a specified stack"
  },
  {
    "API": "opsworks:TagResource",
    "EventSource": "opsworks",
    "EventName": "TagResource",
    "Description": "Apply cost-allocation tags to a specified stack or layer in OpsWorks Stacks"
  },
  {
    "API": "opsworks:UnassignInstance",
    "EventSource": "opsworks",
    "EventName": "UnassignInstance",
    "Description": "Unassigns a registered instance from all layers that are using the instance"
  },
  {
    "API": "opsworks:UnassignVolume",
    "EventSource": "opsworks",
    "EventName": "UnassignVolume",
    "Description": "Unassigns an assigned Amazon EBS volume"
  },
  {
    "API": "opsworks:UntagResource",
    "EventSource": "opsworks",
    "EventName": "UntagResource",
    "Description": "Removes tags from a specified stack or layer"
  },
  {
    "API": "opsworks:UpdateApp",
    "EventSource": "opsworks",
    "EventName": "UpdateApp",
    "Description": "Updates a specified app"
  },
  {
    "API": "opsworks:UpdateElasticIp",
    "EventSource": "opsworks",
    "EventName": "UpdateElasticIp",
    "Description": "Updates a registered Elastic IP address's name"
  },
  {
    "API": "opsworks:UpdateInstance",
    "EventSource": "opsworks",
    "EventName": "UpdateInstance",
    "Description": "Updates a specified instance"
  },
  {
    "API": "opsworks:UpdateLayer",
    "EventSource": "opsworks",
    "EventName": "UpdateLayer",
    "Description": "Updates a specified layer"
  },
  {
    "API": "opsworks:UpdateMyUserProfile",
    "EventSource": "opsworks",
    "EventName": "UpdateMyUserProfile",
    "Description": "Updates a user's SSH public key"
  },
  {
    "API": "opsworks:UpdateRdsDbInstance",
    "EventSource": "opsworks",
    "EventName": "UpdateRdsDbInstance",
    "Description": "Updates an Amazon RDS instance"
  },
  {
    "API": "opsworks:UpdateStack",
    "EventSource": "opsworks",
    "EventName": "UpdateStack",
    "Description": "Updates a specified stack"
  },
  {
    "API": "opsworks:UpdateUserProfile",
    "EventSource": "opsworks",
    "EventName": "UpdateUserProfile",
    "Description": "Updates a specified user profile"
  },
  {
    "API": "opsworks:UpdateVolume",
    "EventSource": "opsworks",
    "EventName": "UpdateVolume",
    "Description": "Updates an Amazon EBS volume's name or mount point"
  },
  {
    "API": "opsworkscm:AssociateNode",
    "EventSource": "opsworkscm",
    "EventName": "AssociateNode",
    "Description": "Associates a new node with the server"
  },
  {
    "API": "opsworkscm:CreateBackup",
    "EventSource": "opsworkscm",
    "EventName": "CreateBackup",
    "Description": "Creates an application-level backup of a server"
  },
  {
    "API": "opsworkscm:CreateServer",
    "EventSource": "opsworkscm",
    "EventName": "CreateServer",
    "Description": "Creates and immedately starts a new server"
  },
  {
    "API": "opsworkscm:DeleteBackup",
    "EventSource": "opsworkscm",
    "EventName": "DeleteBackup",
    "Description": "Deletes a backup"
  },
  {
    "API": "opsworkscm:DeleteServer",
    "EventSource": "opsworkscm",
    "EventName": "DeleteServer",
    "Description": "Deletes the server and the underlying AWS CloudFormation stacks (including the server's EC2 instance)"
  },
  {
    "API": "opsworkscm:DescribeAccountAttributes",
    "EventSource": "opsworkscm",
    "EventName": "DescribeAccountAttributes",
    "Description": "Describes your OpsWorks-CM account attributes"
  },
  {
    "API": "opsworkscm:DescribeBackups",
    "EventSource": "opsworkscm",
    "EventName": "DescribeBackups",
    "Description": "Describes backups"
  },
  {
    "API": "opsworkscm:DescribeEvents",
    "EventSource": "opsworkscm",
    "EventName": "DescribeEvents",
    "Description": "Describes events for a specified server"
  },
  {
    "API": "opsworkscm:DescribeNodeAssociationStatus",
    "EventSource": "opsworkscm",
    "EventName": "DescribeNodeAssociationStatus",
    "Description": "Returns the current status of an existing association or disassociation request"
  },
  {
    "API": "opsworkscm:DescribeServers",
    "EventSource": "opsworkscm",
    "EventName": "DescribeServers",
    "Description": "Lists all configuration management servers that are identified with your account"
  },
  {
    "API": "opsworkscm:DisassociateNode",
    "EventSource": "opsworkscm",
    "EventName": "DisassociateNode",
    "Description": "Disassociates a node from an AWS OpsWorks CM server, and removes the node from the server's managed nodes"
  },
  {
    "API": "opsworkscm:ExportServerEngineAttribute",
    "EventSource": "opsworkscm",
    "EventName": "ExportServerEngineAttribute",
    "Description": "Exports a specified server engine attribute as a base64-encoded string"
  },
  {
    "API": "opsworkscm:GeneratePresignedUrl",
    "EventSource": "opsworkscm",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "opsworkscm:ListTagsForResource",
    "EventSource": "opsworkscm",
    "EventName": "ListTagsForResource",
    "Description": "Returns a list of tags that are applied to the specified AWS OpsWorks for Chef Automate or AWS OpsWorks for Puppet Enterprise servers or backups"
  },
  {
    "API": "opsworkscm:RestoreServer",
    "EventSource": "opsworkscm",
    "EventName": "RestoreServer",
    "Description": "Restores a backup to a server that is in a ``CONNECTION_LOST``, ``HEALTHY``, ``RUNNING``, ``UNHEALTHY``, or ``TERMINATED`` state"
  },
  {
    "API": "opsworkscm:StartMaintenance",
    "EventSource": "opsworkscm",
    "EventName": "StartMaintenance",
    "Description": "Manually starts server maintenance"
  },
  {
    "API": "opsworkscm:TagResource",
    "EventSource": "opsworkscm",
    "EventName": "TagResource",
    "Description": "Applies tags to an AWS OpsWorks for Chef Automate or AWS OpsWorks for Puppet Enterprise server, or to server backups"
  },
  {
    "API": "opsworkscm:UntagResource",
    "EventSource": "opsworkscm",
    "EventName": "UntagResource",
    "Description": "Removes specified tags from an AWS OpsWorks-CM server or backup"
  },
  {
    "API": "opsworkscm:UpdateServer",
    "EventSource": "opsworkscm",
    "EventName": "UpdateServer",
    "Description": "Updates settings for a server"
  },
  {
    "API": "opsworkscm:UpdateServerEngineAttributes",
    "EventSource": "opsworkscm",
    "EventName": "UpdateServerEngineAttributes",
    "Description": "Updates engine-specific attributes on a specified server"
  },
  {
    "API": "organizations:AcceptHandshake",
    "EventSource": "organizations",
    "EventName": "AcceptHandshake",
    "Description": "Sends a response to the originator of a handshake agreeing to the action proposed by the handshake request"
  },
  {
    "API": "organizations:AttachPolicy",
    "EventSource": "organizations",
    "EventName": "AttachPolicy",
    "Description": "Attaches a policy to a root, an organizational unit (OU), or an individual account"
  },
  {
    "API": "organizations:CancelHandshake",
    "EventSource": "organizations",
    "EventName": "CancelHandshake",
    "Description": "Cancels a handshake"
  },
  {
    "API": "organizations:CloseAccount",
    "EventSource": "organizations",
    "EventName": "CloseAccount",
    "Description": "Closes an Amazon Web Services member account within an organization"
  },
  {
    "API": "organizations:CreateAccount",
    "EventSource": "organizations",
    "EventName": "CreateAccount",
    "Description": "Creates an Amazon Web Services account that is automatically a member of the organization whose credentials made the request"
  },
  {
    "API": "organizations:CreateGovCloudAccount",
    "EventSource": "organizations",
    "EventName": "CreateGovCloudAccount",
    "Description": "This action is available if all of the following are true:"
  },
  {
    "API": "organizations:CreateOrganization",
    "EventSource": "organizations",
    "EventName": "CreateOrganization",
    "Description": "Creates an Amazon Web Services organization"
  },
  {
    "API": "organizations:CreateOrganizationalUnit",
    "EventSource": "organizations",
    "EventName": "CreateOrganizationalUnit",
    "Description": "Creates an organizational unit (OU) within a root or parent OU"
  },
  {
    "API": "organizations:CreatePolicy",
    "EventSource": "organizations",
    "EventName": "CreatePolicy",
    "Description": "Creates a policy of a specified type that you can attach to a root, an organizational unit (OU), or an individual Amazon Web Services account"
  },
  {
    "API": "organizations:DeclineHandshake",
    "EventSource": "organizations",
    "EventName": "DeclineHandshake",
    "Description": "Declines a handshake request"
  },
  {
    "API": "organizations:DeleteOrganization",
    "EventSource": "organizations",
    "EventName": "DeleteOrganization",
    "Description": "Deletes the organization"
  },
  {
    "API": "organizations:DeleteOrganizationalUnit",
    "EventSource": "organizations",
    "EventName": "DeleteOrganizationalUnit",
    "Description": "Deletes an organizational unit (OU) from a root or another OU"
  },
  {
    "API": "organizations:DeletePolicy",
    "EventSource": "organizations",
    "EventName": "DeletePolicy",
    "Description": "Deletes the specified policy from your organization"
  },
  {
    "API": "organizations:DeleteResourcePolicy",
    "EventSource": "organizations",
    "EventName": "DeleteResourcePolicy",
    "Description": "Deletes the resource policy from your organization"
  },
  {
    "API": "organizations:DeregisterDelegatedAdministrator",
    "EventSource": "organizations",
    "EventName": "DeregisterDelegatedAdministrator",
    "Description": "Removes the specified member Amazon Web Services account as a delegated administrator for the specified Amazon Web Services service"
  },
  {
    "API": "organizations:DescribeAccount",
    "EventSource": "organizations",
    "EventName": "DescribeAccount",
    "Description": "Retrieves Organizations-related information about the specified account"
  },
  {
    "API": "organizations:DescribeCreateAccountStatus",
    "EventSource": "organizations",
    "EventName": "DescribeCreateAccountStatus",
    "Description": "Retrieves the current status of an asynchronous request to create an account"
  },
  {
    "API": "organizations:DescribeEffectivePolicy",
    "EventSource": "organizations",
    "EventName": "DescribeEffectivePolicy",
    "Description": "Returns the contents of the effective policy for specified policy type and account"
  },
  {
    "API": "organizations:DescribeHandshake",
    "EventSource": "organizations",
    "EventName": "DescribeHandshake",
    "Description": "Retrieves information about a previously requested handshake"
  },
  {
    "API": "organizations:DescribeOrganization",
    "EventSource": "organizations",
    "EventName": "DescribeOrganization",
    "Description": "Retrieves information about the organization that the user's account belongs to"
  },
  {
    "API": "organizations:DescribeOrganizationalUnit",
    "EventSource": "organizations",
    "EventName": "DescribeOrganizationalUnit",
    "Description": "Retrieves information about an organizational unit (OU)"
  },
  {
    "API": "organizations:DescribePolicy",
    "EventSource": "organizations",
    "EventName": "DescribePolicy",
    "Description": "Retrieves information about a policy"
  },
  {
    "API": "organizations:DescribeResourcePolicy",
    "EventSource": "organizations",
    "EventName": "DescribeResourcePolicy",
    "Description": "Retrieves information about a resource policy"
  },
  {
    "API": "organizations:DetachPolicy",
    "EventSource": "organizations",
    "EventName": "DetachPolicy",
    "Description": "Detaches a policy from a target root, organizational unit (OU), or account"
  },
  {
    "API": "organizations:DisableAwsServiceAccess",
    "EventSource": "organizations",
    "EventName": "DisableAwsServiceAccess",
    "Description": "Disables the integration of an Amazon Web Services service (the service that is specified by ``ServicePrincipal``) with Organizations"
  },
  {
    "API": "organizations:DisablePolicyType",
    "EventSource": "organizations",
    "EventName": "DisablePolicyType",
    "Description": "Disables an organizational policy type in a root"
  },
  {
    "API": "organizations:EnableAllFeatures",
    "EventSource": "organizations",
    "EventName": "EnableAllFeatures",
    "Description": "Enables all features in an organization"
  },
  {
    "API": "organizations:EnableAwsServiceAccess",
    "EventSource": "organizations",
    "EventName": "EnableAwsServiceAccess",
    "Description": "Enables the integration of an Amazon Web Services service (the service that is specified by ``ServicePrincipal``) with Organizations"
  },
  {
    "API": "organizations:EnablePolicyType",
    "EventSource": "organizations",
    "EventName": "EnablePolicyType",
    "Description": "Enables a policy type in a root"
  },
  {
    "API": "organizations:GeneratePresignedUrl",
    "EventSource": "organizations",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "organizations:InviteAccountToOrganization",
    "EventSource": "organizations",
    "EventName": "InviteAccountToOrganization",
    "Description": "Sends an invitation to another account to join your organization as a member account"
  },
  {
    "API": "organizations:LeaveOrganization",
    "EventSource": "organizations",
    "EventName": "LeaveOrganization",
    "Description": "Removes a member account from its parent organization"
  },
  {
    "API": "organizations:ListAccounts",
    "EventSource": "organizations",
    "EventName": "ListAccounts",
    "Description": "Lists all the accounts in the organization"
  },
  {
    "API": "organizations:ListAccountsForParent",
    "EventSource": "organizations",
    "EventName": "ListAccountsForParent",
    "Description": "Lists the accounts in an organization that are contained by the specified target root or organizational unit (OU)"
  },
  {
    "API": "organizations:ListAwsServiceAccessForOrganization",
    "EventSource": "organizations",
    "EventName": "ListAwsServiceAccessForOrganization",
    "Description": "Returns a list of the Amazon Web Services services that you enabled to integrate with your organization"
  },
  {
    "API": "organizations:ListChildren",
    "EventSource": "organizations",
    "EventName": "ListChildren",
    "Description": "Lists all of the organizational units (OUs) or accounts that are contained in the specified parent OU or root"
  },
  {
    "API": "organizations:ListCreateAccountStatus",
    "EventSource": "organizations",
    "EventName": "ListCreateAccountStatus",
    "Description": "Lists the account creation requests that match the specified status that is currently being tracked for the organization"
  },
  {
    "API": "organizations:ListDelegatedAdministrators",
    "EventSource": "organizations",
    "EventName": "ListDelegatedAdministrators",
    "Description": "Lists the Amazon Web Services accounts that are designated as delegated administrators in this organization"
  },
  {
    "API": "organizations:ListDelegatedServicesForAccount",
    "EventSource": "organizations",
    "EventName": "ListDelegatedServicesForAccount",
    "Description": "List the Amazon Web Services services for which the specified account is a delegated administrator"
  },
  {
    "API": "organizations:ListHandshakesForAccount",
    "EventSource": "organizations",
    "EventName": "ListHandshakesForAccount",
    "Description": "Lists the current handshakes that are associated with the account of the requesting user"
  },
  {
    "API": "organizations:ListHandshakesForOrganization",
    "EventSource": "organizations",
    "EventName": "ListHandshakesForOrganization",
    "Description": "Lists the handshakes that are associated with the organization that the requesting user is part of"
  },
  {
    "API": "organizations:ListOrganizationalUnitsForParent",
    "EventSource": "organizations",
    "EventName": "ListOrganizationalUnitsForParent",
    "Description": "Lists the organizational units (OUs) in a parent organizational unit or root"
  },
  {
    "API": "organizations:ListParents",
    "EventSource": "organizations",
    "EventName": "ListParents",
    "Description": "Lists the root or organizational units (OUs) that serve as the immediate parent of the specified child OU or account"
  },
  {
    "API": "organizations:ListPolicies",
    "EventSource": "organizations",
    "EventName": "ListPolicies",
    "Description": "Retrieves the list of all policies in an organization of a specified type"
  },
  {
    "API": "organizations:ListPoliciesForTarget",
    "EventSource": "organizations",
    "EventName": "ListPoliciesForTarget",
    "Description": "Lists the policies that are directly attached to the specified target root, organizational unit (OU), or account"
  },
  {
    "API": "organizations:ListRoots",
    "EventSource": "organizations",
    "EventName": "ListRoots",
    "Description": "Lists the roots that are defined in the current organization"
  },
  {
    "API": "organizations:ListTagsForResource",
    "EventSource": "organizations",
    "EventName": "ListTagsForResource",
    "Description": "Lists tags that are attached to the specified resource"
  },
  {
    "API": "organizations:ListTargetsForPolicy",
    "EventSource": "organizations",
    "EventName": "ListTargetsForPolicy",
    "Description": "Lists all the roots, organizational units (OUs), and accounts that the specified policy is attached to"
  },
  {
    "API": "organizations:MoveAccount",
    "EventSource": "organizations",
    "EventName": "MoveAccount",
    "Description": "Moves an account from its current source parent root or organizational unit (OU) to the specified destination parent root or OU"
  },
  {
    "API": "organizations:PutResourcePolicy",
    "EventSource": "organizations",
    "EventName": "PutResourcePolicy",
    "Description": "Creates or updates a resource policy"
  },
  {
    "API": "organizations:RegisterDelegatedAdministrator",
    "EventSource": "organizations",
    "EventName": "RegisterDelegatedAdministrator",
    "Description": "Enables the specified member account to administer the Organizations features of the specified Amazon Web Services service"
  },
  {
    "API": "organizations:RemoveAccountFromOrganization",
    "EventSource": "organizations",
    "EventName": "RemoveAccountFromOrganization",
    "Description": "Removes the specified account from the organization"
  },
  {
    "API": "organizations:TagResource",
    "EventSource": "organizations",
    "EventName": "TagResource",
    "Description": "Adds one or more tags to the specified resource"
  },
  {
    "API": "organizations:UntagResource",
    "EventSource": "organizations",
    "EventName": "UntagResource",
    "Description": "Removes any tags with the specified keys from the specified resource"
  },
  {
    "API": "organizations:UpdateOrganizationalUnit",
    "EventSource": "organizations",
    "EventName": "UpdateOrganizationalUnit",
    "Description": "Renames the specified organizational unit (OU)"
  },
  {
    "API": "organizations:UpdatePolicy",
    "EventSource": "organizations",
    "EventName": "UpdatePolicy",
    "Description": "Updates an existing policy with a new name, description, or content"
  },
  {
    "API": "osis:CreatePipeline",
    "EventSource": "osis",
    "EventName": "CreatePipeline",
    "Description": "Creates an OpenSearch Ingestion pipeline"
  },
  {
    "API": "osis:DeletePipeline",
    "EventSource": "osis",
    "EventName": "DeletePipeline",
    "Description": "Deletes an OpenSearch Ingestion pipeline"
  },
  {
    "API": "osis:GeneratePresignedUrl",
    "EventSource": "osis",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "osis:GetPipeline",
    "EventSource": "osis",
    "EventName": "GetPipeline",
    "Description": "Retrieves information about an OpenSearch Ingestion pipeline"
  },
  {
    "API": "osis:GetPipelineBlueprint",
    "EventSource": "osis",
    "EventName": "GetPipelineBlueprint",
    "Description": "Retrieves information about a specific blueprint for OpenSearch Ingestion"
  },
  {
    "API": "osis:GetPipelineChangeProgress",
    "EventSource": "osis",
    "EventName": "GetPipelineChangeProgress",
    "Description": "Returns progress information for the current change happening on an OpenSearch Ingestion pipeline"
  },
  {
    "API": "osis:ListPipelineBlueprints",
    "EventSource": "osis",
    "EventName": "ListPipelineBlueprints",
    "Description": "Retrieves a list of all available blueprints for Data Prepper"
  },
  {
    "API": "osis:ListPipelines",
    "EventSource": "osis",
    "EventName": "ListPipelines",
    "Description": "Lists all OpenSearch Ingestion pipelines in the current Amazon Web Services account and Region"
  },
  {
    "API": "osis:ListTagsForResource",
    "EventSource": "osis",
    "EventName": "ListTagsForResource",
    "Description": "Lists all resource tags associated with an OpenSearch Ingestion pipeline"
  },
  {
    "API": "osis:StartPipeline",
    "EventSource": "osis",
    "EventName": "StartPipeline",
    "Description": "Starts an OpenSearch Ingestion pipeline"
  },
  {
    "API": "osis:StopPipeline",
    "EventSource": "osis",
    "EventName": "StopPipeline",
    "Description": "Stops an OpenSearch Ingestion pipeline"
  },
  {
    "API": "osis:TagResource",
    "EventSource": "osis",
    "EventName": "TagResource",
    "Description": "Tags an OpenSearch Ingestion pipeline"
  },
  {
    "API": "osis:UntagResource",
    "EventSource": "osis",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags from an OpenSearch Ingestion pipeline"
  },
  {
    "API": "osis:UpdatePipeline",
    "EventSource": "osis",
    "EventName": "UpdatePipeline",
    "Description": "Updates an OpenSearch Ingestion pipeline"
  },
  {
    "API": "osis:ValidatePipeline",
    "EventSource": "osis",
    "EventName": "ValidatePipeline",
    "Description": "Checks whether an OpenSearch Ingestion pipeline configuration is valid prior to creation"
  },
  {
    "API": "outposts:CancelCapacityTask",
    "EventSource": "outposts",
    "EventName": "CancelCapacityTask",
    "Description": "Cancels the capacity task"
  },
  {
    "API": "outposts:CancelOrder",
    "EventSource": "outposts",
    "EventName": "CancelOrder",
    "Description": "Cancels the specified order for an Outpost"
  },
  {
    "API": "outposts:CreateOrder",
    "EventSource": "outposts",
    "EventName": "CreateOrder",
    "Description": "Creates an order for an Outpost"
  },
  {
    "API": "outposts:CreateOutpost",
    "EventSource": "outposts",
    "EventName": "CreateOutpost",
    "Description": "Creates an Outpost"
  },
  {
    "API": "outposts:CreateSite",
    "EventSource": "outposts",
    "EventName": "CreateSite",
    "Description": "Creates a site for an Outpost"
  },
  {
    "API": "outposts:DeleteOutpost",
    "EventSource": "outposts",
    "EventName": "DeleteOutpost",
    "Description": "Deletes the specified Outpost"
  },
  {
    "API": "outposts:DeleteSite",
    "EventSource": "outposts",
    "EventName": "DeleteSite",
    "Description": "Deletes the specified site"
  },
  {
    "API": "outposts:GeneratePresignedUrl",
    "EventSource": "outposts",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "outposts:GetCapacityTask",
    "EventSource": "outposts",
    "EventName": "GetCapacityTask",
    "Description": "Gets details of the specified capacity task"
  },
  {
    "API": "outposts:GetCatalogItem",
    "EventSource": "outposts",
    "EventName": "GetCatalogItem",
    "Description": "Gets information about the specified catalog item"
  },
  {
    "API": "outposts:GetConnection",
    "EventSource": "outposts",
    "EventName": "GetConnection",
    "Description": ""
  },
  {
    "API": "outposts:GetOrder",
    "EventSource": "outposts",
    "EventName": "GetOrder",
    "Description": "Gets information about the specified order"
  },
  {
    "API": "outposts:GetOutpost",
    "EventSource": "outposts",
    "EventName": "GetOutpost",
    "Description": "Gets information about the specified Outpost"
  },
  {
    "API": "outposts:GetOutpostInstanceTypes",
    "EventSource": "outposts",
    "EventName": "GetOutpostInstanceTypes",
    "Description": "Gets the instance types for the specified Outpost"
  },
  {
    "API": "outposts:GetOutpostSupportedInstanceTypes",
    "EventSource": "outposts",
    "EventName": "GetOutpostSupportedInstanceTypes",
    "Description": "Gets the instance types that an Outpost can support in ``InstanceTypeCapacity``"
  },
  {
    "API": "outposts:GetSite",
    "EventSource": "outposts",
    "EventName": "GetSite",
    "Description": "Gets information about the specified Outpost site"
  },
  {
    "API": "outposts:GetSiteAddress",
    "EventSource": "outposts",
    "EventName": "GetSiteAddress",
    "Description": "Gets the site address of the specified site"
  },
  {
    "API": "outposts:ListAssets",
    "EventSource": "outposts",
    "EventName": "ListAssets",
    "Description": "Lists the hardware assets for the specified Outpost"
  },
  {
    "API": "outposts:ListCapacityTasks",
    "EventSource": "outposts",
    "EventName": "ListCapacityTasks",
    "Description": "Lists the capacity tasks for your Amazon Web Services account"
  },
  {
    "API": "outposts:ListCatalogItems",
    "EventSource": "outposts",
    "EventName": "ListCatalogItems",
    "Description": "Lists the items in the catalog"
  },
  {
    "API": "outposts:ListOrders",
    "EventSource": "outposts",
    "EventName": "ListOrders",
    "Description": "Lists the Outpost orders for your Amazon Web Services account"
  },
  {
    "API": "outposts:ListOutposts",
    "EventSource": "outposts",
    "EventName": "ListOutposts",
    "Description": "Lists the Outposts for your Amazon Web Services account"
  },
  {
    "API": "outposts:ListSites",
    "EventSource": "outposts",
    "EventName": "ListSites",
    "Description": "Lists the Outpost sites for your Amazon Web Services account"
  },
  {
    "API": "outposts:ListTagsForResource",
    "EventSource": "outposts",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags for the specified resource"
  },
  {
    "API": "outposts:StartCapacityTask",
    "EventSource": "outposts",
    "EventName": "StartCapacityTask",
    "Description": "Starts the specified capacity task"
  },
  {
    "API": "outposts:StartConnection",
    "EventSource": "outposts",
    "EventName": "StartConnection",
    "Description": ""
  },
  {
    "API": "outposts:TagResource",
    "EventSource": "outposts",
    "EventName": "TagResource",
    "Description": "Adds tags to the specified resource"
  },
  {
    "API": "outposts:UntagResource",
    "EventSource": "outposts",
    "EventName": "UntagResource",
    "Description": "Removes tags from the specified resource"
  },
  {
    "API": "outposts:UpdateOutpost",
    "EventSource": "outposts",
    "EventName": "UpdateOutpost",
    "Description": "Updates an Outpost"
  },
  {
    "API": "outposts:UpdateSite",
    "EventSource": "outposts",
    "EventName": "UpdateSite",
    "Description": "Updates the specified site"
  },
  {
    "API": "outposts:UpdateSiteAddress",
    "EventSource": "outposts",
    "EventName": "UpdateSiteAddress",
    "Description": "Updates the address of the specified site"
  },
  {
    "API": "outposts:UpdateSiteRackPhysicalProperties",
    "EventSource": "outposts",
    "EventName": "UpdateSiteRackPhysicalProperties",
    "Description": "Update the physical and logistical details for a rack at a site"
  },
  {
    "API": "panorama:CreateApplicationInstance",
    "EventSource": "panorama",
    "EventName": "CreateApplicationInstance",
    "Description": "Creates an application instance and deploys it to a device"
  },
  {
    "API": "panorama:CreateJobForDevices",
    "EventSource": "panorama",
    "EventName": "CreateJobForDevices",
    "Description": "Creates a job to run on a device"
  },
  {
    "API": "panorama:CreateNodeFromTemplateJob",
    "EventSource": "panorama",
    "EventName": "CreateNodeFromTemplateJob",
    "Description": "Creates a camera stream node"
  },
  {
    "API": "panorama:CreatePackage",
    "EventSource": "panorama",
    "EventName": "CreatePackage",
    "Description": "Creates a package and storage location in an Amazon S3 access point"
  },
  {
    "API": "panorama:CreatePackageImportJob",
    "EventSource": "panorama",
    "EventName": "CreatePackageImportJob",
    "Description": "Imports a node package"
  },
  {
    "API": "panorama:DeleteDevice",
    "EventSource": "panorama",
    "EventName": "DeleteDevice",
    "Description": "Deletes a device"
  },
  {
    "API": "panorama:DeletePackage",
    "EventSource": "panorama",
    "EventName": "DeletePackage",
    "Description": "Deletes a package"
  },
  {
    "API": "panorama:DeregisterPackageVersion",
    "EventSource": "panorama",
    "EventName": "DeregisterPackageVersion",
    "Description": "Deregisters a package version"
  },
  {
    "API": "panorama:DescribeApplicationInstance",
    "EventSource": "panorama",
    "EventName": "DescribeApplicationInstance",
    "Description": "Returns information about an application instance on a device"
  },
  {
    "API": "panorama:DescribeApplicationInstanceDetails",
    "EventSource": "panorama",
    "EventName": "DescribeApplicationInstanceDetails",
    "Description": "Returns information about an application instance's configuration manifest"
  },
  {
    "API": "panorama:DescribeDevice",
    "EventSource": "panorama",
    "EventName": "DescribeDevice",
    "Description": "Returns information about a device"
  },
  {
    "API": "panorama:DescribeDeviceJob",
    "EventSource": "panorama",
    "EventName": "DescribeDeviceJob",
    "Description": "Returns information about a device job"
  },
  {
    "API": "panorama:DescribeNode",
    "EventSource": "panorama",
    "EventName": "DescribeNode",
    "Description": "Returns information about a node"
  },
  {
    "API": "panorama:DescribeNodeFromTemplateJob",
    "EventSource": "panorama",
    "EventName": "DescribeNodeFromTemplateJob",
    "Description": "Returns information about a job to create a camera stream node"
  },
  {
    "API": "panorama:DescribePackage",
    "EventSource": "panorama",
    "EventName": "DescribePackage",
    "Description": "Returns information about a package"
  },
  {
    "API": "panorama:DescribePackageImportJob",
    "EventSource": "panorama",
    "EventName": "DescribePackageImportJob",
    "Description": "Returns information about a package import job"
  },
  {
    "API": "panorama:DescribePackageVersion",
    "EventSource": "panorama",
    "EventName": "DescribePackageVersion",
    "Description": "Returns information about a package version"
  },
  {
    "API": "panorama:GeneratePresignedUrl",
    "EventSource": "panorama",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "panorama:ListApplicationInstanceDependencies",
    "EventSource": "panorama",
    "EventName": "ListApplicationInstanceDependencies",
    "Description": "Returns a list of application instance dependencies"
  },
  {
    "API": "panorama:ListApplicationInstanceNodeInstances",
    "EventSource": "panorama",
    "EventName": "ListApplicationInstanceNodeInstances",
    "Description": "Returns a list of application node instances"
  },
  {
    "API": "panorama:ListApplicationInstances",
    "EventSource": "panorama",
    "EventName": "ListApplicationInstances",
    "Description": "Returns a list of application instances"
  },
  {
    "API": "panorama:ListDevices",
    "EventSource": "panorama",
    "EventName": "ListDevices",
    "Description": "Returns a list of devices"
  },
  {
    "API": "panorama:ListDevicesJobs",
    "EventSource": "panorama",
    "EventName": "ListDevicesJobs",
    "Description": "Returns a list of jobs"
  },
  {
    "API": "panorama:ListNodeFromTemplateJobs",
    "EventSource": "panorama",
    "EventName": "ListNodeFromTemplateJobs",
    "Description": "Returns a list of camera stream node jobs"
  },
  {
    "API": "panorama:ListNodes",
    "EventSource": "panorama",
    "EventName": "ListNodes",
    "Description": "Returns a list of nodes"
  },
  {
    "API": "panorama:ListPackageImportJobs",
    "EventSource": "panorama",
    "EventName": "ListPackageImportJobs",
    "Description": "Returns a list of package import jobs"
  },
  {
    "API": "panorama:ListPackages",
    "EventSource": "panorama",
    "EventName": "ListPackages",
    "Description": "Returns a list of packages"
  },
  {
    "API": "panorama:ListTagsForResource",
    "EventSource": "panorama",
    "EventName": "ListTagsForResource",
    "Description": "Returns a list of tags for a resource"
  },
  {
    "API": "panorama:ProvisionDevice",
    "EventSource": "panorama",
    "EventName": "ProvisionDevice",
    "Description": "Creates a device and returns a configuration archive"
  },
  {
    "API": "panorama:RegisterPackageVersion",
    "EventSource": "panorama",
    "EventName": "RegisterPackageVersion",
    "Description": "Registers a package version"
  },
  {
    "API": "panorama:RemoveApplicationInstance",
    "EventSource": "panorama",
    "EventName": "RemoveApplicationInstance",
    "Description": "Removes an application instance"
  },
  {
    "API": "panorama:SignalApplicationInstanceNodeInstances",
    "EventSource": "panorama",
    "EventName": "SignalApplicationInstanceNodeInstances",
    "Description": "Signal camera nodes to stop or resume"
  },
  {
    "API": "panorama:TagResource",
    "EventSource": "panorama",
    "EventName": "TagResource",
    "Description": "Tags a resource"
  },
  {
    "API": "panorama:UntagResource",
    "EventSource": "panorama",
    "EventName": "UntagResource",
    "Description": "Removes tags from a resource"
  },
  {
    "API": "panorama:UpdateDeviceMetadata",
    "EventSource": "panorama",
    "EventName": "UpdateDeviceMetadata",
    "Description": "Updates a device's metadata"
  },
  {
    "API": "payment-cryptography:CreateAlias",
    "EventSource": "payment-cryptography",
    "EventName": "CreateAlias",
    "Description": "Creates an *alias*, or a friendly name, for an Amazon Web Services Payment Cryptography key"
  },
  {
    "API": "payment-cryptography:CreateKey",
    "EventSource": "payment-cryptography",
    "EventName": "CreateKey",
    "Description": "Creates an Amazon Web Services Payment Cryptography key, a logical representation of a cryptographic key, that is unique in your account and Amazon Web Services Region"
  },
  {
    "API": "payment-cryptography:DeleteAlias",
    "EventSource": "payment-cryptography",
    "EventName": "DeleteAlias",
    "Description": "Deletes the alias, but doesn't affect the underlying key"
  },
  {
    "API": "payment-cryptography:DeleteKey",
    "EventSource": "payment-cryptography",
    "EventName": "DeleteKey",
    "Description": "Deletes the key material and metadata associated with Amazon Web Services Payment Cryptography key"
  },
  {
    "API": "payment-cryptography:ExportKey",
    "EventSource": "payment-cryptography",
    "EventName": "ExportKey",
    "Description": "Exports a key from Amazon Web Services Payment Cryptography"
  },
  {
    "API": "payment-cryptography:GeneratePresignedUrl",
    "EventSource": "payment-cryptography",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "payment-cryptography:GetAlias",
    "EventSource": "payment-cryptography",
    "EventName": "GetAlias",
    "Description": "Gets the Amazon Web Services Payment Cryptography key associated with the alias"
  },
  {
    "API": "payment-cryptography:GetKey",
    "EventSource": "payment-cryptography",
    "EventName": "GetKey",
    "Description": "Gets the key material for an Amazon Web Services Payment Cryptography key, including the immutable and mutable data specified when the key was created"
  },
  {
    "API": "payment-cryptography:GetParametersForExport",
    "EventSource": "payment-cryptography",
    "EventName": "GetParametersForExport",
    "Description": "Gets the export token and the signing key certificate to initiate a TR-34 key export from Amazon Web Services Payment Cryptography"
  },
  {
    "API": "payment-cryptography:GetParametersForImport",
    "EventSource": "payment-cryptography",
    "EventName": "GetParametersForImport",
    "Description": "Gets the import token and the wrapping key certificate in PEM format (base64 encoded) to initiate a TR-34 WrappedKeyBlock or a RSA WrappedKeyCryptogram import into Amazon Web Services Payment Cryptography"
  },
  {
    "API": "payment-cryptography:GetPublicKeyCertificate",
    "EventSource": "payment-cryptography",
    "EventName": "GetPublicKeyCertificate",
    "Description": "Gets the public key certificate of the asymmetric key pair that exists within Amazon Web Services Payment Cryptography"
  },
  {
    "API": "payment-cryptography:ImportKey",
    "EventSource": "payment-cryptography",
    "EventName": "ImportKey",
    "Description": "Imports symmetric keys and public key certificates in PEM format (base64 encoded) into Amazon Web Services Payment Cryptography"
  },
  {
    "API": "payment-cryptography:ListAliases",
    "EventSource": "payment-cryptography",
    "EventName": "ListAliases",
    "Description": "Lists the aliases for all keys in the caller's Amazon Web Services account and Amazon Web Services Region"
  },
  {
    "API": "payment-cryptography:ListKeys",
    "EventSource": "payment-cryptography",
    "EventName": "ListKeys",
    "Description": "Lists the keys in the caller's Amazon Web Services account and Amazon Web Services Region"
  },
  {
    "API": "payment-cryptography:ListTagsForResource",
    "EventSource": "payment-cryptography",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags for an Amazon Web Services resource"
  },
  {
    "API": "payment-cryptography:RestoreKey",
    "EventSource": "payment-cryptography",
    "EventName": "RestoreKey",
    "Description": "Cancels a scheduled key deletion during the waiting period"
  },
  {
    "API": "payment-cryptography:StartKeyUsage",
    "EventSource": "payment-cryptography",
    "EventName": "StartKeyUsage",
    "Description": "Enables an Amazon Web Services Payment Cryptography key, which makes it active for cryptographic operations within Amazon Web Services Payment Cryptography"
  },
  {
    "API": "payment-cryptography:StopKeyUsage",
    "EventSource": "payment-cryptography",
    "EventName": "StopKeyUsage",
    "Description": "Disables an Amazon Web Services Payment Cryptography key, which makes it inactive within Amazon Web Services Payment Cryptography"
  },
  {
    "API": "payment-cryptography:TagResource",
    "EventSource": "payment-cryptography",
    "EventName": "TagResource",
    "Description": "Adds or edits tags on an Amazon Web Services Payment Cryptography key"
  },
  {
    "API": "payment-cryptography:UntagResource",
    "EventSource": "payment-cryptography",
    "EventName": "UntagResource",
    "Description": "Deletes a tag from an Amazon Web Services Payment Cryptography key"
  },
  {
    "API": "payment-cryptography:UpdateAlias",
    "EventSource": "payment-cryptography",
    "EventName": "UpdateAlias",
    "Description": "Associates an existing Amazon Web Services Payment Cryptography alias with a different key"
  },
  {
    "API": "payment-cryptography-data:DecryptData",
    "EventSource": "payment-cryptography-data",
    "EventName": "DecryptData",
    "Description": "Decrypts ciphertext data to plaintext using a symmetric (TDES, AES), asymmetric (RSA), or derived (DUKPT or EMV) encryption key scheme"
  },
  {
    "API": "payment-cryptography-data:EncryptData",
    "EventSource": "payment-cryptography-data",
    "EventName": "EncryptData",
    "Description": "Encrypts plaintext data to ciphertext using a symmetric (TDES, AES), asymmetric (RSA), or derived (DUKPT or EMV) encryption key scheme"
  },
  {
    "API": "payment-cryptography-data:GenerateCardValidationData",
    "EventSource": "payment-cryptography-data",
    "EventName": "GenerateCardValidationData",
    "Description": "Generates card-related validation data using algorithms such as Card Verification Values (CVV/CVV2), Dynamic Card Verification Values (dCVV/dCVV2), or Card Security Codes (CSC)"
  },
  {
    "API": "payment-cryptography-data:GenerateMac",
    "EventSource": "payment-cryptography-data",
    "EventName": "GenerateMac",
    "Description": "Generates a Message Authentication Code (MAC) cryptogram within Amazon Web Services Payment Cryptography"
  },
  {
    "API": "payment-cryptography-data:GeneratePinData",
    "EventSource": "payment-cryptography-data",
    "EventName": "GeneratePinData",
    "Description": "Generates pin-related data such as PIN, PIN Verification Value (PVV), PIN Block, and PIN Offset during new card issuance or reissuance"
  },
  {
    "API": "payment-cryptography-data:GeneratePresignedUrl",
    "EventSource": "payment-cryptography-data",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "payment-cryptography-data:ReEncryptData",
    "EventSource": "payment-cryptography-data",
    "EventName": "ReEncryptData",
    "Description": "Re-encrypt ciphertext using DUKPT, Symmetric and Asymmetric Data Encryption Keys"
  },
  {
    "API": "payment-cryptography-data:TranslatePinData",
    "EventSource": "payment-cryptography-data",
    "EventName": "TranslatePinData",
    "Description": "Translates encrypted PIN block from and to ISO 9564 formats 0,1,3,4"
  },
  {
    "API": "payment-cryptography-data:VerifyAuthRequestCryptogram",
    "EventSource": "payment-cryptography-data",
    "EventName": "VerifyAuthRequestCryptogram",
    "Description": "Verifies Authorization Request Cryptogram (ARQC) for a EMV chip payment card authorization"
  },
  {
    "API": "payment-cryptography-data:VerifyCardValidationData",
    "EventSource": "payment-cryptography-data",
    "EventName": "VerifyCardValidationData",
    "Description": "Verifies card-related validation data using algorithms such as Card Verification Values (CVV/CVV2), Dynamic Card Verification Values (dCVV/dCVV2) and Card Security Codes (CSC)"
  },
  {
    "API": "payment-cryptography-data:VerifyMac",
    "EventSource": "payment-cryptography-data",
    "EventName": "VerifyMac",
    "Description": "Verifies a Message Authentication Code (MAC)"
  },
  {
    "API": "payment-cryptography-data:VerifyPinData",
    "EventSource": "payment-cryptography-data",
    "EventName": "VerifyPinData",
    "Description": "Verifies pin-related data such as PIN and PIN Offset using algorithms including VISA PVV and IBM3624"
  },
  {
    "API": "pca-connector-ad:CreateConnector",
    "EventSource": "pca-connector-ad",
    "EventName": "CreateConnector",
    "Description": "Creates a connector between Amazon Web Services Private CA and an Active Directory"
  },
  {
    "API": "pca-connector-ad:CreateDirectoryRegistration",
    "EventSource": "pca-connector-ad",
    "EventName": "CreateDirectoryRegistration",
    "Description": "Creates a directory registration that authorizes communication between Amazon Web Services Private CA and an Active Directory"
  },
  {
    "API": "pca-connector-ad:CreateServicePrincipalName",
    "EventSource": "pca-connector-ad",
    "EventName": "CreateServicePrincipalName",
    "Description": "Creates a service principal name (SPN) for the service account in Active Directory"
  },
  {
    "API": "pca-connector-ad:CreateTemplate",
    "EventSource": "pca-connector-ad",
    "EventName": "CreateTemplate",
    "Description": "Creates an Active Directory compatible certificate template"
  },
  {
    "API": "pca-connector-ad:CreateTemplateGroupAccessControlEntry",
    "EventSource": "pca-connector-ad",
    "EventName": "CreateTemplateGroupAccessControlEntry",
    "Description": "Create a group access control entry"
  },
  {
    "API": "pca-connector-ad:DeleteConnector",
    "EventSource": "pca-connector-ad",
    "EventName": "DeleteConnector",
    "Description": "Deletes a connector for Active Directory"
  },
  {
    "API": "pca-connector-ad:DeleteDirectoryRegistration",
    "EventSource": "pca-connector-ad",
    "EventName": "DeleteDirectoryRegistration",
    "Description": "Deletes a directory registration"
  },
  {
    "API": "pca-connector-ad:DeleteServicePrincipalName",
    "EventSource": "pca-connector-ad",
    "EventName": "DeleteServicePrincipalName",
    "Description": "Deletes the service principal name (SPN) used by a connector to authenticate with your Active Directory"
  },
  {
    "API": "pca-connector-ad:DeleteTemplate",
    "EventSource": "pca-connector-ad",
    "EventName": "DeleteTemplate",
    "Description": "Deletes a template"
  },
  {
    "API": "pca-connector-ad:DeleteTemplateGroupAccessControlEntry",
    "EventSource": "pca-connector-ad",
    "EventName": "DeleteTemplateGroupAccessControlEntry",
    "Description": "Deletes a group access control entry"
  },
  {
    "API": "pca-connector-ad:GeneratePresignedUrl",
    "EventSource": "pca-connector-ad",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "pca-connector-ad:GetConnector",
    "EventSource": "pca-connector-ad",
    "EventName": "GetConnector",
    "Description": "Lists information about your connector"
  },
  {
    "API": "pca-connector-ad:GetDirectoryRegistration",
    "EventSource": "pca-connector-ad",
    "EventName": "GetDirectoryRegistration",
    "Description": "A structure that contains information about your directory registration"
  },
  {
    "API": "pca-connector-ad:GetServicePrincipalName",
    "EventSource": "pca-connector-ad",
    "EventName": "GetServicePrincipalName",
    "Description": "Lists the service principal name that the connector uses to authenticate with Active Directory"
  },
  {
    "API": "pca-connector-ad:GetTemplate",
    "EventSource": "pca-connector-ad",
    "EventName": "GetTemplate",
    "Description": "Retrieves a certificate template that the connector uses to issue certificates from a private CA"
  },
  {
    "API": "pca-connector-ad:GetTemplateGroupAccessControlEntry",
    "EventSource": "pca-connector-ad",
    "EventName": "GetTemplateGroupAccessControlEntry",
    "Description": "Retrieves the group access control entries for a template"
  },
  {
    "API": "pca-connector-ad:ListConnectors",
    "EventSource": "pca-connector-ad",
    "EventName": "ListConnectors",
    "Description": "Lists the connectors that you created by using the `https\\://docs"
  },
  {
    "API": "pca-connector-ad:ListDirectoryRegistrations",
    "EventSource": "pca-connector-ad",
    "EventName": "ListDirectoryRegistrations",
    "Description": "Lists the directory registrations that you created by using the `https\\://docs"
  },
  {
    "API": "pca-connector-ad:ListServicePrincipalNames",
    "EventSource": "pca-connector-ad",
    "EventName": "ListServicePrincipalNames",
    "Description": "Lists the service principal names that the connector uses to authenticate with Active Directory"
  },
  {
    "API": "pca-connector-ad:ListTagsForResource",
    "EventSource": "pca-connector-ad",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags, if any, that are associated with your resource"
  },
  {
    "API": "pca-connector-ad:ListTemplateGroupAccessControlEntries",
    "EventSource": "pca-connector-ad",
    "EventName": "ListTemplateGroupAccessControlEntries",
    "Description": "Lists group access control entries you created"
  },
  {
    "API": "pca-connector-ad:ListTemplates",
    "EventSource": "pca-connector-ad",
    "EventName": "ListTemplates",
    "Description": "Lists the templates, if any, that are associated with a connector"
  },
  {
    "API": "pca-connector-ad:TagResource",
    "EventSource": "pca-connector-ad",
    "EventName": "TagResource",
    "Description": "Adds one or more tags to your resource"
  },
  {
    "API": "pca-connector-ad:UntagResource",
    "EventSource": "pca-connector-ad",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags from your resource"
  },
  {
    "API": "pca-connector-ad:UpdateTemplate",
    "EventSource": "pca-connector-ad",
    "EventName": "UpdateTemplate",
    "Description": "Update template configuration to define the information included in certificates"
  },
  {
    "API": "pca-connector-ad:UpdateTemplateGroupAccessControlEntry",
    "EventSource": "pca-connector-ad",
    "EventName": "UpdateTemplateGroupAccessControlEntry",
    "Description": "Update a group access control entry you created using `CreateTemplateGroupAccessControlEntry <https://docs"
  },
  {
    "API": "pca-connector-scep:CreateChallenge",
    "EventSource": "pca-connector-scep",
    "EventName": "CreateChallenge",
    "Description": "For general-purpose connectors"
  },
  {
    "API": "pca-connector-scep:CreateConnector",
    "EventSource": "pca-connector-scep",
    "EventName": "CreateConnector",
    "Description": "Creates a SCEP connector"
  },
  {
    "API": "pca-connector-scep:DeleteChallenge",
    "EventSource": "pca-connector-scep",
    "EventName": "DeleteChallenge",
    "Description": "Deletes the specified `Challenge <https://docs"
  },
  {
    "API": "pca-connector-scep:DeleteConnector",
    "EventSource": "pca-connector-scep",
    "EventName": "DeleteConnector",
    "Description": "Deletes the specified `Connector <https://docs"
  },
  {
    "API": "pca-connector-scep:GeneratePresignedUrl",
    "EventSource": "pca-connector-scep",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "pca-connector-scep:GetChallengeMetadata",
    "EventSource": "pca-connector-scep",
    "EventName": "GetChallengeMetadata",
    "Description": "Retrieves the metadata for the specified `Challenge <https://docs"
  },
  {
    "API": "pca-connector-scep:GetChallengePassword",
    "EventSource": "pca-connector-scep",
    "EventName": "GetChallengePassword",
    "Description": "Retrieves the challenge password for the specified `Challenge <https://docs"
  },
  {
    "API": "pca-connector-scep:GetConnector",
    "EventSource": "pca-connector-scep",
    "EventName": "GetConnector",
    "Description": "Retrieves details about the specified `Connector <https://docs"
  },
  {
    "API": "pca-connector-scep:ListChallengeMetadata",
    "EventSource": "pca-connector-scep",
    "EventName": "ListChallengeMetadata",
    "Description": "Retrieves the challenge metadata for the specified ARN"
  },
  {
    "API": "pca-connector-scep:ListConnectors",
    "EventSource": "pca-connector-scep",
    "EventName": "ListConnectors",
    "Description": "Lists the connectors belonging to your Amazon Web Services account"
  },
  {
    "API": "pca-connector-scep:ListTagsForResource",
    "EventSource": "pca-connector-scep",
    "EventName": "ListTagsForResource",
    "Description": "Retrieves the tags associated with the specified resource"
  },
  {
    "API": "pca-connector-scep:TagResource",
    "EventSource": "pca-connector-scep",
    "EventName": "TagResource",
    "Description": "Adds one or more tags to your resource"
  },
  {
    "API": "pca-connector-scep:UntagResource",
    "EventSource": "pca-connector-scep",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags from your resource"
  },
  {
    "API": "personalize:CreateBatchInferenceJob",
    "EventSource": "personalize",
    "EventName": "CreateBatchInferenceJob",
    "Description": "Generates batch recommendations based on a list of items or users stored in Amazon S3 and exports the recommendations to an Amazon S3 bucket"
  },
  {
    "API": "personalize:CreateBatchSegmentJob",
    "EventSource": "personalize",
    "EventName": "CreateBatchSegmentJob",
    "Description": "Creates a batch segment job"
  },
  {
    "API": "personalize:CreateCampaign",
    "EventSource": "personalize",
    "EventName": "CreateCampaign",
    "Description": ""
  },
  {
    "API": "personalize:CreateDataDeletionJob",
    "EventSource": "personalize",
    "EventName": "CreateDataDeletionJob",
    "Description": "Creates a batch job that deletes all references to specific users from an Amazon Personalize dataset group in batches"
  },
  {
    "API": "personalize:CreateDataset",
    "EventSource": "personalize",
    "EventName": "CreateDataset",
    "Description": "Creates an empty dataset and adds it to the specified dataset group"
  },
  {
    "API": "personalize:CreateDatasetExportJob",
    "EventSource": "personalize",
    "EventName": "CreateDatasetExportJob",
    "Description": "Creates a job that exports data from your dataset to an Amazon S3 bucket"
  },
  {
    "API": "personalize:CreateDatasetGroup",
    "EventSource": "personalize",
    "EventName": "CreateDatasetGroup",
    "Description": "Creates an empty dataset group"
  },
  {
    "API": "personalize:CreateDatasetImportJob",
    "EventSource": "personalize",
    "EventName": "CreateDatasetImportJob",
    "Description": "Creates a job that imports training data from your data source (an Amazon S3 bucket) to an Amazon Personalize dataset"
  },
  {
    "API": "personalize:CreateEventTracker",
    "EventSource": "personalize",
    "EventName": "CreateEventTracker",
    "Description": "Creates an event tracker that you use when adding event data to a specified dataset group using the `PutEvents <https://docs"
  },
  {
    "API": "personalize:CreateFilter",
    "EventSource": "personalize",
    "EventName": "CreateFilter",
    "Description": "Creates a recommendation filter"
  },
  {
    "API": "personalize:CreateMetricAttribution",
    "EventSource": "personalize",
    "EventName": "CreateMetricAttribution",
    "Description": "Creates a metric attribution"
  },
  {
    "API": "personalize:CreateRecommender",
    "EventSource": "personalize",
    "EventName": "CreateRecommender",
    "Description": "Creates a recommender with the recipe (a Domain dataset group use case) you specify"
  },
  {
    "API": "personalize:CreateSchema",
    "EventSource": "personalize",
    "EventName": "CreateSchema",
    "Description": "Creates an Amazon Personalize schema from the specified schema string"
  },
  {
    "API": "personalize:CreateSolution",
    "EventSource": "personalize",
    "EventName": "CreateSolution",
    "Description": ""
  },
  {
    "API": "personalize:CreateSolutionVersion",
    "EventSource": "personalize",
    "EventName": "CreateSolutionVersion",
    "Description": "Trains or retrains an active solution in a Custom dataset group"
  },
  {
    "API": "personalize:DeleteCampaign",
    "EventSource": "personalize",
    "EventName": "DeleteCampaign",
    "Description": "Removes a campaign by deleting the solution deployment"
  },
  {
    "API": "personalize:DeleteDataset",
    "EventSource": "personalize",
    "EventName": "DeleteDataset",
    "Description": "Deletes a dataset"
  },
  {
    "API": "personalize:DeleteDatasetGroup",
    "EventSource": "personalize",
    "EventName": "DeleteDatasetGroup",
    "Description": "Deletes a dataset group"
  },
  {
    "API": "personalize:DeleteEventTracker",
    "EventSource": "personalize",
    "EventName": "DeleteEventTracker",
    "Description": "Deletes the event tracker"
  },
  {
    "API": "personalize:DeleteFilter",
    "EventSource": "personalize",
    "EventName": "DeleteFilter",
    "Description": "Deletes a filter"
  },
  {
    "API": "personalize:DeleteMetricAttribution",
    "EventSource": "personalize",
    "EventName": "DeleteMetricAttribution",
    "Description": "Deletes a metric attribution"
  },
  {
    "API": "personalize:DeleteRecommender",
    "EventSource": "personalize",
    "EventName": "DeleteRecommender",
    "Description": "Deactivates and removes a recommender"
  },
  {
    "API": "personalize:DeleteSchema",
    "EventSource": "personalize",
    "EventName": "DeleteSchema",
    "Description": "Deletes a schema"
  },
  {
    "API": "personalize:DeleteSolution",
    "EventSource": "personalize",
    "EventName": "DeleteSolution",
    "Description": "Deletes all versions of a solution and the ``Solution`` object itself"
  },
  {
    "API": "personalize:DescribeAlgorithm",
    "EventSource": "personalize",
    "EventName": "DescribeAlgorithm",
    "Description": "Describes the given algorithm"
  },
  {
    "API": "personalize:DescribeBatchInferenceJob",
    "EventSource": "personalize",
    "EventName": "DescribeBatchInferenceJob",
    "Description": "Gets the properties of a batch inference job including name, Amazon Resource Name (ARN), status, input and output configurations, and the ARN of the solution version used to generate the recommendations"
  },
  {
    "API": "personalize:DescribeBatchSegmentJob",
    "EventSource": "personalize",
    "EventName": "DescribeBatchSegmentJob",
    "Description": "Gets the properties of a batch segment job including name, Amazon Resource Name (ARN), status, input and output configurations, and the ARN of the solution version used to generate segments"
  },
  {
    "API": "personalize:DescribeCampaign",
    "EventSource": "personalize",
    "EventName": "DescribeCampaign",
    "Description": "Describes the given campaign, including its status"
  },
  {
    "API": "personalize:DescribeDataDeletionJob",
    "EventSource": "personalize",
    "EventName": "DescribeDataDeletionJob",
    "Description": "Describes the data deletion job created by `CreateDataDeletionJob <https://docs"
  },
  {
    "API": "personalize:DescribeDataset",
    "EventSource": "personalize",
    "EventName": "DescribeDataset",
    "Description": "Describes the given dataset"
  },
  {
    "API": "personalize:DescribeDatasetExportJob",
    "EventSource": "personalize",
    "EventName": "DescribeDatasetExportJob",
    "Description": "Describes the dataset export job created by `CreateDatasetExportJob <https://docs"
  },
  {
    "API": "personalize:DescribeDatasetGroup",
    "EventSource": "personalize",
    "EventName": "DescribeDatasetGroup",
    "Description": "Describes the given dataset group"
  },
  {
    "API": "personalize:DescribeDatasetImportJob",
    "EventSource": "personalize",
    "EventName": "DescribeDatasetImportJob",
    "Description": "Describes the dataset import job created by `CreateDatasetImportJob <https://docs"
  },
  {
    "API": "personalize:DescribeEventTracker",
    "EventSource": "personalize",
    "EventName": "DescribeEventTracker",
    "Description": "Describes an event tracker"
  },
  {
    "API": "personalize:DescribeFeatureTransformation",
    "EventSource": "personalize",
    "EventName": "DescribeFeatureTransformation",
    "Description": "Describes the given feature transformation"
  },
  {
    "API": "personalize:DescribeFilter",
    "EventSource": "personalize",
    "EventName": "DescribeFilter",
    "Description": "Describes a filter's properties"
  },
  {
    "API": "personalize:DescribeMetricAttribution",
    "EventSource": "personalize",
    "EventName": "DescribeMetricAttribution",
    "Description": "Describes a metric attribution"
  },
  {
    "API": "personalize:DescribeRecipe",
    "EventSource": "personalize",
    "EventName": "DescribeRecipe",
    "Description": "Describes a recipe"
  },
  {
    "API": "personalize:DescribeRecommender",
    "EventSource": "personalize",
    "EventName": "DescribeRecommender",
    "Description": "Describes the given recommender, including its status"
  },
  {
    "API": "personalize:DescribeSchema",
    "EventSource": "personalize",
    "EventName": "DescribeSchema",
    "Description": "Describes a schema"
  },
  {
    "API": "personalize:DescribeSolution",
    "EventSource": "personalize",
    "EventName": "DescribeSolution",
    "Description": "Describes a solution"
  },
  {
    "API": "personalize:DescribeSolutionVersion",
    "EventSource": "personalize",
    "EventName": "DescribeSolutionVersion",
    "Description": "Describes a specific version of a solution"
  },
  {
    "API": "personalize:GeneratePresignedUrl",
    "EventSource": "personalize",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "personalize:GetSolutionMetrics",
    "EventSource": "personalize",
    "EventName": "GetSolutionMetrics",
    "Description": "Gets the metrics for the specified solution version"
  },
  {
    "API": "personalize:ListBatchInferenceJobs",
    "EventSource": "personalize",
    "EventName": "ListBatchInferenceJobs",
    "Description": "Gets a list of the batch inference jobs that have been performed off of a solution version"
  },
  {
    "API": "personalize:ListBatchSegmentJobs",
    "EventSource": "personalize",
    "EventName": "ListBatchSegmentJobs",
    "Description": "Gets a list of the batch segment jobs that have been performed off of a solution version that you specify"
  },
  {
    "API": "personalize:ListCampaigns",
    "EventSource": "personalize",
    "EventName": "ListCampaigns",
    "Description": "Returns a list of campaigns that use the given solution"
  },
  {
    "API": "personalize:ListDataDeletionJobs",
    "EventSource": "personalize",
    "EventName": "ListDataDeletionJobs",
    "Description": "Returns a list of data deletion jobs for a dataset group ordered by creation time, with the most recent first"
  },
  {
    "API": "personalize:ListDatasetExportJobs",
    "EventSource": "personalize",
    "EventName": "ListDatasetExportJobs",
    "Description": "Returns a list of dataset export jobs that use the given dataset"
  },
  {
    "API": "personalize:ListDatasetGroups",
    "EventSource": "personalize",
    "EventName": "ListDatasetGroups",
    "Description": "Returns a list of dataset groups"
  },
  {
    "API": "personalize:ListDatasetImportJobs",
    "EventSource": "personalize",
    "EventName": "ListDatasetImportJobs",
    "Description": "Returns a list of dataset import jobs that use the given dataset"
  },
  {
    "API": "personalize:ListDatasets",
    "EventSource": "personalize",
    "EventName": "ListDatasets",
    "Description": "Returns the list of datasets contained in the given dataset group"
  },
  {
    "API": "personalize:ListEventTrackers",
    "EventSource": "personalize",
    "EventName": "ListEventTrackers",
    "Description": "Returns the list of event trackers associated with the account"
  },
  {
    "API": "personalize:ListFilters",
    "EventSource": "personalize",
    "EventName": "ListFilters",
    "Description": "Lists all filters that belong to a given dataset group"
  },
  {
    "API": "personalize:ListMetricAttributionMetrics",
    "EventSource": "personalize",
    "EventName": "ListMetricAttributionMetrics",
    "Description": "Lists the metrics for the metric attribution"
  },
  {
    "API": "personalize:ListMetricAttributions",
    "EventSource": "personalize",
    "EventName": "ListMetricAttributions",
    "Description": "Lists metric attributions"
  },
  {
    "API": "personalize:ListRecipes",
    "EventSource": "personalize",
    "EventName": "ListRecipes",
    "Description": "Returns a list of available recipes"
  },
  {
    "API": "personalize:ListRecommenders",
    "EventSource": "personalize",
    "EventName": "ListRecommenders",
    "Description": "Returns a list of recommenders in a given Domain dataset group"
  },
  {
    "API": "personalize:ListSchemas",
    "EventSource": "personalize",
    "EventName": "ListSchemas",
    "Description": "Returns the list of schemas associated with the account"
  },
  {
    "API": "personalize:ListSolutionVersions",
    "EventSource": "personalize",
    "EventName": "ListSolutionVersions",
    "Description": "Returns a list of solution versions for the given solution"
  },
  {
    "API": "personalize:ListSolutions",
    "EventSource": "personalize",
    "EventName": "ListSolutions",
    "Description": "Returns a list of solutions in a given dataset group"
  },
  {
    "API": "personalize:ListTagsForResource",
    "EventSource": "personalize",
    "EventName": "ListTagsForResource",
    "Description": "Get a list of `tags <https://docs"
  },
  {
    "API": "personalize:StartRecommender",
    "EventSource": "personalize",
    "EventName": "StartRecommender",
    "Description": "Starts a recommender that is INACTIVE"
  },
  {
    "API": "personalize:StopRecommender",
    "EventSource": "personalize",
    "EventName": "StopRecommender",
    "Description": "Stops a recommender that is ACTIVE"
  },
  {
    "API": "personalize:StopSolutionVersionCreation",
    "EventSource": "personalize",
    "EventName": "StopSolutionVersionCreation",
    "Description": "Stops creating a solution version that is in a state of CREATE_PENDING or CREATE IN_PROGRESS"
  },
  {
    "API": "personalize:TagResource",
    "EventSource": "personalize",
    "EventName": "TagResource",
    "Description": "Add a list of tags to a resource"
  },
  {
    "API": "personalize:UntagResource",
    "EventSource": "personalize",
    "EventName": "UntagResource",
    "Description": "Removes the specified tags that are attached to a resource"
  },
  {
    "API": "personalize:UpdateCampaign",
    "EventSource": "personalize",
    "EventName": "UpdateCampaign",
    "Description": "Updates a campaign to deploy a retrained solution version with an existing campaign, change your campaign's ``minProvisionedTPS``, or modify your campaign's configuration"
  },
  {
    "API": "personalize:UpdateDataset",
    "EventSource": "personalize",
    "EventName": "UpdateDataset",
    "Description": "Update a dataset to replace its schema with a new or existing one"
  },
  {
    "API": "personalize:UpdateMetricAttribution",
    "EventSource": "personalize",
    "EventName": "UpdateMetricAttribution",
    "Description": "Updates a metric attribution"
  },
  {
    "API": "personalize:UpdateRecommender",
    "EventSource": "personalize",
    "EventName": "UpdateRecommender",
    "Description": "Updates the recommender to modify the recommender configuration"
  },
  {
    "API": "personalize-events:GeneratePresignedUrl",
    "EventSource": "personalize-events",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "personalize-events:PutActionInteractions",
    "EventSource": "personalize-events",
    "EventName": "PutActionInteractions",
    "Description": "Records action interaction event data"
  },
  {
    "API": "personalize-events:PutActions",
    "EventSource": "personalize-events",
    "EventName": "PutActions",
    "Description": "Adds one or more actions to an Actions dataset"
  },
  {
    "API": "personalize-events:PutEvents",
    "EventSource": "personalize-events",
    "EventName": "PutEvents",
    "Description": "Records item interaction event data"
  },
  {
    "API": "personalize-events:PutItems",
    "EventSource": "personalize-events",
    "EventName": "PutItems",
    "Description": "Adds one or more items to an Items dataset"
  },
  {
    "API": "personalize-events:PutUsers",
    "EventSource": "personalize-events",
    "EventName": "PutUsers",
    "Description": "Adds one or more users to a Users dataset"
  },
  {
    "API": "personalize-runtime:GeneratePresignedUrl",
    "EventSource": "personalize-runtime",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "personalize-runtime:GetActionRecommendations",
    "EventSource": "personalize-runtime",
    "EventName": "GetActionRecommendations",
    "Description": "Returns a list of recommended actions in sorted in descending order by prediction score"
  },
  {
    "API": "personalize-runtime:GetPersonalizedRanking",
    "EventSource": "personalize-runtime",
    "EventName": "GetPersonalizedRanking",
    "Description": "Re-ranks a list of recommended items for the given user"
  },
  {
    "API": "personalize-runtime:GetRecommendations",
    "EventSource": "personalize-runtime",
    "EventName": "GetRecommendations",
    "Description": "Returns a list of recommended items"
  },
  {
    "API": "pi:CreatePerformanceAnalysisReport",
    "EventSource": "pi",
    "EventName": "CreatePerformanceAnalysisReport",
    "Description": "Creates a new performance analysis report for a specific time period for the DB instance"
  },
  {
    "API": "pi:DeletePerformanceAnalysisReport",
    "EventSource": "pi",
    "EventName": "DeletePerformanceAnalysisReport",
    "Description": "Deletes a performance analysis report"
  },
  {
    "API": "pi:DescribeDimensionKeys",
    "EventSource": "pi",
    "EventName": "DescribeDimensionKeys",
    "Description": "For a specific time period, retrieve the top ``N`` dimension keys for a metric"
  },
  {
    "API": "pi:GeneratePresignedUrl",
    "EventSource": "pi",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "pi:GetDimensionKeyDetails",
    "EventSource": "pi",
    "EventName": "GetDimensionKeyDetails",
    "Description": "Get the attributes of the specified dimension group for a DB instance or data source"
  },
  {
    "API": "pi:GetPerformanceAnalysisReport",
    "EventSource": "pi",
    "EventName": "GetPerformanceAnalysisReport",
    "Description": "Retrieves the report including the report ID, status, time details, and the insights with recommendations"
  },
  {
    "API": "pi:GetResourceMetadata",
    "EventSource": "pi",
    "EventName": "GetResourceMetadata",
    "Description": "Retrieve the metadata for different features"
  },
  {
    "API": "pi:GetResourceMetrics",
    "EventSource": "pi",
    "EventName": "GetResourceMetrics",
    "Description": "Retrieve Performance Insights metrics for a set of data sources over a time period"
  },
  {
    "API": "pi:ListAvailableResourceDimensions",
    "EventSource": "pi",
    "EventName": "ListAvailableResourceDimensions",
    "Description": "Retrieve the dimensions that can be queried for each specified metric type on a specified DB instance"
  },
  {
    "API": "pi:ListAvailableResourceMetrics",
    "EventSource": "pi",
    "EventName": "ListAvailableResourceMetrics",
    "Description": "Retrieve metrics of the specified types that can be queried for a specified DB instance"
  },
  {
    "API": "pi:ListPerformanceAnalysisReports",
    "EventSource": "pi",
    "EventName": "ListPerformanceAnalysisReports",
    "Description": "Lists all the analysis reports created for the DB instance"
  },
  {
    "API": "pi:ListTagsForResource",
    "EventSource": "pi",
    "EventName": "ListTagsForResource",
    "Description": "Retrieves all the metadata tags associated with Amazon RDS Performance Insights resource"
  },
  {
    "API": "pi:TagResource",
    "EventSource": "pi",
    "EventName": "TagResource",
    "Description": "Adds metadata tags to the Amazon RDS Performance Insights resource"
  },
  {
    "API": "pi:UntagResource",
    "EventSource": "pi",
    "EventName": "UntagResource",
    "Description": "Deletes the metadata tags from the Amazon RDS Performance Insights resource"
  },
  {
    "API": "pinpoint:CreateApp",
    "EventSource": "pinpoint",
    "EventName": "CreateApp",
    "Description": "Creates an application"
  },
  {
    "API": "pinpoint:CreateCampaign",
    "EventSource": "pinpoint",
    "EventName": "CreateCampaign",
    "Description": "Creates a new campaign for an application or updates the settings of an existing campaign for an application"
  },
  {
    "API": "pinpoint:CreateEmailTemplate",
    "EventSource": "pinpoint",
    "EventName": "CreateEmailTemplate",
    "Description": "Creates a message template for messages that are sent through the email channel"
  },
  {
    "API": "pinpoint:CreateExportJob",
    "EventSource": "pinpoint",
    "EventName": "CreateExportJob",
    "Description": "Creates an export job for an application"
  },
  {
    "API": "pinpoint:CreateImportJob",
    "EventSource": "pinpoint",
    "EventName": "CreateImportJob",
    "Description": "Creates an import job for an application"
  },
  {
    "API": "pinpoint:CreateInAppTemplate",
    "EventSource": "pinpoint",
    "EventName": "CreateInAppTemplate",
    "Description": "Creates a new message template for messages using the in-app message channel"
  },
  {
    "API": "pinpoint:CreateJourney",
    "EventSource": "pinpoint",
    "EventName": "CreateJourney",
    "Description": "Creates a journey for an application"
  },
  {
    "API": "pinpoint:CreatePushTemplate",
    "EventSource": "pinpoint",
    "EventName": "CreatePushTemplate",
    "Description": "Creates a message template for messages that are sent through a push notification channel"
  },
  {
    "API": "pinpoint:CreateRecommenderConfiguration",
    "EventSource": "pinpoint",
    "EventName": "CreateRecommenderConfiguration",
    "Description": "Creates an Amazon Pinpoint configuration for a recommender model"
  },
  {
    "API": "pinpoint:CreateSegment",
    "EventSource": "pinpoint",
    "EventName": "CreateSegment",
    "Description": "Creates a new segment for an application or updates the configuration, dimension, and other settings for an existing segment that's associated with an application"
  },
  {
    "API": "pinpoint:CreateSmsTemplate",
    "EventSource": "pinpoint",
    "EventName": "CreateSmsTemplate",
    "Description": "Creates a message template for messages that are sent through the SMS channel"
  },
  {
    "API": "pinpoint:CreateVoiceTemplate",
    "EventSource": "pinpoint",
    "EventName": "CreateVoiceTemplate",
    "Description": "Creates a message template for messages that are sent through the voice channel"
  },
  {
    "API": "pinpoint:DeleteAdmChannel",
    "EventSource": "pinpoint",
    "EventName": "DeleteAdmChannel",
    "Description": "Disables the ADM channel for an application and deletes any existing settings for the channel"
  },
  {
    "API": "pinpoint:DeleteApnsChannel",
    "EventSource": "pinpoint",
    "EventName": "DeleteApnsChannel",
    "Description": "Disables the APNs channel for an application and deletes any existing settings for the channel"
  },
  {
    "API": "pinpoint:DeleteApnsSandboxChannel",
    "EventSource": "pinpoint",
    "EventName": "DeleteApnsSandboxChannel",
    "Description": "Disables the APNs sandbox channel for an application and deletes any existing settings for the channel"
  },
  {
    "API": "pinpoint:DeleteApnsVoipChannel",
    "EventSource": "pinpoint",
    "EventName": "DeleteApnsVoipChannel",
    "Description": "Disables the APNs VoIP channel for an application and deletes any existing settings for the channel"
  },
  {
    "API": "pinpoint:DeleteApnsVoipSandboxChannel",
    "EventSource": "pinpoint",
    "EventName": "DeleteApnsVoipSandboxChannel",
    "Description": "Disables the APNs VoIP sandbox channel for an application and deletes any existing settings for the channel"
  },
  {
    "API": "pinpoint:DeleteApp",
    "EventSource": "pinpoint",
    "EventName": "DeleteApp",
    "Description": "Deletes an application"
  },
  {
    "API": "pinpoint:DeleteBaiduChannel",
    "EventSource": "pinpoint",
    "EventName": "DeleteBaiduChannel",
    "Description": "Disables the Baidu channel for an application and deletes any existing settings for the channel"
  },
  {
    "API": "pinpoint:DeleteCampaign",
    "EventSource": "pinpoint",
    "EventName": "DeleteCampaign",
    "Description": "Deletes a campaign from an application"
  },
  {
    "API": "pinpoint:DeleteEmailChannel",
    "EventSource": "pinpoint",
    "EventName": "DeleteEmailChannel",
    "Description": "Disables the email channel for an application and deletes any existing settings for the channel"
  },
  {
    "API": "pinpoint:DeleteEmailTemplate",
    "EventSource": "pinpoint",
    "EventName": "DeleteEmailTemplate",
    "Description": "Deletes a message template for messages that were sent through the email channel"
  },
  {
    "API": "pinpoint:DeleteEndpoint",
    "EventSource": "pinpoint",
    "EventName": "DeleteEndpoint",
    "Description": "Deletes an endpoint from an application"
  },
  {
    "API": "pinpoint:DeleteEventStream",
    "EventSource": "pinpoint",
    "EventName": "DeleteEventStream",
    "Description": "Deletes the event stream for an application"
  },
  {
    "API": "pinpoint:DeleteGcmChannel",
    "EventSource": "pinpoint",
    "EventName": "DeleteGcmChannel",
    "Description": "Disables the GCM channel for an application and deletes any existing settings for the channel"
  },
  {
    "API": "pinpoint:DeleteInAppTemplate",
    "EventSource": "pinpoint",
    "EventName": "DeleteInAppTemplate",
    "Description": "Deletes a message template for messages sent using the in-app message channel"
  },
  {
    "API": "pinpoint:DeleteJourney",
    "EventSource": "pinpoint",
    "EventName": "DeleteJourney",
    "Description": "Deletes a journey from an application"
  },
  {
    "API": "pinpoint:DeletePushTemplate",
    "EventSource": "pinpoint",
    "EventName": "DeletePushTemplate",
    "Description": "Deletes a message template for messages that were sent through a push notification channel"
  },
  {
    "API": "pinpoint:DeleteRecommenderConfiguration",
    "EventSource": "pinpoint",
    "EventName": "DeleteRecommenderConfiguration",
    "Description": "Deletes an Amazon Pinpoint configuration for a recommender model"
  },
  {
    "API": "pinpoint:DeleteSegment",
    "EventSource": "pinpoint",
    "EventName": "DeleteSegment",
    "Description": "Deletes a segment from an application"
  },
  {
    "API": "pinpoint:DeleteSmsChannel",
    "EventSource": "pinpoint",
    "EventName": "DeleteSmsChannel",
    "Description": "Disables the SMS channel for an application and deletes any existing settings for the channel"
  },
  {
    "API": "pinpoint:DeleteSmsTemplate",
    "EventSource": "pinpoint",
    "EventName": "DeleteSmsTemplate",
    "Description": "Deletes a message template for messages that were sent through the SMS channel"
  },
  {
    "API": "pinpoint:DeleteUserEndpoints",
    "EventSource": "pinpoint",
    "EventName": "DeleteUserEndpoints",
    "Description": "Deletes all the endpoints that are associated with a specific user ID"
  },
  {
    "API": "pinpoint:DeleteVoiceChannel",
    "EventSource": "pinpoint",
    "EventName": "DeleteVoiceChannel",
    "Description": "Disables the voice channel for an application and deletes any existing settings for the channel"
  },
  {
    "API": "pinpoint:DeleteVoiceTemplate",
    "EventSource": "pinpoint",
    "EventName": "DeleteVoiceTemplate",
    "Description": "Deletes a message template for messages that were sent through the voice channel"
  },
  {
    "API": "pinpoint:GeneratePresignedUrl",
    "EventSource": "pinpoint",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "pinpoint:GetAdmChannel",
    "EventSource": "pinpoint",
    "EventName": "GetAdmChannel",
    "Description": "Retrieves information about the status and settings of the ADM channel for an application"
  },
  {
    "API": "pinpoint:GetApnsChannel",
    "EventSource": "pinpoint",
    "EventName": "GetApnsChannel",
    "Description": "Retrieves information about the status and settings of the APNs channel for an application"
  },
  {
    "API": "pinpoint:GetApnsSandboxChannel",
    "EventSource": "pinpoint",
    "EventName": "GetApnsSandboxChannel",
    "Description": "Retrieves information about the status and settings of the APNs sandbox channel for an application"
  },
  {
    "API": "pinpoint:GetApnsVoipChannel",
    "EventSource": "pinpoint",
    "EventName": "GetApnsVoipChannel",
    "Description": "Retrieves information about the status and settings of the APNs VoIP channel for an application"
  },
  {
    "API": "pinpoint:GetApnsVoipSandboxChannel",
    "EventSource": "pinpoint",
    "EventName": "GetApnsVoipSandboxChannel",
    "Description": "Retrieves information about the status and settings of the APNs VoIP sandbox channel for an application"
  },
  {
    "API": "pinpoint:GetApp",
    "EventSource": "pinpoint",
    "EventName": "GetApp",
    "Description": "Retrieves information about an application"
  },
  {
    "API": "pinpoint:GetApplicationDateRangeKpi",
    "EventSource": "pinpoint",
    "EventName": "GetApplicationDateRangeKpi",
    "Description": "Retrieves (queries) pre-aggregated data for a standard metric that applies to an application"
  },
  {
    "API": "pinpoint:GetApplicationSettings",
    "EventSource": "pinpoint",
    "EventName": "GetApplicationSettings",
    "Description": "Retrieves information about the settings for an application"
  },
  {
    "API": "pinpoint:GetApps",
    "EventSource": "pinpoint",
    "EventName": "GetApps",
    "Description": "Retrieves information about all the applications that are associated with your Amazon Pinpoint account"
  },
  {
    "API": "pinpoint:GetBaiduChannel",
    "EventSource": "pinpoint",
    "EventName": "GetBaiduChannel",
    "Description": "Retrieves information about the status and settings of the Baidu channel for an application"
  },
  {
    "API": "pinpoint:GetCampaign",
    "EventSource": "pinpoint",
    "EventName": "GetCampaign",
    "Description": "Retrieves information about the status, configuration, and other settings for a campaign"
  },
  {
    "API": "pinpoint:GetCampaignActivities",
    "EventSource": "pinpoint",
    "EventName": "GetCampaignActivities",
    "Description": "Retrieves information about all the activities for a campaign"
  },
  {
    "API": "pinpoint:GetCampaignDateRangeKpi",
    "EventSource": "pinpoint",
    "EventName": "GetCampaignDateRangeKpi",
    "Description": "Retrieves (queries) pre-aggregated data for a standard metric that applies to a campaign"
  },
  {
    "API": "pinpoint:GetCampaignVersion",
    "EventSource": "pinpoint",
    "EventName": "GetCampaignVersion",
    "Description": "Retrieves information about the status, configuration, and other settings for a specific version of a campaign"
  },
  {
    "API": "pinpoint:GetCampaignVersions",
    "EventSource": "pinpoint",
    "EventName": "GetCampaignVersions",
    "Description": "Retrieves information about the status, configuration, and other settings for all versions of a campaign"
  },
  {
    "API": "pinpoint:GetCampaigns",
    "EventSource": "pinpoint",
    "EventName": "GetCampaigns",
    "Description": "Retrieves information about the status, configuration, and other settings for all the campaigns that are associated with an application"
  },
  {
    "API": "pinpoint:GetChannels",
    "EventSource": "pinpoint",
    "EventName": "GetChannels",
    "Description": "Retrieves information about the history and status of each channel for an application"
  },
  {
    "API": "pinpoint:GetEmailChannel",
    "EventSource": "pinpoint",
    "EventName": "GetEmailChannel",
    "Description": "Retrieves information about the status and settings of the email channel for an application"
  },
  {
    "API": "pinpoint:GetEmailTemplate",
    "EventSource": "pinpoint",
    "EventName": "GetEmailTemplate",
    "Description": "Retrieves the content and settings of a message template for messages that are sent through the email channel"
  },
  {
    "API": "pinpoint:GetEndpoint",
    "EventSource": "pinpoint",
    "EventName": "GetEndpoint",
    "Description": "Retrieves information about the settings and attributes of a specific endpoint for an application"
  },
  {
    "API": "pinpoint:GetEventStream",
    "EventSource": "pinpoint",
    "EventName": "GetEventStream",
    "Description": "Retrieves information about the event stream settings for an application"
  },
  {
    "API": "pinpoint:GetExportJob",
    "EventSource": "pinpoint",
    "EventName": "GetExportJob",
    "Description": "Retrieves information about the status and settings of a specific export job for an application"
  },
  {
    "API": "pinpoint:GetExportJobs",
    "EventSource": "pinpoint",
    "EventName": "GetExportJobs",
    "Description": "Retrieves information about the status and settings of all the export jobs for an application"
  },
  {
    "API": "pinpoint:GetGcmChannel",
    "EventSource": "pinpoint",
    "EventName": "GetGcmChannel",
    "Description": "Retrieves information about the status and settings of the GCM channel for an application"
  },
  {
    "API": "pinpoint:GetImportJob",
    "EventSource": "pinpoint",
    "EventName": "GetImportJob",
    "Description": "Retrieves information about the status and settings of a specific import job for an application"
  },
  {
    "API": "pinpoint:GetImportJobs",
    "EventSource": "pinpoint",
    "EventName": "GetImportJobs",
    "Description": "Retrieves information about the status and settings of all the import jobs for an application"
  },
  {
    "API": "pinpoint:GetInAppMessages",
    "EventSource": "pinpoint",
    "EventName": "GetInAppMessages",
    "Description": "Retrieves the in-app messages targeted for the provided endpoint ID"
  },
  {
    "API": "pinpoint:GetInAppTemplate",
    "EventSource": "pinpoint",
    "EventName": "GetInAppTemplate",
    "Description": "Retrieves the content and settings of a message template for messages sent through the in-app channel"
  },
  {
    "API": "pinpoint:GetJourney",
    "EventSource": "pinpoint",
    "EventName": "GetJourney",
    "Description": "Retrieves information about the status, configuration, and other settings for a journey"
  },
  {
    "API": "pinpoint:GetJourneyDateRangeKpi",
    "EventSource": "pinpoint",
    "EventName": "GetJourneyDateRangeKpi",
    "Description": "Retrieves (queries) pre-aggregated data for a standard engagement metric that applies to a journey"
  },
  {
    "API": "pinpoint:GetJourneyExecutionActivityMetrics",
    "EventSource": "pinpoint",
    "EventName": "GetJourneyExecutionActivityMetrics",
    "Description": "Retrieves (queries) pre-aggregated data for a standard execution metric that applies to a journey activity"
  },
  {
    "API": "pinpoint:GetJourneyExecutionMetrics",
    "EventSource": "pinpoint",
    "EventName": "GetJourneyExecutionMetrics",
    "Description": "Retrieves (queries) pre-aggregated data for a standard execution metric that applies to a journey"
  },
  {
    "API": "pinpoint:GetJourneyRunExecutionActivityMetrics",
    "EventSource": "pinpoint",
    "EventName": "GetJourneyRunExecutionActivityMetrics",
    "Description": "Retrieves (queries) pre-aggregated data for a standard run execution metric that applies to a journey activity"
  },
  {
    "API": "pinpoint:GetJourneyRunExecutionMetrics",
    "EventSource": "pinpoint",
    "EventName": "GetJourneyRunExecutionMetrics",
    "Description": "Retrieves (queries) pre-aggregated data for a standard run execution metric that applies to a journey"
  },
  {
    "API": "pinpoint:GetJourneyRuns",
    "EventSource": "pinpoint",
    "EventName": "GetJourneyRuns",
    "Description": "Provides information about the runs of a journey"
  },
  {
    "API": "pinpoint:GetPushTemplate",
    "EventSource": "pinpoint",
    "EventName": "GetPushTemplate",
    "Description": "Retrieves the content and settings of a message template for messages that are sent through a push notification channel"
  },
  {
    "API": "pinpoint:GetRecommenderConfiguration",
    "EventSource": "pinpoint",
    "EventName": "GetRecommenderConfiguration",
    "Description": "Retrieves information about an Amazon Pinpoint configuration for a recommender model"
  },
  {
    "API": "pinpoint:GetRecommenderConfigurations",
    "EventSource": "pinpoint",
    "EventName": "GetRecommenderConfigurations",
    "Description": "Retrieves information about all the recommender model configurations that are associated with your Amazon Pinpoint account"
  },
  {
    "API": "pinpoint:GetSegment",
    "EventSource": "pinpoint",
    "EventName": "GetSegment",
    "Description": "Retrieves information about the configuration, dimension, and other settings for a specific segment that's associated with an application"
  },
  {
    "API": "pinpoint:GetSegmentExportJobs",
    "EventSource": "pinpoint",
    "EventName": "GetSegmentExportJobs",
    "Description": "Retrieves information about the status and settings of the export jobs for a segment"
  },
  {
    "API": "pinpoint:GetSegmentImportJobs",
    "EventSource": "pinpoint",
    "EventName": "GetSegmentImportJobs",
    "Description": "Retrieves information about the status and settings of the import jobs for a segment"
  },
  {
    "API": "pinpoint:GetSegmentVersion",
    "EventSource": "pinpoint",
    "EventName": "GetSegmentVersion",
    "Description": "Retrieves information about the configuration, dimension, and other settings for a specific version of a segment that's associated with an application"
  },
  {
    "API": "pinpoint:GetSegmentVersions",
    "EventSource": "pinpoint",
    "EventName": "GetSegmentVersions",
    "Description": "Retrieves information about the configuration, dimension, and other settings for all the versions of a specific segment that's associated with an application"
  },
  {
    "API": "pinpoint:GetSegments",
    "EventSource": "pinpoint",
    "EventName": "GetSegments",
    "Description": "Retrieves information about the configuration, dimension, and other settings for all the segments that are associated with an application"
  },
  {
    "API": "pinpoint:GetSmsChannel",
    "EventSource": "pinpoint",
    "EventName": "GetSmsChannel",
    "Description": "Retrieves information about the status and settings of the SMS channel for an application"
  },
  {
    "API": "pinpoint:GetSmsTemplate",
    "EventSource": "pinpoint",
    "EventName": "GetSmsTemplate",
    "Description": "Retrieves the content and settings of a message template for messages that are sent through the SMS channel"
  },
  {
    "API": "pinpoint:GetUserEndpoints",
    "EventSource": "pinpoint",
    "EventName": "GetUserEndpoints",
    "Description": "Retrieves information about all the endpoints that are associated with a specific user ID"
  },
  {
    "API": "pinpoint:GetVoiceChannel",
    "EventSource": "pinpoint",
    "EventName": "GetVoiceChannel",
    "Description": "Retrieves information about the status and settings of the voice channel for an application"
  },
  {
    "API": "pinpoint:GetVoiceTemplate",
    "EventSource": "pinpoint",
    "EventName": "GetVoiceTemplate",
    "Description": "Retrieves the content and settings of a message template for messages that are sent through the voice channel"
  },
  {
    "API": "pinpoint:ListJourneys",
    "EventSource": "pinpoint",
    "EventName": "ListJourneys",
    "Description": "Retrieves information about the status, configuration, and other settings for all the journeys that are associated with an application"
  },
  {
    "API": "pinpoint:ListTagsForResource",
    "EventSource": "pinpoint",
    "EventName": "ListTagsForResource",
    "Description": "Retrieves all the tags (keys and values) that are associated with an application, campaign, message template, or segment"
  },
  {
    "API": "pinpoint:ListTemplateVersions",
    "EventSource": "pinpoint",
    "EventName": "ListTemplateVersions",
    "Description": "Retrieves information about all the versions of a specific message template"
  },
  {
    "API": "pinpoint:ListTemplates",
    "EventSource": "pinpoint",
    "EventName": "ListTemplates",
    "Description": "Retrieves information about all the message templates that are associated with your Amazon Pinpoint account"
  },
  {
    "API": "pinpoint:PhoneNumberValidate",
    "EventSource": "pinpoint",
    "EventName": "PhoneNumberValidate",
    "Description": "Retrieves information about a phone number"
  },
  {
    "API": "pinpoint:PutEventStream",
    "EventSource": "pinpoint",
    "EventName": "PutEventStream",
    "Description": "Creates a new event stream for an application or updates the settings of an existing event stream for an application"
  },
  {
    "API": "pinpoint:PutEvents",
    "EventSource": "pinpoint",
    "EventName": "PutEvents",
    "Description": "Creates a new event to record for endpoints, or creates or updates endpoint data that existing events are associated with"
  },
  {
    "API": "pinpoint:RemoveAttributes",
    "EventSource": "pinpoint",
    "EventName": "RemoveAttributes",
    "Description": "Removes one or more custom attributes, of the same attribute type, from the application"
  },
  {
    "API": "pinpoint:SendMessages",
    "EventSource": "pinpoint",
    "EventName": "SendMessages",
    "Description": "Creates and sends a direct message"
  },
  {
    "API": "pinpoint:SendOtpMessage",
    "EventSource": "pinpoint",
    "EventName": "SendOtpMessage",
    "Description": "Send an OTP message"
  },
  {
    "API": "pinpoint:SendUsersMessages",
    "EventSource": "pinpoint",
    "EventName": "SendUsersMessages",
    "Description": "Creates and sends a message to a list of users"
  },
  {
    "API": "pinpoint:TagResource",
    "EventSource": "pinpoint",
    "EventName": "TagResource",
    "Description": "Adds one or more tags (keys and values) to an application, campaign, message template, or segment"
  },
  {
    "API": "pinpoint:UntagResource",
    "EventSource": "pinpoint",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags (keys and values) from an application, campaign, message template, or segment"
  },
  {
    "API": "pinpoint:UpdateAdmChannel",
    "EventSource": "pinpoint",
    "EventName": "UpdateAdmChannel",
    "Description": "Enables the ADM channel for an application or updates the status and settings of the ADM channel for an application"
  },
  {
    "API": "pinpoint:UpdateApnsChannel",
    "EventSource": "pinpoint",
    "EventName": "UpdateApnsChannel",
    "Description": "Enables the APNs channel for an application or updates the status and settings of the APNs channel for an application"
  },
  {
    "API": "pinpoint:UpdateApnsSandboxChannel",
    "EventSource": "pinpoint",
    "EventName": "UpdateApnsSandboxChannel",
    "Description": "Enables the APNs sandbox channel for an application or updates the status and settings of the APNs sandbox channel for an application"
  },
  {
    "API": "pinpoint:UpdateApnsVoipChannel",
    "EventSource": "pinpoint",
    "EventName": "UpdateApnsVoipChannel",
    "Description": "Enables the APNs VoIP channel for an application or updates the status and settings of the APNs VoIP channel for an application"
  },
  {
    "API": "pinpoint:UpdateApnsVoipSandboxChannel",
    "EventSource": "pinpoint",
    "EventName": "UpdateApnsVoipSandboxChannel",
    "Description": "Enables the APNs VoIP sandbox channel for an application or updates the status and settings of the APNs VoIP sandbox channel for an application"
  },
  {
    "API": "pinpoint:UpdateApplicationSettings",
    "EventSource": "pinpoint",
    "EventName": "UpdateApplicationSettings",
    "Description": "Updates the settings for an application"
  },
  {
    "API": "pinpoint:UpdateBaiduChannel",
    "EventSource": "pinpoint",
    "EventName": "UpdateBaiduChannel",
    "Description": "Enables the Baidu channel for an application or updates the status and settings of the Baidu channel for an application"
  },
  {
    "API": "pinpoint:UpdateCampaign",
    "EventSource": "pinpoint",
    "EventName": "UpdateCampaign",
    "Description": "Updates the configuration and other settings for a campaign"
  },
  {
    "API": "pinpoint:UpdateEmailChannel",
    "EventSource": "pinpoint",
    "EventName": "UpdateEmailChannel",
    "Description": "Enables the email channel for an application or updates the status and settings of the email channel for an application"
  },
  {
    "API": "pinpoint:UpdateEmailTemplate",
    "EventSource": "pinpoint",
    "EventName": "UpdateEmailTemplate",
    "Description": "Updates an existing message template for messages that are sent through the email channel"
  },
  {
    "API": "pinpoint:UpdateEndpoint",
    "EventSource": "pinpoint",
    "EventName": "UpdateEndpoint",
    "Description": "Creates a new endpoint for an application or updates the settings and attributes of an existing endpoint for an application"
  },
  {
    "API": "pinpoint:UpdateEndpointsBatch",
    "EventSource": "pinpoint",
    "EventName": "UpdateEndpointsBatch",
    "Description": "Creates a new batch of endpoints for an application or updates the settings and attributes of a batch of existing endpoints for an application"
  },
  {
    "API": "pinpoint:UpdateGcmChannel",
    "EventSource": "pinpoint",
    "EventName": "UpdateGcmChannel",
    "Description": "Enables the GCM channel for an application or updates the status and settings of the GCM channel for an application"
  },
  {
    "API": "pinpoint:UpdateInAppTemplate",
    "EventSource": "pinpoint",
    "EventName": "UpdateInAppTemplate",
    "Description": "Updates an existing message template for messages sent through the in-app message channel"
  },
  {
    "API": "pinpoint:UpdateJourney",
    "EventSource": "pinpoint",
    "EventName": "UpdateJourney",
    "Description": "Updates the configuration and other settings for a journey"
  },
  {
    "API": "pinpoint:UpdateJourneyState",
    "EventSource": "pinpoint",
    "EventName": "UpdateJourneyState",
    "Description": "Cancels (stops) an active journey"
  },
  {
    "API": "pinpoint:UpdatePushTemplate",
    "EventSource": "pinpoint",
    "EventName": "UpdatePushTemplate",
    "Description": "Updates an existing message template for messages that are sent through a push notification channel"
  },
  {
    "API": "pinpoint:UpdateRecommenderConfiguration",
    "EventSource": "pinpoint",
    "EventName": "UpdateRecommenderConfiguration",
    "Description": "Updates an Amazon Pinpoint configuration for a recommender model"
  },
  {
    "API": "pinpoint:UpdateSegment",
    "EventSource": "pinpoint",
    "EventName": "UpdateSegment",
    "Description": "Creates a new segment for an application or updates the configuration, dimension, and other settings for an existing segment that's associated with an application"
  },
  {
    "API": "pinpoint:UpdateSmsChannel",
    "EventSource": "pinpoint",
    "EventName": "UpdateSmsChannel",
    "Description": "Enables the SMS channel for an application or updates the status and settings of the SMS channel for an application"
  },
  {
    "API": "pinpoint:UpdateSmsTemplate",
    "EventSource": "pinpoint",
    "EventName": "UpdateSmsTemplate",
    "Description": "Updates an existing message template for messages that are sent through the SMS channel"
  },
  {
    "API": "pinpoint:UpdateTemplateActiveVersion",
    "EventSource": "pinpoint",
    "EventName": "UpdateTemplateActiveVersion",
    "Description": "Changes the status of a specific version of a message template to *active*"
  },
  {
    "API": "pinpoint:UpdateVoiceChannel",
    "EventSource": "pinpoint",
    "EventName": "UpdateVoiceChannel",
    "Description": "Enables the voice channel for an application or updates the status and settings of the voice channel for an application"
  },
  {
    "API": "pinpoint:UpdateVoiceTemplate",
    "EventSource": "pinpoint",
    "EventName": "UpdateVoiceTemplate",
    "Description": "Updates an existing message template for messages that are sent through the voice channel"
  },
  {
    "API": "pinpoint:VerifyOtpMessage",
    "EventSource": "pinpoint",
    "EventName": "VerifyOtpMessage",
    "Description": "Verify an OTP"
  },
  {
    "API": "pinpoint-email:CreateConfigurationSet",
    "EventSource": "pinpoint-email",
    "EventName": "CreateConfigurationSet",
    "Description": "Create a configuration set"
  },
  {
    "API": "pinpoint-email:CreateConfigurationSetEventDestination",
    "EventSource": "pinpoint-email",
    "EventName": "CreateConfigurationSetEventDestination",
    "Description": "Create an event destination"
  },
  {
    "API": "pinpoint-email:CreateDedicatedIpPool",
    "EventSource": "pinpoint-email",
    "EventName": "CreateDedicatedIpPool",
    "Description": "Create a new pool of dedicated IP addresses"
  },
  {
    "API": "pinpoint-email:CreateDeliverabilityTestReport",
    "EventSource": "pinpoint-email",
    "EventName": "CreateDeliverabilityTestReport",
    "Description": "Create a new predictive inbox placement test"
  },
  {
    "API": "pinpoint-email:CreateEmailIdentity",
    "EventSource": "pinpoint-email",
    "EventName": "CreateEmailIdentity",
    "Description": "Verifies an email identity for use with Amazon Pinpoint"
  },
  {
    "API": "pinpoint-email:DeleteConfigurationSet",
    "EventSource": "pinpoint-email",
    "EventName": "DeleteConfigurationSet",
    "Description": "Delete an existing configuration set"
  },
  {
    "API": "pinpoint-email:DeleteConfigurationSetEventDestination",
    "EventSource": "pinpoint-email",
    "EventName": "DeleteConfigurationSetEventDestination",
    "Description": "Delete an event destination"
  },
  {
    "API": "pinpoint-email:DeleteDedicatedIpPool",
    "EventSource": "pinpoint-email",
    "EventName": "DeleteDedicatedIpPool",
    "Description": "Delete a dedicated IP pool"
  },
  {
    "API": "pinpoint-email:DeleteEmailIdentity",
    "EventSource": "pinpoint-email",
    "EventName": "DeleteEmailIdentity",
    "Description": "Deletes an email identity that you previously verified for use with Amazon Pinpoint"
  },
  {
    "API": "pinpoint-email:GeneratePresignedUrl",
    "EventSource": "pinpoint-email",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "pinpoint-email:GetAccount",
    "EventSource": "pinpoint-email",
    "EventName": "GetAccount",
    "Description": "Obtain information about the email-sending status and capabilities of your Amazon Pinpoint account in the current AWS Region"
  },
  {
    "API": "pinpoint-email:GetBlacklistReports",
    "EventSource": "pinpoint-email",
    "EventName": "GetBlacklistReports",
    "Description": "Retrieve a list of the blacklists that your dedicated IP addresses appear on"
  },
  {
    "API": "pinpoint-email:GetConfigurationSet",
    "EventSource": "pinpoint-email",
    "EventName": "GetConfigurationSet",
    "Description": "Get information about an existing configuration set, including the dedicated IP pool that it's associated with, whether or not it's enabled for sending email, and more"
  },
  {
    "API": "pinpoint-email:GetConfigurationSetEventDestinations",
    "EventSource": "pinpoint-email",
    "EventName": "GetConfigurationSetEventDestinations",
    "Description": "Retrieve a list of event destinations that are associated with a configuration set"
  },
  {
    "API": "pinpoint-email:GetDedicatedIp",
    "EventSource": "pinpoint-email",
    "EventName": "GetDedicatedIp",
    "Description": "Get information about a dedicated IP address, including the name of the dedicated IP pool that it's associated with, as well information about the automatic warm-up process for the address"
  },
  {
    "API": "pinpoint-email:GetDedicatedIps",
    "EventSource": "pinpoint-email",
    "EventName": "GetDedicatedIps",
    "Description": "List the dedicated IP addresses that are associated with your Amazon Pinpoint account"
  },
  {
    "API": "pinpoint-email:GetDeliverabilityDashboardOptions",
    "EventSource": "pinpoint-email",
    "EventName": "GetDeliverabilityDashboardOptions",
    "Description": "Retrieve information about the status of the Deliverability dashboard for your Amazon Pinpoint account"
  },
  {
    "API": "pinpoint-email:GetDeliverabilityTestReport",
    "EventSource": "pinpoint-email",
    "EventName": "GetDeliverabilityTestReport",
    "Description": "Retrieve the results of a predictive inbox placement test"
  },
  {
    "API": "pinpoint-email:GetDomainDeliverabilityCampaign",
    "EventSource": "pinpoint-email",
    "EventName": "GetDomainDeliverabilityCampaign",
    "Description": "Retrieve all the deliverability data for a specific campaign"
  },
  {
    "API": "pinpoint-email:GetDomainStatisticsReport",
    "EventSource": "pinpoint-email",
    "EventName": "GetDomainStatisticsReport",
    "Description": "Retrieve inbox placement and engagement rates for the domains that you use to send email"
  },
  {
    "API": "pinpoint-email:GetEmailIdentity",
    "EventSource": "pinpoint-email",
    "EventName": "GetEmailIdentity",
    "Description": "Provides information about a specific identity associated with your Amazon Pinpoint account, including the identity's verification status, its DKIM authentication status, and its custom Mail-From settings"
  },
  {
    "API": "pinpoint-email:ListConfigurationSets",
    "EventSource": "pinpoint-email",
    "EventName": "ListConfigurationSets",
    "Description": "List all of the configuration sets associated with your Amazon Pinpoint account in the current region"
  },
  {
    "API": "pinpoint-email:ListDedicatedIpPools",
    "EventSource": "pinpoint-email",
    "EventName": "ListDedicatedIpPools",
    "Description": "List all of the dedicated IP pools that exist in your Amazon Pinpoint account in the current AWS Region"
  },
  {
    "API": "pinpoint-email:ListDeliverabilityTestReports",
    "EventSource": "pinpoint-email",
    "EventName": "ListDeliverabilityTestReports",
    "Description": "Show a list of the predictive inbox placement tests that you've performed, regardless of their statuses"
  },
  {
    "API": "pinpoint-email:ListDomainDeliverabilityCampaigns",
    "EventSource": "pinpoint-email",
    "EventName": "ListDomainDeliverabilityCampaigns",
    "Description": "Retrieve deliverability data for all the campaigns that used a specific domain to send email during a specified time range"
  },
  {
    "API": "pinpoint-email:ListEmailIdentities",
    "EventSource": "pinpoint-email",
    "EventName": "ListEmailIdentities",
    "Description": "Returns a list of all of the email identities that are associated with your Amazon Pinpoint account"
  },
  {
    "API": "pinpoint-email:ListTagsForResource",
    "EventSource": "pinpoint-email",
    "EventName": "ListTagsForResource",
    "Description": "Retrieve a list of the tags (keys and values) that are associated with a specified resource"
  },
  {
    "API": "pinpoint-email:PutAccountDedicatedIpWarmupAttributes",
    "EventSource": "pinpoint-email",
    "EventName": "PutAccountDedicatedIpWarmupAttributes",
    "Description": "Enable or disable the automatic warm-up feature for dedicated IP addresses"
  },
  {
    "API": "pinpoint-email:PutAccountSendingAttributes",
    "EventSource": "pinpoint-email",
    "EventName": "PutAccountSendingAttributes",
    "Description": "Enable or disable the ability of your account to send email"
  },
  {
    "API": "pinpoint-email:PutConfigurationSetDeliveryOptions",
    "EventSource": "pinpoint-email",
    "EventName": "PutConfigurationSetDeliveryOptions",
    "Description": "Associate a configuration set with a dedicated IP pool"
  },
  {
    "API": "pinpoint-email:PutConfigurationSetReputationOptions",
    "EventSource": "pinpoint-email",
    "EventName": "PutConfigurationSetReputationOptions",
    "Description": "Enable or disable collection of reputation metrics for emails that you send using a particular configuration set in a specific AWS Region"
  },
  {
    "API": "pinpoint-email:PutConfigurationSetSendingOptions",
    "EventSource": "pinpoint-email",
    "EventName": "PutConfigurationSetSendingOptions",
    "Description": "Enable or disable email sending for messages that use a particular configuration set in a specific AWS Region"
  },
  {
    "API": "pinpoint-email:PutConfigurationSetTrackingOptions",
    "EventSource": "pinpoint-email",
    "EventName": "PutConfigurationSetTrackingOptions",
    "Description": "Specify a custom domain to use for open and click tracking elements in email that you send using Amazon Pinpoint"
  },
  {
    "API": "pinpoint-email:PutDedicatedIpInPool",
    "EventSource": "pinpoint-email",
    "EventName": "PutDedicatedIpInPool",
    "Description": "Move a dedicated IP address to an existing dedicated IP pool"
  },
  {
    "API": "pinpoint-email:PutDedicatedIpWarmupAttributes",
    "EventSource": "pinpoint-email",
    "EventName": "PutDedicatedIpWarmupAttributes",
    "Description": "See also: `AWS API Documentation <https://docs"
  },
  {
    "API": "pinpoint-email:PutDeliverabilityDashboardOption",
    "EventSource": "pinpoint-email",
    "EventName": "PutDeliverabilityDashboardOption",
    "Description": "Enable or disable the Deliverability dashboard for your Amazon Pinpoint account"
  },
  {
    "API": "pinpoint-email:PutEmailIdentityDkimAttributes",
    "EventSource": "pinpoint-email",
    "EventName": "PutEmailIdentityDkimAttributes",
    "Description": "Used to enable or disable DKIM authentication for an email identity"
  },
  {
    "API": "pinpoint-email:PutEmailIdentityFeedbackAttributes",
    "EventSource": "pinpoint-email",
    "EventName": "PutEmailIdentityFeedbackAttributes",
    "Description": "Used to enable or disable feedback forwarding for an identity"
  },
  {
    "API": "pinpoint-email:PutEmailIdentityMailFromAttributes",
    "EventSource": "pinpoint-email",
    "EventName": "PutEmailIdentityMailFromAttributes",
    "Description": "Used to enable or disable the custom Mail-From domain configuration for an email identity"
  },
  {
    "API": "pinpoint-email:SendEmail",
    "EventSource": "pinpoint-email",
    "EventName": "SendEmail",
    "Description": "Sends an email message"
  },
  {
    "API": "pinpoint-email:TagResource",
    "EventSource": "pinpoint-email",
    "EventName": "TagResource",
    "Description": "Add one or more tags (keys and values) to a specified resource"
  },
  {
    "API": "pinpoint-email:UntagResource",
    "EventSource": "pinpoint-email",
    "EventName": "UntagResource",
    "Description": "Remove one or more tags (keys and values) from a specified resource"
  },
  {
    "API": "pinpoint-email:UpdateConfigurationSetEventDestination",
    "EventSource": "pinpoint-email",
    "EventName": "UpdateConfigurationSetEventDestination",
    "Description": "Update the configuration of an event destination for a configuration set"
  },
  {
    "API": "pinpoint-sms-voice:CreateConfigurationSet",
    "EventSource": "pinpoint-sms-voice",
    "EventName": "CreateConfigurationSet",
    "Description": "Create a new configuration set"
  },
  {
    "API": "pinpoint-sms-voice:CreateConfigurationSetEventDestination",
    "EventSource": "pinpoint-sms-voice",
    "EventName": "CreateConfigurationSetEventDestination",
    "Description": "Create a new event destination in a configuration set"
  },
  {
    "API": "pinpoint-sms-voice:DeleteConfigurationSet",
    "EventSource": "pinpoint-sms-voice",
    "EventName": "DeleteConfigurationSet",
    "Description": "Deletes an existing configuration set"
  },
  {
    "API": "pinpoint-sms-voice:DeleteConfigurationSetEventDestination",
    "EventSource": "pinpoint-sms-voice",
    "EventName": "DeleteConfigurationSetEventDestination",
    "Description": "Deletes an event destination in a configuration set"
  },
  {
    "API": "pinpoint-sms-voice:GeneratePresignedUrl",
    "EventSource": "pinpoint-sms-voice",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "pinpoint-sms-voice:GetConfigurationSetEventDestinations",
    "EventSource": "pinpoint-sms-voice",
    "EventName": "GetConfigurationSetEventDestinations",
    "Description": "Obtain information about an event destination, including the types of events it reports, the Amazon Resource Name (ARN) of the destination, and the name of the event destination"
  },
  {
    "API": "pinpoint-sms-voice:SendVoiceMessage",
    "EventSource": "pinpoint-sms-voice",
    "EventName": "SendVoiceMessage",
    "Description": "Create a new voice message and send it to a recipient's phone number"
  },
  {
    "API": "pinpoint-sms-voice:UpdateConfigurationSetEventDestination",
    "EventSource": "pinpoint-sms-voice",
    "EventName": "UpdateConfigurationSetEventDestination",
    "Description": "Update an event destination in a configuration set"
  },
  {
    "API": "pinpoint-sms-voice-v2:AssociateOriginationIdentity",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "AssociateOriginationIdentity",
    "Description": "Associates the specified origination identity with a pool"
  },
  {
    "API": "pinpoint-sms-voice-v2:AssociateProtectConfiguration",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "AssociateProtectConfiguration",
    "Description": "Associate a protect configuration with a configuration set"
  },
  {
    "API": "pinpoint-sms-voice-v2:CreateConfigurationSet",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "CreateConfigurationSet",
    "Description": "Creates a new configuration set"
  },
  {
    "API": "pinpoint-sms-voice-v2:CreateEventDestination",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "CreateEventDestination",
    "Description": "Creates a new event destination in a configuration set"
  },
  {
    "API": "pinpoint-sms-voice-v2:CreateOptOutList",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "CreateOptOutList",
    "Description": "Creates a new opt-out list"
  },
  {
    "API": "pinpoint-sms-voice-v2:CreatePool",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "CreatePool",
    "Description": "Creates a new pool and associates the specified origination identity to the pool"
  },
  {
    "API": "pinpoint-sms-voice-v2:CreateProtectConfiguration",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "CreateProtectConfiguration",
    "Description": "Create a new protect configuration"
  },
  {
    "API": "pinpoint-sms-voice-v2:CreateRegistration",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "CreateRegistration",
    "Description": "Creates a new registration based on the **RegistrationType** field"
  },
  {
    "API": "pinpoint-sms-voice-v2:CreateRegistrationAssociation",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "CreateRegistrationAssociation",
    "Description": "Associate the registration with an origination identity such as a phone number or sender ID"
  },
  {
    "API": "pinpoint-sms-voice-v2:CreateRegistrationAttachment",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "CreateRegistrationAttachment",
    "Description": "Create a new registration attachment to use for uploading a file or a URL to a file"
  },
  {
    "API": "pinpoint-sms-voice-v2:CreateRegistrationVersion",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "CreateRegistrationVersion",
    "Description": "Create a new version of the registration and increase the **VersionNumber**"
  },
  {
    "API": "pinpoint-sms-voice-v2:CreateVerifiedDestinationNumber",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "CreateVerifiedDestinationNumber",
    "Description": "You can only send messages to verified destination numbers when your account is in the sandbox"
  },
  {
    "API": "pinpoint-sms-voice-v2:DeleteAccountDefaultProtectConfiguration",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "DeleteAccountDefaultProtectConfiguration",
    "Description": "Removes the current account default protect configuration"
  },
  {
    "API": "pinpoint-sms-voice-v2:DeleteConfigurationSet",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "DeleteConfigurationSet",
    "Description": "Deletes an existing configuration set"
  },
  {
    "API": "pinpoint-sms-voice-v2:DeleteDefaultMessageType",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "DeleteDefaultMessageType",
    "Description": "Deletes an existing default message type on a configuration set"
  },
  {
    "API": "pinpoint-sms-voice-v2:DeleteDefaultSenderId",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "DeleteDefaultSenderId",
    "Description": "Deletes an existing default sender ID on a configuration set"
  },
  {
    "API": "pinpoint-sms-voice-v2:DeleteEventDestination",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "DeleteEventDestination",
    "Description": "Deletes an existing event destination"
  },
  {
    "API": "pinpoint-sms-voice-v2:DeleteKeyword",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "DeleteKeyword",
    "Description": "Deletes an existing keyword from an origination phone number or pool"
  },
  {
    "API": "pinpoint-sms-voice-v2:DeleteMediaMessageSpendLimitOverride",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "DeleteMediaMessageSpendLimitOverride",
    "Description": "Deletes an account-level monthly spending limit override for sending multimedia messages (MMS)"
  },
  {
    "API": "pinpoint-sms-voice-v2:DeleteOptOutList",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "DeleteOptOutList",
    "Description": "Deletes an existing opt-out list"
  },
  {
    "API": "pinpoint-sms-voice-v2:DeleteOptedOutNumber",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "DeleteOptedOutNumber",
    "Description": "Deletes an existing opted out destination phone number from the specified opt-out list"
  },
  {
    "API": "pinpoint-sms-voice-v2:DeletePool",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "DeletePool",
    "Description": "Deletes an existing pool"
  },
  {
    "API": "pinpoint-sms-voice-v2:DeleteProtectConfiguration",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "DeleteProtectConfiguration",
    "Description": "Permanently delete the protect configuration"
  },
  {
    "API": "pinpoint-sms-voice-v2:DeleteRegistration",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "DeleteRegistration",
    "Description": "Permanently delete an existing registration from your account"
  },
  {
    "API": "pinpoint-sms-voice-v2:DeleteRegistrationAttachment",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "DeleteRegistrationAttachment",
    "Description": "Permanently delete the specified registration attachment"
  },
  {
    "API": "pinpoint-sms-voice-v2:DeleteRegistrationFieldValue",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "DeleteRegistrationFieldValue",
    "Description": "Delete the value in a registration form field"
  },
  {
    "API": "pinpoint-sms-voice-v2:DeleteTextMessageSpendLimitOverride",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "DeleteTextMessageSpendLimitOverride",
    "Description": "Deletes an account-level monthly spending limit override for sending text messages"
  },
  {
    "API": "pinpoint-sms-voice-v2:DeleteVerifiedDestinationNumber",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "DeleteVerifiedDestinationNumber",
    "Description": "Delete a verified destination phone number"
  },
  {
    "API": "pinpoint-sms-voice-v2:DeleteVoiceMessageSpendLimitOverride",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "DeleteVoiceMessageSpendLimitOverride",
    "Description": "Deletes an account level monthly spend limit override for sending voice messages"
  },
  {
    "API": "pinpoint-sms-voice-v2:DescribeAccountAttributes",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "DescribeAccountAttributes",
    "Description": "Describes attributes of your Amazon Web Services account"
  },
  {
    "API": "pinpoint-sms-voice-v2:DescribeAccountLimits",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "DescribeAccountLimits",
    "Description": "Describes the current Amazon Pinpoint SMS Voice V2 resource quotas for your account"
  },
  {
    "API": "pinpoint-sms-voice-v2:DescribeConfigurationSets",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "DescribeConfigurationSets",
    "Description": "Describes the specified configuration sets or all in your account"
  },
  {
    "API": "pinpoint-sms-voice-v2:DescribeKeywords",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "DescribeKeywords",
    "Description": "Describes the specified keywords or all keywords on your origination phone number or pool"
  },
  {
    "API": "pinpoint-sms-voice-v2:DescribeOptOutLists",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "DescribeOptOutLists",
    "Description": "Describes the specified opt-out list or all opt-out lists in your account"
  },
  {
    "API": "pinpoint-sms-voice-v2:DescribeOptedOutNumbers",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "DescribeOptedOutNumbers",
    "Description": "Describes the specified opted out destination numbers or all opted out destination numbers in an opt-out list"
  },
  {
    "API": "pinpoint-sms-voice-v2:DescribePhoneNumbers",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "DescribePhoneNumbers",
    "Description": "Describes the specified origination phone number, or all the phone numbers in your account"
  },
  {
    "API": "pinpoint-sms-voice-v2:DescribePools",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "DescribePools",
    "Description": "Retrieves the specified pools or all pools associated with your Amazon Web Services account"
  },
  {
    "API": "pinpoint-sms-voice-v2:DescribeProtectConfigurations",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "DescribeProtectConfigurations",
    "Description": "Retrieves the protect configurations that match any of filters"
  },
  {
    "API": "pinpoint-sms-voice-v2:DescribeRegistrationAttachments",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "DescribeRegistrationAttachments",
    "Description": "Retrieves the specified registration attachments or all registration attachments associated with your Amazon Web Services account"
  },
  {
    "API": "pinpoint-sms-voice-v2:DescribeRegistrationFieldDefinitions",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "DescribeRegistrationFieldDefinitions",
    "Description": "Retrieves the specified registration type field definitions"
  },
  {
    "API": "pinpoint-sms-voice-v2:DescribeRegistrationFieldValues",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "DescribeRegistrationFieldValues",
    "Description": "Retrieves the specified registration field values"
  },
  {
    "API": "pinpoint-sms-voice-v2:DescribeRegistrationSectionDefinitions",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "DescribeRegistrationSectionDefinitions",
    "Description": "Retrieves the specified registration section definitions"
  },
  {
    "API": "pinpoint-sms-voice-v2:DescribeRegistrationTypeDefinitions",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "DescribeRegistrationTypeDefinitions",
    "Description": "Retrieves the specified registration type definitions"
  },
  {
    "API": "pinpoint-sms-voice-v2:DescribeRegistrationVersions",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "DescribeRegistrationVersions",
    "Description": "Retrieves the specified registration version"
  },
  {
    "API": "pinpoint-sms-voice-v2:DescribeRegistrations",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "DescribeRegistrations",
    "Description": "Retrieves the specified registrations"
  },
  {
    "API": "pinpoint-sms-voice-v2:DescribeSenderIds",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "DescribeSenderIds",
    "Description": "Describes the specified SenderIds or all SenderIds associated with your Amazon Web Services account"
  },
  {
    "API": "pinpoint-sms-voice-v2:DescribeSpendLimits",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "DescribeSpendLimits",
    "Description": "Describes the current Amazon Pinpoint monthly spend limits for sending voice and text messages"
  },
  {
    "API": "pinpoint-sms-voice-v2:DescribeVerifiedDestinationNumbers",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "DescribeVerifiedDestinationNumbers",
    "Description": "Retrieves the specified verified destiona numbers"
  },
  {
    "API": "pinpoint-sms-voice-v2:DisassociateOriginationIdentity",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "DisassociateOriginationIdentity",
    "Description": "Removes the specified origination identity from an existing pool"
  },
  {
    "API": "pinpoint-sms-voice-v2:DisassociateProtectConfiguration",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "DisassociateProtectConfiguration",
    "Description": "Disassociate a protect configuration from a configuration set"
  },
  {
    "API": "pinpoint-sms-voice-v2:DiscardRegistrationVersion",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "DiscardRegistrationVersion",
    "Description": "Discard the current version of the registration"
  },
  {
    "API": "pinpoint-sms-voice-v2:GeneratePresignedUrl",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "pinpoint-sms-voice-v2:GetProtectConfigurationCountryRuleSet",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "GetProtectConfigurationCountryRuleSet",
    "Description": "Retrieve the CountryRuleSet for the specified NumberCapability from a protect configuration"
  },
  {
    "API": "pinpoint-sms-voice-v2:ListPoolOriginationIdentities",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "ListPoolOriginationIdentities",
    "Description": "Lists all associated origination identities in your pool"
  },
  {
    "API": "pinpoint-sms-voice-v2:ListRegistrationAssociations",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "ListRegistrationAssociations",
    "Description": "Retreive all of the origination identies that are associated with a registration"
  },
  {
    "API": "pinpoint-sms-voice-v2:ListTagsForResource",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "ListTagsForResource",
    "Description": "List all tags associated with a resource"
  },
  {
    "API": "pinpoint-sms-voice-v2:PutKeyword",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "PutKeyword",
    "Description": "Creates or updates a keyword configuration on an origination phone number or pool"
  },
  {
    "API": "pinpoint-sms-voice-v2:PutOptedOutNumber",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "PutOptedOutNumber",
    "Description": "Creates an opted out destination phone number in the opt-out list"
  },
  {
    "API": "pinpoint-sms-voice-v2:PutRegistrationFieldValue",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "PutRegistrationFieldValue",
    "Description": "Creates or updates a field value for a registration"
  },
  {
    "API": "pinpoint-sms-voice-v2:ReleasePhoneNumber",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "ReleasePhoneNumber",
    "Description": "Releases an existing origination phone number in your account"
  },
  {
    "API": "pinpoint-sms-voice-v2:ReleaseSenderId",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "ReleaseSenderId",
    "Description": "Releases an existing sender ID in your account"
  },
  {
    "API": "pinpoint-sms-voice-v2:RequestPhoneNumber",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "RequestPhoneNumber",
    "Description": "Request an origination phone number for use in your account"
  },
  {
    "API": "pinpoint-sms-voice-v2:RequestSenderId",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "RequestSenderId",
    "Description": "Request a new sender ID that doesn't require registration"
  },
  {
    "API": "pinpoint-sms-voice-v2:SendDestinationNumberVerificationCode",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "SendDestinationNumberVerificationCode",
    "Description": "Before you can send test messages to a verified destination phone number you need to opt-in the verified destination phone number"
  },
  {
    "API": "pinpoint-sms-voice-v2:SendMediaMessage",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "SendMediaMessage",
    "Description": "Creates a new multimedia message (MMS) and sends it to a recipient's phone number"
  },
  {
    "API": "pinpoint-sms-voice-v2:SendTextMessage",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "SendTextMessage",
    "Description": "Creates a new text message and sends it to a recipient's phone number"
  },
  {
    "API": "pinpoint-sms-voice-v2:SendVoiceMessage",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "SendVoiceMessage",
    "Description": "Allows you to send a request that sends a voice message through Amazon Pinpoint"
  },
  {
    "API": "pinpoint-sms-voice-v2:SetAccountDefaultProtectConfiguration",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "SetAccountDefaultProtectConfiguration",
    "Description": "Set a protect configuration as your account default"
  },
  {
    "API": "pinpoint-sms-voice-v2:SetDefaultMessageType",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "SetDefaultMessageType",
    "Description": "Sets the default message type on a configuration set"
  },
  {
    "API": "pinpoint-sms-voice-v2:SetDefaultSenderId",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "SetDefaultSenderId",
    "Description": "Sets default sender ID on a configuration set"
  },
  {
    "API": "pinpoint-sms-voice-v2:SetMediaMessageSpendLimitOverride",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "SetMediaMessageSpendLimitOverride",
    "Description": "Sets an account level monthly spend limit override for sending MMS messages"
  },
  {
    "API": "pinpoint-sms-voice-v2:SetTextMessageSpendLimitOverride",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "SetTextMessageSpendLimitOverride",
    "Description": "Sets an account level monthly spend limit override for sending text messages"
  },
  {
    "API": "pinpoint-sms-voice-v2:SetVoiceMessageSpendLimitOverride",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "SetVoiceMessageSpendLimitOverride",
    "Description": "Sets an account level monthly spend limit override for sending voice messages"
  },
  {
    "API": "pinpoint-sms-voice-v2:SubmitRegistrationVersion",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "SubmitRegistrationVersion",
    "Description": "Submit the specified registration for review and approval"
  },
  {
    "API": "pinpoint-sms-voice-v2:TagResource",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "TagResource",
    "Description": "Adds or overwrites only the specified tags for the specified Amazon Pinpoint SMS Voice, version 2 resource"
  },
  {
    "API": "pinpoint-sms-voice-v2:UntagResource",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "UntagResource",
    "Description": "Removes the association of the specified tags from an Amazon Pinpoint SMS Voice V2 resource"
  },
  {
    "API": "pinpoint-sms-voice-v2:UpdateEventDestination",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "UpdateEventDestination",
    "Description": "Updates an existing event destination in a configuration set"
  },
  {
    "API": "pinpoint-sms-voice-v2:UpdatePhoneNumber",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "UpdatePhoneNumber",
    "Description": "Updates the configuration of an existing origination phone number"
  },
  {
    "API": "pinpoint-sms-voice-v2:UpdatePool",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "UpdatePool",
    "Description": "Updates the configuration of an existing pool"
  },
  {
    "API": "pinpoint-sms-voice-v2:UpdateProtectConfiguration",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "UpdateProtectConfiguration",
    "Description": "Update the setting for an existing protect configuration"
  },
  {
    "API": "pinpoint-sms-voice-v2:UpdateProtectConfigurationCountryRuleSet",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "UpdateProtectConfigurationCountryRuleSet",
    "Description": "Update a country rule set to ``ALLOW`` or ``BLOCK`` messages to be sent to the specified destination counties"
  },
  {
    "API": "pinpoint-sms-voice-v2:UpdateSenderId",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "UpdateSenderId",
    "Description": "Updates the configuration of an existing sender ID"
  },
  {
    "API": "pinpoint-sms-voice-v2:VerifyDestinationNumber",
    "EventSource": "pinpoint-sms-voice-v2",
    "EventName": "VerifyDestinationNumber",
    "Description": "Use the verification code that was received by the verified destination phone number to opt-in the verified destination phone number to receive more messages"
  },
  {
    "API": "pipes:CreatePipe",
    "EventSource": "pipes",
    "EventName": "CreatePipe",
    "Description": "Create a pipe"
  },
  {
    "API": "pipes:DeletePipe",
    "EventSource": "pipes",
    "EventName": "DeletePipe",
    "Description": "Delete an existing pipe"
  },
  {
    "API": "pipes:DescribePipe",
    "EventSource": "pipes",
    "EventName": "DescribePipe",
    "Description": "Get the information about an existing pipe"
  },
  {
    "API": "pipes:GeneratePresignedUrl",
    "EventSource": "pipes",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "pipes:ListPipes",
    "EventSource": "pipes",
    "EventName": "ListPipes",
    "Description": "Get the pipes associated with this account"
  },
  {
    "API": "pipes:ListTagsForResource",
    "EventSource": "pipes",
    "EventName": "ListTagsForResource",
    "Description": "Displays the tags associated with a pipe"
  },
  {
    "API": "pipes:StartPipe",
    "EventSource": "pipes",
    "EventName": "StartPipe",
    "Description": "Start an existing pipe"
  },
  {
    "API": "pipes:StopPipe",
    "EventSource": "pipes",
    "EventName": "StopPipe",
    "Description": "Stop an existing pipe"
  },
  {
    "API": "pipes:TagResource",
    "EventSource": "pipes",
    "EventName": "TagResource",
    "Description": "Assigns one or more tags (key-value pairs) to the specified pipe"
  },
  {
    "API": "pipes:UntagResource",
    "EventSource": "pipes",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags from the specified pipes"
  },
  {
    "API": "pipes:UpdatePipe",
    "EventSource": "pipes",
    "EventName": "UpdatePipe",
    "Description": "Update an existing pipe"
  },
  {
    "API": "polly:DeleteLexicon",
    "EventSource": "polly",
    "EventName": "DeleteLexicon",
    "Description": "Deletes the specified pronunciation lexicon stored in an Amazon Web Services Region"
  },
  {
    "API": "polly:DescribeVoices",
    "EventSource": "polly",
    "EventName": "DescribeVoices",
    "Description": "Returns the list of voices that are available for use when requesting speech synthesis"
  },
  {
    "API": "polly:GeneratePresignedUrl",
    "EventSource": "polly",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "polly:GetLexicon",
    "EventSource": "polly",
    "EventName": "GetLexicon",
    "Description": "Returns the content of the specified pronunciation lexicon stored in an Amazon Web Services Region"
  },
  {
    "API": "polly:GetSpeechSynthesisTask",
    "EventSource": "polly",
    "EventName": "GetSpeechSynthesisTask",
    "Description": "Retrieves a specific SpeechSynthesisTask object based on its TaskID"
  },
  {
    "API": "polly:ListLexicons",
    "EventSource": "polly",
    "EventName": "ListLexicons",
    "Description": "Returns a list of pronunciation lexicons stored in an Amazon Web Services Region"
  },
  {
    "API": "polly:ListSpeechSynthesisTasks",
    "EventSource": "polly",
    "EventName": "ListSpeechSynthesisTasks",
    "Description": "Returns a list of SpeechSynthesisTask objects ordered by their creation date"
  },
  {
    "API": "polly:PutLexicon",
    "EventSource": "polly",
    "EventName": "PutLexicon",
    "Description": "Stores a pronunciation lexicon in an Amazon Web Services Region"
  },
  {
    "API": "polly:StartSpeechSynthesisTask",
    "EventSource": "polly",
    "EventName": "StartSpeechSynthesisTask",
    "Description": "Allows the creation of an asynchronous synthesis task, by starting a new ``SpeechSynthesisTask``"
  },
  {
    "API": "polly:SynthesizeSpeech",
    "EventSource": "polly",
    "EventName": "SynthesizeSpeech",
    "Description": "Synthesizes UTF-8 input, plain text or SSML, to a stream of bytes"
  },
  {
    "API": "pricing:DescribeServices",
    "EventSource": "pricing",
    "EventName": "DescribeServices",
    "Description": "Returns the metadata for one service or a list of the metadata for all services"
  },
  {
    "API": "pricing:GeneratePresignedUrl",
    "EventSource": "pricing",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "pricing:GetAttributeValues",
    "EventSource": "pricing",
    "EventName": "GetAttributeValues",
    "Description": "Returns a list of attribute values"
  },
  {
    "API": "pricing:GetPriceListFileUrl",
    "EventSource": "pricing",
    "EventName": "GetPriceListFileUrl",
    "Description": "This feature is in preview release and is subject to change"
  },
  {
    "API": "pricing:GetProducts",
    "EventSource": "pricing",
    "EventName": "GetProducts",
    "Description": "Returns a list of all products that match the filter criteria"
  },
  {
    "API": "pricing:ListPriceLists",
    "EventSource": "pricing",
    "EventName": "ListPriceLists",
    "Description": "This feature is in preview release and is subject to change"
  },
  {
    "API": "privatenetworks:AcknowledgeOrderReceipt",
    "EventSource": "privatenetworks",
    "EventName": "AcknowledgeOrderReceipt",
    "Description": "Acknowledges that the specified network order was received"
  },
  {
    "API": "privatenetworks:ActivateDeviceIdentifier",
    "EventSource": "privatenetworks",
    "EventName": "ActivateDeviceIdentifier",
    "Description": "Activates the specified device identifier"
  },
  {
    "API": "privatenetworks:ActivateNetworkSite",
    "EventSource": "privatenetworks",
    "EventName": "ActivateNetworkSite",
    "Description": "Activates the specified network site"
  },
  {
    "API": "privatenetworks:ConfigureAccessPoint",
    "EventSource": "privatenetworks",
    "EventName": "ConfigureAccessPoint",
    "Description": "Configures the specified network resource"
  },
  {
    "API": "privatenetworks:CreateNetwork",
    "EventSource": "privatenetworks",
    "EventName": "CreateNetwork",
    "Description": "Creates a network"
  },
  {
    "API": "privatenetworks:CreateNetworkSite",
    "EventSource": "privatenetworks",
    "EventName": "CreateNetworkSite",
    "Description": "Creates a network site"
  },
  {
    "API": "privatenetworks:DeactivateDeviceIdentifier",
    "EventSource": "privatenetworks",
    "EventName": "DeactivateDeviceIdentifier",
    "Description": "Deactivates the specified device identifier"
  },
  {
    "API": "privatenetworks:DeleteNetwork",
    "EventSource": "privatenetworks",
    "EventName": "DeleteNetwork",
    "Description": "Deletes the specified network"
  },
  {
    "API": "privatenetworks:DeleteNetworkSite",
    "EventSource": "privatenetworks",
    "EventName": "DeleteNetworkSite",
    "Description": "Deletes the specified network site"
  },
  {
    "API": "privatenetworks:GeneratePresignedUrl",
    "EventSource": "privatenetworks",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "privatenetworks:GetDeviceIdentifier",
    "EventSource": "privatenetworks",
    "EventName": "GetDeviceIdentifier",
    "Description": "Gets the specified device identifier"
  },
  {
    "API": "privatenetworks:GetNetwork",
    "EventSource": "privatenetworks",
    "EventName": "GetNetwork",
    "Description": "Gets the specified network"
  },
  {
    "API": "privatenetworks:GetNetworkResource",
    "EventSource": "privatenetworks",
    "EventName": "GetNetworkResource",
    "Description": "Gets the specified network resource"
  },
  {
    "API": "privatenetworks:GetNetworkSite",
    "EventSource": "privatenetworks",
    "EventName": "GetNetworkSite",
    "Description": "Gets the specified network site"
  },
  {
    "API": "privatenetworks:GetOrder",
    "EventSource": "privatenetworks",
    "EventName": "GetOrder",
    "Description": "Gets the specified order"
  },
  {
    "API": "privatenetworks:ListDeviceIdentifiers",
    "EventSource": "privatenetworks",
    "EventName": "ListDeviceIdentifiers",
    "Description": "Lists device identifiers"
  },
  {
    "API": "privatenetworks:ListNetworkResources",
    "EventSource": "privatenetworks",
    "EventName": "ListNetworkResources",
    "Description": "Lists network resources"
  },
  {
    "API": "privatenetworks:ListNetworkSites",
    "EventSource": "privatenetworks",
    "EventName": "ListNetworkSites",
    "Description": "Lists network sites"
  },
  {
    "API": "privatenetworks:ListNetworks",
    "EventSource": "privatenetworks",
    "EventName": "ListNetworks",
    "Description": "Lists networks"
  },
  {
    "API": "privatenetworks:ListOrders",
    "EventSource": "privatenetworks",
    "EventName": "ListOrders",
    "Description": "Lists orders"
  },
  {
    "API": "privatenetworks:ListTagsForResource",
    "EventSource": "privatenetworks",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags for the specified resource"
  },
  {
    "API": "privatenetworks:StartNetworkResourceUpdate",
    "EventSource": "privatenetworks",
    "EventName": "StartNetworkResourceUpdate",
    "Description": "Use this action to do the following tasks:"
  },
  {
    "API": "privatenetworks:TagResource",
    "EventSource": "privatenetworks",
    "EventName": "TagResource",
    "Description": "Adds tags to the specified resource"
  },
  {
    "API": "privatenetworks:UntagResource",
    "EventSource": "privatenetworks",
    "EventName": "UntagResource",
    "Description": "Removes tags from the specified resource"
  },
  {
    "API": "privatenetworks:UpdateNetworkSite",
    "EventSource": "privatenetworks",
    "EventName": "UpdateNetworkSite",
    "Description": "Updates the specified network site"
  },
  {
    "API": "privatenetworks:UpdateNetworkSitePlan",
    "EventSource": "privatenetworks",
    "EventName": "UpdateNetworkSitePlan",
    "Description": "Updates the specified network site plan"
  },
  {
    "API": "proton:AcceptEnvironmentAccountConnection",
    "EventSource": "proton",
    "EventName": "AcceptEnvironmentAccountConnection",
    "Description": "In a management account, an environment account connection request is accepted"
  },
  {
    "API": "proton:CancelComponentDeployment",
    "EventSource": "proton",
    "EventName": "CancelComponentDeployment",
    "Description": "Attempts to cancel a component deployment (for a component that is in the ``IN_PROGRESS`` deployment status)"
  },
  {
    "API": "proton:CancelEnvironmentDeployment",
    "EventSource": "proton",
    "EventName": "CancelEnvironmentDeployment",
    "Description": "Attempts to cancel an environment deployment on an  UpdateEnvironment action, if the deployment is ``IN_PROGRESS``"
  },
  {
    "API": "proton:CancelServiceInstanceDeployment",
    "EventSource": "proton",
    "EventName": "CancelServiceInstanceDeployment",
    "Description": "Attempts to cancel a service instance deployment on an  UpdateServiceInstance action, if the deployment is ``IN_PROGRESS``"
  },
  {
    "API": "proton:CancelServicePipelineDeployment",
    "EventSource": "proton",
    "EventName": "CancelServicePipelineDeployment",
    "Description": "Attempts to cancel a service pipeline deployment on an  UpdateServicePipeline action, if the deployment is ``IN_PROGRESS``"
  },
  {
    "API": "proton:CreateComponent",
    "EventSource": "proton",
    "EventName": "CreateComponent",
    "Description": "Create an Proton component"
  },
  {
    "API": "proton:CreateEnvironment",
    "EventSource": "proton",
    "EventName": "CreateEnvironment",
    "Description": "Deploy a new environment"
  },
  {
    "API": "proton:CreateEnvironmentAccountConnection",
    "EventSource": "proton",
    "EventName": "CreateEnvironmentAccountConnection",
    "Description": "Create an environment account connection in an environment account so that environment infrastructure resources can be provisioned in the environment account from a management account"
  },
  {
    "API": "proton:CreateEnvironmentTemplate",
    "EventSource": "proton",
    "EventName": "CreateEnvironmentTemplate",
    "Description": "Create an environment template for Proton"
  },
  {
    "API": "proton:CreateEnvironmentTemplateVersion",
    "EventSource": "proton",
    "EventName": "CreateEnvironmentTemplateVersion",
    "Description": "Create a new major or minor version of an environment template"
  },
  {
    "API": "proton:CreateRepository",
    "EventSource": "proton",
    "EventName": "CreateRepository",
    "Description": "Create and register a link to a repository"
  },
  {
    "API": "proton:CreateService",
    "EventSource": "proton",
    "EventName": "CreateService",
    "Description": "Create an Proton service"
  },
  {
    "API": "proton:CreateServiceInstance",
    "EventSource": "proton",
    "EventName": "CreateServiceInstance",
    "Description": "Create a service instance"
  },
  {
    "API": "proton:CreateServiceSyncConfig",
    "EventSource": "proton",
    "EventName": "CreateServiceSyncConfig",
    "Description": "Create the Proton Ops configuration file"
  },
  {
    "API": "proton:CreateServiceTemplate",
    "EventSource": "proton",
    "EventName": "CreateServiceTemplate",
    "Description": "Create a service template"
  },
  {
    "API": "proton:CreateServiceTemplateVersion",
    "EventSource": "proton",
    "EventName": "CreateServiceTemplateVersion",
    "Description": "Create a new major or minor version of a service template"
  },
  {
    "API": "proton:CreateTemplateSyncConfig",
    "EventSource": "proton",
    "EventName": "CreateTemplateSyncConfig",
    "Description": "Set up a template to create new template versions automatically by tracking a linked repository"
  },
  {
    "API": "proton:DeleteComponent",
    "EventSource": "proton",
    "EventName": "DeleteComponent",
    "Description": "Delete an Proton component resource"
  },
  {
    "API": "proton:DeleteDeployment",
    "EventSource": "proton",
    "EventName": "DeleteDeployment",
    "Description": "Delete the deployment"
  },
  {
    "API": "proton:DeleteEnvironment",
    "EventSource": "proton",
    "EventName": "DeleteEnvironment",
    "Description": "Delete an environment"
  },
  {
    "API": "proton:DeleteEnvironmentAccountConnection",
    "EventSource": "proton",
    "EventName": "DeleteEnvironmentAccountConnection",
    "Description": "In an environment account, delete an environment account connection"
  },
  {
    "API": "proton:DeleteEnvironmentTemplate",
    "EventSource": "proton",
    "EventName": "DeleteEnvironmentTemplate",
    "Description": "If no other major or minor versions of an environment template exist, delete the environment template"
  },
  {
    "API": "proton:DeleteEnvironmentTemplateVersion",
    "EventSource": "proton",
    "EventName": "DeleteEnvironmentTemplateVersion",
    "Description": "If no other minor versions of an environment template exist, delete a major version of the environment template if it's not the ``Recommended`` version"
  },
  {
    "API": "proton:DeleteRepository",
    "EventSource": "proton",
    "EventName": "DeleteRepository",
    "Description": "De-register and unlink your repository"
  },
  {
    "API": "proton:DeleteService",
    "EventSource": "proton",
    "EventName": "DeleteService",
    "Description": "Delete a service, with its instances and pipeline"
  },
  {
    "API": "proton:DeleteServiceSyncConfig",
    "EventSource": "proton",
    "EventName": "DeleteServiceSyncConfig",
    "Description": "Delete the Proton Ops file"
  },
  {
    "API": "proton:DeleteServiceTemplate",
    "EventSource": "proton",
    "EventName": "DeleteServiceTemplate",
    "Description": "If no other major or minor versions of the service template exist, delete the service template"
  },
  {
    "API": "proton:DeleteServiceTemplateVersion",
    "EventSource": "proton",
    "EventName": "DeleteServiceTemplateVersion",
    "Description": "If no other minor versions of a service template exist, delete a major version of the service template if it's not the ``Recommended`` version"
  },
  {
    "API": "proton:DeleteTemplateSyncConfig",
    "EventSource": "proton",
    "EventName": "DeleteTemplateSyncConfig",
    "Description": "Delete a template sync configuration"
  },
  {
    "API": "proton:GeneratePresignedUrl",
    "EventSource": "proton",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "proton:GetAccountSettings",
    "EventSource": "proton",
    "EventName": "GetAccountSettings",
    "Description": "Get detail data for Proton account-wide settings"
  },
  {
    "API": "proton:GetComponent",
    "EventSource": "proton",
    "EventName": "GetComponent",
    "Description": "Get detailed data for a component"
  },
  {
    "API": "proton:GetDeployment",
    "EventSource": "proton",
    "EventName": "GetDeployment",
    "Description": "Get detailed data for a deployment"
  },
  {
    "API": "proton:GetEnvironment",
    "EventSource": "proton",
    "EventName": "GetEnvironment",
    "Description": "Get detailed data for an environment"
  },
  {
    "API": "proton:GetEnvironmentAccountConnection",
    "EventSource": "proton",
    "EventName": "GetEnvironmentAccountConnection",
    "Description": "In an environment account, get the detailed data for an environment account connection"
  },
  {
    "API": "proton:GetEnvironmentTemplate",
    "EventSource": "proton",
    "EventName": "GetEnvironmentTemplate",
    "Description": "Get detailed data for an environment template"
  },
  {
    "API": "proton:GetEnvironmentTemplateVersion",
    "EventSource": "proton",
    "EventName": "GetEnvironmentTemplateVersion",
    "Description": "Get detailed data for a major or minor version of an environment template"
  },
  {
    "API": "proton:GetRepository",
    "EventSource": "proton",
    "EventName": "GetRepository",
    "Description": "Get detail data for a linked repository"
  },
  {
    "API": "proton:GetRepositorySyncStatus",
    "EventSource": "proton",
    "EventName": "GetRepositorySyncStatus",
    "Description": "Get the sync status of a repository used for Proton template sync"
  },
  {
    "API": "proton:GetResourcesSummary",
    "EventSource": "proton",
    "EventName": "GetResourcesSummary",
    "Description": "Get counts of Proton resources"
  },
  {
    "API": "proton:GetService",
    "EventSource": "proton",
    "EventName": "GetService",
    "Description": "Get detailed data for a service"
  },
  {
    "API": "proton:GetServiceInstance",
    "EventSource": "proton",
    "EventName": "GetServiceInstance",
    "Description": "Get detailed data for a service instance"
  },
  {
    "API": "proton:GetServiceInstanceSyncStatus",
    "EventSource": "proton",
    "EventName": "GetServiceInstanceSyncStatus",
    "Description": "Get the status of the synced service instance"
  },
  {
    "API": "proton:GetServiceSyncBlockerSummary",
    "EventSource": "proton",
    "EventName": "GetServiceSyncBlockerSummary",
    "Description": "Get detailed data for the service sync blocker summary"
  },
  {
    "API": "proton:GetServiceSyncConfig",
    "EventSource": "proton",
    "EventName": "GetServiceSyncConfig",
    "Description": "Get detailed information for the service sync configuration"
  },
  {
    "API": "proton:GetServiceTemplate",
    "EventSource": "proton",
    "EventName": "GetServiceTemplate",
    "Description": "Get detailed data for a service template"
  },
  {
    "API": "proton:GetServiceTemplateVersion",
    "EventSource": "proton",
    "EventName": "GetServiceTemplateVersion",
    "Description": "Get detailed data for a major or minor version of a service template"
  },
  {
    "API": "proton:GetTemplateSyncConfig",
    "EventSource": "proton",
    "EventName": "GetTemplateSyncConfig",
    "Description": "Get detail data for a template sync configuration"
  },
  {
    "API": "proton:GetTemplateSyncStatus",
    "EventSource": "proton",
    "EventName": "GetTemplateSyncStatus",
    "Description": "Get the status of a template sync"
  },
  {
    "API": "proton:ListComponentOutputs",
    "EventSource": "proton",
    "EventName": "ListComponentOutputs",
    "Description": "Get a list of component Infrastructure as Code (IaC) outputs"
  },
  {
    "API": "proton:ListComponentProvisionedResources",
    "EventSource": "proton",
    "EventName": "ListComponentProvisionedResources",
    "Description": "List provisioned resources for a component with details"
  },
  {
    "API": "proton:ListComponents",
    "EventSource": "proton",
    "EventName": "ListComponents",
    "Description": "List components with summary data"
  },
  {
    "API": "proton:ListDeployments",
    "EventSource": "proton",
    "EventName": "ListDeployments",
    "Description": "List deployments"
  },
  {
    "API": "proton:ListEnvironmentAccountConnections",
    "EventSource": "proton",
    "EventName": "ListEnvironmentAccountConnections",
    "Description": "View a list of environment account connections"
  },
  {
    "API": "proton:ListEnvironmentOutputs",
    "EventSource": "proton",
    "EventName": "ListEnvironmentOutputs",
    "Description": "List the infrastructure as code outputs for your environment"
  },
  {
    "API": "proton:ListEnvironmentProvisionedResources",
    "EventSource": "proton",
    "EventName": "ListEnvironmentProvisionedResources",
    "Description": "List the provisioned resources for your environment"
  },
  {
    "API": "proton:ListEnvironmentTemplateVersions",
    "EventSource": "proton",
    "EventName": "ListEnvironmentTemplateVersions",
    "Description": "List major or minor versions of an environment template with detail data"
  },
  {
    "API": "proton:ListEnvironmentTemplates",
    "EventSource": "proton",
    "EventName": "ListEnvironmentTemplates",
    "Description": "List environment templates"
  },
  {
    "API": "proton:ListEnvironments",
    "EventSource": "proton",
    "EventName": "ListEnvironments",
    "Description": "List environments with detail data summaries"
  },
  {
    "API": "proton:ListRepositories",
    "EventSource": "proton",
    "EventName": "ListRepositories",
    "Description": "List linked repositories with detail data"
  },
  {
    "API": "proton:ListRepositorySyncDefinitions",
    "EventSource": "proton",
    "EventName": "ListRepositorySyncDefinitions",
    "Description": "List repository sync definitions with detail data"
  },
  {
    "API": "proton:ListServiceInstanceOutputs",
    "EventSource": "proton",
    "EventName": "ListServiceInstanceOutputs",
    "Description": "Get a list service of instance Infrastructure as Code (IaC) outputs"
  },
  {
    "API": "proton:ListServiceInstanceProvisionedResources",
    "EventSource": "proton",
    "EventName": "ListServiceInstanceProvisionedResources",
    "Description": "List provisioned resources for a service instance with details"
  },
  {
    "API": "proton:ListServiceInstances",
    "EventSource": "proton",
    "EventName": "ListServiceInstances",
    "Description": "List service instances with summary data"
  },
  {
    "API": "proton:ListServicePipelineOutputs",
    "EventSource": "proton",
    "EventName": "ListServicePipelineOutputs",
    "Description": "Get a list of service pipeline Infrastructure as Code (IaC) outputs"
  },
  {
    "API": "proton:ListServicePipelineProvisionedResources",
    "EventSource": "proton",
    "EventName": "ListServicePipelineProvisionedResources",
    "Description": "List provisioned resources for a service and pipeline with details"
  },
  {
    "API": "proton:ListServiceTemplateVersions",
    "EventSource": "proton",
    "EventName": "ListServiceTemplateVersions",
    "Description": "List major or minor versions of a service template with detail data"
  },
  {
    "API": "proton:ListServiceTemplates",
    "EventSource": "proton",
    "EventName": "ListServiceTemplates",
    "Description": "List service templates with detail data"
  },
  {
    "API": "proton:ListServices",
    "EventSource": "proton",
    "EventName": "ListServices",
    "Description": "List services with summaries of detail data"
  },
  {
    "API": "proton:ListTagsForResource",
    "EventSource": "proton",
    "EventName": "ListTagsForResource",
    "Description": "List tags for a resource"
  },
  {
    "API": "proton:NotifyResourceDeploymentStatusChange",
    "EventSource": "proton",
    "EventName": "NotifyResourceDeploymentStatusChange",
    "Description": "Notify Proton of status changes to a provisioned resource when you use self-managed provisioning"
  },
  {
    "API": "proton:RejectEnvironmentAccountConnection",
    "EventSource": "proton",
    "EventName": "RejectEnvironmentAccountConnection",
    "Description": "In a management account, reject an environment account connection from another environment account"
  },
  {
    "API": "proton:TagResource",
    "EventSource": "proton",
    "EventName": "TagResource",
    "Description": "Tag a resource"
  },
  {
    "API": "proton:UntagResource",
    "EventSource": "proton",
    "EventName": "UntagResource",
    "Description": "Remove a customer tag from a resource"
  },
  {
    "API": "proton:UpdateAccountSettings",
    "EventSource": "proton",
    "EventName": "UpdateAccountSettings",
    "Description": "Update Proton settings that are used for multiple services in the Amazon Web Services account"
  },
  {
    "API": "proton:UpdateComponent",
    "EventSource": "proton",
    "EventName": "UpdateComponent",
    "Description": "Update a component"
  },
  {
    "API": "proton:UpdateEnvironment",
    "EventSource": "proton",
    "EventName": "UpdateEnvironment",
    "Description": "Update an environment"
  },
  {
    "API": "proton:UpdateEnvironmentAccountConnection",
    "EventSource": "proton",
    "EventName": "UpdateEnvironmentAccountConnection",
    "Description": "In an environment account, update an environment account connection to use a new IAM role"
  },
  {
    "API": "proton:UpdateEnvironmentTemplate",
    "EventSource": "proton",
    "EventName": "UpdateEnvironmentTemplate",
    "Description": "Update an environment template"
  },
  {
    "API": "proton:UpdateEnvironmentTemplateVersion",
    "EventSource": "proton",
    "EventName": "UpdateEnvironmentTemplateVersion",
    "Description": "Update a major or minor version of an environment template"
  },
  {
    "API": "proton:UpdateService",
    "EventSource": "proton",
    "EventName": "UpdateService",
    "Description": "Edit a service description or use a spec to add and delete service instances"
  },
  {
    "API": "proton:UpdateServiceInstance",
    "EventSource": "proton",
    "EventName": "UpdateServiceInstance",
    "Description": "Update a service instance"
  },
  {
    "API": "proton:UpdateServicePipeline",
    "EventSource": "proton",
    "EventName": "UpdateServicePipeline",
    "Description": "Update the service pipeline"
  },
  {
    "API": "proton:UpdateServiceSyncBlocker",
    "EventSource": "proton",
    "EventName": "UpdateServiceSyncBlocker",
    "Description": "Update the service sync blocker by resolving it"
  },
  {
    "API": "proton:UpdateServiceSyncConfig",
    "EventSource": "proton",
    "EventName": "UpdateServiceSyncConfig",
    "Description": "Update the Proton Ops config file"
  },
  {
    "API": "proton:UpdateServiceTemplate",
    "EventSource": "proton",
    "EventName": "UpdateServiceTemplate",
    "Description": "Update a service template"
  },
  {
    "API": "proton:UpdateServiceTemplateVersion",
    "EventSource": "proton",
    "EventName": "UpdateServiceTemplateVersion",
    "Description": "Update a major or minor version of a service template"
  },
  {
    "API": "proton:UpdateTemplateSyncConfig",
    "EventSource": "proton",
    "EventName": "UpdateTemplateSyncConfig",
    "Description": "Update template sync configuration parameters, except for the ``templateName`` and ``templateType``"
  },
  {
    "API": "qbusiness:BatchDeleteDocument",
    "EventSource": "qbusiness",
    "EventName": "BatchDeleteDocument",
    "Description": "Asynchronously deletes one or more documents added using the ``BatchPutDocument`` API from an Amazon Q Business index"
  },
  {
    "API": "qbusiness:BatchPutDocument",
    "EventSource": "qbusiness",
    "EventName": "BatchPutDocument",
    "Description": "Adds one or more documents to an Amazon Q Business index"
  },
  {
    "API": "qbusiness:ChatSync",
    "EventSource": "qbusiness",
    "EventName": "ChatSync",
    "Description": "Starts or continues a non-streaming Amazon Q Business conversation"
  },
  {
    "API": "qbusiness:CreateApplication",
    "EventSource": "qbusiness",
    "EventName": "CreateApplication",
    "Description": "Creates an Amazon Q Business application"
  },
  {
    "API": "qbusiness:CreateDataSource",
    "EventSource": "qbusiness",
    "EventName": "CreateDataSource",
    "Description": "Creates a data source connector for an Amazon Q Business application"
  },
  {
    "API": "qbusiness:CreateIndex",
    "EventSource": "qbusiness",
    "EventName": "CreateIndex",
    "Description": "Creates an Amazon Q Business index"
  },
  {
    "API": "qbusiness:CreatePlugin",
    "EventSource": "qbusiness",
    "EventName": "CreatePlugin",
    "Description": "Creates an Amazon Q Business plugin"
  },
  {
    "API": "qbusiness:CreateRetriever",
    "EventSource": "qbusiness",
    "EventName": "CreateRetriever",
    "Description": "Adds a retriever to your Amazon Q Business application"
  },
  {
    "API": "qbusiness:CreateUser",
    "EventSource": "qbusiness",
    "EventName": "CreateUser",
    "Description": "Creates a universally unique identifier (UUID) mapped to a list of local user ids within an application"
  },
  {
    "API": "qbusiness:CreateWebExperience",
    "EventSource": "qbusiness",
    "EventName": "CreateWebExperience",
    "Description": "Creates an Amazon Q Business web experience"
  },
  {
    "API": "qbusiness:DeleteApplication",
    "EventSource": "qbusiness",
    "EventName": "DeleteApplication",
    "Description": "Deletes an Amazon Q Business application"
  },
  {
    "API": "qbusiness:DeleteChatControlsConfiguration",
    "EventSource": "qbusiness",
    "EventName": "DeleteChatControlsConfiguration",
    "Description": "Deletes chat controls configured for an existing Amazon Q Business application"
  },
  {
    "API": "qbusiness:DeleteConversation",
    "EventSource": "qbusiness",
    "EventName": "DeleteConversation",
    "Description": "Deletes an Amazon Q Business web experience conversation"
  },
  {
    "API": "qbusiness:DeleteDataSource",
    "EventSource": "qbusiness",
    "EventName": "DeleteDataSource",
    "Description": "Deletes an Amazon Q Business data source connector"
  },
  {
    "API": "qbusiness:DeleteGroup",
    "EventSource": "qbusiness",
    "EventName": "DeleteGroup",
    "Description": "Deletes a group so that all users and sub groups that belong to the group can no longer access documents only available to that group"
  },
  {
    "API": "qbusiness:DeleteIndex",
    "EventSource": "qbusiness",
    "EventName": "DeleteIndex",
    "Description": "Deletes an Amazon Q Business index"
  },
  {
    "API": "qbusiness:DeletePlugin",
    "EventSource": "qbusiness",
    "EventName": "DeletePlugin",
    "Description": "Deletes an Amazon Q Business plugin"
  },
  {
    "API": "qbusiness:DeleteRetriever",
    "EventSource": "qbusiness",
    "EventName": "DeleteRetriever",
    "Description": "Deletes the retriever used by an Amazon Q Business application"
  },
  {
    "API": "qbusiness:DeleteUser",
    "EventSource": "qbusiness",
    "EventName": "DeleteUser",
    "Description": "Deletes a user by email id"
  },
  {
    "API": "qbusiness:DeleteWebExperience",
    "EventSource": "qbusiness",
    "EventName": "DeleteWebExperience",
    "Description": "Deletes an Amazon Q Business web experience"
  },
  {
    "API": "qbusiness:GeneratePresignedUrl",
    "EventSource": "qbusiness",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "qbusiness:GetApplication",
    "EventSource": "qbusiness",
    "EventName": "GetApplication",
    "Description": "Gets information about an existing Amazon Q Business application"
  },
  {
    "API": "qbusiness:GetChatControlsConfiguration",
    "EventSource": "qbusiness",
    "EventName": "GetChatControlsConfiguration",
    "Description": "Gets information about an chat controls configured for an existing Amazon Q Business application"
  },
  {
    "API": "qbusiness:GetDataSource",
    "EventSource": "qbusiness",
    "EventName": "GetDataSource",
    "Description": "Gets information about an existing Amazon Q Business data source connector"
  },
  {
    "API": "qbusiness:GetGroup",
    "EventSource": "qbusiness",
    "EventName": "GetGroup",
    "Description": "Describes a group by group name"
  },
  {
    "API": "qbusiness:GetIndex",
    "EventSource": "qbusiness",
    "EventName": "GetIndex",
    "Description": "Gets information about an existing Amazon Q Business index"
  },
  {
    "API": "qbusiness:GetPlugin",
    "EventSource": "qbusiness",
    "EventName": "GetPlugin",
    "Description": "Gets information about an existing Amazon Q Business plugin"
  },
  {
    "API": "qbusiness:GetRetriever",
    "EventSource": "qbusiness",
    "EventName": "GetRetriever",
    "Description": "Gets information about an existing retriever used by an Amazon Q Business application"
  },
  {
    "API": "qbusiness:GetUser",
    "EventSource": "qbusiness",
    "EventName": "GetUser",
    "Description": "Describes the universally unique identifier (UUID) associated with a local user in a data source"
  },
  {
    "API": "qbusiness:GetWebExperience",
    "EventSource": "qbusiness",
    "EventName": "GetWebExperience",
    "Description": "Gets information about an existing Amazon Q Business web experience"
  },
  {
    "API": "qbusiness:ListApplications",
    "EventSource": "qbusiness",
    "EventName": "ListApplications",
    "Description": "Lists Amazon Q Business applications"
  },
  {
    "API": "qbusiness:ListConversations",
    "EventSource": "qbusiness",
    "EventName": "ListConversations",
    "Description": "Lists one or more Amazon Q Business conversations"
  },
  {
    "API": "qbusiness:ListDataSourceSyncJobs",
    "EventSource": "qbusiness",
    "EventName": "ListDataSourceSyncJobs",
    "Description": "Get information about an Amazon Q Business data source connector synchronization"
  },
  {
    "API": "qbusiness:ListDataSources",
    "EventSource": "qbusiness",
    "EventName": "ListDataSources",
    "Description": "Lists the Amazon Q Business data source connectors that you have created"
  },
  {
    "API": "qbusiness:ListDocuments",
    "EventSource": "qbusiness",
    "EventName": "ListDocuments",
    "Description": "A list of documents attached to an index"
  },
  {
    "API": "qbusiness:ListGroups",
    "EventSource": "qbusiness",
    "EventName": "ListGroups",
    "Description": "Provides a list of groups that are mapped to users"
  },
  {
    "API": "qbusiness:ListIndices",
    "EventSource": "qbusiness",
    "EventName": "ListIndices",
    "Description": "Lists the Amazon Q Business indices you have created"
  },
  {
    "API": "qbusiness:ListMessages",
    "EventSource": "qbusiness",
    "EventName": "ListMessages",
    "Description": "Gets a list of messages associated with an Amazon Q Business web experience"
  },
  {
    "API": "qbusiness:ListPlugins",
    "EventSource": "qbusiness",
    "EventName": "ListPlugins",
    "Description": "Lists configured Amazon Q Business plugins"
  },
  {
    "API": "qbusiness:ListRetrievers",
    "EventSource": "qbusiness",
    "EventName": "ListRetrievers",
    "Description": "Lists the retriever used by an Amazon Q Business application"
  },
  {
    "API": "qbusiness:ListTagsForResource",
    "EventSource": "qbusiness",
    "EventName": "ListTagsForResource",
    "Description": "Gets a list of tags associated with a specified resource"
  },
  {
    "API": "qbusiness:ListWebExperiences",
    "EventSource": "qbusiness",
    "EventName": "ListWebExperiences",
    "Description": "Lists one or more Amazon Q Business Web Experiences"
  },
  {
    "API": "qbusiness:PutFeedback",
    "EventSource": "qbusiness",
    "EventName": "PutFeedback",
    "Description": "Enables your end user to provide feedback on their Amazon Q Business generated chat responses"
  },
  {
    "API": "qbusiness:PutGroup",
    "EventSource": "qbusiness",
    "EventName": "PutGroup",
    "Description": "Create, or updates, a mapping of users—who have access to a document—to groups"
  },
  {
    "API": "qbusiness:StartDataSourceSyncJob",
    "EventSource": "qbusiness",
    "EventName": "StartDataSourceSyncJob",
    "Description": "Starts a data source connector synchronization job"
  },
  {
    "API": "qbusiness:StopDataSourceSyncJob",
    "EventSource": "qbusiness",
    "EventName": "StopDataSourceSyncJob",
    "Description": "Stops an Amazon Q Business data source connector synchronization job already in progress"
  },
  {
    "API": "qbusiness:TagResource",
    "EventSource": "qbusiness",
    "EventName": "TagResource",
    "Description": "Adds the specified tag to the specified Amazon Q Business application or data source resource"
  },
  {
    "API": "qbusiness:UntagResource",
    "EventSource": "qbusiness",
    "EventName": "UntagResource",
    "Description": "Removes a tag from an Amazon Q Business application or a data source"
  },
  {
    "API": "qbusiness:UpdateApplication",
    "EventSource": "qbusiness",
    "EventName": "UpdateApplication",
    "Description": "Updates an existing Amazon Q Business application"
  },
  {
    "API": "qbusiness:UpdateChatControlsConfiguration",
    "EventSource": "qbusiness",
    "EventName": "UpdateChatControlsConfiguration",
    "Description": "Updates an set of chat controls configured for an existing Amazon Q Business application"
  },
  {
    "API": "qbusiness:UpdateDataSource",
    "EventSource": "qbusiness",
    "EventName": "UpdateDataSource",
    "Description": "Updates an existing Amazon Q Business data source connector"
  },
  {
    "API": "qbusiness:UpdateIndex",
    "EventSource": "qbusiness",
    "EventName": "UpdateIndex",
    "Description": "Updates an Amazon Q Business index"
  },
  {
    "API": "qbusiness:UpdatePlugin",
    "EventSource": "qbusiness",
    "EventName": "UpdatePlugin",
    "Description": "Updates an Amazon Q Business plugin"
  },
  {
    "API": "qbusiness:UpdateRetriever",
    "EventSource": "qbusiness",
    "EventName": "UpdateRetriever",
    "Description": "Updates the retriever used for your Amazon Q Business application"
  },
  {
    "API": "qbusiness:UpdateUser",
    "EventSource": "qbusiness",
    "EventName": "UpdateUser",
    "Description": "Updates a information associated with a user id"
  },
  {
    "API": "qbusiness:UpdateWebExperience",
    "EventSource": "qbusiness",
    "EventName": "UpdateWebExperience",
    "Description": "Updates an Amazon Q Business web experience"
  },
  {
    "API": "qconnect:CreateAssistant",
    "EventSource": "qconnect",
    "EventName": "CreateAssistant",
    "Description": "Creates an Amazon Q in Connect assistant"
  },
  {
    "API": "qconnect:CreateAssistantAssociation",
    "EventSource": "qconnect",
    "EventName": "CreateAssistantAssociation",
    "Description": "Creates an association between an Amazon Q in Connect assistant and another resource"
  },
  {
    "API": "qconnect:CreateContent",
    "EventSource": "qconnect",
    "EventName": "CreateContent",
    "Description": "Creates Amazon Q in Connect content"
  },
  {
    "API": "qconnect:CreateKnowledgeBase",
    "EventSource": "qconnect",
    "EventName": "CreateKnowledgeBase",
    "Description": "Creates a knowledge base"
  },
  {
    "API": "qconnect:CreateQuickResponse",
    "EventSource": "qconnect",
    "EventName": "CreateQuickResponse",
    "Description": "Creates an Amazon Q in Connect quick response"
  },
  {
    "API": "qconnect:CreateSession",
    "EventSource": "qconnect",
    "EventName": "CreateSession",
    "Description": "Creates a session"
  },
  {
    "API": "qconnect:DeleteAssistant",
    "EventSource": "qconnect",
    "EventName": "DeleteAssistant",
    "Description": "Deletes an assistant"
  },
  {
    "API": "qconnect:DeleteAssistantAssociation",
    "EventSource": "qconnect",
    "EventName": "DeleteAssistantAssociation",
    "Description": "Deletes an assistant association"
  },
  {
    "API": "qconnect:DeleteContent",
    "EventSource": "qconnect",
    "EventName": "DeleteContent",
    "Description": "Deletes the content"
  },
  {
    "API": "qconnect:DeleteImportJob",
    "EventSource": "qconnect",
    "EventName": "DeleteImportJob",
    "Description": "Deletes the quick response import job"
  },
  {
    "API": "qconnect:DeleteKnowledgeBase",
    "EventSource": "qconnect",
    "EventName": "DeleteKnowledgeBase",
    "Description": "Deletes the knowledge base"
  },
  {
    "API": "qconnect:DeleteQuickResponse",
    "EventSource": "qconnect",
    "EventName": "DeleteQuickResponse",
    "Description": "Deletes a quick response"
  },
  {
    "API": "qconnect:GeneratePresignedUrl",
    "EventSource": "qconnect",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "qconnect:GetAssistant",
    "EventSource": "qconnect",
    "EventName": "GetAssistant",
    "Description": "Retrieves information about an assistant"
  },
  {
    "API": "qconnect:GetAssistantAssociation",
    "EventSource": "qconnect",
    "EventName": "GetAssistantAssociation",
    "Description": "Retrieves information about an assistant association"
  },
  {
    "API": "qconnect:GetContent",
    "EventSource": "qconnect",
    "EventName": "GetContent",
    "Description": "Retrieves content, including a pre-signed URL to download the content"
  },
  {
    "API": "qconnect:GetContentSummary",
    "EventSource": "qconnect",
    "EventName": "GetContentSummary",
    "Description": "Retrieves summary information about the content"
  },
  {
    "API": "qconnect:GetImportJob",
    "EventSource": "qconnect",
    "EventName": "GetImportJob",
    "Description": "Retrieves the started import job"
  },
  {
    "API": "qconnect:GetKnowledgeBase",
    "EventSource": "qconnect",
    "EventName": "GetKnowledgeBase",
    "Description": "Retrieves information about the knowledge base"
  },
  {
    "API": "qconnect:GetQuickResponse",
    "EventSource": "qconnect",
    "EventName": "GetQuickResponse",
    "Description": "Retrieves the quick response"
  },
  {
    "API": "qconnect:GetRecommendations",
    "EventSource": "qconnect",
    "EventName": "GetRecommendations",
    "Description": ""
  },
  {
    "API": "qconnect:GetSession",
    "EventSource": "qconnect",
    "EventName": "GetSession",
    "Description": "Retrieves information for a specified session"
  },
  {
    "API": "qconnect:ListAssistantAssociations",
    "EventSource": "qconnect",
    "EventName": "ListAssistantAssociations",
    "Description": "Lists information about assistant associations"
  },
  {
    "API": "qconnect:ListAssistants",
    "EventSource": "qconnect",
    "EventName": "ListAssistants",
    "Description": "Lists information about assistants"
  },
  {
    "API": "qconnect:ListContents",
    "EventSource": "qconnect",
    "EventName": "ListContents",
    "Description": "Lists the content"
  },
  {
    "API": "qconnect:ListImportJobs",
    "EventSource": "qconnect",
    "EventName": "ListImportJobs",
    "Description": "Lists information about import jobs"
  },
  {
    "API": "qconnect:ListKnowledgeBases",
    "EventSource": "qconnect",
    "EventName": "ListKnowledgeBases",
    "Description": "Lists the knowledge bases"
  },
  {
    "API": "qconnect:ListQuickResponses",
    "EventSource": "qconnect",
    "EventName": "ListQuickResponses",
    "Description": "Lists information about quick response"
  },
  {
    "API": "qconnect:ListTagsForResource",
    "EventSource": "qconnect",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags for the specified resource"
  },
  {
    "API": "qconnect:NotifyRecommendationsReceived",
    "EventSource": "qconnect",
    "EventName": "NotifyRecommendationsReceived",
    "Description": "Removes the specified recommendations from the specified assistant's queue of newly available recommendations"
  },
  {
    "API": "qconnect:PutFeedback",
    "EventSource": "qconnect",
    "EventName": "PutFeedback",
    "Description": "Provides feedback against the specified assistant for the specified target"
  },
  {
    "API": "qconnect:QueryAssistant",
    "EventSource": "qconnect",
    "EventName": "QueryAssistant",
    "Description": ""
  },
  {
    "API": "qconnect:RemoveKnowledgeBaseTemplateUri",
    "EventSource": "qconnect",
    "EventName": "RemoveKnowledgeBaseTemplateUri",
    "Description": "Removes a URI template from a knowledge base"
  },
  {
    "API": "qconnect:SearchContent",
    "EventSource": "qconnect",
    "EventName": "SearchContent",
    "Description": "Searches for content in a specified knowledge base"
  },
  {
    "API": "qconnect:SearchQuickResponses",
    "EventSource": "qconnect",
    "EventName": "SearchQuickResponses",
    "Description": "Searches existing Amazon Q in Connect quick responses in an Amazon Q in Connect knowledge base"
  },
  {
    "API": "qconnect:SearchSessions",
    "EventSource": "qconnect",
    "EventName": "SearchSessions",
    "Description": "Searches for sessions"
  },
  {
    "API": "qconnect:StartContentUpload",
    "EventSource": "qconnect",
    "EventName": "StartContentUpload",
    "Description": "Get a URL to upload content to a knowledge base"
  },
  {
    "API": "qconnect:StartImportJob",
    "EventSource": "qconnect",
    "EventName": "StartImportJob",
    "Description": "Start an asynchronous job to import Amazon Q in Connect resources from an uploaded source file"
  },
  {
    "API": "qconnect:TagResource",
    "EventSource": "qconnect",
    "EventName": "TagResource",
    "Description": "Adds the specified tags to the specified resource"
  },
  {
    "API": "qconnect:UntagResource",
    "EventSource": "qconnect",
    "EventName": "UntagResource",
    "Description": "Removes the specified tags from the specified resource"
  },
  {
    "API": "qconnect:UpdateContent",
    "EventSource": "qconnect",
    "EventName": "UpdateContent",
    "Description": "Updates information about the content"
  },
  {
    "API": "qconnect:UpdateKnowledgeBaseTemplateUri",
    "EventSource": "qconnect",
    "EventName": "UpdateKnowledgeBaseTemplateUri",
    "Description": "Updates the template URI of a knowledge base"
  },
  {
    "API": "qconnect:UpdateQuickResponse",
    "EventSource": "qconnect",
    "EventName": "UpdateQuickResponse",
    "Description": "Updates an existing Amazon Q in Connect quick response"
  },
  {
    "API": "qconnect:UpdateSession",
    "EventSource": "qconnect",
    "EventName": "UpdateSession",
    "Description": "Updates a session"
  },
  {
    "API": "qldb:CancelJournalKinesisStream",
    "EventSource": "qldb",
    "EventName": "CancelJournalKinesisStream",
    "Description": "Ends a given Amazon QLDB journal stream"
  },
  {
    "API": "qldb:CreateLedger",
    "EventSource": "qldb",
    "EventName": "CreateLedger",
    "Description": "Creates a new ledger in your Amazon Web Services account in the current Region"
  },
  {
    "API": "qldb:DeleteLedger",
    "EventSource": "qldb",
    "EventName": "DeleteLedger",
    "Description": "Deletes a ledger and all of its contents"
  },
  {
    "API": "qldb:DescribeJournalKinesisStream",
    "EventSource": "qldb",
    "EventName": "DescribeJournalKinesisStream",
    "Description": "Returns detailed information about a given Amazon QLDB journal stream"
  },
  {
    "API": "qldb:DescribeJournalS3Export",
    "EventSource": "qldb",
    "EventName": "DescribeJournalS3Export",
    "Description": "Returns information about a journal export job, including the ledger name, export ID, creation time, current status, and the parameters of the original export creation request"
  },
  {
    "API": "qldb:DescribeLedger",
    "EventSource": "qldb",
    "EventName": "DescribeLedger",
    "Description": "Returns information about a ledger, including its state, permissions mode, encryption at rest settings, and when it was created"
  },
  {
    "API": "qldb:ExportJournalToS3",
    "EventSource": "qldb",
    "EventName": "ExportJournalToS3",
    "Description": "Exports journal contents within a date and time range from a ledger into a specified Amazon Simple Storage Service (Amazon S3) bucket"
  },
  {
    "API": "qldb:GeneratePresignedUrl",
    "EventSource": "qldb",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "qldb:GetBlock",
    "EventSource": "qldb",
    "EventName": "GetBlock",
    "Description": "Returns a block object at a specified address in a journal"
  },
  {
    "API": "qldb:GetDigest",
    "EventSource": "qldb",
    "EventName": "GetDigest",
    "Description": "Returns the digest of a ledger at the latest committed block in the journal"
  },
  {
    "API": "qldb:GetRevision",
    "EventSource": "qldb",
    "EventName": "GetRevision",
    "Description": "Returns a revision data object for a specified document ID and block address"
  },
  {
    "API": "qldb:ListJournalKinesisStreamsForLedger",
    "EventSource": "qldb",
    "EventName": "ListJournalKinesisStreamsForLedger",
    "Description": "Returns all Amazon QLDB journal streams for a given ledger"
  },
  {
    "API": "qldb:ListJournalS3Exports",
    "EventSource": "qldb",
    "EventName": "ListJournalS3Exports",
    "Description": "Returns all journal export jobs for all ledgers that are associated with the current Amazon Web Services account and Region"
  },
  {
    "API": "qldb:ListJournalS3ExportsForLedger",
    "EventSource": "qldb",
    "EventName": "ListJournalS3ExportsForLedger",
    "Description": "Returns all journal export jobs for a specified ledger"
  },
  {
    "API": "qldb:ListLedgers",
    "EventSource": "qldb",
    "EventName": "ListLedgers",
    "Description": "Returns all ledgers that are associated with the current Amazon Web Services account and Region"
  },
  {
    "API": "qldb:ListTagsForResource",
    "EventSource": "qldb",
    "EventName": "ListTagsForResource",
    "Description": "Returns all tags for a specified Amazon QLDB resource"
  },
  {
    "API": "qldb:StreamJournalToKinesis",
    "EventSource": "qldb",
    "EventName": "StreamJournalToKinesis",
    "Description": "Creates a journal stream for a given Amazon QLDB ledger"
  },
  {
    "API": "qldb:TagResource",
    "EventSource": "qldb",
    "EventName": "TagResource",
    "Description": "Adds one or more tags to a specified Amazon QLDB resource"
  },
  {
    "API": "qldb:UntagResource",
    "EventSource": "qldb",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags from a specified Amazon QLDB resource"
  },
  {
    "API": "qldb:UpdateLedger",
    "EventSource": "qldb",
    "EventName": "UpdateLedger",
    "Description": "Updates properties on a ledger"
  },
  {
    "API": "qldb:UpdateLedgerPermissionsMode",
    "EventSource": "qldb",
    "EventName": "UpdateLedgerPermissionsMode",
    "Description": "Updates the permissions mode of a ledger"
  },
  {
    "API": "qldb-session:GeneratePresignedUrl",
    "EventSource": "qldb-session",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "qldb-session:SendCommand",
    "EventSource": "qldb-session",
    "EventName": "SendCommand",
    "Description": "Sends a command to an Amazon QLDB ledger"
  },
  {
    "API": "quicksight:CancelIngestion",
    "EventSource": "quicksight",
    "EventName": "CancelIngestion",
    "Description": "Cancels an ongoing ingestion of data into SPICE"
  },
  {
    "API": "quicksight:CreateAccountCustomization",
    "EventSource": "quicksight",
    "EventName": "CreateAccountCustomization",
    "Description": "Creates Amazon QuickSight customizations for the current Amazon Web Services Region"
  },
  {
    "API": "quicksight:CreateAccountSubscription",
    "EventSource": "quicksight",
    "EventName": "CreateAccountSubscription",
    "Description": "Creates an Amazon QuickSight account, or subscribes to Amazon QuickSight Q"
  },
  {
    "API": "quicksight:CreateAnalysis",
    "EventSource": "quicksight",
    "EventName": "CreateAnalysis",
    "Description": "Creates an analysis in Amazon QuickSight"
  },
  {
    "API": "quicksight:CreateDashboard",
    "EventSource": "quicksight",
    "EventName": "CreateDashboard",
    "Description": "Creates a dashboard from either a template or directly with a ``DashboardDefinition``"
  },
  {
    "API": "quicksight:CreateDataSet",
    "EventSource": "quicksight",
    "EventName": "CreateDataSet",
    "Description": "Creates a dataset"
  },
  {
    "API": "quicksight:CreateDataSource",
    "EventSource": "quicksight",
    "EventName": "CreateDataSource",
    "Description": "Creates a data source"
  },
  {
    "API": "quicksight:CreateFolder",
    "EventSource": "quicksight",
    "EventName": "CreateFolder",
    "Description": "Creates an empty shared folder"
  },
  {
    "API": "quicksight:CreateFolderMembership",
    "EventSource": "quicksight",
    "EventName": "CreateFolderMembership",
    "Description": "Adds an asset, such as a dashboard, analysis, or dataset into a folder"
  },
  {
    "API": "quicksight:CreateGroup",
    "EventSource": "quicksight",
    "EventName": "CreateGroup",
    "Description": "Use the ``CreateGroup`` operation to create a group in Amazon QuickSight"
  },
  {
    "API": "quicksight:CreateGroupMembership",
    "EventSource": "quicksight",
    "EventName": "CreateGroupMembership",
    "Description": "Adds an Amazon QuickSight user to an Amazon QuickSight group"
  },
  {
    "API": "quicksight:CreateIamPolicyAssignment",
    "EventSource": "quicksight",
    "EventName": "CreateIamPolicyAssignment",
    "Description": "Creates an assignment with one specified IAM policy, identified by its Amazon Resource Name (ARN)"
  },
  {
    "API": "quicksight:CreateIngestion",
    "EventSource": "quicksight",
    "EventName": "CreateIngestion",
    "Description": "Creates and starts a new SPICE ingestion for a dataset"
  },
  {
    "API": "quicksight:CreateNamespace",
    "EventSource": "quicksight",
    "EventName": "CreateNamespace",
    "Description": "(Enterprise edition only) Creates a new namespace for you to use with Amazon QuickSight"
  },
  {
    "API": "quicksight:CreateRefreshSchedule",
    "EventSource": "quicksight",
    "EventName": "CreateRefreshSchedule",
    "Description": "Creates a refresh schedule for a dataset"
  },
  {
    "API": "quicksight:CreateRoleMembership",
    "EventSource": "quicksight",
    "EventName": "CreateRoleMembership",
    "Description": "Use ``CreateRoleMembership`` to add an existing Amazon QuickSight group to an existing role"
  },
  {
    "API": "quicksight:CreateTemplate",
    "EventSource": "quicksight",
    "EventName": "CreateTemplate",
    "Description": "Creates a template either from a ``TemplateDefinition`` or from an existing Amazon QuickSight analysis or template"
  },
  {
    "API": "quicksight:CreateTemplateAlias",
    "EventSource": "quicksight",
    "EventName": "CreateTemplateAlias",
    "Description": "Creates a template alias for a template"
  },
  {
    "API": "quicksight:CreateTheme",
    "EventSource": "quicksight",
    "EventName": "CreateTheme",
    "Description": "Creates a theme"
  },
  {
    "API": "quicksight:CreateThemeAlias",
    "EventSource": "quicksight",
    "EventName": "CreateThemeAlias",
    "Description": "Creates a theme alias for a theme"
  },
  {
    "API": "quicksight:CreateTopic",
    "EventSource": "quicksight",
    "EventName": "CreateTopic",
    "Description": "Creates a new Q topic"
  },
  {
    "API": "quicksight:CreateTopicRefreshSchedule",
    "EventSource": "quicksight",
    "EventName": "CreateTopicRefreshSchedule",
    "Description": "Creates a topic refresh schedule"
  },
  {
    "API": "quicksight:CreateVpcConnection",
    "EventSource": "quicksight",
    "EventName": "CreateVpcConnection",
    "Description": "Creates a new VPC connection"
  },
  {
    "API": "quicksight:DeleteAccountCustomization",
    "EventSource": "quicksight",
    "EventName": "DeleteAccountCustomization",
    "Description": "Deletes all Amazon QuickSight customizations in this Amazon Web Services Region for the specified Amazon Web Services account and Amazon QuickSight namespace"
  },
  {
    "API": "quicksight:DeleteAccountSubscription",
    "EventSource": "quicksight",
    "EventName": "DeleteAccountSubscription",
    "Description": "Use the ``DeleteAccountSubscription`` operation to delete an Amazon QuickSight account"
  },
  {
    "API": "quicksight:DeleteAnalysis",
    "EventSource": "quicksight",
    "EventName": "DeleteAnalysis",
    "Description": "Deletes an analysis from Amazon QuickSight"
  },
  {
    "API": "quicksight:DeleteDashboard",
    "EventSource": "quicksight",
    "EventName": "DeleteDashboard",
    "Description": "Deletes a dashboard"
  },
  {
    "API": "quicksight:DeleteDataSet",
    "EventSource": "quicksight",
    "EventName": "DeleteDataSet",
    "Description": "Deletes a dataset"
  },
  {
    "API": "quicksight:DeleteDataSetRefreshProperties",
    "EventSource": "quicksight",
    "EventName": "DeleteDataSetRefreshProperties",
    "Description": "Deletes the dataset refresh properties of the dataset"
  },
  {
    "API": "quicksight:DeleteDataSource",
    "EventSource": "quicksight",
    "EventName": "DeleteDataSource",
    "Description": "Deletes the data source permanently"
  },
  {
    "API": "quicksight:DeleteFolder",
    "EventSource": "quicksight",
    "EventName": "DeleteFolder",
    "Description": "Deletes an empty folder"
  },
  {
    "API": "quicksight:DeleteFolderMembership",
    "EventSource": "quicksight",
    "EventName": "DeleteFolderMembership",
    "Description": "Removes an asset, such as a dashboard, analysis, or dataset, from a folder"
  },
  {
    "API": "quicksight:DeleteGroup",
    "EventSource": "quicksight",
    "EventName": "DeleteGroup",
    "Description": "Removes a user group from Amazon QuickSight"
  },
  {
    "API": "quicksight:DeleteGroupMembership",
    "EventSource": "quicksight",
    "EventName": "DeleteGroupMembership",
    "Description": "Removes a user from a group so that the user is no longer a member of the group"
  },
  {
    "API": "quicksight:DeleteIamPolicyAssignment",
    "EventSource": "quicksight",
    "EventName": "DeleteIamPolicyAssignment",
    "Description": "Deletes an existing IAM policy assignment"
  },
  {
    "API": "quicksight:DeleteIdentityPropagationConfig",
    "EventSource": "quicksight",
    "EventName": "DeleteIdentityPropagationConfig",
    "Description": "Deletes all access scopes and authorized targets that are associated with a service from the Amazon QuickSight IAM Identity Center application"
  },
  {
    "API": "quicksight:DeleteNamespace",
    "EventSource": "quicksight",
    "EventName": "DeleteNamespace",
    "Description": "Deletes a namespace and the users and groups that are associated with the namespace"
  },
  {
    "API": "quicksight:DeleteRefreshSchedule",
    "EventSource": "quicksight",
    "EventName": "DeleteRefreshSchedule",
    "Description": "Deletes a refresh schedule from a dataset"
  },
  {
    "API": "quicksight:DeleteRoleCustomPermission",
    "EventSource": "quicksight",
    "EventName": "DeleteRoleCustomPermission",
    "Description": "Removes custom permissions from the role"
  },
  {
    "API": "quicksight:DeleteRoleMembership",
    "EventSource": "quicksight",
    "EventName": "DeleteRoleMembership",
    "Description": "Removes a group from a role"
  },
  {
    "API": "quicksight:DeleteTemplate",
    "EventSource": "quicksight",
    "EventName": "DeleteTemplate",
    "Description": "Deletes a template"
  },
  {
    "API": "quicksight:DeleteTemplateAlias",
    "EventSource": "quicksight",
    "EventName": "DeleteTemplateAlias",
    "Description": "Deletes the item that the specified template alias points to"
  },
  {
    "API": "quicksight:DeleteTheme",
    "EventSource": "quicksight",
    "EventName": "DeleteTheme",
    "Description": "Deletes a theme"
  },
  {
    "API": "quicksight:DeleteThemeAlias",
    "EventSource": "quicksight",
    "EventName": "DeleteThemeAlias",
    "Description": "Deletes the version of the theme that the specified theme alias points to"
  },
  {
    "API": "quicksight:DeleteTopic",
    "EventSource": "quicksight",
    "EventName": "DeleteTopic",
    "Description": "Deletes a topic"
  },
  {
    "API": "quicksight:DeleteTopicRefreshSchedule",
    "EventSource": "quicksight",
    "EventName": "DeleteTopicRefreshSchedule",
    "Description": "Deletes a topic refresh schedule"
  },
  {
    "API": "quicksight:DeleteUser",
    "EventSource": "quicksight",
    "EventName": "DeleteUser",
    "Description": "Deletes the Amazon QuickSight user that is associated with the identity of the IAM user or role that's making the call"
  },
  {
    "API": "quicksight:DeleteUserByPrincipalId",
    "EventSource": "quicksight",
    "EventName": "DeleteUserByPrincipalId",
    "Description": "Deletes a user identified by its principal ID"
  },
  {
    "API": "quicksight:DeleteVpcConnection",
    "EventSource": "quicksight",
    "EventName": "DeleteVpcConnection",
    "Description": "Deletes a VPC connection"
  },
  {
    "API": "quicksight:DescribeAccountCustomization",
    "EventSource": "quicksight",
    "EventName": "DescribeAccountCustomization",
    "Description": "Describes the customizations associated with the provided Amazon Web Services account and Amazon Amazon QuickSight namespace in an Amazon Web Services Region"
  },
  {
    "API": "quicksight:DescribeAccountSettings",
    "EventSource": "quicksight",
    "EventName": "DescribeAccountSettings",
    "Description": "Describes the settings that were used when your Amazon QuickSight subscription was first created in this Amazon Web Services account"
  },
  {
    "API": "quicksight:DescribeAccountSubscription",
    "EventSource": "quicksight",
    "EventName": "DescribeAccountSubscription",
    "Description": "Use the DescribeAccountSubscription operation to receive a description of an Amazon QuickSight account's subscription"
  },
  {
    "API": "quicksight:DescribeAnalysis",
    "EventSource": "quicksight",
    "EventName": "DescribeAnalysis",
    "Description": "Provides a summary of the metadata for an analysis"
  },
  {
    "API": "quicksight:DescribeAnalysisDefinition",
    "EventSource": "quicksight",
    "EventName": "DescribeAnalysisDefinition",
    "Description": "Provides a detailed description of the definition of an analysis"
  },
  {
    "API": "quicksight:DescribeAnalysisPermissions",
    "EventSource": "quicksight",
    "EventName": "DescribeAnalysisPermissions",
    "Description": "Provides the read and write permissions for an analysis"
  },
  {
    "API": "quicksight:DescribeAssetBundleExportJob",
    "EventSource": "quicksight",
    "EventName": "DescribeAssetBundleExportJob",
    "Description": "Describes an existing export job"
  },
  {
    "API": "quicksight:DescribeAssetBundleImportJob",
    "EventSource": "quicksight",
    "EventName": "DescribeAssetBundleImportJob",
    "Description": "Describes an existing import job"
  },
  {
    "API": "quicksight:DescribeDashboard",
    "EventSource": "quicksight",
    "EventName": "DescribeDashboard",
    "Description": "Provides a summary for a dashboard"
  },
  {
    "API": "quicksight:DescribeDashboardDefinition",
    "EventSource": "quicksight",
    "EventName": "DescribeDashboardDefinition",
    "Description": "Provides a detailed description of the definition of a dashboard"
  },
  {
    "API": "quicksight:DescribeDashboardPermissions",
    "EventSource": "quicksight",
    "EventName": "DescribeDashboardPermissions",
    "Description": "Describes read and write permissions for a dashboard"
  },
  {
    "API": "quicksight:DescribeDashboardSnapshotJob",
    "EventSource": "quicksight",
    "EventName": "DescribeDashboardSnapshotJob",
    "Description": "Describes an existing snapshot job"
  },
  {
    "API": "quicksight:DescribeDashboardSnapshotJobResult",
    "EventSource": "quicksight",
    "EventName": "DescribeDashboardSnapshotJobResult",
    "Description": "Describes the result of an existing snapshot job that has finished running"
  },
  {
    "API": "quicksight:DescribeDataSet",
    "EventSource": "quicksight",
    "EventName": "DescribeDataSet",
    "Description": "Describes a dataset"
  },
  {
    "API": "quicksight:DescribeDataSetPermissions",
    "EventSource": "quicksight",
    "EventName": "DescribeDataSetPermissions",
    "Description": "Describes the permissions on a dataset"
  },
  {
    "API": "quicksight:DescribeDataSetRefreshProperties",
    "EventSource": "quicksight",
    "EventName": "DescribeDataSetRefreshProperties",
    "Description": "Describes the refresh properties of a dataset"
  },
  {
    "API": "quicksight:DescribeDataSource",
    "EventSource": "quicksight",
    "EventName": "DescribeDataSource",
    "Description": "Describes a data source"
  },
  {
    "API": "quicksight:DescribeDataSourcePermissions",
    "EventSource": "quicksight",
    "EventName": "DescribeDataSourcePermissions",
    "Description": "Describes the resource permissions for a data source"
  },
  {
    "API": "quicksight:DescribeFolder",
    "EventSource": "quicksight",
    "EventName": "DescribeFolder",
    "Description": "Describes a folder"
  },
  {
    "API": "quicksight:DescribeFolderPermissions",
    "EventSource": "quicksight",
    "EventName": "DescribeFolderPermissions",
    "Description": "Describes permissions for a folder"
  },
  {
    "API": "quicksight:DescribeFolderResolvedPermissions",
    "EventSource": "quicksight",
    "EventName": "DescribeFolderResolvedPermissions",
    "Description": "Describes the folder resolved permissions"
  },
  {
    "API": "quicksight:DescribeGroup",
    "EventSource": "quicksight",
    "EventName": "DescribeGroup",
    "Description": "Returns an Amazon QuickSight group's description and Amazon Resource Name (ARN)"
  },
  {
    "API": "quicksight:DescribeGroupMembership",
    "EventSource": "quicksight",
    "EventName": "DescribeGroupMembership",
    "Description": "Use the ``DescribeGroupMembership`` operation to determine if a user is a member of the specified group"
  },
  {
    "API": "quicksight:DescribeIamPolicyAssignment",
    "EventSource": "quicksight",
    "EventName": "DescribeIamPolicyAssignment",
    "Description": "Describes an existing IAM policy assignment, as specified by the assignment name"
  },
  {
    "API": "quicksight:DescribeIngestion",
    "EventSource": "quicksight",
    "EventName": "DescribeIngestion",
    "Description": "Describes a SPICE ingestion"
  },
  {
    "API": "quicksight:DescribeIpRestriction",
    "EventSource": "quicksight",
    "EventName": "DescribeIpRestriction",
    "Description": "Provides a summary and status of IP rules"
  },
  {
    "API": "quicksight:DescribeKeyRegistration",
    "EventSource": "quicksight",
    "EventName": "DescribeKeyRegistration",
    "Description": "Describes all customer managed key registrations in a Amazon QuickSight account"
  },
  {
    "API": "quicksight:DescribeNamespace",
    "EventSource": "quicksight",
    "EventName": "DescribeNamespace",
    "Description": "Describes the current namespace"
  },
  {
    "API": "quicksight:DescribeRefreshSchedule",
    "EventSource": "quicksight",
    "EventName": "DescribeRefreshSchedule",
    "Description": "Provides a summary of a refresh schedule"
  },
  {
    "API": "quicksight:DescribeRoleCustomPermission",
    "EventSource": "quicksight",
    "EventName": "DescribeRoleCustomPermission",
    "Description": "Describes all custom permissions that are mapped to a role"
  },
  {
    "API": "quicksight:DescribeTemplate",
    "EventSource": "quicksight",
    "EventName": "DescribeTemplate",
    "Description": "Describes a template's metadata"
  },
  {
    "API": "quicksight:DescribeTemplateAlias",
    "EventSource": "quicksight",
    "EventName": "DescribeTemplateAlias",
    "Description": "Describes the template alias for a template"
  },
  {
    "API": "quicksight:DescribeTemplateDefinition",
    "EventSource": "quicksight",
    "EventName": "DescribeTemplateDefinition",
    "Description": "Provides a detailed description of the definition of a template"
  },
  {
    "API": "quicksight:DescribeTemplatePermissions",
    "EventSource": "quicksight",
    "EventName": "DescribeTemplatePermissions",
    "Description": "Describes read and write permissions on a template"
  },
  {
    "API": "quicksight:DescribeTheme",
    "EventSource": "quicksight",
    "EventName": "DescribeTheme",
    "Description": "Describes a theme"
  },
  {
    "API": "quicksight:DescribeThemeAlias",
    "EventSource": "quicksight",
    "EventName": "DescribeThemeAlias",
    "Description": "Describes the alias for a theme"
  },
  {
    "API": "quicksight:DescribeThemePermissions",
    "EventSource": "quicksight",
    "EventName": "DescribeThemePermissions",
    "Description": "Describes the read and write permissions for a theme"
  },
  {
    "API": "quicksight:DescribeTopic",
    "EventSource": "quicksight",
    "EventName": "DescribeTopic",
    "Description": "Describes a topic"
  },
  {
    "API": "quicksight:DescribeTopicPermissions",
    "EventSource": "quicksight",
    "EventName": "DescribeTopicPermissions",
    "Description": "Describes the permissions of a topic"
  },
  {
    "API": "quicksight:DescribeTopicRefresh",
    "EventSource": "quicksight",
    "EventName": "DescribeTopicRefresh",
    "Description": "Describes the status of a topic refresh"
  },
  {
    "API": "quicksight:DescribeTopicRefreshSchedule",
    "EventSource": "quicksight",
    "EventName": "DescribeTopicRefreshSchedule",
    "Description": "Deletes a topic refresh schedule"
  },
  {
    "API": "quicksight:DescribeUser",
    "EventSource": "quicksight",
    "EventName": "DescribeUser",
    "Description": "Returns information about a user, given the user name"
  },
  {
    "API": "quicksight:DescribeVpcConnection",
    "EventSource": "quicksight",
    "EventName": "DescribeVpcConnection",
    "Description": "Describes a VPC connection"
  },
  {
    "API": "quicksight:GenerateEmbedUrlForAnonymousUser",
    "EventSource": "quicksight",
    "EventName": "GenerateEmbedUrlForAnonymousUser",
    "Description": "Generates an embed URL that you can use to embed an Amazon QuickSight dashboard or visual in your website, without having to register any reader users"
  },
  {
    "API": "quicksight:GenerateEmbedUrlForRegisteredUser",
    "EventSource": "quicksight",
    "EventName": "GenerateEmbedUrlForRegisteredUser",
    "Description": "Generates an embed URL that you can use to embed an Amazon QuickSight experience in your website"
  },
  {
    "API": "quicksight:GeneratePresignedUrl",
    "EventSource": "quicksight",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "quicksight:GetDashboardEmbedUrl",
    "EventSource": "quicksight",
    "EventName": "GetDashboardEmbedUrl",
    "Description": "Generates a temporary session URL and authorization code(bearer token) that you can use to embed an Amazon QuickSight read-only dashboard in your website or application"
  },
  {
    "API": "quicksight:GetSessionEmbedUrl",
    "EventSource": "quicksight",
    "EventName": "GetSessionEmbedUrl",
    "Description": "Generates a session URL and authorization code that you can use to embed the Amazon Amazon QuickSight console in your web server code"
  },
  {
    "API": "quicksight:ListAnalyses",
    "EventSource": "quicksight",
    "EventName": "ListAnalyses",
    "Description": "Lists Amazon QuickSight analyses that exist in the specified Amazon Web Services account"
  },
  {
    "API": "quicksight:ListAssetBundleExportJobs",
    "EventSource": "quicksight",
    "EventName": "ListAssetBundleExportJobs",
    "Description": "Lists all asset bundle export jobs that have been taken place in the last 14 days"
  },
  {
    "API": "quicksight:ListAssetBundleImportJobs",
    "EventSource": "quicksight",
    "EventName": "ListAssetBundleImportJobs",
    "Description": "Lists all asset bundle import jobs that have taken place in the last 14 days"
  },
  {
    "API": "quicksight:ListDashboardVersions",
    "EventSource": "quicksight",
    "EventName": "ListDashboardVersions",
    "Description": "Lists all the versions of the dashboards in the Amazon QuickSight subscription"
  },
  {
    "API": "quicksight:ListDashboards",
    "EventSource": "quicksight",
    "EventName": "ListDashboards",
    "Description": "Lists dashboards in an Amazon Web Services account"
  },
  {
    "API": "quicksight:ListDataSets",
    "EventSource": "quicksight",
    "EventName": "ListDataSets",
    "Description": "Lists all of the datasets belonging to the current Amazon Web Services account in an Amazon Web Services Region"
  },
  {
    "API": "quicksight:ListDataSources",
    "EventSource": "quicksight",
    "EventName": "ListDataSources",
    "Description": "Lists data sources in current Amazon Web Services Region that belong to this Amazon Web Services account"
  },
  {
    "API": "quicksight:ListFolderMembers",
    "EventSource": "quicksight",
    "EventName": "ListFolderMembers",
    "Description": "List all assets ( ``DASHBOARD``, ``ANALYSIS``, and ``DATASET``) in a folder"
  },
  {
    "API": "quicksight:ListFolders",
    "EventSource": "quicksight",
    "EventName": "ListFolders",
    "Description": "Lists all folders in an account"
  },
  {
    "API": "quicksight:ListGroupMemberships",
    "EventSource": "quicksight",
    "EventName": "ListGroupMemberships",
    "Description": "Lists member users in a group"
  },
  {
    "API": "quicksight:ListGroups",
    "EventSource": "quicksight",
    "EventName": "ListGroups",
    "Description": "Lists all user groups in Amazon QuickSight"
  },
  {
    "API": "quicksight:ListIamPolicyAssignments",
    "EventSource": "quicksight",
    "EventName": "ListIamPolicyAssignments",
    "Description": "Lists the IAM policy assignments in the current Amazon QuickSight account"
  },
  {
    "API": "quicksight:ListIamPolicyAssignmentsForUser",
    "EventSource": "quicksight",
    "EventName": "ListIamPolicyAssignmentsForUser",
    "Description": "Lists all of the IAM policy assignments, including the Amazon Resource Names (ARNs), for the IAM policies assigned to the specified user and group, or groups that the user belongs to"
  },
  {
    "API": "quicksight:ListIdentityPropagationConfigs",
    "EventSource": "quicksight",
    "EventName": "ListIdentityPropagationConfigs",
    "Description": "Lists all services and authorized targets that the Amazon QuickSight IAM Identity Center application can access"
  },
  {
    "API": "quicksight:ListIngestions",
    "EventSource": "quicksight",
    "EventName": "ListIngestions",
    "Description": "Lists the history of SPICE ingestions for a dataset"
  },
  {
    "API": "quicksight:ListNamespaces",
    "EventSource": "quicksight",
    "EventName": "ListNamespaces",
    "Description": "Lists the namespaces for the specified Amazon Web Services account"
  },
  {
    "API": "quicksight:ListRefreshSchedules",
    "EventSource": "quicksight",
    "EventName": "ListRefreshSchedules",
    "Description": "Lists the refresh schedules of a dataset"
  },
  {
    "API": "quicksight:ListRoleMemberships",
    "EventSource": "quicksight",
    "EventName": "ListRoleMemberships",
    "Description": "Lists all groups that are associated with a role"
  },
  {
    "API": "quicksight:ListTagsForResource",
    "EventSource": "quicksight",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags assigned to a resource"
  },
  {
    "API": "quicksight:ListTemplateAliases",
    "EventSource": "quicksight",
    "EventName": "ListTemplateAliases",
    "Description": "Lists all the aliases of a template"
  },
  {
    "API": "quicksight:ListTemplateVersions",
    "EventSource": "quicksight",
    "EventName": "ListTemplateVersions",
    "Description": "Lists all the versions of the templates in the current Amazon QuickSight account"
  },
  {
    "API": "quicksight:ListTemplates",
    "EventSource": "quicksight",
    "EventName": "ListTemplates",
    "Description": "Lists all the templates in the current Amazon QuickSight account"
  },
  {
    "API": "quicksight:ListThemeAliases",
    "EventSource": "quicksight",
    "EventName": "ListThemeAliases",
    "Description": "Lists all the aliases of a theme"
  },
  {
    "API": "quicksight:ListThemeVersions",
    "EventSource": "quicksight",
    "EventName": "ListThemeVersions",
    "Description": "Lists all the versions of the themes in the current Amazon Web Services account"
  },
  {
    "API": "quicksight:ListThemes",
    "EventSource": "quicksight",
    "EventName": "ListThemes",
    "Description": "Lists all the themes in the current Amazon Web Services account"
  },
  {
    "API": "quicksight:ListTopicRefreshSchedules",
    "EventSource": "quicksight",
    "EventName": "ListTopicRefreshSchedules",
    "Description": "Lists all of the refresh schedules for a topic"
  },
  {
    "API": "quicksight:ListTopics",
    "EventSource": "quicksight",
    "EventName": "ListTopics",
    "Description": "Lists all of the topics within an account"
  },
  {
    "API": "quicksight:ListUserGroups",
    "EventSource": "quicksight",
    "EventName": "ListUserGroups",
    "Description": "Lists the Amazon QuickSight groups that an Amazon QuickSight user is a member of"
  },
  {
    "API": "quicksight:ListUsers",
    "EventSource": "quicksight",
    "EventName": "ListUsers",
    "Description": "Returns a list of all of the Amazon QuickSight users belonging to this account"
  },
  {
    "API": "quicksight:ListVpcConnections",
    "EventSource": "quicksight",
    "EventName": "ListVpcConnections",
    "Description": "Lists all of the VPC connections in the current set Amazon Web Services Region of an Amazon Web Services account"
  },
  {
    "API": "quicksight:PutDataSetRefreshProperties",
    "EventSource": "quicksight",
    "EventName": "PutDataSetRefreshProperties",
    "Description": "Creates or updates the dataset refresh properties for the dataset"
  },
  {
    "API": "quicksight:RegisterUser",
    "EventSource": "quicksight",
    "EventName": "RegisterUser",
    "Description": "Creates an Amazon QuickSight user whose identity is associated with the Identity and Access Management (IAM) identity or role specified in the request"
  },
  {
    "API": "quicksight:RestoreAnalysis",
    "EventSource": "quicksight",
    "EventName": "RestoreAnalysis",
    "Description": "Restores an analysis"
  },
  {
    "API": "quicksight:SearchAnalyses",
    "EventSource": "quicksight",
    "EventName": "SearchAnalyses",
    "Description": "Searches for analyses that belong to the user specified in the filter"
  },
  {
    "API": "quicksight:SearchDashboards",
    "EventSource": "quicksight",
    "EventName": "SearchDashboards",
    "Description": "Searches for dashboards that belong to a user"
  },
  {
    "API": "quicksight:SearchDataSets",
    "EventSource": "quicksight",
    "EventName": "SearchDataSets",
    "Description": "Use the ``SearchDataSets`` operation to search for datasets that belong to an account"
  },
  {
    "API": "quicksight:SearchDataSources",
    "EventSource": "quicksight",
    "EventName": "SearchDataSources",
    "Description": "Use the ``SearchDataSources`` operation to search for data sources that belong to an account"
  },
  {
    "API": "quicksight:SearchFolders",
    "EventSource": "quicksight",
    "EventName": "SearchFolders",
    "Description": "Searches the subfolders in a folder"
  },
  {
    "API": "quicksight:SearchGroups",
    "EventSource": "quicksight",
    "EventName": "SearchGroups",
    "Description": "Use the ``SearchGroups`` operation to search groups in a specified Amazon QuickSight namespace using the supplied filters"
  },
  {
    "API": "quicksight:StartAssetBundleExportJob",
    "EventSource": "quicksight",
    "EventName": "StartAssetBundleExportJob",
    "Description": "Starts an Asset Bundle export job"
  },
  {
    "API": "quicksight:StartAssetBundleImportJob",
    "EventSource": "quicksight",
    "EventName": "StartAssetBundleImportJob",
    "Description": "Starts an Asset Bundle import job"
  },
  {
    "API": "quicksight:StartDashboardSnapshotJob",
    "EventSource": "quicksight",
    "EventName": "StartDashboardSnapshotJob",
    "Description": "Starts an asynchronous job that generates a snapshot of a dashboard's output"
  },
  {
    "API": "quicksight:TagResource",
    "EventSource": "quicksight",
    "EventName": "TagResource",
    "Description": "Assigns one or more tags (key-value pairs) to the specified Amazon QuickSight resource"
  },
  {
    "API": "quicksight:UntagResource",
    "EventSource": "quicksight",
    "EventName": "UntagResource",
    "Description": "Removes a tag or tags from a resource"
  },
  {
    "API": "quicksight:UpdateAccountCustomization",
    "EventSource": "quicksight",
    "EventName": "UpdateAccountCustomization",
    "Description": "Updates Amazon QuickSight customizations for the current Amazon Web Services Region"
  },
  {
    "API": "quicksight:UpdateAccountSettings",
    "EventSource": "quicksight",
    "EventName": "UpdateAccountSettings",
    "Description": "Updates the Amazon QuickSight settings in your Amazon Web Services account"
  },
  {
    "API": "quicksight:UpdateAnalysis",
    "EventSource": "quicksight",
    "EventName": "UpdateAnalysis",
    "Description": "Updates an analysis in Amazon QuickSight"
  },
  {
    "API": "quicksight:UpdateAnalysisPermissions",
    "EventSource": "quicksight",
    "EventName": "UpdateAnalysisPermissions",
    "Description": "Updates the read and write permissions for an analysis"
  },
  {
    "API": "quicksight:UpdateDashboard",
    "EventSource": "quicksight",
    "EventName": "UpdateDashboard",
    "Description": "Updates a dashboard in an Amazon Web Services account"
  },
  {
    "API": "quicksight:UpdateDashboardLinks",
    "EventSource": "quicksight",
    "EventName": "UpdateDashboardLinks",
    "Description": "Updates the linked analyses on a dashboard"
  },
  {
    "API": "quicksight:UpdateDashboardPermissions",
    "EventSource": "quicksight",
    "EventName": "UpdateDashboardPermissions",
    "Description": "Updates read and write permissions on a dashboard"
  },
  {
    "API": "quicksight:UpdateDashboardPublishedVersion",
    "EventSource": "quicksight",
    "EventName": "UpdateDashboardPublishedVersion",
    "Description": "Updates the published version of a dashboard"
  },
  {
    "API": "quicksight:UpdateDataSet",
    "EventSource": "quicksight",
    "EventName": "UpdateDataSet",
    "Description": "Updates a dataset"
  },
  {
    "API": "quicksight:UpdateDataSetPermissions",
    "EventSource": "quicksight",
    "EventName": "UpdateDataSetPermissions",
    "Description": "Updates the permissions on a dataset"
  },
  {
    "API": "quicksight:UpdateDataSource",
    "EventSource": "quicksight",
    "EventName": "UpdateDataSource",
    "Description": "Updates a data source"
  },
  {
    "API": "quicksight:UpdateDataSourcePermissions",
    "EventSource": "quicksight",
    "EventName": "UpdateDataSourcePermissions",
    "Description": "Updates the permissions to a data source"
  },
  {
    "API": "quicksight:UpdateFolder",
    "EventSource": "quicksight",
    "EventName": "UpdateFolder",
    "Description": "Updates the name of a folder"
  },
  {
    "API": "quicksight:UpdateFolderPermissions",
    "EventSource": "quicksight",
    "EventName": "UpdateFolderPermissions",
    "Description": "Updates permissions of a folder"
  },
  {
    "API": "quicksight:UpdateGroup",
    "EventSource": "quicksight",
    "EventName": "UpdateGroup",
    "Description": "Changes a group description"
  },
  {
    "API": "quicksight:UpdateIamPolicyAssignment",
    "EventSource": "quicksight",
    "EventName": "UpdateIamPolicyAssignment",
    "Description": "Updates an existing IAM policy assignment"
  },
  {
    "API": "quicksight:UpdateIdentityPropagationConfig",
    "EventSource": "quicksight",
    "EventName": "UpdateIdentityPropagationConfig",
    "Description": "Adds or updates services and authorized targets to configure what the Amazon QuickSight IAM Identity Center application can access"
  },
  {
    "API": "quicksight:UpdateIpRestriction",
    "EventSource": "quicksight",
    "EventName": "UpdateIpRestriction",
    "Description": "Updates the content and status of IP rules"
  },
  {
    "API": "quicksight:UpdateKeyRegistration",
    "EventSource": "quicksight",
    "EventName": "UpdateKeyRegistration",
    "Description": "Updates a customer managed key in a Amazon QuickSight account"
  },
  {
    "API": "quicksight:UpdatePublicSharingSettings",
    "EventSource": "quicksight",
    "EventName": "UpdatePublicSharingSettings",
    "Description": "Use the ``UpdatePublicSharingSettings`` operation to turn on or turn off the public sharing settings of an Amazon QuickSight dashboard"
  },
  {
    "API": "quicksight:UpdateRefreshSchedule",
    "EventSource": "quicksight",
    "EventName": "UpdateRefreshSchedule",
    "Description": "Updates a refresh schedule for a dataset"
  },
  {
    "API": "quicksight:UpdateRoleCustomPermission",
    "EventSource": "quicksight",
    "EventName": "UpdateRoleCustomPermission",
    "Description": "Updates the custom permissions that are associated with a role"
  },
  {
    "API": "quicksight:UpdateSpiceCapacityConfiguration",
    "EventSource": "quicksight",
    "EventName": "UpdateSpiceCapacityConfiguration",
    "Description": "Updates the SPICE capacity configuration for a Amazon QuickSight account"
  },
  {
    "API": "quicksight:UpdateTemplate",
    "EventSource": "quicksight",
    "EventName": "UpdateTemplate",
    "Description": "Updates a template from an existing Amazon QuickSight analysis or another template"
  },
  {
    "API": "quicksight:UpdateTemplateAlias",
    "EventSource": "quicksight",
    "EventName": "UpdateTemplateAlias",
    "Description": "Updates the template alias of a template"
  },
  {
    "API": "quicksight:UpdateTemplatePermissions",
    "EventSource": "quicksight",
    "EventName": "UpdateTemplatePermissions",
    "Description": "Updates the resource permissions for a template"
  },
  {
    "API": "quicksight:UpdateTheme",
    "EventSource": "quicksight",
    "EventName": "UpdateTheme",
    "Description": "Updates a theme"
  },
  {
    "API": "quicksight:UpdateThemeAlias",
    "EventSource": "quicksight",
    "EventName": "UpdateThemeAlias",
    "Description": "Updates an alias of a theme"
  },
  {
    "API": "quicksight:UpdateThemePermissions",
    "EventSource": "quicksight",
    "EventName": "UpdateThemePermissions",
    "Description": "Updates the resource permissions for a theme"
  },
  {
    "API": "quicksight:UpdateTopic",
    "EventSource": "quicksight",
    "EventName": "UpdateTopic",
    "Description": "Updates a topic"
  },
  {
    "API": "quicksight:UpdateTopicPermissions",
    "EventSource": "quicksight",
    "EventName": "UpdateTopicPermissions",
    "Description": "Updates the permissions of a topic"
  },
  {
    "API": "quicksight:UpdateTopicRefreshSchedule",
    "EventSource": "quicksight",
    "EventName": "UpdateTopicRefreshSchedule",
    "Description": "Updates a topic refresh schedule"
  },
  {
    "API": "quicksight:UpdateUser",
    "EventSource": "quicksight",
    "EventName": "UpdateUser",
    "Description": "Updates an Amazon QuickSight user"
  },
  {
    "API": "quicksight:UpdateVpcConnection",
    "EventSource": "quicksight",
    "EventName": "UpdateVpcConnection",
    "Description": "Updates a VPC connection"
  },
  {
    "API": "ram:AcceptResourceShareInvitation",
    "EventSource": "ram",
    "EventName": "AcceptResourceShareInvitation",
    "Description": "Accepts an invitation to a resource share from another Amazon Web Services account"
  },
  {
    "API": "ram:AssociateResourceShare",
    "EventSource": "ram",
    "EventName": "AssociateResourceShare",
    "Description": "Adds the specified list of principals and list of resources to a resource share"
  },
  {
    "API": "ram:AssociateResourceSharePermission",
    "EventSource": "ram",
    "EventName": "AssociateResourceSharePermission",
    "Description": "Adds or replaces the RAM permission for a resource type included in a resource share"
  },
  {
    "API": "ram:CreatePermission",
    "EventSource": "ram",
    "EventName": "CreatePermission",
    "Description": "Creates a customer managed permission for a specified resource type that you can attach to resource shares"
  },
  {
    "API": "ram:CreatePermissionVersion",
    "EventSource": "ram",
    "EventName": "CreatePermissionVersion",
    "Description": "Creates a new version of the specified customer managed permission"
  },
  {
    "API": "ram:CreateResourceShare",
    "EventSource": "ram",
    "EventName": "CreateResourceShare",
    "Description": "Creates a resource share"
  },
  {
    "API": "ram:DeletePermission",
    "EventSource": "ram",
    "EventName": "DeletePermission",
    "Description": "Deletes the specified customer managed permission in the Amazon Web Services Region in which you call this operation"
  },
  {
    "API": "ram:DeletePermissionVersion",
    "EventSource": "ram",
    "EventName": "DeletePermissionVersion",
    "Description": "Deletes one version of a customer managed permission"
  },
  {
    "API": "ram:DeleteResourceShare",
    "EventSource": "ram",
    "EventName": "DeleteResourceShare",
    "Description": "Deletes the specified resource share"
  },
  {
    "API": "ram:DisassociateResourceShare",
    "EventSource": "ram",
    "EventName": "DisassociateResourceShare",
    "Description": "Removes the specified principals or resources from participating in the specified resource share"
  },
  {
    "API": "ram:DisassociateResourceSharePermission",
    "EventSource": "ram",
    "EventName": "DisassociateResourceSharePermission",
    "Description": "Removes a managed permission from a resource share"
  },
  {
    "API": "ram:EnableSharingWithAwsOrganization",
    "EventSource": "ram",
    "EventName": "EnableSharingWithAwsOrganization",
    "Description": "Enables resource sharing within your organization in Organizations"
  },
  {
    "API": "ram:GeneratePresignedUrl",
    "EventSource": "ram",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "ram:GetPermission",
    "EventSource": "ram",
    "EventName": "GetPermission",
    "Description": "Retrieves the contents of a managed permission in JSON format"
  },
  {
    "API": "ram:GetResourcePolicies",
    "EventSource": "ram",
    "EventName": "GetResourcePolicies",
    "Description": "Retrieves the resource policies for the specified resources that you own and have shared"
  },
  {
    "API": "ram:GetResourceShareAssociations",
    "EventSource": "ram",
    "EventName": "GetResourceShareAssociations",
    "Description": "Retrieves the lists of resources and principals that associated for resource shares that you own"
  },
  {
    "API": "ram:GetResourceShareInvitations",
    "EventSource": "ram",
    "EventName": "GetResourceShareInvitations",
    "Description": "Retrieves details about invitations that you have received for resource shares"
  },
  {
    "API": "ram:GetResourceShares",
    "EventSource": "ram",
    "EventName": "GetResourceShares",
    "Description": "Retrieves details about the resource shares that you own or that are shared with you"
  },
  {
    "API": "ram:ListPendingInvitationResources",
    "EventSource": "ram",
    "EventName": "ListPendingInvitationResources",
    "Description": "Lists the resources in a resource share that is shared with you but for which the invitation is still ``PENDING``"
  },
  {
    "API": "ram:ListPermissionAssociations",
    "EventSource": "ram",
    "EventName": "ListPermissionAssociations",
    "Description": "Lists information about the managed permission and its associations to any resource shares that use this managed permission"
  },
  {
    "API": "ram:ListPermissionVersions",
    "EventSource": "ram",
    "EventName": "ListPermissionVersions",
    "Description": "Lists the available versions of the specified RAM permission"
  },
  {
    "API": "ram:ListPermissions",
    "EventSource": "ram",
    "EventName": "ListPermissions",
    "Description": "Retrieves a list of available RAM permissions that you can use for the supported resource types"
  },
  {
    "API": "ram:ListPrincipals",
    "EventSource": "ram",
    "EventName": "ListPrincipals",
    "Description": "Lists the principals that you are sharing resources with or that are sharing resources with you"
  },
  {
    "API": "ram:ListReplacePermissionAssociationsWork",
    "EventSource": "ram",
    "EventName": "ListReplacePermissionAssociationsWork",
    "Description": "Retrieves the current status of the asynchronous tasks performed by RAM when you perform the  ReplacePermissionAssociationsWork operation"
  },
  {
    "API": "ram:ListResourceSharePermissions",
    "EventSource": "ram",
    "EventName": "ListResourceSharePermissions",
    "Description": "Lists the RAM permissions that are associated with a resource share"
  },
  {
    "API": "ram:ListResourceTypes",
    "EventSource": "ram",
    "EventName": "ListResourceTypes",
    "Description": "Lists the resource types that can be shared by RAM"
  },
  {
    "API": "ram:ListResources",
    "EventSource": "ram",
    "EventName": "ListResources",
    "Description": "Lists the resources that you added to a resource share or the resources that are shared with you"
  },
  {
    "API": "ram:PromotePermissionCreatedFromPolicy",
    "EventSource": "ram",
    "EventName": "PromotePermissionCreatedFromPolicy",
    "Description": "When you attach a resource-based policy to a resource, RAM automatically creates a resource share of ``featureSet``= ``CREATED_FROM_POLICY`` with a managed permission that has the same IAM permissions as the original resource-based policy"
  },
  {
    "API": "ram:PromoteResourceShareCreatedFromPolicy",
    "EventSource": "ram",
    "EventName": "PromoteResourceShareCreatedFromPolicy",
    "Description": "When you attach a resource-based policy to a resource, RAM automatically creates a resource share of ``featureSet``= ``CREATED_FROM_POLICY`` with a managed permission that has the same IAM permissions as the original resource-based policy"
  },
  {
    "API": "ram:RejectResourceShareInvitation",
    "EventSource": "ram",
    "EventName": "RejectResourceShareInvitation",
    "Description": "Rejects an invitation to a resource share from another Amazon Web Services account"
  },
  {
    "API": "ram:ReplacePermissionAssociations",
    "EventSource": "ram",
    "EventName": "ReplacePermissionAssociations",
    "Description": "Updates all resource shares that use a managed permission to a different managed permission"
  },
  {
    "API": "ram:SetDefaultPermissionVersion",
    "EventSource": "ram",
    "EventName": "SetDefaultPermissionVersion",
    "Description": "Designates the specified version number as the default version for the specified customer managed permission"
  },
  {
    "API": "ram:TagResource",
    "EventSource": "ram",
    "EventName": "TagResource",
    "Description": "Adds the specified tag keys and values to a resource share or managed permission"
  },
  {
    "API": "ram:UntagResource",
    "EventSource": "ram",
    "EventName": "UntagResource",
    "Description": "Removes the specified tag key and value pairs from the specified resource share or managed permission"
  },
  {
    "API": "ram:UpdateResourceShare",
    "EventSource": "ram",
    "EventName": "UpdateResourceShare",
    "Description": "Modifies some of the properties of the specified resource share"
  },
  {
    "API": "rbin:CreateRule",
    "EventSource": "rbin",
    "EventName": "CreateRule",
    "Description": "Creates a Recycle Bin retention rule"
  },
  {
    "API": "rbin:DeleteRule",
    "EventSource": "rbin",
    "EventName": "DeleteRule",
    "Description": "Deletes a Recycle Bin retention rule"
  },
  {
    "API": "rbin:GeneratePresignedUrl",
    "EventSource": "rbin",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "rbin:GetRule",
    "EventSource": "rbin",
    "EventName": "GetRule",
    "Description": "Gets information about a Recycle Bin retention rule"
  },
  {
    "API": "rbin:ListRules",
    "EventSource": "rbin",
    "EventName": "ListRules",
    "Description": "Lists the Recycle Bin retention rules in the Region"
  },
  {
    "API": "rbin:ListTagsForResource",
    "EventSource": "rbin",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags assigned to a retention rule"
  },
  {
    "API": "rbin:LockRule",
    "EventSource": "rbin",
    "EventName": "LockRule",
    "Description": "Locks a retention rule"
  },
  {
    "API": "rbin:TagResource",
    "EventSource": "rbin",
    "EventName": "TagResource",
    "Description": "Assigns tags to the specified retention rule"
  },
  {
    "API": "rbin:UnlockRule",
    "EventSource": "rbin",
    "EventName": "UnlockRule",
    "Description": "Unlocks a retention rule"
  },
  {
    "API": "rbin:UntagResource",
    "EventSource": "rbin",
    "EventName": "UntagResource",
    "Description": "Unassigns a tag from a retention rule"
  },
  {
    "API": "rbin:UpdateRule",
    "EventSource": "rbin",
    "EventName": "UpdateRule",
    "Description": "Updates an existing Recycle Bin retention rule"
  },
  {
    "API": "rds:AddRoleToDbCluster",
    "EventSource": "rds",
    "EventName": "AddRoleToDbCluster",
    "Description": "Associates an Identity and Access Management (IAM) role with a DB cluster"
  },
  {
    "API": "rds:AddRoleToDbInstance",
    "EventSource": "rds",
    "EventName": "AddRoleToDbInstance",
    "Description": "Associates an Amazon Web Services Identity and Access Management (IAM) role with a DB instance"
  },
  {
    "API": "rds:AddSourceIdentifierToSubscription",
    "EventSource": "rds",
    "EventName": "AddSourceIdentifierToSubscription",
    "Description": "Adds a source identifier to an existing RDS event notification subscription"
  },
  {
    "API": "rds:AddTagsToResource",
    "EventSource": "rds",
    "EventName": "AddTagsToResource",
    "Description": "Adds metadata tags to an Amazon RDS resource"
  },
  {
    "API": "rds:ApplyPendingMaintenanceAction",
    "EventSource": "rds",
    "EventName": "ApplyPendingMaintenanceAction",
    "Description": "Applies a pending maintenance action to a resource (for example, to a DB instance)"
  },
  {
    "API": "rds:AuthorizeDbSecurityGroupIngress",
    "EventSource": "rds",
    "EventName": "AuthorizeDbSecurityGroupIngress",
    "Description": "Enables ingress to a DBSecurityGroup using one of two forms of authorization"
  },
  {
    "API": "rds:BacktrackDbCluster",
    "EventSource": "rds",
    "EventName": "BacktrackDbCluster",
    "Description": "Backtracks a DB cluster to a specific time, without creating a new DB cluster"
  },
  {
    "API": "rds:CancelExportTask",
    "EventSource": "rds",
    "EventName": "CancelExportTask",
    "Description": "Cancels an export task in progress that is exporting a snapshot or cluster to Amazon S3"
  },
  {
    "API": "rds:CopyDbClusterParameterGroup",
    "EventSource": "rds",
    "EventName": "CopyDbClusterParameterGroup",
    "Description": "Copies the specified DB cluster parameter group"
  },
  {
    "API": "rds:CopyDbClusterSnapshot",
    "EventSource": "rds",
    "EventName": "CopyDbClusterSnapshot",
    "Description": "Copies a snapshot of a DB cluster"
  },
  {
    "API": "rds:CopyDbParameterGroup",
    "EventSource": "rds",
    "EventName": "CopyDbParameterGroup",
    "Description": "Copies the specified DB parameter group"
  },
  {
    "API": "rds:CopyDbSnapshot",
    "EventSource": "rds",
    "EventName": "CopyDbSnapshot",
    "Description": "Copies the specified DB snapshot"
  },
  {
    "API": "rds:CopyOptionGroup",
    "EventSource": "rds",
    "EventName": "CopyOptionGroup",
    "Description": "Copies the specified option group"
  },
  {
    "API": "rds:CreateBlueGreenDeployment",
    "EventSource": "rds",
    "EventName": "CreateBlueGreenDeployment",
    "Description": "Creates a blue/green deployment"
  },
  {
    "API": "rds:CreateCustomDbEngineVersion",
    "EventSource": "rds",
    "EventName": "CreateCustomDbEngineVersion",
    "Description": "Creates a custom DB engine version (CEV)"
  },
  {
    "API": "rds:CreateDbCluster",
    "EventSource": "rds",
    "EventName": "CreateDbCluster",
    "Description": "Creates a new Amazon Aurora DB cluster or Multi-AZ DB cluster"
  },
  {
    "API": "rds:CreateDbClusterEndpoint",
    "EventSource": "rds",
    "EventName": "CreateDbClusterEndpoint",
    "Description": "Creates a new custom endpoint and associates it with an Amazon Aurora DB cluster"
  },
  {
    "API": "rds:CreateDbClusterParameterGroup",
    "EventSource": "rds",
    "EventName": "CreateDbClusterParameterGroup",
    "Description": "Creates a new DB cluster parameter group"
  },
  {
    "API": "rds:CreateDbClusterSnapshot",
    "EventSource": "rds",
    "EventName": "CreateDbClusterSnapshot",
    "Description": "Creates a snapshot of a DB cluster"
  },
  {
    "API": "rds:CreateDbInstance",
    "EventSource": "rds",
    "EventName": "CreateDbInstance",
    "Description": "Creates a new DB instance"
  },
  {
    "API": "rds:CreateDbInstanceReadReplica",
    "EventSource": "rds",
    "EventName": "CreateDbInstanceReadReplica",
    "Description": "Creates a new DB instance that acts as a read replica for an existing source DB instance or Multi-AZ DB cluster"
  },
  {
    "API": "rds:CreateDbParameterGroup",
    "EventSource": "rds",
    "EventName": "CreateDbParameterGroup",
    "Description": "Creates a new DB parameter group"
  },
  {
    "API": "rds:CreateDbProxy",
    "EventSource": "rds",
    "EventName": "CreateDbProxy",
    "Description": "Creates a new DB proxy"
  },
  {
    "API": "rds:CreateDbProxyEndpoint",
    "EventSource": "rds",
    "EventName": "CreateDbProxyEndpoint",
    "Description": "Creates a ``DBProxyEndpoint``"
  },
  {
    "API": "rds:CreateDbSecurityGroup",
    "EventSource": "rds",
    "EventName": "CreateDbSecurityGroup",
    "Description": "Creates a new DB security group"
  },
  {
    "API": "rds:CreateDbShardGroup",
    "EventSource": "rds",
    "EventName": "CreateDbShardGroup",
    "Description": "Creates a new DB shard group for Aurora Limitless Database"
  },
  {
    "API": "rds:CreateDbSnapshot",
    "EventSource": "rds",
    "EventName": "CreateDbSnapshot",
    "Description": "Creates a snapshot of a DB instance"
  },
  {
    "API": "rds:CreateDbSubnetGroup",
    "EventSource": "rds",
    "EventName": "CreateDbSubnetGroup",
    "Description": "Creates a new DB subnet group"
  },
  {
    "API": "rds:CreateEventSubscription",
    "EventSource": "rds",
    "EventName": "CreateEventSubscription",
    "Description": "Creates an RDS event notification subscription"
  },
  {
    "API": "rds:CreateGlobalCluster",
    "EventSource": "rds",
    "EventName": "CreateGlobalCluster",
    "Description": "Creates an Aurora global database spread across multiple Amazon Web Services Regions"
  },
  {
    "API": "rds:CreateIntegration",
    "EventSource": "rds",
    "EventName": "CreateIntegration",
    "Description": "Creates a zero-ETL integration with Amazon Redshift"
  },
  {
    "API": "rds:CreateOptionGroup",
    "EventSource": "rds",
    "EventName": "CreateOptionGroup",
    "Description": "Creates a new option group"
  },
  {
    "API": "rds:CreateTenantDatabase",
    "EventSource": "rds",
    "EventName": "CreateTenantDatabase",
    "Description": "Creates a tenant database in a DB instance that uses the multi-tenant configuration"
  },
  {
    "API": "rds:DeleteBlueGreenDeployment",
    "EventSource": "rds",
    "EventName": "DeleteBlueGreenDeployment",
    "Description": "Deletes a blue/green deployment"
  },
  {
    "API": "rds:DeleteCustomDbEngineVersion",
    "EventSource": "rds",
    "EventName": "DeleteCustomDbEngineVersion",
    "Description": "Deletes a custom engine version"
  },
  {
    "API": "rds:DeleteDbCluster",
    "EventSource": "rds",
    "EventName": "DeleteDbCluster",
    "Description": "The DeleteDBCluster action deletes a previously provisioned DB cluster"
  },
  {
    "API": "rds:DeleteDbClusterAutomatedBackup",
    "EventSource": "rds",
    "EventName": "DeleteDbClusterAutomatedBackup",
    "Description": "Deletes automated backups using the ``DbClusterResourceId`` value of the source DB cluster or the Amazon Resource Name (ARN) of the automated backups"
  },
  {
    "API": "rds:DeleteDbClusterEndpoint",
    "EventSource": "rds",
    "EventName": "DeleteDbClusterEndpoint",
    "Description": "Deletes a custom endpoint and removes it from an Amazon Aurora DB cluster"
  },
  {
    "API": "rds:DeleteDbClusterParameterGroup",
    "EventSource": "rds",
    "EventName": "DeleteDbClusterParameterGroup",
    "Description": "Deletes a specified DB cluster parameter group"
  },
  {
    "API": "rds:DeleteDbClusterSnapshot",
    "EventSource": "rds",
    "EventName": "DeleteDbClusterSnapshot",
    "Description": "Deletes a DB cluster snapshot"
  },
  {
    "API": "rds:DeleteDbInstance",
    "EventSource": "rds",
    "EventName": "DeleteDbInstance",
    "Description": "Deletes a previously provisioned DB instance"
  },
  {
    "API": "rds:DeleteDbInstanceAutomatedBackup",
    "EventSource": "rds",
    "EventName": "DeleteDbInstanceAutomatedBackup",
    "Description": "Deletes automated backups using the ``DbiResourceId`` value of the source DB instance or the Amazon Resource Name (ARN) of the automated backups"
  },
  {
    "API": "rds:DeleteDbParameterGroup",
    "EventSource": "rds",
    "EventName": "DeleteDbParameterGroup",
    "Description": "Deletes a specified DB parameter group"
  },
  {
    "API": "rds:DeleteDbProxy",
    "EventSource": "rds",
    "EventName": "DeleteDbProxy",
    "Description": "Deletes an existing DB proxy"
  },
  {
    "API": "rds:DeleteDbProxyEndpoint",
    "EventSource": "rds",
    "EventName": "DeleteDbProxyEndpoint",
    "Description": "Deletes a ``DBProxyEndpoint``"
  },
  {
    "API": "rds:DeleteDbSecurityGroup",
    "EventSource": "rds",
    "EventName": "DeleteDbSecurityGroup",
    "Description": "Deletes a DB security group"
  },
  {
    "API": "rds:DeleteDbShardGroup",
    "EventSource": "rds",
    "EventName": "DeleteDbShardGroup",
    "Description": "Deletes an Aurora Limitless Database DB shard group"
  },
  {
    "API": "rds:DeleteDbSnapshot",
    "EventSource": "rds",
    "EventName": "DeleteDbSnapshot",
    "Description": "Deletes a DB snapshot"
  },
  {
    "API": "rds:DeleteDbSubnetGroup",
    "EventSource": "rds",
    "EventName": "DeleteDbSubnetGroup",
    "Description": "Deletes a DB subnet group"
  },
  {
    "API": "rds:DeleteEventSubscription",
    "EventSource": "rds",
    "EventName": "DeleteEventSubscription",
    "Description": "Deletes an RDS event notification subscription"
  },
  {
    "API": "rds:DeleteGlobalCluster",
    "EventSource": "rds",
    "EventName": "DeleteGlobalCluster",
    "Description": "Deletes a global database cluster"
  },
  {
    "API": "rds:DeleteIntegration",
    "EventSource": "rds",
    "EventName": "DeleteIntegration",
    "Description": "Deletes a zero-ETL integration with Amazon Redshift"
  },
  {
    "API": "rds:DeleteOptionGroup",
    "EventSource": "rds",
    "EventName": "DeleteOptionGroup",
    "Description": "Deletes an existing option group"
  },
  {
    "API": "rds:DeleteTenantDatabase",
    "EventSource": "rds",
    "EventName": "DeleteTenantDatabase",
    "Description": "Deletes a tenant database from your DB instance"
  },
  {
    "API": "rds:DeregisterDbProxyTargets",
    "EventSource": "rds",
    "EventName": "DeregisterDbProxyTargets",
    "Description": "Remove the association between one or more ``DBProxyTarget`` data structures and a ``DBProxyTargetGroup``"
  },
  {
    "API": "rds:DescribeAccountAttributes",
    "EventSource": "rds",
    "EventName": "DescribeAccountAttributes",
    "Description": "Lists all of the attributes for a customer account"
  },
  {
    "API": "rds:DescribeBlueGreenDeployments",
    "EventSource": "rds",
    "EventName": "DescribeBlueGreenDeployments",
    "Description": "Describes one or more blue/green deployments"
  },
  {
    "API": "rds:DescribeCertificates",
    "EventSource": "rds",
    "EventName": "DescribeCertificates",
    "Description": "Lists the set of certificate authority (CA) certificates provided by Amazon RDS for this Amazon Web Services account"
  },
  {
    "API": "rds:DescribeDbClusterAutomatedBackups",
    "EventSource": "rds",
    "EventName": "DescribeDbClusterAutomatedBackups",
    "Description": "Displays backups for both current and deleted DB clusters"
  },
  {
    "API": "rds:DescribeDbClusterBacktracks",
    "EventSource": "rds",
    "EventName": "DescribeDbClusterBacktracks",
    "Description": "Returns information about backtracks for a DB cluster"
  },
  {
    "API": "rds:DescribeDbClusterEndpoints",
    "EventSource": "rds",
    "EventName": "DescribeDbClusterEndpoints",
    "Description": "Returns information about endpoints for an Amazon Aurora DB cluster"
  },
  {
    "API": "rds:DescribeDbClusterParameterGroups",
    "EventSource": "rds",
    "EventName": "DescribeDbClusterParameterGroups",
    "Description": "Returns a list of ``DBClusterParameterGroup`` descriptions"
  },
  {
    "API": "rds:DescribeDbClusterParameters",
    "EventSource": "rds",
    "EventName": "DescribeDbClusterParameters",
    "Description": "Returns the detailed parameter list for a particular DB cluster parameter group"
  },
  {
    "API": "rds:DescribeDbClusterSnapshotAttributes",
    "EventSource": "rds",
    "EventName": "DescribeDbClusterSnapshotAttributes",
    "Description": "Returns a list of DB cluster snapshot attribute names and values for a manual DB cluster snapshot"
  },
  {
    "API": "rds:DescribeDbClusterSnapshots",
    "EventSource": "rds",
    "EventName": "DescribeDbClusterSnapshots",
    "Description": "Returns information about DB cluster snapshots"
  },
  {
    "API": "rds:DescribeDbClusters",
    "EventSource": "rds",
    "EventName": "DescribeDbClusters",
    "Description": "Describes existing Amazon Aurora DB clusters and Multi-AZ DB clusters"
  },
  {
    "API": "rds:DescribeDbEngineVersions",
    "EventSource": "rds",
    "EventName": "DescribeDbEngineVersions",
    "Description": "Describes the properties of specific versions of DB engines"
  },
  {
    "API": "rds:DescribeDbInstanceAutomatedBackups",
    "EventSource": "rds",
    "EventName": "DescribeDbInstanceAutomatedBackups",
    "Description": "Displays backups for both current and deleted instances"
  },
  {
    "API": "rds:DescribeDbInstances",
    "EventSource": "rds",
    "EventName": "DescribeDbInstances",
    "Description": "Describes provisioned RDS instances"
  },
  {
    "API": "rds:DescribeDbLogFiles",
    "EventSource": "rds",
    "EventName": "DescribeDbLogFiles",
    "Description": "Returns a list of DB log files for the DB instance"
  },
  {
    "API": "rds:DescribeDbParameterGroups",
    "EventSource": "rds",
    "EventName": "DescribeDbParameterGroups",
    "Description": "Returns a list of ``DBParameterGroup`` descriptions"
  },
  {
    "API": "rds:DescribeDbParameters",
    "EventSource": "rds",
    "EventName": "DescribeDbParameters",
    "Description": "Returns the detailed parameter list for a particular DB parameter group"
  },
  {
    "API": "rds:DescribeDbProxies",
    "EventSource": "rds",
    "EventName": "DescribeDbProxies",
    "Description": "Returns information about DB proxies"
  },
  {
    "API": "rds:DescribeDbProxyEndpoints",
    "EventSource": "rds",
    "EventName": "DescribeDbProxyEndpoints",
    "Description": "Returns information about DB proxy endpoints"
  },
  {
    "API": "rds:DescribeDbProxyTargetGroups",
    "EventSource": "rds",
    "EventName": "DescribeDbProxyTargetGroups",
    "Description": "Returns information about DB proxy target groups, represented by ``DBProxyTargetGroup`` data structures"
  },
  {
    "API": "rds:DescribeDbProxyTargets",
    "EventSource": "rds",
    "EventName": "DescribeDbProxyTargets",
    "Description": "Returns information about ``DBProxyTarget`` objects"
  },
  {
    "API": "rds:DescribeDbRecommendations",
    "EventSource": "rds",
    "EventName": "DescribeDbRecommendations",
    "Description": "Describes the recommendations to resolve the issues for your DB instances, DB clusters, and DB parameter groups"
  },
  {
    "API": "rds:DescribeDbSecurityGroups",
    "EventSource": "rds",
    "EventName": "DescribeDbSecurityGroups",
    "Description": "Returns a list of ``DBSecurityGroup`` descriptions"
  },
  {
    "API": "rds:DescribeDbShardGroups",
    "EventSource": "rds",
    "EventName": "DescribeDbShardGroups",
    "Description": "Describes existing Aurora Limitless Database DB shard groups"
  },
  {
    "API": "rds:DescribeDbSnapshotAttributes",
    "EventSource": "rds",
    "EventName": "DescribeDbSnapshotAttributes",
    "Description": "Returns a list of DB snapshot attribute names and values for a manual DB snapshot"
  },
  {
    "API": "rds:DescribeDbSnapshotTenantDatabases",
    "EventSource": "rds",
    "EventName": "DescribeDbSnapshotTenantDatabases",
    "Description": "Describes the tenant databases that exist in a DB snapshot"
  },
  {
    "API": "rds:DescribeDbSnapshots",
    "EventSource": "rds",
    "EventName": "DescribeDbSnapshots",
    "Description": "Returns information about DB snapshots"
  },
  {
    "API": "rds:DescribeDbSubnetGroups",
    "EventSource": "rds",
    "EventName": "DescribeDbSubnetGroups",
    "Description": "Returns a list of DBSubnetGroup descriptions"
  },
  {
    "API": "rds:DescribeEngineDefaultClusterParameters",
    "EventSource": "rds",
    "EventName": "DescribeEngineDefaultClusterParameters",
    "Description": "Returns the default engine and system parameter information for the cluster database engine"
  },
  {
    "API": "rds:DescribeEngineDefaultParameters",
    "EventSource": "rds",
    "EventName": "DescribeEngineDefaultParameters",
    "Description": "Returns the default engine and system parameter information for the specified database engine"
  },
  {
    "API": "rds:DescribeEventCategories",
    "EventSource": "rds",
    "EventName": "DescribeEventCategories",
    "Description": "Displays a list of categories for all event source types, or, if specified, for a specified source type"
  },
  {
    "API": "rds:DescribeEventSubscriptions",
    "EventSource": "rds",
    "EventName": "DescribeEventSubscriptions",
    "Description": "Lists all the subscription descriptions for a customer account"
  },
  {
    "API": "rds:DescribeEvents",
    "EventSource": "rds",
    "EventName": "DescribeEvents",
    "Description": "Returns events related to DB instances, DB clusters, DB parameter groups, DB security groups, DB snapshots, DB cluster snapshots, and RDS Proxies for the past 14 days"
  },
  {
    "API": "rds:DescribeExportTasks",
    "EventSource": "rds",
    "EventName": "DescribeExportTasks",
    "Description": "Returns information about a snapshot or cluster export to Amazon S3"
  },
  {
    "API": "rds:DescribeGlobalClusters",
    "EventSource": "rds",
    "EventName": "DescribeGlobalClusters",
    "Description": "Returns information about Aurora global database clusters"
  },
  {
    "API": "rds:DescribeIntegrations",
    "EventSource": "rds",
    "EventName": "DescribeIntegrations",
    "Description": "Describe one or more zero-ETL integrations with Amazon Redshift"
  },
  {
    "API": "rds:DescribeOptionGroupOptions",
    "EventSource": "rds",
    "EventName": "DescribeOptionGroupOptions",
    "Description": "Describes all available options for the specified engine"
  },
  {
    "API": "rds:DescribeOptionGroups",
    "EventSource": "rds",
    "EventName": "DescribeOptionGroups",
    "Description": "Describes the available option groups"
  },
  {
    "API": "rds:DescribeOrderableDbInstanceOptions",
    "EventSource": "rds",
    "EventName": "DescribeOrderableDbInstanceOptions",
    "Description": "Describes the orderable DB instance options for a specified DB engine"
  },
  {
    "API": "rds:DescribePendingMaintenanceActions",
    "EventSource": "rds",
    "EventName": "DescribePendingMaintenanceActions",
    "Description": "Returns a list of resources (for example, DB instances) that have at least one pending maintenance action"
  },
  {
    "API": "rds:DescribeReservedDbInstances",
    "EventSource": "rds",
    "EventName": "DescribeReservedDbInstances",
    "Description": "Returns information about reserved DB instances for this account, or about a specified reserved DB instance"
  },
  {
    "API": "rds:DescribeReservedDbInstancesOfferings",
    "EventSource": "rds",
    "EventName": "DescribeReservedDbInstancesOfferings",
    "Description": "Lists available reserved DB instance offerings"
  },
  {
    "API": "rds:DescribeSourceRegions",
    "EventSource": "rds",
    "EventName": "DescribeSourceRegions",
    "Description": "Returns a list of the source Amazon Web Services Regions where the current Amazon Web Services Region can create a read replica, copy a DB snapshot from, or replicate automated backups from"
  },
  {
    "API": "rds:DescribeTenantDatabases",
    "EventSource": "rds",
    "EventName": "DescribeTenantDatabases",
    "Description": "Describes the tenant databases in a DB instance that uses the multi-tenant configuration"
  },
  {
    "API": "rds:DescribeValidDbInstanceModifications",
    "EventSource": "rds",
    "EventName": "DescribeValidDbInstanceModifications",
    "Description": "You can call ``DescribeValidDBInstanceModifications`` to learn what modifications you can make to your DB instance"
  },
  {
    "API": "rds:DisableHttpEndpoint",
    "EventSource": "rds",
    "EventName": "DisableHttpEndpoint",
    "Description": "Disables the HTTP endpoint for the specified DB cluster"
  },
  {
    "API": "rds:DownloadDbLogFilePortion",
    "EventSource": "rds",
    "EventName": "DownloadDbLogFilePortion",
    "Description": "Downloads all or a portion of the specified log file, up to 1 MB in size"
  },
  {
    "API": "rds:EnableHttpEndpoint",
    "EventSource": "rds",
    "EventName": "EnableHttpEndpoint",
    "Description": "Enables the HTTP endpoint for the DB cluster"
  },
  {
    "API": "rds:FailoverDbCluster",
    "EventSource": "rds",
    "EventName": "FailoverDbCluster",
    "Description": "Forces a failover for a DB cluster"
  },
  {
    "API": "rds:FailoverGlobalCluster",
    "EventSource": "rds",
    "EventName": "FailoverGlobalCluster",
    "Description": "Promotes the specified secondary DB cluster to be the primary DB cluster in the global database cluster to fail over or switch over a global database"
  },
  {
    "API": "rds:GenerateDbAuthToken",
    "EventSource": "rds",
    "EventName": "GenerateDbAuthToken",
    "Description": "Generates an auth token used to connect to a db with IAM credentials"
  },
  {
    "API": "rds:GeneratePresignedUrl",
    "EventSource": "rds",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "rds:ListTagsForResource",
    "EventSource": "rds",
    "EventName": "ListTagsForResource",
    "Description": "Lists all tags on an Amazon RDS resource"
  },
  {
    "API": "rds:ModifyActivityStream",
    "EventSource": "rds",
    "EventName": "ModifyActivityStream",
    "Description": "Changes the audit policy state of a database activity stream to either locked (default) or unlocked"
  },
  {
    "API": "rds:ModifyCertificates",
    "EventSource": "rds",
    "EventName": "ModifyCertificates",
    "Description": "Override the system-default Secure Sockets Layer/Transport Layer Security (SSL/TLS) certificate for Amazon RDS for new DB instances, or remove the override"
  },
  {
    "API": "rds:ModifyCurrentDbClusterCapacity",
    "EventSource": "rds",
    "EventName": "ModifyCurrentDbClusterCapacity",
    "Description": "Set the capacity of an Aurora Serverless v1 DB cluster to a specific value"
  },
  {
    "API": "rds:ModifyCustomDbEngineVersion",
    "EventSource": "rds",
    "EventName": "ModifyCustomDbEngineVersion",
    "Description": "Modifies the status of a custom engine version (CEV)"
  },
  {
    "API": "rds:ModifyDbCluster",
    "EventSource": "rds",
    "EventName": "ModifyDbCluster",
    "Description": "Modifies the settings of an Amazon Aurora DB cluster or a Multi-AZ DB cluster"
  },
  {
    "API": "rds:ModifyDbClusterEndpoint",
    "EventSource": "rds",
    "EventName": "ModifyDbClusterEndpoint",
    "Description": "Modifies the properties of an endpoint in an Amazon Aurora DB cluster"
  },
  {
    "API": "rds:ModifyDbClusterParameterGroup",
    "EventSource": "rds",
    "EventName": "ModifyDbClusterParameterGroup",
    "Description": "Modifies the parameters of a DB cluster parameter group"
  },
  {
    "API": "rds:ModifyDbClusterSnapshotAttribute",
    "EventSource": "rds",
    "EventName": "ModifyDbClusterSnapshotAttribute",
    "Description": "Adds an attribute and values to, or removes an attribute and values from, a manual DB cluster snapshot"
  },
  {
    "API": "rds:ModifyDbInstance",
    "EventSource": "rds",
    "EventName": "ModifyDbInstance",
    "Description": "Modifies settings for a DB instance"
  },
  {
    "API": "rds:ModifyDbParameterGroup",
    "EventSource": "rds",
    "EventName": "ModifyDbParameterGroup",
    "Description": "Modifies the parameters of a DB parameter group"
  },
  {
    "API": "rds:ModifyDbProxy",
    "EventSource": "rds",
    "EventName": "ModifyDbProxy",
    "Description": "Changes the settings for an existing DB proxy"
  },
  {
    "API": "rds:ModifyDbProxyEndpoint",
    "EventSource": "rds",
    "EventName": "ModifyDbProxyEndpoint",
    "Description": "Changes the settings for an existing DB proxy endpoint"
  },
  {
    "API": "rds:ModifyDbProxyTargetGroup",
    "EventSource": "rds",
    "EventName": "ModifyDbProxyTargetGroup",
    "Description": "Modifies the properties of a ``DBProxyTargetGroup``"
  },
  {
    "API": "rds:ModifyDbRecommendation",
    "EventSource": "rds",
    "EventName": "ModifyDbRecommendation",
    "Description": "Updates the recommendation status and recommended action status for the specified recommendation"
  },
  {
    "API": "rds:ModifyDbShardGroup",
    "EventSource": "rds",
    "EventName": "ModifyDbShardGroup",
    "Description": "Modifies the settings of an Aurora Limitless Database DB shard group"
  },
  {
    "API": "rds:ModifyDbSnapshot",
    "EventSource": "rds",
    "EventName": "ModifyDbSnapshot",
    "Description": "Updates a manual DB snapshot with a new engine version"
  },
  {
    "API": "rds:ModifyDbSnapshotAttribute",
    "EventSource": "rds",
    "EventName": "ModifyDbSnapshotAttribute",
    "Description": "Adds an attribute and values to, or removes an attribute and values from, a manual DB snapshot"
  },
  {
    "API": "rds:ModifyDbSubnetGroup",
    "EventSource": "rds",
    "EventName": "ModifyDbSubnetGroup",
    "Description": "Modifies an existing DB subnet group"
  },
  {
    "API": "rds:ModifyEventSubscription",
    "EventSource": "rds",
    "EventName": "ModifyEventSubscription",
    "Description": "Modifies an existing RDS event notification subscription"
  },
  {
    "API": "rds:ModifyGlobalCluster",
    "EventSource": "rds",
    "EventName": "ModifyGlobalCluster",
    "Description": "Modifies a setting for an Amazon Aurora global database cluster"
  },
  {
    "API": "rds:ModifyIntegration",
    "EventSource": "rds",
    "EventName": "ModifyIntegration",
    "Description": "Modifies a zero-ETL integration with Amazon Redshift"
  },
  {
    "API": "rds:ModifyOptionGroup",
    "EventSource": "rds",
    "EventName": "ModifyOptionGroup",
    "Description": "Modifies an existing option group"
  },
  {
    "API": "rds:ModifyTenantDatabase",
    "EventSource": "rds",
    "EventName": "ModifyTenantDatabase",
    "Description": "Modifies an existing tenant database in a DB instance"
  },
  {
    "API": "rds:PromoteReadReplica",
    "EventSource": "rds",
    "EventName": "PromoteReadReplica",
    "Description": "Promotes a read replica DB instance to a standalone DB instance"
  },
  {
    "API": "rds:PromoteReadReplicaDbCluster",
    "EventSource": "rds",
    "EventName": "PromoteReadReplicaDbCluster",
    "Description": "Promotes a read replica DB cluster to a standalone DB cluster"
  },
  {
    "API": "rds:PurchaseReservedDbInstancesOffering",
    "EventSource": "rds",
    "EventName": "PurchaseReservedDbInstancesOffering",
    "Description": "Purchases a reserved DB instance offering"
  },
  {
    "API": "rds:RebootDbCluster",
    "EventSource": "rds",
    "EventName": "RebootDbCluster",
    "Description": "You might need to reboot your DB cluster, usually for maintenance reasons"
  },
  {
    "API": "rds:RebootDbInstance",
    "EventSource": "rds",
    "EventName": "RebootDbInstance",
    "Description": "You might need to reboot your DB instance, usually for maintenance reasons"
  },
  {
    "API": "rds:RebootDbShardGroup",
    "EventSource": "rds",
    "EventName": "RebootDbShardGroup",
    "Description": "You might need to reboot your DB shard group, usually for maintenance reasons"
  },
  {
    "API": "rds:RegisterDbProxyTargets",
    "EventSource": "rds",
    "EventName": "RegisterDbProxyTargets",
    "Description": "Associate one or more ``DBProxyTarget`` data structures with a ``DBProxyTargetGroup``"
  },
  {
    "API": "rds:RemoveFromGlobalCluster",
    "EventSource": "rds",
    "EventName": "RemoveFromGlobalCluster",
    "Description": "Detaches an Aurora secondary cluster from an Aurora global database cluster"
  },
  {
    "API": "rds:RemoveRoleFromDbCluster",
    "EventSource": "rds",
    "EventName": "RemoveRoleFromDbCluster",
    "Description": "Removes the asssociation of an Amazon Web Services Identity and Access Management (IAM) role from a DB cluster"
  },
  {
    "API": "rds:RemoveRoleFromDbInstance",
    "EventSource": "rds",
    "EventName": "RemoveRoleFromDbInstance",
    "Description": "Disassociates an Amazon Web Services Identity and Access Management (IAM) role from a DB instance"
  },
  {
    "API": "rds:RemoveSourceIdentifierFromSubscription",
    "EventSource": "rds",
    "EventName": "RemoveSourceIdentifierFromSubscription",
    "Description": "Removes a source identifier from an existing RDS event notification subscription"
  },
  {
    "API": "rds:RemoveTagsFromResource",
    "EventSource": "rds",
    "EventName": "RemoveTagsFromResource",
    "Description": "Removes metadata tags from an Amazon RDS resource"
  },
  {
    "API": "rds:ResetDbClusterParameterGroup",
    "EventSource": "rds",
    "EventName": "ResetDbClusterParameterGroup",
    "Description": "Modifies the parameters of a DB cluster parameter group to the default value"
  },
  {
    "API": "rds:ResetDbParameterGroup",
    "EventSource": "rds",
    "EventName": "ResetDbParameterGroup",
    "Description": "Modifies the parameters of a DB parameter group to the engine/system default value"
  },
  {
    "API": "rds:RestoreDbClusterFromS3",
    "EventSource": "rds",
    "EventName": "RestoreDbClusterFromS3",
    "Description": "Creates an Amazon Aurora DB cluster from MySQL data stored in an Amazon S3 bucket"
  },
  {
    "API": "rds:RestoreDbClusterFromSnapshot",
    "EventSource": "rds",
    "EventName": "RestoreDbClusterFromSnapshot",
    "Description": "Creates a new DB cluster from a DB snapshot or DB cluster snapshot"
  },
  {
    "API": "rds:RestoreDbClusterToPointInTime",
    "EventSource": "rds",
    "EventName": "RestoreDbClusterToPointInTime",
    "Description": "Restores a DB cluster to an arbitrary point in time"
  },
  {
    "API": "rds:RestoreDbInstanceFromDbSnapshot",
    "EventSource": "rds",
    "EventName": "RestoreDbInstanceFromDbSnapshot",
    "Description": "Creates a new DB instance from a DB snapshot"
  },
  {
    "API": "rds:RestoreDbInstanceFromS3",
    "EventSource": "rds",
    "EventName": "RestoreDbInstanceFromS3",
    "Description": "Amazon Relational Database Service (Amazon RDS) supports importing MySQL databases by using backup files"
  },
  {
    "API": "rds:RestoreDbInstanceToPointInTime",
    "EventSource": "rds",
    "EventName": "RestoreDbInstanceToPointInTime",
    "Description": "Restores a DB instance to an arbitrary point in time"
  },
  {
    "API": "rds:RevokeDbSecurityGroupIngress",
    "EventSource": "rds",
    "EventName": "RevokeDbSecurityGroupIngress",
    "Description": "Revokes ingress from a DBSecurityGroup for previously authorized IP ranges or EC2 or VPC security groups"
  },
  {
    "API": "rds:StartActivityStream",
    "EventSource": "rds",
    "EventName": "StartActivityStream",
    "Description": "Starts a database activity stream to monitor activity on the database"
  },
  {
    "API": "rds:StartDbCluster",
    "EventSource": "rds",
    "EventName": "StartDbCluster",
    "Description": "Starts an Amazon Aurora DB cluster that was stopped using the Amazon Web Services console, the stop-db-cluster CLI command, or the ``StopDBCluster`` operation"
  },
  {
    "API": "rds:StartDbInstance",
    "EventSource": "rds",
    "EventName": "StartDbInstance",
    "Description": "Starts an Amazon RDS DB instance that was stopped using the Amazon Web Services console, the stop-db-instance CLI command, or the ``StopDBInstance`` operation"
  },
  {
    "API": "rds:StartDbInstanceAutomatedBackupsReplication",
    "EventSource": "rds",
    "EventName": "StartDbInstanceAutomatedBackupsReplication",
    "Description": "Enables replication of automated backups to a different Amazon Web Services Region"
  },
  {
    "API": "rds:StartExportTask",
    "EventSource": "rds",
    "EventName": "StartExportTask",
    "Description": "Starts an export of DB snapshot or DB cluster data to Amazon S3"
  },
  {
    "API": "rds:StopActivityStream",
    "EventSource": "rds",
    "EventName": "StopActivityStream",
    "Description": "Stops a database activity stream that was started using the Amazon Web Services console, the ``start-activity-stream`` CLI command, or the ``StartActivityStream`` operation"
  },
  {
    "API": "rds:StopDbCluster",
    "EventSource": "rds",
    "EventName": "StopDbCluster",
    "Description": "Stops an Amazon Aurora DB cluster"
  },
  {
    "API": "rds:StopDbInstance",
    "EventSource": "rds",
    "EventName": "StopDbInstance",
    "Description": "Stops an Amazon RDS DB instance"
  },
  {
    "API": "rds:StopDbInstanceAutomatedBackupsReplication",
    "EventSource": "rds",
    "EventName": "StopDbInstanceAutomatedBackupsReplication",
    "Description": "Stops automated backup replication for a DB instance"
  },
  {
    "API": "rds:SwitchoverBlueGreenDeployment",
    "EventSource": "rds",
    "EventName": "SwitchoverBlueGreenDeployment",
    "Description": "Switches over a blue/green deployment"
  },
  {
    "API": "rds:SwitchoverGlobalCluster",
    "EventSource": "rds",
    "EventName": "SwitchoverGlobalCluster",
    "Description": "Switches over the specified secondary DB cluster to be the new primary DB cluster in the global database cluster"
  },
  {
    "API": "rds:SwitchoverReadReplica",
    "EventSource": "rds",
    "EventName": "SwitchoverReadReplica",
    "Description": "Switches over an Oracle standby database in an Oracle Data Guard environment, making it the new primary database"
  },
  {
    "API": "rds-data:BatchExecuteStatement",
    "EventSource": "rds-data",
    "EventName": "BatchExecuteStatement",
    "Description": "Runs a batch SQL statement over an array of data"
  },
  {
    "API": "rds-data:BeginTransaction",
    "EventSource": "rds-data",
    "EventName": "BeginTransaction",
    "Description": "Starts a SQL transaction"
  },
  {
    "API": "rds-data:CommitTransaction",
    "EventSource": "rds-data",
    "EventName": "CommitTransaction",
    "Description": "Ends a SQL transaction started with the ``BeginTransaction`` operation and commits the changes"
  },
  {
    "API": "rds-data:ExecuteSql",
    "EventSource": "rds-data",
    "EventName": "ExecuteSql",
    "Description": "Runs one or more SQL statements"
  },
  {
    "API": "rds-data:ExecuteStatement",
    "EventSource": "rds-data",
    "EventName": "ExecuteStatement",
    "Description": "Runs a SQL statement against a database"
  },
  {
    "API": "rds-data:GeneratePresignedUrl",
    "EventSource": "rds-data",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "rds-data:RollbackTransaction",
    "EventSource": "rds-data",
    "EventName": "RollbackTransaction",
    "Description": "Performs a rollback of a transaction"
  },
  {
    "API": "redshift:AcceptReservedNodeExchange",
    "EventSource": "redshift",
    "EventName": "AcceptReservedNodeExchange",
    "Description": "Exchanges a DC1 Reserved Node for a DC2 Reserved Node with no changes to the configuration (term, payment type, or number of nodes) and no additional costs"
  },
  {
    "API": "redshift:AddPartner",
    "EventSource": "redshift",
    "EventName": "AddPartner",
    "Description": "Adds a partner integration to a cluster"
  },
  {
    "API": "redshift:AssociateDataShareConsumer",
    "EventSource": "redshift",
    "EventName": "AssociateDataShareConsumer",
    "Description": "From a datashare consumer account, associates a datashare with the account (AssociateEntireAccount) or the specified namespace (ConsumerArn)"
  },
  {
    "API": "redshift:AuthorizeClusterSecurityGroupIngress",
    "EventSource": "redshift",
    "EventName": "AuthorizeClusterSecurityGroupIngress",
    "Description": "Adds an inbound (ingress) rule to an Amazon Redshift security group"
  },
  {
    "API": "redshift:AuthorizeDataShare",
    "EventSource": "redshift",
    "EventName": "AuthorizeDataShare",
    "Description": "From a data producer account, authorizes the sharing of a datashare with one or more consumer accounts or managing entities"
  },
  {
    "API": "redshift:AuthorizeEndpointAccess",
    "EventSource": "redshift",
    "EventName": "AuthorizeEndpointAccess",
    "Description": "Grants access to a cluster"
  },
  {
    "API": "redshift:AuthorizeSnapshotAccess",
    "EventSource": "redshift",
    "EventName": "AuthorizeSnapshotAccess",
    "Description": "Authorizes the specified Amazon Web Services account to restore the specified snapshot"
  },
  {
    "API": "redshift:BatchDeleteClusterSnapshots",
    "EventSource": "redshift",
    "EventName": "BatchDeleteClusterSnapshots",
    "Description": "Deletes a set of cluster snapshots"
  },
  {
    "API": "redshift:BatchModifyClusterSnapshots",
    "EventSource": "redshift",
    "EventName": "BatchModifyClusterSnapshots",
    "Description": "Modifies the settings for a set of cluster snapshots"
  },
  {
    "API": "redshift:CancelResize",
    "EventSource": "redshift",
    "EventName": "CancelResize",
    "Description": "Cancels a resize operation for a cluster"
  },
  {
    "API": "redshift:CopyClusterSnapshot",
    "EventSource": "redshift",
    "EventName": "CopyClusterSnapshot",
    "Description": "Copies the specified automated cluster snapshot to a new manual cluster snapshot"
  },
  {
    "API": "redshift:CreateAuthenticationProfile",
    "EventSource": "redshift",
    "EventName": "CreateAuthenticationProfile",
    "Description": "Creates an authentication profile with the specified parameters"
  },
  {
    "API": "redshift:CreateCluster",
    "EventSource": "redshift",
    "EventName": "CreateCluster",
    "Description": "Creates a new cluster with the specified parameters"
  },
  {
    "API": "redshift:CreateClusterParameterGroup",
    "EventSource": "redshift",
    "EventName": "CreateClusterParameterGroup",
    "Description": "Creates an Amazon Redshift parameter group"
  },
  {
    "API": "redshift:CreateClusterSecurityGroup",
    "EventSource": "redshift",
    "EventName": "CreateClusterSecurityGroup",
    "Description": "Creates a new Amazon Redshift security group"
  },
  {
    "API": "redshift:CreateClusterSnapshot",
    "EventSource": "redshift",
    "EventName": "CreateClusterSnapshot",
    "Description": "Creates a manual snapshot of the specified cluster"
  },
  {
    "API": "redshift:CreateClusterSubnetGroup",
    "EventSource": "redshift",
    "EventName": "CreateClusterSubnetGroup",
    "Description": "Creates a new Amazon Redshift subnet group"
  },
  {
    "API": "redshift:CreateCustomDomainAssociation",
    "EventSource": "redshift",
    "EventName": "CreateCustomDomainAssociation",
    "Description": "Used to create a custom domain name for a cluster"
  },
  {
    "API": "redshift:CreateEndpointAccess",
    "EventSource": "redshift",
    "EventName": "CreateEndpointAccess",
    "Description": "Creates a Redshift-managed VPC endpoint"
  },
  {
    "API": "redshift:CreateEventSubscription",
    "EventSource": "redshift",
    "EventName": "CreateEventSubscription",
    "Description": "Creates an Amazon Redshift event notification subscription"
  },
  {
    "API": "redshift:CreateHsmClientCertificate",
    "EventSource": "redshift",
    "EventName": "CreateHsmClientCertificate",
    "Description": "Creates an HSM client certificate that an Amazon Redshift cluster will use to connect to the client's HSM in order to store and retrieve the keys used to encrypt the cluster databases"
  },
  {
    "API": "redshift:CreateHsmConfiguration",
    "EventSource": "redshift",
    "EventName": "CreateHsmConfiguration",
    "Description": "Creates an HSM configuration that contains the information required by an Amazon Redshift cluster to store and use database encryption keys in a Hardware Security Module (HSM)"
  },
  {
    "API": "redshift:CreateRedshiftIdcApplication",
    "EventSource": "redshift",
    "EventName": "CreateRedshiftIdcApplication",
    "Description": "Creates an Amazon Redshift application for use with IAM Identity Center"
  },
  {
    "API": "redshift:CreateScheduledAction",
    "EventSource": "redshift",
    "EventName": "CreateScheduledAction",
    "Description": "Creates a scheduled action"
  },
  {
    "API": "redshift:CreateSnapshotCopyGrant",
    "EventSource": "redshift",
    "EventName": "CreateSnapshotCopyGrant",
    "Description": "Creates a snapshot copy grant that permits Amazon Redshift to use an encrypted symmetric key from Key Management Service (KMS) to encrypt copied snapshots in a destination region"
  },
  {
    "API": "redshift:CreateSnapshotSchedule",
    "EventSource": "redshift",
    "EventName": "CreateSnapshotSchedule",
    "Description": "Create a snapshot schedule that can be associated to a cluster and which overrides the default system backup schedule"
  },
  {
    "API": "redshift:CreateTags",
    "EventSource": "redshift",
    "EventName": "CreateTags",
    "Description": "Adds tags to a cluster"
  },
  {
    "API": "redshift:CreateUsageLimit",
    "EventSource": "redshift",
    "EventName": "CreateUsageLimit",
    "Description": "Creates a usage limit for a specified Amazon Redshift feature on a cluster"
  },
  {
    "API": "redshift:DeauthorizeDataShare",
    "EventSource": "redshift",
    "EventName": "DeauthorizeDataShare",
    "Description": "From a datashare producer account, removes authorization from the specified datashare"
  },
  {
    "API": "redshift:DeleteAuthenticationProfile",
    "EventSource": "redshift",
    "EventName": "DeleteAuthenticationProfile",
    "Description": "Deletes an authentication profile"
  },
  {
    "API": "redshift:DeleteCluster",
    "EventSource": "redshift",
    "EventName": "DeleteCluster",
    "Description": "Deletes a previously provisioned cluster without its final snapshot being created"
  },
  {
    "API": "redshift:DeleteClusterParameterGroup",
    "EventSource": "redshift",
    "EventName": "DeleteClusterParameterGroup",
    "Description": "Deletes a specified Amazon Redshift parameter group"
  },
  {
    "API": "redshift:DeleteClusterSecurityGroup",
    "EventSource": "redshift",
    "EventName": "DeleteClusterSecurityGroup",
    "Description": "Deletes an Amazon Redshift security group"
  },
  {
    "API": "redshift:DeleteClusterSnapshot",
    "EventSource": "redshift",
    "EventName": "DeleteClusterSnapshot",
    "Description": "Deletes the specified manual snapshot"
  },
  {
    "API": "redshift:DeleteClusterSubnetGroup",
    "EventSource": "redshift",
    "EventName": "DeleteClusterSubnetGroup",
    "Description": "Deletes the specified cluster subnet group"
  },
  {
    "API": "redshift:DeleteCustomDomainAssociation",
    "EventSource": "redshift",
    "EventName": "DeleteCustomDomainAssociation",
    "Description": "Contains information about deleting a custom domain association for a cluster"
  },
  {
    "API": "redshift:DeleteEndpointAccess",
    "EventSource": "redshift",
    "EventName": "DeleteEndpointAccess",
    "Description": "Deletes a Redshift-managed VPC endpoint"
  },
  {
    "API": "redshift:DeleteEventSubscription",
    "EventSource": "redshift",
    "EventName": "DeleteEventSubscription",
    "Description": "Deletes an Amazon Redshift event notification subscription"
  },
  {
    "API": "redshift:DeleteHsmClientCertificate",
    "EventSource": "redshift",
    "EventName": "DeleteHsmClientCertificate",
    "Description": "Deletes the specified HSM client certificate"
  },
  {
    "API": "redshift:DeleteHsmConfiguration",
    "EventSource": "redshift",
    "EventName": "DeleteHsmConfiguration",
    "Description": "Deletes the specified Amazon Redshift HSM configuration"
  },
  {
    "API": "redshift:DeletePartner",
    "EventSource": "redshift",
    "EventName": "DeletePartner",
    "Description": "Deletes a partner integration from a cluster"
  },
  {
    "API": "redshift:DeleteRedshiftIdcApplication",
    "EventSource": "redshift",
    "EventName": "DeleteRedshiftIdcApplication",
    "Description": "Deletes an Amazon Redshift IAM Identity Center application"
  },
  {
    "API": "redshift:DeleteResourcePolicy",
    "EventSource": "redshift",
    "EventName": "DeleteResourcePolicy",
    "Description": "Deletes the resource policy for a specified resource"
  },
  {
    "API": "redshift:DeleteScheduledAction",
    "EventSource": "redshift",
    "EventName": "DeleteScheduledAction",
    "Description": "Deletes a scheduled action"
  },
  {
    "API": "redshift:DeleteSnapshotCopyGrant",
    "EventSource": "redshift",
    "EventName": "DeleteSnapshotCopyGrant",
    "Description": "Deletes the specified snapshot copy grant"
  },
  {
    "API": "redshift:DeleteSnapshotSchedule",
    "EventSource": "redshift",
    "EventName": "DeleteSnapshotSchedule",
    "Description": "Deletes a snapshot schedule"
  },
  {
    "API": "redshift:DeleteTags",
    "EventSource": "redshift",
    "EventName": "DeleteTags",
    "Description": "Deletes tags from a resource"
  },
  {
    "API": "redshift:DeleteUsageLimit",
    "EventSource": "redshift",
    "EventName": "DeleteUsageLimit",
    "Description": "Deletes a usage limit from a cluster"
  },
  {
    "API": "redshift:DescribeAccountAttributes",
    "EventSource": "redshift",
    "EventName": "DescribeAccountAttributes",
    "Description": "Returns a list of attributes attached to an account"
  },
  {
    "API": "redshift:DescribeAuthenticationProfiles",
    "EventSource": "redshift",
    "EventName": "DescribeAuthenticationProfiles",
    "Description": "Describes an authentication profile"
  },
  {
    "API": "redshift:DescribeClusterDbRevisions",
    "EventSource": "redshift",
    "EventName": "DescribeClusterDbRevisions",
    "Description": "Returns an array of ``ClusterDbRevision`` objects"
  },
  {
    "API": "redshift:DescribeClusterParameterGroups",
    "EventSource": "redshift",
    "EventName": "DescribeClusterParameterGroups",
    "Description": "Returns a list of Amazon Redshift parameter groups, including parameter groups you created and the default parameter group"
  },
  {
    "API": "redshift:DescribeClusterParameters",
    "EventSource": "redshift",
    "EventName": "DescribeClusterParameters",
    "Description": "Returns a detailed list of parameters contained within the specified Amazon Redshift parameter group"
  },
  {
    "API": "redshift:DescribeClusterSecurityGroups",
    "EventSource": "redshift",
    "EventName": "DescribeClusterSecurityGroups",
    "Description": "Returns information about Amazon Redshift security groups"
  },
  {
    "API": "redshift:DescribeClusterSnapshots",
    "EventSource": "redshift",
    "EventName": "DescribeClusterSnapshots",
    "Description": "Returns one or more snapshot objects, which contain metadata about your cluster snapshots"
  },
  {
    "API": "redshift:DescribeClusterSubnetGroups",
    "EventSource": "redshift",
    "EventName": "DescribeClusterSubnetGroups",
    "Description": "Returns one or more cluster subnet group objects, which contain metadata about your cluster subnet groups"
  },
  {
    "API": "redshift:DescribeClusterTracks",
    "EventSource": "redshift",
    "EventName": "DescribeClusterTracks",
    "Description": "Returns a list of all the available maintenance tracks"
  },
  {
    "API": "redshift:DescribeClusterVersions",
    "EventSource": "redshift",
    "EventName": "DescribeClusterVersions",
    "Description": "Returns descriptions of the available Amazon Redshift cluster versions"
  },
  {
    "API": "redshift:DescribeClusters",
    "EventSource": "redshift",
    "EventName": "DescribeClusters",
    "Description": "Returns properties of provisioned clusters including general cluster properties, cluster database properties, maintenance and backup properties, and security and access properties"
  },
  {
    "API": "redshift:DescribeCustomDomainAssociations",
    "EventSource": "redshift",
    "EventName": "DescribeCustomDomainAssociations",
    "Description": "Contains information about custom domain associations for a cluster"
  },
  {
    "API": "redshift:DescribeDataShares",
    "EventSource": "redshift",
    "EventName": "DescribeDataShares",
    "Description": "Shows the status of any inbound or outbound datashares available in the specified account"
  },
  {
    "API": "redshift:DescribeDataSharesForConsumer",
    "EventSource": "redshift",
    "EventName": "DescribeDataSharesForConsumer",
    "Description": "Returns a list of datashares where the account identifier being called is a consumer account identifier"
  },
  {
    "API": "redshift:DescribeDataSharesForProducer",
    "EventSource": "redshift",
    "EventName": "DescribeDataSharesForProducer",
    "Description": "Returns a list of datashares when the account identifier being called is a producer account identifier"
  },
  {
    "API": "redshift:DescribeDefaultClusterParameters",
    "EventSource": "redshift",
    "EventName": "DescribeDefaultClusterParameters",
    "Description": "Returns a list of parameter settings for the specified parameter group family"
  },
  {
    "API": "redshift:DescribeEndpointAccess",
    "EventSource": "redshift",
    "EventName": "DescribeEndpointAccess",
    "Description": "Describes a Redshift-managed VPC endpoint"
  },
  {
    "API": "redshift:DescribeEndpointAuthorization",
    "EventSource": "redshift",
    "EventName": "DescribeEndpointAuthorization",
    "Description": "Describes an endpoint authorization"
  },
  {
    "API": "redshift:DescribeEventCategories",
    "EventSource": "redshift",
    "EventName": "DescribeEventCategories",
    "Description": "Displays a list of event categories for all event source types, or for a specified source type"
  },
  {
    "API": "redshift:DescribeEventSubscriptions",
    "EventSource": "redshift",
    "EventName": "DescribeEventSubscriptions",
    "Description": "Lists descriptions of all the Amazon Redshift event notification subscriptions for a customer account"
  },
  {
    "API": "redshift:DescribeEvents",
    "EventSource": "redshift",
    "EventName": "DescribeEvents",
    "Description": "Returns events related to clusters, security groups, snapshots, and parameter groups for the past 14 days"
  },
  {
    "API": "redshift:DescribeHsmClientCertificates",
    "EventSource": "redshift",
    "EventName": "DescribeHsmClientCertificates",
    "Description": "Returns information about the specified HSM client certificate"
  },
  {
    "API": "redshift:DescribeHsmConfigurations",
    "EventSource": "redshift",
    "EventName": "DescribeHsmConfigurations",
    "Description": "Returns information about the specified Amazon Redshift HSM configuration"
  },
  {
    "API": "redshift:DescribeInboundIntegrations",
    "EventSource": "redshift",
    "EventName": "DescribeInboundIntegrations",
    "Description": "Returns a list of inbound integrations"
  },
  {
    "API": "redshift:DescribeLoggingStatus",
    "EventSource": "redshift",
    "EventName": "DescribeLoggingStatus",
    "Description": "Describes whether information, such as queries and connection attempts, is being logged for the specified Amazon Redshift cluster"
  },
  {
    "API": "redshift:DescribeNodeConfigurationOptions",
    "EventSource": "redshift",
    "EventName": "DescribeNodeConfigurationOptions",
    "Description": "Returns properties of possible node configurations such as node type, number of nodes, and disk usage for the specified action type"
  },
  {
    "API": "redshift:DescribeOrderableClusterOptions",
    "EventSource": "redshift",
    "EventName": "DescribeOrderableClusterOptions",
    "Description": "Returns a list of orderable cluster options"
  },
  {
    "API": "redshift:DescribePartners",
    "EventSource": "redshift",
    "EventName": "DescribePartners",
    "Description": "Returns information about the partner integrations defined for a cluster"
  },
  {
    "API": "redshift:DescribeRedshiftIdcApplications",
    "EventSource": "redshift",
    "EventName": "DescribeRedshiftIdcApplications",
    "Description": "Lists the Amazon Redshift IAM Identity Center applications"
  },
  {
    "API": "redshift:DescribeReservedNodeExchangeStatus",
    "EventSource": "redshift",
    "EventName": "DescribeReservedNodeExchangeStatus",
    "Description": "Returns exchange status details and associated metadata for a reserved-node exchange"
  },
  {
    "API": "redshift:DescribeReservedNodeOfferings",
    "EventSource": "redshift",
    "EventName": "DescribeReservedNodeOfferings",
    "Description": "Returns a list of the available reserved node offerings by Amazon Redshift with their descriptions including the node type, the fixed and recurring costs of reserving the node and duration the node will be reserved for you"
  },
  {
    "API": "redshift:DescribeReservedNodes",
    "EventSource": "redshift",
    "EventName": "DescribeReservedNodes",
    "Description": "Returns the descriptions of the reserved nodes"
  },
  {
    "API": "redshift:DescribeResize",
    "EventSource": "redshift",
    "EventName": "DescribeResize",
    "Description": "Returns information about the last resize operation for the specified cluster"
  },
  {
    "API": "redshift:DescribeScheduledActions",
    "EventSource": "redshift",
    "EventName": "DescribeScheduledActions",
    "Description": "Describes properties of scheduled actions"
  },
  {
    "API": "redshift:DescribeSnapshotCopyGrants",
    "EventSource": "redshift",
    "EventName": "DescribeSnapshotCopyGrants",
    "Description": "Returns a list of snapshot copy grants owned by the Amazon Web Services account in the destination region"
  },
  {
    "API": "redshift:DescribeSnapshotSchedules",
    "EventSource": "redshift",
    "EventName": "DescribeSnapshotSchedules",
    "Description": "Returns a list of snapshot schedules"
  },
  {
    "API": "redshift:DescribeStorage",
    "EventSource": "redshift",
    "EventName": "DescribeStorage",
    "Description": "Returns account level backups storage size and provisional storage"
  },
  {
    "API": "redshift:DescribeTableRestoreStatus",
    "EventSource": "redshift",
    "EventName": "DescribeTableRestoreStatus",
    "Description": "Lists the status of one or more table restore requests made using the  RestoreTableFromClusterSnapshot API action"
  },
  {
    "API": "redshift:DescribeTags",
    "EventSource": "redshift",
    "EventName": "DescribeTags",
    "Description": "Returns a list of tags"
  },
  {
    "API": "redshift:DescribeUsageLimits",
    "EventSource": "redshift",
    "EventName": "DescribeUsageLimits",
    "Description": "Shows usage limits on a cluster"
  },
  {
    "API": "redshift:DisableLogging",
    "EventSource": "redshift",
    "EventName": "DisableLogging",
    "Description": "Stops logging information, such as queries and connection attempts, for the specified Amazon Redshift cluster"
  },
  {
    "API": "redshift:DisableSnapshotCopy",
    "EventSource": "redshift",
    "EventName": "DisableSnapshotCopy",
    "Description": "Disables the automatic copying of snapshots from one region to another region for a specified cluster"
  },
  {
    "API": "redshift:DisassociateDataShareConsumer",
    "EventSource": "redshift",
    "EventName": "DisassociateDataShareConsumer",
    "Description": "From a datashare consumer account, remove association for the specified datashare"
  },
  {
    "API": "redshift:EnableLogging",
    "EventSource": "redshift",
    "EventName": "EnableLogging",
    "Description": "Starts logging information, such as queries and connection attempts, for the specified Amazon Redshift cluster"
  },
  {
    "API": "redshift:EnableSnapshotCopy",
    "EventSource": "redshift",
    "EventName": "EnableSnapshotCopy",
    "Description": "Enables the automatic copy of snapshots from one region to another region for a specified cluster"
  },
  {
    "API": "redshift:FailoverPrimaryCompute",
    "EventSource": "redshift",
    "EventName": "FailoverPrimaryCompute",
    "Description": "Fails over the primary compute unit of the specified Multi-AZ cluster to another Availability Zone"
  },
  {
    "API": "redshift:GeneratePresignedUrl",
    "EventSource": "redshift",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "redshift:GetClusterCredentials",
    "EventSource": "redshift",
    "EventName": "GetClusterCredentials",
    "Description": "Returns a database user name and temporary password with temporary authorization to log on to an Amazon Redshift database"
  },
  {
    "API": "redshift:GetClusterCredentialsWithIam",
    "EventSource": "redshift",
    "EventName": "GetClusterCredentialsWithIam",
    "Description": "Returns a database user name and temporary password with temporary authorization to log in to an Amazon Redshift database"
  },
  {
    "API": "redshift:GetReservedNodeExchangeConfigurationOptions",
    "EventSource": "redshift",
    "EventName": "GetReservedNodeExchangeConfigurationOptions",
    "Description": "Gets the configuration options for the reserved-node exchange"
  },
  {
    "API": "redshift:GetReservedNodeExchangeOfferings",
    "EventSource": "redshift",
    "EventName": "GetReservedNodeExchangeOfferings",
    "Description": "Returns an array of DC2 ReservedNodeOfferings that matches the payment type, term, and usage price of the given DC1 reserved node"
  },
  {
    "API": "redshift:GetResourcePolicy",
    "EventSource": "redshift",
    "EventName": "GetResourcePolicy",
    "Description": "Get the resource policy for a specified resource"
  },
  {
    "API": "redshift:ListRecommendations",
    "EventSource": "redshift",
    "EventName": "ListRecommendations",
    "Description": "List the Amazon Redshift Advisor recommendations for one or multiple Amazon Redshift clusters in an Amazon Web Services account"
  },
  {
    "API": "redshift:ModifyAquaConfiguration",
    "EventSource": "redshift",
    "EventName": "ModifyAquaConfiguration",
    "Description": "This operation is retired"
  },
  {
    "API": "redshift:ModifyAuthenticationProfile",
    "EventSource": "redshift",
    "EventName": "ModifyAuthenticationProfile",
    "Description": "Modifies an authentication profile"
  },
  {
    "API": "redshift:ModifyCluster",
    "EventSource": "redshift",
    "EventName": "ModifyCluster",
    "Description": "Modifies the settings for a cluster"
  },
  {
    "API": "redshift:ModifyClusterDbRevision",
    "EventSource": "redshift",
    "EventName": "ModifyClusterDbRevision",
    "Description": "Modifies the database revision of a cluster"
  },
  {
    "API": "redshift:ModifyClusterIamRoles",
    "EventSource": "redshift",
    "EventName": "ModifyClusterIamRoles",
    "Description": "Modifies the list of Identity and Access Management (IAM) roles that can be used by the cluster to access other Amazon Web Services services"
  },
  {
    "API": "redshift:ModifyClusterMaintenance",
    "EventSource": "redshift",
    "EventName": "ModifyClusterMaintenance",
    "Description": "Modifies the maintenance settings of a cluster"
  },
  {
    "API": "redshift:ModifyClusterParameterGroup",
    "EventSource": "redshift",
    "EventName": "ModifyClusterParameterGroup",
    "Description": "Modifies the parameters of a parameter group"
  },
  {
    "API": "redshift:ModifyClusterSnapshot",
    "EventSource": "redshift",
    "EventName": "ModifyClusterSnapshot",
    "Description": "Modifies the settings for a snapshot"
  },
  {
    "API": "redshift:ModifyClusterSnapshotSchedule",
    "EventSource": "redshift",
    "EventName": "ModifyClusterSnapshotSchedule",
    "Description": "Modifies a snapshot schedule for a cluster"
  },
  {
    "API": "redshift:ModifyClusterSubnetGroup",
    "EventSource": "redshift",
    "EventName": "ModifyClusterSubnetGroup",
    "Description": "Modifies a cluster subnet group to include the specified list of VPC subnets"
  },
  {
    "API": "redshift:ModifyCustomDomainAssociation",
    "EventSource": "redshift",
    "EventName": "ModifyCustomDomainAssociation",
    "Description": "Contains information for changing a custom domain association"
  },
  {
    "API": "redshift:ModifyEndpointAccess",
    "EventSource": "redshift",
    "EventName": "ModifyEndpointAccess",
    "Description": "Modifies a Redshift-managed VPC endpoint"
  },
  {
    "API": "redshift:ModifyEventSubscription",
    "EventSource": "redshift",
    "EventName": "ModifyEventSubscription",
    "Description": "Modifies an existing Amazon Redshift event notification subscription"
  },
  {
    "API": "redshift:ModifyRedshiftIdcApplication",
    "EventSource": "redshift",
    "EventName": "ModifyRedshiftIdcApplication",
    "Description": "Changes an existing Amazon Redshift IAM Identity Center application"
  },
  {
    "API": "redshift:ModifyScheduledAction",
    "EventSource": "redshift",
    "EventName": "ModifyScheduledAction",
    "Description": "Modifies a scheduled action"
  },
  {
    "API": "redshift:ModifySnapshotCopyRetentionPeriod",
    "EventSource": "redshift",
    "EventName": "ModifySnapshotCopyRetentionPeriod",
    "Description": "Modifies the number of days to retain snapshots in the destination Amazon Web Services Region after they are copied from the source Amazon Web Services Region"
  },
  {
    "API": "redshift:ModifySnapshotSchedule",
    "EventSource": "redshift",
    "EventName": "ModifySnapshotSchedule",
    "Description": "Modifies a snapshot schedule"
  },
  {
    "API": "redshift:ModifyUsageLimit",
    "EventSource": "redshift",
    "EventName": "ModifyUsageLimit",
    "Description": "Modifies a usage limit in a cluster"
  },
  {
    "API": "redshift:PauseCluster",
    "EventSource": "redshift",
    "EventName": "PauseCluster",
    "Description": "Pauses a cluster"
  },
  {
    "API": "redshift:PurchaseReservedNodeOffering",
    "EventSource": "redshift",
    "EventName": "PurchaseReservedNodeOffering",
    "Description": "Allows you to purchase reserved nodes"
  },
  {
    "API": "redshift:PutResourcePolicy",
    "EventSource": "redshift",
    "EventName": "PutResourcePolicy",
    "Description": "Updates the resource policy for a specified resource"
  },
  {
    "API": "redshift:RebootCluster",
    "EventSource": "redshift",
    "EventName": "RebootCluster",
    "Description": "Reboots a cluster"
  },
  {
    "API": "redshift:RejectDataShare",
    "EventSource": "redshift",
    "EventName": "RejectDataShare",
    "Description": "From a datashare consumer account, rejects the specified datashare"
  },
  {
    "API": "redshift:ResetClusterParameterGroup",
    "EventSource": "redshift",
    "EventName": "ResetClusterParameterGroup",
    "Description": "Sets one or more parameters of the specified parameter group to their default values and sets the source values of the parameters to \"engine-default\""
  },
  {
    "API": "redshift:ResizeCluster",
    "EventSource": "redshift",
    "EventName": "ResizeCluster",
    "Description": "Changes the size of the cluster"
  },
  {
    "API": "redshift:RestoreFromClusterSnapshot",
    "EventSource": "redshift",
    "EventName": "RestoreFromClusterSnapshot",
    "Description": "Creates a new cluster from a snapshot"
  },
  {
    "API": "redshift:RestoreTableFromClusterSnapshot",
    "EventSource": "redshift",
    "EventName": "RestoreTableFromClusterSnapshot",
    "Description": "Creates a new table from a table in an Amazon Redshift cluster snapshot"
  },
  {
    "API": "redshift:ResumeCluster",
    "EventSource": "redshift",
    "EventName": "ResumeCluster",
    "Description": "Resumes a paused cluster"
  },
  {
    "API": "redshift:RevokeClusterSecurityGroupIngress",
    "EventSource": "redshift",
    "EventName": "RevokeClusterSecurityGroupIngress",
    "Description": "Revokes an ingress rule in an Amazon Redshift security group for a previously authorized IP range or Amazon EC2 security group"
  },
  {
    "API": "redshift:RevokeEndpointAccess",
    "EventSource": "redshift",
    "EventName": "RevokeEndpointAccess",
    "Description": "Revokes access to a cluster"
  },
  {
    "API": "redshift:RevokeSnapshotAccess",
    "EventSource": "redshift",
    "EventName": "RevokeSnapshotAccess",
    "Description": "Removes the ability of the specified Amazon Web Services account to restore the specified snapshot"
  },
  {
    "API": "redshift:RotateEncryptionKey",
    "EventSource": "redshift",
    "EventName": "RotateEncryptionKey",
    "Description": "Rotates the encryption keys for a cluster"
  },
  {
    "API": "redshift:UpdatePartnerStatus",
    "EventSource": "redshift",
    "EventName": "UpdatePartnerStatus",
    "Description": "Updates the status of a partner integration"
  },
  {
    "API": "redshift-data:BatchExecuteStatement",
    "EventSource": "redshift-data",
    "EventName": "BatchExecuteStatement",
    "Description": "Runs one or more SQL statements, which can be data manipulation language (DML) or data definition language (DDL)"
  },
  {
    "API": "redshift-data:CancelStatement",
    "EventSource": "redshift-data",
    "EventName": "CancelStatement",
    "Description": "Cancels a running query"
  },
  {
    "API": "redshift-data:DescribeStatement",
    "EventSource": "redshift-data",
    "EventName": "DescribeStatement",
    "Description": "Describes the details about a specific instance when a query was run by the Amazon Redshift Data API"
  },
  {
    "API": "redshift-data:DescribeTable",
    "EventSource": "redshift-data",
    "EventName": "DescribeTable",
    "Description": "Describes the detailed information about a table from metadata in the cluster"
  },
  {
    "API": "redshift-data:ExecuteStatement",
    "EventSource": "redshift-data",
    "EventName": "ExecuteStatement",
    "Description": "Runs an SQL statement, which can be data manipulation language (DML) or data definition language (DDL)"
  },
  {
    "API": "redshift-data:GeneratePresignedUrl",
    "EventSource": "redshift-data",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "redshift-data:GetStatementResult",
    "EventSource": "redshift-data",
    "EventName": "GetStatementResult",
    "Description": "Fetches the temporarily cached result of an SQL statement"
  },
  {
    "API": "redshift-data:ListDatabases",
    "EventSource": "redshift-data",
    "EventName": "ListDatabases",
    "Description": "List the databases in a cluster"
  },
  {
    "API": "redshift-data:ListSchemas",
    "EventSource": "redshift-data",
    "EventName": "ListSchemas",
    "Description": "Lists the schemas in a database"
  },
  {
    "API": "redshift-data:ListStatements",
    "EventSource": "redshift-data",
    "EventName": "ListStatements",
    "Description": "List of SQL statements"
  },
  {
    "API": "redshift-data:ListTables",
    "EventSource": "redshift-data",
    "EventName": "ListTables",
    "Description": "List the tables in a database"
  },
  {
    "API": "redshift-serverless:ConvertRecoveryPointToSnapshot",
    "EventSource": "redshift-serverless",
    "EventName": "ConvertRecoveryPointToSnapshot",
    "Description": "Converts a recovery point to a snapshot"
  },
  {
    "API": "redshift-serverless:CreateCustomDomainAssociation",
    "EventSource": "redshift-serverless",
    "EventName": "CreateCustomDomainAssociation",
    "Description": "Creates a custom domain association for Amazon Redshift Serverless"
  },
  {
    "API": "redshift-serverless:CreateEndpointAccess",
    "EventSource": "redshift-serverless",
    "EventName": "CreateEndpointAccess",
    "Description": "Creates an Amazon Redshift Serverless managed VPC endpoint"
  },
  {
    "API": "redshift-serverless:CreateNamespace",
    "EventSource": "redshift-serverless",
    "EventName": "CreateNamespace",
    "Description": "Creates a namespace in Amazon Redshift Serverless"
  },
  {
    "API": "redshift-serverless:CreateScheduledAction",
    "EventSource": "redshift-serverless",
    "EventName": "CreateScheduledAction",
    "Description": "Creates a scheduled action"
  },
  {
    "API": "redshift-serverless:CreateSnapshot",
    "EventSource": "redshift-serverless",
    "EventName": "CreateSnapshot",
    "Description": "Creates a snapshot of all databases in a namespace"
  },
  {
    "API": "redshift-serverless:CreateSnapshotCopyConfiguration",
    "EventSource": "redshift-serverless",
    "EventName": "CreateSnapshotCopyConfiguration",
    "Description": "Creates a snapshot copy configuration that lets you copy snapshots to another Amazon Web Services Region"
  },
  {
    "API": "redshift-serverless:CreateUsageLimit",
    "EventSource": "redshift-serverless",
    "EventName": "CreateUsageLimit",
    "Description": "Creates a usage limit for a specified Amazon Redshift Serverless usage type"
  },
  {
    "API": "redshift-serverless:CreateWorkgroup",
    "EventSource": "redshift-serverless",
    "EventName": "CreateWorkgroup",
    "Description": "Creates an workgroup in Amazon Redshift Serverless"
  },
  {
    "API": "redshift-serverless:DeleteCustomDomainAssociation",
    "EventSource": "redshift-serverless",
    "EventName": "DeleteCustomDomainAssociation",
    "Description": "Deletes a custom domain association for Amazon Redshift Serverless"
  },
  {
    "API": "redshift-serverless:DeleteEndpointAccess",
    "EventSource": "redshift-serverless",
    "EventName": "DeleteEndpointAccess",
    "Description": "Deletes an Amazon Redshift Serverless managed VPC endpoint"
  },
  {
    "API": "redshift-serverless:DeleteNamespace",
    "EventSource": "redshift-serverless",
    "EventName": "DeleteNamespace",
    "Description": "Deletes a namespace from Amazon Redshift Serverless"
  },
  {
    "API": "redshift-serverless:DeleteResourcePolicy",
    "EventSource": "redshift-serverless",
    "EventName": "DeleteResourcePolicy",
    "Description": "Deletes the specified resource policy"
  },
  {
    "API": "redshift-serverless:DeleteScheduledAction",
    "EventSource": "redshift-serverless",
    "EventName": "DeleteScheduledAction",
    "Description": "Deletes a scheduled action"
  },
  {
    "API": "redshift-serverless:DeleteSnapshot",
    "EventSource": "redshift-serverless",
    "EventName": "DeleteSnapshot",
    "Description": "Deletes a snapshot from Amazon Redshift Serverless"
  },
  {
    "API": "redshift-serverless:DeleteSnapshotCopyConfiguration",
    "EventSource": "redshift-serverless",
    "EventName": "DeleteSnapshotCopyConfiguration",
    "Description": "Deletes a snapshot copy configuration"
  },
  {
    "API": "redshift-serverless:DeleteUsageLimit",
    "EventSource": "redshift-serverless",
    "EventName": "DeleteUsageLimit",
    "Description": "Deletes a usage limit from Amazon Redshift Serverless"
  },
  {
    "API": "redshift-serverless:DeleteWorkgroup",
    "EventSource": "redshift-serverless",
    "EventName": "DeleteWorkgroup",
    "Description": "Deletes a workgroup"
  },
  {
    "API": "redshift-serverless:GeneratePresignedUrl",
    "EventSource": "redshift-serverless",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "redshift-serverless:GetCredentials",
    "EventSource": "redshift-serverless",
    "EventName": "GetCredentials",
    "Description": "Returns a database user name and temporary password with temporary authorization to log in to Amazon Redshift Serverless"
  },
  {
    "API": "redshift-serverless:GetCustomDomainAssociation",
    "EventSource": "redshift-serverless",
    "EventName": "GetCustomDomainAssociation",
    "Description": "Gets information about a specific custom domain association"
  },
  {
    "API": "redshift-serverless:GetEndpointAccess",
    "EventSource": "redshift-serverless",
    "EventName": "GetEndpointAccess",
    "Description": "Returns information, such as the name, about a VPC endpoint"
  },
  {
    "API": "redshift-serverless:GetNamespace",
    "EventSource": "redshift-serverless",
    "EventName": "GetNamespace",
    "Description": "Returns information about a namespace in Amazon Redshift Serverless"
  },
  {
    "API": "redshift-serverless:GetRecoveryPoint",
    "EventSource": "redshift-serverless",
    "EventName": "GetRecoveryPoint",
    "Description": "Returns information about a recovery point"
  },
  {
    "API": "redshift-serverless:GetResourcePolicy",
    "EventSource": "redshift-serverless",
    "EventName": "GetResourcePolicy",
    "Description": "Returns a resource policy"
  },
  {
    "API": "redshift-serverless:GetScheduledAction",
    "EventSource": "redshift-serverless",
    "EventName": "GetScheduledAction",
    "Description": "Returns information about a scheduled action"
  },
  {
    "API": "redshift-serverless:GetSnapshot",
    "EventSource": "redshift-serverless",
    "EventName": "GetSnapshot",
    "Description": "Returns information about a specific snapshot"
  },
  {
    "API": "redshift-serverless:GetTableRestoreStatus",
    "EventSource": "redshift-serverless",
    "EventName": "GetTableRestoreStatus",
    "Description": "Returns information about a ``TableRestoreStatus`` object"
  },
  {
    "API": "redshift-serverless:GetUsageLimit",
    "EventSource": "redshift-serverless",
    "EventName": "GetUsageLimit",
    "Description": "Returns information about a usage limit"
  },
  {
    "API": "redshift-serverless:GetWorkgroup",
    "EventSource": "redshift-serverless",
    "EventName": "GetWorkgroup",
    "Description": "Returns information about a specific workgroup"
  },
  {
    "API": "redshift-serverless:ListCustomDomainAssociations",
    "EventSource": "redshift-serverless",
    "EventName": "ListCustomDomainAssociations",
    "Description": "Lists custom domain associations for Amazon Redshift Serverless"
  },
  {
    "API": "redshift-serverless:ListEndpointAccess",
    "EventSource": "redshift-serverless",
    "EventName": "ListEndpointAccess",
    "Description": "Returns an array of ``EndpointAccess`` objects and relevant information"
  },
  {
    "API": "redshift-serverless:ListNamespaces",
    "EventSource": "redshift-serverless",
    "EventName": "ListNamespaces",
    "Description": "Returns information about a list of specified namespaces"
  },
  {
    "API": "redshift-serverless:ListRecoveryPoints",
    "EventSource": "redshift-serverless",
    "EventName": "ListRecoveryPoints",
    "Description": "Returns an array of recovery points"
  },
  {
    "API": "redshift-serverless:ListScheduledActions",
    "EventSource": "redshift-serverless",
    "EventName": "ListScheduledActions",
    "Description": "Returns a list of scheduled actions"
  },
  {
    "API": "redshift-serverless:ListSnapshotCopyConfigurations",
    "EventSource": "redshift-serverless",
    "EventName": "ListSnapshotCopyConfigurations",
    "Description": "Returns a list of snapshot copy configurations"
  },
  {
    "API": "redshift-serverless:ListSnapshots",
    "EventSource": "redshift-serverless",
    "EventName": "ListSnapshots",
    "Description": "Returns a list of snapshots"
  },
  {
    "API": "redshift-serverless:ListTableRestoreStatus",
    "EventSource": "redshift-serverless",
    "EventName": "ListTableRestoreStatus",
    "Description": "Returns information about an array of ``TableRestoreStatus`` objects"
  },
  {
    "API": "redshift-serverless:ListTagsForResource",
    "EventSource": "redshift-serverless",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags assigned to a resource"
  },
  {
    "API": "redshift-serverless:ListUsageLimits",
    "EventSource": "redshift-serverless",
    "EventName": "ListUsageLimits",
    "Description": "Lists all usage limits within Amazon Redshift Serverless"
  },
  {
    "API": "redshift-serverless:ListWorkgroups",
    "EventSource": "redshift-serverless",
    "EventName": "ListWorkgroups",
    "Description": "Returns information about a list of specified workgroups"
  },
  {
    "API": "redshift-serverless:PutResourcePolicy",
    "EventSource": "redshift-serverless",
    "EventName": "PutResourcePolicy",
    "Description": "Creates or updates a resource policy"
  },
  {
    "API": "redshift-serverless:RestoreFromRecoveryPoint",
    "EventSource": "redshift-serverless",
    "EventName": "RestoreFromRecoveryPoint",
    "Description": "Restore the data from a recovery point"
  },
  {
    "API": "redshift-serverless:RestoreFromSnapshot",
    "EventSource": "redshift-serverless",
    "EventName": "RestoreFromSnapshot",
    "Description": "Restores a namespace from a snapshot"
  },
  {
    "API": "redshift-serverless:RestoreTableFromRecoveryPoint",
    "EventSource": "redshift-serverless",
    "EventName": "RestoreTableFromRecoveryPoint",
    "Description": "Restores a table from a recovery point to your Amazon Redshift Serverless instance"
  },
  {
    "API": "redshift-serverless:RestoreTableFromSnapshot",
    "EventSource": "redshift-serverless",
    "EventName": "RestoreTableFromSnapshot",
    "Description": "Restores a table from a snapshot to your Amazon Redshift Serverless instance"
  },
  {
    "API": "redshift-serverless:TagResource",
    "EventSource": "redshift-serverless",
    "EventName": "TagResource",
    "Description": "Assigns one or more tags to a resource"
  },
  {
    "API": "redshift-serverless:UntagResource",
    "EventSource": "redshift-serverless",
    "EventName": "UntagResource",
    "Description": "Removes a tag or set of tags from a resource"
  },
  {
    "API": "redshift-serverless:UpdateCustomDomainAssociation",
    "EventSource": "redshift-serverless",
    "EventName": "UpdateCustomDomainAssociation",
    "Description": "Updates an Amazon Redshift Serverless certificate associated with a custom domain"
  },
  {
    "API": "redshift-serverless:UpdateEndpointAccess",
    "EventSource": "redshift-serverless",
    "EventName": "UpdateEndpointAccess",
    "Description": "Updates an Amazon Redshift Serverless managed endpoint"
  },
  {
    "API": "redshift-serverless:UpdateNamespace",
    "EventSource": "redshift-serverless",
    "EventName": "UpdateNamespace",
    "Description": "Updates a namespace with the specified settings"
  },
  {
    "API": "redshift-serverless:UpdateScheduledAction",
    "EventSource": "redshift-serverless",
    "EventName": "UpdateScheduledAction",
    "Description": "Updates a scheduled action"
  },
  {
    "API": "redshift-serverless:UpdateSnapshot",
    "EventSource": "redshift-serverless",
    "EventName": "UpdateSnapshot",
    "Description": "Updates a snapshot"
  },
  {
    "API": "redshift-serverless:UpdateSnapshotCopyConfiguration",
    "EventSource": "redshift-serverless",
    "EventName": "UpdateSnapshotCopyConfiguration",
    "Description": "Updates a snapshot copy configuration"
  },
  {
    "API": "redshift-serverless:UpdateUsageLimit",
    "EventSource": "redshift-serverless",
    "EventName": "UpdateUsageLimit",
    "Description": "Update a usage limit in Amazon Redshift Serverless"
  },
  {
    "API": "redshift-serverless:UpdateWorkgroup",
    "EventSource": "redshift-serverless",
    "EventName": "UpdateWorkgroup",
    "Description": "Updates a workgroup with the specified configuration settings"
  },
  {
    "API": "rekognition:AssociateFaces",
    "EventSource": "rekognition",
    "EventName": "AssociateFaces",
    "Description": "Associates one or more faces with an existing UserID"
  },
  {
    "API": "rekognition:CompareFaces",
    "EventSource": "rekognition",
    "EventName": "CompareFaces",
    "Description": "Compares a face in the *source* input image with each of the 100 largest faces detected in the *target* input image"
  },
  {
    "API": "rekognition:CopyProjectVersion",
    "EventSource": "rekognition",
    "EventName": "CopyProjectVersion",
    "Description": ""
  },
  {
    "API": "rekognition:CreateCollection",
    "EventSource": "rekognition",
    "EventName": "CreateCollection",
    "Description": "Creates a collection in an AWS Region"
  },
  {
    "API": "rekognition:CreateDataset",
    "EventSource": "rekognition",
    "EventName": "CreateDataset",
    "Description": ""
  },
  {
    "API": "rekognition:CreateFaceLivenessSession",
    "EventSource": "rekognition",
    "EventName": "CreateFaceLivenessSession",
    "Description": "This API operation initiates a Face Liveness session"
  },
  {
    "API": "rekognition:CreateProject",
    "EventSource": "rekognition",
    "EventName": "CreateProject",
    "Description": "Creates a new Amazon Rekognition project"
  },
  {
    "API": "rekognition:CreateProjectVersion",
    "EventSource": "rekognition",
    "EventName": "CreateProjectVersion",
    "Description": "Creates a new version of Amazon Rekognition project (like a Custom Labels model or a custom adapter) and begins training"
  },
  {
    "API": "rekognition:CreateStreamProcessor",
    "EventSource": "rekognition",
    "EventName": "CreateStreamProcessor",
    "Description": "Creates an Amazon Rekognition stream processor that you can use to detect and recognize faces or to detect labels in a streaming video"
  },
  {
    "API": "rekognition:CreateUser",
    "EventSource": "rekognition",
    "EventName": "CreateUser",
    "Description": "Creates a new User within a collection specified by ``CollectionId``"
  },
  {
    "API": "rekognition:DeleteCollection",
    "EventSource": "rekognition",
    "EventName": "DeleteCollection",
    "Description": "Deletes the specified collection"
  },
  {
    "API": "rekognition:DeleteDataset",
    "EventSource": "rekognition",
    "EventName": "DeleteDataset",
    "Description": ""
  },
  {
    "API": "rekognition:DeleteFaces",
    "EventSource": "rekognition",
    "EventName": "DeleteFaces",
    "Description": "Deletes faces from a collection"
  },
  {
    "API": "rekognition:DeleteProject",
    "EventSource": "rekognition",
    "EventName": "DeleteProject",
    "Description": "Deletes a Amazon Rekognition project"
  },
  {
    "API": "rekognition:DeleteProjectPolicy",
    "EventSource": "rekognition",
    "EventName": "DeleteProjectPolicy",
    "Description": ""
  },
  {
    "API": "rekognition:DeleteProjectVersion",
    "EventSource": "rekognition",
    "EventName": "DeleteProjectVersion",
    "Description": "Deletes a Rekognition project model or project version, like a Amazon Rekognition Custom Labels model or a custom adapter"
  },
  {
    "API": "rekognition:DeleteStreamProcessor",
    "EventSource": "rekognition",
    "EventName": "DeleteStreamProcessor",
    "Description": "Deletes the stream processor identified by ``Name``"
  },
  {
    "API": "rekognition:DeleteUser",
    "EventSource": "rekognition",
    "EventName": "DeleteUser",
    "Description": "Deletes the specified UserID within the collection"
  },
  {
    "API": "rekognition:DescribeCollection",
    "EventSource": "rekognition",
    "EventName": "DescribeCollection",
    "Description": "Describes the specified collection"
  },
  {
    "API": "rekognition:DescribeDataset",
    "EventSource": "rekognition",
    "EventName": "DescribeDataset",
    "Description": ""
  },
  {
    "API": "rekognition:DescribeProjectVersions",
    "EventSource": "rekognition",
    "EventName": "DescribeProjectVersions",
    "Description": "Lists and describes the versions of an Amazon Rekognition project"
  },
  {
    "API": "rekognition:DescribeProjects",
    "EventSource": "rekognition",
    "EventName": "DescribeProjects",
    "Description": "Gets information about your Rekognition projects"
  },
  {
    "API": "rekognition:DescribeStreamProcessor",
    "EventSource": "rekognition",
    "EventName": "DescribeStreamProcessor",
    "Description": "Provides information about a stream processor created by  CreateStreamProcessor"
  },
  {
    "API": "rekognition:DetectCustomLabels",
    "EventSource": "rekognition",
    "EventName": "DetectCustomLabels",
    "Description": ""
  },
  {
    "API": "rekognition:DetectFaces",
    "EventSource": "rekognition",
    "EventName": "DetectFaces",
    "Description": "Detects faces within an image that is provided as input"
  },
  {
    "API": "rekognition:DetectLabels",
    "EventSource": "rekognition",
    "EventName": "DetectLabels",
    "Description": "Detects instances of real-world entities within an image (JPEG or PNG) provided as input"
  },
  {
    "API": "rekognition:DetectModerationLabels",
    "EventSource": "rekognition",
    "EventName": "DetectModerationLabels",
    "Description": "Detects unsafe content in a specified JPEG or PNG format image"
  },
  {
    "API": "rekognition:DetectProtectiveEquipment",
    "EventSource": "rekognition",
    "EventName": "DetectProtectiveEquipment",
    "Description": "Detects Personal Protective Equipment (PPE) worn by people detected in an image"
  },
  {
    "API": "rekognition:DetectText",
    "EventSource": "rekognition",
    "EventName": "DetectText",
    "Description": "Detects text in the input image and converts it into machine-readable text"
  },
  {
    "API": "rekognition:DisassociateFaces",
    "EventSource": "rekognition",
    "EventName": "DisassociateFaces",
    "Description": "Removes the association between a ``Face`` supplied in an array of ``FaceIds`` and the User"
  },
  {
    "API": "rekognition:DistributeDatasetEntries",
    "EventSource": "rekognition",
    "EventName": "DistributeDatasetEntries",
    "Description": ""
  },
  {
    "API": "rekognition:GeneratePresignedUrl",
    "EventSource": "rekognition",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "rekognition:GetCelebrityInfo",
    "EventSource": "rekognition",
    "EventName": "GetCelebrityInfo",
    "Description": "Gets the name and additional information about a celebrity based on their Amazon Rekognition ID"
  },
  {
    "API": "rekognition:GetCelebrityRecognition",
    "EventSource": "rekognition",
    "EventName": "GetCelebrityRecognition",
    "Description": "Gets the celebrity recognition results for a Amazon Rekognition Video analysis started by  StartCelebrityRecognition"
  },
  {
    "API": "rekognition:GetContentModeration",
    "EventSource": "rekognition",
    "EventName": "GetContentModeration",
    "Description": "Gets the inappropriate, unwanted, or offensive content analysis results for a Amazon Rekognition Video analysis started by  StartContentModeration"
  },
  {
    "API": "rekognition:GetFaceDetection",
    "EventSource": "rekognition",
    "EventName": "GetFaceDetection",
    "Description": "Gets face detection results for a Amazon Rekognition Video analysis started by  StartFaceDetection"
  },
  {
    "API": "rekognition:GetFaceLivenessSessionResults",
    "EventSource": "rekognition",
    "EventName": "GetFaceLivenessSessionResults",
    "Description": "Retrieves the results of a specific Face Liveness session"
  },
  {
    "API": "rekognition:GetFaceSearch",
    "EventSource": "rekognition",
    "EventName": "GetFaceSearch",
    "Description": "Gets the face search results for Amazon Rekognition Video face search started by  StartFaceSearch"
  },
  {
    "API": "rekognition:GetLabelDetection",
    "EventSource": "rekognition",
    "EventName": "GetLabelDetection",
    "Description": "Gets the label detection results of a Amazon Rekognition Video analysis started by  StartLabelDetection"
  },
  {
    "API": "rekognition:GetMediaAnalysisJob",
    "EventSource": "rekognition",
    "EventName": "GetMediaAnalysisJob",
    "Description": "Retrieves the results for a given media analysis job"
  },
  {
    "API": "rekognition:GetPersonTracking",
    "EventSource": "rekognition",
    "EventName": "GetPersonTracking",
    "Description": "Gets the path tracking results of a Amazon Rekognition Video analysis started by  StartPersonTracking"
  },
  {
    "API": "rekognition:GetSegmentDetection",
    "EventSource": "rekognition",
    "EventName": "GetSegmentDetection",
    "Description": "Gets the segment detection results of a Amazon Rekognition Video analysis started by  StartSegmentDetection"
  },
  {
    "API": "rekognition:GetTextDetection",
    "EventSource": "rekognition",
    "EventName": "GetTextDetection",
    "Description": "Gets the text detection results of a Amazon Rekognition Video analysis started by  StartTextDetection"
  },
  {
    "API": "rekognition:IndexFaces",
    "EventSource": "rekognition",
    "EventName": "IndexFaces",
    "Description": "Detects faces in the input image and adds them to the specified collection"
  },
  {
    "API": "rekognition:ListCollections",
    "EventSource": "rekognition",
    "EventName": "ListCollections",
    "Description": "Returns list of collection IDs in your account"
  },
  {
    "API": "rekognition:ListDatasetEntries",
    "EventSource": "rekognition",
    "EventName": "ListDatasetEntries",
    "Description": ""
  },
  {
    "API": "rekognition:ListDatasetLabels",
    "EventSource": "rekognition",
    "EventName": "ListDatasetLabels",
    "Description": ""
  },
  {
    "API": "rekognition:ListFaces",
    "EventSource": "rekognition",
    "EventName": "ListFaces",
    "Description": "Returns metadata for faces in the specified collection"
  },
  {
    "API": "rekognition:ListMediaAnalysisJobs",
    "EventSource": "rekognition",
    "EventName": "ListMediaAnalysisJobs",
    "Description": "Returns a list of media analysis jobs"
  },
  {
    "API": "rekognition:ListProjectPolicies",
    "EventSource": "rekognition",
    "EventName": "ListProjectPolicies",
    "Description": ""
  },
  {
    "API": "rekognition:ListStreamProcessors",
    "EventSource": "rekognition",
    "EventName": "ListStreamProcessors",
    "Description": "Gets a list of stream processors that you have created with  CreateStreamProcessor"
  },
  {
    "API": "rekognition:ListTagsForResource",
    "EventSource": "rekognition",
    "EventName": "ListTagsForResource",
    "Description": "Returns a list of tags in an Amazon Rekognition collection, stream processor, or Custom Labels model"
  },
  {
    "API": "rekognition:ListUsers",
    "EventSource": "rekognition",
    "EventName": "ListUsers",
    "Description": "Returns metadata of the User such as ``UserID`` in the specified collection"
  },
  {
    "API": "rekognition:PutProjectPolicy",
    "EventSource": "rekognition",
    "EventName": "PutProjectPolicy",
    "Description": ""
  },
  {
    "API": "rekognition:RecognizeCelebrities",
    "EventSource": "rekognition",
    "EventName": "RecognizeCelebrities",
    "Description": "Returns an array of celebrities recognized in the input image"
  },
  {
    "API": "rekognition:SearchFaces",
    "EventSource": "rekognition",
    "EventName": "SearchFaces",
    "Description": "For a given input face ID, searches for matching faces in the collection the face belongs to"
  },
  {
    "API": "rekognition:SearchFacesByImage",
    "EventSource": "rekognition",
    "EventName": "SearchFacesByImage",
    "Description": "For a given input image, first detects the largest face in the image, and then searches the specified collection for matching faces"
  },
  {
    "API": "rekognition:SearchUsers",
    "EventSource": "rekognition",
    "EventName": "SearchUsers",
    "Description": "Searches for UserIDs within a collection based on a ``FaceId`` or ``UserId``"
  },
  {
    "API": "rekognition:SearchUsersByImage",
    "EventSource": "rekognition",
    "EventName": "SearchUsersByImage",
    "Description": "Searches for UserIDs using a supplied image"
  },
  {
    "API": "rekognition:StartCelebrityRecognition",
    "EventSource": "rekognition",
    "EventName": "StartCelebrityRecognition",
    "Description": "Starts asynchronous recognition of celebrities in a stored video"
  },
  {
    "API": "rekognition:StartContentModeration",
    "EventSource": "rekognition",
    "EventName": "StartContentModeration",
    "Description": "Starts asynchronous detection of inappropriate, unwanted, or offensive content in a stored video"
  },
  {
    "API": "rekognition:StartFaceDetection",
    "EventSource": "rekognition",
    "EventName": "StartFaceDetection",
    "Description": "Starts asynchronous detection of faces in a stored video"
  },
  {
    "API": "rekognition:StartFaceSearch",
    "EventSource": "rekognition",
    "EventName": "StartFaceSearch",
    "Description": "Starts the asynchronous search for faces in a collection that match the faces of persons detected in a stored video"
  },
  {
    "API": "rekognition:StartLabelDetection",
    "EventSource": "rekognition",
    "EventName": "StartLabelDetection",
    "Description": "Starts asynchronous detection of labels in a stored video"
  },
  {
    "API": "rekognition:StartMediaAnalysisJob",
    "EventSource": "rekognition",
    "EventName": "StartMediaAnalysisJob",
    "Description": "Initiates a new media analysis job"
  },
  {
    "API": "rekognition:StartPersonTracking",
    "EventSource": "rekognition",
    "EventName": "StartPersonTracking",
    "Description": "Starts the asynchronous tracking of a person's path in a stored video"
  },
  {
    "API": "rekognition:StartProjectVersion",
    "EventSource": "rekognition",
    "EventName": "StartProjectVersion",
    "Description": ""
  },
  {
    "API": "rekognition:StartSegmentDetection",
    "EventSource": "rekognition",
    "EventName": "StartSegmentDetection",
    "Description": "Starts asynchronous detection of segment detection in a stored video"
  },
  {
    "API": "rekognition:StartStreamProcessor",
    "EventSource": "rekognition",
    "EventName": "StartStreamProcessor",
    "Description": "Starts processing a stream processor"
  },
  {
    "API": "rekognition:StartTextDetection",
    "EventSource": "rekognition",
    "EventName": "StartTextDetection",
    "Description": "Starts asynchronous detection of text in a stored video"
  },
  {
    "API": "rekognition:StopProjectVersion",
    "EventSource": "rekognition",
    "EventName": "StopProjectVersion",
    "Description": ""
  },
  {
    "API": "rekognition:StopStreamProcessor",
    "EventSource": "rekognition",
    "EventName": "StopStreamProcessor",
    "Description": "Stops a running stream processor that was created by  CreateStreamProcessor"
  },
  {
    "API": "rekognition:TagResource",
    "EventSource": "rekognition",
    "EventName": "TagResource",
    "Description": "Adds one or more key-value tags to an Amazon Rekognition collection, stream processor, or Custom Labels model"
  },
  {
    "API": "rekognition:UntagResource",
    "EventSource": "rekognition",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags from an Amazon Rekognition collection, stream processor, or Custom Labels model"
  },
  {
    "API": "rekognition:UpdateDatasetEntries",
    "EventSource": "rekognition",
    "EventName": "UpdateDatasetEntries",
    "Description": ""
  },
  {
    "API": "rekognition:UpdateStreamProcessor",
    "EventSource": "rekognition",
    "EventName": "UpdateStreamProcessor",
    "Description": "Allows you to update a stream processor"
  },
  {
    "API": "repostspace:CreateSpace",
    "EventSource": "repostspace",
    "EventName": "CreateSpace",
    "Description": "Creates an AWS re:Post Private private re:Post"
  },
  {
    "API": "repostspace:DeleteSpace",
    "EventSource": "repostspace",
    "EventName": "DeleteSpace",
    "Description": "Deletes an AWS re:Post Private private re:Post"
  },
  {
    "API": "repostspace:DeregisterAdmin",
    "EventSource": "repostspace",
    "EventName": "DeregisterAdmin",
    "Description": "Removes the user or group from the list of administrators of the private re:Post"
  },
  {
    "API": "repostspace:GeneratePresignedUrl",
    "EventSource": "repostspace",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "repostspace:GetSpace",
    "EventSource": "repostspace",
    "EventName": "GetSpace",
    "Description": "Displays information about the AWS re:Post Private private re:Post"
  },
  {
    "API": "repostspace:ListSpaces",
    "EventSource": "repostspace",
    "EventName": "ListSpaces",
    "Description": "Returns a list of AWS re:Post Private private re:Posts in the account with some information about each private re:Post"
  },
  {
    "API": "repostspace:ListTagsForResource",
    "EventSource": "repostspace",
    "EventName": "ListTagsForResource",
    "Description": "Returns the tags that are associated with the AWS re:Post Private resource specified by the resourceArn"
  },
  {
    "API": "repostspace:RegisterAdmin",
    "EventSource": "repostspace",
    "EventName": "RegisterAdmin",
    "Description": "Adds a user or group to the list of administrators of the private re:Post"
  },
  {
    "API": "repostspace:SendInvites",
    "EventSource": "repostspace",
    "EventName": "SendInvites",
    "Description": "Sends an invitation email to selected users and groups"
  },
  {
    "API": "repostspace:TagResource",
    "EventSource": "repostspace",
    "EventName": "TagResource",
    "Description": "Associates tags with an AWS re:Post Private resource"
  },
  {
    "API": "repostspace:UntagResource",
    "EventSource": "repostspace",
    "EventName": "UntagResource",
    "Description": "Removes the association of the tag with the AWS re:Post Private resource"
  },
  {
    "API": "repostspace:UpdateSpace",
    "EventSource": "repostspace",
    "EventName": "UpdateSpace",
    "Description": "Modifies an existing AWS re:Post Private private re:Post"
  },
  {
    "API": "resiliencehub:AddDraftAppVersionResourceMappings",
    "EventSource": "resiliencehub",
    "EventName": "AddDraftAppVersionResourceMappings",
    "Description": "Adds the source of resource-maps to the draft version of an application"
  },
  {
    "API": "resiliencehub:BatchUpdateRecommendationStatus",
    "EventSource": "resiliencehub",
    "EventName": "BatchUpdateRecommendationStatus",
    "Description": "Enables you to include or exclude one or more operational recommendations"
  },
  {
    "API": "resiliencehub:CreateApp",
    "EventSource": "resiliencehub",
    "EventName": "CreateApp",
    "Description": "Creates an Resilience Hub application"
  },
  {
    "API": "resiliencehub:CreateAppVersionAppComponent",
    "EventSource": "resiliencehub",
    "EventName": "CreateAppVersionAppComponent",
    "Description": "Creates a new Application Component in the Resilience Hub application"
  },
  {
    "API": "resiliencehub:CreateAppVersionResource",
    "EventSource": "resiliencehub",
    "EventName": "CreateAppVersionResource",
    "Description": "Adds a resource to the Resilience Hub application and assigns it to the specified Application Components"
  },
  {
    "API": "resiliencehub:CreateRecommendationTemplate",
    "EventSource": "resiliencehub",
    "EventName": "CreateRecommendationTemplate",
    "Description": "Creates a new recommendation template for the Resilience Hub application"
  },
  {
    "API": "resiliencehub:CreateResiliencyPolicy",
    "EventSource": "resiliencehub",
    "EventName": "CreateResiliencyPolicy",
    "Description": "Creates a resiliency policy for an application"
  },
  {
    "API": "resiliencehub:DeleteApp",
    "EventSource": "resiliencehub",
    "EventName": "DeleteApp",
    "Description": "Deletes an Resilience Hub application"
  },
  {
    "API": "resiliencehub:DeleteAppAssessment",
    "EventSource": "resiliencehub",
    "EventName": "DeleteAppAssessment",
    "Description": "Deletes an Resilience Hub application assessment"
  },
  {
    "API": "resiliencehub:DeleteAppInputSource",
    "EventSource": "resiliencehub",
    "EventName": "DeleteAppInputSource",
    "Description": "Deletes the input source and all of its imported resources from the Resilience Hub application"
  },
  {
    "API": "resiliencehub:DeleteAppVersionAppComponent",
    "EventSource": "resiliencehub",
    "EventName": "DeleteAppVersionAppComponent",
    "Description": "Deletes an Application Component from the Resilience Hub application"
  },
  {
    "API": "resiliencehub:DeleteAppVersionResource",
    "EventSource": "resiliencehub",
    "EventName": "DeleteAppVersionResource",
    "Description": "Deletes a resource from the Resilience Hub application"
  },
  {
    "API": "resiliencehub:DeleteRecommendationTemplate",
    "EventSource": "resiliencehub",
    "EventName": "DeleteRecommendationTemplate",
    "Description": "Deletes a recommendation template"
  },
  {
    "API": "resiliencehub:DeleteResiliencyPolicy",
    "EventSource": "resiliencehub",
    "EventName": "DeleteResiliencyPolicy",
    "Description": "Deletes a resiliency policy"
  },
  {
    "API": "resiliencehub:DescribeApp",
    "EventSource": "resiliencehub",
    "EventName": "DescribeApp",
    "Description": "Describes an Resilience Hub application"
  },
  {
    "API": "resiliencehub:DescribeAppAssessment",
    "EventSource": "resiliencehub",
    "EventName": "DescribeAppAssessment",
    "Description": "Describes an assessment for an Resilience Hub application"
  },
  {
    "API": "resiliencehub:DescribeAppVersion",
    "EventSource": "resiliencehub",
    "EventName": "DescribeAppVersion",
    "Description": "Describes the Resilience Hub application version"
  },
  {
    "API": "resiliencehub:DescribeAppVersionAppComponent",
    "EventSource": "resiliencehub",
    "EventName": "DescribeAppVersionAppComponent",
    "Description": "Describes an Application Component in the Resilience Hub application"
  },
  {
    "API": "resiliencehub:DescribeAppVersionResource",
    "EventSource": "resiliencehub",
    "EventName": "DescribeAppVersionResource",
    "Description": "Describes a resource of the Resilience Hub application"
  },
  {
    "API": "resiliencehub:DescribeAppVersionResourcesResolutionStatus",
    "EventSource": "resiliencehub",
    "EventName": "DescribeAppVersionResourcesResolutionStatus",
    "Description": "Returns the resolution status for the specified resolution identifier for an application version"
  },
  {
    "API": "resiliencehub:DescribeAppVersionTemplate",
    "EventSource": "resiliencehub",
    "EventName": "DescribeAppVersionTemplate",
    "Description": "Describes details about an Resilience Hub application"
  },
  {
    "API": "resiliencehub:DescribeDraftAppVersionResourcesImportStatus",
    "EventSource": "resiliencehub",
    "EventName": "DescribeDraftAppVersionResourcesImportStatus",
    "Description": "Describes the status of importing resources to an application version"
  },
  {
    "API": "resiliencehub:DescribeResiliencyPolicy",
    "EventSource": "resiliencehub",
    "EventName": "DescribeResiliencyPolicy",
    "Description": "Describes a specified resiliency policy for an Resilience Hub application"
  },
  {
    "API": "resiliencehub:GeneratePresignedUrl",
    "EventSource": "resiliencehub",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "resiliencehub:ImportResourcesToDraftAppVersion",
    "EventSource": "resiliencehub",
    "EventName": "ImportResourcesToDraftAppVersion",
    "Description": "Imports resources to Resilience Hub application draft version from different input sources"
  },
  {
    "API": "resiliencehub:ListAlarmRecommendations",
    "EventSource": "resiliencehub",
    "EventName": "ListAlarmRecommendations",
    "Description": "Lists the alarm recommendations for an Resilience Hub application"
  },
  {
    "API": "resiliencehub:ListAppAssessmentComplianceDrifts",
    "EventSource": "resiliencehub",
    "EventName": "ListAppAssessmentComplianceDrifts",
    "Description": "List of compliance drifts that were detected while running an assessment"
  },
  {
    "API": "resiliencehub:ListAppAssessmentResourceDrifts",
    "EventSource": "resiliencehub",
    "EventName": "ListAppAssessmentResourceDrifts",
    "Description": "Indicates the list of resource drifts that were detected while running an assessment"
  },
  {
    "API": "resiliencehub:ListAppAssessments",
    "EventSource": "resiliencehub",
    "EventName": "ListAppAssessments",
    "Description": "Lists the assessments for an Resilience Hub application"
  },
  {
    "API": "resiliencehub:ListAppComponentCompliances",
    "EventSource": "resiliencehub",
    "EventName": "ListAppComponentCompliances",
    "Description": "Lists the compliances for an Resilience Hub Application Component"
  },
  {
    "API": "resiliencehub:ListAppComponentRecommendations",
    "EventSource": "resiliencehub",
    "EventName": "ListAppComponentRecommendations",
    "Description": "Lists the recommendations for an Resilience Hub Application Component"
  },
  {
    "API": "resiliencehub:ListAppInputSources",
    "EventSource": "resiliencehub",
    "EventName": "ListAppInputSources",
    "Description": "Lists all the input sources of the Resilience Hub application"
  },
  {
    "API": "resiliencehub:ListAppVersionAppComponents",
    "EventSource": "resiliencehub",
    "EventName": "ListAppVersionAppComponents",
    "Description": "Lists all the Application Components in the Resilience Hub application"
  },
  {
    "API": "resiliencehub:ListAppVersionResourceMappings",
    "EventSource": "resiliencehub",
    "EventName": "ListAppVersionResourceMappings",
    "Description": "Lists how the resources in an application version are mapped/sourced from"
  },
  {
    "API": "resiliencehub:ListAppVersionResources",
    "EventSource": "resiliencehub",
    "EventName": "ListAppVersionResources",
    "Description": "Lists all the resources in an Resilience Hub application"
  },
  {
    "API": "resiliencehub:ListAppVersions",
    "EventSource": "resiliencehub",
    "EventName": "ListAppVersions",
    "Description": "Lists the different versions for the Resilience Hub applications"
  },
  {
    "API": "resiliencehub:ListApps",
    "EventSource": "resiliencehub",
    "EventName": "ListApps",
    "Description": "Lists your Resilience Hub applications"
  },
  {
    "API": "resiliencehub:ListRecommendationTemplates",
    "EventSource": "resiliencehub",
    "EventName": "ListRecommendationTemplates",
    "Description": "Lists the recommendation templates for the Resilience Hub applications"
  },
  {
    "API": "resiliencehub:ListResiliencyPolicies",
    "EventSource": "resiliencehub",
    "EventName": "ListResiliencyPolicies",
    "Description": "Lists the resiliency policies for the Resilience Hub applications"
  },
  {
    "API": "resiliencehub:ListSopRecommendations",
    "EventSource": "resiliencehub",
    "EventName": "ListSopRecommendations",
    "Description": "Lists the standard operating procedure (SOP) recommendations for the Resilience Hub applications"
  },
  {
    "API": "resiliencehub:ListSuggestedResiliencyPolicies",
    "EventSource": "resiliencehub",
    "EventName": "ListSuggestedResiliencyPolicies",
    "Description": "Lists the suggested resiliency policies for the Resilience Hub applications"
  },
  {
    "API": "resiliencehub:ListTagsForResource",
    "EventSource": "resiliencehub",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags for your resources in your Resilience Hub applications"
  },
  {
    "API": "resiliencehub:ListTestRecommendations",
    "EventSource": "resiliencehub",
    "EventName": "ListTestRecommendations",
    "Description": "Lists the test recommendations for the Resilience Hub application"
  },
  {
    "API": "resiliencehub:ListUnsupportedAppVersionResources",
    "EventSource": "resiliencehub",
    "EventName": "ListUnsupportedAppVersionResources",
    "Description": "Lists the resources that are not currently supported in Resilience Hub"
  },
  {
    "API": "resiliencehub:PublishAppVersion",
    "EventSource": "resiliencehub",
    "EventName": "PublishAppVersion",
    "Description": "Publishes a new version of a specific Resilience Hub application"
  },
  {
    "API": "resiliencehub:PutDraftAppVersionTemplate",
    "EventSource": "resiliencehub",
    "EventName": "PutDraftAppVersionTemplate",
    "Description": "Adds or updates the app template for an Resilience Hub application draft version"
  },
  {
    "API": "resiliencehub:RemoveDraftAppVersionResourceMappings",
    "EventSource": "resiliencehub",
    "EventName": "RemoveDraftAppVersionResourceMappings",
    "Description": "Removes resource mappings from a draft application version"
  },
  {
    "API": "resiliencehub:ResolveAppVersionResources",
    "EventSource": "resiliencehub",
    "EventName": "ResolveAppVersionResources",
    "Description": "Resolves the resources for an application version"
  },
  {
    "API": "resiliencehub:StartAppAssessment",
    "EventSource": "resiliencehub",
    "EventName": "StartAppAssessment",
    "Description": "Creates a new application assessment for an application"
  },
  {
    "API": "resiliencehub:TagResource",
    "EventSource": "resiliencehub",
    "EventName": "TagResource",
    "Description": "Applies one or more tags to a resource"
  },
  {
    "API": "resiliencehub:UntagResource",
    "EventSource": "resiliencehub",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags from a resource"
  },
  {
    "API": "resiliencehub:UpdateApp",
    "EventSource": "resiliencehub",
    "EventName": "UpdateApp",
    "Description": "Updates an application"
  },
  {
    "API": "resiliencehub:UpdateAppVersion",
    "EventSource": "resiliencehub",
    "EventName": "UpdateAppVersion",
    "Description": "Updates the Resilience Hub application version"
  },
  {
    "API": "resiliencehub:UpdateAppVersionAppComponent",
    "EventSource": "resiliencehub",
    "EventName": "UpdateAppVersionAppComponent",
    "Description": "Updates an existing Application Component in the Resilience Hub application"
  },
  {
    "API": "resiliencehub:UpdateAppVersionResource",
    "EventSource": "resiliencehub",
    "EventName": "UpdateAppVersionResource",
    "Description": "Updates the resource details in the Resilience Hub application"
  },
  {
    "API": "resiliencehub:UpdateResiliencyPolicy",
    "EventSource": "resiliencehub",
    "EventName": "UpdateResiliencyPolicy",
    "Description": "Updates a resiliency policy"
  },
  {
    "API": "resource-explorer-2:AssociateDefaultView",
    "EventSource": "resource-explorer-2",
    "EventName": "AssociateDefaultView",
    "Description": "Sets the specified view as the default for the Amazon Web Services Region in which you call this operation"
  },
  {
    "API": "resource-explorer-2:BatchGetView",
    "EventSource": "resource-explorer-2",
    "EventName": "BatchGetView",
    "Description": "Retrieves details about a list of views"
  },
  {
    "API": "resource-explorer-2:CreateIndex",
    "EventSource": "resource-explorer-2",
    "EventName": "CreateIndex",
    "Description": "Turns on Amazon Web Services Resource Explorer in the Amazon Web Services Region in which you called this operation by creating an index"
  },
  {
    "API": "resource-explorer-2:CreateView",
    "EventSource": "resource-explorer-2",
    "EventName": "CreateView",
    "Description": "Creates a view that users can query by using the  Search operation"
  },
  {
    "API": "resource-explorer-2:DeleteIndex",
    "EventSource": "resource-explorer-2",
    "EventName": "DeleteIndex",
    "Description": "Deletes the specified index and turns off Amazon Web Services Resource Explorer in the specified Amazon Web Services Region"
  },
  {
    "API": "resource-explorer-2:DeleteView",
    "EventSource": "resource-explorer-2",
    "EventName": "DeleteView",
    "Description": "Deletes the specified view"
  },
  {
    "API": "resource-explorer-2:DisassociateDefaultView",
    "EventSource": "resource-explorer-2",
    "EventName": "DisassociateDefaultView",
    "Description": "After you call this operation, the affected Amazon Web Services Region no longer has a default view"
  },
  {
    "API": "resource-explorer-2:GeneratePresignedUrl",
    "EventSource": "resource-explorer-2",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "resource-explorer-2:GetAccountLevelServiceConfiguration",
    "EventSource": "resource-explorer-2",
    "EventName": "GetAccountLevelServiceConfiguration",
    "Description": "Retrieves the status of your account's Amazon Web Services service access, and validates the service linked role required to access the multi-account search feature"
  },
  {
    "API": "resource-explorer-2:GetDefaultView",
    "EventSource": "resource-explorer-2",
    "EventName": "GetDefaultView",
    "Description": "Retrieves the Amazon Resource Name (ARN) of the view that is the default for the Amazon Web Services Region in which you call this operation"
  },
  {
    "API": "resource-explorer-2:GetIndex",
    "EventSource": "resource-explorer-2",
    "EventName": "GetIndex",
    "Description": "Retrieves details about the Amazon Web Services Resource Explorer index in the Amazon Web Services Region in which you invoked the operation"
  },
  {
    "API": "resource-explorer-2:GetView",
    "EventSource": "resource-explorer-2",
    "EventName": "GetView",
    "Description": "Retrieves details of the specified view"
  },
  {
    "API": "resource-explorer-2:ListIndexes",
    "EventSource": "resource-explorer-2",
    "EventName": "ListIndexes",
    "Description": "Retrieves a list of all of the indexes in Amazon Web Services Regions that are currently collecting resource information for Amazon Web Services Resource Explorer"
  },
  {
    "API": "resource-explorer-2:ListIndexesForMembers",
    "EventSource": "resource-explorer-2",
    "EventName": "ListIndexesForMembers",
    "Description": "Retrieves a list of a member's indexes in all Amazon Web Services Regions that are currently collecting resource information for Amazon Web Services Resource Explorer"
  },
  {
    "API": "resource-explorer-2:ListSupportedResourceTypes",
    "EventSource": "resource-explorer-2",
    "EventName": "ListSupportedResourceTypes",
    "Description": "Retrieves a list of all resource types currently supported by Amazon Web Services Resource Explorer"
  },
  {
    "API": "resource-explorer-2:ListTagsForResource",
    "EventSource": "resource-explorer-2",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags that are attached to the specified resource"
  },
  {
    "API": "resource-explorer-2:ListViews",
    "EventSource": "resource-explorer-2",
    "EventName": "ListViews",
    "Description": "Lists the `Amazon resource names (ARNs) <https://docs"
  },
  {
    "API": "resource-explorer-2:TagResource",
    "EventSource": "resource-explorer-2",
    "EventName": "TagResource",
    "Description": "Adds one or more tag key and value pairs to an Amazon Web Services Resource Explorer view or index"
  },
  {
    "API": "resource-explorer-2:UntagResource",
    "EventSource": "resource-explorer-2",
    "EventName": "UntagResource",
    "Description": "Removes one or more tag key and value pairs from an Amazon Web Services Resource Explorer view or index"
  },
  {
    "API": "resource-explorer-2:UpdateIndexType",
    "EventSource": "resource-explorer-2",
    "EventName": "UpdateIndexType",
    "Description": "Changes the type of the index from one of the following types to the other"
  },
  {
    "API": "resource-explorer-2:UpdateView",
    "EventSource": "resource-explorer-2",
    "EventName": "UpdateView",
    "Description": "Modifies some of the details of a view"
  },
  {
    "API": "resource-groups:CreateGroup",
    "EventSource": "resource-groups",
    "EventName": "CreateGroup",
    "Description": "Creates a resource group with the specified name and description"
  },
  {
    "API": "resource-groups:DeleteGroup",
    "EventSource": "resource-groups",
    "EventName": "DeleteGroup",
    "Description": "Deletes the specified resource group"
  },
  {
    "API": "resource-groups:GeneratePresignedUrl",
    "EventSource": "resource-groups",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "resource-groups:GetAccountSettings",
    "EventSource": "resource-groups",
    "EventName": "GetAccountSettings",
    "Description": "Retrieves the current status of optional features in Resource Groups"
  },
  {
    "API": "resource-groups:GetGroup",
    "EventSource": "resource-groups",
    "EventName": "GetGroup",
    "Description": "Returns information about a specified resource group"
  },
  {
    "API": "resource-groups:GetGroupConfiguration",
    "EventSource": "resource-groups",
    "EventName": "GetGroupConfiguration",
    "Description": "Retrieves the service configuration associated with the specified resource group"
  },
  {
    "API": "resource-groups:GetGroupQuery",
    "EventSource": "resource-groups",
    "EventName": "GetGroupQuery",
    "Description": "Retrieves the resource query associated with the specified resource group"
  },
  {
    "API": "resource-groups:GetTags",
    "EventSource": "resource-groups",
    "EventName": "GetTags",
    "Description": "Returns a list of tags that are associated with a resource group, specified by an ARN"
  },
  {
    "API": "resource-groups:GroupResources",
    "EventSource": "resource-groups",
    "EventName": "GroupResources",
    "Description": "Adds the specified resources to the specified group"
  },
  {
    "API": "resource-groups:ListGroupResources",
    "EventSource": "resource-groups",
    "EventName": "ListGroupResources",
    "Description": "Returns a list of ARNs of the resources that are members of a specified resource group"
  },
  {
    "API": "resource-groups:ListGroups",
    "EventSource": "resource-groups",
    "EventName": "ListGroups",
    "Description": "Returns a list of existing Resource Groups in your account"
  },
  {
    "API": "resource-groups:PutGroupConfiguration",
    "EventSource": "resource-groups",
    "EventName": "PutGroupConfiguration",
    "Description": "Attaches a service configuration to the specified group"
  },
  {
    "API": "resource-groups:SearchResources",
    "EventSource": "resource-groups",
    "EventName": "SearchResources",
    "Description": "Returns a list of Amazon Web Services resource identifiers that matches the specified query"
  },
  {
    "API": "resource-groups:UngroupResources",
    "EventSource": "resource-groups",
    "EventName": "UngroupResources",
    "Description": "Removes the specified resources from the specified group"
  },
  {
    "API": "resource-groups:UpdateAccountSettings",
    "EventSource": "resource-groups",
    "EventName": "UpdateAccountSettings",
    "Description": "Turns on or turns off optional features in Resource Groups"
  },
  {
    "API": "resource-groups:UpdateGroup",
    "EventSource": "resource-groups",
    "EventName": "UpdateGroup",
    "Description": "Updates the description for an existing group"
  },
  {
    "API": "resource-groups:UpdateGroupQuery",
    "EventSource": "resource-groups",
    "EventName": "UpdateGroupQuery",
    "Description": "Updates the resource query of a group"
  },
  {
    "API": "resourcegroupstaggingapi:DescribeReportCreation",
    "EventSource": "resourcegroupstaggingapi",
    "EventName": "DescribeReportCreation",
    "Description": "Describes the status of the ``StartReportCreation`` operation"
  },
  {
    "API": "resourcegroupstaggingapi:GeneratePresignedUrl",
    "EventSource": "resourcegroupstaggingapi",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "resourcegroupstaggingapi:GetComplianceSummary",
    "EventSource": "resourcegroupstaggingapi",
    "EventName": "GetComplianceSummary",
    "Description": "Returns a table that shows counts of resources that are noncompliant with their tag policies"
  },
  {
    "API": "resourcegroupstaggingapi:GetResources",
    "EventSource": "resourcegroupstaggingapi",
    "EventName": "GetResources",
    "Description": "Returns all the tagged or previously tagged resources that are located in the specified Amazon Web Services Region for the account"
  },
  {
    "API": "resourcegroupstaggingapi:GetTagKeys",
    "EventSource": "resourcegroupstaggingapi",
    "EventName": "GetTagKeys",
    "Description": "Returns all tag keys currently in use in the specified Amazon Web Services Region for the calling account"
  },
  {
    "API": "resourcegroupstaggingapi:GetTagValues",
    "EventSource": "resourcegroupstaggingapi",
    "EventName": "GetTagValues",
    "Description": "Returns all tag values for the specified key that are used in the specified Amazon Web Services Region for the calling account"
  },
  {
    "API": "resourcegroupstaggingapi:StartReportCreation",
    "EventSource": "resourcegroupstaggingapi",
    "EventName": "StartReportCreation",
    "Description": "Generates a report that lists all tagged resources in the accounts across your organization and tells whether each resource is compliant with the effective tag policy"
  },
  {
    "API": "resourcegroupstaggingapi:TagResources",
    "EventSource": "resourcegroupstaggingapi",
    "EventName": "TagResources",
    "Description": "Applies one or more tags to the specified resources"
  },
  {
    "API": "resourcegroupstaggingapi:UntagResources",
    "EventSource": "resourcegroupstaggingapi",
    "EventName": "UntagResources",
    "Description": "Removes the specified tags from the specified resources"
  },
  {
    "API": "robomaker:BatchDeleteWorlds",
    "EventSource": "robomaker",
    "EventName": "BatchDeleteWorlds",
    "Description": "Deletes one or more worlds in a batch operation"
  },
  {
    "API": "robomaker:BatchDescribeSimulationJob",
    "EventSource": "robomaker",
    "EventName": "BatchDescribeSimulationJob",
    "Description": "Describes one or more simulation jobs"
  },
  {
    "API": "robomaker:CancelDeploymentJob",
    "EventSource": "robomaker",
    "EventName": "CancelDeploymentJob",
    "Description": "Cancels the specified deployment job"
  },
  {
    "API": "robomaker:CancelSimulationJob",
    "EventSource": "robomaker",
    "EventName": "CancelSimulationJob",
    "Description": "Cancels the specified simulation job"
  },
  {
    "API": "robomaker:CancelSimulationJobBatch",
    "EventSource": "robomaker",
    "EventName": "CancelSimulationJobBatch",
    "Description": "Cancels a simulation job batch"
  },
  {
    "API": "robomaker:CancelWorldExportJob",
    "EventSource": "robomaker",
    "EventName": "CancelWorldExportJob",
    "Description": "Cancels the specified export job"
  },
  {
    "API": "robomaker:CancelWorldGenerationJob",
    "EventSource": "robomaker",
    "EventName": "CancelWorldGenerationJob",
    "Description": "Cancels the specified world generator job"
  },
  {
    "API": "robomaker:CreateDeploymentJob",
    "EventSource": "robomaker",
    "EventName": "CreateDeploymentJob",
    "Description": "Deploys a specific version of a robot application to robots in a fleet"
  },
  {
    "API": "robomaker:CreateFleet",
    "EventSource": "robomaker",
    "EventName": "CreateFleet",
    "Description": "Creates a fleet, a logical group of robots running the same robot application"
  },
  {
    "API": "robomaker:CreateRobot",
    "EventSource": "robomaker",
    "EventName": "CreateRobot",
    "Description": "Creates a robot"
  },
  {
    "API": "robomaker:CreateRobotApplication",
    "EventSource": "robomaker",
    "EventName": "CreateRobotApplication",
    "Description": "Creates a robot application"
  },
  {
    "API": "robomaker:CreateRobotApplicationVersion",
    "EventSource": "robomaker",
    "EventName": "CreateRobotApplicationVersion",
    "Description": "Creates a version of a robot application"
  },
  {
    "API": "robomaker:CreateSimulationApplication",
    "EventSource": "robomaker",
    "EventName": "CreateSimulationApplication",
    "Description": "Creates a simulation application"
  },
  {
    "API": "robomaker:CreateSimulationApplicationVersion",
    "EventSource": "robomaker",
    "EventName": "CreateSimulationApplicationVersion",
    "Description": "Creates a simulation application with a specific revision id"
  },
  {
    "API": "robomaker:CreateSimulationJob",
    "EventSource": "robomaker",
    "EventName": "CreateSimulationJob",
    "Description": "Creates a simulation job"
  },
  {
    "API": "robomaker:CreateWorldExportJob",
    "EventSource": "robomaker",
    "EventName": "CreateWorldExportJob",
    "Description": "Creates a world export job"
  },
  {
    "API": "robomaker:CreateWorldGenerationJob",
    "EventSource": "robomaker",
    "EventName": "CreateWorldGenerationJob",
    "Description": "Creates worlds using the specified template"
  },
  {
    "API": "robomaker:CreateWorldTemplate",
    "EventSource": "robomaker",
    "EventName": "CreateWorldTemplate",
    "Description": "Creates a world template"
  },
  {
    "API": "robomaker:DeleteFleet",
    "EventSource": "robomaker",
    "EventName": "DeleteFleet",
    "Description": "Deletes a fleet"
  },
  {
    "API": "robomaker:DeleteRobot",
    "EventSource": "robomaker",
    "EventName": "DeleteRobot",
    "Description": "Deletes a robot"
  },
  {
    "API": "robomaker:DeleteRobotApplication",
    "EventSource": "robomaker",
    "EventName": "DeleteRobotApplication",
    "Description": "Deletes a robot application"
  },
  {
    "API": "robomaker:DeleteSimulationApplication",
    "EventSource": "robomaker",
    "EventName": "DeleteSimulationApplication",
    "Description": "Deletes a simulation application"
  },
  {
    "API": "robomaker:DeleteWorldTemplate",
    "EventSource": "robomaker",
    "EventName": "DeleteWorldTemplate",
    "Description": "Deletes a world template"
  },
  {
    "API": "robomaker:DeregisterRobot",
    "EventSource": "robomaker",
    "EventName": "DeregisterRobot",
    "Description": "Deregisters a robot"
  },
  {
    "API": "robomaker:DescribeDeploymentJob",
    "EventSource": "robomaker",
    "EventName": "DescribeDeploymentJob",
    "Description": "Describes a deployment job"
  },
  {
    "API": "robomaker:DescribeFleet",
    "EventSource": "robomaker",
    "EventName": "DescribeFleet",
    "Description": "Describes a fleet"
  },
  {
    "API": "robomaker:DescribeRobot",
    "EventSource": "robomaker",
    "EventName": "DescribeRobot",
    "Description": "Describes a robot"
  },
  {
    "API": "robomaker:DescribeRobotApplication",
    "EventSource": "robomaker",
    "EventName": "DescribeRobotApplication",
    "Description": "Describes a robot application"
  },
  {
    "API": "robomaker:DescribeSimulationApplication",
    "EventSource": "robomaker",
    "EventName": "DescribeSimulationApplication",
    "Description": "Describes a simulation application"
  },
  {
    "API": "robomaker:DescribeSimulationJob",
    "EventSource": "robomaker",
    "EventName": "DescribeSimulationJob",
    "Description": "Describes a simulation job"
  },
  {
    "API": "robomaker:DescribeSimulationJobBatch",
    "EventSource": "robomaker",
    "EventName": "DescribeSimulationJobBatch",
    "Description": "Describes a simulation job batch"
  },
  {
    "API": "robomaker:DescribeWorld",
    "EventSource": "robomaker",
    "EventName": "DescribeWorld",
    "Description": "Describes a world"
  },
  {
    "API": "robomaker:DescribeWorldExportJob",
    "EventSource": "robomaker",
    "EventName": "DescribeWorldExportJob",
    "Description": "Describes a world export job"
  },
  {
    "API": "robomaker:DescribeWorldGenerationJob",
    "EventSource": "robomaker",
    "EventName": "DescribeWorldGenerationJob",
    "Description": "Describes a world generation job"
  },
  {
    "API": "robomaker:DescribeWorldTemplate",
    "EventSource": "robomaker",
    "EventName": "DescribeWorldTemplate",
    "Description": "Describes a world template"
  },
  {
    "API": "robomaker:GeneratePresignedUrl",
    "EventSource": "robomaker",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "robomaker:GetWorldTemplateBody",
    "EventSource": "robomaker",
    "EventName": "GetWorldTemplateBody",
    "Description": "Gets the world template body"
  },
  {
    "API": "robomaker:ListDeploymentJobs",
    "EventSource": "robomaker",
    "EventName": "ListDeploymentJobs",
    "Description": "Returns a list of deployment jobs for a fleet"
  },
  {
    "API": "robomaker:ListFleets",
    "EventSource": "robomaker",
    "EventName": "ListFleets",
    "Description": "Returns a list of fleets"
  },
  {
    "API": "robomaker:ListRobotApplications",
    "EventSource": "robomaker",
    "EventName": "ListRobotApplications",
    "Description": "Returns a list of robot application"
  },
  {
    "API": "robomaker:ListRobots",
    "EventSource": "robomaker",
    "EventName": "ListRobots",
    "Description": "Returns a list of robots"
  },
  {
    "API": "robomaker:ListSimulationApplications",
    "EventSource": "robomaker",
    "EventName": "ListSimulationApplications",
    "Description": "Returns a list of simulation applications"
  },
  {
    "API": "robomaker:ListSimulationJobBatches",
    "EventSource": "robomaker",
    "EventName": "ListSimulationJobBatches",
    "Description": "Returns a list simulation job batches"
  },
  {
    "API": "robomaker:ListSimulationJobs",
    "EventSource": "robomaker",
    "EventName": "ListSimulationJobs",
    "Description": "Returns a list of simulation jobs"
  },
  {
    "API": "robomaker:ListTagsForResource",
    "EventSource": "robomaker",
    "EventName": "ListTagsForResource",
    "Description": "Lists all tags on a AWS RoboMaker resource"
  },
  {
    "API": "robomaker:ListWorldExportJobs",
    "EventSource": "robomaker",
    "EventName": "ListWorldExportJobs",
    "Description": "Lists world export jobs"
  },
  {
    "API": "robomaker:ListWorldGenerationJobs",
    "EventSource": "robomaker",
    "EventName": "ListWorldGenerationJobs",
    "Description": "Lists world generator jobs"
  },
  {
    "API": "robomaker:ListWorldTemplates",
    "EventSource": "robomaker",
    "EventName": "ListWorldTemplates",
    "Description": "Lists world templates"
  },
  {
    "API": "robomaker:ListWorlds",
    "EventSource": "robomaker",
    "EventName": "ListWorlds",
    "Description": "Lists worlds"
  },
  {
    "API": "robomaker:RegisterRobot",
    "EventSource": "robomaker",
    "EventName": "RegisterRobot",
    "Description": "Registers a robot with a fleet"
  },
  {
    "API": "robomaker:RestartSimulationJob",
    "EventSource": "robomaker",
    "EventName": "RestartSimulationJob",
    "Description": "Restarts a running simulation job"
  },
  {
    "API": "robomaker:StartSimulationJobBatch",
    "EventSource": "robomaker",
    "EventName": "StartSimulationJobBatch",
    "Description": "Starts a new simulation job batch"
  },
  {
    "API": "robomaker:SyncDeploymentJob",
    "EventSource": "robomaker",
    "EventName": "SyncDeploymentJob",
    "Description": "Syncrhonizes robots in a fleet to the latest deployment"
  },
  {
    "API": "robomaker:TagResource",
    "EventSource": "robomaker",
    "EventName": "TagResource",
    "Description": "Adds or edits tags for a AWS RoboMaker resource"
  },
  {
    "API": "robomaker:UntagResource",
    "EventSource": "robomaker",
    "EventName": "UntagResource",
    "Description": "Removes the specified tags from the specified AWS RoboMaker resource"
  },
  {
    "API": "robomaker:UpdateRobotApplication",
    "EventSource": "robomaker",
    "EventName": "UpdateRobotApplication",
    "Description": "Updates a robot application"
  },
  {
    "API": "robomaker:UpdateSimulationApplication",
    "EventSource": "robomaker",
    "EventName": "UpdateSimulationApplication",
    "Description": "Updates a simulation application"
  },
  {
    "API": "robomaker:UpdateWorldTemplate",
    "EventSource": "robomaker",
    "EventName": "UpdateWorldTemplate",
    "Description": "Updates a world template"
  },
  {
    "API": "rolesanywhere:CreateProfile",
    "EventSource": "rolesanywhere",
    "EventName": "CreateProfile",
    "Description": "Creates a *profile*, a list of the roles that Roles Anywhere service is trusted to assume"
  },
  {
    "API": "rolesanywhere:CreateTrustAnchor",
    "EventSource": "rolesanywhere",
    "EventName": "CreateTrustAnchor",
    "Description": "Creates a trust anchor to establish trust between IAM Roles Anywhere and your certificate authority (CA)"
  },
  {
    "API": "rolesanywhere:DeleteAttributeMapping",
    "EventSource": "rolesanywhere",
    "EventName": "DeleteAttributeMapping",
    "Description": "Delete an entry from the attribute mapping rules enforced by a given profile"
  },
  {
    "API": "rolesanywhere:DeleteCrl",
    "EventSource": "rolesanywhere",
    "EventName": "DeleteCrl",
    "Description": "Deletes a certificate revocation list (CRL)"
  },
  {
    "API": "rolesanywhere:DeleteProfile",
    "EventSource": "rolesanywhere",
    "EventName": "DeleteProfile",
    "Description": "Deletes a profile"
  },
  {
    "API": "rolesanywhere:DeleteTrustAnchor",
    "EventSource": "rolesanywhere",
    "EventName": "DeleteTrustAnchor",
    "Description": "Deletes a trust anchor"
  },
  {
    "API": "rolesanywhere:DisableCrl",
    "EventSource": "rolesanywhere",
    "EventName": "DisableCrl",
    "Description": "Disables a certificate revocation list (CRL)"
  },
  {
    "API": "rolesanywhere:DisableProfile",
    "EventSource": "rolesanywhere",
    "EventName": "DisableProfile",
    "Description": "Disables a profile"
  },
  {
    "API": "rolesanywhere:DisableTrustAnchor",
    "EventSource": "rolesanywhere",
    "EventName": "DisableTrustAnchor",
    "Description": "Disables a trust anchor"
  },
  {
    "API": "rolesanywhere:EnableCrl",
    "EventSource": "rolesanywhere",
    "EventName": "EnableCrl",
    "Description": "Enables a certificate revocation list (CRL)"
  },
  {
    "API": "rolesanywhere:EnableProfile",
    "EventSource": "rolesanywhere",
    "EventName": "EnableProfile",
    "Description": "Enables temporary credential requests for a profile"
  },
  {
    "API": "rolesanywhere:EnableTrustAnchor",
    "EventSource": "rolesanywhere",
    "EventName": "EnableTrustAnchor",
    "Description": "Enables a trust anchor"
  },
  {
    "API": "rolesanywhere:GeneratePresignedUrl",
    "EventSource": "rolesanywhere",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "rolesanywhere:GetCrl",
    "EventSource": "rolesanywhere",
    "EventName": "GetCrl",
    "Description": "Gets a certificate revocation list (CRL)"
  },
  {
    "API": "rolesanywhere:GetProfile",
    "EventSource": "rolesanywhere",
    "EventName": "GetProfile",
    "Description": "Gets a profile"
  },
  {
    "API": "rolesanywhere:GetSubject",
    "EventSource": "rolesanywhere",
    "EventName": "GetSubject",
    "Description": "Gets a *subject*, which associates a certificate identity with authentication attempts"
  },
  {
    "API": "rolesanywhere:GetTrustAnchor",
    "EventSource": "rolesanywhere",
    "EventName": "GetTrustAnchor",
    "Description": "Gets a trust anchor"
  },
  {
    "API": "rolesanywhere:ImportCrl",
    "EventSource": "rolesanywhere",
    "EventName": "ImportCrl",
    "Description": "Imports the certificate revocation list (CRL)"
  },
  {
    "API": "rolesanywhere:ListCrls",
    "EventSource": "rolesanywhere",
    "EventName": "ListCrls",
    "Description": "Lists all certificate revocation lists (CRL) in the authenticated account and Amazon Web Services Region"
  },
  {
    "API": "rolesanywhere:ListProfiles",
    "EventSource": "rolesanywhere",
    "EventName": "ListProfiles",
    "Description": "Lists all profiles in the authenticated account and Amazon Web Services Region"
  },
  {
    "API": "rolesanywhere:ListSubjects",
    "EventSource": "rolesanywhere",
    "EventName": "ListSubjects",
    "Description": "Lists the subjects in the authenticated account and Amazon Web Services Region"
  },
  {
    "API": "rolesanywhere:ListTagsForResource",
    "EventSource": "rolesanywhere",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags attached to the resource"
  },
  {
    "API": "rolesanywhere:ListTrustAnchors",
    "EventSource": "rolesanywhere",
    "EventName": "ListTrustAnchors",
    "Description": "Lists the trust anchors in the authenticated account and Amazon Web Services Region"
  },
  {
    "API": "rolesanywhere:PutAttributeMapping",
    "EventSource": "rolesanywhere",
    "EventName": "PutAttributeMapping",
    "Description": "Put an entry in the attribute mapping rules that will be enforced by a given profile"
  },
  {
    "API": "rolesanywhere:PutNotificationSettings",
    "EventSource": "rolesanywhere",
    "EventName": "PutNotificationSettings",
    "Description": "Attaches a list of *notification settings* to a trust anchor"
  },
  {
    "API": "rolesanywhere:ResetNotificationSettings",
    "EventSource": "rolesanywhere",
    "EventName": "ResetNotificationSettings",
    "Description": "Resets the *custom notification setting* to IAM Roles Anywhere default setting"
  },
  {
    "API": "rolesanywhere:TagResource",
    "EventSource": "rolesanywhere",
    "EventName": "TagResource",
    "Description": "Attaches tags to a resource"
  },
  {
    "API": "rolesanywhere:UntagResource",
    "EventSource": "rolesanywhere",
    "EventName": "UntagResource",
    "Description": "Removes tags from the resource"
  },
  {
    "API": "rolesanywhere:UpdateCrl",
    "EventSource": "rolesanywhere",
    "EventName": "UpdateCrl",
    "Description": "Updates the certificate revocation list (CRL)"
  },
  {
    "API": "rolesanywhere:UpdateProfile",
    "EventSource": "rolesanywhere",
    "EventName": "UpdateProfile",
    "Description": "Updates a *profile*, a list of the roles that IAM Roles Anywhere service is trusted to assume"
  },
  {
    "API": "rolesanywhere:UpdateTrustAnchor",
    "EventSource": "rolesanywhere",
    "EventName": "UpdateTrustAnchor",
    "Description": "Updates a trust anchor"
  },
  {
    "API": "route53:ActivateKeySigningKey",
    "EventSource": "route53",
    "EventName": "ActivateKeySigningKey",
    "Description": "Activates a key-signing key (KSK) so that it can be used for signing by DNSSEC"
  },
  {
    "API": "route53:AssociateVpcWithHostedZone",
    "EventSource": "route53",
    "EventName": "AssociateVpcWithHostedZone",
    "Description": "Associates an Amazon VPC with a private hosted zone"
  },
  {
    "API": "route53:ChangeCidrCollection",
    "EventSource": "route53",
    "EventName": "ChangeCidrCollection",
    "Description": "Creates, changes, or deletes CIDR blocks within a collection"
  },
  {
    "API": "route53:ChangeResourceRecordSets",
    "EventSource": "route53",
    "EventName": "ChangeResourceRecordSets",
    "Description": "Creates, changes, or deletes a resource record set, which contains authoritative DNS information for a specified domain name or subdomain name"
  },
  {
    "API": "route53:ChangeTagsForResource",
    "EventSource": "route53",
    "EventName": "ChangeTagsForResource",
    "Description": "Adds, edits, or deletes tags for a health check or a hosted zone"
  },
  {
    "API": "route53:CreateCidrCollection",
    "EventSource": "route53",
    "EventName": "CreateCidrCollection",
    "Description": "Creates a CIDR collection in the current Amazon Web Services account"
  },
  {
    "API": "route53:CreateHealthCheck",
    "EventSource": "route53",
    "EventName": "CreateHealthCheck",
    "Description": "Creates a new health check"
  },
  {
    "API": "route53:CreateHostedZone",
    "EventSource": "route53",
    "EventName": "CreateHostedZone",
    "Description": "Creates a new public or private hosted zone"
  },
  {
    "API": "route53:CreateKeySigningKey",
    "EventSource": "route53",
    "EventName": "CreateKeySigningKey",
    "Description": "Creates a new key-signing key (KSK) associated with a hosted zone"
  },
  {
    "API": "route53:CreateQueryLoggingConfig",
    "EventSource": "route53",
    "EventName": "CreateQueryLoggingConfig",
    "Description": "Creates a configuration for DNS query logging"
  },
  {
    "API": "route53:CreateReusableDelegationSet",
    "EventSource": "route53",
    "EventName": "CreateReusableDelegationSet",
    "Description": "Creates a delegation set (a group of four name servers) that can be reused by multiple hosted zones that were created by the same Amazon Web Services account"
  },
  {
    "API": "route53:CreateTrafficPolicy",
    "EventSource": "route53",
    "EventName": "CreateTrafficPolicy",
    "Description": "Creates a traffic policy, which you use to create multiple DNS resource record sets for one domain name (such as example"
  },
  {
    "API": "route53:CreateTrafficPolicyInstance",
    "EventSource": "route53",
    "EventName": "CreateTrafficPolicyInstance",
    "Description": "Creates resource record sets in a specified hosted zone based on the settings in a specified traffic policy version"
  },
  {
    "API": "route53:CreateTrafficPolicyVersion",
    "EventSource": "route53",
    "EventName": "CreateTrafficPolicyVersion",
    "Description": "Creates a new version of an existing traffic policy"
  },
  {
    "API": "route53:CreateVpcAssociationAuthorization",
    "EventSource": "route53",
    "EventName": "CreateVpcAssociationAuthorization",
    "Description": "Authorizes the Amazon Web Services account that created a specified VPC to submit an ``AssociateVPCWithHostedZone`` request to associate the VPC with a specified hosted zone that was created by a different account"
  },
  {
    "API": "route53:DeactivateKeySigningKey",
    "EventSource": "route53",
    "EventName": "DeactivateKeySigningKey",
    "Description": "Deactivates a key-signing key (KSK) so that it will not be used for signing by DNSSEC"
  },
  {
    "API": "route53:DeleteCidrCollection",
    "EventSource": "route53",
    "EventName": "DeleteCidrCollection",
    "Description": "Deletes a CIDR collection in the current Amazon Web Services account"
  },
  {
    "API": "route53:DeleteHealthCheck",
    "EventSource": "route53",
    "EventName": "DeleteHealthCheck",
    "Description": "Deletes a health check"
  },
  {
    "API": "route53:DeleteHostedZone",
    "EventSource": "route53",
    "EventName": "DeleteHostedZone",
    "Description": "Deletes a hosted zone"
  },
  {
    "API": "route53:DeleteKeySigningKey",
    "EventSource": "route53",
    "EventName": "DeleteKeySigningKey",
    "Description": "Deletes a key-signing key (KSK)"
  },
  {
    "API": "route53:DeleteQueryLoggingConfig",
    "EventSource": "route53",
    "EventName": "DeleteQueryLoggingConfig",
    "Description": "Deletes a configuration for DNS query logging"
  },
  {
    "API": "route53:DeleteReusableDelegationSet",
    "EventSource": "route53",
    "EventName": "DeleteReusableDelegationSet",
    "Description": "Deletes a reusable delegation set"
  },
  {
    "API": "route53:DeleteTrafficPolicy",
    "EventSource": "route53",
    "EventName": "DeleteTrafficPolicy",
    "Description": "Deletes a traffic policy"
  },
  {
    "API": "route53:DeleteTrafficPolicyInstance",
    "EventSource": "route53",
    "EventName": "DeleteTrafficPolicyInstance",
    "Description": "Deletes a traffic policy instance and all of the resource record sets that Amazon Route 53 created when you created the instance"
  },
  {
    "API": "route53:DeleteVpcAssociationAuthorization",
    "EventSource": "route53",
    "EventName": "DeleteVpcAssociationAuthorization",
    "Description": "Removes authorization to submit an ``AssociateVPCWithHostedZone`` request to associate a specified VPC with a hosted zone that was created by a different account"
  },
  {
    "API": "route53:DisableHostedZoneDnssec",
    "EventSource": "route53",
    "EventName": "DisableHostedZoneDnssec",
    "Description": "Disables DNSSEC signing in a specific hosted zone"
  },
  {
    "API": "route53:DisassociateVpcFromHostedZone",
    "EventSource": "route53",
    "EventName": "DisassociateVpcFromHostedZone",
    "Description": "Disassociates an Amazon Virtual Private Cloud (Amazon VPC) from an Amazon Route 53 private hosted zone"
  },
  {
    "API": "route53:EnableHostedZoneDnssec",
    "EventSource": "route53",
    "EventName": "EnableHostedZoneDnssec",
    "Description": "Enables DNSSEC signing in a specific hosted zone"
  },
  {
    "API": "route53:GeneratePresignedUrl",
    "EventSource": "route53",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "route53:GetAccountLimit",
    "EventSource": "route53",
    "EventName": "GetAccountLimit",
    "Description": "Gets the specified limit for the current account, for example, the maximum number of health checks that you can create using the account"
  },
  {
    "API": "route53:GetChange",
    "EventSource": "route53",
    "EventName": "GetChange",
    "Description": "Returns the current status of a change batch request"
  },
  {
    "API": "route53:GetCheckerIpRanges",
    "EventSource": "route53",
    "EventName": "GetCheckerIpRanges",
    "Description": "Route 53 does not perform authorization for this API because it retrieves information that is already available to the public"
  },
  {
    "API": "route53:GetDnssec",
    "EventSource": "route53",
    "EventName": "GetDnssec",
    "Description": "Returns information about DNSSEC for a specific hosted zone, including the key-signing keys (KSKs) in the hosted zone"
  },
  {
    "API": "route53:GetGeoLocation",
    "EventSource": "route53",
    "EventName": "GetGeoLocation",
    "Description": "Gets information about whether a specified geographic location is supported for Amazon Route 53 geolocation resource record sets"
  },
  {
    "API": "route53:GetHealthCheck",
    "EventSource": "route53",
    "EventName": "GetHealthCheck",
    "Description": "Gets information about a specified health check"
  },
  {
    "API": "route53:GetHealthCheckCount",
    "EventSource": "route53",
    "EventName": "GetHealthCheckCount",
    "Description": "Retrieves the number of health checks that are associated with the current Amazon Web Services account"
  },
  {
    "API": "route53:GetHealthCheckLastFailureReason",
    "EventSource": "route53",
    "EventName": "GetHealthCheckLastFailureReason",
    "Description": "Gets the reason that a specified health check failed most recently"
  },
  {
    "API": "route53:GetHealthCheckStatus",
    "EventSource": "route53",
    "EventName": "GetHealthCheckStatus",
    "Description": "Gets status of a specified health check"
  },
  {
    "API": "route53:GetHostedZone",
    "EventSource": "route53",
    "EventName": "GetHostedZone",
    "Description": "Gets information about a specified hosted zone including the four name servers assigned to the hosted zone"
  },
  {
    "API": "route53:GetHostedZoneCount",
    "EventSource": "route53",
    "EventName": "GetHostedZoneCount",
    "Description": "Retrieves the number of hosted zones that are associated with the current Amazon Web Services account"
  },
  {
    "API": "route53:GetHostedZoneLimit",
    "EventSource": "route53",
    "EventName": "GetHostedZoneLimit",
    "Description": "Gets the specified limit for a specified hosted zone, for example, the maximum number of records that you can create in the hosted zone"
  },
  {
    "API": "route53:GetQueryLoggingConfig",
    "EventSource": "route53",
    "EventName": "GetQueryLoggingConfig",
    "Description": "Gets information about a specified configuration for DNS query logging"
  },
  {
    "API": "route53:GetReusableDelegationSet",
    "EventSource": "route53",
    "EventName": "GetReusableDelegationSet",
    "Description": "Retrieves information about a specified reusable delegation set, including the four name servers that are assigned to the delegation set"
  },
  {
    "API": "route53:GetReusableDelegationSetLimit",
    "EventSource": "route53",
    "EventName": "GetReusableDelegationSetLimit",
    "Description": "Gets the maximum number of hosted zones that you can associate with the specified reusable delegation set"
  },
  {
    "API": "route53:GetTrafficPolicy",
    "EventSource": "route53",
    "EventName": "GetTrafficPolicy",
    "Description": "Gets information about a specific traffic policy version"
  },
  {
    "API": "route53:GetTrafficPolicyInstance",
    "EventSource": "route53",
    "EventName": "GetTrafficPolicyInstance",
    "Description": "Gets information about a specified traffic policy instance"
  },
  {
    "API": "route53:GetTrafficPolicyInstanceCount",
    "EventSource": "route53",
    "EventName": "GetTrafficPolicyInstanceCount",
    "Description": "Gets the number of traffic policy instances that are associated with the current Amazon Web Services account"
  },
  {
    "API": "route53:ListCidrBlocks",
    "EventSource": "route53",
    "EventName": "ListCidrBlocks",
    "Description": "Returns a paginated list of location objects and their CIDR blocks"
  },
  {
    "API": "route53:ListCidrCollections",
    "EventSource": "route53",
    "EventName": "ListCidrCollections",
    "Description": "Returns a paginated list of CIDR collections in the Amazon Web Services account (metadata only)"
  },
  {
    "API": "route53:ListCidrLocations",
    "EventSource": "route53",
    "EventName": "ListCidrLocations",
    "Description": "Returns a paginated list of CIDR locations for the given collection (metadata only, does not include CIDR blocks)"
  },
  {
    "API": "route53:ListGeoLocations",
    "EventSource": "route53",
    "EventName": "ListGeoLocations",
    "Description": "Retrieves a list of supported geographic locations"
  },
  {
    "API": "route53:ListHealthChecks",
    "EventSource": "route53",
    "EventName": "ListHealthChecks",
    "Description": "Retrieve a list of the health checks that are associated with the current Amazon Web Services account"
  },
  {
    "API": "route53:ListHostedZones",
    "EventSource": "route53",
    "EventName": "ListHostedZones",
    "Description": "Retrieves a list of the public and private hosted zones that are associated with the current Amazon Web Services account"
  },
  {
    "API": "route53:ListHostedZonesByName",
    "EventSource": "route53",
    "EventName": "ListHostedZonesByName",
    "Description": "Retrieves a list of your hosted zones in lexicographic order"
  },
  {
    "API": "route53:ListHostedZonesByVpc",
    "EventSource": "route53",
    "EventName": "ListHostedZonesByVpc",
    "Description": "Lists all the private hosted zones that a specified VPC is associated with, regardless of which Amazon Web Services account or Amazon Web Services service owns the hosted zones"
  },
  {
    "API": "route53:ListQueryLoggingConfigs",
    "EventSource": "route53",
    "EventName": "ListQueryLoggingConfigs",
    "Description": "Lists the configurations for DNS query logging that are associated with the current Amazon Web Services account or the configuration that is associated with a specified hosted zone"
  },
  {
    "API": "route53:ListResourceRecordSets",
    "EventSource": "route53",
    "EventName": "ListResourceRecordSets",
    "Description": "Lists the resource record sets in a specified hosted zone"
  },
  {
    "API": "route53:ListReusableDelegationSets",
    "EventSource": "route53",
    "EventName": "ListReusableDelegationSets",
    "Description": "Retrieves a list of the reusable delegation sets that are associated with the current Amazon Web Services account"
  },
  {
    "API": "route53:ListTagsForResource",
    "EventSource": "route53",
    "EventName": "ListTagsForResource",
    "Description": "Lists tags for one health check or hosted zone"
  },
  {
    "API": "route53:ListTagsForResources",
    "EventSource": "route53",
    "EventName": "ListTagsForResources",
    "Description": "Lists tags for up to 10 health checks or hosted zones"
  },
  {
    "API": "route53:ListTrafficPolicies",
    "EventSource": "route53",
    "EventName": "ListTrafficPolicies",
    "Description": "Gets information about the latest version for every traffic policy that is associated with the current Amazon Web Services account"
  },
  {
    "API": "route53:ListTrafficPolicyInstances",
    "EventSource": "route53",
    "EventName": "ListTrafficPolicyInstances",
    "Description": "Gets information about the traffic policy instances that you created by using the current Amazon Web Services account"
  },
  {
    "API": "route53:ListTrafficPolicyInstancesByHostedZone",
    "EventSource": "route53",
    "EventName": "ListTrafficPolicyInstancesByHostedZone",
    "Description": "Gets information about the traffic policy instances that you created in a specified hosted zone"
  },
  {
    "API": "route53:ListTrafficPolicyInstancesByPolicy",
    "EventSource": "route53",
    "EventName": "ListTrafficPolicyInstancesByPolicy",
    "Description": "Gets information about the traffic policy instances that you created by using a specify traffic policy version"
  },
  {
    "API": "route53:ListTrafficPolicyVersions",
    "EventSource": "route53",
    "EventName": "ListTrafficPolicyVersions",
    "Description": "Gets information about all of the versions for a specified traffic policy"
  },
  {
    "API": "route53:ListVpcAssociationAuthorizations",
    "EventSource": "route53",
    "EventName": "ListVpcAssociationAuthorizations",
    "Description": "Gets a list of the VPCs that were created by other accounts and that can be associated with a specified hosted zone because you've submitted one or more ``CreateVPCAssociationAuthorization`` requests"
  },
  {
    "API": "route53:TestDnsAnswer",
    "EventSource": "route53",
    "EventName": "TestDnsAnswer",
    "Description": "Gets the value that Amazon Route 53 returns in response to a DNS request for a specified record name and type"
  },
  {
    "API": "route53:UpdateHealthCheck",
    "EventSource": "route53",
    "EventName": "UpdateHealthCheck",
    "Description": "Updates an existing health check"
  },
  {
    "API": "route53:UpdateHostedZoneComment",
    "EventSource": "route53",
    "EventName": "UpdateHostedZoneComment",
    "Description": "Updates the comment for a specified hosted zone"
  },
  {
    "API": "route53:UpdateTrafficPolicyComment",
    "EventSource": "route53",
    "EventName": "UpdateTrafficPolicyComment",
    "Description": "Updates the comment for a specified traffic policy version"
  },
  {
    "API": "route53:UpdateTrafficPolicyInstance",
    "EventSource": "route53",
    "EventName": "UpdateTrafficPolicyInstance",
    "Description": ""
  },
  {
    "API": "route53-recovery-cluster:GeneratePresignedUrl",
    "EventSource": "route53-recovery-cluster",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "route53-recovery-cluster:GetRoutingControlState",
    "EventSource": "route53-recovery-cluster",
    "EventName": "GetRoutingControlState",
    "Description": "Get the state for a routing control"
  },
  {
    "API": "route53-recovery-cluster:ListRoutingControls",
    "EventSource": "route53-recovery-cluster",
    "EventName": "ListRoutingControls",
    "Description": "List routing control names and Amazon Resource Names (ARNs), as well as the routing control state for each routing control, along with the control panel name and control panel ARN for the routing controls"
  },
  {
    "API": "route53-recovery-cluster:UpdateRoutingControlState",
    "EventSource": "route53-recovery-cluster",
    "EventName": "UpdateRoutingControlState",
    "Description": "Set the state of the routing control to reroute traffic"
  },
  {
    "API": "route53-recovery-cluster:UpdateRoutingControlStates",
    "EventSource": "route53-recovery-cluster",
    "EventName": "UpdateRoutingControlStates",
    "Description": "Set multiple routing control states"
  },
  {
    "API": "route53-recovery-control-config:CreateCluster",
    "EventSource": "route53-recovery-control-config",
    "EventName": "CreateCluster",
    "Description": "Create a new cluster"
  },
  {
    "API": "route53-recovery-control-config:CreateControlPanel",
    "EventSource": "route53-recovery-control-config",
    "EventName": "CreateControlPanel",
    "Description": "Creates a new control panel"
  },
  {
    "API": "route53-recovery-control-config:CreateRoutingControl",
    "EventSource": "route53-recovery-control-config",
    "EventName": "CreateRoutingControl",
    "Description": "Creates a new routing control"
  },
  {
    "API": "route53-recovery-control-config:CreateSafetyRule",
    "EventSource": "route53-recovery-control-config",
    "EventName": "CreateSafetyRule",
    "Description": "Creates a safety rule in a control panel"
  },
  {
    "API": "route53-recovery-control-config:DeleteCluster",
    "EventSource": "route53-recovery-control-config",
    "EventName": "DeleteCluster",
    "Description": "Delete a cluster"
  },
  {
    "API": "route53-recovery-control-config:DeleteControlPanel",
    "EventSource": "route53-recovery-control-config",
    "EventName": "DeleteControlPanel",
    "Description": "Deletes a control panel"
  },
  {
    "API": "route53-recovery-control-config:DeleteRoutingControl",
    "EventSource": "route53-recovery-control-config",
    "EventName": "DeleteRoutingControl",
    "Description": "Deletes a routing control"
  },
  {
    "API": "route53-recovery-control-config:DeleteSafetyRule",
    "EventSource": "route53-recovery-control-config",
    "EventName": "DeleteSafetyRule",
    "Description": "Deletes a safety rule"
  },
  {
    "API": "route53-recovery-control-config:DescribeCluster",
    "EventSource": "route53-recovery-control-config",
    "EventName": "DescribeCluster",
    "Description": "Display the details about a cluster"
  },
  {
    "API": "route53-recovery-control-config:DescribeControlPanel",
    "EventSource": "route53-recovery-control-config",
    "EventName": "DescribeControlPanel",
    "Description": "Displays details about a control panel"
  },
  {
    "API": "route53-recovery-control-config:DescribeRoutingControl",
    "EventSource": "route53-recovery-control-config",
    "EventName": "DescribeRoutingControl",
    "Description": "Displays details about a routing control"
  },
  {
    "API": "route53-recovery-control-config:DescribeSafetyRule",
    "EventSource": "route53-recovery-control-config",
    "EventName": "DescribeSafetyRule",
    "Description": "Returns information about a safety rule"
  },
  {
    "API": "route53-recovery-control-config:GeneratePresignedUrl",
    "EventSource": "route53-recovery-control-config",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "route53-recovery-control-config:GetResourcePolicy",
    "EventSource": "route53-recovery-control-config",
    "EventName": "GetResourcePolicy",
    "Description": "Get information about the resource policy for a cluster"
  },
  {
    "API": "route53-recovery-control-config:ListAssociatedRoute53HealthChecks",
    "EventSource": "route53-recovery-control-config",
    "EventName": "ListAssociatedRoute53HealthChecks",
    "Description": "Returns an array of all Amazon Route 53 health checks associated with a specific routing control"
  },
  {
    "API": "route53-recovery-control-config:ListClusters",
    "EventSource": "route53-recovery-control-config",
    "EventName": "ListClusters",
    "Description": "Returns an array of all the clusters in an account"
  },
  {
    "API": "route53-recovery-control-config:ListControlPanels",
    "EventSource": "route53-recovery-control-config",
    "EventName": "ListControlPanels",
    "Description": "Returns an array of control panels in an account or in a cluster"
  },
  {
    "API": "route53-recovery-control-config:ListRoutingControls",
    "EventSource": "route53-recovery-control-config",
    "EventName": "ListRoutingControls",
    "Description": "Returns an array of routing controls for a control panel"
  },
  {
    "API": "route53-recovery-control-config:ListSafetyRules",
    "EventSource": "route53-recovery-control-config",
    "EventName": "ListSafetyRules",
    "Description": "List the safety rules (the assertion rules and gating rules) that you've defined for the routing controls in a control panel"
  },
  {
    "API": "route53-recovery-control-config:ListTagsForResource",
    "EventSource": "route53-recovery-control-config",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags for a resource"
  },
  {
    "API": "route53-recovery-control-config:TagResource",
    "EventSource": "route53-recovery-control-config",
    "EventName": "TagResource",
    "Description": "Adds a tag to a resource"
  },
  {
    "API": "route53-recovery-control-config:UntagResource",
    "EventSource": "route53-recovery-control-config",
    "EventName": "UntagResource",
    "Description": "Removes a tag from a resource"
  },
  {
    "API": "route53-recovery-control-config:UpdateControlPanel",
    "EventSource": "route53-recovery-control-config",
    "EventName": "UpdateControlPanel",
    "Description": "Updates a control panel"
  },
  {
    "API": "route53-recovery-control-config:UpdateRoutingControl",
    "EventSource": "route53-recovery-control-config",
    "EventName": "UpdateRoutingControl",
    "Description": "Updates a routing control"
  },
  {
    "API": "route53-recovery-control-config:UpdateSafetyRule",
    "EventSource": "route53-recovery-control-config",
    "EventName": "UpdateSafetyRule",
    "Description": "Update a safety rule (an assertion rule or gating rule)"
  },
  {
    "API": "route53-recovery-readiness:CreateCell",
    "EventSource": "route53-recovery-readiness",
    "EventName": "CreateCell",
    "Description": "Creates a cell in an account"
  },
  {
    "API": "route53-recovery-readiness:CreateCrossAccountAuthorization",
    "EventSource": "route53-recovery-readiness",
    "EventName": "CreateCrossAccountAuthorization",
    "Description": "Creates a cross-account readiness authorization"
  },
  {
    "API": "route53-recovery-readiness:CreateReadinessCheck",
    "EventSource": "route53-recovery-readiness",
    "EventName": "CreateReadinessCheck",
    "Description": "Creates a readiness check in an account"
  },
  {
    "API": "route53-recovery-readiness:CreateRecoveryGroup",
    "EventSource": "route53-recovery-readiness",
    "EventName": "CreateRecoveryGroup",
    "Description": "Creates a recovery group in an account"
  },
  {
    "API": "route53-recovery-readiness:CreateResourceSet",
    "EventSource": "route53-recovery-readiness",
    "EventName": "CreateResourceSet",
    "Description": "Creates a resource set"
  },
  {
    "API": "route53-recovery-readiness:DeleteCell",
    "EventSource": "route53-recovery-readiness",
    "EventName": "DeleteCell",
    "Description": "Delete a cell"
  },
  {
    "API": "route53-recovery-readiness:DeleteCrossAccountAuthorization",
    "EventSource": "route53-recovery-readiness",
    "EventName": "DeleteCrossAccountAuthorization",
    "Description": "Deletes cross account readiness authorization"
  },
  {
    "API": "route53-recovery-readiness:DeleteReadinessCheck",
    "EventSource": "route53-recovery-readiness",
    "EventName": "DeleteReadinessCheck",
    "Description": "Deletes a readiness check"
  },
  {
    "API": "route53-recovery-readiness:DeleteRecoveryGroup",
    "EventSource": "route53-recovery-readiness",
    "EventName": "DeleteRecoveryGroup",
    "Description": "Deletes a recovery group"
  },
  {
    "API": "route53-recovery-readiness:DeleteResourceSet",
    "EventSource": "route53-recovery-readiness",
    "EventName": "DeleteResourceSet",
    "Description": "Deletes a resource set"
  },
  {
    "API": "route53-recovery-readiness:GeneratePresignedUrl",
    "EventSource": "route53-recovery-readiness",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "route53-recovery-readiness:GetArchitectureRecommendations",
    "EventSource": "route53-recovery-readiness",
    "EventName": "GetArchitectureRecommendations",
    "Description": "Gets recommendations about architecture designs for improving resiliency for an application, based on a recovery group"
  },
  {
    "API": "route53-recovery-readiness:GetCell",
    "EventSource": "route53-recovery-readiness",
    "EventName": "GetCell",
    "Description": "Gets information about a cell including cell name, cell Amazon Resource Name (ARN), ARNs of nested cells for this cell, and a list of those cell ARNs with their associated recovery group ARNs"
  },
  {
    "API": "route53-recovery-readiness:GetCellReadinessSummary",
    "EventSource": "route53-recovery-readiness",
    "EventName": "GetCellReadinessSummary",
    "Description": "Gets readiness for a cell"
  },
  {
    "API": "route53-recovery-readiness:GetReadinessCheck",
    "EventSource": "route53-recovery-readiness",
    "EventName": "GetReadinessCheck",
    "Description": "Gets details about a readiness check"
  },
  {
    "API": "route53-recovery-readiness:GetReadinessCheckResourceStatus",
    "EventSource": "route53-recovery-readiness",
    "EventName": "GetReadinessCheckResourceStatus",
    "Description": "Gets individual readiness status for a readiness check"
  },
  {
    "API": "route53-recovery-readiness:GetReadinessCheckStatus",
    "EventSource": "route53-recovery-readiness",
    "EventName": "GetReadinessCheckStatus",
    "Description": "Gets the readiness status for an individual readiness check"
  },
  {
    "API": "route53-recovery-readiness:GetRecoveryGroup",
    "EventSource": "route53-recovery-readiness",
    "EventName": "GetRecoveryGroup",
    "Description": "Gets details about a recovery group, including a list of the cells that are included in it"
  },
  {
    "API": "route53-recovery-readiness:GetRecoveryGroupReadinessSummary",
    "EventSource": "route53-recovery-readiness",
    "EventName": "GetRecoveryGroupReadinessSummary",
    "Description": "Displays a summary of information about a recovery group's readiness status"
  },
  {
    "API": "route53-recovery-readiness:GetResourceSet",
    "EventSource": "route53-recovery-readiness",
    "EventName": "GetResourceSet",
    "Description": "Displays the details about a resource set, including a list of the resources in the set"
  },
  {
    "API": "route53-recovery-readiness:ListCells",
    "EventSource": "route53-recovery-readiness",
    "EventName": "ListCells",
    "Description": "Lists the cells for an account"
  },
  {
    "API": "route53-recovery-readiness:ListCrossAccountAuthorizations",
    "EventSource": "route53-recovery-readiness",
    "EventName": "ListCrossAccountAuthorizations",
    "Description": "Lists the cross-account readiness authorizations that are in place for an account"
  },
  {
    "API": "route53-recovery-readiness:ListReadinessChecks",
    "EventSource": "route53-recovery-readiness",
    "EventName": "ListReadinessChecks",
    "Description": "Lists the readiness checks for an account"
  },
  {
    "API": "route53-recovery-readiness:ListRecoveryGroups",
    "EventSource": "route53-recovery-readiness",
    "EventName": "ListRecoveryGroups",
    "Description": "Lists the recovery groups in an account"
  },
  {
    "API": "route53-recovery-readiness:ListResourceSets",
    "EventSource": "route53-recovery-readiness",
    "EventName": "ListResourceSets",
    "Description": "Lists the resource sets in an account"
  },
  {
    "API": "route53-recovery-readiness:ListRules",
    "EventSource": "route53-recovery-readiness",
    "EventName": "ListRules",
    "Description": "Lists all readiness rules, or lists the readiness rules for a specific resource type"
  },
  {
    "API": "route53-recovery-readiness:ListTagsForResources",
    "EventSource": "route53-recovery-readiness",
    "EventName": "ListTagsForResources",
    "Description": "Lists the tags for a resource"
  },
  {
    "API": "route53-recovery-readiness:TagResource",
    "EventSource": "route53-recovery-readiness",
    "EventName": "TagResource",
    "Description": "Adds a tag to a resource"
  },
  {
    "API": "route53-recovery-readiness:UntagResource",
    "EventSource": "route53-recovery-readiness",
    "EventName": "UntagResource",
    "Description": "Removes a tag from a resource"
  },
  {
    "API": "route53-recovery-readiness:UpdateCell",
    "EventSource": "route53-recovery-readiness",
    "EventName": "UpdateCell",
    "Description": "Updates a cell to replace the list of nested cells with a new list of nested cells"
  },
  {
    "API": "route53-recovery-readiness:UpdateReadinessCheck",
    "EventSource": "route53-recovery-readiness",
    "EventName": "UpdateReadinessCheck",
    "Description": "Updates a readiness check"
  },
  {
    "API": "route53-recovery-readiness:UpdateRecoveryGroup",
    "EventSource": "route53-recovery-readiness",
    "EventName": "UpdateRecoveryGroup",
    "Description": "Updates a recovery group"
  },
  {
    "API": "route53-recovery-readiness:UpdateResourceSet",
    "EventSource": "route53-recovery-readiness",
    "EventName": "UpdateResourceSet",
    "Description": "Updates a resource set"
  },
  {
    "API": "route53domains:AcceptDomainTransferFromAnotherAwsAccount",
    "EventSource": "route53domains",
    "EventName": "AcceptDomainTransferFromAnotherAwsAccount",
    "Description": "Accepts the transfer of a domain from another Amazon Web Services account to the currentAmazon Web Services account"
  },
  {
    "API": "route53domains:AssociateDelegationSignerToDomain",
    "EventSource": "route53domains",
    "EventName": "AssociateDelegationSignerToDomain",
    "Description": "Creates a delegation signer (DS) record in the registry zone for this domain name"
  },
  {
    "API": "route53domains:CancelDomainTransferToAnotherAwsAccount",
    "EventSource": "route53domains",
    "EventName": "CancelDomainTransferToAnotherAwsAccount",
    "Description": "Cancels the transfer of a domain from the current Amazon Web Services account to another Amazon Web Services account"
  },
  {
    "API": "route53domains:CheckDomainAvailability",
    "EventSource": "route53domains",
    "EventName": "CheckDomainAvailability",
    "Description": "This operation checks the availability of one domain name"
  },
  {
    "API": "route53domains:CheckDomainTransferability",
    "EventSource": "route53domains",
    "EventName": "CheckDomainTransferability",
    "Description": "Checks whether a domain name can be transferred to Amazon Route 53"
  },
  {
    "API": "route53domains:DeleteDomain",
    "EventSource": "route53domains",
    "EventName": "DeleteDomain",
    "Description": "This operation deletes the specified domain"
  },
  {
    "API": "route53domains:DeleteTagsForDomain",
    "EventSource": "route53domains",
    "EventName": "DeleteTagsForDomain",
    "Description": "This operation deletes the specified tags for a domain"
  },
  {
    "API": "route53domains:DisableDomainAutoRenew",
    "EventSource": "route53domains",
    "EventName": "DisableDomainAutoRenew",
    "Description": "This operation disables automatic renewal of domain registration for the specified domain"
  },
  {
    "API": "route53domains:DisableDomainTransferLock",
    "EventSource": "route53domains",
    "EventName": "DisableDomainTransferLock",
    "Description": "This operation removes the transfer lock on the domain (specifically the ``clientTransferProhibited`` status) to allow domain transfers"
  },
  {
    "API": "route53domains:DisassociateDelegationSignerFromDomain",
    "EventSource": "route53domains",
    "EventName": "DisassociateDelegationSignerFromDomain",
    "Description": "Deletes a delegation signer (DS) record in the registry zone for this domain name"
  },
  {
    "API": "route53domains:EnableDomainAutoRenew",
    "EventSource": "route53domains",
    "EventName": "EnableDomainAutoRenew",
    "Description": "This operation configures Amazon Route 53 to automatically renew the specified domain before the domain registration expires"
  },
  {
    "API": "route53domains:EnableDomainTransferLock",
    "EventSource": "route53domains",
    "EventName": "EnableDomainTransferLock",
    "Description": "This operation sets the transfer lock on the domain (specifically the ``clientTransferProhibited`` status) to prevent domain transfers"
  },
  {
    "API": "route53domains:GeneratePresignedUrl",
    "EventSource": "route53domains",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "route53domains:GetContactReachabilityStatus",
    "EventSource": "route53domains",
    "EventName": "GetContactReachabilityStatus",
    "Description": "For operations that require confirmation that the email address for the registrant contact is valid, such as registering a new domain, this operation returns information about whether the registrant contact has responded"
  },
  {
    "API": "route53domains:GetDomainDetail",
    "EventSource": "route53domains",
    "EventName": "GetDomainDetail",
    "Description": "This operation returns detailed information about a specified domain that is associated with the current Amazon Web Services account"
  },
  {
    "API": "route53domains:GetDomainSuggestions",
    "EventSource": "route53domains",
    "EventName": "GetDomainSuggestions",
    "Description": "The GetDomainSuggestions operation returns a list of suggested domain names"
  },
  {
    "API": "route53domains:GetOperationDetail",
    "EventSource": "route53domains",
    "EventName": "GetOperationDetail",
    "Description": "This operation returns the current status of an operation that is not completed"
  },
  {
    "API": "route53domains:ListDomains",
    "EventSource": "route53domains",
    "EventName": "ListDomains",
    "Description": "This operation returns all the domain names registered with Amazon Route 53 for the current Amazon Web Services account if no filtering conditions are used"
  },
  {
    "API": "route53domains:ListOperations",
    "EventSource": "route53domains",
    "EventName": "ListOperations",
    "Description": "Returns information about all of the operations that return an operation ID and that have ever been performed on domains that were registered by the current account"
  },
  {
    "API": "route53domains:ListPrices",
    "EventSource": "route53domains",
    "EventName": "ListPrices",
    "Description": "Lists the following prices for either all the TLDs supported by Route 53, or the specified TLD:"
  },
  {
    "API": "route53domains:ListTagsForDomain",
    "EventSource": "route53domains",
    "EventName": "ListTagsForDomain",
    "Description": "This operation returns all of the tags that are associated with the specified domain"
  },
  {
    "API": "route53domains:PushDomain",
    "EventSource": "route53domains",
    "EventName": "PushDomain",
    "Description": "Moves a domain from Amazon Web Services to another registrar"
  },
  {
    "API": "route53domains:RegisterDomain",
    "EventSource": "route53domains",
    "EventName": "RegisterDomain",
    "Description": "This operation registers a domain"
  },
  {
    "API": "route53domains:RejectDomainTransferFromAnotherAwsAccount",
    "EventSource": "route53domains",
    "EventName": "RejectDomainTransferFromAnotherAwsAccount",
    "Description": "Rejects the transfer of a domain from another Amazon Web Services account to the current Amazon Web Services account"
  },
  {
    "API": "route53domains:RenewDomain",
    "EventSource": "route53domains",
    "EventName": "RenewDomain",
    "Description": "This operation renews a domain for the specified number of years"
  },
  {
    "API": "route53domains:ResendContactReachabilityEmail",
    "EventSource": "route53domains",
    "EventName": "ResendContactReachabilityEmail",
    "Description": "For operations that require confirmation that the email address for the registrant contact is valid, such as registering a new domain, this operation resends the confirmation email to the current email address for the registrant contact"
  },
  {
    "API": "route53domains:ResendOperationAuthorization",
    "EventSource": "route53domains",
    "EventName": "ResendOperationAuthorization",
    "Description": "Resend the form of authorization email for this operation"
  },
  {
    "API": "route53domains:RetrieveDomainAuthCode",
    "EventSource": "route53domains",
    "EventName": "RetrieveDomainAuthCode",
    "Description": "This operation returns the authorization code for the domain"
  },
  {
    "API": "route53domains:TransferDomain",
    "EventSource": "route53domains",
    "EventName": "TransferDomain",
    "Description": "Transfers a domain from another registrar to Amazon Route 53"
  },
  {
    "API": "route53domains:TransferDomainToAnotherAwsAccount",
    "EventSource": "route53domains",
    "EventName": "TransferDomainToAnotherAwsAccount",
    "Description": "Transfers a domain from the current Amazon Web Services account to another Amazon Web Services account"
  },
  {
    "API": "route53domains:UpdateDomainContact",
    "EventSource": "route53domains",
    "EventName": "UpdateDomainContact",
    "Description": "This operation updates the contact information for a particular domain"
  },
  {
    "API": "route53domains:UpdateDomainContactPrivacy",
    "EventSource": "route53domains",
    "EventName": "UpdateDomainContactPrivacy",
    "Description": "This operation updates the specified domain contact's privacy setting"
  },
  {
    "API": "route53domains:UpdateDomainNameservers",
    "EventSource": "route53domains",
    "EventName": "UpdateDomainNameservers",
    "Description": "This operation replaces the current set of name servers for the domain with the specified set of name servers"
  },
  {
    "API": "route53domains:UpdateTagsForDomain",
    "EventSource": "route53domains",
    "EventName": "UpdateTagsForDomain",
    "Description": "This operation adds or updates tags for a specified domain"
  },
  {
    "API": "route53domains:ViewBilling",
    "EventSource": "route53domains",
    "EventName": "ViewBilling",
    "Description": "Returns all the domain-related billing records for the current Amazon Web Services account for a specified period"
  },
  {
    "API": "route53profiles:AssociateProfile",
    "EventSource": "route53profiles",
    "EventName": "AssociateProfile",
    "Description": "Associates a Route 53 Profiles profile with a VPC"
  },
  {
    "API": "route53profiles:AssociateResourceToProfile",
    "EventSource": "route53profiles",
    "EventName": "AssociateResourceToProfile",
    "Description": "Associates a DNS reource configuration to a Route 53 Profile"
  },
  {
    "API": "route53profiles:CreateProfile",
    "EventSource": "route53profiles",
    "EventName": "CreateProfile",
    "Description": "Creates an empty Route 53 Profile"
  },
  {
    "API": "route53profiles:DeleteProfile",
    "EventSource": "route53profiles",
    "EventName": "DeleteProfile",
    "Description": "Deletes the specified Route 53 Profile"
  },
  {
    "API": "route53profiles:DisassociateProfile",
    "EventSource": "route53profiles",
    "EventName": "DisassociateProfile",
    "Description": "Dissociates a specified Route 53 Profile from the specified VPC"
  },
  {
    "API": "route53profiles:DisassociateResourceFromProfile",
    "EventSource": "route53profiles",
    "EventName": "DisassociateResourceFromProfile",
    "Description": "Dissoaciated a specified resource, from the Route 53 Profile"
  },
  {
    "API": "route53profiles:GeneratePresignedUrl",
    "EventSource": "route53profiles",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "route53profiles:GetProfile",
    "EventSource": "route53profiles",
    "EventName": "GetProfile",
    "Description": "Returns information about a specified Route 53 Profile, such as whether whether the Profile is shared, and the current status of the Profile"
  },
  {
    "API": "route53profiles:GetProfileAssociation",
    "EventSource": "route53profiles",
    "EventName": "GetProfileAssociation",
    "Description": "Retrieves a Route 53 Profile association for a VPC"
  },
  {
    "API": "route53profiles:GetProfileResourceAssociation",
    "EventSource": "route53profiles",
    "EventName": "GetProfileResourceAssociation",
    "Description": "Returns information about a specified Route 53 Profile resource association"
  },
  {
    "API": "route53profiles:ListProfileAssociations",
    "EventSource": "route53profiles",
    "EventName": "ListProfileAssociations",
    "Description": "Lists all the VPCs that the specified Route 53 Profile is associated with"
  },
  {
    "API": "route53profiles:ListProfileResourceAssociations",
    "EventSource": "route53profiles",
    "EventName": "ListProfileResourceAssociations",
    "Description": "Lists all the resource associations for the specified Route 53 Profile"
  },
  {
    "API": "route53profiles:ListProfiles",
    "EventSource": "route53profiles",
    "EventName": "ListProfiles",
    "Description": "Lists all the Route 53 Profiles associated with your Amazon Web Services account"
  },
  {
    "API": "route53profiles:ListTagsForResource",
    "EventSource": "route53profiles",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags that you associated with the specified resource"
  },
  {
    "API": "route53profiles:TagResource",
    "EventSource": "route53profiles",
    "EventName": "TagResource",
    "Description": "Adds one or more tags to a specified resource"
  },
  {
    "API": "route53profiles:UntagResource",
    "EventSource": "route53profiles",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags from a specified resource"
  },
  {
    "API": "route53profiles:UpdateProfileResourceAssociation",
    "EventSource": "route53profiles",
    "EventName": "UpdateProfileResourceAssociation",
    "Description": "Updates the specified Route 53 Profile resourse association"
  },
  {
    "API": "route53resolver:AssociateFirewallRuleGroup",
    "EventSource": "route53resolver",
    "EventName": "AssociateFirewallRuleGroup",
    "Description": "Associates a  FirewallRuleGroup with a VPC, to provide DNS filtering for the VPC"
  },
  {
    "API": "route53resolver:AssociateResolverEndpointIpAddress",
    "EventSource": "route53resolver",
    "EventName": "AssociateResolverEndpointIpAddress",
    "Description": "Adds IP addresses to an inbound or an outbound Resolver endpoint"
  },
  {
    "API": "route53resolver:AssociateResolverQueryLogConfig",
    "EventSource": "route53resolver",
    "EventName": "AssociateResolverQueryLogConfig",
    "Description": "Associates an Amazon VPC with a specified query logging configuration"
  },
  {
    "API": "route53resolver:AssociateResolverRule",
    "EventSource": "route53resolver",
    "EventName": "AssociateResolverRule",
    "Description": "Associates a Resolver rule with a VPC"
  },
  {
    "API": "route53resolver:CreateFirewallDomainList",
    "EventSource": "route53resolver",
    "EventName": "CreateFirewallDomainList",
    "Description": "Creates an empty firewall domain list for use in DNS Firewall rules"
  },
  {
    "API": "route53resolver:CreateFirewallRule",
    "EventSource": "route53resolver",
    "EventName": "CreateFirewallRule",
    "Description": "Creates a single DNS Firewall rule in the specified rule group, using the specified domain list"
  },
  {
    "API": "route53resolver:CreateFirewallRuleGroup",
    "EventSource": "route53resolver",
    "EventName": "CreateFirewallRuleGroup",
    "Description": "Creates an empty DNS Firewall rule group for filtering DNS network traffic in a VPC"
  },
  {
    "API": "route53resolver:CreateOutpostResolver",
    "EventSource": "route53resolver",
    "EventName": "CreateOutpostResolver",
    "Description": "Creates a Route 53 Resolver on an Outpost"
  },
  {
    "API": "route53resolver:CreateResolverEndpoint",
    "EventSource": "route53resolver",
    "EventName": "CreateResolverEndpoint",
    "Description": "Creates a Resolver endpoint"
  },
  {
    "API": "route53resolver:CreateResolverQueryLogConfig",
    "EventSource": "route53resolver",
    "EventName": "CreateResolverQueryLogConfig",
    "Description": "Creates a Resolver query logging configuration, which defines where you want Resolver to save DNS query logs that originate in your VPCs"
  },
  {
    "API": "route53resolver:CreateResolverRule",
    "EventSource": "route53resolver",
    "EventName": "CreateResolverRule",
    "Description": "For DNS queries that originate in your VPCs, specifies which Resolver endpoint the queries pass through, one domain name that you want to forward to your network, and the IP addresses of the DNS resolvers in your network"
  },
  {
    "API": "route53resolver:DeleteFirewallDomainList",
    "EventSource": "route53resolver",
    "EventName": "DeleteFirewallDomainList",
    "Description": "Deletes the specified domain list"
  },
  {
    "API": "route53resolver:DeleteFirewallRule",
    "EventSource": "route53resolver",
    "EventName": "DeleteFirewallRule",
    "Description": "Deletes the specified firewall rule"
  },
  {
    "API": "route53resolver:DeleteFirewallRuleGroup",
    "EventSource": "route53resolver",
    "EventName": "DeleteFirewallRuleGroup",
    "Description": "Deletes the specified firewall rule group"
  },
  {
    "API": "route53resolver:DeleteOutpostResolver",
    "EventSource": "route53resolver",
    "EventName": "DeleteOutpostResolver",
    "Description": "Deletes a Resolver on the Outpost"
  },
  {
    "API": "route53resolver:DeleteResolverEndpoint",
    "EventSource": "route53resolver",
    "EventName": "DeleteResolverEndpoint",
    "Description": "Deletes a Resolver endpoint"
  },
  {
    "API": "route53resolver:DeleteResolverQueryLogConfig",
    "EventSource": "route53resolver",
    "EventName": "DeleteResolverQueryLogConfig",
    "Description": "Deletes a query logging configuration"
  },
  {
    "API": "route53resolver:DeleteResolverRule",
    "EventSource": "route53resolver",
    "EventName": "DeleteResolverRule",
    "Description": "Deletes a Resolver rule"
  },
  {
    "API": "route53resolver:DisassociateFirewallRuleGroup",
    "EventSource": "route53resolver",
    "EventName": "DisassociateFirewallRuleGroup",
    "Description": "Disassociates a  FirewallRuleGroup from a VPC, to remove DNS filtering from the VPC"
  },
  {
    "API": "route53resolver:DisassociateResolverEndpointIpAddress",
    "EventSource": "route53resolver",
    "EventName": "DisassociateResolverEndpointIpAddress",
    "Description": "Removes IP addresses from an inbound or an outbound Resolver endpoint"
  },
  {
    "API": "route53resolver:DisassociateResolverQueryLogConfig",
    "EventSource": "route53resolver",
    "EventName": "DisassociateResolverQueryLogConfig",
    "Description": "Disassociates a VPC from a query logging configuration"
  },
  {
    "API": "route53resolver:DisassociateResolverRule",
    "EventSource": "route53resolver",
    "EventName": "DisassociateResolverRule",
    "Description": "Removes the association between a specified Resolver rule and a specified VPC"
  },
  {
    "API": "route53resolver:GeneratePresignedUrl",
    "EventSource": "route53resolver",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "route53resolver:GetFirewallConfig",
    "EventSource": "route53resolver",
    "EventName": "GetFirewallConfig",
    "Description": "Retrieves the configuration of the firewall behavior provided by DNS Firewall for a single VPC from Amazon Virtual Private Cloud (Amazon VPC)"
  },
  {
    "API": "route53resolver:GetFirewallDomainList",
    "EventSource": "route53resolver",
    "EventName": "GetFirewallDomainList",
    "Description": "Retrieves the specified firewall domain list"
  },
  {
    "API": "route53resolver:GetFirewallRuleGroup",
    "EventSource": "route53resolver",
    "EventName": "GetFirewallRuleGroup",
    "Description": "Retrieves the specified firewall rule group"
  },
  {
    "API": "route53resolver:GetFirewallRuleGroupAssociation",
    "EventSource": "route53resolver",
    "EventName": "GetFirewallRuleGroupAssociation",
    "Description": "Retrieves a firewall rule group association, which enables DNS filtering for a VPC with one rule group"
  },
  {
    "API": "route53resolver:GetFirewallRuleGroupPolicy",
    "EventSource": "route53resolver",
    "EventName": "GetFirewallRuleGroupPolicy",
    "Description": "Returns the Identity and Access Management (Amazon Web Services IAM) policy for sharing the specified rule group"
  },
  {
    "API": "route53resolver:GetOutpostResolver",
    "EventSource": "route53resolver",
    "EventName": "GetOutpostResolver",
    "Description": "Gets information about a specified Resolver on the Outpost, such as its instance count and type, name, and the current status of the Resolver"
  },
  {
    "API": "route53resolver:GetResolverConfig",
    "EventSource": "route53resolver",
    "EventName": "GetResolverConfig",
    "Description": "Retrieves the behavior configuration of Route 53 Resolver behavior for a single VPC from Amazon Virtual Private Cloud"
  },
  {
    "API": "route53resolver:GetResolverDnssecConfig",
    "EventSource": "route53resolver",
    "EventName": "GetResolverDnssecConfig",
    "Description": "Gets DNSSEC validation information for a specified resource"
  },
  {
    "API": "route53resolver:GetResolverEndpoint",
    "EventSource": "route53resolver",
    "EventName": "GetResolverEndpoint",
    "Description": "Gets information about a specified Resolver endpoint, such as whether it's an inbound or an outbound Resolver endpoint, and the current status of the endpoint"
  },
  {
    "API": "route53resolver:GetResolverQueryLogConfig",
    "EventSource": "route53resolver",
    "EventName": "GetResolverQueryLogConfig",
    "Description": "Gets information about a specified Resolver query logging configuration, such as the number of VPCs that the configuration is logging queries for and the location that logs are sent to"
  },
  {
    "API": "route53resolver:GetResolverQueryLogConfigAssociation",
    "EventSource": "route53resolver",
    "EventName": "GetResolverQueryLogConfigAssociation",
    "Description": "Gets information about a specified association between a Resolver query logging configuration and an Amazon VPC"
  },
  {
    "API": "route53resolver:GetResolverQueryLogConfigPolicy",
    "EventSource": "route53resolver",
    "EventName": "GetResolverQueryLogConfigPolicy",
    "Description": "Gets information about a query logging policy"
  },
  {
    "API": "route53resolver:GetResolverRule",
    "EventSource": "route53resolver",
    "EventName": "GetResolverRule",
    "Description": "Gets information about a specified Resolver rule, such as the domain name that the rule forwards DNS queries for and the ID of the outbound Resolver endpoint that the rule is associated with"
  },
  {
    "API": "route53resolver:GetResolverRuleAssociation",
    "EventSource": "route53resolver",
    "EventName": "GetResolverRuleAssociation",
    "Description": "Gets information about an association between a specified Resolver rule and a VPC"
  },
  {
    "API": "route53resolver:GetResolverRulePolicy",
    "EventSource": "route53resolver",
    "EventName": "GetResolverRulePolicy",
    "Description": "Gets information about the Resolver rule policy for a specified rule"
  },
  {
    "API": "route53resolver:ImportFirewallDomains",
    "EventSource": "route53resolver",
    "EventName": "ImportFirewallDomains",
    "Description": "Imports domain names from a file into a domain list, for use in a DNS firewall rule group"
  },
  {
    "API": "route53resolver:ListFirewallConfigs",
    "EventSource": "route53resolver",
    "EventName": "ListFirewallConfigs",
    "Description": "Retrieves the firewall configurations that you have defined"
  },
  {
    "API": "route53resolver:ListFirewallDomainLists",
    "EventSource": "route53resolver",
    "EventName": "ListFirewallDomainLists",
    "Description": "Retrieves the firewall domain lists that you have defined"
  },
  {
    "API": "route53resolver:ListFirewallDomains",
    "EventSource": "route53resolver",
    "EventName": "ListFirewallDomains",
    "Description": "Retrieves the domains that you have defined for the specified firewall domain list"
  },
  {
    "API": "route53resolver:ListFirewallRuleGroupAssociations",
    "EventSource": "route53resolver",
    "EventName": "ListFirewallRuleGroupAssociations",
    "Description": "Retrieves the firewall rule group associations that you have defined"
  },
  {
    "API": "route53resolver:ListFirewallRuleGroups",
    "EventSource": "route53resolver",
    "EventName": "ListFirewallRuleGroups",
    "Description": "Retrieves the minimal high-level information for the rule groups that you have defined"
  },
  {
    "API": "route53resolver:ListFirewallRules",
    "EventSource": "route53resolver",
    "EventName": "ListFirewallRules",
    "Description": "Retrieves the firewall rules that you have defined for the specified firewall rule group"
  },
  {
    "API": "route53resolver:ListOutpostResolvers",
    "EventSource": "route53resolver",
    "EventName": "ListOutpostResolvers",
    "Description": "Lists all the Resolvers on Outposts that were created using the current Amazon Web Services account"
  },
  {
    "API": "route53resolver:ListResolverConfigs",
    "EventSource": "route53resolver",
    "EventName": "ListResolverConfigs",
    "Description": "Retrieves the Resolver configurations that you have defined"
  },
  {
    "API": "route53resolver:ListResolverDnssecConfigs",
    "EventSource": "route53resolver",
    "EventName": "ListResolverDnssecConfigs",
    "Description": "Lists the configurations for DNSSEC validation that are associated with the current Amazon Web Services account"
  },
  {
    "API": "route53resolver:ListResolverEndpointIpAddresses",
    "EventSource": "route53resolver",
    "EventName": "ListResolverEndpointIpAddresses",
    "Description": "Gets the IP addresses for a specified Resolver endpoint"
  },
  {
    "API": "route53resolver:ListResolverEndpoints",
    "EventSource": "route53resolver",
    "EventName": "ListResolverEndpoints",
    "Description": "Lists all the Resolver endpoints that were created using the current Amazon Web Services account"
  },
  {
    "API": "route53resolver:ListResolverQueryLogConfigAssociations",
    "EventSource": "route53resolver",
    "EventName": "ListResolverQueryLogConfigAssociations",
    "Description": "Lists information about associations between Amazon VPCs and query logging configurations"
  },
  {
    "API": "route53resolver:ListResolverQueryLogConfigs",
    "EventSource": "route53resolver",
    "EventName": "ListResolverQueryLogConfigs",
    "Description": "Lists information about the specified query logging configurations"
  },
  {
    "API": "route53resolver:ListResolverRuleAssociations",
    "EventSource": "route53resolver",
    "EventName": "ListResolverRuleAssociations",
    "Description": "Lists the associations that were created between Resolver rules and VPCs using the current Amazon Web Services account"
  },
  {
    "API": "route53resolver:ListResolverRules",
    "EventSource": "route53resolver",
    "EventName": "ListResolverRules",
    "Description": "Lists the Resolver rules that were created using the current Amazon Web Services account"
  },
  {
    "API": "route53resolver:ListTagsForResource",
    "EventSource": "route53resolver",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags that you associated with the specified resource"
  },
  {
    "API": "route53resolver:PutFirewallRuleGroupPolicy",
    "EventSource": "route53resolver",
    "EventName": "PutFirewallRuleGroupPolicy",
    "Description": "Attaches an Identity and Access Management (Amazon Web Services IAM) policy for sharing the rule group"
  },
  {
    "API": "route53resolver:PutResolverQueryLogConfigPolicy",
    "EventSource": "route53resolver",
    "EventName": "PutResolverQueryLogConfigPolicy",
    "Description": "Specifies an Amazon Web Services account that you want to share a query logging configuration with, the query logging configuration that you want to share, and the operations that you want the account to be able to perform on the configuration"
  },
  {
    "API": "route53resolver:PutResolverRulePolicy",
    "EventSource": "route53resolver",
    "EventName": "PutResolverRulePolicy",
    "Description": "Specifies an Amazon Web Services rule that you want to share with another account, the account that you want to share the rule with, and the operations that you want the account to be able to perform on the rule"
  },
  {
    "API": "route53resolver:TagResource",
    "EventSource": "route53resolver",
    "EventName": "TagResource",
    "Description": "Adds one or more tags to a specified resource"
  },
  {
    "API": "route53resolver:UntagResource",
    "EventSource": "route53resolver",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags from a specified resource"
  },
  {
    "API": "route53resolver:UpdateFirewallConfig",
    "EventSource": "route53resolver",
    "EventName": "UpdateFirewallConfig",
    "Description": "Updates the configuration of the firewall behavior provided by DNS Firewall for a single VPC from Amazon Virtual Private Cloud (Amazon VPC)"
  },
  {
    "API": "route53resolver:UpdateFirewallDomains",
    "EventSource": "route53resolver",
    "EventName": "UpdateFirewallDomains",
    "Description": "Updates the firewall domain list from an array of domain specifications"
  },
  {
    "API": "route53resolver:UpdateFirewallRule",
    "EventSource": "route53resolver",
    "EventName": "UpdateFirewallRule",
    "Description": "Updates the specified firewall rule"
  },
  {
    "API": "route53resolver:UpdateFirewallRuleGroupAssociation",
    "EventSource": "route53resolver",
    "EventName": "UpdateFirewallRuleGroupAssociation",
    "Description": "Changes the association of a  FirewallRuleGroup with a VPC"
  },
  {
    "API": "route53resolver:UpdateOutpostResolver",
    "EventSource": "route53resolver",
    "EventName": "UpdateOutpostResolver",
    "Description": "You can use ``UpdateOutpostResolver`` to update the instance count, type, or name of a Resolver on an Outpost"
  },
  {
    "API": "route53resolver:UpdateResolverConfig",
    "EventSource": "route53resolver",
    "EventName": "UpdateResolverConfig",
    "Description": "Updates the behavior configuration of Route 53 Resolver behavior for a single VPC from Amazon Virtual Private Cloud"
  },
  {
    "API": "route53resolver:UpdateResolverDnssecConfig",
    "EventSource": "route53resolver",
    "EventName": "UpdateResolverDnssecConfig",
    "Description": "Updates an existing DNSSEC validation configuration"
  },
  {
    "API": "route53resolver:UpdateResolverEndpoint",
    "EventSource": "route53resolver",
    "EventName": "UpdateResolverEndpoint",
    "Description": "Updates the name, or endpoint type for an inbound or an outbound Resolver endpoint"
  },
  {
    "API": "route53resolver:UpdateResolverRule",
    "EventSource": "route53resolver",
    "EventName": "UpdateResolverRule",
    "Description": "Updates settings for a specified Resolver rule"
  },
  {
    "API": "rum:BatchCreateRumMetricDefinitions",
    "EventSource": "rum",
    "EventName": "BatchCreateRumMetricDefinitions",
    "Description": "Specifies the extended metrics and custom metrics that you want a CloudWatch RUM app monitor to send to a destination"
  },
  {
    "API": "rum:BatchDeleteRumMetricDefinitions",
    "EventSource": "rum",
    "EventName": "BatchDeleteRumMetricDefinitions",
    "Description": "Removes the specified metrics from being sent to an extended metrics destination"
  },
  {
    "API": "rum:BatchGetRumMetricDefinitions",
    "EventSource": "rum",
    "EventName": "BatchGetRumMetricDefinitions",
    "Description": "Retrieves the list of metrics and dimensions that a RUM app monitor is sending to a single destination"
  },
  {
    "API": "rum:CreateAppMonitor",
    "EventSource": "rum",
    "EventName": "CreateAppMonitor",
    "Description": "Creates a Amazon CloudWatch RUM app monitor, which collects telemetry data from your application and sends that data to RUM"
  },
  {
    "API": "rum:DeleteAppMonitor",
    "EventSource": "rum",
    "EventName": "DeleteAppMonitor",
    "Description": "Deletes an existing app monitor"
  },
  {
    "API": "rum:DeleteRumMetricsDestination",
    "EventSource": "rum",
    "EventName": "DeleteRumMetricsDestination",
    "Description": "Deletes a destination for CloudWatch RUM extended metrics, so that the specified app monitor stops sending extended metrics to that destination"
  },
  {
    "API": "rum:GeneratePresignedUrl",
    "EventSource": "rum",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "rum:GetAppMonitor",
    "EventSource": "rum",
    "EventName": "GetAppMonitor",
    "Description": "Retrieves the complete configuration information for one app monitor"
  },
  {
    "API": "rum:GetAppMonitorData",
    "EventSource": "rum",
    "EventName": "GetAppMonitorData",
    "Description": "Retrieves the raw performance events that RUM has collected from your web application, so that you can do your own processing or analysis of this data"
  },
  {
    "API": "rum:ListAppMonitors",
    "EventSource": "rum",
    "EventName": "ListAppMonitors",
    "Description": "Returns a list of the Amazon CloudWatch RUM app monitors in the account"
  },
  {
    "API": "rum:ListRumMetricsDestinations",
    "EventSource": "rum",
    "EventName": "ListRumMetricsDestinations",
    "Description": "Returns a list of destinations that you have created to receive RUM extended metrics, for the specified app monitor"
  },
  {
    "API": "rum:ListTagsForResource",
    "EventSource": "rum",
    "EventName": "ListTagsForResource",
    "Description": "Displays the tags associated with a CloudWatch RUM resource"
  },
  {
    "API": "rum:PutRumEvents",
    "EventSource": "rum",
    "EventName": "PutRumEvents",
    "Description": "Sends telemetry events about your application performance and user behavior to CloudWatch RUM"
  },
  {
    "API": "rum:PutRumMetricsDestination",
    "EventSource": "rum",
    "EventName": "PutRumMetricsDestination",
    "Description": "Creates or updates a destination to receive extended metrics from CloudWatch RUM"
  },
  {
    "API": "rum:TagResource",
    "EventSource": "rum",
    "EventName": "TagResource",
    "Description": "Assigns one or more tags (key-value pairs) to the specified CloudWatch RUM resource"
  },
  {
    "API": "rum:UntagResource",
    "EventSource": "rum",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags from the specified resource"
  },
  {
    "API": "rum:UpdateAppMonitor",
    "EventSource": "rum",
    "EventName": "UpdateAppMonitor",
    "Description": "Updates the configuration of an existing app monitor"
  },
  {
    "API": "rum:UpdateRumMetricDefinition",
    "EventSource": "rum",
    "EventName": "UpdateRumMetricDefinition",
    "Description": "Modifies one existing metric definition for CloudWatch RUM extended metrics"
  },
  {
    "API": "s3:AbortMultipartUpload",
    "EventSource": "s3",
    "EventName": "AbortMultipartUpload",
    "Description": "This operation aborts a multipart upload"
  },
  {
    "API": "s3:CompleteMultipartUpload",
    "EventSource": "s3",
    "EventName": "CompleteMultipartUpload",
    "Description": "Completes a multipart upload by assembling previously uploaded parts"
  },
  {
    "API": "s3:CopyObject",
    "EventSource": "s3",
    "EventName": "CopyObject",
    "Description": "Creates a copy of an object that is already stored in Amazon S3"
  },
  {
    "API": "s3:CreateBucket",
    "EventSource": "s3",
    "EventName": "CreateBucket",
    "Description": ""
  },
  {
    "API": "s3:CreateMultipartUpload",
    "EventSource": "s3",
    "EventName": "CreateMultipartUpload",
    "Description": "This action initiates a multipart upload and returns an upload ID"
  },
  {
    "API": "s3:CreateSession",
    "EventSource": "s3",
    "EventName": "CreateSession",
    "Description": "Creates a session that establishes temporary security credentials to support fast authentication and authorization for the Zonal endpoint APIs on directory buckets"
  },
  {
    "API": "s3:DeleteBucket",
    "EventSource": "s3",
    "EventName": "DeleteBucket",
    "Description": "Deletes the S3 bucket"
  },
  {
    "API": "s3:DeleteBucketAnalyticsConfiguration",
    "EventSource": "s3",
    "EventName": "DeleteBucketAnalyticsConfiguration",
    "Description": ""
  },
  {
    "API": "s3:DeleteBucketCors",
    "EventSource": "s3",
    "EventName": "DeleteBucketCors",
    "Description": ""
  },
  {
    "API": "s3:DeleteBucketEncryption",
    "EventSource": "s3",
    "EventName": "DeleteBucketEncryption",
    "Description": ""
  },
  {
    "API": "s3:DeleteBucketIntelligentTieringConfiguration",
    "EventSource": "s3",
    "EventName": "DeleteBucketIntelligentTieringConfiguration",
    "Description": ""
  },
  {
    "API": "s3:DeleteBucketInventoryConfiguration",
    "EventSource": "s3",
    "EventName": "DeleteBucketInventoryConfiguration",
    "Description": ""
  },
  {
    "API": "s3:DeleteBucketLifecycle",
    "EventSource": "s3",
    "EventName": "DeleteBucketLifecycle",
    "Description": ""
  },
  {
    "API": "s3:DeleteBucketMetricsConfiguration",
    "EventSource": "s3",
    "EventName": "DeleteBucketMetricsConfiguration",
    "Description": ""
  },
  {
    "API": "s3:DeleteBucketOwnershipControls",
    "EventSource": "s3",
    "EventName": "DeleteBucketOwnershipControls",
    "Description": ""
  },
  {
    "API": "s3:DeleteBucketPolicy",
    "EventSource": "s3",
    "EventName": "DeleteBucketPolicy",
    "Description": "Deletes the policy of a specified bucket"
  },
  {
    "API": "s3:DeleteBucketReplication",
    "EventSource": "s3",
    "EventName": "DeleteBucketReplication",
    "Description": ""
  },
  {
    "API": "s3:DeleteBucketTagging",
    "EventSource": "s3",
    "EventName": "DeleteBucketTagging",
    "Description": ""
  },
  {
    "API": "s3:DeleteBucketWebsite",
    "EventSource": "s3",
    "EventName": "DeleteBucketWebsite",
    "Description": ""
  },
  {
    "API": "s3:DeleteObject",
    "EventSource": "s3",
    "EventName": "DeleteObject",
    "Description": "Removes an object from a bucket"
  },
  {
    "API": "s3:DeleteObjectTagging",
    "EventSource": "s3",
    "EventName": "DeleteObjectTagging",
    "Description": ""
  },
  {
    "API": "s3:DeleteObjects",
    "EventSource": "s3",
    "EventName": "DeleteObjects",
    "Description": "This operation enables you to delete multiple objects from a bucket using a single HTTP request"
  },
  {
    "API": "s3:DeletePublicAccessBlock",
    "EventSource": "s3",
    "EventName": "DeletePublicAccessBlock",
    "Description": ""
  },
  {
    "API": "s3:DownloadFile",
    "EventSource": "s3",
    "EventName": "DownloadFile",
    "Description": "Download an S3 object to a file"
  },
  {
    "API": "s3:DownloadFileobj",
    "EventSource": "s3",
    "EventName": "DownloadFileobj",
    "Description": "Download an object from S3 to a file-like object"
  },
  {
    "API": "s3:GeneratePresignedPost",
    "EventSource": "s3",
    "EventName": "GeneratePresignedPost",
    "Description": "Builds the url and the form fields used for a presigned s3 post"
  },
  {
    "API": "s3:GeneratePresignedUrl",
    "EventSource": "s3",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "s3:GetBucketAccelerateConfiguration",
    "EventSource": "s3",
    "EventName": "GetBucketAccelerateConfiguration",
    "Description": ""
  },
  {
    "API": "s3:GetBucketAcl",
    "EventSource": "s3",
    "EventName": "GetBucketAcl",
    "Description": ""
  },
  {
    "API": "s3:GetBucketAnalyticsConfiguration",
    "EventSource": "s3",
    "EventName": "GetBucketAnalyticsConfiguration",
    "Description": ""
  },
  {
    "API": "s3:GetBucketCors",
    "EventSource": "s3",
    "EventName": "GetBucketCors",
    "Description": ""
  },
  {
    "API": "s3:GetBucketEncryption",
    "EventSource": "s3",
    "EventName": "GetBucketEncryption",
    "Description": ""
  },
  {
    "API": "s3:GetBucketIntelligentTieringConfiguration",
    "EventSource": "s3",
    "EventName": "GetBucketIntelligentTieringConfiguration",
    "Description": ""
  },
  {
    "API": "s3:GetBucketInventoryConfiguration",
    "EventSource": "s3",
    "EventName": "GetBucketInventoryConfiguration",
    "Description": ""
  },
  {
    "API": "s3:GetBucketLifecycle",
    "EventSource": "s3",
    "EventName": "GetBucketLifecycle",
    "Description": ""
  },
  {
    "API": "s3:GetBucketLifecycleConfiguration",
    "EventSource": "s3",
    "EventName": "GetBucketLifecycleConfiguration",
    "Description": ""
  },
  {
    "API": "s3:GetBucketLocation",
    "EventSource": "s3",
    "EventName": "GetBucketLocation",
    "Description": ""
  },
  {
    "API": "s3:GetBucketLogging",
    "EventSource": "s3",
    "EventName": "GetBucketLogging",
    "Description": ""
  },
  {
    "API": "s3:GetBucketMetricsConfiguration",
    "EventSource": "s3",
    "EventName": "GetBucketMetricsConfiguration",
    "Description": ""
  },
  {
    "API": "s3:GetBucketNotification",
    "EventSource": "s3",
    "EventName": "GetBucketNotification",
    "Description": ""
  },
  {
    "API": "s3:GetBucketNotificationConfiguration",
    "EventSource": "s3",
    "EventName": "GetBucketNotificationConfiguration",
    "Description": ""
  },
  {
    "API": "s3:GetBucketOwnershipControls",
    "EventSource": "s3",
    "EventName": "GetBucketOwnershipControls",
    "Description": ""
  },
  {
    "API": "s3:GetBucketPolicy",
    "EventSource": "s3",
    "EventName": "GetBucketPolicy",
    "Description": "Returns the policy of a specified bucket"
  },
  {
    "API": "s3:GetBucketPolicyStatus",
    "EventSource": "s3",
    "EventName": "GetBucketPolicyStatus",
    "Description": ""
  },
  {
    "API": "s3:GetBucketReplication",
    "EventSource": "s3",
    "EventName": "GetBucketReplication",
    "Description": ""
  },
  {
    "API": "s3:GetBucketRequestPayment",
    "EventSource": "s3",
    "EventName": "GetBucketRequestPayment",
    "Description": ""
  },
  {
    "API": "s3:GetBucketTagging",
    "EventSource": "s3",
    "EventName": "GetBucketTagging",
    "Description": ""
  },
  {
    "API": "s3:GetBucketVersioning",
    "EventSource": "s3",
    "EventName": "GetBucketVersioning",
    "Description": ""
  },
  {
    "API": "s3:GetBucketWebsite",
    "EventSource": "s3",
    "EventName": "GetBucketWebsite",
    "Description": ""
  },
  {
    "API": "s3:GetObject",
    "EventSource": "s3",
    "EventName": "GetObject",
    "Description": "Retrieves an object from Amazon S3"
  },
  {
    "API": "s3:GetObjectAcl",
    "EventSource": "s3",
    "EventName": "GetObjectAcl",
    "Description": ""
  },
  {
    "API": "s3:GetObjectAttributes",
    "EventSource": "s3",
    "EventName": "GetObjectAttributes",
    "Description": "Retrieves all the metadata from an object without returning the object itself"
  },
  {
    "API": "s3:GetObjectLegalHold",
    "EventSource": "s3",
    "EventName": "GetObjectLegalHold",
    "Description": ""
  },
  {
    "API": "s3:GetObjectLockConfiguration",
    "EventSource": "s3",
    "EventName": "GetObjectLockConfiguration",
    "Description": ""
  },
  {
    "API": "s3:GetObjectRetention",
    "EventSource": "s3",
    "EventName": "GetObjectRetention",
    "Description": ""
  },
  {
    "API": "s3:GetObjectTagging",
    "EventSource": "s3",
    "EventName": "GetObjectTagging",
    "Description": ""
  },
  {
    "API": "s3:GetObjectTorrent",
    "EventSource": "s3",
    "EventName": "GetObjectTorrent",
    "Description": ""
  },
  {
    "API": "s3:GetPublicAccessBlock",
    "EventSource": "s3",
    "EventName": "GetPublicAccessBlock",
    "Description": ""
  },
  {
    "API": "s3:HeadBucket",
    "EventSource": "s3",
    "EventName": "HeadBucket",
    "Description": "You can use this operation to determine if a bucket exists and if you have permission to access it"
  },
  {
    "API": "s3:HeadObject",
    "EventSource": "s3",
    "EventName": "HeadObject",
    "Description": "The ``HEAD`` operation retrieves metadata from an object without returning the object itself"
  },
  {
    "API": "s3:ListBucketAnalyticsConfigurations",
    "EventSource": "s3",
    "EventName": "ListBucketAnalyticsConfigurations",
    "Description": ""
  },
  {
    "API": "s3:ListBucketIntelligentTieringConfigurations",
    "EventSource": "s3",
    "EventName": "ListBucketIntelligentTieringConfigurations",
    "Description": ""
  },
  {
    "API": "s3:ListBucketInventoryConfigurations",
    "EventSource": "s3",
    "EventName": "ListBucketInventoryConfigurations",
    "Description": ""
  },
  {
    "API": "s3:ListBucketMetricsConfigurations",
    "EventSource": "s3",
    "EventName": "ListBucketMetricsConfigurations",
    "Description": ""
  },
  {
    "API": "s3:ListBuckets",
    "EventSource": "s3",
    "EventName": "ListBuckets",
    "Description": ""
  },
  {
    "API": "s3:ListDirectoryBuckets",
    "EventSource": "s3",
    "EventName": "ListDirectoryBuckets",
    "Description": "Returns a list of all Amazon S3 directory buckets owned by the authenticated sender of the request"
  },
  {
    "API": "s3:ListMultipartUploads",
    "EventSource": "s3",
    "EventName": "ListMultipartUploads",
    "Description": "This operation lists in-progress multipart uploads in a bucket"
  },
  {
    "API": "s3:ListObjectVersions",
    "EventSource": "s3",
    "EventName": "ListObjectVersions",
    "Description": ""
  },
  {
    "API": "s3:ListObjects",
    "EventSource": "s3",
    "EventName": "ListObjects",
    "Description": ""
  },
  {
    "API": "s3:ListObjectsV2",
    "EventSource": "s3",
    "EventName": "ListObjectsV2",
    "Description": "Returns some or all (up to 1,000) of the objects in a bucket with each request"
  },
  {
    "API": "s3:ListParts",
    "EventSource": "s3",
    "EventName": "ListParts",
    "Description": "Lists the parts that have been uploaded for a specific multipart upload"
  },
  {
    "API": "s3:PutBucketAccelerateConfiguration",
    "EventSource": "s3",
    "EventName": "PutBucketAccelerateConfiguration",
    "Description": ""
  },
  {
    "API": "s3:PutBucketAcl",
    "EventSource": "s3",
    "EventName": "PutBucketAcl",
    "Description": ""
  },
  {
    "API": "s3:PutBucketAnalyticsConfiguration",
    "EventSource": "s3",
    "EventName": "PutBucketAnalyticsConfiguration",
    "Description": ""
  },
  {
    "API": "s3:PutBucketCors",
    "EventSource": "s3",
    "EventName": "PutBucketCors",
    "Description": ""
  },
  {
    "API": "s3:PutBucketEncryption",
    "EventSource": "s3",
    "EventName": "PutBucketEncryption",
    "Description": ""
  },
  {
    "API": "s3:PutBucketIntelligentTieringConfiguration",
    "EventSource": "s3",
    "EventName": "PutBucketIntelligentTieringConfiguration",
    "Description": ""
  },
  {
    "API": "s3:PutBucketInventoryConfiguration",
    "EventSource": "s3",
    "EventName": "PutBucketInventoryConfiguration",
    "Description": ""
  },
  {
    "API": "s3:PutBucketLifecycle",
    "EventSource": "s3",
    "EventName": "PutBucketLifecycle",
    "Description": ""
  },
  {
    "API": "s3:PutBucketLifecycleConfiguration",
    "EventSource": "s3",
    "EventName": "PutBucketLifecycleConfiguration",
    "Description": ""
  },
  {
    "API": "s3:PutBucketLogging",
    "EventSource": "s3",
    "EventName": "PutBucketLogging",
    "Description": ""
  },
  {
    "API": "s3:PutBucketMetricsConfiguration",
    "EventSource": "s3",
    "EventName": "PutBucketMetricsConfiguration",
    "Description": ""
  },
  {
    "API": "s3:PutBucketNotification",
    "EventSource": "s3",
    "EventName": "PutBucketNotification",
    "Description": ""
  },
  {
    "API": "s3:PutBucketNotificationConfiguration",
    "EventSource": "s3",
    "EventName": "PutBucketNotificationConfiguration",
    "Description": ""
  },
  {
    "API": "s3:PutBucketOwnershipControls",
    "EventSource": "s3",
    "EventName": "PutBucketOwnershipControls",
    "Description": ""
  },
  {
    "API": "s3:PutBucketPolicy",
    "EventSource": "s3",
    "EventName": "PutBucketPolicy",
    "Description": "Applies an Amazon S3 bucket policy to an Amazon S3 bucket"
  },
  {
    "API": "s3:PutBucketReplication",
    "EventSource": "s3",
    "EventName": "PutBucketReplication",
    "Description": ""
  },
  {
    "API": "s3:PutBucketRequestPayment",
    "EventSource": "s3",
    "EventName": "PutBucketRequestPayment",
    "Description": ""
  },
  {
    "API": "s3:PutBucketTagging",
    "EventSource": "s3",
    "EventName": "PutBucketTagging",
    "Description": ""
  },
  {
    "API": "s3:PutBucketVersioning",
    "EventSource": "s3",
    "EventName": "PutBucketVersioning",
    "Description": ""
  },
  {
    "API": "s3:PutBucketWebsite",
    "EventSource": "s3",
    "EventName": "PutBucketWebsite",
    "Description": ""
  },
  {
    "API": "s3:PutObject",
    "EventSource": "s3",
    "EventName": "PutObject",
    "Description": "Adds an object to a bucket"
  },
  {
    "API": "s3:PutObjectAcl",
    "EventSource": "s3",
    "EventName": "PutObjectAcl",
    "Description": ""
  },
  {
    "API": "s3:PutObjectLegalHold",
    "EventSource": "s3",
    "EventName": "PutObjectLegalHold",
    "Description": ""
  },
  {
    "API": "s3:PutObjectLockConfiguration",
    "EventSource": "s3",
    "EventName": "PutObjectLockConfiguration",
    "Description": ""
  },
  {
    "API": "s3:PutObjectRetention",
    "EventSource": "s3",
    "EventName": "PutObjectRetention",
    "Description": ""
  },
  {
    "API": "s3:PutObjectTagging",
    "EventSource": "s3",
    "EventName": "PutObjectTagging",
    "Description": ""
  },
  {
    "API": "s3:PutPublicAccessBlock",
    "EventSource": "s3",
    "EventName": "PutPublicAccessBlock",
    "Description": ""
  },
  {
    "API": "s3:RestoreObject",
    "EventSource": "s3",
    "EventName": "RestoreObject",
    "Description": ""
  },
  {
    "API": "s3:SelectObjectContent",
    "EventSource": "s3",
    "EventName": "SelectObjectContent",
    "Description": ""
  },
  {
    "API": "s3:UploadFile",
    "EventSource": "s3",
    "EventName": "UploadFile",
    "Description": "Upload a file to an S3 object"
  },
  {
    "API": "s3:UploadFileobj",
    "EventSource": "s3",
    "EventName": "UploadFileobj",
    "Description": "Upload a file-like object to S3"
  },
  {
    "API": "s3:UploadPart",
    "EventSource": "s3",
    "EventName": "UploadPart",
    "Description": "Uploads a part in a multipart upload"
  },
  {
    "API": "s3:UploadPartCopy",
    "EventSource": "s3",
    "EventName": "UploadPartCopy",
    "Description": "Uploads a part by copying data from an existing object as data source"
  },
  {
    "API": "s3:WriteGetObjectResponse",
    "EventSource": "s3",
    "EventName": "WriteGetObjectResponse",
    "Description": ""
  },
  {
    "API": "s3control:AssociateAccessGrantsIdentityCenter",
    "EventSource": "s3control",
    "EventName": "AssociateAccessGrantsIdentityCenter",
    "Description": "Associate your S3 Access Grants instance with an Amazon Web Services IAM Identity Center instance"
  },
  {
    "API": "s3control:CreateAccessGrant",
    "EventSource": "s3control",
    "EventName": "CreateAccessGrant",
    "Description": "Creates an access grant that gives a grantee access to your S3 data"
  },
  {
    "API": "s3control:CreateAccessGrantsInstance",
    "EventSource": "s3control",
    "EventName": "CreateAccessGrantsInstance",
    "Description": "Creates an S3 Access Grants instance, which serves as a logical grouping for access grants"
  },
  {
    "API": "s3control:CreateAccessGrantsLocation",
    "EventSource": "s3control",
    "EventName": "CreateAccessGrantsLocation",
    "Description": "The S3 data location that you would like to register in your S3 Access Grants instance"
  },
  {
    "API": "s3control:CreateAccessPoint",
    "EventSource": "s3control",
    "EventName": "CreateAccessPoint",
    "Description": ""
  },
  {
    "API": "s3control:CreateAccessPointForObjectLambda",
    "EventSource": "s3control",
    "EventName": "CreateAccessPointForObjectLambda",
    "Description": ""
  },
  {
    "API": "s3control:CreateBucket",
    "EventSource": "s3control",
    "EventName": "CreateBucket",
    "Description": ""
  },
  {
    "API": "s3control:CreateJob",
    "EventSource": "s3control",
    "EventName": "CreateJob",
    "Description": "This operation creates an S3 Batch Operations job"
  },
  {
    "API": "s3control:CreateMultiRegionAccessPoint",
    "EventSource": "s3control",
    "EventName": "CreateMultiRegionAccessPoint",
    "Description": ""
  },
  {
    "API": "s3control:CreateStorageLensGroup",
    "EventSource": "s3control",
    "EventName": "CreateStorageLensGroup",
    "Description": "Creates a new S3 Storage Lens group and associates it with the specified Amazon Web Services account ID"
  },
  {
    "API": "s3control:DeleteAccessGrant",
    "EventSource": "s3control",
    "EventName": "DeleteAccessGrant",
    "Description": "Deletes the access grant from the S3 Access Grants instance"
  },
  {
    "API": "s3control:DeleteAccessGrantsInstance",
    "EventSource": "s3control",
    "EventName": "DeleteAccessGrantsInstance",
    "Description": "Deletes your S3 Access Grants instance"
  },
  {
    "API": "s3control:DeleteAccessGrantsInstanceResourcePolicy",
    "EventSource": "s3control",
    "EventName": "DeleteAccessGrantsInstanceResourcePolicy",
    "Description": "Deletes the resource policy of the S3 Access Grants instance"
  },
  {
    "API": "s3control:DeleteAccessGrantsLocation",
    "EventSource": "s3control",
    "EventName": "DeleteAccessGrantsLocation",
    "Description": "Deregisters a location from your S3 Access Grants instance"
  },
  {
    "API": "s3control:DeleteAccessPoint",
    "EventSource": "s3control",
    "EventName": "DeleteAccessPoint",
    "Description": ""
  },
  {
    "API": "s3control:DeleteAccessPointForObjectLambda",
    "EventSource": "s3control",
    "EventName": "DeleteAccessPointForObjectLambda",
    "Description": ""
  },
  {
    "API": "s3control:DeleteAccessPointPolicy",
    "EventSource": "s3control",
    "EventName": "DeleteAccessPointPolicy",
    "Description": ""
  },
  {
    "API": "s3control:DeleteAccessPointPolicyForObjectLambda",
    "EventSource": "s3control",
    "EventName": "DeleteAccessPointPolicyForObjectLambda",
    "Description": ""
  },
  {
    "API": "s3control:DeleteBucket",
    "EventSource": "s3control",
    "EventName": "DeleteBucket",
    "Description": ""
  },
  {
    "API": "s3control:DeleteBucketLifecycleConfiguration",
    "EventSource": "s3control",
    "EventName": "DeleteBucketLifecycleConfiguration",
    "Description": ""
  },
  {
    "API": "s3control:DeleteBucketPolicy",
    "EventSource": "s3control",
    "EventName": "DeleteBucketPolicy",
    "Description": ""
  },
  {
    "API": "s3control:DeleteBucketReplication",
    "EventSource": "s3control",
    "EventName": "DeleteBucketReplication",
    "Description": ""
  },
  {
    "API": "s3control:DeleteBucketTagging",
    "EventSource": "s3control",
    "EventName": "DeleteBucketTagging",
    "Description": ""
  },
  {
    "API": "s3control:DeleteJobTagging",
    "EventSource": "s3control",
    "EventName": "DeleteJobTagging",
    "Description": "Removes the entire tag set from the specified S3 Batch Operations job"
  },
  {
    "API": "s3control:DeleteMultiRegionAccessPoint",
    "EventSource": "s3control",
    "EventName": "DeleteMultiRegionAccessPoint",
    "Description": ""
  },
  {
    "API": "s3control:DeletePublicAccessBlock",
    "EventSource": "s3control",
    "EventName": "DeletePublicAccessBlock",
    "Description": ""
  },
  {
    "API": "s3control:DeleteStorageLensConfiguration",
    "EventSource": "s3control",
    "EventName": "DeleteStorageLensConfiguration",
    "Description": ""
  },
  {
    "API": "s3control:DeleteStorageLensConfigurationTagging",
    "EventSource": "s3control",
    "EventName": "DeleteStorageLensConfigurationTagging",
    "Description": ""
  },
  {
    "API": "s3control:DeleteStorageLensGroup",
    "EventSource": "s3control",
    "EventName": "DeleteStorageLensGroup",
    "Description": "Deletes an existing S3 Storage Lens group"
  },
  {
    "API": "s3control:DescribeJob",
    "EventSource": "s3control",
    "EventName": "DescribeJob",
    "Description": "Retrieves the configuration parameters and status for a Batch Operations job"
  },
  {
    "API": "s3control:DescribeMultiRegionAccessPointOperation",
    "EventSource": "s3control",
    "EventName": "DescribeMultiRegionAccessPointOperation",
    "Description": ""
  },
  {
    "API": "s3control:DissociateAccessGrantsIdentityCenter",
    "EventSource": "s3control",
    "EventName": "DissociateAccessGrantsIdentityCenter",
    "Description": "Dissociates the Amazon Web Services IAM Identity Center instance from the S3 Access Grants instance"
  },
  {
    "API": "s3control:GeneratePresignedUrl",
    "EventSource": "s3control",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "s3control:GetAccessGrant",
    "EventSource": "s3control",
    "EventName": "GetAccessGrant",
    "Description": "Get the details of an access grant from your S3 Access Grants instance"
  },
  {
    "API": "s3control:GetAccessGrantsInstance",
    "EventSource": "s3control",
    "EventName": "GetAccessGrantsInstance",
    "Description": "Retrieves the S3 Access Grants instance for a Region in your account"
  },
  {
    "API": "s3control:GetAccessGrantsInstanceForPrefix",
    "EventSource": "s3control",
    "EventName": "GetAccessGrantsInstanceForPrefix",
    "Description": "Retrieve the S3 Access Grants instance that contains a particular prefix"
  },
  {
    "API": "s3control:GetAccessGrantsInstanceResourcePolicy",
    "EventSource": "s3control",
    "EventName": "GetAccessGrantsInstanceResourcePolicy",
    "Description": "Returns the resource policy of the S3 Access Grants instance"
  },
  {
    "API": "s3control:GetAccessGrantsLocation",
    "EventSource": "s3control",
    "EventName": "GetAccessGrantsLocation",
    "Description": "Retrieves the details of a particular location registered in your S3 Access Grants instance"
  },
  {
    "API": "s3control:GetAccessPoint",
    "EventSource": "s3control",
    "EventName": "GetAccessPoint",
    "Description": ""
  },
  {
    "API": "s3control:GetAccessPointConfigurationForObjectLambda",
    "EventSource": "s3control",
    "EventName": "GetAccessPointConfigurationForObjectLambda",
    "Description": ""
  },
  {
    "API": "s3control:GetAccessPointForObjectLambda",
    "EventSource": "s3control",
    "EventName": "GetAccessPointForObjectLambda",
    "Description": ""
  },
  {
    "API": "s3control:GetAccessPointPolicy",
    "EventSource": "s3control",
    "EventName": "GetAccessPointPolicy",
    "Description": ""
  },
  {
    "API": "s3control:GetAccessPointPolicyForObjectLambda",
    "EventSource": "s3control",
    "EventName": "GetAccessPointPolicyForObjectLambda",
    "Description": ""
  },
  {
    "API": "s3control:GetAccessPointPolicyStatus",
    "EventSource": "s3control",
    "EventName": "GetAccessPointPolicyStatus",
    "Description": ""
  },
  {
    "API": "s3control:GetAccessPointPolicyStatusForObjectLambda",
    "EventSource": "s3control",
    "EventName": "GetAccessPointPolicyStatusForObjectLambda",
    "Description": ""
  },
  {
    "API": "s3control:GetBucket",
    "EventSource": "s3control",
    "EventName": "GetBucket",
    "Description": "Gets an Amazon S3 on Outposts bucket"
  },
  {
    "API": "s3control:GetBucketLifecycleConfiguration",
    "EventSource": "s3control",
    "EventName": "GetBucketLifecycleConfiguration",
    "Description": ""
  },
  {
    "API": "s3control:GetBucketPolicy",
    "EventSource": "s3control",
    "EventName": "GetBucketPolicy",
    "Description": ""
  },
  {
    "API": "s3control:GetBucketReplication",
    "EventSource": "s3control",
    "EventName": "GetBucketReplication",
    "Description": ""
  },
  {
    "API": "s3control:GetBucketTagging",
    "EventSource": "s3control",
    "EventName": "GetBucketTagging",
    "Description": ""
  },
  {
    "API": "s3control:GetBucketVersioning",
    "EventSource": "s3control",
    "EventName": "GetBucketVersioning",
    "Description": ""
  },
  {
    "API": "s3control:GetDataAccess",
    "EventSource": "s3control",
    "EventName": "GetDataAccess",
    "Description": "Returns a temporary access credential from S3 Access Grants to the grantee or client application"
  },
  {
    "API": "s3control:GetJobTagging",
    "EventSource": "s3control",
    "EventName": "GetJobTagging",
    "Description": "Returns the tags on an S3 Batch Operations job"
  },
  {
    "API": "s3control:GetMultiRegionAccessPoint",
    "EventSource": "s3control",
    "EventName": "GetMultiRegionAccessPoint",
    "Description": ""
  },
  {
    "API": "s3control:GetMultiRegionAccessPointPolicy",
    "EventSource": "s3control",
    "EventName": "GetMultiRegionAccessPointPolicy",
    "Description": ""
  },
  {
    "API": "s3control:GetMultiRegionAccessPointPolicyStatus",
    "EventSource": "s3control",
    "EventName": "GetMultiRegionAccessPointPolicyStatus",
    "Description": ""
  },
  {
    "API": "s3control:GetMultiRegionAccessPointRoutes",
    "EventSource": "s3control",
    "EventName": "GetMultiRegionAccessPointRoutes",
    "Description": ""
  },
  {
    "API": "s3control:GetPublicAccessBlock",
    "EventSource": "s3control",
    "EventName": "GetPublicAccessBlock",
    "Description": ""
  },
  {
    "API": "s3control:GetStorageLensConfiguration",
    "EventSource": "s3control",
    "EventName": "GetStorageLensConfiguration",
    "Description": ""
  },
  {
    "API": "s3control:GetStorageLensConfigurationTagging",
    "EventSource": "s3control",
    "EventName": "GetStorageLensConfigurationTagging",
    "Description": ""
  },
  {
    "API": "s3control:GetStorageLensGroup",
    "EventSource": "s3control",
    "EventName": "GetStorageLensGroup",
    "Description": "Retrieves the Storage Lens group configuration details"
  },
  {
    "API": "s3control:ListAccessGrants",
    "EventSource": "s3control",
    "EventName": "ListAccessGrants",
    "Description": "Returns the list of access grants in your S3 Access Grants instance"
  },
  {
    "API": "s3control:ListAccessGrantsInstances",
    "EventSource": "s3control",
    "EventName": "ListAccessGrantsInstances",
    "Description": "Returns a list of S3 Access Grants instances"
  },
  {
    "API": "s3control:ListAccessGrantsLocations",
    "EventSource": "s3control",
    "EventName": "ListAccessGrantsLocations",
    "Description": "Returns a list of the locations registered in your S3 Access Grants instance"
  },
  {
    "API": "s3control:ListAccessPoints",
    "EventSource": "s3control",
    "EventName": "ListAccessPoints",
    "Description": ""
  },
  {
    "API": "s3control:ListAccessPointsForObjectLambda",
    "EventSource": "s3control",
    "EventName": "ListAccessPointsForObjectLambda",
    "Description": ""
  },
  {
    "API": "s3control:ListJobs",
    "EventSource": "s3control",
    "EventName": "ListJobs",
    "Description": "Lists current S3 Batch Operations jobs as well as the jobs that have ended within the last 90 days for the Amazon Web Services account making the request"
  },
  {
    "API": "s3control:ListMultiRegionAccessPoints",
    "EventSource": "s3control",
    "EventName": "ListMultiRegionAccessPoints",
    "Description": ""
  },
  {
    "API": "s3control:ListRegionalBuckets",
    "EventSource": "s3control",
    "EventName": "ListRegionalBuckets",
    "Description": ""
  },
  {
    "API": "s3control:ListStorageLensConfigurations",
    "EventSource": "s3control",
    "EventName": "ListStorageLensConfigurations",
    "Description": ""
  },
  {
    "API": "s3control:ListStorageLensGroups",
    "EventSource": "s3control",
    "EventName": "ListStorageLensGroups",
    "Description": "Lists all the Storage Lens groups in the specified home Region"
  },
  {
    "API": "s3control:ListTagsForResource",
    "EventSource": "s3control",
    "EventName": "ListTagsForResource",
    "Description": "This operation allows you to list all the Amazon Web Services resource tags for a specified resource"
  },
  {
    "API": "s3control:PutAccessGrantsInstanceResourcePolicy",
    "EventSource": "s3control",
    "EventName": "PutAccessGrantsInstanceResourcePolicy",
    "Description": "Updates the resource policy of the S3 Access Grants instance"
  },
  {
    "API": "s3control:PutAccessPointConfigurationForObjectLambda",
    "EventSource": "s3control",
    "EventName": "PutAccessPointConfigurationForObjectLambda",
    "Description": ""
  },
  {
    "API": "s3control:PutAccessPointPolicy",
    "EventSource": "s3control",
    "EventName": "PutAccessPointPolicy",
    "Description": ""
  },
  {
    "API": "s3control:PutAccessPointPolicyForObjectLambda",
    "EventSource": "s3control",
    "EventName": "PutAccessPointPolicyForObjectLambda",
    "Description": ""
  },
  {
    "API": "s3control:PutBucketLifecycleConfiguration",
    "EventSource": "s3control",
    "EventName": "PutBucketLifecycleConfiguration",
    "Description": ""
  },
  {
    "API": "s3control:PutBucketPolicy",
    "EventSource": "s3control",
    "EventName": "PutBucketPolicy",
    "Description": ""
  },
  {
    "API": "s3control:PutBucketReplication",
    "EventSource": "s3control",
    "EventName": "PutBucketReplication",
    "Description": ""
  },
  {
    "API": "s3control:PutBucketTagging",
    "EventSource": "s3control",
    "EventName": "PutBucketTagging",
    "Description": ""
  },
  {
    "API": "s3control:PutBucketVersioning",
    "EventSource": "s3control",
    "EventName": "PutBucketVersioning",
    "Description": ""
  },
  {
    "API": "s3control:PutJobTagging",
    "EventSource": "s3control",
    "EventName": "PutJobTagging",
    "Description": "Sets the supplied tag-set on an S3 Batch Operations job"
  },
  {
    "API": "s3control:PutMultiRegionAccessPointPolicy",
    "EventSource": "s3control",
    "EventName": "PutMultiRegionAccessPointPolicy",
    "Description": ""
  },
  {
    "API": "s3control:PutPublicAccessBlock",
    "EventSource": "s3control",
    "EventName": "PutPublicAccessBlock",
    "Description": ""
  },
  {
    "API": "s3control:PutStorageLensConfiguration",
    "EventSource": "s3control",
    "EventName": "PutStorageLensConfiguration",
    "Description": ""
  },
  {
    "API": "s3control:PutStorageLensConfigurationTagging",
    "EventSource": "s3control",
    "EventName": "PutStorageLensConfigurationTagging",
    "Description": ""
  },
  {
    "API": "s3control:SubmitMultiRegionAccessPointRoutes",
    "EventSource": "s3control",
    "EventName": "SubmitMultiRegionAccessPointRoutes",
    "Description": ""
  },
  {
    "API": "s3control:TagResource",
    "EventSource": "s3control",
    "EventName": "TagResource",
    "Description": "Creates a new Amazon Web Services resource tag or updates an existing resource tag"
  },
  {
    "API": "s3control:UntagResource",
    "EventSource": "s3control",
    "EventName": "UntagResource",
    "Description": "This operation removes the specified Amazon Web Services resource tags from an S3 resource"
  },
  {
    "API": "s3control:UpdateAccessGrantsLocation",
    "EventSource": "s3control",
    "EventName": "UpdateAccessGrantsLocation",
    "Description": "Updates the IAM role of a registered location in your S3 Access Grants instance"
  },
  {
    "API": "s3control:UpdateJobPriority",
    "EventSource": "s3control",
    "EventName": "UpdateJobPriority",
    "Description": "Updates an existing S3 Batch Operations job's priority"
  },
  {
    "API": "s3control:UpdateJobStatus",
    "EventSource": "s3control",
    "EventName": "UpdateJobStatus",
    "Description": "Updates the status for the specified job"
  },
  {
    "API": "s3control:UpdateStorageLensGroup",
    "EventSource": "s3control",
    "EventName": "UpdateStorageLensGroup",
    "Description": "Updates the existing Storage Lens group"
  },
  {
    "API": "s3outposts:CreateEndpoint",
    "EventSource": "s3outposts",
    "EventName": "CreateEndpoint",
    "Description": "Creates an endpoint and associates it with the specified Outpost"
  },
  {
    "API": "s3outposts:DeleteEndpoint",
    "EventSource": "s3outposts",
    "EventName": "DeleteEndpoint",
    "Description": "Deletes an endpoint"
  },
  {
    "API": "s3outposts:GeneratePresignedUrl",
    "EventSource": "s3outposts",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "s3outposts:ListEndpoints",
    "EventSource": "s3outposts",
    "EventName": "ListEndpoints",
    "Description": "Lists endpoints associated with the specified Outpost"
  },
  {
    "API": "s3outposts:ListOutpostsWithS3",
    "EventSource": "s3outposts",
    "EventName": "ListOutpostsWithS3",
    "Description": "Lists the Outposts with S3 on Outposts capacity for your Amazon Web Services account"
  },
  {
    "API": "s3outposts:ListSharedEndpoints",
    "EventSource": "s3outposts",
    "EventName": "ListSharedEndpoints",
    "Description": "Lists all endpoints associated with an Outpost that has been shared by Amazon Web Services Resource Access Manager (RAM)"
  },
  {
    "API": "sagemaker:AddAssociation",
    "EventSource": "sagemaker",
    "EventName": "AddAssociation",
    "Description": "Creates an *association* between the source and the destination"
  },
  {
    "API": "sagemaker:AddTags",
    "EventSource": "sagemaker",
    "EventName": "AddTags",
    "Description": "Adds or overwrites one or more tags for the specified SageMaker resource"
  },
  {
    "API": "sagemaker:AssociateTrialComponent",
    "EventSource": "sagemaker",
    "EventName": "AssociateTrialComponent",
    "Description": "Associates a trial component with a trial"
  },
  {
    "API": "sagemaker:BatchDescribeModelPackage",
    "EventSource": "sagemaker",
    "EventName": "BatchDescribeModelPackage",
    "Description": "This action batch describes a list of versioned model packages"
  },
  {
    "API": "sagemaker:CreateAction",
    "EventSource": "sagemaker",
    "EventName": "CreateAction",
    "Description": "Creates an *action*"
  },
  {
    "API": "sagemaker:CreateAlgorithm",
    "EventSource": "sagemaker",
    "EventName": "CreateAlgorithm",
    "Description": "Create a machine learning algorithm that you can use in SageMaker and list in the Amazon Web Services Marketplace"
  },
  {
    "API": "sagemaker:CreateApp",
    "EventSource": "sagemaker",
    "EventName": "CreateApp",
    "Description": "Creates a running app for the specified UserProfile"
  },
  {
    "API": "sagemaker:CreateAppImageConfig",
    "EventSource": "sagemaker",
    "EventName": "CreateAppImageConfig",
    "Description": "Creates a configuration for running a SageMaker image as a KernelGateway app"
  },
  {
    "API": "sagemaker:CreateArtifact",
    "EventSource": "sagemaker",
    "EventName": "CreateArtifact",
    "Description": "Creates an *artifact*"
  },
  {
    "API": "sagemaker:CreateAutoMlJob",
    "EventSource": "sagemaker",
    "EventName": "CreateAutoMlJob",
    "Description": "Creates an Autopilot job also referred to as Autopilot experiment or AutoML job"
  },
  {
    "API": "sagemaker:CreateAutoMlJobV2",
    "EventSource": "sagemaker",
    "EventName": "CreateAutoMlJobV2",
    "Description": "Creates an Autopilot job also referred to as Autopilot experiment or AutoML job V2"
  },
  {
    "API": "sagemaker:CreateCluster",
    "EventSource": "sagemaker",
    "EventName": "CreateCluster",
    "Description": "Creates a SageMaker HyperPod cluster"
  },
  {
    "API": "sagemaker:CreateCodeRepository",
    "EventSource": "sagemaker",
    "EventName": "CreateCodeRepository",
    "Description": "Creates a Git repository as a resource in your SageMaker account"
  },
  {
    "API": "sagemaker:CreateCompilationJob",
    "EventSource": "sagemaker",
    "EventName": "CreateCompilationJob",
    "Description": "Starts a model compilation job"
  },
  {
    "API": "sagemaker:CreateContext",
    "EventSource": "sagemaker",
    "EventName": "CreateContext",
    "Description": "Creates a *context*"
  },
  {
    "API": "sagemaker:CreateDataQualityJobDefinition",
    "EventSource": "sagemaker",
    "EventName": "CreateDataQualityJobDefinition",
    "Description": "Creates a definition for a job that monitors data quality and drift"
  },
  {
    "API": "sagemaker:CreateDeviceFleet",
    "EventSource": "sagemaker",
    "EventName": "CreateDeviceFleet",
    "Description": "Creates a device fleet"
  },
  {
    "API": "sagemaker:CreateDomain",
    "EventSource": "sagemaker",
    "EventName": "CreateDomain",
    "Description": "Creates a ``Domain``"
  },
  {
    "API": "sagemaker:CreateEdgeDeploymentPlan",
    "EventSource": "sagemaker",
    "EventName": "CreateEdgeDeploymentPlan",
    "Description": "Creates an edge deployment plan, consisting of multiple stages"
  },
  {
    "API": "sagemaker:CreateEdgeDeploymentStage",
    "EventSource": "sagemaker",
    "EventName": "CreateEdgeDeploymentStage",
    "Description": "Creates a new stage in an existing edge deployment plan"
  },
  {
    "API": "sagemaker:CreateEdgePackagingJob",
    "EventSource": "sagemaker",
    "EventName": "CreateEdgePackagingJob",
    "Description": "Starts a SageMaker Edge Manager model packaging job"
  },
  {
    "API": "sagemaker:CreateEndpoint",
    "EventSource": "sagemaker",
    "EventName": "CreateEndpoint",
    "Description": "Creates an endpoint using the endpoint configuration specified in the request"
  },
  {
    "API": "sagemaker:CreateEndpointConfig",
    "EventSource": "sagemaker",
    "EventName": "CreateEndpointConfig",
    "Description": "Creates an endpoint configuration that SageMaker hosting services uses to deploy models"
  },
  {
    "API": "sagemaker:CreateExperiment",
    "EventSource": "sagemaker",
    "EventName": "CreateExperiment",
    "Description": "Creates a SageMaker *experiment*"
  },
  {
    "API": "sagemaker:CreateFeatureGroup",
    "EventSource": "sagemaker",
    "EventName": "CreateFeatureGroup",
    "Description": "Create a new ``FeatureGroup``"
  },
  {
    "API": "sagemaker:CreateFlowDefinition",
    "EventSource": "sagemaker",
    "EventName": "CreateFlowDefinition",
    "Description": "Creates a flow definition"
  },
  {
    "API": "sagemaker:CreateHub",
    "EventSource": "sagemaker",
    "EventName": "CreateHub",
    "Description": "Create a hub"
  },
  {
    "API": "sagemaker:CreateHumanTaskUi",
    "EventSource": "sagemaker",
    "EventName": "CreateHumanTaskUi",
    "Description": "Defines the settings you will use for the human review workflow user interface"
  },
  {
    "API": "sagemaker:CreateHyperParameterTuningJob",
    "EventSource": "sagemaker",
    "EventName": "CreateHyperParameterTuningJob",
    "Description": "Starts a hyperparameter tuning job"
  },
  {
    "API": "sagemaker:CreateImage",
    "EventSource": "sagemaker",
    "EventName": "CreateImage",
    "Description": "Creates a custom SageMaker image"
  },
  {
    "API": "sagemaker:CreateImageVersion",
    "EventSource": "sagemaker",
    "EventName": "CreateImageVersion",
    "Description": "Creates a version of the SageMaker image specified by ``ImageName``"
  },
  {
    "API": "sagemaker:CreateInferenceComponent",
    "EventSource": "sagemaker",
    "EventName": "CreateInferenceComponent",
    "Description": "Creates an inference component, which is a SageMaker hosting object that you can use to deploy a model to an endpoint"
  },
  {
    "API": "sagemaker:CreateInferenceExperiment",
    "EventSource": "sagemaker",
    "EventName": "CreateInferenceExperiment",
    "Description": "Creates an inference experiment using the configurations specified in the request"
  },
  {
    "API": "sagemaker:CreateInferenceRecommendationsJob",
    "EventSource": "sagemaker",
    "EventName": "CreateInferenceRecommendationsJob",
    "Description": "Starts a recommendation job"
  },
  {
    "API": "sagemaker:CreateLabelingJob",
    "EventSource": "sagemaker",
    "EventName": "CreateLabelingJob",
    "Description": "Creates a job that uses workers to label the data objects in your input dataset"
  },
  {
    "API": "sagemaker:CreateMlflowTrackingServer",
    "EventSource": "sagemaker",
    "EventName": "CreateMlflowTrackingServer",
    "Description": "Creates an MLflow Tracking Server using a general purpose Amazon S3 bucket as the artifact store"
  },
  {
    "API": "sagemaker:CreateModel",
    "EventSource": "sagemaker",
    "EventName": "CreateModel",
    "Description": "Creates a model in SageMaker"
  },
  {
    "API": "sagemaker:CreateModelBiasJobDefinition",
    "EventSource": "sagemaker",
    "EventName": "CreateModelBiasJobDefinition",
    "Description": "Creates the definition for a model bias job"
  },
  {
    "API": "sagemaker:CreateModelCard",
    "EventSource": "sagemaker",
    "EventName": "CreateModelCard",
    "Description": "Creates an Amazon SageMaker Model Card"
  },
  {
    "API": "sagemaker:CreateModelCardExportJob",
    "EventSource": "sagemaker",
    "EventName": "CreateModelCardExportJob",
    "Description": "Creates an Amazon SageMaker Model Card export job"
  },
  {
    "API": "sagemaker:CreateModelExplainabilityJobDefinition",
    "EventSource": "sagemaker",
    "EventName": "CreateModelExplainabilityJobDefinition",
    "Description": "Creates the definition for a model explainability job"
  },
  {
    "API": "sagemaker:CreateModelPackage",
    "EventSource": "sagemaker",
    "EventName": "CreateModelPackage",
    "Description": "Creates a model package that you can use to create SageMaker models or list on Amazon Web Services Marketplace, or a versioned model that is part of a model group"
  },
  {
    "API": "sagemaker:CreateModelPackageGroup",
    "EventSource": "sagemaker",
    "EventName": "CreateModelPackageGroup",
    "Description": "Creates a model group"
  },
  {
    "API": "sagemaker:CreateModelQualityJobDefinition",
    "EventSource": "sagemaker",
    "EventName": "CreateModelQualityJobDefinition",
    "Description": "Creates a definition for a job that monitors model quality and drift"
  },
  {
    "API": "sagemaker:CreateMonitoringSchedule",
    "EventSource": "sagemaker",
    "EventName": "CreateMonitoringSchedule",
    "Description": "Creates a schedule that regularly starts Amazon SageMaker Processing Jobs to monitor the data captured for an Amazon SageMaker Endpoint"
  },
  {
    "API": "sagemaker:CreateNotebookInstance",
    "EventSource": "sagemaker",
    "EventName": "CreateNotebookInstance",
    "Description": "Creates an SageMaker notebook instance"
  },
  {
    "API": "sagemaker:CreateNotebookInstanceLifecycleConfig",
    "EventSource": "sagemaker",
    "EventName": "CreateNotebookInstanceLifecycleConfig",
    "Description": "Creates a lifecycle configuration that you can associate with a notebook instance"
  },
  {
    "API": "sagemaker:CreatePipeline",
    "EventSource": "sagemaker",
    "EventName": "CreatePipeline",
    "Description": "Creates a pipeline using a JSON pipeline definition"
  },
  {
    "API": "sagemaker:CreatePresignedDomainUrl",
    "EventSource": "sagemaker",
    "EventName": "CreatePresignedDomainUrl",
    "Description": "Creates a URL for a specified UserProfile in a Domain"
  },
  {
    "API": "sagemaker:CreatePresignedMlflowTrackingServerUrl",
    "EventSource": "sagemaker",
    "EventName": "CreatePresignedMlflowTrackingServerUrl",
    "Description": "Returns a presigned URL that you can use to connect to the MLflow UI attached to your tracking server"
  },
  {
    "API": "sagemaker:CreatePresignedNotebookInstanceUrl",
    "EventSource": "sagemaker",
    "EventName": "CreatePresignedNotebookInstanceUrl",
    "Description": "Returns a URL that you can use to connect to the Jupyter server from a notebook instance"
  },
  {
    "API": "sagemaker:CreateProcessingJob",
    "EventSource": "sagemaker",
    "EventName": "CreateProcessingJob",
    "Description": "Creates a processing job"
  },
  {
    "API": "sagemaker:CreateProject",
    "EventSource": "sagemaker",
    "EventName": "CreateProject",
    "Description": "Creates a machine learning (ML) project that can contain one or more templates that set up an ML pipeline from training to deploying an approved model"
  },
  {
    "API": "sagemaker:CreateSpace",
    "EventSource": "sagemaker",
    "EventName": "CreateSpace",
    "Description": "Creates a private space or a space used for real time collaboration in a domain"
  },
  {
    "API": "sagemaker:CreateStudioLifecycleConfig",
    "EventSource": "sagemaker",
    "EventName": "CreateStudioLifecycleConfig",
    "Description": "Creates a new Amazon SageMaker Studio Lifecycle Configuration"
  },
  {
    "API": "sagemaker:CreateTrainingJob",
    "EventSource": "sagemaker",
    "EventName": "CreateTrainingJob",
    "Description": "Starts a model training job"
  },
  {
    "API": "sagemaker:CreateTransformJob",
    "EventSource": "sagemaker",
    "EventName": "CreateTransformJob",
    "Description": "Starts a transform job"
  },
  {
    "API": "sagemaker:CreateTrial",
    "EventSource": "sagemaker",
    "EventName": "CreateTrial",
    "Description": "Creates an SageMaker *trial*"
  },
  {
    "API": "sagemaker:CreateTrialComponent",
    "EventSource": "sagemaker",
    "EventName": "CreateTrialComponent",
    "Description": "Creates a *trial component*, which is a stage of a machine learning *trial*"
  },
  {
    "API": "sagemaker:CreateUserProfile",
    "EventSource": "sagemaker",
    "EventName": "CreateUserProfile",
    "Description": "Creates a user profile"
  },
  {
    "API": "sagemaker:CreateWorkforce",
    "EventSource": "sagemaker",
    "EventName": "CreateWorkforce",
    "Description": "Use this operation to create a workforce"
  },
  {
    "API": "sagemaker:CreateWorkteam",
    "EventSource": "sagemaker",
    "EventName": "CreateWorkteam",
    "Description": "Creates a new work team for labeling your data"
  },
  {
    "API": "sagemaker:DeleteAction",
    "EventSource": "sagemaker",
    "EventName": "DeleteAction",
    "Description": "Deletes an action"
  },
  {
    "API": "sagemaker:DeleteAlgorithm",
    "EventSource": "sagemaker",
    "EventName": "DeleteAlgorithm",
    "Description": "Removes the specified algorithm from your account"
  },
  {
    "API": "sagemaker:DeleteApp",
    "EventSource": "sagemaker",
    "EventName": "DeleteApp",
    "Description": "Used to stop and delete an app"
  },
  {
    "API": "sagemaker:DeleteAppImageConfig",
    "EventSource": "sagemaker",
    "EventName": "DeleteAppImageConfig",
    "Description": "Deletes an AppImageConfig"
  },
  {
    "API": "sagemaker:DeleteArtifact",
    "EventSource": "sagemaker",
    "EventName": "DeleteArtifact",
    "Description": "Deletes an artifact"
  },
  {
    "API": "sagemaker:DeleteAssociation",
    "EventSource": "sagemaker",
    "EventName": "DeleteAssociation",
    "Description": "Deletes an association"
  },
  {
    "API": "sagemaker:DeleteCluster",
    "EventSource": "sagemaker",
    "EventName": "DeleteCluster",
    "Description": "Delete a SageMaker HyperPod cluster"
  },
  {
    "API": "sagemaker:DeleteCodeRepository",
    "EventSource": "sagemaker",
    "EventName": "DeleteCodeRepository",
    "Description": "Deletes the specified Git repository from your account"
  },
  {
    "API": "sagemaker:DeleteCompilationJob",
    "EventSource": "sagemaker",
    "EventName": "DeleteCompilationJob",
    "Description": "Deletes the specified compilation job"
  },
  {
    "API": "sagemaker:DeleteContext",
    "EventSource": "sagemaker",
    "EventName": "DeleteContext",
    "Description": "Deletes an context"
  },
  {
    "API": "sagemaker:DeleteDataQualityJobDefinition",
    "EventSource": "sagemaker",
    "EventName": "DeleteDataQualityJobDefinition",
    "Description": "Deletes a data quality monitoring job definition"
  },
  {
    "API": "sagemaker:DeleteDeviceFleet",
    "EventSource": "sagemaker",
    "EventName": "DeleteDeviceFleet",
    "Description": "Deletes a fleet"
  },
  {
    "API": "sagemaker:DeleteDomain",
    "EventSource": "sagemaker",
    "EventName": "DeleteDomain",
    "Description": "Used to delete a domain"
  },
  {
    "API": "sagemaker:DeleteEdgeDeploymentPlan",
    "EventSource": "sagemaker",
    "EventName": "DeleteEdgeDeploymentPlan",
    "Description": "Deletes an edge deployment plan if (and only if) all the stages in the plan are inactive or there are no stages in the plan"
  },
  {
    "API": "sagemaker:DeleteEdgeDeploymentStage",
    "EventSource": "sagemaker",
    "EventName": "DeleteEdgeDeploymentStage",
    "Description": "Delete a stage in an edge deployment plan if (and only if) the stage is inactive"
  },
  {
    "API": "sagemaker:DeleteEndpoint",
    "EventSource": "sagemaker",
    "EventName": "DeleteEndpoint",
    "Description": "Deletes an endpoint"
  },
  {
    "API": "sagemaker:DeleteEndpointConfig",
    "EventSource": "sagemaker",
    "EventName": "DeleteEndpointConfig",
    "Description": "Deletes an endpoint configuration"
  },
  {
    "API": "sagemaker:DeleteExperiment",
    "EventSource": "sagemaker",
    "EventName": "DeleteExperiment",
    "Description": "Deletes an SageMaker experiment"
  },
  {
    "API": "sagemaker:DeleteFeatureGroup",
    "EventSource": "sagemaker",
    "EventName": "DeleteFeatureGroup",
    "Description": "Delete the ``FeatureGroup`` and any data that was written to the ``OnlineStore`` of the ``FeatureGroup``"
  },
  {
    "API": "sagemaker:DeleteFlowDefinition",
    "EventSource": "sagemaker",
    "EventName": "DeleteFlowDefinition",
    "Description": "Deletes the specified flow definition"
  },
  {
    "API": "sagemaker:DeleteHub",
    "EventSource": "sagemaker",
    "EventName": "DeleteHub",
    "Description": "Delete a hub"
  },
  {
    "API": "sagemaker:DeleteHubContent",
    "EventSource": "sagemaker",
    "EventName": "DeleteHubContent",
    "Description": "Delete the contents of a hub"
  },
  {
    "API": "sagemaker:DeleteHumanTaskUi",
    "EventSource": "sagemaker",
    "EventName": "DeleteHumanTaskUi",
    "Description": "Use this operation to delete a human task user interface (worker task template)"
  },
  {
    "API": "sagemaker:DeleteHyperParameterTuningJob",
    "EventSource": "sagemaker",
    "EventName": "DeleteHyperParameterTuningJob",
    "Description": "Deletes a hyperparameter tuning job"
  },
  {
    "API": "sagemaker:DeleteImage",
    "EventSource": "sagemaker",
    "EventName": "DeleteImage",
    "Description": "Deletes a SageMaker image and all versions of the image"
  },
  {
    "API": "sagemaker:DeleteImageVersion",
    "EventSource": "sagemaker",
    "EventName": "DeleteImageVersion",
    "Description": "Deletes a version of a SageMaker image"
  },
  {
    "API": "sagemaker:DeleteInferenceComponent",
    "EventSource": "sagemaker",
    "EventName": "DeleteInferenceComponent",
    "Description": "Deletes an inference component"
  },
  {
    "API": "sagemaker:DeleteInferenceExperiment",
    "EventSource": "sagemaker",
    "EventName": "DeleteInferenceExperiment",
    "Description": "Deletes an inference experiment"
  },
  {
    "API": "sagemaker:DeleteMlflowTrackingServer",
    "EventSource": "sagemaker",
    "EventName": "DeleteMlflowTrackingServer",
    "Description": "Deletes an MLflow Tracking Server"
  },
  {
    "API": "sagemaker:DeleteModel",
    "EventSource": "sagemaker",
    "EventName": "DeleteModel",
    "Description": "Deletes a model"
  },
  {
    "API": "sagemaker:DeleteModelBiasJobDefinition",
    "EventSource": "sagemaker",
    "EventName": "DeleteModelBiasJobDefinition",
    "Description": "Deletes an Amazon SageMaker model bias job definition"
  },
  {
    "API": "sagemaker:DeleteModelCard",
    "EventSource": "sagemaker",
    "EventName": "DeleteModelCard",
    "Description": "Deletes an Amazon SageMaker Model Card"
  },
  {
    "API": "sagemaker:DeleteModelExplainabilityJobDefinition",
    "EventSource": "sagemaker",
    "EventName": "DeleteModelExplainabilityJobDefinition",
    "Description": "Deletes an Amazon SageMaker model explainability job definition"
  },
  {
    "API": "sagemaker:DeleteModelPackage",
    "EventSource": "sagemaker",
    "EventName": "DeleteModelPackage",
    "Description": "Deletes a model package"
  },
  {
    "API": "sagemaker:DeleteModelPackageGroup",
    "EventSource": "sagemaker",
    "EventName": "DeleteModelPackageGroup",
    "Description": "Deletes the specified model group"
  },
  {
    "API": "sagemaker:DeleteModelPackageGroupPolicy",
    "EventSource": "sagemaker",
    "EventName": "DeleteModelPackageGroupPolicy",
    "Description": "Deletes a model group resource policy"
  },
  {
    "API": "sagemaker:DeleteModelQualityJobDefinition",
    "EventSource": "sagemaker",
    "EventName": "DeleteModelQualityJobDefinition",
    "Description": "Deletes the secified model quality monitoring job definition"
  },
  {
    "API": "sagemaker:DeleteMonitoringSchedule",
    "EventSource": "sagemaker",
    "EventName": "DeleteMonitoringSchedule",
    "Description": "Deletes a monitoring schedule"
  },
  {
    "API": "sagemaker:DeleteNotebookInstance",
    "EventSource": "sagemaker",
    "EventName": "DeleteNotebookInstance",
    "Description": "Deletes an SageMaker notebook instance"
  },
  {
    "API": "sagemaker:DeleteNotebookInstanceLifecycleConfig",
    "EventSource": "sagemaker",
    "EventName": "DeleteNotebookInstanceLifecycleConfig",
    "Description": "Deletes a notebook instance lifecycle configuration"
  },
  {
    "API": "sagemaker:DeletePipeline",
    "EventSource": "sagemaker",
    "EventName": "DeletePipeline",
    "Description": "Deletes a pipeline if there are no running instances of the pipeline"
  },
  {
    "API": "sagemaker:DeleteProject",
    "EventSource": "sagemaker",
    "EventName": "DeleteProject",
    "Description": "Delete the specified project"
  },
  {
    "API": "sagemaker:DeleteSpace",
    "EventSource": "sagemaker",
    "EventName": "DeleteSpace",
    "Description": "Used to delete a space"
  },
  {
    "API": "sagemaker:DeleteStudioLifecycleConfig",
    "EventSource": "sagemaker",
    "EventName": "DeleteStudioLifecycleConfig",
    "Description": "Deletes the Amazon SageMaker Studio Lifecycle Configuration"
  },
  {
    "API": "sagemaker:DeleteTags",
    "EventSource": "sagemaker",
    "EventName": "DeleteTags",
    "Description": "Deletes the specified tags from an SageMaker resource"
  },
  {
    "API": "sagemaker:DeleteTrial",
    "EventSource": "sagemaker",
    "EventName": "DeleteTrial",
    "Description": "Deletes the specified trial"
  },
  {
    "API": "sagemaker:DeleteTrialComponent",
    "EventSource": "sagemaker",
    "EventName": "DeleteTrialComponent",
    "Description": "Deletes the specified trial component"
  },
  {
    "API": "sagemaker:DeleteUserProfile",
    "EventSource": "sagemaker",
    "EventName": "DeleteUserProfile",
    "Description": "Deletes a user profile"
  },
  {
    "API": "sagemaker:DeleteWorkforce",
    "EventSource": "sagemaker",
    "EventName": "DeleteWorkforce",
    "Description": "Use this operation to delete a workforce"
  },
  {
    "API": "sagemaker:DeleteWorkteam",
    "EventSource": "sagemaker",
    "EventName": "DeleteWorkteam",
    "Description": "Deletes an existing work team"
  },
  {
    "API": "sagemaker:DeregisterDevices",
    "EventSource": "sagemaker",
    "EventName": "DeregisterDevices",
    "Description": "Deregisters the specified devices"
  },
  {
    "API": "sagemaker:DescribeAction",
    "EventSource": "sagemaker",
    "EventName": "DescribeAction",
    "Description": "Describes an action"
  },
  {
    "API": "sagemaker:DescribeAlgorithm",
    "EventSource": "sagemaker",
    "EventName": "DescribeAlgorithm",
    "Description": "Returns a description of the specified algorithm that is in your account"
  },
  {
    "API": "sagemaker:DescribeApp",
    "EventSource": "sagemaker",
    "EventName": "DescribeApp",
    "Description": "Describes the app"
  },
  {
    "API": "sagemaker:DescribeAppImageConfig",
    "EventSource": "sagemaker",
    "EventName": "DescribeAppImageConfig",
    "Description": "Describes an AppImageConfig"
  },
  {
    "API": "sagemaker:DescribeArtifact",
    "EventSource": "sagemaker",
    "EventName": "DescribeArtifact",
    "Description": "Describes an artifact"
  },
  {
    "API": "sagemaker:DescribeAutoMlJob",
    "EventSource": "sagemaker",
    "EventName": "DescribeAutoMlJob",
    "Description": "Returns information about an AutoML job created by calling `CreateAutoMLJob <https://docs"
  },
  {
    "API": "sagemaker:DescribeAutoMlJobV2",
    "EventSource": "sagemaker",
    "EventName": "DescribeAutoMlJobV2",
    "Description": "Returns information about an AutoML job created by calling `CreateAutoMLJobV2 <https://docs"
  },
  {
    "API": "sagemaker:DescribeCluster",
    "EventSource": "sagemaker",
    "EventName": "DescribeCluster",
    "Description": "Retrieves information of a SageMaker HyperPod cluster"
  },
  {
    "API": "sagemaker:DescribeClusterNode",
    "EventSource": "sagemaker",
    "EventName": "DescribeClusterNode",
    "Description": "Retrieves information of a node (also called a *instance* interchangeably) of a SageMaker HyperPod cluster"
  },
  {
    "API": "sagemaker:DescribeCodeRepository",
    "EventSource": "sagemaker",
    "EventName": "DescribeCodeRepository",
    "Description": "Gets details about the specified Git repository"
  },
  {
    "API": "sagemaker:DescribeCompilationJob",
    "EventSource": "sagemaker",
    "EventName": "DescribeCompilationJob",
    "Description": "Returns information about a model compilation job"
  },
  {
    "API": "sagemaker:DescribeContext",
    "EventSource": "sagemaker",
    "EventName": "DescribeContext",
    "Description": "Describes a context"
  },
  {
    "API": "sagemaker:DescribeDataQualityJobDefinition",
    "EventSource": "sagemaker",
    "EventName": "DescribeDataQualityJobDefinition",
    "Description": "Gets the details of a data quality monitoring job definition"
  },
  {
    "API": "sagemaker:DescribeDevice",
    "EventSource": "sagemaker",
    "EventName": "DescribeDevice",
    "Description": "Describes the device"
  },
  {
    "API": "sagemaker:DescribeDeviceFleet",
    "EventSource": "sagemaker",
    "EventName": "DescribeDeviceFleet",
    "Description": "A description of the fleet the device belongs to"
  },
  {
    "API": "sagemaker:DescribeDomain",
    "EventSource": "sagemaker",
    "EventName": "DescribeDomain",
    "Description": "The description of the domain"
  },
  {
    "API": "sagemaker:DescribeEdgeDeploymentPlan",
    "EventSource": "sagemaker",
    "EventName": "DescribeEdgeDeploymentPlan",
    "Description": "Describes an edge deployment plan with deployment status per stage"
  },
  {
    "API": "sagemaker:DescribeEdgePackagingJob",
    "EventSource": "sagemaker",
    "EventName": "DescribeEdgePackagingJob",
    "Description": "A description of edge packaging jobs"
  },
  {
    "API": "sagemaker:DescribeEndpoint",
    "EventSource": "sagemaker",
    "EventName": "DescribeEndpoint",
    "Description": "Returns the description of an endpoint"
  },
  {
    "API": "sagemaker:DescribeEndpointConfig",
    "EventSource": "sagemaker",
    "EventName": "DescribeEndpointConfig",
    "Description": "Returns the description of an endpoint configuration created using the ``CreateEndpointConfig`` API"
  },
  {
    "API": "sagemaker:DescribeExperiment",
    "EventSource": "sagemaker",
    "EventName": "DescribeExperiment",
    "Description": "Provides a list of an experiment's properties"
  },
  {
    "API": "sagemaker:DescribeFeatureGroup",
    "EventSource": "sagemaker",
    "EventName": "DescribeFeatureGroup",
    "Description": "Use this operation to describe a ``FeatureGroup``"
  },
  {
    "API": "sagemaker:DescribeFeatureMetadata",
    "EventSource": "sagemaker",
    "EventName": "DescribeFeatureMetadata",
    "Description": "Shows the metadata for a feature within a feature group"
  },
  {
    "API": "sagemaker:DescribeFlowDefinition",
    "EventSource": "sagemaker",
    "EventName": "DescribeFlowDefinition",
    "Description": "Returns information about the specified flow definition"
  },
  {
    "API": "sagemaker:DescribeHub",
    "EventSource": "sagemaker",
    "EventName": "DescribeHub",
    "Description": "Describe a hub"
  },
  {
    "API": "sagemaker:DescribeHubContent",
    "EventSource": "sagemaker",
    "EventName": "DescribeHubContent",
    "Description": "Describe the content of a hub"
  },
  {
    "API": "sagemaker:DescribeHumanTaskUi",
    "EventSource": "sagemaker",
    "EventName": "DescribeHumanTaskUi",
    "Description": "Returns information about the requested human task user interface (worker task template)"
  },
  {
    "API": "sagemaker:DescribeHyperParameterTuningJob",
    "EventSource": "sagemaker",
    "EventName": "DescribeHyperParameterTuningJob",
    "Description": "Returns a description of a hyperparameter tuning job, depending on the fields selected"
  },
  {
    "API": "sagemaker:DescribeImage",
    "EventSource": "sagemaker",
    "EventName": "DescribeImage",
    "Description": "Describes a SageMaker image"
  },
  {
    "API": "sagemaker:DescribeImageVersion",
    "EventSource": "sagemaker",
    "EventName": "DescribeImageVersion",
    "Description": "Describes a version of a SageMaker image"
  },
  {
    "API": "sagemaker:DescribeInferenceComponent",
    "EventSource": "sagemaker",
    "EventName": "DescribeInferenceComponent",
    "Description": "Returns information about an inference component"
  },
  {
    "API": "sagemaker:DescribeInferenceExperiment",
    "EventSource": "sagemaker",
    "EventName": "DescribeInferenceExperiment",
    "Description": "Returns details about an inference experiment"
  },
  {
    "API": "sagemaker:DescribeInferenceRecommendationsJob",
    "EventSource": "sagemaker",
    "EventName": "DescribeInferenceRecommendationsJob",
    "Description": "Provides the results of the Inference Recommender job"
  },
  {
    "API": "sagemaker:DescribeLabelingJob",
    "EventSource": "sagemaker",
    "EventName": "DescribeLabelingJob",
    "Description": "Gets information about a labeling job"
  },
  {
    "API": "sagemaker:DescribeLineageGroup",
    "EventSource": "sagemaker",
    "EventName": "DescribeLineageGroup",
    "Description": "Provides a list of properties for the requested lineage group"
  },
  {
    "API": "sagemaker:DescribeMlflowTrackingServer",
    "EventSource": "sagemaker",
    "EventName": "DescribeMlflowTrackingServer",
    "Description": "Returns information about an MLflow Tracking Server"
  },
  {
    "API": "sagemaker:DescribeModel",
    "EventSource": "sagemaker",
    "EventName": "DescribeModel",
    "Description": "Describes a model that you created using the ``CreateModel`` API"
  },
  {
    "API": "sagemaker:DescribeModelBiasJobDefinition",
    "EventSource": "sagemaker",
    "EventName": "DescribeModelBiasJobDefinition",
    "Description": "Returns a description of a model bias job definition"
  },
  {
    "API": "sagemaker:DescribeModelCard",
    "EventSource": "sagemaker",
    "EventName": "DescribeModelCard",
    "Description": "Describes the content, creation time, and security configuration of an Amazon SageMaker Model Card"
  },
  {
    "API": "sagemaker:DescribeModelCardExportJob",
    "EventSource": "sagemaker",
    "EventName": "DescribeModelCardExportJob",
    "Description": "Describes an Amazon SageMaker Model Card export job"
  },
  {
    "API": "sagemaker:DescribeModelExplainabilityJobDefinition",
    "EventSource": "sagemaker",
    "EventName": "DescribeModelExplainabilityJobDefinition",
    "Description": "Returns a description of a model explainability job definition"
  },
  {
    "API": "sagemaker:DescribeModelPackage",
    "EventSource": "sagemaker",
    "EventName": "DescribeModelPackage",
    "Description": "Returns a description of the specified model package, which is used to create SageMaker models or list them on Amazon Web Services Marketplace"
  },
  {
    "API": "sagemaker:DescribeModelPackageGroup",
    "EventSource": "sagemaker",
    "EventName": "DescribeModelPackageGroup",
    "Description": "Gets a description for the specified model group"
  },
  {
    "API": "sagemaker:DescribeModelQualityJobDefinition",
    "EventSource": "sagemaker",
    "EventName": "DescribeModelQualityJobDefinition",
    "Description": "Returns a description of a model quality job definition"
  },
  {
    "API": "sagemaker:DescribeMonitoringSchedule",
    "EventSource": "sagemaker",
    "EventName": "DescribeMonitoringSchedule",
    "Description": "Describes the schedule for a monitoring job"
  },
  {
    "API": "sagemaker:DescribeNotebookInstance",
    "EventSource": "sagemaker",
    "EventName": "DescribeNotebookInstance",
    "Description": "Returns information about a notebook instance"
  },
  {
    "API": "sagemaker:DescribeNotebookInstanceLifecycleConfig",
    "EventSource": "sagemaker",
    "EventName": "DescribeNotebookInstanceLifecycleConfig",
    "Description": "Returns a description of a notebook instance lifecycle configuration"
  },
  {
    "API": "sagemaker:DescribePipeline",
    "EventSource": "sagemaker",
    "EventName": "DescribePipeline",
    "Description": "Describes the details of a pipeline"
  },
  {
    "API": "sagemaker:DescribePipelineDefinitionForExecution",
    "EventSource": "sagemaker",
    "EventName": "DescribePipelineDefinitionForExecution",
    "Description": "Describes the details of an execution's pipeline definition"
  },
  {
    "API": "sagemaker:DescribePipelineExecution",
    "EventSource": "sagemaker",
    "EventName": "DescribePipelineExecution",
    "Description": "Describes the details of a pipeline execution"
  },
  {
    "API": "sagemaker:DescribeProcessingJob",
    "EventSource": "sagemaker",
    "EventName": "DescribeProcessingJob",
    "Description": "Returns a description of a processing job"
  },
  {
    "API": "sagemaker:DescribeProject",
    "EventSource": "sagemaker",
    "EventName": "DescribeProject",
    "Description": "Describes the details of a project"
  },
  {
    "API": "sagemaker:DescribeSpace",
    "EventSource": "sagemaker",
    "EventName": "DescribeSpace",
    "Description": "Describes the space"
  },
  {
    "API": "sagemaker:DescribeStudioLifecycleConfig",
    "EventSource": "sagemaker",
    "EventName": "DescribeStudioLifecycleConfig",
    "Description": "Describes the Amazon SageMaker Studio Lifecycle Configuration"
  },
  {
    "API": "sagemaker:DescribeSubscribedWorkteam",
    "EventSource": "sagemaker",
    "EventName": "DescribeSubscribedWorkteam",
    "Description": "Gets information about a work team provided by a vendor"
  },
  {
    "API": "sagemaker:DescribeTrainingJob",
    "EventSource": "sagemaker",
    "EventName": "DescribeTrainingJob",
    "Description": "Returns information about a training job"
  },
  {
    "API": "sagemaker:DescribeTransformJob",
    "EventSource": "sagemaker",
    "EventName": "DescribeTransformJob",
    "Description": "Returns information about a transform job"
  },
  {
    "API": "sagemaker:DescribeTrial",
    "EventSource": "sagemaker",
    "EventName": "DescribeTrial",
    "Description": "Provides a list of a trial's properties"
  },
  {
    "API": "sagemaker:DescribeTrialComponent",
    "EventSource": "sagemaker",
    "EventName": "DescribeTrialComponent",
    "Description": "Provides a list of a trials component's properties"
  },
  {
    "API": "sagemaker:DescribeUserProfile",
    "EventSource": "sagemaker",
    "EventName": "DescribeUserProfile",
    "Description": "Describes a user profile"
  },
  {
    "API": "sagemaker:DescribeWorkforce",
    "EventSource": "sagemaker",
    "EventName": "DescribeWorkforce",
    "Description": "Lists private workforce information, including workforce name, Amazon Resource Name (ARN), and, if applicable, allowed IP address ranges ( `CIDRs <https://docs"
  },
  {
    "API": "sagemaker:DescribeWorkteam",
    "EventSource": "sagemaker",
    "EventName": "DescribeWorkteam",
    "Description": "Gets information about a specific work team"
  },
  {
    "API": "sagemaker:DisableSagemakerServicecatalogPortfolio",
    "EventSource": "sagemaker",
    "EventName": "DisableSagemakerServicecatalogPortfolio",
    "Description": "Disables using Service Catalog in SageMaker"
  },
  {
    "API": "sagemaker:DisassociateTrialComponent",
    "EventSource": "sagemaker",
    "EventName": "DisassociateTrialComponent",
    "Description": "Disassociates a trial component from a trial"
  },
  {
    "API": "sagemaker:EnableSagemakerServicecatalogPortfolio",
    "EventSource": "sagemaker",
    "EventName": "EnableSagemakerServicecatalogPortfolio",
    "Description": "Enables using Service Catalog in SageMaker"
  },
  {
    "API": "sagemaker:GeneratePresignedUrl",
    "EventSource": "sagemaker",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "sagemaker:GetDeviceFleetReport",
    "EventSource": "sagemaker",
    "EventName": "GetDeviceFleetReport",
    "Description": "Describes a fleet"
  },
  {
    "API": "sagemaker:GetLineageGroupPolicy",
    "EventSource": "sagemaker",
    "EventName": "GetLineageGroupPolicy",
    "Description": "The resource policy for the lineage group"
  },
  {
    "API": "sagemaker:GetModelPackageGroupPolicy",
    "EventSource": "sagemaker",
    "EventName": "GetModelPackageGroupPolicy",
    "Description": "Gets a resource policy that manages access for a model group"
  },
  {
    "API": "sagemaker:GetSagemakerServicecatalogPortfolioStatus",
    "EventSource": "sagemaker",
    "EventName": "GetSagemakerServicecatalogPortfolioStatus",
    "Description": "Gets the status of Service Catalog in SageMaker"
  },
  {
    "API": "sagemaker:GetScalingConfigurationRecommendation",
    "EventSource": "sagemaker",
    "EventName": "GetScalingConfigurationRecommendation",
    "Description": "Starts an Amazon SageMaker Inference Recommender autoscaling recommendation job"
  },
  {
    "API": "sagemaker:GetSearchSuggestions",
    "EventSource": "sagemaker",
    "EventName": "GetSearchSuggestions",
    "Description": "An auto-complete API for the search functionality in the SageMaker console"
  },
  {
    "API": "sagemaker:ImportHubContent",
    "EventSource": "sagemaker",
    "EventName": "ImportHubContent",
    "Description": "Import hub content"
  },
  {
    "API": "sagemaker:ListActions",
    "EventSource": "sagemaker",
    "EventName": "ListActions",
    "Description": "Lists the actions in your account and their properties"
  },
  {
    "API": "sagemaker:ListAlgorithms",
    "EventSource": "sagemaker",
    "EventName": "ListAlgorithms",
    "Description": "Lists the machine learning algorithms that have been created"
  },
  {
    "API": "sagemaker:ListAliases",
    "EventSource": "sagemaker",
    "EventName": "ListAliases",
    "Description": "Lists the aliases of a specified image or image version"
  },
  {
    "API": "sagemaker:ListAppImageConfigs",
    "EventSource": "sagemaker",
    "EventName": "ListAppImageConfigs",
    "Description": "Lists the AppImageConfigs in your account and their properties"
  },
  {
    "API": "sagemaker:ListApps",
    "EventSource": "sagemaker",
    "EventName": "ListApps",
    "Description": "Lists apps"
  },
  {
    "API": "sagemaker:ListArtifacts",
    "EventSource": "sagemaker",
    "EventName": "ListArtifacts",
    "Description": "Lists the artifacts in your account and their properties"
  },
  {
    "API": "sagemaker:ListAssociations",
    "EventSource": "sagemaker",
    "EventName": "ListAssociations",
    "Description": "Lists the associations in your account and their properties"
  },
  {
    "API": "sagemaker:ListAutoMlJobs",
    "EventSource": "sagemaker",
    "EventName": "ListAutoMlJobs",
    "Description": "Request a list of jobs"
  },
  {
    "API": "sagemaker:ListCandidatesForAutoMlJob",
    "EventSource": "sagemaker",
    "EventName": "ListCandidatesForAutoMlJob",
    "Description": "List the candidates created for the job"
  },
  {
    "API": "sagemaker:ListClusterNodes",
    "EventSource": "sagemaker",
    "EventName": "ListClusterNodes",
    "Description": "Retrieves the list of instances (also called *nodes* interchangeably) in a SageMaker HyperPod cluster"
  },
  {
    "API": "sagemaker:ListClusters",
    "EventSource": "sagemaker",
    "EventName": "ListClusters",
    "Description": "Retrieves the list of SageMaker HyperPod clusters"
  },
  {
    "API": "sagemaker:ListCodeRepositories",
    "EventSource": "sagemaker",
    "EventName": "ListCodeRepositories",
    "Description": "Gets a list of the Git repositories in your account"
  },
  {
    "API": "sagemaker:ListCompilationJobs",
    "EventSource": "sagemaker",
    "EventName": "ListCompilationJobs",
    "Description": "Lists model compilation jobs that satisfy various filters"
  },
  {
    "API": "sagemaker:ListContexts",
    "EventSource": "sagemaker",
    "EventName": "ListContexts",
    "Description": "Lists the contexts in your account and their properties"
  },
  {
    "API": "sagemaker:ListDataQualityJobDefinitions",
    "EventSource": "sagemaker",
    "EventName": "ListDataQualityJobDefinitions",
    "Description": "Lists the data quality job definitions in your account"
  },
  {
    "API": "sagemaker:ListDeviceFleets",
    "EventSource": "sagemaker",
    "EventName": "ListDeviceFleets",
    "Description": "Returns a list of devices in the fleet"
  },
  {
    "API": "sagemaker:ListDevices",
    "EventSource": "sagemaker",
    "EventName": "ListDevices",
    "Description": "A list of devices"
  },
  {
    "API": "sagemaker:ListDomains",
    "EventSource": "sagemaker",
    "EventName": "ListDomains",
    "Description": "Lists the domains"
  },
  {
    "API": "sagemaker:ListEdgeDeploymentPlans",
    "EventSource": "sagemaker",
    "EventName": "ListEdgeDeploymentPlans",
    "Description": "Lists all edge deployment plans"
  },
  {
    "API": "sagemaker:ListEdgePackagingJobs",
    "EventSource": "sagemaker",
    "EventName": "ListEdgePackagingJobs",
    "Description": "Returns a list of edge packaging jobs"
  },
  {
    "API": "sagemaker:ListEndpointConfigs",
    "EventSource": "sagemaker",
    "EventName": "ListEndpointConfigs",
    "Description": "Lists endpoint configurations"
  },
  {
    "API": "sagemaker:ListEndpoints",
    "EventSource": "sagemaker",
    "EventName": "ListEndpoints",
    "Description": "Lists endpoints"
  },
  {
    "API": "sagemaker:ListExperiments",
    "EventSource": "sagemaker",
    "EventName": "ListExperiments",
    "Description": "Lists all the experiments in your account"
  },
  {
    "API": "sagemaker:ListFeatureGroups",
    "EventSource": "sagemaker",
    "EventName": "ListFeatureGroups",
    "Description": "List ``FeatureGroup``s based on given filter and order"
  },
  {
    "API": "sagemaker:ListFlowDefinitions",
    "EventSource": "sagemaker",
    "EventName": "ListFlowDefinitions",
    "Description": "Returns information about the flow definitions in your account"
  },
  {
    "API": "sagemaker:ListHubContentVersions",
    "EventSource": "sagemaker",
    "EventName": "ListHubContentVersions",
    "Description": "List hub content versions"
  },
  {
    "API": "sagemaker:ListHubContents",
    "EventSource": "sagemaker",
    "EventName": "ListHubContents",
    "Description": "List the contents of a hub"
  },
  {
    "API": "sagemaker:ListHubs",
    "EventSource": "sagemaker",
    "EventName": "ListHubs",
    "Description": "List all existing hubs"
  },
  {
    "API": "sagemaker:ListHumanTaskUis",
    "EventSource": "sagemaker",
    "EventName": "ListHumanTaskUis",
    "Description": "Returns information about the human task user interfaces in your account"
  },
  {
    "API": "sagemaker:ListHyperParameterTuningJobs",
    "EventSource": "sagemaker",
    "EventName": "ListHyperParameterTuningJobs",
    "Description": "Gets a list of `HyperParameterTuningJobSummary <https://docs"
  },
  {
    "API": "sagemaker:ListImageVersions",
    "EventSource": "sagemaker",
    "EventName": "ListImageVersions",
    "Description": "Lists the versions of a specified image and their properties"
  },
  {
    "API": "sagemaker:ListImages",
    "EventSource": "sagemaker",
    "EventName": "ListImages",
    "Description": "Lists the images in your account and their properties"
  },
  {
    "API": "sagemaker:ListInferenceComponents",
    "EventSource": "sagemaker",
    "EventName": "ListInferenceComponents",
    "Description": "Lists the inference components in your account and their properties"
  },
  {
    "API": "sagemaker:ListInferenceExperiments",
    "EventSource": "sagemaker",
    "EventName": "ListInferenceExperiments",
    "Description": "Returns the list of all inference experiments"
  },
  {
    "API": "sagemaker:ListInferenceRecommendationsJobSteps",
    "EventSource": "sagemaker",
    "EventName": "ListInferenceRecommendationsJobSteps",
    "Description": "Returns a list of the subtasks for an Inference Recommender job"
  },
  {
    "API": "sagemaker:ListInferenceRecommendationsJobs",
    "EventSource": "sagemaker",
    "EventName": "ListInferenceRecommendationsJobs",
    "Description": "Lists recommendation jobs that satisfy various filters"
  },
  {
    "API": "sagemaker:ListLabelingJobs",
    "EventSource": "sagemaker",
    "EventName": "ListLabelingJobs",
    "Description": "Gets a list of labeling jobs"
  },
  {
    "API": "sagemaker:ListLabelingJobsForWorkteam",
    "EventSource": "sagemaker",
    "EventName": "ListLabelingJobsForWorkteam",
    "Description": "Gets a list of labeling jobs assigned to a specified work team"
  },
  {
    "API": "sagemaker:ListLineageGroups",
    "EventSource": "sagemaker",
    "EventName": "ListLineageGroups",
    "Description": "A list of lineage groups shared with your Amazon Web Services account"
  },
  {
    "API": "sagemaker:ListMlflowTrackingServers",
    "EventSource": "sagemaker",
    "EventName": "ListMlflowTrackingServers",
    "Description": "Lists all MLflow Tracking Servers"
  },
  {
    "API": "sagemaker:ListModelBiasJobDefinitions",
    "EventSource": "sagemaker",
    "EventName": "ListModelBiasJobDefinitions",
    "Description": "Lists model bias jobs definitions that satisfy various filters"
  },
  {
    "API": "sagemaker:ListModelCardExportJobs",
    "EventSource": "sagemaker",
    "EventName": "ListModelCardExportJobs",
    "Description": "List the export jobs for the Amazon SageMaker Model Card"
  },
  {
    "API": "sagemaker:ListModelCardVersions",
    "EventSource": "sagemaker",
    "EventName": "ListModelCardVersions",
    "Description": "List existing versions of an Amazon SageMaker Model Card"
  },
  {
    "API": "sagemaker:ListModelCards",
    "EventSource": "sagemaker",
    "EventName": "ListModelCards",
    "Description": "List existing model cards"
  },
  {
    "API": "sagemaker:ListModelExplainabilityJobDefinitions",
    "EventSource": "sagemaker",
    "EventName": "ListModelExplainabilityJobDefinitions",
    "Description": "Lists model explainability job definitions that satisfy various filters"
  },
  {
    "API": "sagemaker:ListModelMetadata",
    "EventSource": "sagemaker",
    "EventName": "ListModelMetadata",
    "Description": "Lists the domain, framework, task, and model name of standard machine learning models found in common model zoos"
  },
  {
    "API": "sagemaker:ListModelPackageGroups",
    "EventSource": "sagemaker",
    "EventName": "ListModelPackageGroups",
    "Description": "Gets a list of the model groups in your Amazon Web Services account"
  },
  {
    "API": "sagemaker:ListModelPackages",
    "EventSource": "sagemaker",
    "EventName": "ListModelPackages",
    "Description": "Lists the model packages that have been created"
  },
  {
    "API": "sagemaker:ListModelQualityJobDefinitions",
    "EventSource": "sagemaker",
    "EventName": "ListModelQualityJobDefinitions",
    "Description": "Gets a list of model quality monitoring job definitions in your account"
  },
  {
    "API": "sagemaker:ListModels",
    "EventSource": "sagemaker",
    "EventName": "ListModels",
    "Description": "Lists models created with the ``CreateModel`` API"
  },
  {
    "API": "sagemaker:ListMonitoringAlertHistory",
    "EventSource": "sagemaker",
    "EventName": "ListMonitoringAlertHistory",
    "Description": "Gets a list of past alerts in a model monitoring schedule"
  },
  {
    "API": "sagemaker:ListMonitoringAlerts",
    "EventSource": "sagemaker",
    "EventName": "ListMonitoringAlerts",
    "Description": "Gets the alerts for a single monitoring schedule"
  },
  {
    "API": "sagemaker:ListMonitoringExecutions",
    "EventSource": "sagemaker",
    "EventName": "ListMonitoringExecutions",
    "Description": "Returns list of all monitoring job executions"
  },
  {
    "API": "sagemaker:ListMonitoringSchedules",
    "EventSource": "sagemaker",
    "EventName": "ListMonitoringSchedules",
    "Description": "Returns list of all monitoring schedules"
  },
  {
    "API": "sagemaker:ListNotebookInstanceLifecycleConfigs",
    "EventSource": "sagemaker",
    "EventName": "ListNotebookInstanceLifecycleConfigs",
    "Description": "Lists notebook instance lifestyle configurations created with the `CreateNotebookInstanceLifecycleConfig <https://docs"
  },
  {
    "API": "sagemaker:ListNotebookInstances",
    "EventSource": "sagemaker",
    "EventName": "ListNotebookInstances",
    "Description": "Returns a list of the SageMaker notebook instances in the requester's account in an Amazon Web Services Region"
  },
  {
    "API": "sagemaker:ListPipelineExecutionSteps",
    "EventSource": "sagemaker",
    "EventName": "ListPipelineExecutionSteps",
    "Description": "Gets a list of ``PipeLineExecutionStep`` objects"
  },
  {
    "API": "sagemaker:ListPipelineExecutions",
    "EventSource": "sagemaker",
    "EventName": "ListPipelineExecutions",
    "Description": "Gets a list of the pipeline executions"
  },
  {
    "API": "sagemaker:ListPipelineParametersForExecution",
    "EventSource": "sagemaker",
    "EventName": "ListPipelineParametersForExecution",
    "Description": "Gets a list of parameters for a pipeline execution"
  },
  {
    "API": "sagemaker:ListPipelines",
    "EventSource": "sagemaker",
    "EventName": "ListPipelines",
    "Description": "Gets a list of pipelines"
  },
  {
    "API": "sagemaker:ListProcessingJobs",
    "EventSource": "sagemaker",
    "EventName": "ListProcessingJobs",
    "Description": "Lists processing jobs that satisfy various filters"
  },
  {
    "API": "sagemaker:ListProjects",
    "EventSource": "sagemaker",
    "EventName": "ListProjects",
    "Description": "Gets a list of the projects in an Amazon Web Services account"
  },
  {
    "API": "sagemaker:ListResourceCatalogs",
    "EventSource": "sagemaker",
    "EventName": "ListResourceCatalogs",
    "Description": "Lists Amazon SageMaker Catalogs based on given filters and orders"
  },
  {
    "API": "sagemaker:ListSpaces",
    "EventSource": "sagemaker",
    "EventName": "ListSpaces",
    "Description": "Lists spaces"
  },
  {
    "API": "sagemaker:ListStageDevices",
    "EventSource": "sagemaker",
    "EventName": "ListStageDevices",
    "Description": "Lists devices allocated to the stage, containing detailed device information and deployment status"
  },
  {
    "API": "sagemaker:ListStudioLifecycleConfigs",
    "EventSource": "sagemaker",
    "EventName": "ListStudioLifecycleConfigs",
    "Description": "Lists the Amazon SageMaker Studio Lifecycle Configurations in your Amazon Web Services Account"
  },
  {
    "API": "sagemaker:ListSubscribedWorkteams",
    "EventSource": "sagemaker",
    "EventName": "ListSubscribedWorkteams",
    "Description": "Gets a list of the work teams that you are subscribed to in the Amazon Web Services Marketplace"
  },
  {
    "API": "sagemaker:ListTags",
    "EventSource": "sagemaker",
    "EventName": "ListTags",
    "Description": "Returns the tags for the specified SageMaker resource"
  },
  {
    "API": "sagemaker:ListTrainingJobs",
    "EventSource": "sagemaker",
    "EventName": "ListTrainingJobs",
    "Description": "Lists training jobs"
  },
  {
    "API": "sagemaker:ListTrainingJobsForHyperParameterTuningJob",
    "EventSource": "sagemaker",
    "EventName": "ListTrainingJobsForHyperParameterTuningJob",
    "Description": "Gets a list of `TrainingJobSummary <https://docs"
  },
  {
    "API": "sagemaker:ListTransformJobs",
    "EventSource": "sagemaker",
    "EventName": "ListTransformJobs",
    "Description": "Lists transform jobs"
  },
  {
    "API": "sagemaker:ListTrialComponents",
    "EventSource": "sagemaker",
    "EventName": "ListTrialComponents",
    "Description": "Lists the trial components in your account"
  },
  {
    "API": "sagemaker:ListTrials",
    "EventSource": "sagemaker",
    "EventName": "ListTrials",
    "Description": "Lists the trials in your account"
  },
  {
    "API": "sagemaker:ListUserProfiles",
    "EventSource": "sagemaker",
    "EventName": "ListUserProfiles",
    "Description": "Lists user profiles"
  },
  {
    "API": "sagemaker:ListWorkforces",
    "EventSource": "sagemaker",
    "EventName": "ListWorkforces",
    "Description": "Use this operation to list all private and vendor workforces in an Amazon Web Services Region"
  },
  {
    "API": "sagemaker:ListWorkteams",
    "EventSource": "sagemaker",
    "EventName": "ListWorkteams",
    "Description": "Gets a list of private work teams that you have defined in a region"
  },
  {
    "API": "sagemaker:PutModelPackageGroupPolicy",
    "EventSource": "sagemaker",
    "EventName": "PutModelPackageGroupPolicy",
    "Description": "Adds a resouce policy to control access to a model group"
  },
  {
    "API": "sagemaker:QueryLineage",
    "EventSource": "sagemaker",
    "EventName": "QueryLineage",
    "Description": "Use this action to inspect your lineage and discover relationships between entities"
  },
  {
    "API": "sagemaker:RegisterDevices",
    "EventSource": "sagemaker",
    "EventName": "RegisterDevices",
    "Description": "Register devices"
  },
  {
    "API": "sagemaker:RenderUiTemplate",
    "EventSource": "sagemaker",
    "EventName": "RenderUiTemplate",
    "Description": "Renders the UI template so that you can preview the worker's experience"
  },
  {
    "API": "sagemaker:RetryPipelineExecution",
    "EventSource": "sagemaker",
    "EventName": "RetryPipelineExecution",
    "Description": "Retry the execution of the pipeline"
  },
  {
    "API": "sagemaker:SendPipelineExecutionStepFailure",
    "EventSource": "sagemaker",
    "EventName": "SendPipelineExecutionStepFailure",
    "Description": "Notifies the pipeline that the execution of a callback step failed, along with a message describing why"
  },
  {
    "API": "sagemaker:SendPipelineExecutionStepSuccess",
    "EventSource": "sagemaker",
    "EventName": "SendPipelineExecutionStepSuccess",
    "Description": "Notifies the pipeline that the execution of a callback step succeeded and provides a list of the step's output parameters"
  },
  {
    "API": "sagemaker:StartEdgeDeploymentStage",
    "EventSource": "sagemaker",
    "EventName": "StartEdgeDeploymentStage",
    "Description": "Starts a stage in an edge deployment plan"
  },
  {
    "API": "sagemaker:StartInferenceExperiment",
    "EventSource": "sagemaker",
    "EventName": "StartInferenceExperiment",
    "Description": "Starts an inference experiment"
  },
  {
    "API": "sagemaker:StartMlflowTrackingServer",
    "EventSource": "sagemaker",
    "EventName": "StartMlflowTrackingServer",
    "Description": "Programmatically start an MLflow Tracking Server"
  },
  {
    "API": "sagemaker:StartMonitoringSchedule",
    "EventSource": "sagemaker",
    "EventName": "StartMonitoringSchedule",
    "Description": "Starts a previously stopped monitoring schedule"
  },
  {
    "API": "sagemaker:StartNotebookInstance",
    "EventSource": "sagemaker",
    "EventName": "StartNotebookInstance",
    "Description": "Launches an ML compute instance with the latest version of the libraries and attaches your ML storage volume"
  },
  {
    "API": "sagemaker:StartPipelineExecution",
    "EventSource": "sagemaker",
    "EventName": "StartPipelineExecution",
    "Description": "Starts a pipeline execution"
  },
  {
    "API": "sagemaker:StopAutoMlJob",
    "EventSource": "sagemaker",
    "EventName": "StopAutoMlJob",
    "Description": "A method for forcing a running job to shut down"
  },
  {
    "API": "sagemaker:StopCompilationJob",
    "EventSource": "sagemaker",
    "EventName": "StopCompilationJob",
    "Description": "Stops a model compilation job"
  },
  {
    "API": "sagemaker:StopEdgeDeploymentStage",
    "EventSource": "sagemaker",
    "EventName": "StopEdgeDeploymentStage",
    "Description": "Stops a stage in an edge deployment plan"
  },
  {
    "API": "sagemaker:StopEdgePackagingJob",
    "EventSource": "sagemaker",
    "EventName": "StopEdgePackagingJob",
    "Description": "Request to stop an edge packaging job"
  },
  {
    "API": "sagemaker:StopHyperParameterTuningJob",
    "EventSource": "sagemaker",
    "EventName": "StopHyperParameterTuningJob",
    "Description": "Stops a running hyperparameter tuning job and all running training jobs that the tuning job launched"
  },
  {
    "API": "sagemaker:StopInferenceExperiment",
    "EventSource": "sagemaker",
    "EventName": "StopInferenceExperiment",
    "Description": "Stops an inference experiment"
  },
  {
    "API": "sagemaker:StopInferenceRecommendationsJob",
    "EventSource": "sagemaker",
    "EventName": "StopInferenceRecommendationsJob",
    "Description": "Stops an Inference Recommender job"
  },
  {
    "API": "sagemaker:StopLabelingJob",
    "EventSource": "sagemaker",
    "EventName": "StopLabelingJob",
    "Description": "Stops a running labeling job"
  },
  {
    "API": "sagemaker:StopMlflowTrackingServer",
    "EventSource": "sagemaker",
    "EventName": "StopMlflowTrackingServer",
    "Description": "Programmatically stop an MLflow Tracking Server"
  },
  {
    "API": "sagemaker:StopMonitoringSchedule",
    "EventSource": "sagemaker",
    "EventName": "StopMonitoringSchedule",
    "Description": "Stops a previously started monitoring schedule"
  },
  {
    "API": "sagemaker:StopNotebookInstance",
    "EventSource": "sagemaker",
    "EventName": "StopNotebookInstance",
    "Description": "Terminates the ML compute instance"
  },
  {
    "API": "sagemaker:StopPipelineExecution",
    "EventSource": "sagemaker",
    "EventName": "StopPipelineExecution",
    "Description": "Stops a pipeline execution"
  },
  {
    "API": "sagemaker:StopProcessingJob",
    "EventSource": "sagemaker",
    "EventName": "StopProcessingJob",
    "Description": "Stops a processing job"
  },
  {
    "API": "sagemaker:StopTrainingJob",
    "EventSource": "sagemaker",
    "EventName": "StopTrainingJob",
    "Description": "Stops a training job"
  },
  {
    "API": "sagemaker:StopTransformJob",
    "EventSource": "sagemaker",
    "EventName": "StopTransformJob",
    "Description": "Stops a batch transform job"
  },
  {
    "API": "sagemaker:UpdateAction",
    "EventSource": "sagemaker",
    "EventName": "UpdateAction",
    "Description": "Updates an action"
  },
  {
    "API": "sagemaker:UpdateAppImageConfig",
    "EventSource": "sagemaker",
    "EventName": "UpdateAppImageConfig",
    "Description": "Updates the properties of an AppImageConfig"
  },
  {
    "API": "sagemaker:UpdateArtifact",
    "EventSource": "sagemaker",
    "EventName": "UpdateArtifact",
    "Description": "Updates an artifact"
  },
  {
    "API": "sagemaker:UpdateCluster",
    "EventSource": "sagemaker",
    "EventName": "UpdateCluster",
    "Description": "Updates a SageMaker HyperPod cluster"
  },
  {
    "API": "sagemaker:UpdateClusterSoftware",
    "EventSource": "sagemaker",
    "EventName": "UpdateClusterSoftware",
    "Description": "Updates the platform software of a SageMaker HyperPod cluster for security patching"
  },
  {
    "API": "sagemaker:UpdateCodeRepository",
    "EventSource": "sagemaker",
    "EventName": "UpdateCodeRepository",
    "Description": "Updates the specified Git repository with the specified values"
  },
  {
    "API": "sagemaker:UpdateContext",
    "EventSource": "sagemaker",
    "EventName": "UpdateContext",
    "Description": "Updates a context"
  },
  {
    "API": "sagemaker:UpdateDeviceFleet",
    "EventSource": "sagemaker",
    "EventName": "UpdateDeviceFleet",
    "Description": "Updates a fleet of devices"
  },
  {
    "API": "sagemaker:UpdateDevices",
    "EventSource": "sagemaker",
    "EventName": "UpdateDevices",
    "Description": "Updates one or more devices in a fleet"
  },
  {
    "API": "sagemaker:UpdateDomain",
    "EventSource": "sagemaker",
    "EventName": "UpdateDomain",
    "Description": "Updates the default settings for new user profiles in the domain"
  },
  {
    "API": "sagemaker:UpdateEndpoint",
    "EventSource": "sagemaker",
    "EventName": "UpdateEndpoint",
    "Description": "Deploys the ``EndpointConfig`` specified in the request to a new fleet of instances"
  },
  {
    "API": "sagemaker:UpdateEndpointWeightsAndCapacities",
    "EventSource": "sagemaker",
    "EventName": "UpdateEndpointWeightsAndCapacities",
    "Description": "Updates variant weight of one or more variants associated with an existing endpoint, or capacity of one variant associated with an existing endpoint"
  },
  {
    "API": "sagemaker:UpdateExperiment",
    "EventSource": "sagemaker",
    "EventName": "UpdateExperiment",
    "Description": "Adds, updates, or removes the description of an experiment"
  },
  {
    "API": "sagemaker:UpdateFeatureGroup",
    "EventSource": "sagemaker",
    "EventName": "UpdateFeatureGroup",
    "Description": "Updates the feature group by either adding features or updating the online store configuration"
  },
  {
    "API": "sagemaker:UpdateFeatureMetadata",
    "EventSource": "sagemaker",
    "EventName": "UpdateFeatureMetadata",
    "Description": "Updates the description and parameters of the feature group"
  },
  {
    "API": "sagemaker:UpdateHub",
    "EventSource": "sagemaker",
    "EventName": "UpdateHub",
    "Description": "Update a hub"
  },
  {
    "API": "sagemaker:UpdateImage",
    "EventSource": "sagemaker",
    "EventName": "UpdateImage",
    "Description": "Updates the properties of a SageMaker image"
  },
  {
    "API": "sagemaker:UpdateImageVersion",
    "EventSource": "sagemaker",
    "EventName": "UpdateImageVersion",
    "Description": "Updates the properties of a SageMaker image version"
  },
  {
    "API": "sagemaker:UpdateInferenceComponent",
    "EventSource": "sagemaker",
    "EventName": "UpdateInferenceComponent",
    "Description": "Updates an inference component"
  },
  {
    "API": "sagemaker:UpdateInferenceComponentRuntimeConfig",
    "EventSource": "sagemaker",
    "EventName": "UpdateInferenceComponentRuntimeConfig",
    "Description": "Runtime settings for a model that is deployed with an inference component"
  },
  {
    "API": "sagemaker:UpdateInferenceExperiment",
    "EventSource": "sagemaker",
    "EventName": "UpdateInferenceExperiment",
    "Description": "Updates an inference experiment that you created"
  },
  {
    "API": "sagemaker:UpdateMlflowTrackingServer",
    "EventSource": "sagemaker",
    "EventName": "UpdateMlflowTrackingServer",
    "Description": "Updates properties of an existing MLflow Tracking Server"
  },
  {
    "API": "sagemaker:UpdateModelCard",
    "EventSource": "sagemaker",
    "EventName": "UpdateModelCard",
    "Description": "Update an Amazon SageMaker Model Card"
  },
  {
    "API": "sagemaker:UpdateModelPackage",
    "EventSource": "sagemaker",
    "EventName": "UpdateModelPackage",
    "Description": "Updates a versioned model"
  },
  {
    "API": "sagemaker:UpdateMonitoringAlert",
    "EventSource": "sagemaker",
    "EventName": "UpdateMonitoringAlert",
    "Description": "Update the parameters of a model monitor alert"
  },
  {
    "API": "sagemaker:UpdateMonitoringSchedule",
    "EventSource": "sagemaker",
    "EventName": "UpdateMonitoringSchedule",
    "Description": "Updates a previously created schedule"
  },
  {
    "API": "sagemaker:UpdateNotebookInstance",
    "EventSource": "sagemaker",
    "EventName": "UpdateNotebookInstance",
    "Description": "Updates a notebook instance"
  },
  {
    "API": "sagemaker:UpdateNotebookInstanceLifecycleConfig",
    "EventSource": "sagemaker",
    "EventName": "UpdateNotebookInstanceLifecycleConfig",
    "Description": "Updates a notebook instance lifecycle configuration created with the `CreateNotebookInstanceLifecycleConfig <https://docs"
  },
  {
    "API": "sagemaker:UpdatePipeline",
    "EventSource": "sagemaker",
    "EventName": "UpdatePipeline",
    "Description": "Updates a pipeline"
  },
  {
    "API": "sagemaker:UpdatePipelineExecution",
    "EventSource": "sagemaker",
    "EventName": "UpdatePipelineExecution",
    "Description": "Updates a pipeline execution"
  },
  {
    "API": "sagemaker:UpdateProject",
    "EventSource": "sagemaker",
    "EventName": "UpdateProject",
    "Description": "Updates a machine learning (ML) project that is created from a template that sets up an ML pipeline from training to deploying an approved model"
  },
  {
    "API": "sagemaker:UpdateSpace",
    "EventSource": "sagemaker",
    "EventName": "UpdateSpace",
    "Description": "Updates the settings of a space"
  },
  {
    "API": "sagemaker:UpdateTrainingJob",
    "EventSource": "sagemaker",
    "EventName": "UpdateTrainingJob",
    "Description": "Update a model training job to request a new Debugger profiling configuration or to change warm pool retention length"
  },
  {
    "API": "sagemaker:UpdateTrial",
    "EventSource": "sagemaker",
    "EventName": "UpdateTrial",
    "Description": "Updates the display name of a trial"
  },
  {
    "API": "sagemaker:UpdateTrialComponent",
    "EventSource": "sagemaker",
    "EventName": "UpdateTrialComponent",
    "Description": "Updates one or more properties of a trial component"
  },
  {
    "API": "sagemaker:UpdateUserProfile",
    "EventSource": "sagemaker",
    "EventName": "UpdateUserProfile",
    "Description": "Updates a user profile"
  },
  {
    "API": "sagemaker:UpdateWorkforce",
    "EventSource": "sagemaker",
    "EventName": "UpdateWorkforce",
    "Description": "Use this operation to update your workforce"
  },
  {
    "API": "sagemaker:UpdateWorkteam",
    "EventSource": "sagemaker",
    "EventName": "UpdateWorkteam",
    "Description": "Updates an existing work team with new member definitions or description"
  },
  {
    "API": "sagemaker-a2i-runtime:DeleteHumanLoop",
    "EventSource": "sagemaker-a2i-runtime",
    "EventName": "DeleteHumanLoop",
    "Description": "Deletes the specified human loop for a flow definition"
  },
  {
    "API": "sagemaker-a2i-runtime:DescribeHumanLoop",
    "EventSource": "sagemaker-a2i-runtime",
    "EventName": "DescribeHumanLoop",
    "Description": "Returns information about the specified human loop"
  },
  {
    "API": "sagemaker-a2i-runtime:GeneratePresignedUrl",
    "EventSource": "sagemaker-a2i-runtime",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "sagemaker-a2i-runtime:ListHumanLoops",
    "EventSource": "sagemaker-a2i-runtime",
    "EventName": "ListHumanLoops",
    "Description": "Returns information about human loops, given the specified parameters"
  },
  {
    "API": "sagemaker-a2i-runtime:StartHumanLoop",
    "EventSource": "sagemaker-a2i-runtime",
    "EventName": "StartHumanLoop",
    "Description": "Starts a human loop, provided that at least one activation condition is met"
  },
  {
    "API": "sagemaker-a2i-runtime:StopHumanLoop",
    "EventSource": "sagemaker-a2i-runtime",
    "EventName": "StopHumanLoop",
    "Description": "Stops the specified human loop"
  },
  {
    "API": "sagemaker-edge:GeneratePresignedUrl",
    "EventSource": "sagemaker-edge",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "sagemaker-edge:GetDeployments",
    "EventSource": "sagemaker-edge",
    "EventName": "GetDeployments",
    "Description": "Use to get the active deployments from a device"
  },
  {
    "API": "sagemaker-edge:GetDeviceRegistration",
    "EventSource": "sagemaker-edge",
    "EventName": "GetDeviceRegistration",
    "Description": "Use to check if a device is registered with SageMaker Edge Manager"
  },
  {
    "API": "sagemaker-edge:SendHeartbeat",
    "EventSource": "sagemaker-edge",
    "EventName": "SendHeartbeat",
    "Description": "Use to get the current status of devices registered on SageMaker Edge Manager"
  },
  {
    "API": "sagemaker-featurestore-runtime:BatchGetRecord",
    "EventSource": "sagemaker-featurestore-runtime",
    "EventName": "BatchGetRecord",
    "Description": "Retrieves a batch of ``Records`` from a ``FeatureGroup``"
  },
  {
    "API": "sagemaker-featurestore-runtime:DeleteRecord",
    "EventSource": "sagemaker-featurestore-runtime",
    "EventName": "DeleteRecord",
    "Description": "Deletes a ``Record`` from a ``FeatureGroup`` in the ``OnlineStore``"
  },
  {
    "API": "sagemaker-featurestore-runtime:GeneratePresignedUrl",
    "EventSource": "sagemaker-featurestore-runtime",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "sagemaker-featurestore-runtime:GetRecord",
    "EventSource": "sagemaker-featurestore-runtime",
    "EventName": "GetRecord",
    "Description": "Use for ``OnlineStore`` serving from a ``FeatureStore``"
  },
  {
    "API": "sagemaker-featurestore-runtime:PutRecord",
    "EventSource": "sagemaker-featurestore-runtime",
    "EventName": "PutRecord",
    "Description": "The ``PutRecord`` API is used to ingest a list of ``Records`` into your feature group"
  },
  {
    "API": "sagemaker-geospatial:DeleteEarthObservationJob",
    "EventSource": "sagemaker-geospatial",
    "EventName": "DeleteEarthObservationJob",
    "Description": "Use this operation to delete an Earth Observation job"
  },
  {
    "API": "sagemaker-geospatial:DeleteVectorEnrichmentJob",
    "EventSource": "sagemaker-geospatial",
    "EventName": "DeleteVectorEnrichmentJob",
    "Description": "Use this operation to delete a Vector Enrichment job"
  },
  {
    "API": "sagemaker-geospatial:ExportEarthObservationJob",
    "EventSource": "sagemaker-geospatial",
    "EventName": "ExportEarthObservationJob",
    "Description": "Use this operation to export results of an Earth Observation job and optionally source images used as input to the EOJ to an Amazon S3 location"
  },
  {
    "API": "sagemaker-geospatial:ExportVectorEnrichmentJob",
    "EventSource": "sagemaker-geospatial",
    "EventName": "ExportVectorEnrichmentJob",
    "Description": "Use this operation to copy results of a Vector Enrichment job to an Amazon S3 location"
  },
  {
    "API": "sagemaker-geospatial:GeneratePresignedUrl",
    "EventSource": "sagemaker-geospatial",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "sagemaker-geospatial:GetEarthObservationJob",
    "EventSource": "sagemaker-geospatial",
    "EventName": "GetEarthObservationJob",
    "Description": "Get the details for a previously initiated Earth Observation job"
  },
  {
    "API": "sagemaker-geospatial:GetRasterDataCollection",
    "EventSource": "sagemaker-geospatial",
    "EventName": "GetRasterDataCollection",
    "Description": "Use this operation to get details of a specific raster data collection"
  },
  {
    "API": "sagemaker-geospatial:GetTile",
    "EventSource": "sagemaker-geospatial",
    "EventName": "GetTile",
    "Description": "Gets a web mercator tile for the given Earth Observation job"
  },
  {
    "API": "sagemaker-geospatial:GetVectorEnrichmentJob",
    "EventSource": "sagemaker-geospatial",
    "EventName": "GetVectorEnrichmentJob",
    "Description": "Retrieves details of a Vector Enrichment Job for a given job Amazon Resource Name (ARN)"
  },
  {
    "API": "sagemaker-geospatial:ListEarthObservationJobs",
    "EventSource": "sagemaker-geospatial",
    "EventName": "ListEarthObservationJobs",
    "Description": "Use this operation to get a list of the Earth Observation jobs associated with the calling Amazon Web Services account"
  },
  {
    "API": "sagemaker-geospatial:ListRasterDataCollections",
    "EventSource": "sagemaker-geospatial",
    "EventName": "ListRasterDataCollections",
    "Description": "Use this operation to get raster data collections"
  },
  {
    "API": "sagemaker-geospatial:ListTagsForResource",
    "EventSource": "sagemaker-geospatial",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags attached to the resource"
  },
  {
    "API": "sagemaker-geospatial:ListVectorEnrichmentJobs",
    "EventSource": "sagemaker-geospatial",
    "EventName": "ListVectorEnrichmentJobs",
    "Description": "Retrieves a list of vector enrichment jobs"
  },
  {
    "API": "sagemaker-geospatial:SearchRasterDataCollection",
    "EventSource": "sagemaker-geospatial",
    "EventName": "SearchRasterDataCollection",
    "Description": "Allows you run image query on a specific raster data collection to get a list of the satellite imagery matching the selected filters"
  },
  {
    "API": "sagemaker-geospatial:StartEarthObservationJob",
    "EventSource": "sagemaker-geospatial",
    "EventName": "StartEarthObservationJob",
    "Description": "Use this operation to create an Earth observation job"
  },
  {
    "API": "sagemaker-geospatial:StartVectorEnrichmentJob",
    "EventSource": "sagemaker-geospatial",
    "EventName": "StartVectorEnrichmentJob",
    "Description": "Creates a Vector Enrichment job for the supplied job type"
  },
  {
    "API": "sagemaker-geospatial:StopEarthObservationJob",
    "EventSource": "sagemaker-geospatial",
    "EventName": "StopEarthObservationJob",
    "Description": "Use this operation to stop an existing earth observation job"
  },
  {
    "API": "sagemaker-geospatial:StopVectorEnrichmentJob",
    "EventSource": "sagemaker-geospatial",
    "EventName": "StopVectorEnrichmentJob",
    "Description": "Stops the Vector Enrichment job for a given job ARN"
  },
  {
    "API": "sagemaker-geospatial:TagResource",
    "EventSource": "sagemaker-geospatial",
    "EventName": "TagResource",
    "Description": "The resource you want to tag"
  },
  {
    "API": "sagemaker-geospatial:UntagResource",
    "EventSource": "sagemaker-geospatial",
    "EventName": "UntagResource",
    "Description": "The resource you want to untag"
  },
  {
    "API": "sagemaker-metrics:BatchPutMetrics",
    "EventSource": "sagemaker-metrics",
    "EventName": "BatchPutMetrics",
    "Description": "Used to ingest training metrics into SageMaker"
  },
  {
    "API": "sagemaker-metrics:GeneratePresignedUrl",
    "EventSource": "sagemaker-metrics",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "sagemaker-runtime:GeneratePresignedUrl",
    "EventSource": "sagemaker-runtime",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "sagemaker-runtime:InvokeEndpoint",
    "EventSource": "sagemaker-runtime",
    "EventName": "InvokeEndpoint",
    "Description": "After you deploy a model into production using Amazon SageMaker hosting services, your client applications use this API to get inferences from the model hosted at the specified endpoint"
  },
  {
    "API": "sagemaker-runtime:InvokeEndpointAsync",
    "EventSource": "sagemaker-runtime",
    "EventName": "InvokeEndpointAsync",
    "Description": "After you deploy a model into production using Amazon SageMaker hosting services, your client applications use this API to get inferences from the model hosted at the specified endpoint in an asynchronous manner"
  },
  {
    "API": "sagemaker-runtime:InvokeEndpointWithResponseStream",
    "EventSource": "sagemaker-runtime",
    "EventName": "InvokeEndpointWithResponseStream",
    "Description": "Invokes a model at the specified endpoint to return the inference response as a stream"
  },
  {
    "API": "savingsplans:CreateSavingsPlan",
    "EventSource": "savingsplans",
    "EventName": "CreateSavingsPlan",
    "Description": "Creates a Savings Plan"
  },
  {
    "API": "savingsplans:DeleteQueuedSavingsPlan",
    "EventSource": "savingsplans",
    "EventName": "DeleteQueuedSavingsPlan",
    "Description": "Deletes the queued purchase for the specified Savings Plan"
  },
  {
    "API": "savingsplans:DescribeSavingsPlanRates",
    "EventSource": "savingsplans",
    "EventName": "DescribeSavingsPlanRates",
    "Description": "Describes the rates for the specified Savings Plan"
  },
  {
    "API": "savingsplans:DescribeSavingsPlans",
    "EventSource": "savingsplans",
    "EventName": "DescribeSavingsPlans",
    "Description": "Describes the specified Savings Plans"
  },
  {
    "API": "savingsplans:DescribeSavingsPlansOfferingRates",
    "EventSource": "savingsplans",
    "EventName": "DescribeSavingsPlansOfferingRates",
    "Description": "Describes the offering rates for the specified Savings Plans"
  },
  {
    "API": "savingsplans:DescribeSavingsPlansOfferings",
    "EventSource": "savingsplans",
    "EventName": "DescribeSavingsPlansOfferings",
    "Description": "Describes the offerings for the specified Savings Plans"
  },
  {
    "API": "savingsplans:GeneratePresignedUrl",
    "EventSource": "savingsplans",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "savingsplans:ListTagsForResource",
    "EventSource": "savingsplans",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags for the specified resource"
  },
  {
    "API": "savingsplans:ReturnSavingsPlan",
    "EventSource": "savingsplans",
    "EventName": "ReturnSavingsPlan",
    "Description": "Returns the specified Savings Plan"
  },
  {
    "API": "savingsplans:TagResource",
    "EventSource": "savingsplans",
    "EventName": "TagResource",
    "Description": "Adds the specified tags to the specified resource"
  },
  {
    "API": "savingsplans:UntagResource",
    "EventSource": "savingsplans",
    "EventName": "UntagResource",
    "Description": "Removes the specified tags from the specified resource"
  },
  {
    "API": "scheduler:CreateSchedule",
    "EventSource": "scheduler",
    "EventName": "CreateSchedule",
    "Description": "Creates the specified schedule"
  },
  {
    "API": "scheduler:CreateScheduleGroup",
    "EventSource": "scheduler",
    "EventName": "CreateScheduleGroup",
    "Description": "Creates the specified schedule group"
  },
  {
    "API": "scheduler:DeleteSchedule",
    "EventSource": "scheduler",
    "EventName": "DeleteSchedule",
    "Description": "Deletes the specified schedule"
  },
  {
    "API": "scheduler:DeleteScheduleGroup",
    "EventSource": "scheduler",
    "EventName": "DeleteScheduleGroup",
    "Description": "Deletes the specified schedule group"
  },
  {
    "API": "scheduler:GeneratePresignedUrl",
    "EventSource": "scheduler",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "scheduler:GetSchedule",
    "EventSource": "scheduler",
    "EventName": "GetSchedule",
    "Description": "Retrieves the specified schedule"
  },
  {
    "API": "scheduler:GetScheduleGroup",
    "EventSource": "scheduler",
    "EventName": "GetScheduleGroup",
    "Description": "Retrieves the specified schedule group"
  },
  {
    "API": "scheduler:ListScheduleGroups",
    "EventSource": "scheduler",
    "EventName": "ListScheduleGroups",
    "Description": "Returns a paginated list of your schedule groups"
  },
  {
    "API": "scheduler:ListSchedules",
    "EventSource": "scheduler",
    "EventName": "ListSchedules",
    "Description": "Returns a paginated list of your EventBridge Scheduler schedules"
  },
  {
    "API": "scheduler:ListTagsForResource",
    "EventSource": "scheduler",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags associated with the Scheduler resource"
  },
  {
    "API": "scheduler:TagResource",
    "EventSource": "scheduler",
    "EventName": "TagResource",
    "Description": "Assigns one or more tags (key-value pairs) to the specified EventBridge Scheduler resource"
  },
  {
    "API": "scheduler:UntagResource",
    "EventSource": "scheduler",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags from the specified EventBridge Scheduler schedule group"
  },
  {
    "API": "scheduler:UpdateSchedule",
    "EventSource": "scheduler",
    "EventName": "UpdateSchedule",
    "Description": "Updates the specified schedule"
  },
  {
    "API": "schemas:CreateDiscoverer",
    "EventSource": "schemas",
    "EventName": "CreateDiscoverer",
    "Description": "Creates a discoverer"
  },
  {
    "API": "schemas:CreateRegistry",
    "EventSource": "schemas",
    "EventName": "CreateRegistry",
    "Description": "Creates a registry"
  },
  {
    "API": "schemas:CreateSchema",
    "EventSource": "schemas",
    "EventName": "CreateSchema",
    "Description": "Creates a schema definition"
  },
  {
    "API": "schemas:DeleteDiscoverer",
    "EventSource": "schemas",
    "EventName": "DeleteDiscoverer",
    "Description": "Deletes a discoverer"
  },
  {
    "API": "schemas:DeleteRegistry",
    "EventSource": "schemas",
    "EventName": "DeleteRegistry",
    "Description": "Deletes a Registry"
  },
  {
    "API": "schemas:DeleteResourcePolicy",
    "EventSource": "schemas",
    "EventName": "DeleteResourcePolicy",
    "Description": "Delete the resource-based policy attached to the specified registry"
  },
  {
    "API": "schemas:DeleteSchema",
    "EventSource": "schemas",
    "EventName": "DeleteSchema",
    "Description": "Delete a schema definition"
  },
  {
    "API": "schemas:DeleteSchemaVersion",
    "EventSource": "schemas",
    "EventName": "DeleteSchemaVersion",
    "Description": "Delete the schema version definition"
  },
  {
    "API": "schemas:DescribeCodeBinding",
    "EventSource": "schemas",
    "EventName": "DescribeCodeBinding",
    "Description": "Describe the code binding URI"
  },
  {
    "API": "schemas:DescribeDiscoverer",
    "EventSource": "schemas",
    "EventName": "DescribeDiscoverer",
    "Description": "Describes the discoverer"
  },
  {
    "API": "schemas:DescribeRegistry",
    "EventSource": "schemas",
    "EventName": "DescribeRegistry",
    "Description": "Describes the registry"
  },
  {
    "API": "schemas:DescribeSchema",
    "EventSource": "schemas",
    "EventName": "DescribeSchema",
    "Description": "Retrieve the schema definition"
  },
  {
    "API": "schemas:ExportSchema",
    "EventSource": "schemas",
    "EventName": "ExportSchema",
    "Description": "See also: `AWS API Documentation <https://docs"
  },
  {
    "API": "schemas:GeneratePresignedUrl",
    "EventSource": "schemas",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "schemas:GetCodeBindingSource",
    "EventSource": "schemas",
    "EventName": "GetCodeBindingSource",
    "Description": "Get the code binding source URI"
  },
  {
    "API": "schemas:GetDiscoveredSchema",
    "EventSource": "schemas",
    "EventName": "GetDiscoveredSchema",
    "Description": "Get the discovered schema that was generated based on sampled events"
  },
  {
    "API": "schemas:GetResourcePolicy",
    "EventSource": "schemas",
    "EventName": "GetResourcePolicy",
    "Description": "Retrieves the resource-based policy attached to a given registry"
  },
  {
    "API": "schemas:ListDiscoverers",
    "EventSource": "schemas",
    "EventName": "ListDiscoverers",
    "Description": "List the discoverers"
  },
  {
    "API": "schemas:ListRegistries",
    "EventSource": "schemas",
    "EventName": "ListRegistries",
    "Description": "List the registries"
  },
  {
    "API": "schemas:ListSchemaVersions",
    "EventSource": "schemas",
    "EventName": "ListSchemaVersions",
    "Description": "Provides a list of the schema versions and related information"
  },
  {
    "API": "schemas:ListSchemas",
    "EventSource": "schemas",
    "EventName": "ListSchemas",
    "Description": "List the schemas"
  },
  {
    "API": "schemas:ListTagsForResource",
    "EventSource": "schemas",
    "EventName": "ListTagsForResource",
    "Description": "Get tags for resource"
  },
  {
    "API": "schemas:PutCodeBinding",
    "EventSource": "schemas",
    "EventName": "PutCodeBinding",
    "Description": "Put code binding URI"
  },
  {
    "API": "schemas:PutResourcePolicy",
    "EventSource": "schemas",
    "EventName": "PutResourcePolicy",
    "Description": "The name of the policy"
  },
  {
    "API": "schemas:SearchSchemas",
    "EventSource": "schemas",
    "EventName": "SearchSchemas",
    "Description": "Search the schemas"
  },
  {
    "API": "schemas:StartDiscoverer",
    "EventSource": "schemas",
    "EventName": "StartDiscoverer",
    "Description": "Starts the discoverer"
  },
  {
    "API": "schemas:StopDiscoverer",
    "EventSource": "schemas",
    "EventName": "StopDiscoverer",
    "Description": "Stops the discoverer"
  },
  {
    "API": "schemas:TagResource",
    "EventSource": "schemas",
    "EventName": "TagResource",
    "Description": "Add tags to a resource"
  },
  {
    "API": "schemas:UntagResource",
    "EventSource": "schemas",
    "EventName": "UntagResource",
    "Description": "Removes tags from a resource"
  },
  {
    "API": "schemas:UpdateDiscoverer",
    "EventSource": "schemas",
    "EventName": "UpdateDiscoverer",
    "Description": "Updates the discoverer"
  },
  {
    "API": "schemas:UpdateRegistry",
    "EventSource": "schemas",
    "EventName": "UpdateRegistry",
    "Description": "Updates a registry"
  },
  {
    "API": "schemas:UpdateSchema",
    "EventSource": "schemas",
    "EventName": "UpdateSchema",
    "Description": "Updates the schema definition"
  },
  {
    "API": "sdb:BatchDeleteAttributes",
    "EventSource": "sdb",
    "EventName": "BatchDeleteAttributes",
    "Description": "Performs multiple DeleteAttributes operations in a single call, which reduces round trips and latencies"
  },
  {
    "API": "sdb:BatchPutAttributes",
    "EventSource": "sdb",
    "EventName": "BatchPutAttributes",
    "Description": "The ``BatchPutAttributes`` operation creates or replaces attributes within one or more items"
  },
  {
    "API": "sdb:CreateDomain",
    "EventSource": "sdb",
    "EventName": "CreateDomain",
    "Description": "The ``CreateDomain`` operation creates a new domain"
  },
  {
    "API": "sdb:DeleteAttributes",
    "EventSource": "sdb",
    "EventName": "DeleteAttributes",
    "Description": "Deletes one or more attributes associated with an item"
  },
  {
    "API": "sdb:DeleteDomain",
    "EventSource": "sdb",
    "EventName": "DeleteDomain",
    "Description": "The ``DeleteDomain`` operation deletes a domain"
  },
  {
    "API": "sdb:DomainMetadata",
    "EventSource": "sdb",
    "EventName": "DomainMetadata",
    "Description": "Returns information about the domain, including when the domain was created, the number of items and attributes in the domain, and the size of the attribute names and values"
  },
  {
    "API": "sdb:GeneratePresignedUrl",
    "EventSource": "sdb",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "sdb:GetAttributes",
    "EventSource": "sdb",
    "EventName": "GetAttributes",
    "Description": "Returns all of the attributes associated with the specified item"
  },
  {
    "API": "sdb:ListDomains",
    "EventSource": "sdb",
    "EventName": "ListDomains",
    "Description": "The ``ListDomains`` operation lists all domains associated with the Access Key ID"
  },
  {
    "API": "sdb:PutAttributes",
    "EventSource": "sdb",
    "EventName": "PutAttributes",
    "Description": "The PutAttributes operation creates or replaces attributes in an item"
  },
  {
    "API": "secretsmanager:BatchGetSecretValue",
    "EventSource": "secretsmanager",
    "EventName": "BatchGetSecretValue",
    "Description": "Retrieves the contents of the encrypted fields ``SecretString`` or ``SecretBinary`` for up to 20 secrets"
  },
  {
    "API": "secretsmanager:CancelRotateSecret",
    "EventSource": "secretsmanager",
    "EventName": "CancelRotateSecret",
    "Description": "Turns off automatic rotation, and if a rotation is currently in progress, cancels the rotation"
  },
  {
    "API": "secretsmanager:CreateSecret",
    "EventSource": "secretsmanager",
    "EventName": "CreateSecret",
    "Description": "Creates a new secret"
  },
  {
    "API": "secretsmanager:DeleteResourcePolicy",
    "EventSource": "secretsmanager",
    "EventName": "DeleteResourcePolicy",
    "Description": "Deletes the resource-based permission policy attached to the secret"
  },
  {
    "API": "secretsmanager:DeleteSecret",
    "EventSource": "secretsmanager",
    "EventName": "DeleteSecret",
    "Description": "Deletes a secret and all of its versions"
  },
  {
    "API": "secretsmanager:DescribeSecret",
    "EventSource": "secretsmanager",
    "EventName": "DescribeSecret",
    "Description": "Retrieves the details of a secret"
  },
  {
    "API": "secretsmanager:GeneratePresignedUrl",
    "EventSource": "secretsmanager",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "secretsmanager:GetRandomPassword",
    "EventSource": "secretsmanager",
    "EventName": "GetRandomPassword",
    "Description": "Generates a random password"
  },
  {
    "API": "secretsmanager:GetResourcePolicy",
    "EventSource": "secretsmanager",
    "EventName": "GetResourcePolicy",
    "Description": "Retrieves the JSON text of the resource-based policy document attached to the secret"
  },
  {
    "API": "secretsmanager:GetSecretValue",
    "EventSource": "secretsmanager",
    "EventName": "GetSecretValue",
    "Description": "Retrieves the contents of the encrypted fields ``SecretString`` or ``SecretBinary`` from the specified version of a secret, whichever contains content"
  },
  {
    "API": "secretsmanager:ListSecretVersionIds",
    "EventSource": "secretsmanager",
    "EventName": "ListSecretVersionIds",
    "Description": "Lists the versions of a secret"
  },
  {
    "API": "secretsmanager:ListSecrets",
    "EventSource": "secretsmanager",
    "EventName": "ListSecrets",
    "Description": "Lists the secrets that are stored by Secrets Manager in the Amazon Web Services account, not including secrets that are marked for deletion"
  },
  {
    "API": "secretsmanager:PutResourcePolicy",
    "EventSource": "secretsmanager",
    "EventName": "PutResourcePolicy",
    "Description": "Attaches a resource-based permission policy to a secret"
  },
  {
    "API": "secretsmanager:PutSecretValue",
    "EventSource": "secretsmanager",
    "EventName": "PutSecretValue",
    "Description": "Creates a new version with a new encrypted secret value and attaches it to the secret"
  },
  {
    "API": "secretsmanager:RemoveRegionsFromReplication",
    "EventSource": "secretsmanager",
    "EventName": "RemoveRegionsFromReplication",
    "Description": "For a secret that is replicated to other Regions, deletes the secret replicas from the Regions you specify"
  },
  {
    "API": "secretsmanager:ReplicateSecretToRegions",
    "EventSource": "secretsmanager",
    "EventName": "ReplicateSecretToRegions",
    "Description": "Replicates the secret to a new Regions"
  },
  {
    "API": "secretsmanager:RestoreSecret",
    "EventSource": "secretsmanager",
    "EventName": "RestoreSecret",
    "Description": "Cancels the scheduled deletion of a secret by removing the ``DeletedDate`` time stamp"
  },
  {
    "API": "secretsmanager:RotateSecret",
    "EventSource": "secretsmanager",
    "EventName": "RotateSecret",
    "Description": "Configures and starts the asynchronous process of rotating the secret"
  },
  {
    "API": "secretsmanager:StopReplicationToReplica",
    "EventSource": "secretsmanager",
    "EventName": "StopReplicationToReplica",
    "Description": "Removes the link between the replica secret and the primary secret and promotes the replica to a primary secret in the replica Region"
  },
  {
    "API": "secretsmanager:TagResource",
    "EventSource": "secretsmanager",
    "EventName": "TagResource",
    "Description": "Attaches tags to a secret"
  },
  {
    "API": "secretsmanager:UntagResource",
    "EventSource": "secretsmanager",
    "EventName": "UntagResource",
    "Description": "Removes specific tags from a secret"
  },
  {
    "API": "secretsmanager:UpdateSecret",
    "EventSource": "secretsmanager",
    "EventName": "UpdateSecret",
    "Description": "Modifies the details of a secret, including metadata and the secret value"
  },
  {
    "API": "secretsmanager:UpdateSecretVersionStage",
    "EventSource": "secretsmanager",
    "EventName": "UpdateSecretVersionStage",
    "Description": "Modifies the staging labels attached to a version of a secret"
  },
  {
    "API": "secretsmanager:ValidateResourcePolicy",
    "EventSource": "secretsmanager",
    "EventName": "ValidateResourcePolicy",
    "Description": "Validates that a resource policy does not grant a wide range of principals access to your secret"
  },
  {
    "API": "securityhub:AcceptAdministratorInvitation",
    "EventSource": "securityhub",
    "EventName": "AcceptAdministratorInvitation",
    "Description": "Accepts the invitation to be a member account and be monitored by the Security Hub administrator account that the invitation was sent from"
  },
  {
    "API": "securityhub:AcceptInvitation",
    "EventSource": "securityhub",
    "EventName": "AcceptInvitation",
    "Description": "This method is deprecated"
  },
  {
    "API": "securityhub:BatchDeleteAutomationRules",
    "EventSource": "securityhub",
    "EventName": "BatchDeleteAutomationRules",
    "Description": "Deletes one or more automation rules"
  },
  {
    "API": "securityhub:BatchDisableStandards",
    "EventSource": "securityhub",
    "EventName": "BatchDisableStandards",
    "Description": "Disables the standards specified by the provided ``StandardsSubscriptionArns``"
  },
  {
    "API": "securityhub:BatchEnableStandards",
    "EventSource": "securityhub",
    "EventName": "BatchEnableStandards",
    "Description": "Enables the standards specified by the provided ``StandardsArn``"
  },
  {
    "API": "securityhub:BatchGetAutomationRules",
    "EventSource": "securityhub",
    "EventName": "BatchGetAutomationRules",
    "Description": "Retrieves a list of details for automation rules based on rule Amazon Resource Names (ARNs)"
  },
  {
    "API": "securityhub:BatchGetConfigurationPolicyAssociations",
    "EventSource": "securityhub",
    "EventName": "BatchGetConfigurationPolicyAssociations",
    "Description": "Returns associations between an Security Hub configuration and a batch of target accounts, organizational units, or the root"
  },
  {
    "API": "securityhub:BatchGetSecurityControls",
    "EventSource": "securityhub",
    "EventName": "BatchGetSecurityControls",
    "Description": "Provides details about a batch of security controls for the current Amazon Web Services account and Amazon Web Services Region"
  },
  {
    "API": "securityhub:BatchGetStandardsControlAssociations",
    "EventSource": "securityhub",
    "EventName": "BatchGetStandardsControlAssociations",
    "Description": "For a batch of security controls and standards, identifies whether each control is currently enabled or disabled in a standard"
  },
  {
    "API": "securityhub:BatchImportFindings",
    "EventSource": "securityhub",
    "EventName": "BatchImportFindings",
    "Description": "Imports security findings generated by a finding provider into Security Hub"
  },
  {
    "API": "securityhub:BatchUpdateAutomationRules",
    "EventSource": "securityhub",
    "EventName": "BatchUpdateAutomationRules",
    "Description": "Updates one or more automation rules based on rule Amazon Resource Names (ARNs) and input parameters"
  },
  {
    "API": "securityhub:BatchUpdateFindings",
    "EventSource": "securityhub",
    "EventName": "BatchUpdateFindings",
    "Description": "Used by Security Hub customers to update information about their investigation into a finding"
  },
  {
    "API": "securityhub:BatchUpdateStandardsControlAssociations",
    "EventSource": "securityhub",
    "EventName": "BatchUpdateStandardsControlAssociations",
    "Description": "For a batch of security controls and standards, this operation updates the enablement status of a control in a standard"
  },
  {
    "API": "securityhub:CreateActionTarget",
    "EventSource": "securityhub",
    "EventName": "CreateActionTarget",
    "Description": "Creates a custom action target in Security Hub"
  },
  {
    "API": "securityhub:CreateAutomationRule",
    "EventSource": "securityhub",
    "EventName": "CreateAutomationRule",
    "Description": "Creates an automation rule based on input parameters"
  },
  {
    "API": "securityhub:CreateConfigurationPolicy",
    "EventSource": "securityhub",
    "EventName": "CreateConfigurationPolicy",
    "Description": "Creates a configuration policy with the defined configuration"
  },
  {
    "API": "securityhub:CreateFindingAggregator",
    "EventSource": "securityhub",
    "EventName": "CreateFindingAggregator",
    "Description": "Used to enable finding aggregation"
  },
  {
    "API": "securityhub:CreateInsight",
    "EventSource": "securityhub",
    "EventName": "CreateInsight",
    "Description": "Creates a custom insight in Security Hub"
  },
  {
    "API": "securityhub:CreateMembers",
    "EventSource": "securityhub",
    "EventName": "CreateMembers",
    "Description": "Creates a member association in Security Hub between the specified accounts and the account used to make the request, which is the administrator account"
  },
  {
    "API": "securityhub:DeclineInvitations",
    "EventSource": "securityhub",
    "EventName": "DeclineInvitations",
    "Description": "Declines invitations to become a member account"
  },
  {
    "API": "securityhub:DeleteActionTarget",
    "EventSource": "securityhub",
    "EventName": "DeleteActionTarget",
    "Description": "Deletes a custom action target from Security Hub"
  },
  {
    "API": "securityhub:DeleteConfigurationPolicy",
    "EventSource": "securityhub",
    "EventName": "DeleteConfigurationPolicy",
    "Description": "Deletes a configuration policy"
  },
  {
    "API": "securityhub:DeleteFindingAggregator",
    "EventSource": "securityhub",
    "EventName": "DeleteFindingAggregator",
    "Description": "Deletes a finding aggregator"
  },
  {
    "API": "securityhub:DeleteInsight",
    "EventSource": "securityhub",
    "EventName": "DeleteInsight",
    "Description": "Deletes the insight specified by the ``InsightArn``"
  },
  {
    "API": "securityhub:DeleteInvitations",
    "EventSource": "securityhub",
    "EventName": "DeleteInvitations",
    "Description": "Deletes invitations received by the Amazon Web Services account to become a member account"
  },
  {
    "API": "securityhub:DeleteMembers",
    "EventSource": "securityhub",
    "EventName": "DeleteMembers",
    "Description": "Deletes the specified member accounts from Security Hub"
  },
  {
    "API": "securityhub:DescribeActionTargets",
    "EventSource": "securityhub",
    "EventName": "DescribeActionTargets",
    "Description": "Returns a list of the custom action targets in Security Hub in your account"
  },
  {
    "API": "securityhub:DescribeHub",
    "EventSource": "securityhub",
    "EventName": "DescribeHub",
    "Description": "Returns details about the Hub resource in your account, including the ``HubArn`` and the time when you enabled Security Hub"
  },
  {
    "API": "securityhub:DescribeOrganizationConfiguration",
    "EventSource": "securityhub",
    "EventName": "DescribeOrganizationConfiguration",
    "Description": "Returns information about the way your organization is configured in Security Hub"
  },
  {
    "API": "securityhub:DescribeProducts",
    "EventSource": "securityhub",
    "EventName": "DescribeProducts",
    "Description": "Returns information about product integrations in Security Hub"
  },
  {
    "API": "securityhub:DescribeStandards",
    "EventSource": "securityhub",
    "EventName": "DescribeStandards",
    "Description": "Returns a list of the available standards in Security Hub"
  },
  {
    "API": "securityhub:DescribeStandardsControls",
    "EventSource": "securityhub",
    "EventName": "DescribeStandardsControls",
    "Description": "Returns a list of security standards controls"
  },
  {
    "API": "securityhub:DisableImportFindingsForProduct",
    "EventSource": "securityhub",
    "EventName": "DisableImportFindingsForProduct",
    "Description": "Disables the integration of the specified product with Security Hub"
  },
  {
    "API": "securityhub:DisableOrganizationAdminAccount",
    "EventSource": "securityhub",
    "EventName": "DisableOrganizationAdminAccount",
    "Description": "Disables a Security Hub administrator account"
  },
  {
    "API": "securityhub:DisableSecurityHub",
    "EventSource": "securityhub",
    "EventName": "DisableSecurityHub",
    "Description": "Disables Security Hub in your account only in the current Amazon Web Services Region"
  },
  {
    "API": "securityhub:DisassociateFromAdministratorAccount",
    "EventSource": "securityhub",
    "EventName": "DisassociateFromAdministratorAccount",
    "Description": "Disassociates the current Security Hub member account from the associated administrator account"
  },
  {
    "API": "securityhub:DisassociateFromMasterAccount",
    "EventSource": "securityhub",
    "EventName": "DisassociateFromMasterAccount",
    "Description": "This method is deprecated"
  },
  {
    "API": "securityhub:DisassociateMembers",
    "EventSource": "securityhub",
    "EventName": "DisassociateMembers",
    "Description": "Disassociates the specified member accounts from the associated administrator account"
  },
  {
    "API": "securityhub:EnableImportFindingsForProduct",
    "EventSource": "securityhub",
    "EventName": "EnableImportFindingsForProduct",
    "Description": "Enables the integration of a partner product with Security Hub"
  },
  {
    "API": "securityhub:EnableOrganizationAdminAccount",
    "EventSource": "securityhub",
    "EventName": "EnableOrganizationAdminAccount",
    "Description": "Designates the Security Hub administrator account for an organization"
  },
  {
    "API": "securityhub:EnableSecurityHub",
    "EventSource": "securityhub",
    "EventName": "EnableSecurityHub",
    "Description": "Enables Security Hub for your account in the current Region or the Region you specify in the request"
  },
  {
    "API": "securityhub:GeneratePresignedUrl",
    "EventSource": "securityhub",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "securityhub:GetAdministratorAccount",
    "EventSource": "securityhub",
    "EventName": "GetAdministratorAccount",
    "Description": "Provides the details for the Security Hub administrator account for the current member account"
  },
  {
    "API": "securityhub:GetConfigurationPolicy",
    "EventSource": "securityhub",
    "EventName": "GetConfigurationPolicy",
    "Description": "Provides information about a configuration policy"
  },
  {
    "API": "securityhub:GetConfigurationPolicyAssociation",
    "EventSource": "securityhub",
    "EventName": "GetConfigurationPolicyAssociation",
    "Description": "Returns the association between a configuration and a target account, organizational unit, or the root"
  },
  {
    "API": "securityhub:GetEnabledStandards",
    "EventSource": "securityhub",
    "EventName": "GetEnabledStandards",
    "Description": "Returns a list of the standards that are currently enabled"
  },
  {
    "API": "securityhub:GetFindingAggregator",
    "EventSource": "securityhub",
    "EventName": "GetFindingAggregator",
    "Description": "Returns the current finding aggregation configuration"
  },
  {
    "API": "securityhub:GetFindingHistory",
    "EventSource": "securityhub",
    "EventName": "GetFindingHistory",
    "Description": "Returns history for a Security Hub finding in the last 90 days"
  },
  {
    "API": "securityhub:GetFindings",
    "EventSource": "securityhub",
    "EventName": "GetFindings",
    "Description": "Returns a list of findings that match the specified criteria"
  },
  {
    "API": "securityhub:GetInsightResults",
    "EventSource": "securityhub",
    "EventName": "GetInsightResults",
    "Description": "Lists the results of the Security Hub insight specified by the insight ARN"
  },
  {
    "API": "securityhub:GetInsights",
    "EventSource": "securityhub",
    "EventName": "GetInsights",
    "Description": "Lists and describes insights for the specified insight ARNs"
  },
  {
    "API": "securityhub:GetInvitationsCount",
    "EventSource": "securityhub",
    "EventName": "GetInvitationsCount",
    "Description": "Returns the count of all Security Hub membership invitations that were sent to the current member account, not including the currently accepted invitation"
  },
  {
    "API": "securityhub:GetMasterAccount",
    "EventSource": "securityhub",
    "EventName": "GetMasterAccount",
    "Description": "This method is deprecated"
  },
  {
    "API": "securityhub:GetMembers",
    "EventSource": "securityhub",
    "EventName": "GetMembers",
    "Description": "Returns the details for the Security Hub member accounts for the specified account IDs"
  },
  {
    "API": "securityhub:GetSecurityControlDefinition",
    "EventSource": "securityhub",
    "EventName": "GetSecurityControlDefinition",
    "Description": "Retrieves the definition of a security control"
  },
  {
    "API": "securityhub:InviteMembers",
    "EventSource": "securityhub",
    "EventName": "InviteMembers",
    "Description": "Invites other Amazon Web Services accounts to become member accounts for the Security Hub administrator account that the invitation is sent from"
  },
  {
    "API": "securityhub:ListAutomationRules",
    "EventSource": "securityhub",
    "EventName": "ListAutomationRules",
    "Description": "A list of automation rules and their metadata for the calling account"
  },
  {
    "API": "securityhub:ListConfigurationPolicies",
    "EventSource": "securityhub",
    "EventName": "ListConfigurationPolicies",
    "Description": "Lists the configuration policies that the Security Hub delegated administrator has created for your organization"
  },
  {
    "API": "securityhub:ListConfigurationPolicyAssociations",
    "EventSource": "securityhub",
    "EventName": "ListConfigurationPolicyAssociations",
    "Description": "Provides information about the associations for your configuration policies and self-managed behavior"
  },
  {
    "API": "securityhub:ListEnabledProductsForImport",
    "EventSource": "securityhub",
    "EventName": "ListEnabledProductsForImport",
    "Description": "Lists all findings-generating solutions (products) that you are subscribed to receive findings from in Security Hub"
  },
  {
    "API": "securityhub:ListFindingAggregators",
    "EventSource": "securityhub",
    "EventName": "ListFindingAggregators",
    "Description": "If finding aggregation is enabled, then ``ListFindingAggregators`` returns the ARN of the finding aggregator"
  },
  {
    "API": "securityhub:ListInvitations",
    "EventSource": "securityhub",
    "EventName": "ListInvitations",
    "Description": "Lists all Security Hub membership invitations that were sent to the current Amazon Web Services account"
  },
  {
    "API": "securityhub:ListMembers",
    "EventSource": "securityhub",
    "EventName": "ListMembers",
    "Description": "Lists details about all member accounts for the current Security Hub administrator account"
  },
  {
    "API": "securityhub:ListOrganizationAdminAccounts",
    "EventSource": "securityhub",
    "EventName": "ListOrganizationAdminAccounts",
    "Description": "Lists the Security Hub administrator accounts"
  },
  {
    "API": "securityhub:ListSecurityControlDefinitions",
    "EventSource": "securityhub",
    "EventName": "ListSecurityControlDefinitions",
    "Description": "Lists all of the security controls that apply to a specified standard"
  },
  {
    "API": "securityhub:ListStandardsControlAssociations",
    "EventSource": "securityhub",
    "EventName": "ListStandardsControlAssociations",
    "Description": "Specifies whether a control is currently enabled or disabled in each enabled standard in the calling account"
  },
  {
    "API": "securityhub:ListTagsForResource",
    "EventSource": "securityhub",
    "EventName": "ListTagsForResource",
    "Description": "Returns a list of tags associated with a resource"
  },
  {
    "API": "securityhub:StartConfigurationPolicyAssociation",
    "EventSource": "securityhub",
    "EventName": "StartConfigurationPolicyAssociation",
    "Description": "Associates a target account, organizational unit, or the root with a specified configuration"
  },
  {
    "API": "securityhub:StartConfigurationPolicyDisassociation",
    "EventSource": "securityhub",
    "EventName": "StartConfigurationPolicyDisassociation",
    "Description": "Disassociates a target account, organizational unit, or the root from a specified configuration"
  },
  {
    "API": "securityhub:TagResource",
    "EventSource": "securityhub",
    "EventName": "TagResource",
    "Description": "Adds one or more tags to a resource"
  },
  {
    "API": "securityhub:UntagResource",
    "EventSource": "securityhub",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags from a resource"
  },
  {
    "API": "securityhub:UpdateActionTarget",
    "EventSource": "securityhub",
    "EventName": "UpdateActionTarget",
    "Description": "Updates the name and description of a custom action target in Security Hub"
  },
  {
    "API": "securityhub:UpdateConfigurationPolicy",
    "EventSource": "securityhub",
    "EventName": "UpdateConfigurationPolicy",
    "Description": "Updates a configuration policy"
  },
  {
    "API": "securityhub:UpdateFindingAggregator",
    "EventSource": "securityhub",
    "EventName": "UpdateFindingAggregator",
    "Description": "Updates the finding aggregation configuration"
  },
  {
    "API": "securityhub:UpdateFindings",
    "EventSource": "securityhub",
    "EventName": "UpdateFindings",
    "Description": "``UpdateFindings`` is a deprecated operation"
  },
  {
    "API": "securityhub:UpdateInsight",
    "EventSource": "securityhub",
    "EventName": "UpdateInsight",
    "Description": "Updates the Security Hub insight identified by the specified insight ARN"
  },
  {
    "API": "securityhub:UpdateOrganizationConfiguration",
    "EventSource": "securityhub",
    "EventName": "UpdateOrganizationConfiguration",
    "Description": "Updates the configuration of your organization in Security Hub"
  },
  {
    "API": "securityhub:UpdateSecurityControl",
    "EventSource": "securityhub",
    "EventName": "UpdateSecurityControl",
    "Description": "Updates the properties of a security control"
  },
  {
    "API": "securityhub:UpdateSecurityHubConfiguration",
    "EventSource": "securityhub",
    "EventName": "UpdateSecurityHubConfiguration",
    "Description": "Updates configuration options for Security Hub"
  },
  {
    "API": "securityhub:UpdateStandardsControl",
    "EventSource": "securityhub",
    "EventName": "UpdateStandardsControl",
    "Description": "Used to control whether an individual security standard control is enabled or disabled"
  },
  {
    "API": "securitylake:CreateAwsLogSource",
    "EventSource": "securitylake",
    "EventName": "CreateAwsLogSource",
    "Description": "Adds a natively supported Amazon Web Service as an Amazon Security Lake source"
  },
  {
    "API": "securitylake:CreateCustomLogSource",
    "EventSource": "securitylake",
    "EventName": "CreateCustomLogSource",
    "Description": "Adds a third-party custom source in Amazon Security Lake, from the Amazon Web Services Region where you want to create a custom source"
  },
  {
    "API": "securitylake:CreateDataLake",
    "EventSource": "securitylake",
    "EventName": "CreateDataLake",
    "Description": "Initializes an Amazon Security Lake instance with the provided (or default) configuration"
  },
  {
    "API": "securitylake:CreateDataLakeExceptionSubscription",
    "EventSource": "securitylake",
    "EventName": "CreateDataLakeExceptionSubscription",
    "Description": "Creates the specified notification subscription in Amazon Security Lake for the organization you specify"
  },
  {
    "API": "securitylake:CreateDataLakeOrganizationConfiguration",
    "EventSource": "securitylake",
    "EventName": "CreateDataLakeOrganizationConfiguration",
    "Description": "Automatically enables Amazon Security Lake for new member accounts in your organization"
  },
  {
    "API": "securitylake:CreateSubscriber",
    "EventSource": "securitylake",
    "EventName": "CreateSubscriber",
    "Description": "Creates a subscription permission for accounts that are already enabled in Amazon Security Lake"
  },
  {
    "API": "securitylake:CreateSubscriberNotification",
    "EventSource": "securitylake",
    "EventName": "CreateSubscriberNotification",
    "Description": "Notifies the subscriber when new data is written to the data lake for the sources that the subscriber consumes in Security Lake"
  },
  {
    "API": "securitylake:DeleteAwsLogSource",
    "EventSource": "securitylake",
    "EventName": "DeleteAwsLogSource",
    "Description": "Removes a natively supported Amazon Web Service as an Amazon Security Lake source"
  },
  {
    "API": "securitylake:DeleteCustomLogSource",
    "EventSource": "securitylake",
    "EventName": "DeleteCustomLogSource",
    "Description": "Removes a custom log source from Amazon Security Lake, to stop sending data from the custom source to Security Lake"
  },
  {
    "API": "securitylake:DeleteDataLake",
    "EventSource": "securitylake",
    "EventName": "DeleteDataLake",
    "Description": "When you disable Amazon Security Lake from your account, Security Lake is disabled in all Amazon Web Services Regions and it stops collecting data from your sources"
  },
  {
    "API": "securitylake:DeleteDataLakeExceptionSubscription",
    "EventSource": "securitylake",
    "EventName": "DeleteDataLakeExceptionSubscription",
    "Description": "Deletes the specified notification subscription in Amazon Security Lake for the organization you specify"
  },
  {
    "API": "securitylake:DeleteDataLakeOrganizationConfiguration",
    "EventSource": "securitylake",
    "EventName": "DeleteDataLakeOrganizationConfiguration",
    "Description": "Turns off automatic enablement of Amazon Security Lake for member accounts that are added to an organization in Organizations"
  },
  {
    "API": "securitylake:DeleteSubscriber",
    "EventSource": "securitylake",
    "EventName": "DeleteSubscriber",
    "Description": "Deletes the subscription permission and all notification settings for accounts that are already enabled in Amazon Security Lake"
  },
  {
    "API": "securitylake:DeleteSubscriberNotification",
    "EventSource": "securitylake",
    "EventName": "DeleteSubscriberNotification",
    "Description": "Deletes the specified notification subscription in Amazon Security Lake for the organization you specify"
  },
  {
    "API": "securitylake:DeregisterDataLakeDelegatedAdministrator",
    "EventSource": "securitylake",
    "EventName": "DeregisterDataLakeDelegatedAdministrator",
    "Description": "Deletes the Amazon Security Lake delegated administrator account for the organization"
  },
  {
    "API": "securitylake:GeneratePresignedUrl",
    "EventSource": "securitylake",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "securitylake:GetDataLakeExceptionSubscription",
    "EventSource": "securitylake",
    "EventName": "GetDataLakeExceptionSubscription",
    "Description": "Retrieves the details of exception notifications for the account in Amazon Security Lake"
  },
  {
    "API": "securitylake:GetDataLakeOrganizationConfiguration",
    "EventSource": "securitylake",
    "EventName": "GetDataLakeOrganizationConfiguration",
    "Description": "Retrieves the configuration that will be automatically set up for accounts added to the organization after the organization has onboarded to Amazon Security Lake"
  },
  {
    "API": "securitylake:GetDataLakeSources",
    "EventSource": "securitylake",
    "EventName": "GetDataLakeSources",
    "Description": "Retrieves a snapshot of the current Region, including whether Amazon Security Lake is enabled for those accounts and which sources Security Lake is collecting data from"
  },
  {
    "API": "securitylake:GetSubscriber",
    "EventSource": "securitylake",
    "EventName": "GetSubscriber",
    "Description": "Retrieves the subscription information for the specified subscription ID"
  },
  {
    "API": "securitylake:ListDataLakeExceptions",
    "EventSource": "securitylake",
    "EventName": "ListDataLakeExceptions",
    "Description": "Lists the Amazon Security Lake exceptions that you can use to find the source of problems and fix them"
  },
  {
    "API": "securitylake:ListDataLakes",
    "EventSource": "securitylake",
    "EventName": "ListDataLakes",
    "Description": "Retrieves the Amazon Security Lake configuration object for the specified Amazon Web Services Regions"
  },
  {
    "API": "securitylake:ListLogSources",
    "EventSource": "securitylake",
    "EventName": "ListLogSources",
    "Description": "Retrieves the log sources in the current Amazon Web Services Region"
  },
  {
    "API": "securitylake:ListSubscribers",
    "EventSource": "securitylake",
    "EventName": "ListSubscribers",
    "Description": "List all subscribers for the specific Amazon Security Lake account ID"
  },
  {
    "API": "securitylake:ListTagsForResource",
    "EventSource": "securitylake",
    "EventName": "ListTagsForResource",
    "Description": "Retrieves the tags (keys and values) that are associated with an Amazon Security Lake resource: a subscriber, or the data lake configuration for your Amazon Web Services account in a particular Amazon Web Services Region"
  },
  {
    "API": "securitylake:RegisterDataLakeDelegatedAdministrator",
    "EventSource": "securitylake",
    "EventName": "RegisterDataLakeDelegatedAdministrator",
    "Description": "Designates the Amazon Security Lake delegated administrator account for the organization"
  },
  {
    "API": "securitylake:TagResource",
    "EventSource": "securitylake",
    "EventName": "TagResource",
    "Description": "Adds or updates one or more tags that are associated with an Amazon Security Lake resource: a subscriber, or the data lake configuration for your Amazon Web Services account in a particular Amazon Web Services Region"
  },
  {
    "API": "securitylake:UntagResource",
    "EventSource": "securitylake",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags (keys and values) from an Amazon Security Lake resource: a subscriber, or the data lake configuration for your Amazon Web Services account in a particular Amazon Web Services Region"
  },
  {
    "API": "securitylake:UpdateDataLake",
    "EventSource": "securitylake",
    "EventName": "UpdateDataLake",
    "Description": "Specifies where to store your security data and for how long"
  },
  {
    "API": "securitylake:UpdateDataLakeExceptionSubscription",
    "EventSource": "securitylake",
    "EventName": "UpdateDataLakeExceptionSubscription",
    "Description": "Updates the specified notification subscription in Amazon Security Lake for the organization you specify"
  },
  {
    "API": "securitylake:UpdateSubscriber",
    "EventSource": "securitylake",
    "EventName": "UpdateSubscriber",
    "Description": "Updates an existing subscription for the given Amazon Security Lake account ID"
  },
  {
    "API": "securitylake:UpdateSubscriberNotification",
    "EventSource": "securitylake",
    "EventName": "UpdateSubscriberNotification",
    "Description": "Updates an existing notification method for the subscription (SQS or HTTPs endpoint) or switches the notification subscription endpoint for a subscriber"
  },
  {
    "API": "serverlessrepo:CreateApplication",
    "EventSource": "serverlessrepo",
    "EventName": "CreateApplication",
    "Description": "Creates an application, optionally including an AWS SAM file to create the first application version in the same call"
  },
  {
    "API": "serverlessrepo:CreateApplicationVersion",
    "EventSource": "serverlessrepo",
    "EventName": "CreateApplicationVersion",
    "Description": "Creates an application version"
  },
  {
    "API": "serverlessrepo:CreateCloudFormationChangeSet",
    "EventSource": "serverlessrepo",
    "EventName": "CreateCloudFormationChangeSet",
    "Description": "Creates an AWS CloudFormation change set for the given application"
  },
  {
    "API": "serverlessrepo:CreateCloudFormationTemplate",
    "EventSource": "serverlessrepo",
    "EventName": "CreateCloudFormationTemplate",
    "Description": "Creates an AWS CloudFormation template"
  },
  {
    "API": "serverlessrepo:DeleteApplication",
    "EventSource": "serverlessrepo",
    "EventName": "DeleteApplication",
    "Description": "Deletes the specified application"
  },
  {
    "API": "serverlessrepo:GeneratePresignedUrl",
    "EventSource": "serverlessrepo",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "serverlessrepo:GetApplication",
    "EventSource": "serverlessrepo",
    "EventName": "GetApplication",
    "Description": "Gets the specified application"
  },
  {
    "API": "serverlessrepo:GetApplicationPolicy",
    "EventSource": "serverlessrepo",
    "EventName": "GetApplicationPolicy",
    "Description": "Retrieves the policy for the application"
  },
  {
    "API": "serverlessrepo:GetCloudFormationTemplate",
    "EventSource": "serverlessrepo",
    "EventName": "GetCloudFormationTemplate",
    "Description": "Gets the specified AWS CloudFormation template"
  },
  {
    "API": "serverlessrepo:ListApplicationDependencies",
    "EventSource": "serverlessrepo",
    "EventName": "ListApplicationDependencies",
    "Description": "Retrieves the list of applications nested in the containing application"
  },
  {
    "API": "serverlessrepo:ListApplicationVersions",
    "EventSource": "serverlessrepo",
    "EventName": "ListApplicationVersions",
    "Description": "Lists versions for the specified application"
  },
  {
    "API": "serverlessrepo:ListApplications",
    "EventSource": "serverlessrepo",
    "EventName": "ListApplications",
    "Description": "Lists applications owned by the requester"
  },
  {
    "API": "serverlessrepo:PutApplicationPolicy",
    "EventSource": "serverlessrepo",
    "EventName": "PutApplicationPolicy",
    "Description": "Sets the permission policy for an application"
  },
  {
    "API": "serverlessrepo:UnshareApplication",
    "EventSource": "serverlessrepo",
    "EventName": "UnshareApplication",
    "Description": "Unshares an application from an AWS Organization"
  },
  {
    "API": "serverlessrepo:UpdateApplication",
    "EventSource": "serverlessrepo",
    "EventName": "UpdateApplication",
    "Description": "Updates the specified application"
  },
  {
    "API": "service-quotas:AssociateServiceQuotaTemplate",
    "EventSource": "service-quotas",
    "EventName": "AssociateServiceQuotaTemplate",
    "Description": "Associates your quota request template with your organization"
  },
  {
    "API": "service-quotas:DeleteServiceQuotaIncreaseRequestFromTemplate",
    "EventSource": "service-quotas",
    "EventName": "DeleteServiceQuotaIncreaseRequestFromTemplate",
    "Description": "Deletes the quota increase request for the specified quota from your quota request template"
  },
  {
    "API": "service-quotas:DisassociateServiceQuotaTemplate",
    "EventSource": "service-quotas",
    "EventName": "DisassociateServiceQuotaTemplate",
    "Description": "Disables your quota request template"
  },
  {
    "API": "service-quotas:GeneratePresignedUrl",
    "EventSource": "service-quotas",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "service-quotas:GetAssociationForServiceQuotaTemplate",
    "EventSource": "service-quotas",
    "EventName": "GetAssociationForServiceQuotaTemplate",
    "Description": "Retrieves the status of the association for the quota request template"
  },
  {
    "API": "service-quotas:GetAwsDefaultServiceQuota",
    "EventSource": "service-quotas",
    "EventName": "GetAwsDefaultServiceQuota",
    "Description": "Retrieves the default value for the specified quota"
  },
  {
    "API": "service-quotas:GetRequestedServiceQuotaChange",
    "EventSource": "service-quotas",
    "EventName": "GetRequestedServiceQuotaChange",
    "Description": "Retrieves information about the specified quota increase request"
  },
  {
    "API": "service-quotas:GetServiceQuota",
    "EventSource": "service-quotas",
    "EventName": "GetServiceQuota",
    "Description": "Retrieves the applied quota value for the specified quota"
  },
  {
    "API": "service-quotas:GetServiceQuotaIncreaseRequestFromTemplate",
    "EventSource": "service-quotas",
    "EventName": "GetServiceQuotaIncreaseRequestFromTemplate",
    "Description": "Retrieves information about the specified quota increase request in your quota request template"
  },
  {
    "API": "service-quotas:ListAwsDefaultServiceQuotas",
    "EventSource": "service-quotas",
    "EventName": "ListAwsDefaultServiceQuotas",
    "Description": "Lists the default values for the quotas for the specified Amazon Web Service"
  },
  {
    "API": "service-quotas:ListRequestedServiceQuotaChangeHistory",
    "EventSource": "service-quotas",
    "EventName": "ListRequestedServiceQuotaChangeHistory",
    "Description": "Retrieves the quota increase requests for the specified Amazon Web Service"
  },
  {
    "API": "service-quotas:ListRequestedServiceQuotaChangeHistoryByQuota",
    "EventSource": "service-quotas",
    "EventName": "ListRequestedServiceQuotaChangeHistoryByQuota",
    "Description": "Retrieves the quota increase requests for the specified quota"
  },
  {
    "API": "service-quotas:ListServiceQuotaIncreaseRequestsInTemplate",
    "EventSource": "service-quotas",
    "EventName": "ListServiceQuotaIncreaseRequestsInTemplate",
    "Description": "Lists the quota increase requests in the specified quota request template"
  },
  {
    "API": "service-quotas:ListServiceQuotas",
    "EventSource": "service-quotas",
    "EventName": "ListServiceQuotas",
    "Description": "Lists the applied quota values for the specified Amazon Web Service"
  },
  {
    "API": "service-quotas:ListServices",
    "EventSource": "service-quotas",
    "EventName": "ListServices",
    "Description": "Lists the names and codes for the Amazon Web Services integrated with Service Quotas"
  },
  {
    "API": "service-quotas:ListTagsForResource",
    "EventSource": "service-quotas",
    "EventName": "ListTagsForResource",
    "Description": "Returns a list of the tags assigned to the specified applied quota"
  },
  {
    "API": "service-quotas:PutServiceQuotaIncreaseRequestIntoTemplate",
    "EventSource": "service-quotas",
    "EventName": "PutServiceQuotaIncreaseRequestIntoTemplate",
    "Description": "Adds a quota increase request to your quota request template"
  },
  {
    "API": "service-quotas:RequestServiceQuotaIncrease",
    "EventSource": "service-quotas",
    "EventName": "RequestServiceQuotaIncrease",
    "Description": "Submits a quota increase request for the specified quota"
  },
  {
    "API": "service-quotas:TagResource",
    "EventSource": "service-quotas",
    "EventName": "TagResource",
    "Description": "Adds tags to the specified applied quota"
  },
  {
    "API": "service-quotas:UntagResource",
    "EventSource": "service-quotas",
    "EventName": "UntagResource",
    "Description": "Removes tags from the specified applied quota"
  },
  {
    "API": "servicecatalog:AcceptPortfolioShare",
    "EventSource": "servicecatalog",
    "EventName": "AcceptPortfolioShare",
    "Description": "Accepts an offer to share the specified portfolio"
  },
  {
    "API": "servicecatalog:AssociateBudgetWithResource",
    "EventSource": "servicecatalog",
    "EventName": "AssociateBudgetWithResource",
    "Description": "Associates the specified budget with the specified resource"
  },
  {
    "API": "servicecatalog:AssociatePrincipalWithPortfolio",
    "EventSource": "servicecatalog",
    "EventName": "AssociatePrincipalWithPortfolio",
    "Description": "Associates the specified principal ARN with the specified portfolio"
  },
  {
    "API": "servicecatalog:AssociateProductWithPortfolio",
    "EventSource": "servicecatalog",
    "EventName": "AssociateProductWithPortfolio",
    "Description": "Associates the specified product with the specified portfolio"
  },
  {
    "API": "servicecatalog:AssociateServiceActionWithProvisioningArtifact",
    "EventSource": "servicecatalog",
    "EventName": "AssociateServiceActionWithProvisioningArtifact",
    "Description": "Associates a self-service action with a provisioning artifact"
  },
  {
    "API": "servicecatalog:AssociateTagOptionWithResource",
    "EventSource": "servicecatalog",
    "EventName": "AssociateTagOptionWithResource",
    "Description": "Associate the specified TagOption with the specified portfolio or product"
  },
  {
    "API": "servicecatalog:BatchAssociateServiceActionWithProvisioningArtifact",
    "EventSource": "servicecatalog",
    "EventName": "BatchAssociateServiceActionWithProvisioningArtifact",
    "Description": "Associates multiple self-service actions with provisioning artifacts"
  },
  {
    "API": "servicecatalog:BatchDisassociateServiceActionFromProvisioningArtifact",
    "EventSource": "servicecatalog",
    "EventName": "BatchDisassociateServiceActionFromProvisioningArtifact",
    "Description": "Disassociates a batch of self-service actions from the specified provisioning artifact"
  },
  {
    "API": "servicecatalog:CopyProduct",
    "EventSource": "servicecatalog",
    "EventName": "CopyProduct",
    "Description": "Copies the specified source product to the specified target product or a new product"
  },
  {
    "API": "servicecatalog:CreateConstraint",
    "EventSource": "servicecatalog",
    "EventName": "CreateConstraint",
    "Description": "Creates a constraint"
  },
  {
    "API": "servicecatalog:CreatePortfolio",
    "EventSource": "servicecatalog",
    "EventName": "CreatePortfolio",
    "Description": "Creates a portfolio"
  },
  {
    "API": "servicecatalog:CreatePortfolioShare",
    "EventSource": "servicecatalog",
    "EventName": "CreatePortfolioShare",
    "Description": "Shares the specified portfolio with the specified account or organization node"
  },
  {
    "API": "servicecatalog:CreateProduct",
    "EventSource": "servicecatalog",
    "EventName": "CreateProduct",
    "Description": "Creates a product"
  },
  {
    "API": "servicecatalog:CreateProvisionedProductPlan",
    "EventSource": "servicecatalog",
    "EventName": "CreateProvisionedProductPlan",
    "Description": "Creates a plan"
  },
  {
    "API": "servicecatalog:CreateProvisioningArtifact",
    "EventSource": "servicecatalog",
    "EventName": "CreateProvisioningArtifact",
    "Description": "Creates a provisioning artifact (also known as a version) for the specified product"
  },
  {
    "API": "servicecatalog:CreateServiceAction",
    "EventSource": "servicecatalog",
    "EventName": "CreateServiceAction",
    "Description": "Creates a self-service action"
  },
  {
    "API": "servicecatalog:CreateTagOption",
    "EventSource": "servicecatalog",
    "EventName": "CreateTagOption",
    "Description": "Creates a TagOption"
  },
  {
    "API": "servicecatalog:DeleteConstraint",
    "EventSource": "servicecatalog",
    "EventName": "DeleteConstraint",
    "Description": "Deletes the specified constraint"
  },
  {
    "API": "servicecatalog:DeletePortfolio",
    "EventSource": "servicecatalog",
    "EventName": "DeletePortfolio",
    "Description": "Deletes the specified portfolio"
  },
  {
    "API": "servicecatalog:DeletePortfolioShare",
    "EventSource": "servicecatalog",
    "EventName": "DeletePortfolioShare",
    "Description": "Stops sharing the specified portfolio with the specified account or organization node"
  },
  {
    "API": "servicecatalog:DeleteProduct",
    "EventSource": "servicecatalog",
    "EventName": "DeleteProduct",
    "Description": "Deletes the specified product"
  },
  {
    "API": "servicecatalog:DeleteProvisionedProductPlan",
    "EventSource": "servicecatalog",
    "EventName": "DeleteProvisionedProductPlan",
    "Description": "Deletes the specified plan"
  },
  {
    "API": "servicecatalog:DeleteProvisioningArtifact",
    "EventSource": "servicecatalog",
    "EventName": "DeleteProvisioningArtifact",
    "Description": "Deletes the specified provisioning artifact (also known as a version) for the specified product"
  },
  {
    "API": "servicecatalog:DeleteServiceAction",
    "EventSource": "servicecatalog",
    "EventName": "DeleteServiceAction",
    "Description": "Deletes a self-service action"
  },
  {
    "API": "servicecatalog:DeleteTagOption",
    "EventSource": "servicecatalog",
    "EventName": "DeleteTagOption",
    "Description": "Deletes the specified TagOption"
  },
  {
    "API": "servicecatalog:DescribeConstraint",
    "EventSource": "servicecatalog",
    "EventName": "DescribeConstraint",
    "Description": "Gets information about the specified constraint"
  },
  {
    "API": "servicecatalog:DescribeCopyProductStatus",
    "EventSource": "servicecatalog",
    "EventName": "DescribeCopyProductStatus",
    "Description": "Gets the status of the specified copy product operation"
  },
  {
    "API": "servicecatalog:DescribePortfolio",
    "EventSource": "servicecatalog",
    "EventName": "DescribePortfolio",
    "Description": "Gets information about the specified portfolio"
  },
  {
    "API": "servicecatalog:DescribePortfolioShareStatus",
    "EventSource": "servicecatalog",
    "EventName": "DescribePortfolioShareStatus",
    "Description": "Gets the status of the specified portfolio share operation"
  },
  {
    "API": "servicecatalog:DescribePortfolioShares",
    "EventSource": "servicecatalog",
    "EventName": "DescribePortfolioShares",
    "Description": "Returns a summary of each of the portfolio shares that were created for the specified portfolio"
  },
  {
    "API": "servicecatalog:DescribeProduct",
    "EventSource": "servicecatalog",
    "EventName": "DescribeProduct",
    "Description": "Gets information about the specified product"
  },
  {
    "API": "servicecatalog:DescribeProductAsAdmin",
    "EventSource": "servicecatalog",
    "EventName": "DescribeProductAsAdmin",
    "Description": "Gets information about the specified product"
  },
  {
    "API": "servicecatalog:DescribeProductView",
    "EventSource": "servicecatalog",
    "EventName": "DescribeProductView",
    "Description": "Gets information about the specified product"
  },
  {
    "API": "servicecatalog:DescribeProvisionedProduct",
    "EventSource": "servicecatalog",
    "EventName": "DescribeProvisionedProduct",
    "Description": "Gets information about the specified provisioned product"
  },
  {
    "API": "servicecatalog:DescribeProvisionedProductPlan",
    "EventSource": "servicecatalog",
    "EventName": "DescribeProvisionedProductPlan",
    "Description": "Gets information about the resource changes for the specified plan"
  },
  {
    "API": "servicecatalog:DescribeProvisioningArtifact",
    "EventSource": "servicecatalog",
    "EventName": "DescribeProvisioningArtifact",
    "Description": "Gets information about the specified provisioning artifact (also known as a version) for the specified product"
  },
  {
    "API": "servicecatalog:DescribeProvisioningParameters",
    "EventSource": "servicecatalog",
    "EventName": "DescribeProvisioningParameters",
    "Description": "Gets information about the configuration required to provision the specified product using the specified provisioning artifact"
  },
  {
    "API": "servicecatalog:DescribeRecord",
    "EventSource": "servicecatalog",
    "EventName": "DescribeRecord",
    "Description": "Gets information about the specified request operation"
  },
  {
    "API": "servicecatalog:DescribeServiceAction",
    "EventSource": "servicecatalog",
    "EventName": "DescribeServiceAction",
    "Description": "Describes a self-service action"
  },
  {
    "API": "servicecatalog:DescribeServiceActionExecutionParameters",
    "EventSource": "servicecatalog",
    "EventName": "DescribeServiceActionExecutionParameters",
    "Description": "Finds the default parameters for a specific self-service action on a specific provisioned product and returns a map of the results to the user"
  },
  {
    "API": "servicecatalog:DescribeTagOption",
    "EventSource": "servicecatalog",
    "EventName": "DescribeTagOption",
    "Description": "Gets information about the specified TagOption"
  },
  {
    "API": "servicecatalog:DisableAwsOrganizationsAccess",
    "EventSource": "servicecatalog",
    "EventName": "DisableAwsOrganizationsAccess",
    "Description": "Disable portfolio sharing through the Organizations service"
  },
  {
    "API": "servicecatalog:DisassociateBudgetFromResource",
    "EventSource": "servicecatalog",
    "EventName": "DisassociateBudgetFromResource",
    "Description": "Disassociates the specified budget from the specified resource"
  },
  {
    "API": "servicecatalog:DisassociatePrincipalFromPortfolio",
    "EventSource": "servicecatalog",
    "EventName": "DisassociatePrincipalFromPortfolio",
    "Description": "Disassociates a previously associated principal ARN from a specified portfolio"
  },
  {
    "API": "servicecatalog:DisassociateProductFromPortfolio",
    "EventSource": "servicecatalog",
    "EventName": "DisassociateProductFromPortfolio",
    "Description": "Disassociates the specified product from the specified portfolio"
  },
  {
    "API": "servicecatalog:DisassociateServiceActionFromProvisioningArtifact",
    "EventSource": "servicecatalog",
    "EventName": "DisassociateServiceActionFromProvisioningArtifact",
    "Description": "Disassociates the specified self-service action association from the specified provisioning artifact"
  },
  {
    "API": "servicecatalog:DisassociateTagOptionFromResource",
    "EventSource": "servicecatalog",
    "EventName": "DisassociateTagOptionFromResource",
    "Description": "Disassociates the specified TagOption from the specified resource"
  },
  {
    "API": "servicecatalog:EnableAwsOrganizationsAccess",
    "EventSource": "servicecatalog",
    "EventName": "EnableAwsOrganizationsAccess",
    "Description": "Enable portfolio sharing feature through Organizations"
  },
  {
    "API": "servicecatalog:ExecuteProvisionedProductPlan",
    "EventSource": "servicecatalog",
    "EventName": "ExecuteProvisionedProductPlan",
    "Description": "Provisions or modifies a product based on the resource changes for the specified plan"
  },
  {
    "API": "servicecatalog:ExecuteProvisionedProductServiceAction",
    "EventSource": "servicecatalog",
    "EventName": "ExecuteProvisionedProductServiceAction",
    "Description": "Executes a self-service action against a provisioned product"
  },
  {
    "API": "servicecatalog:GeneratePresignedUrl",
    "EventSource": "servicecatalog",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "servicecatalog:GetAwsOrganizationsAccessStatus",
    "EventSource": "servicecatalog",
    "EventName": "GetAwsOrganizationsAccessStatus",
    "Description": "Get the Access Status for Organizations portfolio share feature"
  },
  {
    "API": "servicecatalog:GetProvisionedProductOutputs",
    "EventSource": "servicecatalog",
    "EventName": "GetProvisionedProductOutputs",
    "Description": "This API takes either a ``ProvisonedProductId`` or a ``ProvisionedProductName``, along with a list of one or more output keys, and responds with the key/value pairs of those outputs"
  },
  {
    "API": "servicecatalog:ImportAsProvisionedProduct",
    "EventSource": "servicecatalog",
    "EventName": "ImportAsProvisionedProduct",
    "Description": "Requests the import of a resource as an Service Catalog provisioned product that is associated to an Service Catalog product and provisioning artifact"
  },
  {
    "API": "servicecatalog:ListAcceptedPortfolioShares",
    "EventSource": "servicecatalog",
    "EventName": "ListAcceptedPortfolioShares",
    "Description": "Lists all imported portfolios for which account-to-account shares were accepted by this account"
  },
  {
    "API": "servicecatalog:ListBudgetsForResource",
    "EventSource": "servicecatalog",
    "EventName": "ListBudgetsForResource",
    "Description": "Lists all the budgets associated to the specified resource"
  },
  {
    "API": "servicecatalog:ListConstraintsForPortfolio",
    "EventSource": "servicecatalog",
    "EventName": "ListConstraintsForPortfolio",
    "Description": "Lists the constraints for the specified portfolio and product"
  },
  {
    "API": "servicecatalog:ListLaunchPaths",
    "EventSource": "servicecatalog",
    "EventName": "ListLaunchPaths",
    "Description": "Lists the paths to the specified product"
  },
  {
    "API": "servicecatalog:ListOrganizationPortfolioAccess",
    "EventSource": "servicecatalog",
    "EventName": "ListOrganizationPortfolioAccess",
    "Description": "Lists the organization nodes that have access to the specified portfolio"
  },
  {
    "API": "servicecatalog:ListPortfolioAccess",
    "EventSource": "servicecatalog",
    "EventName": "ListPortfolioAccess",
    "Description": "Lists the account IDs that have access to the specified portfolio"
  },
  {
    "API": "servicecatalog:ListPortfolios",
    "EventSource": "servicecatalog",
    "EventName": "ListPortfolios",
    "Description": "Lists all portfolios in the catalog"
  },
  {
    "API": "servicecatalog:ListPortfoliosForProduct",
    "EventSource": "servicecatalog",
    "EventName": "ListPortfoliosForProduct",
    "Description": "Lists all portfolios that the specified product is associated with"
  },
  {
    "API": "servicecatalog:ListPrincipalsForPortfolio",
    "EventSource": "servicecatalog",
    "EventName": "ListPrincipalsForPortfolio",
    "Description": "Lists all ``PrincipalARN``s and corresponding ``PrincipalType``s associated with the specified portfolio"
  },
  {
    "API": "servicecatalog:ListProvisionedProductPlans",
    "EventSource": "servicecatalog",
    "EventName": "ListProvisionedProductPlans",
    "Description": "Lists the plans for the specified provisioned product or all plans to which the user has access"
  },
  {
    "API": "servicecatalog:ListProvisioningArtifacts",
    "EventSource": "servicecatalog",
    "EventName": "ListProvisioningArtifacts",
    "Description": "Lists all provisioning artifacts (also known as versions) for the specified product"
  },
  {
    "API": "servicecatalog:ListProvisioningArtifactsForServiceAction",
    "EventSource": "servicecatalog",
    "EventName": "ListProvisioningArtifactsForServiceAction",
    "Description": "Lists all provisioning artifacts (also known as versions) for the specified self-service action"
  },
  {
    "API": "servicecatalog:ListRecordHistory",
    "EventSource": "servicecatalog",
    "EventName": "ListRecordHistory",
    "Description": "Lists the specified requests or all performed requests"
  },
  {
    "API": "servicecatalog:ListResourcesForTagOption",
    "EventSource": "servicecatalog",
    "EventName": "ListResourcesForTagOption",
    "Description": "Lists the resources associated with the specified TagOption"
  },
  {
    "API": "servicecatalog:ListServiceActions",
    "EventSource": "servicecatalog",
    "EventName": "ListServiceActions",
    "Description": "Lists all self-service actions"
  },
  {
    "API": "servicecatalog:ListServiceActionsForProvisioningArtifact",
    "EventSource": "servicecatalog",
    "EventName": "ListServiceActionsForProvisioningArtifact",
    "Description": "Returns a paginated list of self-service actions associated with the specified Product ID and Provisioning Artifact ID"
  },
  {
    "API": "servicecatalog:ListStackInstancesForProvisionedProduct",
    "EventSource": "servicecatalog",
    "EventName": "ListStackInstancesForProvisionedProduct",
    "Description": "Returns summary information about stack instances that are associated with the specified ``CFN_STACKSET`` type provisioned product"
  },
  {
    "API": "servicecatalog:ListTagOptions",
    "EventSource": "servicecatalog",
    "EventName": "ListTagOptions",
    "Description": "Lists the specified TagOptions or all TagOptions"
  },
  {
    "API": "servicecatalog:NotifyProvisionProductEngineWorkflowResult",
    "EventSource": "servicecatalog",
    "EventName": "NotifyProvisionProductEngineWorkflowResult",
    "Description": "Notifies the result of the provisioning engine execution"
  },
  {
    "API": "servicecatalog:NotifyTerminateProvisionedProductEngineWorkflowResult",
    "EventSource": "servicecatalog",
    "EventName": "NotifyTerminateProvisionedProductEngineWorkflowResult",
    "Description": "Notifies the result of the terminate engine execution"
  },
  {
    "API": "servicecatalog:NotifyUpdateProvisionedProductEngineWorkflowResult",
    "EventSource": "servicecatalog",
    "EventName": "NotifyUpdateProvisionedProductEngineWorkflowResult",
    "Description": "Notifies the result of the update engine execution"
  },
  {
    "API": "servicecatalog:ProvisionProduct",
    "EventSource": "servicecatalog",
    "EventName": "ProvisionProduct",
    "Description": "Provisions the specified product"
  },
  {
    "API": "servicecatalog:RejectPortfolioShare",
    "EventSource": "servicecatalog",
    "EventName": "RejectPortfolioShare",
    "Description": "Rejects an offer to share the specified portfolio"
  },
  {
    "API": "servicecatalog:ScanProvisionedProducts",
    "EventSource": "servicecatalog",
    "EventName": "ScanProvisionedProducts",
    "Description": "Lists the provisioned products that are available (not terminated)"
  },
  {
    "API": "servicecatalog:SearchProducts",
    "EventSource": "servicecatalog",
    "EventName": "SearchProducts",
    "Description": "Gets information about the products to which the caller has access"
  },
  {
    "API": "servicecatalog:SearchProductsAsAdmin",
    "EventSource": "servicecatalog",
    "EventName": "SearchProductsAsAdmin",
    "Description": "Gets information about the products for the specified portfolio or all products"
  },
  {
    "API": "servicecatalog:SearchProvisionedProducts",
    "EventSource": "servicecatalog",
    "EventName": "SearchProvisionedProducts",
    "Description": "Gets information about the provisioned products that meet the specified criteria"
  },
  {
    "API": "servicecatalog:TerminateProvisionedProduct",
    "EventSource": "servicecatalog",
    "EventName": "TerminateProvisionedProduct",
    "Description": "Terminates the specified provisioned product"
  },
  {
    "API": "servicecatalog:UpdateConstraint",
    "EventSource": "servicecatalog",
    "EventName": "UpdateConstraint",
    "Description": "Updates the specified constraint"
  },
  {
    "API": "servicecatalog:UpdatePortfolio",
    "EventSource": "servicecatalog",
    "EventName": "UpdatePortfolio",
    "Description": "Updates the specified portfolio"
  },
  {
    "API": "servicecatalog:UpdatePortfolioShare",
    "EventSource": "servicecatalog",
    "EventName": "UpdatePortfolioShare",
    "Description": "Updates the specified portfolio share"
  },
  {
    "API": "servicecatalog:UpdateProduct",
    "EventSource": "servicecatalog",
    "EventName": "UpdateProduct",
    "Description": "Updates the specified product"
  },
  {
    "API": "servicecatalog:UpdateProvisionedProduct",
    "EventSource": "servicecatalog",
    "EventName": "UpdateProvisionedProduct",
    "Description": "Requests updates to the configuration of the specified provisioned product"
  },
  {
    "API": "servicecatalog:UpdateProvisionedProductProperties",
    "EventSource": "servicecatalog",
    "EventName": "UpdateProvisionedProductProperties",
    "Description": "Requests updates to the properties of the specified provisioned product"
  },
  {
    "API": "servicecatalog:UpdateProvisioningArtifact",
    "EventSource": "servicecatalog",
    "EventName": "UpdateProvisioningArtifact",
    "Description": "Updates the specified provisioning artifact (also known as a version) for the specified product"
  },
  {
    "API": "servicecatalog:UpdateServiceAction",
    "EventSource": "servicecatalog",
    "EventName": "UpdateServiceAction",
    "Description": "Updates a self-service action"
  },
  {
    "API": "servicecatalog:UpdateTagOption",
    "EventSource": "servicecatalog",
    "EventName": "UpdateTagOption",
    "Description": "Updates the specified TagOption"
  },
  {
    "API": "servicecatalog-appregistry:AssociateAttributeGroup",
    "EventSource": "servicecatalog-appregistry",
    "EventName": "AssociateAttributeGroup",
    "Description": "Associates an attribute group with an application to augment the application's metadata with the group's attributes"
  },
  {
    "API": "servicecatalog-appregistry:AssociateResource",
    "EventSource": "servicecatalog-appregistry",
    "EventName": "AssociateResource",
    "Description": "Associates a resource with an application"
  },
  {
    "API": "servicecatalog-appregistry:CreateApplication",
    "EventSource": "servicecatalog-appregistry",
    "EventName": "CreateApplication",
    "Description": "Creates a new application that is the top-level node in a hierarchy of related cloud resource abstractions"
  },
  {
    "API": "servicecatalog-appregistry:CreateAttributeGroup",
    "EventSource": "servicecatalog-appregistry",
    "EventName": "CreateAttributeGroup",
    "Description": "Creates a new attribute group as a container for user-defined attributes"
  },
  {
    "API": "servicecatalog-appregistry:DeleteApplication",
    "EventSource": "servicecatalog-appregistry",
    "EventName": "DeleteApplication",
    "Description": "Deletes an application that is specified either by its application ID, name, or ARN"
  },
  {
    "API": "servicecatalog-appregistry:DeleteAttributeGroup",
    "EventSource": "servicecatalog-appregistry",
    "EventName": "DeleteAttributeGroup",
    "Description": "Deletes an attribute group, specified either by its attribute group ID, name, or ARN"
  },
  {
    "API": "servicecatalog-appregistry:DisassociateAttributeGroup",
    "EventSource": "servicecatalog-appregistry",
    "EventName": "DisassociateAttributeGroup",
    "Description": "Disassociates an attribute group from an application to remove the extra attributes contained in the attribute group from the application's metadata"
  },
  {
    "API": "servicecatalog-appregistry:DisassociateResource",
    "EventSource": "servicecatalog-appregistry",
    "EventName": "DisassociateResource",
    "Description": "Disassociates a resource from application"
  },
  {
    "API": "servicecatalog-appregistry:GeneratePresignedUrl",
    "EventSource": "servicecatalog-appregistry",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "servicecatalog-appregistry:GetApplication",
    "EventSource": "servicecatalog-appregistry",
    "EventName": "GetApplication",
    "Description": "Retrieves metadata information about one of your applications"
  },
  {
    "API": "servicecatalog-appregistry:GetAssociatedResource",
    "EventSource": "servicecatalog-appregistry",
    "EventName": "GetAssociatedResource",
    "Description": "Gets the resource associated with the application"
  },
  {
    "API": "servicecatalog-appregistry:GetAttributeGroup",
    "EventSource": "servicecatalog-appregistry",
    "EventName": "GetAttributeGroup",
    "Description": "Retrieves an attribute group by its ARN, ID, or name"
  },
  {
    "API": "servicecatalog-appregistry:GetConfiguration",
    "EventSource": "servicecatalog-appregistry",
    "EventName": "GetConfiguration",
    "Description": "Retrieves a ``TagKey`` configuration from an account"
  },
  {
    "API": "servicecatalog-appregistry:ListApplications",
    "EventSource": "servicecatalog-appregistry",
    "EventName": "ListApplications",
    "Description": "Retrieves a list of all of your applications"
  },
  {
    "API": "servicecatalog-appregistry:ListAssociatedAttributeGroups",
    "EventSource": "servicecatalog-appregistry",
    "EventName": "ListAssociatedAttributeGroups",
    "Description": "Lists all attribute groups that are associated with specified application"
  },
  {
    "API": "servicecatalog-appregistry:ListAssociatedResources",
    "EventSource": "servicecatalog-appregistry",
    "EventName": "ListAssociatedResources",
    "Description": "Lists all of the resources that are associated with the specified application"
  },
  {
    "API": "servicecatalog-appregistry:ListAttributeGroups",
    "EventSource": "servicecatalog-appregistry",
    "EventName": "ListAttributeGroups",
    "Description": "Lists all attribute groups which you have access to"
  },
  {
    "API": "servicecatalog-appregistry:ListAttributeGroupsForApplication",
    "EventSource": "servicecatalog-appregistry",
    "EventName": "ListAttributeGroupsForApplication",
    "Description": "Lists the details of all attribute groups associated with a specific application"
  },
  {
    "API": "servicecatalog-appregistry:ListTagsForResource",
    "EventSource": "servicecatalog-appregistry",
    "EventName": "ListTagsForResource",
    "Description": "Lists all of the tags on the resource"
  },
  {
    "API": "servicecatalog-appregistry:PutConfiguration",
    "EventSource": "servicecatalog-appregistry",
    "EventName": "PutConfiguration",
    "Description": "Associates a ``TagKey`` configuration to an account"
  },
  {
    "API": "servicecatalog-appregistry:SyncResource",
    "EventSource": "servicecatalog-appregistry",
    "EventName": "SyncResource",
    "Description": "Syncs the resource with current AppRegistry records"
  },
  {
    "API": "servicecatalog-appregistry:TagResource",
    "EventSource": "servicecatalog-appregistry",
    "EventName": "TagResource",
    "Description": "Assigns one or more tags (key-value pairs) to the specified resource"
  },
  {
    "API": "servicecatalog-appregistry:UntagResource",
    "EventSource": "servicecatalog-appregistry",
    "EventName": "UntagResource",
    "Description": "Removes tags from a resource"
  },
  {
    "API": "servicecatalog-appregistry:UpdateApplication",
    "EventSource": "servicecatalog-appregistry",
    "EventName": "UpdateApplication",
    "Description": "Updates an existing application with new attributes"
  },
  {
    "API": "servicecatalog-appregistry:UpdateAttributeGroup",
    "EventSource": "servicecatalog-appregistry",
    "EventName": "UpdateAttributeGroup",
    "Description": "Updates an existing attribute group with new details"
  },
  {
    "API": "servicediscovery:CreateHttpNamespace",
    "EventSource": "servicediscovery",
    "EventName": "CreateHttpNamespace",
    "Description": "Creates an HTTP namespace"
  },
  {
    "API": "servicediscovery:CreatePrivateDnsNamespace",
    "EventSource": "servicediscovery",
    "EventName": "CreatePrivateDnsNamespace",
    "Description": "Creates a private namespace based on DNS, which is visible only inside a specified Amazon VPC"
  },
  {
    "API": "servicediscovery:CreatePublicDnsNamespace",
    "EventSource": "servicediscovery",
    "EventName": "CreatePublicDnsNamespace",
    "Description": "Creates a public namespace based on DNS, which is visible on the internet"
  },
  {
    "API": "servicediscovery:CreateService",
    "EventSource": "servicediscovery",
    "EventName": "CreateService",
    "Description": "Creates a service"
  },
  {
    "API": "servicediscovery:DeleteNamespace",
    "EventSource": "servicediscovery",
    "EventName": "DeleteNamespace",
    "Description": "Deletes a namespace from the current account"
  },
  {
    "API": "servicediscovery:DeleteService",
    "EventSource": "servicediscovery",
    "EventName": "DeleteService",
    "Description": "Deletes a specified service"
  },
  {
    "API": "servicediscovery:DeregisterInstance",
    "EventSource": "servicediscovery",
    "EventName": "DeregisterInstance",
    "Description": "Deletes the Amazon Route 53 DNS records and health check, if any, that Cloud Map created for the specified instance"
  },
  {
    "API": "servicediscovery:DiscoverInstances",
    "EventSource": "servicediscovery",
    "EventName": "DiscoverInstances",
    "Description": "Discovers registered instances for a specified namespace and service"
  },
  {
    "API": "servicediscovery:DiscoverInstancesRevision",
    "EventSource": "servicediscovery",
    "EventName": "DiscoverInstancesRevision",
    "Description": "Discovers the increasing revision associated with an instance"
  },
  {
    "API": "servicediscovery:GeneratePresignedUrl",
    "EventSource": "servicediscovery",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "servicediscovery:GetInstance",
    "EventSource": "servicediscovery",
    "EventName": "GetInstance",
    "Description": "Gets information about a specified instance"
  },
  {
    "API": "servicediscovery:GetInstancesHealthStatus",
    "EventSource": "servicediscovery",
    "EventName": "GetInstancesHealthStatus",
    "Description": "Gets the current health status ( ``Healthy``, ``Unhealthy``, or ``Unknown``) of one or more instances that are associated with a specified service"
  },
  {
    "API": "servicediscovery:GetNamespace",
    "EventSource": "servicediscovery",
    "EventName": "GetNamespace",
    "Description": "Gets information about a namespace"
  },
  {
    "API": "servicediscovery:GetOperation",
    "EventSource": "servicediscovery",
    "EventName": "GetOperation",
    "Description": "Gets information about any operation that returns an operation ID in the response, such as a ``CreateHttpNamespace`` request"
  },
  {
    "API": "servicediscovery:GetService",
    "EventSource": "servicediscovery",
    "EventName": "GetService",
    "Description": "Gets the settings for a specified service"
  },
  {
    "API": "servicediscovery:ListInstances",
    "EventSource": "servicediscovery",
    "EventName": "ListInstances",
    "Description": "Lists summary information about the instances that you registered by using a specified service"
  },
  {
    "API": "servicediscovery:ListNamespaces",
    "EventSource": "servicediscovery",
    "EventName": "ListNamespaces",
    "Description": "Lists summary information about the namespaces that were created by the current Amazon Web Services account"
  },
  {
    "API": "servicediscovery:ListOperations",
    "EventSource": "servicediscovery",
    "EventName": "ListOperations",
    "Description": "Lists operations that match the criteria that you specify"
  },
  {
    "API": "servicediscovery:ListServices",
    "EventSource": "servicediscovery",
    "EventName": "ListServices",
    "Description": "Lists summary information for all the services that are associated with one or more namespaces"
  },
  {
    "API": "servicediscovery:ListTagsForResource",
    "EventSource": "servicediscovery",
    "EventName": "ListTagsForResource",
    "Description": "Lists tags for the specified resource"
  },
  {
    "API": "servicediscovery:RegisterInstance",
    "EventSource": "servicediscovery",
    "EventName": "RegisterInstance",
    "Description": "Creates or updates one or more records and, optionally, creates a health check based on the settings in a specified service"
  },
  {
    "API": "servicediscovery:TagResource",
    "EventSource": "servicediscovery",
    "EventName": "TagResource",
    "Description": "Adds one or more tags to the specified resource"
  },
  {
    "API": "servicediscovery:UntagResource",
    "EventSource": "servicediscovery",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags from the specified resource"
  },
  {
    "API": "servicediscovery:UpdateHttpNamespace",
    "EventSource": "servicediscovery",
    "EventName": "UpdateHttpNamespace",
    "Description": "Updates an HTTP namespace"
  },
  {
    "API": "servicediscovery:UpdateInstanceCustomHealthStatus",
    "EventSource": "servicediscovery",
    "EventName": "UpdateInstanceCustomHealthStatus",
    "Description": "Submits a request to change the health status of a custom health check to healthy or unhealthy"
  },
  {
    "API": "servicediscovery:UpdatePrivateDnsNamespace",
    "EventSource": "servicediscovery",
    "EventName": "UpdatePrivateDnsNamespace",
    "Description": "Updates a private DNS namespace"
  },
  {
    "API": "servicediscovery:UpdatePublicDnsNamespace",
    "EventSource": "servicediscovery",
    "EventName": "UpdatePublicDnsNamespace",
    "Description": "Updates a public DNS namespace"
  },
  {
    "API": "servicediscovery:UpdateService",
    "EventSource": "servicediscovery",
    "EventName": "UpdateService",
    "Description": "Submits a request to perform the following operations:"
  },
  {
    "API": "ses:CloneReceiptRuleSet",
    "EventSource": "ses",
    "EventName": "CloneReceiptRuleSet",
    "Description": "Creates a receipt rule set by cloning an existing one"
  },
  {
    "API": "ses:CreateConfigurationSet",
    "EventSource": "ses",
    "EventName": "CreateConfigurationSet",
    "Description": "Creates a configuration set"
  },
  {
    "API": "ses:CreateConfigurationSetEventDestination",
    "EventSource": "ses",
    "EventName": "CreateConfigurationSetEventDestination",
    "Description": "Creates a configuration set event destination"
  },
  {
    "API": "ses:CreateConfigurationSetTrackingOptions",
    "EventSource": "ses",
    "EventName": "CreateConfigurationSetTrackingOptions",
    "Description": "Creates an association between a configuration set and a custom domain for open and click event tracking"
  },
  {
    "API": "ses:CreateCustomVerificationEmailTemplate",
    "EventSource": "ses",
    "EventName": "CreateCustomVerificationEmailTemplate",
    "Description": "Creates a new custom verification email template"
  },
  {
    "API": "ses:CreateReceiptFilter",
    "EventSource": "ses",
    "EventName": "CreateReceiptFilter",
    "Description": "Creates a new IP address filter"
  },
  {
    "API": "ses:CreateReceiptRule",
    "EventSource": "ses",
    "EventName": "CreateReceiptRule",
    "Description": "Creates a receipt rule"
  },
  {
    "API": "ses:CreateReceiptRuleSet",
    "EventSource": "ses",
    "EventName": "CreateReceiptRuleSet",
    "Description": "Creates an empty receipt rule set"
  },
  {
    "API": "ses:CreateTemplate",
    "EventSource": "ses",
    "EventName": "CreateTemplate",
    "Description": "Creates an email template"
  },
  {
    "API": "ses:DeleteConfigurationSet",
    "EventSource": "ses",
    "EventName": "DeleteConfigurationSet",
    "Description": "Deletes a configuration set"
  },
  {
    "API": "ses:DeleteConfigurationSetEventDestination",
    "EventSource": "ses",
    "EventName": "DeleteConfigurationSetEventDestination",
    "Description": "Deletes a configuration set event destination"
  },
  {
    "API": "ses:DeleteConfigurationSetTrackingOptions",
    "EventSource": "ses",
    "EventName": "DeleteConfigurationSetTrackingOptions",
    "Description": "Deletes an association between a configuration set and a custom domain for open and click event tracking"
  },
  {
    "API": "ses:DeleteCustomVerificationEmailTemplate",
    "EventSource": "ses",
    "EventName": "DeleteCustomVerificationEmailTemplate",
    "Description": "Deletes an existing custom verification email template"
  },
  {
    "API": "ses:DeleteIdentity",
    "EventSource": "ses",
    "EventName": "DeleteIdentity",
    "Description": "Deletes the specified identity (an email address or a domain) from the list of verified identities"
  },
  {
    "API": "ses:DeleteIdentityPolicy",
    "EventSource": "ses",
    "EventName": "DeleteIdentityPolicy",
    "Description": "Deletes the specified sending authorization policy for the given identity (an email address or a domain)"
  },
  {
    "API": "ses:DeleteReceiptFilter",
    "EventSource": "ses",
    "EventName": "DeleteReceiptFilter",
    "Description": "Deletes the specified IP address filter"
  },
  {
    "API": "ses:DeleteReceiptRule",
    "EventSource": "ses",
    "EventName": "DeleteReceiptRule",
    "Description": "Deletes the specified receipt rule"
  },
  {
    "API": "ses:DeleteReceiptRuleSet",
    "EventSource": "ses",
    "EventName": "DeleteReceiptRuleSet",
    "Description": "Deletes the specified receipt rule set and all of the receipt rules it contains"
  },
  {
    "API": "ses:DeleteTemplate",
    "EventSource": "ses",
    "EventName": "DeleteTemplate",
    "Description": "Deletes an email template"
  },
  {
    "API": "ses:DeleteVerifiedEmailAddress",
    "EventSource": "ses",
    "EventName": "DeleteVerifiedEmailAddress",
    "Description": "Deprecated"
  },
  {
    "API": "ses:DescribeActiveReceiptRuleSet",
    "EventSource": "ses",
    "EventName": "DescribeActiveReceiptRuleSet",
    "Description": "Returns the metadata and receipt rules for the receipt rule set that is currently active"
  },
  {
    "API": "ses:DescribeConfigurationSet",
    "EventSource": "ses",
    "EventName": "DescribeConfigurationSet",
    "Description": "Returns the details of the specified configuration set"
  },
  {
    "API": "ses:DescribeReceiptRule",
    "EventSource": "ses",
    "EventName": "DescribeReceiptRule",
    "Description": "Returns the details of the specified receipt rule"
  },
  {
    "API": "ses:DescribeReceiptRuleSet",
    "EventSource": "ses",
    "EventName": "DescribeReceiptRuleSet",
    "Description": "Returns the details of the specified receipt rule set"
  },
  {
    "API": "ses:GeneratePresignedUrl",
    "EventSource": "ses",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "ses:GetAccountSendingEnabled",
    "EventSource": "ses",
    "EventName": "GetAccountSendingEnabled",
    "Description": "Returns the email sending status of the Amazon SES account for the current Region"
  },
  {
    "API": "ses:GetCustomVerificationEmailTemplate",
    "EventSource": "ses",
    "EventName": "GetCustomVerificationEmailTemplate",
    "Description": "Returns the custom email verification template for the template name you specify"
  },
  {
    "API": "ses:GetIdentityDkimAttributes",
    "EventSource": "ses",
    "EventName": "GetIdentityDkimAttributes",
    "Description": "Returns the current status of Easy DKIM signing for an entity"
  },
  {
    "API": "ses:GetIdentityMailFromDomainAttributes",
    "EventSource": "ses",
    "EventName": "GetIdentityMailFromDomainAttributes",
    "Description": "Returns the custom MAIL FROM attributes for a list of identities (email addresses : domains)"
  },
  {
    "API": "ses:GetIdentityNotificationAttributes",
    "EventSource": "ses",
    "EventName": "GetIdentityNotificationAttributes",
    "Description": "Given a list of verified identities (email addresses and/or domains), returns a structure describing identity notification attributes"
  },
  {
    "API": "ses:GetIdentityPolicies",
    "EventSource": "ses",
    "EventName": "GetIdentityPolicies",
    "Description": "Returns the requested sending authorization policies for the given identity (an email address or a domain)"
  },
  {
    "API": "ses:GetIdentityVerificationAttributes",
    "EventSource": "ses",
    "EventName": "GetIdentityVerificationAttributes",
    "Description": "Given a list of identities (email addresses and/or domains), returns the verification status and (for domain identities) the verification token for each identity"
  },
  {
    "API": "ses:GetSendQuota",
    "EventSource": "ses",
    "EventName": "GetSendQuota",
    "Description": "Provides the sending limits for the Amazon SES account"
  },
  {
    "API": "ses:GetSendStatistics",
    "EventSource": "ses",
    "EventName": "GetSendStatistics",
    "Description": "Provides sending statistics for the current Amazon Web Services Region"
  },
  {
    "API": "ses:GetTemplate",
    "EventSource": "ses",
    "EventName": "GetTemplate",
    "Description": "Displays the template object (which includes the Subject line, HTML part and text part) for the template you specify"
  },
  {
    "API": "ses:ListConfigurationSets",
    "EventSource": "ses",
    "EventName": "ListConfigurationSets",
    "Description": "Provides a list of the configuration sets associated with your Amazon SES account in the current Amazon Web Services Region"
  },
  {
    "API": "ses:ListCustomVerificationEmailTemplates",
    "EventSource": "ses",
    "EventName": "ListCustomVerificationEmailTemplates",
    "Description": "Lists the existing custom verification email templates for your account in the current Amazon Web Services Region"
  },
  {
    "API": "ses:ListIdentities",
    "EventSource": "ses",
    "EventName": "ListIdentities",
    "Description": "Returns a list containing all of the identities (email addresses and domains) for your Amazon Web Services account in the current Amazon Web Services Region, regardless of verification status"
  },
  {
    "API": "ses:ListIdentityPolicies",
    "EventSource": "ses",
    "EventName": "ListIdentityPolicies",
    "Description": "Returns a list of sending authorization policies that are attached to the given identity (an email address or a domain)"
  },
  {
    "API": "ses:ListReceiptFilters",
    "EventSource": "ses",
    "EventName": "ListReceiptFilters",
    "Description": "Lists the IP address filters associated with your Amazon Web Services account in the current Amazon Web Services Region"
  },
  {
    "API": "ses:ListReceiptRuleSets",
    "EventSource": "ses",
    "EventName": "ListReceiptRuleSets",
    "Description": "Lists the receipt rule sets that exist under your Amazon Web Services account in the current Amazon Web Services Region"
  },
  {
    "API": "ses:ListTemplates",
    "EventSource": "ses",
    "EventName": "ListTemplates",
    "Description": "Lists the email templates present in your Amazon SES account in the current Amazon Web Services Region"
  },
  {
    "API": "ses:ListVerifiedEmailAddresses",
    "EventSource": "ses",
    "EventName": "ListVerifiedEmailAddresses",
    "Description": "Deprecated"
  },
  {
    "API": "ses:PutConfigurationSetDeliveryOptions",
    "EventSource": "ses",
    "EventName": "PutConfigurationSetDeliveryOptions",
    "Description": "Adds or updates the delivery options for a configuration set"
  },
  {
    "API": "ses:PutIdentityPolicy",
    "EventSource": "ses",
    "EventName": "PutIdentityPolicy",
    "Description": "Adds or updates a sending authorization policy for the specified identity (an email address or a domain)"
  },
  {
    "API": "ses:ReorderReceiptRuleSet",
    "EventSource": "ses",
    "EventName": "ReorderReceiptRuleSet",
    "Description": "Reorders the receipt rules within a receipt rule set"
  },
  {
    "API": "ses:SendBounce",
    "EventSource": "ses",
    "EventName": "SendBounce",
    "Description": "Generates and sends a bounce message to the sender of an email you received through Amazon SES"
  },
  {
    "API": "ses:SendBulkTemplatedEmail",
    "EventSource": "ses",
    "EventName": "SendBulkTemplatedEmail",
    "Description": "Composes an email message to multiple destinations"
  },
  {
    "API": "ses:SendCustomVerificationEmail",
    "EventSource": "ses",
    "EventName": "SendCustomVerificationEmail",
    "Description": "Adds an email address to the list of identities for your Amazon SES account in the current Amazon Web Services Region and attempts to verify it"
  },
  {
    "API": "ses:SendEmail",
    "EventSource": "ses",
    "EventName": "SendEmail",
    "Description": "Composes an email message and immediately queues it for sending"
  },
  {
    "API": "ses:SendRawEmail",
    "EventSource": "ses",
    "EventName": "SendRawEmail",
    "Description": "Composes an email message and immediately queues it for sending"
  },
  {
    "API": "ses:SendTemplatedEmail",
    "EventSource": "ses",
    "EventName": "SendTemplatedEmail",
    "Description": "Composes an email message using an email template and immediately queues it for sending"
  },
  {
    "API": "ses:SetActiveReceiptRuleSet",
    "EventSource": "ses",
    "EventName": "SetActiveReceiptRuleSet",
    "Description": "Sets the specified receipt rule set as the active receipt rule set"
  },
  {
    "API": "ses:SetIdentityDkimEnabled",
    "EventSource": "ses",
    "EventName": "SetIdentityDkimEnabled",
    "Description": "Enables or disables Easy DKIM signing of email sent from an identity"
  },
  {
    "API": "ses:SetIdentityFeedbackForwardingEnabled",
    "EventSource": "ses",
    "EventName": "SetIdentityFeedbackForwardingEnabled",
    "Description": "Given an identity (an email address or a domain), enables or disables whether Amazon SES forwards bounce and complaint notifications as email"
  },
  {
    "API": "ses:SetIdentityHeadersInNotificationsEnabled",
    "EventSource": "ses",
    "EventName": "SetIdentityHeadersInNotificationsEnabled",
    "Description": "Given an identity (an email address or a domain), sets whether Amazon SES includes the original email headers in the Amazon Simple Notification Service (Amazon SNS) notifications of a specified type"
  },
  {
    "API": "ses:SetIdentityMailFromDomain",
    "EventSource": "ses",
    "EventName": "SetIdentityMailFromDomain",
    "Description": "Enables or disables the custom MAIL FROM domain setup for a verified identity (an email address or a domain)"
  },
  {
    "API": "ses:SetIdentityNotificationTopic",
    "EventSource": "ses",
    "EventName": "SetIdentityNotificationTopic",
    "Description": "Sets an Amazon Simple Notification Service (Amazon SNS) topic to use when delivering notifications"
  },
  {
    "API": "ses:SetReceiptRulePosition",
    "EventSource": "ses",
    "EventName": "SetReceiptRulePosition",
    "Description": "Sets the position of the specified receipt rule in the receipt rule set"
  },
  {
    "API": "ses:TestRenderTemplate",
    "EventSource": "ses",
    "EventName": "TestRenderTemplate",
    "Description": "Creates a preview of the MIME content of an email when provided with a template and a set of replacement data"
  },
  {
    "API": "ses:UpdateAccountSendingEnabled",
    "EventSource": "ses",
    "EventName": "UpdateAccountSendingEnabled",
    "Description": "Enables or disables email sending across your entire Amazon SES account in the current Amazon Web Services Region"
  },
  {
    "API": "ses:UpdateConfigurationSetEventDestination",
    "EventSource": "ses",
    "EventName": "UpdateConfigurationSetEventDestination",
    "Description": "Updates the event destination of a configuration set"
  },
  {
    "API": "ses:UpdateConfigurationSetReputationMetricsEnabled",
    "EventSource": "ses",
    "EventName": "UpdateConfigurationSetReputationMetricsEnabled",
    "Description": "Enables or disables the publishing of reputation metrics for emails sent using a specific configuration set in a given Amazon Web Services Region"
  },
  {
    "API": "ses:UpdateConfigurationSetSendingEnabled",
    "EventSource": "ses",
    "EventName": "UpdateConfigurationSetSendingEnabled",
    "Description": "Enables or disables email sending for messages sent using a specific configuration set in a given Amazon Web Services Region"
  },
  {
    "API": "ses:UpdateConfigurationSetTrackingOptions",
    "EventSource": "ses",
    "EventName": "UpdateConfigurationSetTrackingOptions",
    "Description": "Modifies an association between a configuration set and a custom domain for open and click event tracking"
  },
  {
    "API": "ses:UpdateCustomVerificationEmailTemplate",
    "EventSource": "ses",
    "EventName": "UpdateCustomVerificationEmailTemplate",
    "Description": "Updates an existing custom verification email template"
  },
  {
    "API": "ses:UpdateReceiptRule",
    "EventSource": "ses",
    "EventName": "UpdateReceiptRule",
    "Description": "Updates a receipt rule"
  },
  {
    "API": "ses:UpdateTemplate",
    "EventSource": "ses",
    "EventName": "UpdateTemplate",
    "Description": "Updates an email template"
  },
  {
    "API": "ses:VerifyDomainDkim",
    "EventSource": "ses",
    "EventName": "VerifyDomainDkim",
    "Description": "Returns a set of DKIM tokens for a domain identity"
  },
  {
    "API": "ses:VerifyDomainIdentity",
    "EventSource": "ses",
    "EventName": "VerifyDomainIdentity",
    "Description": "Adds a domain to the list of identities for your Amazon SES account in the current Amazon Web Services Region and attempts to verify it"
  },
  {
    "API": "ses:VerifyEmailAddress",
    "EventSource": "ses",
    "EventName": "VerifyEmailAddress",
    "Description": "Deprecated"
  },
  {
    "API": "ses:VerifyEmailIdentity",
    "EventSource": "ses",
    "EventName": "VerifyEmailIdentity",
    "Description": "Adds an email address to the list of identities for your Amazon SES account in the current Amazon Web Services Region and attempts to verify it"
  },
  {
    "API": "sesv2:BatchGetMetricData",
    "EventSource": "sesv2",
    "EventName": "BatchGetMetricData",
    "Description": "Retrieves batches of metric data collected based on your sending activity"
  },
  {
    "API": "sesv2:CancelExportJob",
    "EventSource": "sesv2",
    "EventName": "CancelExportJob",
    "Description": "Cancels an export job"
  },
  {
    "API": "sesv2:CreateConfigurationSet",
    "EventSource": "sesv2",
    "EventName": "CreateConfigurationSet",
    "Description": "Create a configuration set"
  },
  {
    "API": "sesv2:CreateConfigurationSetEventDestination",
    "EventSource": "sesv2",
    "EventName": "CreateConfigurationSetEventDestination",
    "Description": "Create an event destination"
  },
  {
    "API": "sesv2:CreateContact",
    "EventSource": "sesv2",
    "EventName": "CreateContact",
    "Description": "Creates a contact, which is an end-user who is receiving the email, and adds them to a contact list"
  },
  {
    "API": "sesv2:CreateContactList",
    "EventSource": "sesv2",
    "EventName": "CreateContactList",
    "Description": "Creates a contact list"
  },
  {
    "API": "sesv2:CreateCustomVerificationEmailTemplate",
    "EventSource": "sesv2",
    "EventName": "CreateCustomVerificationEmailTemplate",
    "Description": "Creates a new custom verification email template"
  },
  {
    "API": "sesv2:CreateDedicatedIpPool",
    "EventSource": "sesv2",
    "EventName": "CreateDedicatedIpPool",
    "Description": "Create a new pool of dedicated IP addresses"
  },
  {
    "API": "sesv2:CreateDeliverabilityTestReport",
    "EventSource": "sesv2",
    "EventName": "CreateDeliverabilityTestReport",
    "Description": "Create a new predictive inbox placement test"
  },
  {
    "API": "sesv2:CreateEmailIdentity",
    "EventSource": "sesv2",
    "EventName": "CreateEmailIdentity",
    "Description": "Starts the process of verifying an email identity"
  },
  {
    "API": "sesv2:CreateEmailIdentityPolicy",
    "EventSource": "sesv2",
    "EventName": "CreateEmailIdentityPolicy",
    "Description": "Creates the specified sending authorization policy for the given identity (an email address or a domain)"
  },
  {
    "API": "sesv2:CreateEmailTemplate",
    "EventSource": "sesv2",
    "EventName": "CreateEmailTemplate",
    "Description": "Creates an email template"
  },
  {
    "API": "sesv2:CreateExportJob",
    "EventSource": "sesv2",
    "EventName": "CreateExportJob",
    "Description": "Creates an export job for a data source and destination"
  },
  {
    "API": "sesv2:CreateImportJob",
    "EventSource": "sesv2",
    "EventName": "CreateImportJob",
    "Description": "Creates an import job for a data destination"
  },
  {
    "API": "sesv2:DeleteConfigurationSet",
    "EventSource": "sesv2",
    "EventName": "DeleteConfigurationSet",
    "Description": "Delete an existing configuration set"
  },
  {
    "API": "sesv2:DeleteConfigurationSetEventDestination",
    "EventSource": "sesv2",
    "EventName": "DeleteConfigurationSetEventDestination",
    "Description": "Delete an event destination"
  },
  {
    "API": "sesv2:DeleteContact",
    "EventSource": "sesv2",
    "EventName": "DeleteContact",
    "Description": "Removes a contact from a contact list"
  },
  {
    "API": "sesv2:DeleteContactList",
    "EventSource": "sesv2",
    "EventName": "DeleteContactList",
    "Description": "Deletes a contact list and all of the contacts on that list"
  },
  {
    "API": "sesv2:DeleteCustomVerificationEmailTemplate",
    "EventSource": "sesv2",
    "EventName": "DeleteCustomVerificationEmailTemplate",
    "Description": "Deletes an existing custom verification email template"
  },
  {
    "API": "sesv2:DeleteDedicatedIpPool",
    "EventSource": "sesv2",
    "EventName": "DeleteDedicatedIpPool",
    "Description": "Delete a dedicated IP pool"
  },
  {
    "API": "sesv2:DeleteEmailIdentity",
    "EventSource": "sesv2",
    "EventName": "DeleteEmailIdentity",
    "Description": "Deletes an email identity"
  },
  {
    "API": "sesv2:DeleteEmailIdentityPolicy",
    "EventSource": "sesv2",
    "EventName": "DeleteEmailIdentityPolicy",
    "Description": "Deletes the specified sending authorization policy for the given identity (an email address or a domain)"
  },
  {
    "API": "sesv2:DeleteEmailTemplate",
    "EventSource": "sesv2",
    "EventName": "DeleteEmailTemplate",
    "Description": "Deletes an email template"
  },
  {
    "API": "sesv2:DeleteSuppressedDestination",
    "EventSource": "sesv2",
    "EventName": "DeleteSuppressedDestination",
    "Description": "Removes an email address from the suppression list for your account"
  },
  {
    "API": "sesv2:GeneratePresignedUrl",
    "EventSource": "sesv2",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "sesv2:GetAccount",
    "EventSource": "sesv2",
    "EventName": "GetAccount",
    "Description": "Obtain information about the email-sending status and capabilities of your Amazon SES account in the current Amazon Web Services Region"
  },
  {
    "API": "sesv2:GetBlacklistReports",
    "EventSource": "sesv2",
    "EventName": "GetBlacklistReports",
    "Description": "Retrieve a list of the blacklists that your dedicated IP addresses appear on"
  },
  {
    "API": "sesv2:GetConfigurationSet",
    "EventSource": "sesv2",
    "EventName": "GetConfigurationSet",
    "Description": "Get information about an existing configuration set, including the dedicated IP pool that it's associated with, whether or not it's enabled for sending email, and more"
  },
  {
    "API": "sesv2:GetConfigurationSetEventDestinations",
    "EventSource": "sesv2",
    "EventName": "GetConfigurationSetEventDestinations",
    "Description": "Retrieve a list of event destinations that are associated with a configuration set"
  },
  {
    "API": "sesv2:GetContact",
    "EventSource": "sesv2",
    "EventName": "GetContact",
    "Description": "Returns a contact from a contact list"
  },
  {
    "API": "sesv2:GetContactList",
    "EventSource": "sesv2",
    "EventName": "GetContactList",
    "Description": "Returns contact list metadata"
  },
  {
    "API": "sesv2:GetCustomVerificationEmailTemplate",
    "EventSource": "sesv2",
    "EventName": "GetCustomVerificationEmailTemplate",
    "Description": "Returns the custom email verification template for the template name you specify"
  },
  {
    "API": "sesv2:GetDedicatedIp",
    "EventSource": "sesv2",
    "EventName": "GetDedicatedIp",
    "Description": "Get information about a dedicated IP address, including the name of the dedicated IP pool that it's associated with, as well information about the automatic warm-up process for the address"
  },
  {
    "API": "sesv2:GetDedicatedIpPool",
    "EventSource": "sesv2",
    "EventName": "GetDedicatedIpPool",
    "Description": "Retrieve information about the dedicated pool"
  },
  {
    "API": "sesv2:GetDedicatedIps",
    "EventSource": "sesv2",
    "EventName": "GetDedicatedIps",
    "Description": "List the dedicated IP addresses that are associated with your Amazon Web Services account"
  },
  {
    "API": "sesv2:GetDeliverabilityDashboardOptions",
    "EventSource": "sesv2",
    "EventName": "GetDeliverabilityDashboardOptions",
    "Description": "Retrieve information about the status of the Deliverability dashboard for your account"
  },
  {
    "API": "sesv2:GetDeliverabilityTestReport",
    "EventSource": "sesv2",
    "EventName": "GetDeliverabilityTestReport",
    "Description": "Retrieve the results of a predictive inbox placement test"
  },
  {
    "API": "sesv2:GetDomainDeliverabilityCampaign",
    "EventSource": "sesv2",
    "EventName": "GetDomainDeliverabilityCampaign",
    "Description": "Retrieve all the deliverability data for a specific campaign"
  },
  {
    "API": "sesv2:GetDomainStatisticsReport",
    "EventSource": "sesv2",
    "EventName": "GetDomainStatisticsReport",
    "Description": "Retrieve inbox placement and engagement rates for the domains that you use to send email"
  },
  {
    "API": "sesv2:GetEmailIdentity",
    "EventSource": "sesv2",
    "EventName": "GetEmailIdentity",
    "Description": "Provides information about a specific identity, including the identity's verification status, sending authorization policies, its DKIM authentication status, and its custom Mail-From settings"
  },
  {
    "API": "sesv2:GetEmailIdentityPolicies",
    "EventSource": "sesv2",
    "EventName": "GetEmailIdentityPolicies",
    "Description": "Returns the requested sending authorization policies for the given identity (an email address or a domain)"
  },
  {
    "API": "sesv2:GetEmailTemplate",
    "EventSource": "sesv2",
    "EventName": "GetEmailTemplate",
    "Description": "Displays the template object (which includes the subject line, HTML part and text part) for the template you specify"
  },
  {
    "API": "sesv2:GetExportJob",
    "EventSource": "sesv2",
    "EventName": "GetExportJob",
    "Description": "Provides information about an export job"
  },
  {
    "API": "sesv2:GetImportJob",
    "EventSource": "sesv2",
    "EventName": "GetImportJob",
    "Description": "Provides information about an import job"
  },
  {
    "API": "sesv2:GetMessageInsights",
    "EventSource": "sesv2",
    "EventName": "GetMessageInsights",
    "Description": "Provides information about a specific message, including the from address, the subject, the recipient address, email tags, as well as events associated with the message"
  },
  {
    "API": "sesv2:GetSuppressedDestination",
    "EventSource": "sesv2",
    "EventName": "GetSuppressedDestination",
    "Description": "Retrieves information about a specific email address that's on the suppression list for your account"
  },
  {
    "API": "sesv2:ListConfigurationSets",
    "EventSource": "sesv2",
    "EventName": "ListConfigurationSets",
    "Description": "List all of the configuration sets associated with your account in the current region"
  },
  {
    "API": "sesv2:ListContactLists",
    "EventSource": "sesv2",
    "EventName": "ListContactLists",
    "Description": "Lists all of the contact lists available"
  },
  {
    "API": "sesv2:ListContacts",
    "EventSource": "sesv2",
    "EventName": "ListContacts",
    "Description": "Lists the contacts present in a specific contact list"
  },
  {
    "API": "sesv2:ListCustomVerificationEmailTemplates",
    "EventSource": "sesv2",
    "EventName": "ListCustomVerificationEmailTemplates",
    "Description": "Lists the existing custom verification email templates for your account in the current Amazon Web Services Region"
  },
  {
    "API": "sesv2:ListDedicatedIpPools",
    "EventSource": "sesv2",
    "EventName": "ListDedicatedIpPools",
    "Description": "List all of the dedicated IP pools that exist in your Amazon Web Services account in the current Region"
  },
  {
    "API": "sesv2:ListDeliverabilityTestReports",
    "EventSource": "sesv2",
    "EventName": "ListDeliverabilityTestReports",
    "Description": "Show a list of the predictive inbox placement tests that you've performed, regardless of their statuses"
  },
  {
    "API": "sesv2:ListDomainDeliverabilityCampaigns",
    "EventSource": "sesv2",
    "EventName": "ListDomainDeliverabilityCampaigns",
    "Description": "Retrieve deliverability data for all the campaigns that used a specific domain to send email during a specified time range"
  },
  {
    "API": "sesv2:ListEmailIdentities",
    "EventSource": "sesv2",
    "EventName": "ListEmailIdentities",
    "Description": "Returns a list of all of the email identities that are associated with your Amazon Web Services account"
  },
  {
    "API": "sesv2:ListEmailTemplates",
    "EventSource": "sesv2",
    "EventName": "ListEmailTemplates",
    "Description": "Lists the email templates present in your Amazon SES account in the current Amazon Web Services Region"
  },
  {
    "API": "sesv2:ListExportJobs",
    "EventSource": "sesv2",
    "EventName": "ListExportJobs",
    "Description": "Lists all of the export jobs"
  },
  {
    "API": "sesv2:ListImportJobs",
    "EventSource": "sesv2",
    "EventName": "ListImportJobs",
    "Description": "Lists all of the import jobs"
  },
  {
    "API": "sesv2:ListRecommendations",
    "EventSource": "sesv2",
    "EventName": "ListRecommendations",
    "Description": "Lists the recommendations present in your Amazon SES account in the current Amazon Web Services Region"
  },
  {
    "API": "sesv2:ListSuppressedDestinations",
    "EventSource": "sesv2",
    "EventName": "ListSuppressedDestinations",
    "Description": "Retrieves a list of email addresses that are on the suppression list for your account"
  },
  {
    "API": "sesv2:ListTagsForResource",
    "EventSource": "sesv2",
    "EventName": "ListTagsForResource",
    "Description": "Retrieve a list of the tags (keys and values) that are associated with a specified resource"
  },
  {
    "API": "sesv2:PutAccountDedicatedIpWarmupAttributes",
    "EventSource": "sesv2",
    "EventName": "PutAccountDedicatedIpWarmupAttributes",
    "Description": "Enable or disable the automatic warm-up feature for dedicated IP addresses"
  },
  {
    "API": "sesv2:PutAccountDetails",
    "EventSource": "sesv2",
    "EventName": "PutAccountDetails",
    "Description": "Update your Amazon SES account details"
  },
  {
    "API": "sesv2:PutAccountSendingAttributes",
    "EventSource": "sesv2",
    "EventName": "PutAccountSendingAttributes",
    "Description": "Enable or disable the ability of your account to send email"
  },
  {
    "API": "sesv2:PutAccountSuppressionAttributes",
    "EventSource": "sesv2",
    "EventName": "PutAccountSuppressionAttributes",
    "Description": "Change the settings for the account-level suppression list"
  },
  {
    "API": "sesv2:PutAccountVdmAttributes",
    "EventSource": "sesv2",
    "EventName": "PutAccountVdmAttributes",
    "Description": "Update your Amazon SES account VDM attributes"
  },
  {
    "API": "sesv2:PutConfigurationSetDeliveryOptions",
    "EventSource": "sesv2",
    "EventName": "PutConfigurationSetDeliveryOptions",
    "Description": "Associate a configuration set with a dedicated IP pool"
  },
  {
    "API": "sesv2:PutConfigurationSetReputationOptions",
    "EventSource": "sesv2",
    "EventName": "PutConfigurationSetReputationOptions",
    "Description": "Enable or disable collection of reputation metrics for emails that you send using a particular configuration set in a specific Amazon Web Services Region"
  },
  {
    "API": "sesv2:PutConfigurationSetSendingOptions",
    "EventSource": "sesv2",
    "EventName": "PutConfigurationSetSendingOptions",
    "Description": "Enable or disable email sending for messages that use a particular configuration set in a specific Amazon Web Services Region"
  },
  {
    "API": "sesv2:PutConfigurationSetSuppressionOptions",
    "EventSource": "sesv2",
    "EventName": "PutConfigurationSetSuppressionOptions",
    "Description": "Specify the account suppression list preferences for a configuration set"
  },
  {
    "API": "sesv2:PutConfigurationSetTrackingOptions",
    "EventSource": "sesv2",
    "EventName": "PutConfigurationSetTrackingOptions",
    "Description": "Specify a custom domain to use for open and click tracking elements in email that you send"
  },
  {
    "API": "sesv2:PutConfigurationSetVdmOptions",
    "EventSource": "sesv2",
    "EventName": "PutConfigurationSetVdmOptions",
    "Description": "Specify VDM preferences for email that you send using the configuration set"
  },
  {
    "API": "sesv2:PutDedicatedIpInPool",
    "EventSource": "sesv2",
    "EventName": "PutDedicatedIpInPool",
    "Description": "Move a dedicated IP address to an existing dedicated IP pool"
  },
  {
    "API": "sesv2:PutDedicatedIpPoolScalingAttributes",
    "EventSource": "sesv2",
    "EventName": "PutDedicatedIpPoolScalingAttributes",
    "Description": "Used to convert a dedicated IP pool to a different scaling mode"
  },
  {
    "API": "sesv2:PutDedicatedIpWarmupAttributes",
    "EventSource": "sesv2",
    "EventName": "PutDedicatedIpWarmupAttributes",
    "Description": "See also: `AWS API Documentation <https://docs"
  },
  {
    "API": "sesv2:PutDeliverabilityDashboardOption",
    "EventSource": "sesv2",
    "EventName": "PutDeliverabilityDashboardOption",
    "Description": "Enable or disable the Deliverability dashboard"
  },
  {
    "API": "sesv2:PutEmailIdentityConfigurationSetAttributes",
    "EventSource": "sesv2",
    "EventName": "PutEmailIdentityConfigurationSetAttributes",
    "Description": "Used to associate a configuration set with an email identity"
  },
  {
    "API": "sesv2:PutEmailIdentityDkimAttributes",
    "EventSource": "sesv2",
    "EventName": "PutEmailIdentityDkimAttributes",
    "Description": "Used to enable or disable DKIM authentication for an email identity"
  },
  {
    "API": "sesv2:PutEmailIdentityDkimSigningAttributes",
    "EventSource": "sesv2",
    "EventName": "PutEmailIdentityDkimSigningAttributes",
    "Description": "Used to configure or change the DKIM authentication settings for an email domain identity"
  },
  {
    "API": "sesv2:PutEmailIdentityFeedbackAttributes",
    "EventSource": "sesv2",
    "EventName": "PutEmailIdentityFeedbackAttributes",
    "Description": "Used to enable or disable feedback forwarding for an identity"
  },
  {
    "API": "sesv2:PutEmailIdentityMailFromAttributes",
    "EventSource": "sesv2",
    "EventName": "PutEmailIdentityMailFromAttributes",
    "Description": "Used to enable or disable the custom Mail-From domain configuration for an email identity"
  },
  {
    "API": "sesv2:PutSuppressedDestination",
    "EventSource": "sesv2",
    "EventName": "PutSuppressedDestination",
    "Description": "Adds an email address to the suppression list for your account"
  },
  {
    "API": "sesv2:SendBulkEmail",
    "EventSource": "sesv2",
    "EventName": "SendBulkEmail",
    "Description": "Composes an email message to multiple destinations"
  },
  {
    "API": "sesv2:SendCustomVerificationEmail",
    "EventSource": "sesv2",
    "EventName": "SendCustomVerificationEmail",
    "Description": "Adds an email address to the list of identities for your Amazon SES account in the current Amazon Web Services Region and attempts to verify it"
  },
  {
    "API": "sesv2:SendEmail",
    "EventSource": "sesv2",
    "EventName": "SendEmail",
    "Description": "Sends an email message"
  },
  {
    "API": "sesv2:TagResource",
    "EventSource": "sesv2",
    "EventName": "TagResource",
    "Description": "Add one or more tags (keys and values) to a specified resource"
  },
  {
    "API": "sesv2:TestRenderEmailTemplate",
    "EventSource": "sesv2",
    "EventName": "TestRenderEmailTemplate",
    "Description": "Creates a preview of the MIME content of an email when provided with a template and a set of replacement data"
  },
  {
    "API": "sesv2:UntagResource",
    "EventSource": "sesv2",
    "EventName": "UntagResource",
    "Description": "Remove one or more tags (keys and values) from a specified resource"
  },
  {
    "API": "sesv2:UpdateConfigurationSetEventDestination",
    "EventSource": "sesv2",
    "EventName": "UpdateConfigurationSetEventDestination",
    "Description": "Update the configuration of an event destination for a configuration set"
  },
  {
    "API": "sesv2:UpdateContact",
    "EventSource": "sesv2",
    "EventName": "UpdateContact",
    "Description": "Updates a contact's preferences for a list"
  },
  {
    "API": "sesv2:UpdateContactList",
    "EventSource": "sesv2",
    "EventName": "UpdateContactList",
    "Description": "Updates contact list metadata"
  },
  {
    "API": "sesv2:UpdateCustomVerificationEmailTemplate",
    "EventSource": "sesv2",
    "EventName": "UpdateCustomVerificationEmailTemplate",
    "Description": "Updates an existing custom verification email template"
  },
  {
    "API": "sesv2:UpdateEmailIdentityPolicy",
    "EventSource": "sesv2",
    "EventName": "UpdateEmailIdentityPolicy",
    "Description": "Updates the specified sending authorization policy for the given identity (an email address or a domain)"
  },
  {
    "API": "sesv2:UpdateEmailTemplate",
    "EventSource": "sesv2",
    "EventName": "UpdateEmailTemplate",
    "Description": "Updates an email template"
  },
  {
    "API": "shield:AssociateDrtLogBucket",
    "EventSource": "shield",
    "EventName": "AssociateDrtLogBucket",
    "Description": "Authorizes the Shield Response Team (SRT) to access the specified Amazon S3 bucket containing log data such as Application Load Balancer access logs, CloudFront logs, or logs from third party sources"
  },
  {
    "API": "shield:AssociateDrtRole",
    "EventSource": "shield",
    "EventName": "AssociateDrtRole",
    "Description": "Authorizes the Shield Response Team (SRT) using the specified role, to access your Amazon Web Services account to assist with DDoS attack mitigation during potential attacks"
  },
  {
    "API": "shield:AssociateHealthCheck",
    "EventSource": "shield",
    "EventName": "AssociateHealthCheck",
    "Description": "Adds health-based detection to the Shield Advanced protection for a resource"
  },
  {
    "API": "shield:AssociateProactiveEngagementDetails",
    "EventSource": "shield",
    "EventName": "AssociateProactiveEngagementDetails",
    "Description": "Initializes proactive engagement and sets the list of contacts for the Shield Response Team (SRT) to use"
  },
  {
    "API": "shield:CreateProtection",
    "EventSource": "shield",
    "EventName": "CreateProtection",
    "Description": "Enables Shield Advanced for a specific Amazon Web Services resource"
  },
  {
    "API": "shield:CreateProtectionGroup",
    "EventSource": "shield",
    "EventName": "CreateProtectionGroup",
    "Description": "Creates a grouping of protected resources so they can be handled as a collective"
  },
  {
    "API": "shield:CreateSubscription",
    "EventSource": "shield",
    "EventName": "CreateSubscription",
    "Description": "Activates Shield Advanced for an account"
  },
  {
    "API": "shield:DeleteProtection",
    "EventSource": "shield",
    "EventName": "DeleteProtection",
    "Description": "Deletes an Shield Advanced  Protection"
  },
  {
    "API": "shield:DeleteProtectionGroup",
    "EventSource": "shield",
    "EventName": "DeleteProtectionGroup",
    "Description": "Removes the specified protection group"
  },
  {
    "API": "shield:DeleteSubscription",
    "EventSource": "shield",
    "EventName": "DeleteSubscription",
    "Description": "Removes Shield Advanced from an account"
  },
  {
    "API": "shield:DescribeAttack",
    "EventSource": "shield",
    "EventName": "DescribeAttack",
    "Description": "Describes the details of a DDoS attack"
  },
  {
    "API": "shield:DescribeAttackStatistics",
    "EventSource": "shield",
    "EventName": "DescribeAttackStatistics",
    "Description": "Provides information about the number and type of attacks Shield has detected in the last year for all resources that belong to your account, regardless of whether you've defined Shield protections for them"
  },
  {
    "API": "shield:DescribeDrtAccess",
    "EventSource": "shield",
    "EventName": "DescribeDrtAccess",
    "Description": "Returns the current role and list of Amazon S3 log buckets used by the Shield Response Team (SRT) to access your Amazon Web Services account while assisting with attack mitigation"
  },
  {
    "API": "shield:DescribeEmergencyContactSettings",
    "EventSource": "shield",
    "EventName": "DescribeEmergencyContactSettings",
    "Description": "A list of email addresses and phone numbers that the Shield Response Team (SRT) can use to contact you if you have proactive engagement enabled, for escalations to the SRT and to initiate proactive customer support"
  },
  {
    "API": "shield:DescribeProtection",
    "EventSource": "shield",
    "EventName": "DescribeProtection",
    "Description": "Lists the details of a  Protection object"
  },
  {
    "API": "shield:DescribeProtectionGroup",
    "EventSource": "shield",
    "EventName": "DescribeProtectionGroup",
    "Description": "Returns the specification for the specified protection group"
  },
  {
    "API": "shield:DescribeSubscription",
    "EventSource": "shield",
    "EventName": "DescribeSubscription",
    "Description": "Provides details about the Shield Advanced subscription for an account"
  },
  {
    "API": "shield:DisableApplicationLayerAutomaticResponse",
    "EventSource": "shield",
    "EventName": "DisableApplicationLayerAutomaticResponse",
    "Description": "Disable the Shield Advanced automatic application layer DDoS mitigation feature for the protected resource"
  },
  {
    "API": "shield:DisableProactiveEngagement",
    "EventSource": "shield",
    "EventName": "DisableProactiveEngagement",
    "Description": "Removes authorization from the Shield Response Team (SRT) to notify contacts about escalations to the SRT and to initiate proactive customer support"
  },
  {
    "API": "shield:DisassociateDrtLogBucket",
    "EventSource": "shield",
    "EventName": "DisassociateDrtLogBucket",
    "Description": "Removes the Shield Response Team's (SRT) access to the specified Amazon S3 bucket containing the logs that you shared previously"
  },
  {
    "API": "shield:DisassociateDrtRole",
    "EventSource": "shield",
    "EventName": "DisassociateDrtRole",
    "Description": "Removes the Shield Response Team's (SRT) access to your Amazon Web Services account"
  },
  {
    "API": "shield:DisassociateHealthCheck",
    "EventSource": "shield",
    "EventName": "DisassociateHealthCheck",
    "Description": "Removes health-based detection from the Shield Advanced protection for a resource"
  },
  {
    "API": "shield:EnableApplicationLayerAutomaticResponse",
    "EventSource": "shield",
    "EventName": "EnableApplicationLayerAutomaticResponse",
    "Description": "Enable the Shield Advanced automatic application layer DDoS mitigation for the protected resource"
  },
  {
    "API": "shield:EnableProactiveEngagement",
    "EventSource": "shield",
    "EventName": "EnableProactiveEngagement",
    "Description": "Authorizes the Shield Response Team (SRT) to use email and phone to notify contacts about escalations to the SRT and to initiate proactive customer support"
  },
  {
    "API": "shield:GeneratePresignedUrl",
    "EventSource": "shield",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "shield:GetSubscriptionState",
    "EventSource": "shield",
    "EventName": "GetSubscriptionState",
    "Description": "Returns the ``SubscriptionState``, either ``Active`` or ``Inactive``"
  },
  {
    "API": "shield:ListAttacks",
    "EventSource": "shield",
    "EventName": "ListAttacks",
    "Description": "Returns all ongoing DDoS attacks or all DDoS attacks during a specified time period"
  },
  {
    "API": "shield:ListProtectionGroups",
    "EventSource": "shield",
    "EventName": "ListProtectionGroups",
    "Description": "Retrieves  ProtectionGroup objects for the account"
  },
  {
    "API": "shield:ListProtections",
    "EventSource": "shield",
    "EventName": "ListProtections",
    "Description": "Retrieves  Protection objects for the account"
  },
  {
    "API": "shield:ListResourcesInProtectionGroup",
    "EventSource": "shield",
    "EventName": "ListResourcesInProtectionGroup",
    "Description": "Retrieves the resources that are included in the protection group"
  },
  {
    "API": "shield:ListTagsForResource",
    "EventSource": "shield",
    "EventName": "ListTagsForResource",
    "Description": "Gets information about Amazon Web Services tags for a specified Amazon Resource Name (ARN) in Shield"
  },
  {
    "API": "shield:TagResource",
    "EventSource": "shield",
    "EventName": "TagResource",
    "Description": "Adds or updates tags for a resource in Shield"
  },
  {
    "API": "shield:UntagResource",
    "EventSource": "shield",
    "EventName": "UntagResource",
    "Description": "Removes tags from a resource in Shield"
  },
  {
    "API": "shield:UpdateApplicationLayerAutomaticResponse",
    "EventSource": "shield",
    "EventName": "UpdateApplicationLayerAutomaticResponse",
    "Description": "Updates an existing Shield Advanced automatic application layer DDoS mitigation configuration for the specified resource"
  },
  {
    "API": "shield:UpdateEmergencyContactSettings",
    "EventSource": "shield",
    "EventName": "UpdateEmergencyContactSettings",
    "Description": "Updates the details of the list of email addresses and phone numbers that the Shield Response Team (SRT) can use to contact you if you have proactive engagement enabled, for escalations to the SRT and to initiate proactive customer support"
  },
  {
    "API": "shield:UpdateProtectionGroup",
    "EventSource": "shield",
    "EventName": "UpdateProtectionGroup",
    "Description": "Updates an existing protection group"
  },
  {
    "API": "shield:UpdateSubscription",
    "EventSource": "shield",
    "EventName": "UpdateSubscription",
    "Description": "Updates the details of an existing subscription"
  },
  {
    "API": "signer:AddProfilePermission",
    "EventSource": "signer",
    "EventName": "AddProfilePermission",
    "Description": "Adds cross-account permissions to a signing profile"
  },
  {
    "API": "signer:CancelSigningProfile",
    "EventSource": "signer",
    "EventName": "CancelSigningProfile",
    "Description": "Changes the state of an ``ACTIVE`` signing profile to ``CANCELED``"
  },
  {
    "API": "signer:DescribeSigningJob",
    "EventSource": "signer",
    "EventName": "DescribeSigningJob",
    "Description": "Returns information about a specific code signing job"
  },
  {
    "API": "signer:GeneratePresignedUrl",
    "EventSource": "signer",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "signer:GetRevocationStatus",
    "EventSource": "signer",
    "EventName": "GetRevocationStatus",
    "Description": "Retrieves the revocation status of one or more of the signing profile, signing job, and signing certificate"
  },
  {
    "API": "signer:GetSigningPlatform",
    "EventSource": "signer",
    "EventName": "GetSigningPlatform",
    "Description": "Returns information on a specific signing platform"
  },
  {
    "API": "signer:GetSigningProfile",
    "EventSource": "signer",
    "EventName": "GetSigningProfile",
    "Description": "Returns information on a specific signing profile"
  },
  {
    "API": "signer:ListProfilePermissions",
    "EventSource": "signer",
    "EventName": "ListProfilePermissions",
    "Description": "Lists the cross-account permissions associated with a signing profile"
  },
  {
    "API": "signer:ListSigningJobs",
    "EventSource": "signer",
    "EventName": "ListSigningJobs",
    "Description": "Lists all your signing jobs"
  },
  {
    "API": "signer:ListSigningPlatforms",
    "EventSource": "signer",
    "EventName": "ListSigningPlatforms",
    "Description": "Lists all signing platforms available in AWS Signer that match the request parameters"
  },
  {
    "API": "signer:ListSigningProfiles",
    "EventSource": "signer",
    "EventName": "ListSigningProfiles",
    "Description": "Lists all available signing profiles in your AWS account"
  },
  {
    "API": "signer:ListTagsForResource",
    "EventSource": "signer",
    "EventName": "ListTagsForResource",
    "Description": "Returns a list of the tags associated with a signing profile resource"
  },
  {
    "API": "signer:PutSigningProfile",
    "EventSource": "signer",
    "EventName": "PutSigningProfile",
    "Description": "Creates a signing profile"
  },
  {
    "API": "signer:RemoveProfilePermission",
    "EventSource": "signer",
    "EventName": "RemoveProfilePermission",
    "Description": "Removes cross-account permissions from a signing profile"
  },
  {
    "API": "signer:RevokeSignature",
    "EventSource": "signer",
    "EventName": "RevokeSignature",
    "Description": "Changes the state of a signing job to REVOKED"
  },
  {
    "API": "signer:RevokeSigningProfile",
    "EventSource": "signer",
    "EventName": "RevokeSigningProfile",
    "Description": "Changes the state of a signing profile to REVOKED"
  },
  {
    "API": "signer:SignPayload",
    "EventSource": "signer",
    "EventName": "SignPayload",
    "Description": "Signs a binary payload and returns a signature envelope"
  },
  {
    "API": "signer:StartSigningJob",
    "EventSource": "signer",
    "EventName": "StartSigningJob",
    "Description": "Initiates a signing job to be performed on the code provided"
  },
  {
    "API": "signer:TagResource",
    "EventSource": "signer",
    "EventName": "TagResource",
    "Description": "Adds one or more tags to a signing profile"
  },
  {
    "API": "signer:UntagResource",
    "EventSource": "signer",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags from a signing profile"
  },
  {
    "API": "simspaceweaver:CreateSnapshot",
    "EventSource": "simspaceweaver",
    "EventName": "CreateSnapshot",
    "Description": "Creates a snapshot of the specified simulation"
  },
  {
    "API": "simspaceweaver:DeleteApp",
    "EventSource": "simspaceweaver",
    "EventName": "DeleteApp",
    "Description": "Deletes the instance of the given custom app"
  },
  {
    "API": "simspaceweaver:DeleteSimulation",
    "EventSource": "simspaceweaver",
    "EventName": "DeleteSimulation",
    "Description": "Deletes all SimSpace Weaver resources assigned to the given simulation"
  },
  {
    "API": "simspaceweaver:DescribeApp",
    "EventSource": "simspaceweaver",
    "EventName": "DescribeApp",
    "Description": "Returns the state of the given custom app"
  },
  {
    "API": "simspaceweaver:DescribeSimulation",
    "EventSource": "simspaceweaver",
    "EventName": "DescribeSimulation",
    "Description": "Returns the current state of the given simulation"
  },
  {
    "API": "simspaceweaver:GeneratePresignedUrl",
    "EventSource": "simspaceweaver",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "simspaceweaver:ListApps",
    "EventSource": "simspaceweaver",
    "EventName": "ListApps",
    "Description": "Lists all custom apps or service apps for the given simulation and domain"
  },
  {
    "API": "simspaceweaver:ListSimulations",
    "EventSource": "simspaceweaver",
    "EventName": "ListSimulations",
    "Description": "Lists the SimSpace Weaver simulations in the Amazon Web Services account used to make the API call"
  },
  {
    "API": "simspaceweaver:ListTagsForResource",
    "EventSource": "simspaceweaver",
    "EventName": "ListTagsForResource",
    "Description": "Lists all tags on a SimSpace Weaver resource"
  },
  {
    "API": "simspaceweaver:StartApp",
    "EventSource": "simspaceweaver",
    "EventName": "StartApp",
    "Description": "Starts a custom app with the configuration specified in the simulation schema"
  },
  {
    "API": "simspaceweaver:StartClock",
    "EventSource": "simspaceweaver",
    "EventName": "StartClock",
    "Description": "Starts the simulation clock"
  },
  {
    "API": "simspaceweaver:StartSimulation",
    "EventSource": "simspaceweaver",
    "EventName": "StartSimulation",
    "Description": "Starts a simulation with the given name"
  },
  {
    "API": "simspaceweaver:StopApp",
    "EventSource": "simspaceweaver",
    "EventName": "StopApp",
    "Description": "Stops the given custom app and shuts down all of its allocated compute resources"
  },
  {
    "API": "simspaceweaver:StopClock",
    "EventSource": "simspaceweaver",
    "EventName": "StopClock",
    "Description": "Stops the simulation clock"
  },
  {
    "API": "simspaceweaver:StopSimulation",
    "EventSource": "simspaceweaver",
    "EventName": "StopSimulation",
    "Description": "Stops the given simulation"
  },
  {
    "API": "simspaceweaver:TagResource",
    "EventSource": "simspaceweaver",
    "EventName": "TagResource",
    "Description": "Adds tags to a SimSpace Weaver resource"
  },
  {
    "API": "simspaceweaver:UntagResource",
    "EventSource": "simspaceweaver",
    "EventName": "UntagResource",
    "Description": "Removes tags from a SimSpace Weaver resource"
  },
  {
    "API": "sms:CreateApp",
    "EventSource": "sms",
    "EventName": "CreateApp",
    "Description": "Creates an application"
  },
  {
    "API": "sms:CreateReplicationJob",
    "EventSource": "sms",
    "EventName": "CreateReplicationJob",
    "Description": "Creates a replication job"
  },
  {
    "API": "sms:DeleteApp",
    "EventSource": "sms",
    "EventName": "DeleteApp",
    "Description": "Deletes the specified application"
  },
  {
    "API": "sms:DeleteAppLaunchConfiguration",
    "EventSource": "sms",
    "EventName": "DeleteAppLaunchConfiguration",
    "Description": "Deletes the launch configuration for the specified application"
  },
  {
    "API": "sms:DeleteAppReplicationConfiguration",
    "EventSource": "sms",
    "EventName": "DeleteAppReplicationConfiguration",
    "Description": "Deletes the replication configuration for the specified application"
  },
  {
    "API": "sms:DeleteAppValidationConfiguration",
    "EventSource": "sms",
    "EventName": "DeleteAppValidationConfiguration",
    "Description": "Deletes the validation configuration for the specified application"
  },
  {
    "API": "sms:DeleteReplicationJob",
    "EventSource": "sms",
    "EventName": "DeleteReplicationJob",
    "Description": "Deletes the specified replication job"
  },
  {
    "API": "sms:DeleteServerCatalog",
    "EventSource": "sms",
    "EventName": "DeleteServerCatalog",
    "Description": "Deletes all servers from your server catalog"
  },
  {
    "API": "sms:DisassociateConnector",
    "EventSource": "sms",
    "EventName": "DisassociateConnector",
    "Description": "Disassociates the specified connector from Server Migration Service"
  },
  {
    "API": "sms:GenerateChangeSet",
    "EventSource": "sms",
    "EventName": "GenerateChangeSet",
    "Description": "Generates a target change set for a currently launched stack and writes it to an Amazon S3 object in the customer’s Amazon S3 bucket"
  },
  {
    "API": "sms:GeneratePresignedUrl",
    "EventSource": "sms",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "sms:GenerateTemplate",
    "EventSource": "sms",
    "EventName": "GenerateTemplate",
    "Description": "Generates an CloudFormation template based on the current launch configuration and writes it to an Amazon S3 object in the customer’s Amazon S3 bucket"
  },
  {
    "API": "sms:GetApp",
    "EventSource": "sms",
    "EventName": "GetApp",
    "Description": "Retrieve information about the specified application"
  },
  {
    "API": "sms:GetAppLaunchConfiguration",
    "EventSource": "sms",
    "EventName": "GetAppLaunchConfiguration",
    "Description": "Retrieves the application launch configuration associated with the specified application"
  },
  {
    "API": "sms:GetAppReplicationConfiguration",
    "EventSource": "sms",
    "EventName": "GetAppReplicationConfiguration",
    "Description": "Retrieves the application replication configuration associated with the specified application"
  },
  {
    "API": "sms:GetAppValidationConfiguration",
    "EventSource": "sms",
    "EventName": "GetAppValidationConfiguration",
    "Description": "Retrieves information about a configuration for validating an application"
  },
  {
    "API": "sms:GetAppValidationOutput",
    "EventSource": "sms",
    "EventName": "GetAppValidationOutput",
    "Description": "Retrieves output from validating an application"
  },
  {
    "API": "sms:GetConnectors",
    "EventSource": "sms",
    "EventName": "GetConnectors",
    "Description": "Describes the connectors registered with the Server Migration Service"
  },
  {
    "API": "sms:GetReplicationJobs",
    "EventSource": "sms",
    "EventName": "GetReplicationJobs",
    "Description": "Describes the specified replication job or all of your replication jobs"
  },
  {
    "API": "sms:GetReplicationRuns",
    "EventSource": "sms",
    "EventName": "GetReplicationRuns",
    "Description": "Describes the replication runs for the specified replication job"
  },
  {
    "API": "sms:GetServers",
    "EventSource": "sms",
    "EventName": "GetServers",
    "Description": "Describes the servers in your server catalog"
  },
  {
    "API": "sms:ImportAppCatalog",
    "EventSource": "sms",
    "EventName": "ImportAppCatalog",
    "Description": "Allows application import from Migration Hub"
  },
  {
    "API": "sms:ImportServerCatalog",
    "EventSource": "sms",
    "EventName": "ImportServerCatalog",
    "Description": "Gathers a complete list of on-premises servers"
  },
  {
    "API": "sms:LaunchApp",
    "EventSource": "sms",
    "EventName": "LaunchApp",
    "Description": "Launches the specified application as a stack in CloudFormation"
  },
  {
    "API": "sms:ListApps",
    "EventSource": "sms",
    "EventName": "ListApps",
    "Description": "Retrieves summaries for all applications"
  },
  {
    "API": "sms:NotifyAppValidationOutput",
    "EventSource": "sms",
    "EventName": "NotifyAppValidationOutput",
    "Description": "Provides information to Server Migration Service about whether application validation is successful"
  },
  {
    "API": "sms:PutAppLaunchConfiguration",
    "EventSource": "sms",
    "EventName": "PutAppLaunchConfiguration",
    "Description": "Creates or updates the launch configuration for the specified application"
  },
  {
    "API": "sms:PutAppReplicationConfiguration",
    "EventSource": "sms",
    "EventName": "PutAppReplicationConfiguration",
    "Description": "Creates or updates the replication configuration for the specified application"
  },
  {
    "API": "sms:PutAppValidationConfiguration",
    "EventSource": "sms",
    "EventName": "PutAppValidationConfiguration",
    "Description": "Creates or updates a validation configuration for the specified application"
  },
  {
    "API": "sms:StartAppReplication",
    "EventSource": "sms",
    "EventName": "StartAppReplication",
    "Description": "Starts replicating the specified application by creating replication jobs for each server in the application"
  },
  {
    "API": "sms:StartOnDemandAppReplication",
    "EventSource": "sms",
    "EventName": "StartOnDemandAppReplication",
    "Description": "Starts an on-demand replication run for the specified application"
  },
  {
    "API": "sms:StartOnDemandReplicationRun",
    "EventSource": "sms",
    "EventName": "StartOnDemandReplicationRun",
    "Description": "Starts an on-demand replication run for the specified replication job"
  },
  {
    "API": "sms:StopAppReplication",
    "EventSource": "sms",
    "EventName": "StopAppReplication",
    "Description": "Stops replicating the specified application by deleting the replication job for each server in the application"
  },
  {
    "API": "sms:TerminateApp",
    "EventSource": "sms",
    "EventName": "TerminateApp",
    "Description": "Terminates the stack for the specified application"
  },
  {
    "API": "sms:UpdateApp",
    "EventSource": "sms",
    "EventName": "UpdateApp",
    "Description": "Updates the specified application"
  },
  {
    "API": "sms:UpdateReplicationJob",
    "EventSource": "sms",
    "EventName": "UpdateReplicationJob",
    "Description": "Updates the specified settings for the specified replication job"
  },
  {
    "API": "sms-voice:CreateConfigurationSet",
    "EventSource": "sms-voice",
    "EventName": "CreateConfigurationSet",
    "Description": "Create a new configuration set"
  },
  {
    "API": "sms-voice:CreateConfigurationSetEventDestination",
    "EventSource": "sms-voice",
    "EventName": "CreateConfigurationSetEventDestination",
    "Description": "Create a new event destination in a configuration set"
  },
  {
    "API": "sms-voice:DeleteConfigurationSet",
    "EventSource": "sms-voice",
    "EventName": "DeleteConfigurationSet",
    "Description": "Deletes an existing configuration set"
  },
  {
    "API": "sms-voice:DeleteConfigurationSetEventDestination",
    "EventSource": "sms-voice",
    "EventName": "DeleteConfigurationSetEventDestination",
    "Description": "Deletes an event destination in a configuration set"
  },
  {
    "API": "sms-voice:GeneratePresignedUrl",
    "EventSource": "sms-voice",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "sms-voice:GetConfigurationSetEventDestinations",
    "EventSource": "sms-voice",
    "EventName": "GetConfigurationSetEventDestinations",
    "Description": "Obtain information about an event destination, including the types of events it reports, the Amazon Resource Name (ARN) of the destination, and the name of the event destination"
  },
  {
    "API": "sms-voice:ListConfigurationSets",
    "EventSource": "sms-voice",
    "EventName": "ListConfigurationSets",
    "Description": "List all of the configuration sets associated with your Amazon Pinpoint account in the current region"
  },
  {
    "API": "sms-voice:SendVoiceMessage",
    "EventSource": "sms-voice",
    "EventName": "SendVoiceMessage",
    "Description": "Create a new voice message and send it to a recipient's phone number"
  },
  {
    "API": "sms-voice:UpdateConfigurationSetEventDestination",
    "EventSource": "sms-voice",
    "EventName": "UpdateConfigurationSetEventDestination",
    "Description": "Update an event destination in a configuration set"
  },
  {
    "API": "snow-device-management:CancelTask",
    "EventSource": "snow-device-management",
    "EventName": "CancelTask",
    "Description": "Sends a cancel request for a specified task"
  },
  {
    "API": "snow-device-management:CreateTask",
    "EventSource": "snow-device-management",
    "EventName": "CreateTask",
    "Description": "Instructs one or more devices to start a task, such as unlocking or rebooting"
  },
  {
    "API": "snow-device-management:DescribeDevice",
    "EventSource": "snow-device-management",
    "EventName": "DescribeDevice",
    "Description": "Checks device-specific information, such as the device type, software version, IP addresses, and lock status"
  },
  {
    "API": "snow-device-management:DescribeDeviceEc2Instances",
    "EventSource": "snow-device-management",
    "EventName": "DescribeDeviceEc2Instances",
    "Description": "Checks the current state of the Amazon EC2 instances"
  },
  {
    "API": "snow-device-management:DescribeExecution",
    "EventSource": "snow-device-management",
    "EventName": "DescribeExecution",
    "Description": "Checks the status of a remote task running on one or more target devices"
  },
  {
    "API": "snow-device-management:DescribeTask",
    "EventSource": "snow-device-management",
    "EventName": "DescribeTask",
    "Description": "Checks the metadata for a given task on a device"
  },
  {
    "API": "snow-device-management:GeneratePresignedUrl",
    "EventSource": "snow-device-management",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "snow-device-management:ListDeviceResources",
    "EventSource": "snow-device-management",
    "EventName": "ListDeviceResources",
    "Description": "Returns a list of the Amazon Web Services resources available for a device"
  },
  {
    "API": "snow-device-management:ListDevices",
    "EventSource": "snow-device-management",
    "EventName": "ListDevices",
    "Description": "Returns a list of all devices on your Amazon Web Services account that have Amazon Web Services Snow Device Management enabled in the Amazon Web Services Region where the command is run"
  },
  {
    "API": "snow-device-management:ListExecutions",
    "EventSource": "snow-device-management",
    "EventName": "ListExecutions",
    "Description": "Returns the status of tasks for one or more target devices"
  },
  {
    "API": "snow-device-management:ListTagsForResource",
    "EventSource": "snow-device-management",
    "EventName": "ListTagsForResource",
    "Description": "Returns a list of tags for a managed device or task"
  },
  {
    "API": "snow-device-management:ListTasks",
    "EventSource": "snow-device-management",
    "EventName": "ListTasks",
    "Description": "Returns a list of tasks that can be filtered by state"
  },
  {
    "API": "snow-device-management:TagResource",
    "EventSource": "snow-device-management",
    "EventName": "TagResource",
    "Description": "Adds or replaces tags on a device or task"
  },
  {
    "API": "snow-device-management:UntagResource",
    "EventSource": "snow-device-management",
    "EventName": "UntagResource",
    "Description": "Removes a tag from a device or task"
  },
  {
    "API": "snowball:CancelCluster",
    "EventSource": "snowball",
    "EventName": "CancelCluster",
    "Description": "Cancels a cluster job"
  },
  {
    "API": "snowball:CancelJob",
    "EventSource": "snowball",
    "EventName": "CancelJob",
    "Description": "Cancels the specified job"
  },
  {
    "API": "snowball:CreateAddress",
    "EventSource": "snowball",
    "EventName": "CreateAddress",
    "Description": "Creates an address for a Snow device to be shipped to"
  },
  {
    "API": "snowball:CreateCluster",
    "EventSource": "snowball",
    "EventName": "CreateCluster",
    "Description": "Creates an empty cluster"
  },
  {
    "API": "snowball:CreateJob",
    "EventSource": "snowball",
    "EventName": "CreateJob",
    "Description": "Creates a job to import or export data between Amazon S3 and your on-premises data center"
  },
  {
    "API": "snowball:CreateLongTermPricing",
    "EventSource": "snowball",
    "EventName": "CreateLongTermPricing",
    "Description": "Creates a job with the long-term usage option for a device"
  },
  {
    "API": "snowball:CreateReturnShippingLabel",
    "EventSource": "snowball",
    "EventName": "CreateReturnShippingLabel",
    "Description": "Creates a shipping label that will be used to return the Snow device to Amazon Web Services"
  },
  {
    "API": "snowball:DescribeAddress",
    "EventSource": "snowball",
    "EventName": "DescribeAddress",
    "Description": "Takes an ``AddressId`` and returns specific details about that address in the form of an ``Address`` object"
  },
  {
    "API": "snowball:DescribeAddresses",
    "EventSource": "snowball",
    "EventName": "DescribeAddresses",
    "Description": "Returns a specified number of ``ADDRESS`` objects"
  },
  {
    "API": "snowball:DescribeCluster",
    "EventSource": "snowball",
    "EventName": "DescribeCluster",
    "Description": "Returns information about a specific cluster including shipping information, cluster status, and other important metadata"
  },
  {
    "API": "snowball:DescribeJob",
    "EventSource": "snowball",
    "EventName": "DescribeJob",
    "Description": "Returns information about a specific job including shipping information, job status, and other important metadata"
  },
  {
    "API": "snowball:DescribeReturnShippingLabel",
    "EventSource": "snowball",
    "EventName": "DescribeReturnShippingLabel",
    "Description": "Information on the shipping label of a Snow device that is being returned to Amazon Web Services"
  },
  {
    "API": "snowball:GeneratePresignedUrl",
    "EventSource": "snowball",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "snowball:GetJobManifest",
    "EventSource": "snowball",
    "EventName": "GetJobManifest",
    "Description": "Returns a link to an Amazon S3 presigned URL for the manifest file associated with the specified ``JobId`` value"
  },
  {
    "API": "snowball:GetJobUnlockCode",
    "EventSource": "snowball",
    "EventName": "GetJobUnlockCode",
    "Description": "Returns the ``UnlockCode`` code value for the specified job"
  },
  {
    "API": "snowball:GetSnowballUsage",
    "EventSource": "snowball",
    "EventName": "GetSnowballUsage",
    "Description": "Returns information about the Snow Family service limit for your account, and also the number of Snow devices your account has in use"
  },
  {
    "API": "snowball:GetSoftwareUpdates",
    "EventSource": "snowball",
    "EventName": "GetSoftwareUpdates",
    "Description": "Returns an Amazon S3 presigned URL for an update file associated with a specified ``JobId``"
  },
  {
    "API": "snowball:ListClusterJobs",
    "EventSource": "snowball",
    "EventName": "ListClusterJobs",
    "Description": "Returns an array of ``JobListEntry`` objects of the specified length"
  },
  {
    "API": "snowball:ListClusters",
    "EventSource": "snowball",
    "EventName": "ListClusters",
    "Description": "Returns an array of ``ClusterListEntry`` objects of the specified length"
  },
  {
    "API": "snowball:ListCompatibleImages",
    "EventSource": "snowball",
    "EventName": "ListCompatibleImages",
    "Description": "This action returns a list of the different Amazon EC2-compatible Amazon Machine Images (AMIs) that are owned by your Amazon Web Services accountthat would be supported for use on a Snow device"
  },
  {
    "API": "snowball:ListJobs",
    "EventSource": "snowball",
    "EventName": "ListJobs",
    "Description": "Returns an array of ``JobListEntry`` objects of the specified length"
  },
  {
    "API": "snowball:ListLongTermPricing",
    "EventSource": "snowball",
    "EventName": "ListLongTermPricing",
    "Description": "Lists all long-term pricing types"
  },
  {
    "API": "snowball:ListPickupLocations",
    "EventSource": "snowball",
    "EventName": "ListPickupLocations",
    "Description": "A list of locations from which the customer can choose to pickup a device"
  },
  {
    "API": "snowball:ListServiceVersions",
    "EventSource": "snowball",
    "EventName": "ListServiceVersions",
    "Description": "Lists all supported versions for Snow on-device services"
  },
  {
    "API": "snowball:UpdateCluster",
    "EventSource": "snowball",
    "EventName": "UpdateCluster",
    "Description": "While a cluster's ``ClusterState`` value is in the ``AwaitingQuorum`` state, you can update some of the information associated with a cluster"
  },
  {
    "API": "snowball:UpdateJob",
    "EventSource": "snowball",
    "EventName": "UpdateJob",
    "Description": "While a job's ``JobState`` value is ``New``, you can update some of the information associated with a job"
  },
  {
    "API": "snowball:UpdateJobShipmentState",
    "EventSource": "snowball",
    "EventName": "UpdateJobShipmentState",
    "Description": "Updates the state when a shipment state changes to a different state"
  },
  {
    "API": "snowball:UpdateLongTermPricing",
    "EventSource": "snowball",
    "EventName": "UpdateLongTermPricing",
    "Description": "Updates the long-term pricing type"
  },
  {
    "API": "sns:AddPermission",
    "EventSource": "sns",
    "EventName": "AddPermission",
    "Description": "Adds a statement to a topic's access control policy, granting access for the specified Amazon Web Services accounts to the specified actions"
  },
  {
    "API": "sns:CheckIfPhoneNumberIsOptedOut",
    "EventSource": "sns",
    "EventName": "CheckIfPhoneNumberIsOptedOut",
    "Description": "Accepts a phone number and indicates whether the phone holder has opted out of receiving SMS messages from your Amazon Web Services account"
  },
  {
    "API": "sns:ConfirmSubscription",
    "EventSource": "sns",
    "EventName": "ConfirmSubscription",
    "Description": "Verifies an endpoint owner's intent to receive messages by validating the token sent to the endpoint by an earlier ``Subscribe`` action"
  },
  {
    "API": "sns:CreatePlatformApplication",
    "EventSource": "sns",
    "EventName": "CreatePlatformApplication",
    "Description": "Creates a platform application object for one of the supported push notification services, such as APNS and GCM (Firebase Cloud Messaging), to which devices and mobile apps may register"
  },
  {
    "API": "sns:CreatePlatformEndpoint",
    "EventSource": "sns",
    "EventName": "CreatePlatformEndpoint",
    "Description": "Creates an endpoint for a device and mobile app on one of the supported push notification services, such as GCM (Firebase Cloud Messaging) and APNS"
  },
  {
    "API": "sns:CreateSmsSandboxPhoneNumber",
    "EventSource": "sns",
    "EventName": "CreateSmsSandboxPhoneNumber",
    "Description": "Adds a destination phone number to an Amazon Web Services account in the SMS sandbox and sends a one-time password (OTP) to that phone number"
  },
  {
    "API": "sns:CreateTopic",
    "EventSource": "sns",
    "EventName": "CreateTopic",
    "Description": "Creates a topic to which notifications can be published"
  },
  {
    "API": "sns:DeleteEndpoint",
    "EventSource": "sns",
    "EventName": "DeleteEndpoint",
    "Description": "Deletes the endpoint for a device and mobile app from Amazon SNS"
  },
  {
    "API": "sns:DeletePlatformApplication",
    "EventSource": "sns",
    "EventName": "DeletePlatformApplication",
    "Description": "Deletes a platform application object for one of the supported push notification services, such as APNS and GCM (Firebase Cloud Messaging)"
  },
  {
    "API": "sns:DeleteSmsSandboxPhoneNumber",
    "EventSource": "sns",
    "EventName": "DeleteSmsSandboxPhoneNumber",
    "Description": "Deletes an Amazon Web Services account's verified or pending phone number from the SMS sandbox"
  },
  {
    "API": "sns:DeleteTopic",
    "EventSource": "sns",
    "EventName": "DeleteTopic",
    "Description": "Deletes a topic and all its subscriptions"
  },
  {
    "API": "sns:GeneratePresignedUrl",
    "EventSource": "sns",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "sns:GetDataProtectionPolicy",
    "EventSource": "sns",
    "EventName": "GetDataProtectionPolicy",
    "Description": "Retrieves the specified inline ``DataProtectionPolicy`` document that is stored in the specified Amazon SNS topic"
  },
  {
    "API": "sns:GetEndpointAttributes",
    "EventSource": "sns",
    "EventName": "GetEndpointAttributes",
    "Description": "Retrieves the endpoint attributes for a device on one of the supported push notification services, such as GCM (Firebase Cloud Messaging) and APNS"
  },
  {
    "API": "sns:GetPlatformApplicationAttributes",
    "EventSource": "sns",
    "EventName": "GetPlatformApplicationAttributes",
    "Description": "Retrieves the attributes of the platform application object for the supported push notification services, such as APNS and GCM (Firebase Cloud Messaging)"
  },
  {
    "API": "sns:GetSmsAttributes",
    "EventSource": "sns",
    "EventName": "GetSmsAttributes",
    "Description": "Returns the settings for sending SMS messages from your Amazon Web Services account"
  },
  {
    "API": "sns:GetSmsSandboxAccountStatus",
    "EventSource": "sns",
    "EventName": "GetSmsSandboxAccountStatus",
    "Description": "Retrieves the SMS sandbox status for the calling Amazon Web Services account in the target Amazon Web Services Region"
  },
  {
    "API": "sns:GetSubscriptionAttributes",
    "EventSource": "sns",
    "EventName": "GetSubscriptionAttributes",
    "Description": "Returns all of the properties of a subscription"
  },
  {
    "API": "sns:GetTopicAttributes",
    "EventSource": "sns",
    "EventName": "GetTopicAttributes",
    "Description": "Returns all of the properties of a topic"
  },
  {
    "API": "sns:ListEndpointsByPlatformApplication",
    "EventSource": "sns",
    "EventName": "ListEndpointsByPlatformApplication",
    "Description": "Lists the endpoints and endpoint attributes for devices in a supported push notification service, such as GCM (Firebase Cloud Messaging) and APNS"
  },
  {
    "API": "sns:ListOriginationNumbers",
    "EventSource": "sns",
    "EventName": "ListOriginationNumbers",
    "Description": "Lists the calling Amazon Web Services account's dedicated origination numbers and their metadata"
  },
  {
    "API": "sns:ListPhoneNumbersOptedOut",
    "EventSource": "sns",
    "EventName": "ListPhoneNumbersOptedOut",
    "Description": "Returns a list of phone numbers that are opted out, meaning you cannot send SMS messages to them"
  },
  {
    "API": "sns:ListPlatformApplications",
    "EventSource": "sns",
    "EventName": "ListPlatformApplications",
    "Description": "Lists the platform application objects for the supported push notification services, such as APNS and GCM (Firebase Cloud Messaging)"
  },
  {
    "API": "sns:ListSmsSandboxPhoneNumbers",
    "EventSource": "sns",
    "EventName": "ListSmsSandboxPhoneNumbers",
    "Description": "Lists the calling Amazon Web Services account's current verified and pending destination phone numbers in the SMS sandbox"
  },
  {
    "API": "sns:ListSubscriptions",
    "EventSource": "sns",
    "EventName": "ListSubscriptions",
    "Description": "Returns a list of the requester's subscriptions"
  },
  {
    "API": "sns:ListSubscriptionsByTopic",
    "EventSource": "sns",
    "EventName": "ListSubscriptionsByTopic",
    "Description": "Returns a list of the subscriptions to a specific topic"
  },
  {
    "API": "sns:ListTagsForResource",
    "EventSource": "sns",
    "EventName": "ListTagsForResource",
    "Description": "List all tags added to the specified Amazon SNS topic"
  },
  {
    "API": "sns:ListTopics",
    "EventSource": "sns",
    "EventName": "ListTopics",
    "Description": "Returns a list of the requester's topics"
  },
  {
    "API": "sns:OptInPhoneNumber",
    "EventSource": "sns",
    "EventName": "OptInPhoneNumber",
    "Description": "Use this request to opt in a phone number that is opted out, which enables you to resume sending SMS messages to the number"
  },
  {
    "API": "sns:PublishBatch",
    "EventSource": "sns",
    "EventName": "PublishBatch",
    "Description": "Publishes up to ten messages to the specified topic"
  },
  {
    "API": "sns:PutDataProtectionPolicy",
    "EventSource": "sns",
    "EventName": "PutDataProtectionPolicy",
    "Description": "Adds or updates an inline policy document that is stored in the specified Amazon SNS topic"
  },
  {
    "API": "sns:RemovePermission",
    "EventSource": "sns",
    "EventName": "RemovePermission",
    "Description": "Removes a statement from a topic's access control policy"
  },
  {
    "API": "sns:SetEndpointAttributes",
    "EventSource": "sns",
    "EventName": "SetEndpointAttributes",
    "Description": "Sets the attributes for an endpoint for a device on one of the supported push notification services, such as GCM (Firebase Cloud Messaging) and APNS"
  },
  {
    "API": "sns:SetPlatformApplicationAttributes",
    "EventSource": "sns",
    "EventName": "SetPlatformApplicationAttributes",
    "Description": "Sets the attributes of the platform application object for the supported push notification services, such as APNS and GCM (Firebase Cloud Messaging)"
  },
  {
    "API": "sns:SetSmsAttributes",
    "EventSource": "sns",
    "EventName": "SetSmsAttributes",
    "Description": "Use this request to set the default settings for sending SMS messages and receiving daily SMS usage reports"
  },
  {
    "API": "sns:SetSubscriptionAttributes",
    "EventSource": "sns",
    "EventName": "SetSubscriptionAttributes",
    "Description": "Allows a subscription owner to set an attribute of the subscription to a new value"
  },
  {
    "API": "sns:SetTopicAttributes",
    "EventSource": "sns",
    "EventName": "SetTopicAttributes",
    "Description": "Allows a topic owner to set an attribute of the topic to a new value"
  },
  {
    "API": "sns:TagResource",
    "EventSource": "sns",
    "EventName": "TagResource",
    "Description": "Add tags to the specified Amazon SNS topic"
  },
  {
    "API": "sns:UntagResource",
    "EventSource": "sns",
    "EventName": "UntagResource",
    "Description": "Remove tags from the specified Amazon SNS topic"
  },
  {
    "API": "sns:VerifySmsSandboxPhoneNumber",
    "EventSource": "sns",
    "EventName": "VerifySmsSandboxPhoneNumber",
    "Description": "Verifies a destination phone number with a one-time password (OTP) for the calling Amazon Web Services account"
  },
  {
    "API": "sqs:AddPermission",
    "EventSource": "sqs",
    "EventName": "AddPermission",
    "Description": "Adds a permission to a queue for a specific `principal <https://docs"
  },
  {
    "API": "sqs:CancelMessageMoveTask",
    "EventSource": "sqs",
    "EventName": "CancelMessageMoveTask",
    "Description": "Cancels a specified message movement task"
  },
  {
    "API": "sqs:ChangeMessageVisibility",
    "EventSource": "sqs",
    "EventName": "ChangeMessageVisibility",
    "Description": "Changes the visibility timeout of a specified message in a queue to a new value"
  },
  {
    "API": "sqs:ChangeMessageVisibilityBatch",
    "EventSource": "sqs",
    "EventName": "ChangeMessageVisibilityBatch",
    "Description": "Changes the visibility timeout of multiple messages"
  },
  {
    "API": "sqs:CreateQueue",
    "EventSource": "sqs",
    "EventName": "CreateQueue",
    "Description": "Creates a new standard or FIFO queue"
  },
  {
    "API": "sqs:DeleteMessage",
    "EventSource": "sqs",
    "EventName": "DeleteMessage",
    "Description": "Deletes the specified message from the specified queue"
  },
  {
    "API": "sqs:DeleteMessageBatch",
    "EventSource": "sqs",
    "EventName": "DeleteMessageBatch",
    "Description": "Deletes up to ten messages from the specified queue"
  },
  {
    "API": "sqs:DeleteQueue",
    "EventSource": "sqs",
    "EventName": "DeleteQueue",
    "Description": "Deletes the queue specified by the ``QueueUrl``, regardless of the queue's contents"
  },
  {
    "API": "sqs:GeneratePresignedUrl",
    "EventSource": "sqs",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "sqs:GetQueueAttributes",
    "EventSource": "sqs",
    "EventName": "GetQueueAttributes",
    "Description": "Gets attributes for the specified queue"
  },
  {
    "API": "sqs:GetQueueUrl",
    "EventSource": "sqs",
    "EventName": "GetQueueUrl",
    "Description": "Returns the URL of an existing Amazon SQS queue"
  },
  {
    "API": "sqs:ListDeadLetterSourceQueues",
    "EventSource": "sqs",
    "EventName": "ListDeadLetterSourceQueues",
    "Description": "Returns a list of your queues that have the ``RedrivePolicy`` queue attribute configured with a dead-letter queue"
  },
  {
    "API": "sqs:ListMessageMoveTasks",
    "EventSource": "sqs",
    "EventName": "ListMessageMoveTasks",
    "Description": "Gets the most recent message movement tasks (up to 10) under a specific source queue"
  },
  {
    "API": "sqs:ListQueueTags",
    "EventSource": "sqs",
    "EventName": "ListQueueTags",
    "Description": "List all cost allocation tags added to the specified Amazon SQS queue"
  },
  {
    "API": "sqs:ListQueues",
    "EventSource": "sqs",
    "EventName": "ListQueues",
    "Description": "Returns a list of your queues in the current region"
  },
  {
    "API": "sqs:PurgeQueue",
    "EventSource": "sqs",
    "EventName": "PurgeQueue",
    "Description": "Deletes available messages in a queue (including in-flight messages) specified by the ``QueueURL`` parameter"
  },
  {
    "API": "sqs:ReceiveMessage",
    "EventSource": "sqs",
    "EventName": "ReceiveMessage",
    "Description": "Retrieves one or more messages (up to 10), from the specified queue"
  },
  {
    "API": "sqs:RemovePermission",
    "EventSource": "sqs",
    "EventName": "RemovePermission",
    "Description": "Revokes any permissions in the queue policy that matches the specified ``Label`` parameter"
  },
  {
    "API": "sqs:SendMessage",
    "EventSource": "sqs",
    "EventName": "SendMessage",
    "Description": "Delivers a message to the specified queue"
  },
  {
    "API": "sqs:SendMessageBatch",
    "EventSource": "sqs",
    "EventName": "SendMessageBatch",
    "Description": "You can use ``SendMessageBatch`` to send up to 10 messages to the specified queue by assigning either identical or different values to each message (or by not assigning values at all)"
  },
  {
    "API": "sqs:SetQueueAttributes",
    "EventSource": "sqs",
    "EventName": "SetQueueAttributes",
    "Description": "Sets the value of one or more queue attributes, like a policy"
  },
  {
    "API": "sqs:StartMessageMoveTask",
    "EventSource": "sqs",
    "EventName": "StartMessageMoveTask",
    "Description": "Starts an asynchronous task to move messages from a specified source queue to a specified destination queue"
  },
  {
    "API": "sqs:TagQueue",
    "EventSource": "sqs",
    "EventName": "TagQueue",
    "Description": "Add cost allocation tags to the specified Amazon SQS queue"
  },
  {
    "API": "sqs:UntagQueue",
    "EventSource": "sqs",
    "EventName": "UntagQueue",
    "Description": "Remove cost allocation tags from the specified Amazon SQS queue"
  },
  {
    "API": "ssm:AddTagsToResource",
    "EventSource": "ssm",
    "EventName": "AddTagsToResource",
    "Description": "Adds or overwrites one or more tags for the specified resource"
  },
  {
    "API": "ssm:AssociateOpsItemRelatedItem",
    "EventSource": "ssm",
    "EventName": "AssociateOpsItemRelatedItem",
    "Description": "Associates a related item to a Systems Manager OpsCenter OpsItem"
  },
  {
    "API": "ssm:CancelCommand",
    "EventSource": "ssm",
    "EventName": "CancelCommand",
    "Description": "Attempts to cancel the command specified by the Command ID"
  },
  {
    "API": "ssm:CancelMaintenanceWindowExecution",
    "EventSource": "ssm",
    "EventName": "CancelMaintenanceWindowExecution",
    "Description": "Stops a maintenance window execution that is already in progress and cancels any tasks in the window that haven't already starting running"
  },
  {
    "API": "ssm:CreateActivation",
    "EventSource": "ssm",
    "EventName": "CreateActivation",
    "Description": "Generates an activation code and activation ID you can use to register your on-premises servers, edge devices, or virtual machine (VM) with Amazon Web Services Systems Manager"
  },
  {
    "API": "ssm:CreateAssociation",
    "EventSource": "ssm",
    "EventName": "CreateAssociation",
    "Description": "A State Manager association defines the state that you want to maintain on your managed nodes"
  },
  {
    "API": "ssm:CreateAssociationBatch",
    "EventSource": "ssm",
    "EventName": "CreateAssociationBatch",
    "Description": "Associates the specified Amazon Web Services Systems Manager document (SSM document) with the specified managed nodes or targets"
  },
  {
    "API": "ssm:CreateDocument",
    "EventSource": "ssm",
    "EventName": "CreateDocument",
    "Description": "Creates a Amazon Web Services Systems Manager (SSM document)"
  },
  {
    "API": "ssm:CreateMaintenanceWindow",
    "EventSource": "ssm",
    "EventName": "CreateMaintenanceWindow",
    "Description": "Creates a new maintenance window"
  },
  {
    "API": "ssm:CreateOpsItem",
    "EventSource": "ssm",
    "EventName": "CreateOpsItem",
    "Description": "Creates a new OpsItem"
  },
  {
    "API": "ssm:CreateOpsMetadata",
    "EventSource": "ssm",
    "EventName": "CreateOpsMetadata",
    "Description": "If you create a new application in Application Manager, Amazon Web Services Systems Manager calls this API operation to specify information about the new application, including the application type"
  },
  {
    "API": "ssm:CreatePatchBaseline",
    "EventSource": "ssm",
    "EventName": "CreatePatchBaseline",
    "Description": "Creates a patch baseline"
  },
  {
    "API": "ssm:CreateResourceDataSync",
    "EventSource": "ssm",
    "EventName": "CreateResourceDataSync",
    "Description": "A resource data sync helps you view data from multiple sources in a single location"
  },
  {
    "API": "ssm:DeleteActivation",
    "EventSource": "ssm",
    "EventName": "DeleteActivation",
    "Description": "Deletes an activation"
  },
  {
    "API": "ssm:DeleteAssociation",
    "EventSource": "ssm",
    "EventName": "DeleteAssociation",
    "Description": "Disassociates the specified Amazon Web Services Systems Manager document (SSM document) from the specified managed node"
  },
  {
    "API": "ssm:DeleteDocument",
    "EventSource": "ssm",
    "EventName": "DeleteDocument",
    "Description": "Deletes the Amazon Web Services Systems Manager document (SSM document) and all managed node associations to the document"
  },
  {
    "API": "ssm:DeleteInventory",
    "EventSource": "ssm",
    "EventName": "DeleteInventory",
    "Description": "Delete a custom inventory type or the data associated with a custom Inventory type"
  },
  {
    "API": "ssm:DeleteMaintenanceWindow",
    "EventSource": "ssm",
    "EventName": "DeleteMaintenanceWindow",
    "Description": "Deletes a maintenance window"
  },
  {
    "API": "ssm:DeleteOpsItem",
    "EventSource": "ssm",
    "EventName": "DeleteOpsItem",
    "Description": "Delete an OpsItem"
  },
  {
    "API": "ssm:DeleteOpsMetadata",
    "EventSource": "ssm",
    "EventName": "DeleteOpsMetadata",
    "Description": "Delete OpsMetadata related to an application"
  },
  {
    "API": "ssm:DeleteParameter",
    "EventSource": "ssm",
    "EventName": "DeleteParameter",
    "Description": "Delete a parameter from the system"
  },
  {
    "API": "ssm:DeleteParameters",
    "EventSource": "ssm",
    "EventName": "DeleteParameters",
    "Description": "Delete a list of parameters"
  },
  {
    "API": "ssm:DeletePatchBaseline",
    "EventSource": "ssm",
    "EventName": "DeletePatchBaseline",
    "Description": "Deletes a patch baseline"
  },
  {
    "API": "ssm:DeleteResourceDataSync",
    "EventSource": "ssm",
    "EventName": "DeleteResourceDataSync",
    "Description": "Deletes a resource data sync configuration"
  },
  {
    "API": "ssm:DeleteResourcePolicy",
    "EventSource": "ssm",
    "EventName": "DeleteResourcePolicy",
    "Description": "Deletes a Systems Manager resource policy"
  },
  {
    "API": "ssm:DeregisterManagedInstance",
    "EventSource": "ssm",
    "EventName": "DeregisterManagedInstance",
    "Description": "Removes the server or virtual machine from the list of registered servers"
  },
  {
    "API": "ssm:DeregisterPatchBaselineForPatchGroup",
    "EventSource": "ssm",
    "EventName": "DeregisterPatchBaselineForPatchGroup",
    "Description": "Removes a patch group from a patch baseline"
  },
  {
    "API": "ssm:DeregisterTargetFromMaintenanceWindow",
    "EventSource": "ssm",
    "EventName": "DeregisterTargetFromMaintenanceWindow",
    "Description": "Removes a target from a maintenance window"
  },
  {
    "API": "ssm:DeregisterTaskFromMaintenanceWindow",
    "EventSource": "ssm",
    "EventName": "DeregisterTaskFromMaintenanceWindow",
    "Description": "Removes a task from a maintenance window"
  },
  {
    "API": "ssm:DescribeActivations",
    "EventSource": "ssm",
    "EventName": "DescribeActivations",
    "Description": "Describes details about the activation, such as the date and time the activation was created, its expiration date, the Identity and Access Management (IAM) role assigned to the managed nodes in the activation, and the number of nodes registered by using this activation"
  },
  {
    "API": "ssm:DescribeAssociation",
    "EventSource": "ssm",
    "EventName": "DescribeAssociation",
    "Description": "Describes the association for the specified target or managed node"
  },
  {
    "API": "ssm:DescribeAssociationExecutionTargets",
    "EventSource": "ssm",
    "EventName": "DescribeAssociationExecutionTargets",
    "Description": "Views information about a specific execution of a specific association"
  },
  {
    "API": "ssm:DescribeAssociationExecutions",
    "EventSource": "ssm",
    "EventName": "DescribeAssociationExecutions",
    "Description": "Views all executions for a specific association ID"
  },
  {
    "API": "ssm:DescribeAutomationExecutions",
    "EventSource": "ssm",
    "EventName": "DescribeAutomationExecutions",
    "Description": "Provides details about all active and terminated Automation executions"
  },
  {
    "API": "ssm:DescribeAutomationStepExecutions",
    "EventSource": "ssm",
    "EventName": "DescribeAutomationStepExecutions",
    "Description": "Information about all active and terminated step executions in an Automation workflow"
  },
  {
    "API": "ssm:DescribeAvailablePatches",
    "EventSource": "ssm",
    "EventName": "DescribeAvailablePatches",
    "Description": "Lists all patches eligible to be included in a patch baseline"
  },
  {
    "API": "ssm:DescribeDocument",
    "EventSource": "ssm",
    "EventName": "DescribeDocument",
    "Description": "Describes the specified Amazon Web Services Systems Manager document (SSM document)"
  },
  {
    "API": "ssm:DescribeDocumentPermission",
    "EventSource": "ssm",
    "EventName": "DescribeDocumentPermission",
    "Description": "Describes the permissions for a Amazon Web Services Systems Manager document (SSM document)"
  },
  {
    "API": "ssm:DescribeEffectiveInstanceAssociations",
    "EventSource": "ssm",
    "EventName": "DescribeEffectiveInstanceAssociations",
    "Description": "All associations for the managed nodes"
  },
  {
    "API": "ssm:DescribeEffectivePatchesForPatchBaseline",
    "EventSource": "ssm",
    "EventName": "DescribeEffectivePatchesForPatchBaseline",
    "Description": "Retrieves the current effective patches (the patch and the approval state) for the specified patch baseline"
  },
  {
    "API": "ssm:DescribeInstanceAssociationsStatus",
    "EventSource": "ssm",
    "EventName": "DescribeInstanceAssociationsStatus",
    "Description": "The status of the associations for the managed nodes"
  },
  {
    "API": "ssm:DescribeInstanceInformation",
    "EventSource": "ssm",
    "EventName": "DescribeInstanceInformation",
    "Description": "Provides information about one or more of your managed nodes, including the operating system platform, SSM Agent version, association status, and IP address"
  },
  {
    "API": "ssm:DescribeInstancePatchStates",
    "EventSource": "ssm",
    "EventName": "DescribeInstancePatchStates",
    "Description": "Retrieves the high-level patch state of one or more managed nodes"
  },
  {
    "API": "ssm:DescribeInstancePatchStatesForPatchGroup",
    "EventSource": "ssm",
    "EventName": "DescribeInstancePatchStatesForPatchGroup",
    "Description": "Retrieves the high-level patch state for the managed nodes in the specified patch group"
  },
  {
    "API": "ssm:DescribeInstancePatches",
    "EventSource": "ssm",
    "EventName": "DescribeInstancePatches",
    "Description": "Retrieves information about the patches on the specified managed node and their state relative to the patch baseline being used for the node"
  },
  {
    "API": "ssm:DescribeInstanceProperties",
    "EventSource": "ssm",
    "EventName": "DescribeInstanceProperties",
    "Description": "An API operation used by the Systems Manager console to display information about Systems Manager managed nodes"
  },
  {
    "API": "ssm:DescribeInventoryDeletions",
    "EventSource": "ssm",
    "EventName": "DescribeInventoryDeletions",
    "Description": "Describes a specific delete inventory operation"
  },
  {
    "API": "ssm:DescribeMaintenanceWindowExecutionTaskInvocations",
    "EventSource": "ssm",
    "EventName": "DescribeMaintenanceWindowExecutionTaskInvocations",
    "Description": "Retrieves the individual task executions (one per target) for a particular task run as part of a maintenance window execution"
  },
  {
    "API": "ssm:DescribeMaintenanceWindowExecutionTasks",
    "EventSource": "ssm",
    "EventName": "DescribeMaintenanceWindowExecutionTasks",
    "Description": "For a given maintenance window execution, lists the tasks that were run"
  },
  {
    "API": "ssm:DescribeMaintenanceWindowExecutions",
    "EventSource": "ssm",
    "EventName": "DescribeMaintenanceWindowExecutions",
    "Description": "Lists the executions of a maintenance window"
  },
  {
    "API": "ssm:DescribeMaintenanceWindowSchedule",
    "EventSource": "ssm",
    "EventName": "DescribeMaintenanceWindowSchedule",
    "Description": "Retrieves information about upcoming executions of a maintenance window"
  },
  {
    "API": "ssm:DescribeMaintenanceWindowTargets",
    "EventSource": "ssm",
    "EventName": "DescribeMaintenanceWindowTargets",
    "Description": "Lists the targets registered with the maintenance window"
  },
  {
    "API": "ssm:DescribeMaintenanceWindowTasks",
    "EventSource": "ssm",
    "EventName": "DescribeMaintenanceWindowTasks",
    "Description": "Lists the tasks in a maintenance window"
  },
  {
    "API": "ssm:DescribeMaintenanceWindows",
    "EventSource": "ssm",
    "EventName": "DescribeMaintenanceWindows",
    "Description": "Retrieves the maintenance windows in an Amazon Web Services account"
  },
  {
    "API": "ssm:DescribeMaintenanceWindowsForTarget",
    "EventSource": "ssm",
    "EventName": "DescribeMaintenanceWindowsForTarget",
    "Description": "Retrieves information about the maintenance window targets or tasks that a managed node is associated with"
  },
  {
    "API": "ssm:DescribeOpsItems",
    "EventSource": "ssm",
    "EventName": "DescribeOpsItems",
    "Description": "Query a set of OpsItems"
  },
  {
    "API": "ssm:DescribeParameters",
    "EventSource": "ssm",
    "EventName": "DescribeParameters",
    "Description": "Lists the parameters in your Amazon Web Services account or the parameters shared with you when you enable the `Shared <https://docs"
  },
  {
    "API": "ssm:DescribePatchBaselines",
    "EventSource": "ssm",
    "EventName": "DescribePatchBaselines",
    "Description": "Lists the patch baselines in your Amazon Web Services account"
  },
  {
    "API": "ssm:DescribePatchGroupState",
    "EventSource": "ssm",
    "EventName": "DescribePatchGroupState",
    "Description": "Returns high-level aggregated patch compliance state information for a patch group"
  },
  {
    "API": "ssm:DescribePatchGroups",
    "EventSource": "ssm",
    "EventName": "DescribePatchGroups",
    "Description": "Lists all patch groups that have been registered with patch baselines"
  },
  {
    "API": "ssm:DescribePatchProperties",
    "EventSource": "ssm",
    "EventName": "DescribePatchProperties",
    "Description": "Lists the properties of available patches organized by product, product family, classification, severity, and other properties of available patches"
  },
  {
    "API": "ssm:DescribeSessions",
    "EventSource": "ssm",
    "EventName": "DescribeSessions",
    "Description": "Retrieves a list of all active sessions (both connected and disconnected) or terminated sessions from the past 30 days"
  },
  {
    "API": "ssm:DisassociateOpsItemRelatedItem",
    "EventSource": "ssm",
    "EventName": "DisassociateOpsItemRelatedItem",
    "Description": "Deletes the association between an OpsItem and a related item"
  },
  {
    "API": "ssm:GeneratePresignedUrl",
    "EventSource": "ssm",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "ssm:GetAutomationExecution",
    "EventSource": "ssm",
    "EventName": "GetAutomationExecution",
    "Description": "Get detailed information about a particular Automation execution"
  },
  {
    "API": "ssm:GetCalendarState",
    "EventSource": "ssm",
    "EventName": "GetCalendarState",
    "Description": "Gets the state of a Amazon Web Services Systems Manager change calendar at the current time or a specified time"
  },
  {
    "API": "ssm:GetCommandInvocation",
    "EventSource": "ssm",
    "EventName": "GetCommandInvocation",
    "Description": "Returns detailed information about command execution for an invocation or plugin"
  },
  {
    "API": "ssm:GetConnectionStatus",
    "EventSource": "ssm",
    "EventName": "GetConnectionStatus",
    "Description": "Retrieves the Session Manager connection status for a managed node to determine whether it is running and ready to receive Session Manager connections"
  },
  {
    "API": "ssm:GetDefaultPatchBaseline",
    "EventSource": "ssm",
    "EventName": "GetDefaultPatchBaseline",
    "Description": "Retrieves the default patch baseline"
  },
  {
    "API": "ssm:GetDeployablePatchSnapshotForInstance",
    "EventSource": "ssm",
    "EventName": "GetDeployablePatchSnapshotForInstance",
    "Description": "Retrieves the current snapshot for the patch baseline the managed node uses"
  },
  {
    "API": "ssm:GetDocument",
    "EventSource": "ssm",
    "EventName": "GetDocument",
    "Description": "Gets the contents of the specified Amazon Web Services Systems Manager document (SSM document)"
  },
  {
    "API": "ssm:GetInventory",
    "EventSource": "ssm",
    "EventName": "GetInventory",
    "Description": "Query inventory information"
  },
  {
    "API": "ssm:GetInventorySchema",
    "EventSource": "ssm",
    "EventName": "GetInventorySchema",
    "Description": "Return a list of inventory type names for the account, or return a list of attribute names for a specific Inventory item type"
  },
  {
    "API": "ssm:GetMaintenanceWindow",
    "EventSource": "ssm",
    "EventName": "GetMaintenanceWindow",
    "Description": "Retrieves a maintenance window"
  },
  {
    "API": "ssm:GetMaintenanceWindowExecution",
    "EventSource": "ssm",
    "EventName": "GetMaintenanceWindowExecution",
    "Description": "Retrieves details about a specific a maintenance window execution"
  },
  {
    "API": "ssm:GetMaintenanceWindowExecutionTask",
    "EventSource": "ssm",
    "EventName": "GetMaintenanceWindowExecutionTask",
    "Description": "Retrieves the details about a specific task run as part of a maintenance window execution"
  },
  {
    "API": "ssm:GetMaintenanceWindowExecutionTaskInvocation",
    "EventSource": "ssm",
    "EventName": "GetMaintenanceWindowExecutionTaskInvocation",
    "Description": "Retrieves information about a specific task running on a specific target"
  },
  {
    "API": "ssm:GetMaintenanceWindowTask",
    "EventSource": "ssm",
    "EventName": "GetMaintenanceWindowTask",
    "Description": "Retrieves the details of a maintenance window task"
  },
  {
    "API": "ssm:GetOpsItem",
    "EventSource": "ssm",
    "EventName": "GetOpsItem",
    "Description": "Get information about an OpsItem by using the ID"
  },
  {
    "API": "ssm:GetOpsMetadata",
    "EventSource": "ssm",
    "EventName": "GetOpsMetadata",
    "Description": "View operational metadata related to an application in Application Manager"
  },
  {
    "API": "ssm:GetOpsSummary",
    "EventSource": "ssm",
    "EventName": "GetOpsSummary",
    "Description": "View a summary of operations metadata (OpsData) based on specified filters and aggregators"
  },
  {
    "API": "ssm:GetParameter",
    "EventSource": "ssm",
    "EventName": "GetParameter",
    "Description": "Get information about a single parameter by specifying the parameter name"
  },
  {
    "API": "ssm:GetParameterHistory",
    "EventSource": "ssm",
    "EventName": "GetParameterHistory",
    "Description": "Retrieves the history of all changes to a parameter"
  },
  {
    "API": "ssm:GetParameters",
    "EventSource": "ssm",
    "EventName": "GetParameters",
    "Description": "Get information about one or more parameters by specifying multiple parameter names"
  },
  {
    "API": "ssm:GetParametersByPath",
    "EventSource": "ssm",
    "EventName": "GetParametersByPath",
    "Description": "Retrieve information about one or more parameters in a specific hierarchy"
  },
  {
    "API": "ssm:GetPatchBaseline",
    "EventSource": "ssm",
    "EventName": "GetPatchBaseline",
    "Description": "Retrieves information about a patch baseline"
  },
  {
    "API": "ssm:GetPatchBaselineForPatchGroup",
    "EventSource": "ssm",
    "EventName": "GetPatchBaselineForPatchGroup",
    "Description": "Retrieves the patch baseline that should be used for the specified patch group"
  },
  {
    "API": "ssm:GetResourcePolicies",
    "EventSource": "ssm",
    "EventName": "GetResourcePolicies",
    "Description": "Returns an array of the ``Policy`` object"
  },
  {
    "API": "ssm:GetServiceSetting",
    "EventSource": "ssm",
    "EventName": "GetServiceSetting",
    "Description": "``ServiceSetting`` is an account-level setting for an Amazon Web Services service"
  },
  {
    "API": "ssm:LabelParameterVersion",
    "EventSource": "ssm",
    "EventName": "LabelParameterVersion",
    "Description": "A parameter label is a user-defined alias to help you manage different versions of a parameter"
  },
  {
    "API": "ssm:ListAssociationVersions",
    "EventSource": "ssm",
    "EventName": "ListAssociationVersions",
    "Description": "Retrieves all versions of an association for a specific association ID"
  },
  {
    "API": "ssm:ListAssociations",
    "EventSource": "ssm",
    "EventName": "ListAssociations",
    "Description": "Returns all State Manager associations in the current Amazon Web Services account and Amazon Web Services Region"
  },
  {
    "API": "ssm:ListCommandInvocations",
    "EventSource": "ssm",
    "EventName": "ListCommandInvocations",
    "Description": "An invocation is copy of a command sent to a specific managed node"
  },
  {
    "API": "ssm:ListCommands",
    "EventSource": "ssm",
    "EventName": "ListCommands",
    "Description": "Lists the commands requested by users of the Amazon Web Services account"
  },
  {
    "API": "ssm:ListComplianceItems",
    "EventSource": "ssm",
    "EventName": "ListComplianceItems",
    "Description": "For a specified resource ID, this API operation returns a list of compliance statuses for different resource types"
  },
  {
    "API": "ssm:ListComplianceSummaries",
    "EventSource": "ssm",
    "EventName": "ListComplianceSummaries",
    "Description": "Returns a summary count of compliant and non-compliant resources for a compliance type"
  },
  {
    "API": "ssm:ListDocumentMetadataHistory",
    "EventSource": "ssm",
    "EventName": "ListDocumentMetadataHistory",
    "Description": "Information about approval reviews for a version of a change template in Change Manager"
  },
  {
    "API": "ssm:ListDocumentVersions",
    "EventSource": "ssm",
    "EventName": "ListDocumentVersions",
    "Description": "List all versions for a document"
  },
  {
    "API": "ssm:ListDocuments",
    "EventSource": "ssm",
    "EventName": "ListDocuments",
    "Description": "Returns all Systems Manager (SSM) documents in the current Amazon Web Services account and Amazon Web Services Region"
  },
  {
    "API": "ssm:ListInventoryEntries",
    "EventSource": "ssm",
    "EventName": "ListInventoryEntries",
    "Description": "A list of inventory items returned by the request"
  },
  {
    "API": "ssm:ListOpsItemEvents",
    "EventSource": "ssm",
    "EventName": "ListOpsItemEvents",
    "Description": "Returns a list of all OpsItem events in the current Amazon Web Services Region and Amazon Web Services account"
  },
  {
    "API": "ssm:ListOpsItemRelatedItems",
    "EventSource": "ssm",
    "EventName": "ListOpsItemRelatedItems",
    "Description": "Lists all related-item resources associated with a Systems Manager OpsCenter OpsItem"
  },
  {
    "API": "ssm:ListOpsMetadata",
    "EventSource": "ssm",
    "EventName": "ListOpsMetadata",
    "Description": "Amazon Web Services Systems Manager calls this API operation when displaying all Application Manager OpsMetadata objects or blobs"
  },
  {
    "API": "ssm:ListResourceComplianceSummaries",
    "EventSource": "ssm",
    "EventName": "ListResourceComplianceSummaries",
    "Description": "Returns a resource-level summary count"
  },
  {
    "API": "ssm:ListResourceDataSync",
    "EventSource": "ssm",
    "EventName": "ListResourceDataSync",
    "Description": "Lists your resource data sync configurations"
  },
  {
    "API": "ssm:ListTagsForResource",
    "EventSource": "ssm",
    "EventName": "ListTagsForResource",
    "Description": "Returns a list of the tags assigned to the specified resource"
  },
  {
    "API": "ssm:ModifyDocumentPermission",
    "EventSource": "ssm",
    "EventName": "ModifyDocumentPermission",
    "Description": "Shares a Amazon Web Services Systems Manager document (SSM document)publicly or privately"
  },
  {
    "API": "ssm:PutComplianceItems",
    "EventSource": "ssm",
    "EventName": "PutComplianceItems",
    "Description": "Registers a compliance type and other compliance details on a designated resource"
  },
  {
    "API": "ssm:PutInventory",
    "EventSource": "ssm",
    "EventName": "PutInventory",
    "Description": "Bulk update custom inventory items on one or more managed nodes"
  },
  {
    "API": "ssm:PutParameter",
    "EventSource": "ssm",
    "EventName": "PutParameter",
    "Description": "Add a parameter to the system"
  },
  {
    "API": "ssm:PutResourcePolicy",
    "EventSource": "ssm",
    "EventName": "PutResourcePolicy",
    "Description": "Creates or updates a Systems Manager resource policy"
  },
  {
    "API": "ssm:RegisterDefaultPatchBaseline",
    "EventSource": "ssm",
    "EventName": "RegisterDefaultPatchBaseline",
    "Description": "Defines the default patch baseline for the relevant operating system"
  },
  {
    "API": "ssm:RegisterPatchBaselineForPatchGroup",
    "EventSource": "ssm",
    "EventName": "RegisterPatchBaselineForPatchGroup",
    "Description": "Registers a patch baseline for a patch group"
  },
  {
    "API": "ssm:RegisterTargetWithMaintenanceWindow",
    "EventSource": "ssm",
    "EventName": "RegisterTargetWithMaintenanceWindow",
    "Description": "Registers a target with a maintenance window"
  },
  {
    "API": "ssm:RegisterTaskWithMaintenanceWindow",
    "EventSource": "ssm",
    "EventName": "RegisterTaskWithMaintenanceWindow",
    "Description": "Adds a new task to a maintenance window"
  },
  {
    "API": "ssm:RemoveTagsFromResource",
    "EventSource": "ssm",
    "EventName": "RemoveTagsFromResource",
    "Description": "Removes tag keys from the specified resource"
  },
  {
    "API": "ssm:ResetServiceSetting",
    "EventSource": "ssm",
    "EventName": "ResetServiceSetting",
    "Description": "``ServiceSetting`` is an account-level setting for an Amazon Web Services service"
  },
  {
    "API": "ssm:ResumeSession",
    "EventSource": "ssm",
    "EventName": "ResumeSession",
    "Description": "Reconnects a session to a managed node after it has been disconnected"
  },
  {
    "API": "ssm:SendAutomationSignal",
    "EventSource": "ssm",
    "EventName": "SendAutomationSignal",
    "Description": "Sends a signal to an Automation execution to change the current behavior or status of the execution"
  },
  {
    "API": "ssm:SendCommand",
    "EventSource": "ssm",
    "EventName": "SendCommand",
    "Description": "Runs commands on one or more managed nodes"
  },
  {
    "API": "ssm:StartAssociationsOnce",
    "EventSource": "ssm",
    "EventName": "StartAssociationsOnce",
    "Description": "Runs an association immediately and only one time"
  },
  {
    "API": "ssm:StartAutomationExecution",
    "EventSource": "ssm",
    "EventName": "StartAutomationExecution",
    "Description": "Initiates execution of an Automation runbook"
  },
  {
    "API": "ssm:StartChangeRequestExecution",
    "EventSource": "ssm",
    "EventName": "StartChangeRequestExecution",
    "Description": "Creates a change request for Change Manager"
  },
  {
    "API": "ssm:StartSession",
    "EventSource": "ssm",
    "EventName": "StartSession",
    "Description": "Initiates a connection to a target (for example, a managed node) for a Session Manager session"
  },
  {
    "API": "ssm:StopAutomationExecution",
    "EventSource": "ssm",
    "EventName": "StopAutomationExecution",
    "Description": "Stop an Automation that is currently running"
  },
  {
    "API": "ssm:TerminateSession",
    "EventSource": "ssm",
    "EventName": "TerminateSession",
    "Description": "Permanently ends a session and closes the data connection between the Session Manager client and SSM Agent on the managed node"
  },
  {
    "API": "ssm:UnlabelParameterVersion",
    "EventSource": "ssm",
    "EventName": "UnlabelParameterVersion",
    "Description": "Remove a label or labels from a parameter"
  },
  {
    "API": "ssm:UpdateAssociation",
    "EventSource": "ssm",
    "EventName": "UpdateAssociation",
    "Description": "Updates an association"
  },
  {
    "API": "ssm:UpdateAssociationStatus",
    "EventSource": "ssm",
    "EventName": "UpdateAssociationStatus",
    "Description": "Updates the status of the Amazon Web Services Systems Manager document (SSM document) associated with the specified managed node"
  },
  {
    "API": "ssm:UpdateDocument",
    "EventSource": "ssm",
    "EventName": "UpdateDocument",
    "Description": "Updates one or more values for an SSM document"
  },
  {
    "API": "ssm:UpdateDocumentDefaultVersion",
    "EventSource": "ssm",
    "EventName": "UpdateDocumentDefaultVersion",
    "Description": "Set the default version of a document"
  },
  {
    "API": "ssm:UpdateDocumentMetadata",
    "EventSource": "ssm",
    "EventName": "UpdateDocumentMetadata",
    "Description": "Updates information related to approval reviews for a specific version of a change template in Change Manager"
  },
  {
    "API": "ssm:UpdateMaintenanceWindow",
    "EventSource": "ssm",
    "EventName": "UpdateMaintenanceWindow",
    "Description": "Updates an existing maintenance window"
  },
  {
    "API": "ssm:UpdateMaintenanceWindowTarget",
    "EventSource": "ssm",
    "EventName": "UpdateMaintenanceWindowTarget",
    "Description": "Modifies the target of an existing maintenance window"
  },
  {
    "API": "ssm:UpdateMaintenanceWindowTask",
    "EventSource": "ssm",
    "EventName": "UpdateMaintenanceWindowTask",
    "Description": "Modifies a task assigned to a maintenance window"
  },
  {
    "API": "ssm:UpdateManagedInstanceRole",
    "EventSource": "ssm",
    "EventName": "UpdateManagedInstanceRole",
    "Description": "Changes the Identity and Access Management (IAM) role that is assigned to the on-premises server, edge device, or virtual machines (VM)"
  },
  {
    "API": "ssm:UpdateOpsItem",
    "EventSource": "ssm",
    "EventName": "UpdateOpsItem",
    "Description": "Edit or change an OpsItem"
  },
  {
    "API": "ssm:UpdateOpsMetadata",
    "EventSource": "ssm",
    "EventName": "UpdateOpsMetadata",
    "Description": "Amazon Web Services Systems Manager calls this API operation when you edit OpsMetadata in Application Manager"
  },
  {
    "API": "ssm:UpdatePatchBaseline",
    "EventSource": "ssm",
    "EventName": "UpdatePatchBaseline",
    "Description": "Modifies an existing patch baseline"
  },
  {
    "API": "ssm:UpdateResourceDataSync",
    "EventSource": "ssm",
    "EventName": "UpdateResourceDataSync",
    "Description": "Update a resource data sync"
  },
  {
    "API": "ssm:UpdateServiceSetting",
    "EventSource": "ssm",
    "EventName": "UpdateServiceSetting",
    "Description": "``ServiceSetting`` is an account-level setting for an Amazon Web Services service"
  },
  {
    "API": "ssm-contacts:AcceptPage",
    "EventSource": "ssm-contacts",
    "EventName": "AcceptPage",
    "Description": "Used to acknowledge an engagement to a contact channel during an incident"
  },
  {
    "API": "ssm-contacts:ActivateContactChannel",
    "EventSource": "ssm-contacts",
    "EventName": "ActivateContactChannel",
    "Description": "Activates a contact's contact channel"
  },
  {
    "API": "ssm-contacts:CreateContact",
    "EventSource": "ssm-contacts",
    "EventName": "CreateContact",
    "Description": "Contacts are either the contacts that Incident Manager engages during an incident or the escalation plans that Incident Manager uses to engage contacts in phases during an incident"
  },
  {
    "API": "ssm-contacts:CreateContactChannel",
    "EventSource": "ssm-contacts",
    "EventName": "CreateContactChannel",
    "Description": "A contact channel is the method that Incident Manager uses to engage your contact"
  },
  {
    "API": "ssm-contacts:CreateRotation",
    "EventSource": "ssm-contacts",
    "EventName": "CreateRotation",
    "Description": "Creates a rotation in an on-call schedule"
  },
  {
    "API": "ssm-contacts:CreateRotationOverride",
    "EventSource": "ssm-contacts",
    "EventName": "CreateRotationOverride",
    "Description": "Creates an override for a rotation in an on-call schedule"
  },
  {
    "API": "ssm-contacts:DeactivateContactChannel",
    "EventSource": "ssm-contacts",
    "EventName": "DeactivateContactChannel",
    "Description": "To no longer receive Incident Manager engagements to a contact channel, you can deactivate the channel"
  },
  {
    "API": "ssm-contacts:DeleteContact",
    "EventSource": "ssm-contacts",
    "EventName": "DeleteContact",
    "Description": "To remove a contact from Incident Manager, you can delete the contact"
  },
  {
    "API": "ssm-contacts:DeleteContactChannel",
    "EventSource": "ssm-contacts",
    "EventName": "DeleteContactChannel",
    "Description": "To no longer receive engagements on a contact channel, you can delete the channel from a contact"
  },
  {
    "API": "ssm-contacts:DeleteRotation",
    "EventSource": "ssm-contacts",
    "EventName": "DeleteRotation",
    "Description": "Deletes a rotation from the system"
  },
  {
    "API": "ssm-contacts:DeleteRotationOverride",
    "EventSource": "ssm-contacts",
    "EventName": "DeleteRotationOverride",
    "Description": "Deletes an existing override for an on-call rotation"
  },
  {
    "API": "ssm-contacts:DescribeEngagement",
    "EventSource": "ssm-contacts",
    "EventName": "DescribeEngagement",
    "Description": "Incident Manager uses engagements to engage contacts and escalation plans during an incident"
  },
  {
    "API": "ssm-contacts:DescribePage",
    "EventSource": "ssm-contacts",
    "EventName": "DescribePage",
    "Description": "Lists details of the engagement to a contact channel"
  },
  {
    "API": "ssm-contacts:GeneratePresignedUrl",
    "EventSource": "ssm-contacts",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "ssm-contacts:GetContact",
    "EventSource": "ssm-contacts",
    "EventName": "GetContact",
    "Description": "Retrieves information about the specified contact or escalation plan"
  },
  {
    "API": "ssm-contacts:GetContactChannel",
    "EventSource": "ssm-contacts",
    "EventName": "GetContactChannel",
    "Description": "List details about a specific contact channel"
  },
  {
    "API": "ssm-contacts:GetContactPolicy",
    "EventSource": "ssm-contacts",
    "EventName": "GetContactPolicy",
    "Description": "Retrieves the resource policies attached to the specified contact or escalation plan"
  },
  {
    "API": "ssm-contacts:GetRotation",
    "EventSource": "ssm-contacts",
    "EventName": "GetRotation",
    "Description": "Retrieves information about an on-call rotation"
  },
  {
    "API": "ssm-contacts:GetRotationOverride",
    "EventSource": "ssm-contacts",
    "EventName": "GetRotationOverride",
    "Description": "Retrieves information about an override to an on-call rotation"
  },
  {
    "API": "ssm-contacts:ListContactChannels",
    "EventSource": "ssm-contacts",
    "EventName": "ListContactChannels",
    "Description": "Lists all contact channels for the specified contact"
  },
  {
    "API": "ssm-contacts:ListContacts",
    "EventSource": "ssm-contacts",
    "EventName": "ListContacts",
    "Description": "Lists all contacts and escalation plans in Incident Manager"
  },
  {
    "API": "ssm-contacts:ListEngagements",
    "EventSource": "ssm-contacts",
    "EventName": "ListEngagements",
    "Description": "Lists all engagements that have happened in an incident"
  },
  {
    "API": "ssm-contacts:ListPageReceipts",
    "EventSource": "ssm-contacts",
    "EventName": "ListPageReceipts",
    "Description": "Lists all of the engagements to contact channels that have been acknowledged"
  },
  {
    "API": "ssm-contacts:ListPageResolutions",
    "EventSource": "ssm-contacts",
    "EventName": "ListPageResolutions",
    "Description": "Returns the resolution path of an engagement"
  },
  {
    "API": "ssm-contacts:ListPagesByContact",
    "EventSource": "ssm-contacts",
    "EventName": "ListPagesByContact",
    "Description": "Lists the engagements to a contact's contact channels"
  },
  {
    "API": "ssm-contacts:ListPagesByEngagement",
    "EventSource": "ssm-contacts",
    "EventName": "ListPagesByEngagement",
    "Description": "Lists the engagements to contact channels that occurred by engaging a contact"
  },
  {
    "API": "ssm-contacts:ListPreviewRotationShifts",
    "EventSource": "ssm-contacts",
    "EventName": "ListPreviewRotationShifts",
    "Description": "Returns a list of shifts based on rotation configuration parameters"
  },
  {
    "API": "ssm-contacts:ListRotationOverrides",
    "EventSource": "ssm-contacts",
    "EventName": "ListRotationOverrides",
    "Description": "Retrieves a list of overrides currently specified for an on-call rotation"
  },
  {
    "API": "ssm-contacts:ListRotationShifts",
    "EventSource": "ssm-contacts",
    "EventName": "ListRotationShifts",
    "Description": "Returns a list of shifts generated by an existing rotation in the system"
  },
  {
    "API": "ssm-contacts:ListRotations",
    "EventSource": "ssm-contacts",
    "EventName": "ListRotations",
    "Description": "Retrieves a list of on-call rotations"
  },
  {
    "API": "ssm-contacts:ListTagsForResource",
    "EventSource": "ssm-contacts",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags of an escalation plan or contact"
  },
  {
    "API": "ssm-contacts:PutContactPolicy",
    "EventSource": "ssm-contacts",
    "EventName": "PutContactPolicy",
    "Description": "Adds a resource policy to the specified contact or escalation plan"
  },
  {
    "API": "ssm-contacts:SendActivationCode",
    "EventSource": "ssm-contacts",
    "EventName": "SendActivationCode",
    "Description": "Sends an activation code to a contact channel"
  },
  {
    "API": "ssm-contacts:StartEngagement",
    "EventSource": "ssm-contacts",
    "EventName": "StartEngagement",
    "Description": "Starts an engagement to a contact or escalation plan"
  },
  {
    "API": "ssm-contacts:StopEngagement",
    "EventSource": "ssm-contacts",
    "EventName": "StopEngagement",
    "Description": "Stops an engagement before it finishes the final stage of the escalation plan or engagement plan"
  },
  {
    "API": "ssm-contacts:TagResource",
    "EventSource": "ssm-contacts",
    "EventName": "TagResource",
    "Description": "Tags a contact or escalation plan"
  },
  {
    "API": "ssm-contacts:UntagResource",
    "EventSource": "ssm-contacts",
    "EventName": "UntagResource",
    "Description": "Removes tags from the specified resource"
  },
  {
    "API": "ssm-contacts:UpdateContact",
    "EventSource": "ssm-contacts",
    "EventName": "UpdateContact",
    "Description": "Updates the contact or escalation plan specified"
  },
  {
    "API": "ssm-contacts:UpdateContactChannel",
    "EventSource": "ssm-contacts",
    "EventName": "UpdateContactChannel",
    "Description": "Updates a contact's contact channel"
  },
  {
    "API": "ssm-contacts:UpdateRotation",
    "EventSource": "ssm-contacts",
    "EventName": "UpdateRotation",
    "Description": "Updates the information specified for an on-call rotation"
  },
  {
    "API": "ssm-incidents:BatchGetIncidentFindings",
    "EventSource": "ssm-incidents",
    "EventName": "BatchGetIncidentFindings",
    "Description": "Retrieves details about all specified findings for an incident, including descriptive details about each finding"
  },
  {
    "API": "ssm-incidents:CreateReplicationSet",
    "EventSource": "ssm-incidents",
    "EventName": "CreateReplicationSet",
    "Description": "A replication set replicates and encrypts your data to the provided Regions with the provided KMS key"
  },
  {
    "API": "ssm-incidents:CreateResponsePlan",
    "EventSource": "ssm-incidents",
    "EventName": "CreateResponsePlan",
    "Description": "Creates a response plan that automates the initial response to incidents"
  },
  {
    "API": "ssm-incidents:CreateTimelineEvent",
    "EventSource": "ssm-incidents",
    "EventName": "CreateTimelineEvent",
    "Description": "Creates a custom timeline event on the incident details page of an incident record"
  },
  {
    "API": "ssm-incidents:DeleteIncidentRecord",
    "EventSource": "ssm-incidents",
    "EventName": "DeleteIncidentRecord",
    "Description": "Delete an incident record from Incident Manager"
  },
  {
    "API": "ssm-incidents:DeleteReplicationSet",
    "EventSource": "ssm-incidents",
    "EventName": "DeleteReplicationSet",
    "Description": "Deletes all Regions in your replication set"
  },
  {
    "API": "ssm-incidents:DeleteResourcePolicy",
    "EventSource": "ssm-incidents",
    "EventName": "DeleteResourcePolicy",
    "Description": "Deletes the resource policy that Resource Access Manager uses to share your Incident Manager resource"
  },
  {
    "API": "ssm-incidents:DeleteResponsePlan",
    "EventSource": "ssm-incidents",
    "EventName": "DeleteResponsePlan",
    "Description": "Deletes the specified response plan"
  },
  {
    "API": "ssm-incidents:DeleteTimelineEvent",
    "EventSource": "ssm-incidents",
    "EventName": "DeleteTimelineEvent",
    "Description": "Deletes a timeline event from an incident"
  },
  {
    "API": "ssm-incidents:GeneratePresignedUrl",
    "EventSource": "ssm-incidents",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "ssm-incidents:GetIncidentRecord",
    "EventSource": "ssm-incidents",
    "EventName": "GetIncidentRecord",
    "Description": "Returns the details for the specified incident record"
  },
  {
    "API": "ssm-incidents:GetReplicationSet",
    "EventSource": "ssm-incidents",
    "EventName": "GetReplicationSet",
    "Description": "Retrieve your Incident Manager replication set"
  },
  {
    "API": "ssm-incidents:GetResourcePolicies",
    "EventSource": "ssm-incidents",
    "EventName": "GetResourcePolicies",
    "Description": "Retrieves the resource policies attached to the specified response plan"
  },
  {
    "API": "ssm-incidents:GetResponsePlan",
    "EventSource": "ssm-incidents",
    "EventName": "GetResponsePlan",
    "Description": "Retrieves the details of the specified response plan"
  },
  {
    "API": "ssm-incidents:GetTimelineEvent",
    "EventSource": "ssm-incidents",
    "EventName": "GetTimelineEvent",
    "Description": "Retrieves a timeline event based on its ID and incident record"
  },
  {
    "API": "ssm-incidents:ListIncidentFindings",
    "EventSource": "ssm-incidents",
    "EventName": "ListIncidentFindings",
    "Description": "Retrieves a list of the IDs of findings, plus their last modified times, that have been identified for a specified incident"
  },
  {
    "API": "ssm-incidents:ListIncidentRecords",
    "EventSource": "ssm-incidents",
    "EventName": "ListIncidentRecords",
    "Description": "Lists all incident records in your account"
  },
  {
    "API": "ssm-incidents:ListRelatedItems",
    "EventSource": "ssm-incidents",
    "EventName": "ListRelatedItems",
    "Description": "List all related items for an incident record"
  },
  {
    "API": "ssm-incidents:ListReplicationSets",
    "EventSource": "ssm-incidents",
    "EventName": "ListReplicationSets",
    "Description": "Lists details about the replication set configured in your account"
  },
  {
    "API": "ssm-incidents:ListResponsePlans",
    "EventSource": "ssm-incidents",
    "EventName": "ListResponsePlans",
    "Description": "Lists all response plans in your account"
  },
  {
    "API": "ssm-incidents:ListTagsForResource",
    "EventSource": "ssm-incidents",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags that are attached to the specified response plan or incident"
  },
  {
    "API": "ssm-incidents:ListTimelineEvents",
    "EventSource": "ssm-incidents",
    "EventName": "ListTimelineEvents",
    "Description": "Lists timeline events for the specified incident record"
  },
  {
    "API": "ssm-incidents:PutResourcePolicy",
    "EventSource": "ssm-incidents",
    "EventName": "PutResourcePolicy",
    "Description": "Adds a resource policy to the specified response plan"
  },
  {
    "API": "ssm-incidents:StartIncident",
    "EventSource": "ssm-incidents",
    "EventName": "StartIncident",
    "Description": "Used to start an incident from CloudWatch alarms, EventBridge events, or manually"
  },
  {
    "API": "ssm-incidents:TagResource",
    "EventSource": "ssm-incidents",
    "EventName": "TagResource",
    "Description": "Adds a tag to a response plan"
  },
  {
    "API": "ssm-incidents:UntagResource",
    "EventSource": "ssm-incidents",
    "EventName": "UntagResource",
    "Description": "Removes a tag from a resource"
  },
  {
    "API": "ssm-incidents:UpdateDeletionProtection",
    "EventSource": "ssm-incidents",
    "EventName": "UpdateDeletionProtection",
    "Description": "Update deletion protection to either allow or deny deletion of the final Region in a replication set"
  },
  {
    "API": "ssm-incidents:UpdateIncidentRecord",
    "EventSource": "ssm-incidents",
    "EventName": "UpdateIncidentRecord",
    "Description": "Update the details of an incident record"
  },
  {
    "API": "ssm-incidents:UpdateRelatedItems",
    "EventSource": "ssm-incidents",
    "EventName": "UpdateRelatedItems",
    "Description": "Add or remove related items from the related items tab of an incident record"
  },
  {
    "API": "ssm-incidents:UpdateReplicationSet",
    "EventSource": "ssm-incidents",
    "EventName": "UpdateReplicationSet",
    "Description": "Add or delete Regions from your replication set"
  },
  {
    "API": "ssm-incidents:UpdateResponsePlan",
    "EventSource": "ssm-incidents",
    "EventName": "UpdateResponsePlan",
    "Description": "Updates the specified response plan"
  },
  {
    "API": "ssm-incidents:UpdateTimelineEvent",
    "EventSource": "ssm-incidents",
    "EventName": "UpdateTimelineEvent",
    "Description": "Updates a timeline event"
  },
  {
    "API": "ssm-sap:DeleteResourcePermission",
    "EventSource": "ssm-sap",
    "EventName": "DeleteResourcePermission",
    "Description": "Removes permissions associated with the target database"
  },
  {
    "API": "ssm-sap:DeregisterApplication",
    "EventSource": "ssm-sap",
    "EventName": "DeregisterApplication",
    "Description": "Deregister an SAP application with AWS Systems Manager for SAP"
  },
  {
    "API": "ssm-sap:GeneratePresignedUrl",
    "EventSource": "ssm-sap",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "ssm-sap:GetApplication",
    "EventSource": "ssm-sap",
    "EventName": "GetApplication",
    "Description": "Gets an application registered with AWS Systems Manager for SAP"
  },
  {
    "API": "ssm-sap:GetComponent",
    "EventSource": "ssm-sap",
    "EventName": "GetComponent",
    "Description": "Gets the component of an application registered with AWS Systems Manager for SAP"
  },
  {
    "API": "ssm-sap:GetDatabase",
    "EventSource": "ssm-sap",
    "EventName": "GetDatabase",
    "Description": "Gets the SAP HANA database of an application registered with AWS Systems Manager for SAP"
  },
  {
    "API": "ssm-sap:GetOperation",
    "EventSource": "ssm-sap",
    "EventName": "GetOperation",
    "Description": "Gets the details of an operation by specifying the operation ID"
  },
  {
    "API": "ssm-sap:GetResourcePermission",
    "EventSource": "ssm-sap",
    "EventName": "GetResourcePermission",
    "Description": "Gets permissions associated with the target database"
  },
  {
    "API": "ssm-sap:ListApplications",
    "EventSource": "ssm-sap",
    "EventName": "ListApplications",
    "Description": "Lists all the applications registered with AWS Systems Manager for SAP"
  },
  {
    "API": "ssm-sap:ListComponents",
    "EventSource": "ssm-sap",
    "EventName": "ListComponents",
    "Description": "Lists all the components registered with AWS Systems Manager for SAP"
  },
  {
    "API": "ssm-sap:ListDatabases",
    "EventSource": "ssm-sap",
    "EventName": "ListDatabases",
    "Description": "Lists the SAP HANA databases of an application registered with AWS Systems Manager for SAP"
  },
  {
    "API": "ssm-sap:ListOperationEvents",
    "EventSource": "ssm-sap",
    "EventName": "ListOperationEvents",
    "Description": "Returns a list of operations events"
  },
  {
    "API": "ssm-sap:ListOperations",
    "EventSource": "ssm-sap",
    "EventName": "ListOperations",
    "Description": "Lists the operations performed by AWS Systems Manager for SAP"
  },
  {
    "API": "ssm-sap:ListTagsForResource",
    "EventSource": "ssm-sap",
    "EventName": "ListTagsForResource",
    "Description": "Lists all tags on an SAP HANA application and/or database registered with AWS Systems Manager for SAP"
  },
  {
    "API": "ssm-sap:PutResourcePermission",
    "EventSource": "ssm-sap",
    "EventName": "PutResourcePermission",
    "Description": "Adds permissions to the target database"
  },
  {
    "API": "ssm-sap:RegisterApplication",
    "EventSource": "ssm-sap",
    "EventName": "RegisterApplication",
    "Description": "Register an SAP application with AWS Systems Manager for SAP"
  },
  {
    "API": "ssm-sap:StartApplication",
    "EventSource": "ssm-sap",
    "EventName": "StartApplication",
    "Description": "Request is an operation which starts an application"
  },
  {
    "API": "ssm-sap:StartApplicationRefresh",
    "EventSource": "ssm-sap",
    "EventName": "StartApplicationRefresh",
    "Description": "Refreshes a registered application"
  },
  {
    "API": "ssm-sap:StopApplication",
    "EventSource": "ssm-sap",
    "EventName": "StopApplication",
    "Description": "Request is an operation to stop an application"
  },
  {
    "API": "ssm-sap:TagResource",
    "EventSource": "ssm-sap",
    "EventName": "TagResource",
    "Description": "Creates tag for a resource by specifying the ARN"
  },
  {
    "API": "ssm-sap:UntagResource",
    "EventSource": "ssm-sap",
    "EventName": "UntagResource",
    "Description": "Delete the tags for a resource"
  },
  {
    "API": "ssm-sap:UpdateApplicationSettings",
    "EventSource": "ssm-sap",
    "EventName": "UpdateApplicationSettings",
    "Description": "Updates the settings of an application registered with AWS Systems Manager for SAP"
  },
  {
    "API": "sso:GeneratePresignedUrl",
    "EventSource": "sso",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "sso:GetRoleCredentials",
    "EventSource": "sso",
    "EventName": "GetRoleCredentials",
    "Description": "Returns the STS short-term credentials for a given role name that is assigned to the user"
  },
  {
    "API": "sso:ListAccountRoles",
    "EventSource": "sso",
    "EventName": "ListAccountRoles",
    "Description": "Lists all roles that are assigned to the user for a given AWS account"
  },
  {
    "API": "sso:ListAccounts",
    "EventSource": "sso",
    "EventName": "ListAccounts",
    "Description": "Lists all AWS accounts assigned to the user"
  },
  {
    "API": "sso-admin:AttachCustomerManagedPolicyReferenceToPermissionSet",
    "EventSource": "sso-admin",
    "EventName": "AttachCustomerManagedPolicyReferenceToPermissionSet",
    "Description": "Attaches the specified customer managed policy to the specified  PermissionSet"
  },
  {
    "API": "sso-admin:AttachManagedPolicyToPermissionSet",
    "EventSource": "sso-admin",
    "EventName": "AttachManagedPolicyToPermissionSet",
    "Description": "Attaches an Amazon Web Services managed policy ARN to a permission set"
  },
  {
    "API": "sso-admin:CreateAccountAssignment",
    "EventSource": "sso-admin",
    "EventName": "CreateAccountAssignment",
    "Description": "Assigns access to a principal for a specified Amazon Web Services account using a specified permission set"
  },
  {
    "API": "sso-admin:CreateApplication",
    "EventSource": "sso-admin",
    "EventName": "CreateApplication",
    "Description": "Creates an application in IAM Identity Center for the given application provider"
  },
  {
    "API": "sso-admin:CreateApplicationAssignment",
    "EventSource": "sso-admin",
    "EventName": "CreateApplicationAssignment",
    "Description": "Grant application access to a user or group"
  },
  {
    "API": "sso-admin:CreateInstance",
    "EventSource": "sso-admin",
    "EventName": "CreateInstance",
    "Description": "Creates an instance of IAM Identity Center for a standalone Amazon Web Services account that is not managed by Organizations or a member Amazon Web Services account in an organization"
  },
  {
    "API": "sso-admin:CreateInstanceAccessControlAttributeConfiguration",
    "EventSource": "sso-admin",
    "EventName": "CreateInstanceAccessControlAttributeConfiguration",
    "Description": "Enables the attributes-based access control (ABAC) feature for the specified IAM Identity Center instance"
  },
  {
    "API": "sso-admin:CreatePermissionSet",
    "EventSource": "sso-admin",
    "EventName": "CreatePermissionSet",
    "Description": "Creates a permission set within a specified IAM Identity Center instance"
  },
  {
    "API": "sso-admin:CreateTrustedTokenIssuer",
    "EventSource": "sso-admin",
    "EventName": "CreateTrustedTokenIssuer",
    "Description": "Creates a connection to a trusted token issuer in an instance of IAM Identity Center"
  },
  {
    "API": "sso-admin:DeleteAccountAssignment",
    "EventSource": "sso-admin",
    "EventName": "DeleteAccountAssignment",
    "Description": "Deletes a principal's access from a specified Amazon Web Services account using a specified permission set"
  },
  {
    "API": "sso-admin:DeleteApplication",
    "EventSource": "sso-admin",
    "EventName": "DeleteApplication",
    "Description": "Deletes the association with the application"
  },
  {
    "API": "sso-admin:DeleteApplicationAccessScope",
    "EventSource": "sso-admin",
    "EventName": "DeleteApplicationAccessScope",
    "Description": "Deletes an IAM Identity Center access scope from an application"
  },
  {
    "API": "sso-admin:DeleteApplicationAssignment",
    "EventSource": "sso-admin",
    "EventName": "DeleteApplicationAssignment",
    "Description": "Revoke application access to an application by deleting application assignments for a user or group"
  },
  {
    "API": "sso-admin:DeleteApplicationAuthenticationMethod",
    "EventSource": "sso-admin",
    "EventName": "DeleteApplicationAuthenticationMethod",
    "Description": "Deletes an authentication method from an application"
  },
  {
    "API": "sso-admin:DeleteApplicationGrant",
    "EventSource": "sso-admin",
    "EventName": "DeleteApplicationGrant",
    "Description": "Deletes a grant from an application"
  },
  {
    "API": "sso-admin:DeleteInlinePolicyFromPermissionSet",
    "EventSource": "sso-admin",
    "EventName": "DeleteInlinePolicyFromPermissionSet",
    "Description": "Deletes the inline policy from a specified permission set"
  },
  {
    "API": "sso-admin:DeleteInstance",
    "EventSource": "sso-admin",
    "EventName": "DeleteInstance",
    "Description": "Deletes the instance of IAM Identity Center"
  },
  {
    "API": "sso-admin:DeleteInstanceAccessControlAttributeConfiguration",
    "EventSource": "sso-admin",
    "EventName": "DeleteInstanceAccessControlAttributeConfiguration",
    "Description": "Disables the attributes-based access control (ABAC) feature for the specified IAM Identity Center instance and deletes all of the attribute mappings that have been configured"
  },
  {
    "API": "sso-admin:DeletePermissionSet",
    "EventSource": "sso-admin",
    "EventName": "DeletePermissionSet",
    "Description": "Deletes the specified permission set"
  },
  {
    "API": "sso-admin:DeletePermissionsBoundaryFromPermissionSet",
    "EventSource": "sso-admin",
    "EventName": "DeletePermissionsBoundaryFromPermissionSet",
    "Description": "Deletes the permissions boundary from a specified  PermissionSet"
  },
  {
    "API": "sso-admin:DeleteTrustedTokenIssuer",
    "EventSource": "sso-admin",
    "EventName": "DeleteTrustedTokenIssuer",
    "Description": "Deletes a trusted token issuer configuration from an instance of IAM Identity Center"
  },
  {
    "API": "sso-admin:DescribeAccountAssignmentCreationStatus",
    "EventSource": "sso-admin",
    "EventName": "DescribeAccountAssignmentCreationStatus",
    "Description": "Describes the status of the assignment creation request"
  },
  {
    "API": "sso-admin:DescribeAccountAssignmentDeletionStatus",
    "EventSource": "sso-admin",
    "EventName": "DescribeAccountAssignmentDeletionStatus",
    "Description": "Describes the status of the assignment deletion request"
  },
  {
    "API": "sso-admin:DescribeApplication",
    "EventSource": "sso-admin",
    "EventName": "DescribeApplication",
    "Description": "Retrieves the details of an application associated with an instance of IAM Identity Center"
  },
  {
    "API": "sso-admin:DescribeApplicationAssignment",
    "EventSource": "sso-admin",
    "EventName": "DescribeApplicationAssignment",
    "Description": "Retrieves a direct assignment of a user or group to an application"
  },
  {
    "API": "sso-admin:DescribeApplicationProvider",
    "EventSource": "sso-admin",
    "EventName": "DescribeApplicationProvider",
    "Description": "Retrieves details about a provider that can be used to connect an Amazon Web Services managed application or customer managed application to IAM Identity Center"
  },
  {
    "API": "sso-admin:DescribeInstance",
    "EventSource": "sso-admin",
    "EventName": "DescribeInstance",
    "Description": "Returns the details of an instance of IAM Identity Center"
  },
  {
    "API": "sso-admin:DescribeInstanceAccessControlAttributeConfiguration",
    "EventSource": "sso-admin",
    "EventName": "DescribeInstanceAccessControlAttributeConfiguration",
    "Description": "Returns the list of IAM Identity Center identity store attributes that have been configured to work with attributes-based access control (ABAC) for the specified IAM Identity Center instance"
  },
  {
    "API": "sso-admin:DescribePermissionSet",
    "EventSource": "sso-admin",
    "EventName": "DescribePermissionSet",
    "Description": "Gets the details of the permission set"
  },
  {
    "API": "sso-admin:DescribePermissionSetProvisioningStatus",
    "EventSource": "sso-admin",
    "EventName": "DescribePermissionSetProvisioningStatus",
    "Description": "Describes the status for the given permission set provisioning request"
  },
  {
    "API": "sso-admin:DescribeTrustedTokenIssuer",
    "EventSource": "sso-admin",
    "EventName": "DescribeTrustedTokenIssuer",
    "Description": "Retrieves details about a trusted token issuer configuration stored in an instance of IAM Identity Center"
  },
  {
    "API": "sso-admin:DetachCustomerManagedPolicyReferenceFromPermissionSet",
    "EventSource": "sso-admin",
    "EventName": "DetachCustomerManagedPolicyReferenceFromPermissionSet",
    "Description": "Detaches the specified customer managed policy from the specified  PermissionSet"
  },
  {
    "API": "sso-admin:DetachManagedPolicyFromPermissionSet",
    "EventSource": "sso-admin",
    "EventName": "DetachManagedPolicyFromPermissionSet",
    "Description": "Detaches the attached Amazon Web Services managed policy ARN from the specified permission set"
  },
  {
    "API": "sso-admin:GeneratePresignedUrl",
    "EventSource": "sso-admin",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "sso-admin:GetApplicationAccessScope",
    "EventSource": "sso-admin",
    "EventName": "GetApplicationAccessScope",
    "Description": "Retrieves the authorized targets for an IAM Identity Center access scope for an application"
  },
  {
    "API": "sso-admin:GetApplicationAssignmentConfiguration",
    "EventSource": "sso-admin",
    "EventName": "GetApplicationAssignmentConfiguration",
    "Description": "Retrieves the configuration of  PutApplicationAssignmentConfiguration"
  },
  {
    "API": "sso-admin:GetApplicationAuthenticationMethod",
    "EventSource": "sso-admin",
    "EventName": "GetApplicationAuthenticationMethod",
    "Description": "Retrieves details about an authentication method used by an application"
  },
  {
    "API": "sso-admin:GetApplicationGrant",
    "EventSource": "sso-admin",
    "EventName": "GetApplicationGrant",
    "Description": "Retrieves details about an application grant"
  },
  {
    "API": "sso-admin:GetInlinePolicyForPermissionSet",
    "EventSource": "sso-admin",
    "EventName": "GetInlinePolicyForPermissionSet",
    "Description": "Obtains the inline policy assigned to the permission set"
  },
  {
    "API": "sso-admin:GetPermissionsBoundaryForPermissionSet",
    "EventSource": "sso-admin",
    "EventName": "GetPermissionsBoundaryForPermissionSet",
    "Description": "Obtains the permissions boundary for a specified  PermissionSet"
  },
  {
    "API": "sso-admin:ListAccountAssignmentCreationStatus",
    "EventSource": "sso-admin",
    "EventName": "ListAccountAssignmentCreationStatus",
    "Description": "Lists the status of the Amazon Web Services account assignment creation requests for a specified IAM Identity Center instance"
  },
  {
    "API": "sso-admin:ListAccountAssignmentDeletionStatus",
    "EventSource": "sso-admin",
    "EventName": "ListAccountAssignmentDeletionStatus",
    "Description": "Lists the status of the Amazon Web Services account assignment deletion requests for a specified IAM Identity Center instance"
  },
  {
    "API": "sso-admin:ListAccountAssignments",
    "EventSource": "sso-admin",
    "EventName": "ListAccountAssignments",
    "Description": "Lists the assignee of the specified Amazon Web Services account with the specified permission set"
  },
  {
    "API": "sso-admin:ListAccountAssignmentsForPrincipal",
    "EventSource": "sso-admin",
    "EventName": "ListAccountAssignmentsForPrincipal",
    "Description": "Retrieves a list of the IAM Identity Center associated Amazon Web Services accounts that the principal has access to"
  },
  {
    "API": "sso-admin:ListAccountsForProvisionedPermissionSet",
    "EventSource": "sso-admin",
    "EventName": "ListAccountsForProvisionedPermissionSet",
    "Description": "Lists all the Amazon Web Services accounts where the specified permission set is provisioned"
  },
  {
    "API": "sso-admin:ListApplicationAccessScopes",
    "EventSource": "sso-admin",
    "EventName": "ListApplicationAccessScopes",
    "Description": "Lists the access scopes and authorized targets associated with an application"
  },
  {
    "API": "sso-admin:ListApplicationAssignments",
    "EventSource": "sso-admin",
    "EventName": "ListApplicationAssignments",
    "Description": "Lists Amazon Web Services account users that are assigned to an application"
  },
  {
    "API": "sso-admin:ListApplicationAssignmentsForPrincipal",
    "EventSource": "sso-admin",
    "EventName": "ListApplicationAssignmentsForPrincipal",
    "Description": "Lists the applications to which a specified principal is assigned"
  },
  {
    "API": "sso-admin:ListApplicationAuthenticationMethods",
    "EventSource": "sso-admin",
    "EventName": "ListApplicationAuthenticationMethods",
    "Description": "Lists all of the authentication methods supported by the specified application"
  },
  {
    "API": "sso-admin:ListApplicationGrants",
    "EventSource": "sso-admin",
    "EventName": "ListApplicationGrants",
    "Description": "List the grants associated with an application"
  },
  {
    "API": "sso-admin:ListApplicationProviders",
    "EventSource": "sso-admin",
    "EventName": "ListApplicationProviders",
    "Description": "Lists the application providers configured in the IAM Identity Center identity store"
  },
  {
    "API": "sso-admin:ListApplications",
    "EventSource": "sso-admin",
    "EventName": "ListApplications",
    "Description": "Lists all applications associated with the instance of IAM Identity Center"
  },
  {
    "API": "sso-admin:ListCustomerManagedPolicyReferencesInPermissionSet",
    "EventSource": "sso-admin",
    "EventName": "ListCustomerManagedPolicyReferencesInPermissionSet",
    "Description": "Lists all customer managed policies attached to a specified  PermissionSet"
  },
  {
    "API": "sso-admin:ListInstances",
    "EventSource": "sso-admin",
    "EventName": "ListInstances",
    "Description": "Lists the details of the organization and account instances of IAM Identity Center that were created in or visible to the account calling this API"
  },
  {
    "API": "sso-admin:ListManagedPoliciesInPermissionSet",
    "EventSource": "sso-admin",
    "EventName": "ListManagedPoliciesInPermissionSet",
    "Description": "Lists the Amazon Web Services managed policy that is attached to a specified permission set"
  },
  {
    "API": "sso-admin:ListPermissionSetProvisioningStatus",
    "EventSource": "sso-admin",
    "EventName": "ListPermissionSetProvisioningStatus",
    "Description": "Lists the status of the permission set provisioning requests for a specified IAM Identity Center instance"
  },
  {
    "API": "sso-admin:ListPermissionSets",
    "EventSource": "sso-admin",
    "EventName": "ListPermissionSets",
    "Description": "Lists the  PermissionSets in an IAM Identity Center instance"
  },
  {
    "API": "sso-admin:ListPermissionSetsProvisionedToAccount",
    "EventSource": "sso-admin",
    "EventName": "ListPermissionSetsProvisionedToAccount",
    "Description": "Lists all the permission sets that are provisioned to a specified Amazon Web Services account"
  },
  {
    "API": "sso-admin:ListTagsForResource",
    "EventSource": "sso-admin",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags that are attached to a specified resource"
  },
  {
    "API": "sso-admin:ListTrustedTokenIssuers",
    "EventSource": "sso-admin",
    "EventName": "ListTrustedTokenIssuers",
    "Description": "Lists all the trusted token issuers configured in an instance of IAM Identity Center"
  },
  {
    "API": "sso-admin:ProvisionPermissionSet",
    "EventSource": "sso-admin",
    "EventName": "ProvisionPermissionSet",
    "Description": "The process by which a specified permission set is provisioned to the specified target"
  },
  {
    "API": "sso-admin:PutApplicationAccessScope",
    "EventSource": "sso-admin",
    "EventName": "PutApplicationAccessScope",
    "Description": "Adds or updates the list of authorized targets for an IAM Identity Center access scope for an application"
  },
  {
    "API": "sso-admin:PutApplicationAssignmentConfiguration",
    "EventSource": "sso-admin",
    "EventName": "PutApplicationAssignmentConfiguration",
    "Description": "Configure how users gain access to an application"
  },
  {
    "API": "sso-admin:PutApplicationAuthenticationMethod",
    "EventSource": "sso-admin",
    "EventName": "PutApplicationAuthenticationMethod",
    "Description": "Adds or updates an authentication method for an application"
  },
  {
    "API": "sso-admin:PutApplicationGrant",
    "EventSource": "sso-admin",
    "EventName": "PutApplicationGrant",
    "Description": "Adds a grant to an application"
  },
  {
    "API": "sso-admin:PutInlinePolicyToPermissionSet",
    "EventSource": "sso-admin",
    "EventName": "PutInlinePolicyToPermissionSet",
    "Description": "Attaches an inline policy to a permission set"
  },
  {
    "API": "sso-admin:PutPermissionsBoundaryToPermissionSet",
    "EventSource": "sso-admin",
    "EventName": "PutPermissionsBoundaryToPermissionSet",
    "Description": "Attaches an Amazon Web Services managed or customer managed policy to the specified  PermissionSet as a permissions boundary"
  },
  {
    "API": "sso-admin:TagResource",
    "EventSource": "sso-admin",
    "EventName": "TagResource",
    "Description": "Associates a set of tags with a specified resource"
  },
  {
    "API": "sso-admin:UntagResource",
    "EventSource": "sso-admin",
    "EventName": "UntagResource",
    "Description": "Disassociates a set of tags from a specified resource"
  },
  {
    "API": "sso-admin:UpdateApplication",
    "EventSource": "sso-admin",
    "EventName": "UpdateApplication",
    "Description": "Updates application properties"
  },
  {
    "API": "sso-admin:UpdateInstance",
    "EventSource": "sso-admin",
    "EventName": "UpdateInstance",
    "Description": "Update the details for the instance of IAM Identity Center that is owned by the Amazon Web Services account"
  },
  {
    "API": "sso-admin:UpdateInstanceAccessControlAttributeConfiguration",
    "EventSource": "sso-admin",
    "EventName": "UpdateInstanceAccessControlAttributeConfiguration",
    "Description": "Updates the IAM Identity Center identity store attributes that you can use with the IAM Identity Center instance for attributes-based access control (ABAC)"
  },
  {
    "API": "sso-admin:UpdatePermissionSet",
    "EventSource": "sso-admin",
    "EventName": "UpdatePermissionSet",
    "Description": "Updates an existing permission set"
  },
  {
    "API": "sso-admin:UpdateTrustedTokenIssuer",
    "EventSource": "sso-admin",
    "EventName": "UpdateTrustedTokenIssuer",
    "Description": "Updates the name of the trusted token issuer, or the path of a source attribute or destination attribute for a trusted token issuer configuration"
  },
  {
    "API": "sso-oidc:CreateToken",
    "EventSource": "sso-oidc",
    "EventName": "CreateToken",
    "Description": "Creates and returns access and refresh tokens for clients that are authenticated using client secrets"
  },
  {
    "API": "sso-oidc:CreateTokenWithIam",
    "EventSource": "sso-oidc",
    "EventName": "CreateTokenWithIam",
    "Description": "Creates and returns access and refresh tokens for clients and applications that are authenticated using IAM entities"
  },
  {
    "API": "sso-oidc:GeneratePresignedUrl",
    "EventSource": "sso-oidc",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "sso-oidc:RegisterClient",
    "EventSource": "sso-oidc",
    "EventName": "RegisterClient",
    "Description": "Registers a client with IAM Identity Center"
  },
  {
    "API": "sso-oidc:StartDeviceAuthorization",
    "EventSource": "sso-oidc",
    "EventName": "StartDeviceAuthorization",
    "Description": "Initiates device authorization by requesting a pair of verification codes from the authorization service"
  },
  {
    "API": "stepfunctions:CreateActivity",
    "EventSource": "stepfunctions",
    "EventName": "CreateActivity",
    "Description": "Creates an activity"
  },
  {
    "API": "stepfunctions:CreateStateMachine",
    "EventSource": "stepfunctions",
    "EventName": "CreateStateMachine",
    "Description": "Creates a state machine"
  },
  {
    "API": "stepfunctions:CreateStateMachineAlias",
    "EventSource": "stepfunctions",
    "EventName": "CreateStateMachineAlias",
    "Description": "Creates an `alias <https://docs"
  },
  {
    "API": "stepfunctions:DeleteActivity",
    "EventSource": "stepfunctions",
    "EventName": "DeleteActivity",
    "Description": "Deletes an activity"
  },
  {
    "API": "stepfunctions:DeleteStateMachine",
    "EventSource": "stepfunctions",
    "EventName": "DeleteStateMachine",
    "Description": "Deletes a state machine"
  },
  {
    "API": "stepfunctions:DeleteStateMachineAlias",
    "EventSource": "stepfunctions",
    "EventName": "DeleteStateMachineAlias",
    "Description": "Deletes a state machine `alias <https://docs"
  },
  {
    "API": "stepfunctions:DeleteStateMachineVersion",
    "EventSource": "stepfunctions",
    "EventName": "DeleteStateMachineVersion",
    "Description": "Deletes a state machine `version <https://docs"
  },
  {
    "API": "stepfunctions:DescribeActivity",
    "EventSource": "stepfunctions",
    "EventName": "DescribeActivity",
    "Description": "Describes an activity"
  },
  {
    "API": "stepfunctions:DescribeExecution",
    "EventSource": "stepfunctions",
    "EventName": "DescribeExecution",
    "Description": "Provides information about a state machine execution, such as the state machine associated with the execution, the execution input and output, and relevant execution metadata"
  },
  {
    "API": "stepfunctions:DescribeMapRun",
    "EventSource": "stepfunctions",
    "EventName": "DescribeMapRun",
    "Description": "Provides information about a Map Run's configuration, progress, and results"
  },
  {
    "API": "stepfunctions:DescribeStateMachine",
    "EventSource": "stepfunctions",
    "EventName": "DescribeStateMachine",
    "Description": "Provides information about a state machine's definition, its IAM role Amazon Resource Name (ARN), and configuration"
  },
  {
    "API": "stepfunctions:DescribeStateMachineAlias",
    "EventSource": "stepfunctions",
    "EventName": "DescribeStateMachineAlias",
    "Description": "Returns details about a state machine `alias <https://docs"
  },
  {
    "API": "stepfunctions:DescribeStateMachineForExecution",
    "EventSource": "stepfunctions",
    "EventName": "DescribeStateMachineForExecution",
    "Description": "Provides information about a state machine's definition, its execution role ARN, and configuration"
  },
  {
    "API": "stepfunctions:GeneratePresignedUrl",
    "EventSource": "stepfunctions",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "stepfunctions:GetActivityTask",
    "EventSource": "stepfunctions",
    "EventName": "GetActivityTask",
    "Description": "Used by workers to retrieve a task (with the specified activity ARN) which has been scheduled for execution by a running state machine"
  },
  {
    "API": "stepfunctions:GetExecutionHistory",
    "EventSource": "stepfunctions",
    "EventName": "GetExecutionHistory",
    "Description": "Returns the history of the specified execution as a list of events"
  },
  {
    "API": "stepfunctions:ListActivities",
    "EventSource": "stepfunctions",
    "EventName": "ListActivities",
    "Description": "Lists the existing activities"
  },
  {
    "API": "stepfunctions:ListExecutions",
    "EventSource": "stepfunctions",
    "EventName": "ListExecutions",
    "Description": "Lists all executions of a state machine or a Map Run"
  },
  {
    "API": "stepfunctions:ListMapRuns",
    "EventSource": "stepfunctions",
    "EventName": "ListMapRuns",
    "Description": "Lists all Map Runs that were started by a given state machine execution"
  },
  {
    "API": "stepfunctions:ListStateMachineAliases",
    "EventSource": "stepfunctions",
    "EventName": "ListStateMachineAliases",
    "Description": "Lists `aliases <https://docs"
  },
  {
    "API": "stepfunctions:ListStateMachineVersions",
    "EventSource": "stepfunctions",
    "EventName": "ListStateMachineVersions",
    "Description": "Lists `versions <https://docs"
  },
  {
    "API": "stepfunctions:ListStateMachines",
    "EventSource": "stepfunctions",
    "EventName": "ListStateMachines",
    "Description": "Lists the existing state machines"
  },
  {
    "API": "stepfunctions:ListTagsForResource",
    "EventSource": "stepfunctions",
    "EventName": "ListTagsForResource",
    "Description": "List tags for a given resource"
  },
  {
    "API": "stepfunctions:PublishStateMachineVersion",
    "EventSource": "stepfunctions",
    "EventName": "PublishStateMachineVersion",
    "Description": "Creates a `version <https://docs"
  },
  {
    "API": "stepfunctions:RedriveExecution",
    "EventSource": "stepfunctions",
    "EventName": "RedriveExecution",
    "Description": "Restarts unsuccessful executions of Standard workflows that didn't complete successfully in the last 14 days"
  },
  {
    "API": "stepfunctions:SendTaskFailure",
    "EventSource": "stepfunctions",
    "EventName": "SendTaskFailure",
    "Description": "Used by activity workers, Task states using the `callback <https://docs"
  },
  {
    "API": "stepfunctions:SendTaskHeartbeat",
    "EventSource": "stepfunctions",
    "EventName": "SendTaskHeartbeat",
    "Description": "Used by activity workers and Task states using the `callback <https://docs"
  },
  {
    "API": "stepfunctions:SendTaskSuccess",
    "EventSource": "stepfunctions",
    "EventName": "SendTaskSuccess",
    "Description": "Used by activity workers, Task states using the `callback <https://docs"
  },
  {
    "API": "stepfunctions:StartExecution",
    "EventSource": "stepfunctions",
    "EventName": "StartExecution",
    "Description": "Starts a state machine execution"
  },
  {
    "API": "stepfunctions:StartSyncExecution",
    "EventSource": "stepfunctions",
    "EventName": "StartSyncExecution",
    "Description": "Starts a Synchronous Express state machine execution"
  },
  {
    "API": "stepfunctions:StopExecution",
    "EventSource": "stepfunctions",
    "EventName": "StopExecution",
    "Description": "Stops an execution"
  },
  {
    "API": "stepfunctions:TagResource",
    "EventSource": "stepfunctions",
    "EventName": "TagResource",
    "Description": "Add a tag to a Step Functions resource"
  },
  {
    "API": "stepfunctions:TestState",
    "EventSource": "stepfunctions",
    "EventName": "TestState",
    "Description": "Accepts the definition of a single state and executes it"
  },
  {
    "API": "stepfunctions:UntagResource",
    "EventSource": "stepfunctions",
    "EventName": "UntagResource",
    "Description": "Remove a tag from a Step Functions resource"
  },
  {
    "API": "stepfunctions:UpdateMapRun",
    "EventSource": "stepfunctions",
    "EventName": "UpdateMapRun",
    "Description": "Updates an in-progress Map Run's configuration to include changes to the settings that control maximum concurrency and Map Run failure"
  },
  {
    "API": "stepfunctions:UpdateStateMachine",
    "EventSource": "stepfunctions",
    "EventName": "UpdateStateMachine",
    "Description": "Updates an existing state machine by modifying its ``definition``, ``roleArn``, or ``loggingConfiguration``"
  },
  {
    "API": "stepfunctions:UpdateStateMachineAlias",
    "EventSource": "stepfunctions",
    "EventName": "UpdateStateMachineAlias",
    "Description": "Updates the configuration of an existing state machine `alias <https://docs"
  },
  {
    "API": "stepfunctions:ValidateStateMachineDefinition",
    "EventSource": "stepfunctions",
    "EventName": "ValidateStateMachineDefinition",
    "Description": "Validates the syntax of a state machine definition"
  },
  {
    "API": "storagegateway:ActivateGateway",
    "EventSource": "storagegateway",
    "EventName": "ActivateGateway",
    "Description": "Activates the gateway you previously deployed on your host"
  },
  {
    "API": "storagegateway:AddCache",
    "EventSource": "storagegateway",
    "EventName": "AddCache",
    "Description": "Configures one or more gateway local disks as cache for a gateway"
  },
  {
    "API": "storagegateway:AddTagsToResource",
    "EventSource": "storagegateway",
    "EventName": "AddTagsToResource",
    "Description": "Adds one or more tags to the specified resource"
  },
  {
    "API": "storagegateway:AddUploadBuffer",
    "EventSource": "storagegateway",
    "EventName": "AddUploadBuffer",
    "Description": "Configures one or more gateway local disks as upload buffer for a specified gateway"
  },
  {
    "API": "storagegateway:AddWorkingStorage",
    "EventSource": "storagegateway",
    "EventName": "AddWorkingStorage",
    "Description": "Configures one or more gateway local disks as working storage for a gateway"
  },
  {
    "API": "storagegateway:AssignTapePool",
    "EventSource": "storagegateway",
    "EventName": "AssignTapePool",
    "Description": "Assigns a tape to a tape pool for archiving"
  },
  {
    "API": "storagegateway:AssociateFileSystem",
    "EventSource": "storagegateway",
    "EventName": "AssociateFileSystem",
    "Description": "Associate an Amazon FSx file system with the FSx File Gateway"
  },
  {
    "API": "storagegateway:AttachVolume",
    "EventSource": "storagegateway",
    "EventName": "AttachVolume",
    "Description": "Connects a volume to an iSCSI connection and then attaches the volume to the specified gateway"
  },
  {
    "API": "storagegateway:CancelArchival",
    "EventSource": "storagegateway",
    "EventName": "CancelArchival",
    "Description": "Cancels archiving of a virtual tape to the virtual tape shelf (VTS) after the archiving process is initiated"
  },
  {
    "API": "storagegateway:CancelRetrieval",
    "EventSource": "storagegateway",
    "EventName": "CancelRetrieval",
    "Description": "Cancels retrieval of a virtual tape from the virtual tape shelf (VTS) to a gateway after the retrieval process is initiated"
  },
  {
    "API": "storagegateway:CreateCachedIscsiVolume",
    "EventSource": "storagegateway",
    "EventName": "CreateCachedIscsiVolume",
    "Description": "Creates a cached volume on a specified cached volume gateway"
  },
  {
    "API": "storagegateway:CreateNfsFileShare",
    "EventSource": "storagegateway",
    "EventName": "CreateNfsFileShare",
    "Description": "Creates a Network File System (NFS) file share on an existing S3 File Gateway"
  },
  {
    "API": "storagegateway:CreateSmbFileShare",
    "EventSource": "storagegateway",
    "EventName": "CreateSmbFileShare",
    "Description": "Creates a Server Message Block (SMB) file share on an existing S3 File Gateway"
  },
  {
    "API": "storagegateway:CreateSnapshot",
    "EventSource": "storagegateway",
    "EventName": "CreateSnapshot",
    "Description": "Initiates a snapshot of a volume"
  },
  {
    "API": "storagegateway:CreateSnapshotFromVolumeRecoveryPoint",
    "EventSource": "storagegateway",
    "EventName": "CreateSnapshotFromVolumeRecoveryPoint",
    "Description": "Initiates a snapshot of a gateway from a volume recovery point"
  },
  {
    "API": "storagegateway:CreateStoredIscsiVolume",
    "EventSource": "storagegateway",
    "EventName": "CreateStoredIscsiVolume",
    "Description": "Creates a volume on a specified gateway"
  },
  {
    "API": "storagegateway:CreateTapePool",
    "EventSource": "storagegateway",
    "EventName": "CreateTapePool",
    "Description": "Creates a new custom tape pool"
  },
  {
    "API": "storagegateway:CreateTapeWithBarcode",
    "EventSource": "storagegateway",
    "EventName": "CreateTapeWithBarcode",
    "Description": "Creates a virtual tape by using your own barcode"
  },
  {
    "API": "storagegateway:CreateTapes",
    "EventSource": "storagegateway",
    "EventName": "CreateTapes",
    "Description": "Creates one or more virtual tapes"
  },
  {
    "API": "storagegateway:DeleteAutomaticTapeCreationPolicy",
    "EventSource": "storagegateway",
    "EventName": "DeleteAutomaticTapeCreationPolicy",
    "Description": "Deletes the automatic tape creation policy of a gateway"
  },
  {
    "API": "storagegateway:DeleteBandwidthRateLimit",
    "EventSource": "storagegateway",
    "EventName": "DeleteBandwidthRateLimit",
    "Description": "Deletes the bandwidth rate limits of a gateway"
  },
  {
    "API": "storagegateway:DeleteChapCredentials",
    "EventSource": "storagegateway",
    "EventName": "DeleteChapCredentials",
    "Description": "Deletes Challenge-Handshake Authentication Protocol (CHAP) credentials for a specified iSCSI target and initiator pair"
  },
  {
    "API": "storagegateway:DeleteFileShare",
    "EventSource": "storagegateway",
    "EventName": "DeleteFileShare",
    "Description": "Deletes a file share from an S3 File Gateway"
  },
  {
    "API": "storagegateway:DeleteGateway",
    "EventSource": "storagegateway",
    "EventName": "DeleteGateway",
    "Description": "Deletes a gateway"
  },
  {
    "API": "storagegateway:DeleteSnapshotSchedule",
    "EventSource": "storagegateway",
    "EventName": "DeleteSnapshotSchedule",
    "Description": "Deletes a snapshot of a volume"
  },
  {
    "API": "storagegateway:DeleteTape",
    "EventSource": "storagegateway",
    "EventName": "DeleteTape",
    "Description": "Deletes the specified virtual tape"
  },
  {
    "API": "storagegateway:DeleteTapeArchive",
    "EventSource": "storagegateway",
    "EventName": "DeleteTapeArchive",
    "Description": "Deletes the specified virtual tape from the virtual tape shelf (VTS)"
  },
  {
    "API": "storagegateway:DeleteTapePool",
    "EventSource": "storagegateway",
    "EventName": "DeleteTapePool",
    "Description": "Delete a custom tape pool"
  },
  {
    "API": "storagegateway:DeleteVolume",
    "EventSource": "storagegateway",
    "EventName": "DeleteVolume",
    "Description": "Deletes the specified storage volume that you previously created using the  CreateCachediSCSIVolume or  CreateStorediSCSIVolume API"
  },
  {
    "API": "storagegateway:DescribeAvailabilityMonitorTest",
    "EventSource": "storagegateway",
    "EventName": "DescribeAvailabilityMonitorTest",
    "Description": "Returns information about the most recent high availability monitoring test that was performed on the host in a cluster"
  },
  {
    "API": "storagegateway:DescribeBandwidthRateLimit",
    "EventSource": "storagegateway",
    "EventName": "DescribeBandwidthRateLimit",
    "Description": "Returns the bandwidth rate limits of a gateway"
  },
  {
    "API": "storagegateway:DescribeBandwidthRateLimitSchedule",
    "EventSource": "storagegateway",
    "EventName": "DescribeBandwidthRateLimitSchedule",
    "Description": "Returns information about the bandwidth rate limit schedule of a gateway"
  },
  {
    "API": "storagegateway:DescribeCache",
    "EventSource": "storagegateway",
    "EventName": "DescribeCache",
    "Description": "Returns information about the cache of a gateway"
  },
  {
    "API": "storagegateway:DescribeCachedIscsiVolumes",
    "EventSource": "storagegateway",
    "EventName": "DescribeCachedIscsiVolumes",
    "Description": "Returns a description of the gateway volumes specified in the request"
  },
  {
    "API": "storagegateway:DescribeChapCredentials",
    "EventSource": "storagegateway",
    "EventName": "DescribeChapCredentials",
    "Description": "Returns an array of Challenge-Handshake Authentication Protocol (CHAP) credentials information for a specified iSCSI target, one for each target-initiator pair"
  },
  {
    "API": "storagegateway:DescribeFileSystemAssociations",
    "EventSource": "storagegateway",
    "EventName": "DescribeFileSystemAssociations",
    "Description": "Gets the file system association information"
  },
  {
    "API": "storagegateway:DescribeGatewayInformation",
    "EventSource": "storagegateway",
    "EventName": "DescribeGatewayInformation",
    "Description": "Returns metadata about a gateway such as its name, network interfaces, time zone, status, and software version"
  },
  {
    "API": "storagegateway:DescribeMaintenanceStartTime",
    "EventSource": "storagegateway",
    "EventName": "DescribeMaintenanceStartTime",
    "Description": "Returns your gateway's maintenance window schedule information, with values for monthly or weekly cadence, specific day and time to begin maintenance, and which types of updates to apply"
  },
  {
    "API": "storagegateway:DescribeNfsFileShares",
    "EventSource": "storagegateway",
    "EventName": "DescribeNfsFileShares",
    "Description": "Gets a description for one or more Network File System (NFS) file shares from an S3 File Gateway"
  },
  {
    "API": "storagegateway:DescribeSmbFileShares",
    "EventSource": "storagegateway",
    "EventName": "DescribeSmbFileShares",
    "Description": "Gets a description for one or more Server Message Block (SMB) file shares from a S3 File Gateway"
  },
  {
    "API": "storagegateway:DescribeSmbSettings",
    "EventSource": "storagegateway",
    "EventName": "DescribeSmbSettings",
    "Description": "Gets a description of a Server Message Block (SMB) file share settings from a file gateway"
  },
  {
    "API": "storagegateway:DescribeSnapshotSchedule",
    "EventSource": "storagegateway",
    "EventName": "DescribeSnapshotSchedule",
    "Description": "Describes the snapshot schedule for the specified gateway volume"
  },
  {
    "API": "storagegateway:DescribeStoredIscsiVolumes",
    "EventSource": "storagegateway",
    "EventName": "DescribeStoredIscsiVolumes",
    "Description": "Returns the description of the gateway volumes specified in the request"
  },
  {
    "API": "storagegateway:DescribeTapeArchives",
    "EventSource": "storagegateway",
    "EventName": "DescribeTapeArchives",
    "Description": "Returns a description of specified virtual tapes in the virtual tape shelf (VTS)"
  },
  {
    "API": "storagegateway:DescribeTapeRecoveryPoints",
    "EventSource": "storagegateway",
    "EventName": "DescribeTapeRecoveryPoints",
    "Description": "Returns a list of virtual tape recovery points that are available for the specified tape gateway"
  },
  {
    "API": "storagegateway:DescribeTapes",
    "EventSource": "storagegateway",
    "EventName": "DescribeTapes",
    "Description": "Returns a description of virtual tapes that correspond to the specified Amazon Resource Names (ARNs)"
  },
  {
    "API": "storagegateway:DescribeUploadBuffer",
    "EventSource": "storagegateway",
    "EventName": "DescribeUploadBuffer",
    "Description": "Returns information about the upload buffer of a gateway"
  },
  {
    "API": "storagegateway:DescribeVtlDevices",
    "EventSource": "storagegateway",
    "EventName": "DescribeVtlDevices",
    "Description": "Returns a description of virtual tape library (VTL) devices for the specified tape gateway"
  },
  {
    "API": "storagegateway:DescribeWorkingStorage",
    "EventSource": "storagegateway",
    "EventName": "DescribeWorkingStorage",
    "Description": "Returns information about the working storage of a gateway"
  },
  {
    "API": "storagegateway:DetachVolume",
    "EventSource": "storagegateway",
    "EventName": "DetachVolume",
    "Description": "Disconnects a volume from an iSCSI connection and then detaches the volume from the specified gateway"
  },
  {
    "API": "storagegateway:DisableGateway",
    "EventSource": "storagegateway",
    "EventName": "DisableGateway",
    "Description": "Disables a tape gateway when the gateway is no longer functioning"
  },
  {
    "API": "storagegateway:DisassociateFileSystem",
    "EventSource": "storagegateway",
    "EventName": "DisassociateFileSystem",
    "Description": "Disassociates an Amazon FSx file system from the specified gateway"
  },
  {
    "API": "storagegateway:GeneratePresignedUrl",
    "EventSource": "storagegateway",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "storagegateway:JoinDomain",
    "EventSource": "storagegateway",
    "EventName": "JoinDomain",
    "Description": "Adds a file gateway to an Active Directory domain"
  },
  {
    "API": "storagegateway:ListAutomaticTapeCreationPolicies",
    "EventSource": "storagegateway",
    "EventName": "ListAutomaticTapeCreationPolicies",
    "Description": "Lists the automatic tape creation policies for a gateway"
  },
  {
    "API": "storagegateway:ListFileShares",
    "EventSource": "storagegateway",
    "EventName": "ListFileShares",
    "Description": "Gets a list of the file shares for a specific S3 File Gateway, or the list of file shares that belong to the calling Amazon Web Services account"
  },
  {
    "API": "storagegateway:ListFileSystemAssociations",
    "EventSource": "storagegateway",
    "EventName": "ListFileSystemAssociations",
    "Description": "Gets a list of ``FileSystemAssociationSummary`` objects"
  },
  {
    "API": "storagegateway:ListGateways",
    "EventSource": "storagegateway",
    "EventName": "ListGateways",
    "Description": "Lists gateways owned by an Amazon Web Services account in an Amazon Web Services Region specified in the request"
  },
  {
    "API": "storagegateway:ListLocalDisks",
    "EventSource": "storagegateway",
    "EventName": "ListLocalDisks",
    "Description": "Returns a list of the gateway's local disks"
  },
  {
    "API": "storagegateway:ListTagsForResource",
    "EventSource": "storagegateway",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags that have been added to the specified resource"
  },
  {
    "API": "storagegateway:ListTapePools",
    "EventSource": "storagegateway",
    "EventName": "ListTapePools",
    "Description": "Lists custom tape pools"
  },
  {
    "API": "storagegateway:ListTapes",
    "EventSource": "storagegateway",
    "EventName": "ListTapes",
    "Description": "Lists virtual tapes in your virtual tape library (VTL) and your virtual tape shelf (VTS)"
  },
  {
    "API": "storagegateway:ListVolumeInitiators",
    "EventSource": "storagegateway",
    "EventName": "ListVolumeInitiators",
    "Description": "Lists iSCSI initiators that are connected to a volume"
  },
  {
    "API": "storagegateway:ListVolumeRecoveryPoints",
    "EventSource": "storagegateway",
    "EventName": "ListVolumeRecoveryPoints",
    "Description": "Lists the recovery points for a specified gateway"
  },
  {
    "API": "storagegateway:ListVolumes",
    "EventSource": "storagegateway",
    "EventName": "ListVolumes",
    "Description": "Lists the iSCSI stored volumes of a gateway"
  },
  {
    "API": "storagegateway:NotifyWhenUploaded",
    "EventSource": "storagegateway",
    "EventName": "NotifyWhenUploaded",
    "Description": "Sends you notification through CloudWatch Events when all files written to your file share have been uploaded to Amazon S3"
  },
  {
    "API": "storagegateway:RefreshCache",
    "EventSource": "storagegateway",
    "EventName": "RefreshCache",
    "Description": "Refreshes the cached inventory of objects for the specified file share"
  },
  {
    "API": "storagegateway:RemoveTagsFromResource",
    "EventSource": "storagegateway",
    "EventName": "RemoveTagsFromResource",
    "Description": "Removes one or more tags from the specified resource"
  },
  {
    "API": "storagegateway:ResetCache",
    "EventSource": "storagegateway",
    "EventName": "ResetCache",
    "Description": "Resets all cache disks that have encountered an error and makes the disks available for reconfiguration as cache storage"
  },
  {
    "API": "storagegateway:RetrieveTapeArchive",
    "EventSource": "storagegateway",
    "EventName": "RetrieveTapeArchive",
    "Description": "Retrieves an archived virtual tape from the virtual tape shelf (VTS) to a tape gateway"
  },
  {
    "API": "storagegateway:RetrieveTapeRecoveryPoint",
    "EventSource": "storagegateway",
    "EventName": "RetrieveTapeRecoveryPoint",
    "Description": "Retrieves the recovery point for the specified virtual tape"
  },
  {
    "API": "storagegateway:SetLocalConsolePassword",
    "EventSource": "storagegateway",
    "EventName": "SetLocalConsolePassword",
    "Description": "Sets the password for your VM local console"
  },
  {
    "API": "storagegateway:SetSmbGuestPassword",
    "EventSource": "storagegateway",
    "EventName": "SetSmbGuestPassword",
    "Description": "Sets the password for the guest user ``smbguest``"
  },
  {
    "API": "storagegateway:ShutdownGateway",
    "EventSource": "storagegateway",
    "EventName": "ShutdownGateway",
    "Description": "Shuts down a Tape Gateway or Volume Gateway"
  },
  {
    "API": "storagegateway:StartAvailabilityMonitorTest",
    "EventSource": "storagegateway",
    "EventName": "StartAvailabilityMonitorTest",
    "Description": "Start a test that verifies that the specified gateway is configured for High Availability monitoring in your host environment"
  },
  {
    "API": "storagegateway:StartGateway",
    "EventSource": "storagegateway",
    "EventName": "StartGateway",
    "Description": "Starts a gateway that you previously shut down (see  ShutdownGateway)"
  },
  {
    "API": "storagegateway:UpdateAutomaticTapeCreationPolicy",
    "EventSource": "storagegateway",
    "EventName": "UpdateAutomaticTapeCreationPolicy",
    "Description": "Updates the automatic tape creation policy of a gateway"
  },
  {
    "API": "storagegateway:UpdateBandwidthRateLimit",
    "EventSource": "storagegateway",
    "EventName": "UpdateBandwidthRateLimit",
    "Description": "Updates the bandwidth rate limits of a gateway"
  },
  {
    "API": "storagegateway:UpdateBandwidthRateLimitSchedule",
    "EventSource": "storagegateway",
    "EventName": "UpdateBandwidthRateLimitSchedule",
    "Description": "Updates the bandwidth rate limit schedule for a specified gateway"
  },
  {
    "API": "storagegateway:UpdateChapCredentials",
    "EventSource": "storagegateway",
    "EventName": "UpdateChapCredentials",
    "Description": "Updates the Challenge-Handshake Authentication Protocol (CHAP) credentials for a specified iSCSI target"
  },
  {
    "API": "storagegateway:UpdateFileSystemAssociation",
    "EventSource": "storagegateway",
    "EventName": "UpdateFileSystemAssociation",
    "Description": "Updates a file system association"
  },
  {
    "API": "storagegateway:UpdateGatewayInformation",
    "EventSource": "storagegateway",
    "EventName": "UpdateGatewayInformation",
    "Description": "Updates a gateway's metadata, which includes the gateway's name, time zone, and metadata cache size"
  },
  {
    "API": "storagegateway:UpdateGatewaySoftwareNow",
    "EventSource": "storagegateway",
    "EventName": "UpdateGatewaySoftwareNow",
    "Description": "Updates the gateway virtual machine (VM) software"
  },
  {
    "API": "storagegateway:UpdateMaintenanceStartTime",
    "EventSource": "storagegateway",
    "EventName": "UpdateMaintenanceStartTime",
    "Description": "Updates a gateway's maintenance window schedule, with settings for monthly or weekly cadence, specific day and time to begin maintenance, and which types of updates to apply"
  },
  {
    "API": "storagegateway:UpdateNfsFileShare",
    "EventSource": "storagegateway",
    "EventName": "UpdateNfsFileShare",
    "Description": "Updates a Network File System (NFS) file share"
  },
  {
    "API": "storagegateway:UpdateSmbFileShare",
    "EventSource": "storagegateway",
    "EventName": "UpdateSmbFileShare",
    "Description": "Updates a Server Message Block (SMB) file share"
  },
  {
    "API": "storagegateway:UpdateSmbFileShareVisibility",
    "EventSource": "storagegateway",
    "EventName": "UpdateSmbFileShareVisibility",
    "Description": "Controls whether the shares on an S3 File Gateway are visible in a net view or browse list"
  },
  {
    "API": "storagegateway:UpdateSmbLocalGroups",
    "EventSource": "storagegateway",
    "EventName": "UpdateSmbLocalGroups",
    "Description": "Updates the list of Active Directory users and groups that have special permissions for SMB file shares on the gateway"
  },
  {
    "API": "storagegateway:UpdateSmbSecurityStrategy",
    "EventSource": "storagegateway",
    "EventName": "UpdateSmbSecurityStrategy",
    "Description": "Updates the SMB security strategy level for an Amazon S3 file gateway"
  },
  {
    "API": "storagegateway:UpdateSnapshotSchedule",
    "EventSource": "storagegateway",
    "EventName": "UpdateSnapshotSchedule",
    "Description": "Updates a snapshot schedule configured for a gateway volume"
  },
  {
    "API": "storagegateway:UpdateVtlDeviceType",
    "EventSource": "storagegateway",
    "EventName": "UpdateVtlDeviceType",
    "Description": "Updates the type of medium changer in a tape gateway"
  },
  {
    "API": "sts:AssumeRole",
    "EventSource": "sts",
    "EventName": "AssumeRole",
    "Description": "Returns a set of temporary security credentials that you can use to access Amazon Web Services resources"
  },
  {
    "API": "sts:AssumeRoleWithSaml",
    "EventSource": "sts",
    "EventName": "AssumeRoleWithSaml",
    "Description": "Returns a set of temporary security credentials for users who have been authenticated via a SAML authentication response"
  },
  {
    "API": "sts:AssumeRoleWithWebIdentity",
    "EventSource": "sts",
    "EventName": "AssumeRoleWithWebIdentity",
    "Description": "Returns a set of temporary security credentials for users who have been authenticated in a mobile or web application with a web identity provider"
  },
  {
    "API": "sts:DecodeAuthorizationMessage",
    "EventSource": "sts",
    "EventName": "DecodeAuthorizationMessage",
    "Description": "Decodes additional information about the authorization status of a request from an encoded message returned in response to an Amazon Web Services request"
  },
  {
    "API": "sts:GeneratePresignedUrl",
    "EventSource": "sts",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "sts:GetAccessKeyInfo",
    "EventSource": "sts",
    "EventName": "GetAccessKeyInfo",
    "Description": "Returns the account identifier for the specified access key ID"
  },
  {
    "API": "sts:GetCallerIdentity",
    "EventSource": "sts",
    "EventName": "GetCallerIdentity",
    "Description": "Returns details about the IAM user or role whose credentials are used to call the operation"
  },
  {
    "API": "sts:GetFederationToken",
    "EventSource": "sts",
    "EventName": "GetFederationToken",
    "Description": "Returns a set of temporary security credentials (consisting of an access key ID, a secret access key, and a security token) for a user"
  },
  {
    "API": "sts:GetSessionToken",
    "EventSource": "sts",
    "EventName": "GetSessionToken",
    "Description": "Returns a set of temporary credentials for an Amazon Web Services account or IAM user"
  },
  {
    "API": "supplychain:CreateBillOfMaterialsImportJob",
    "EventSource": "supplychain",
    "EventName": "CreateBillOfMaterialsImportJob",
    "Description": "CreateBillOfMaterialsImportJob creates an import job for the Product Bill Of Materials (BOM) entity"
  },
  {
    "API": "supplychain:GeneratePresignedUrl",
    "EventSource": "supplychain",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "supplychain:GetBillOfMaterialsImportJob",
    "EventSource": "supplychain",
    "EventName": "GetBillOfMaterialsImportJob",
    "Description": "Get status and details of a BillOfMaterialsImportJob"
  },
  {
    "API": "supplychain:SendDataIntegrationEvent",
    "EventSource": "supplychain",
    "EventName": "SendDataIntegrationEvent",
    "Description": "Send transactional data events with real-time data for analysis or monitoring"
  },
  {
    "API": "support:AddAttachmentsToSet",
    "EventSource": "support",
    "EventName": "AddAttachmentsToSet",
    "Description": "Adds one or more attachments to an attachment set"
  },
  {
    "API": "support:AddCommunicationToCase",
    "EventSource": "support",
    "EventName": "AddCommunicationToCase",
    "Description": "Adds additional customer communication to an Amazon Web Services Support case"
  },
  {
    "API": "support:CreateCase",
    "EventSource": "support",
    "EventName": "CreateCase",
    "Description": "Creates a case in the Amazon Web Services Support Center"
  },
  {
    "API": "support:DescribeAttachment",
    "EventSource": "support",
    "EventName": "DescribeAttachment",
    "Description": "Returns the attachment that has the specified ID"
  },
  {
    "API": "support:DescribeCases",
    "EventSource": "support",
    "EventName": "DescribeCases",
    "Description": "Returns a list of cases that you specify by passing one or more case IDs"
  },
  {
    "API": "support:DescribeCommunications",
    "EventSource": "support",
    "EventName": "DescribeCommunications",
    "Description": "Returns communications and attachments for one or more support cases"
  },
  {
    "API": "support:DescribeCreateCaseOptions",
    "EventSource": "support",
    "EventName": "DescribeCreateCaseOptions",
    "Description": "Returns a list of CreateCaseOption types along with the corresponding supported hours and language availability"
  },
  {
    "API": "support:DescribeServices",
    "EventSource": "support",
    "EventName": "DescribeServices",
    "Description": "Returns the current list of Amazon Web Services services and a list of service categories for each service"
  },
  {
    "API": "support:DescribeSeverityLevels",
    "EventSource": "support",
    "EventName": "DescribeSeverityLevels",
    "Description": "Returns the list of severity levels that you can assign to a support case"
  },
  {
    "API": "support:DescribeSupportedLanguages",
    "EventSource": "support",
    "EventName": "DescribeSupportedLanguages",
    "Description": "Returns a list of supported languages for a specified ``categoryCode``, ``issueType`` and ``serviceCode``"
  },
  {
    "API": "support:DescribeTrustedAdvisorCheckRefreshStatuses",
    "EventSource": "support",
    "EventName": "DescribeTrustedAdvisorCheckRefreshStatuses",
    "Description": "Returns the refresh status of the Trusted Advisor checks that have the specified check IDs"
  },
  {
    "API": "support:DescribeTrustedAdvisorCheckResult",
    "EventSource": "support",
    "EventName": "DescribeTrustedAdvisorCheckResult",
    "Description": "Returns the results of the Trusted Advisor check that has the specified check ID"
  },
  {
    "API": "support:DescribeTrustedAdvisorCheckSummaries",
    "EventSource": "support",
    "EventName": "DescribeTrustedAdvisorCheckSummaries",
    "Description": "Returns the results for the Trusted Advisor check summaries for the check IDs that you specified"
  },
  {
    "API": "support:DescribeTrustedAdvisorChecks",
    "EventSource": "support",
    "EventName": "DescribeTrustedAdvisorChecks",
    "Description": "Returns information about all available Trusted Advisor checks, including the name, ID, category, description, and metadata"
  },
  {
    "API": "support:GeneratePresignedUrl",
    "EventSource": "support",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "support:RefreshTrustedAdvisorCheck",
    "EventSource": "support",
    "EventName": "RefreshTrustedAdvisorCheck",
    "Description": "Refreshes the Trusted Advisor check that you specify using the check ID"
  },
  {
    "API": "support:ResolveCase",
    "EventSource": "support",
    "EventName": "ResolveCase",
    "Description": "Resolves a support case"
  },
  {
    "API": "support-app:CreateSlackChannelConfiguration",
    "EventSource": "support-app",
    "EventName": "CreateSlackChannelConfiguration",
    "Description": "Creates a Slack channel configuration for your Amazon Web Services account"
  },
  {
    "API": "support-app:DeleteAccountAlias",
    "EventSource": "support-app",
    "EventName": "DeleteAccountAlias",
    "Description": "Deletes an alias for an Amazon Web Services account ID"
  },
  {
    "API": "support-app:DeleteSlackChannelConfiguration",
    "EventSource": "support-app",
    "EventName": "DeleteSlackChannelConfiguration",
    "Description": "Deletes a Slack channel configuration from your Amazon Web Services account"
  },
  {
    "API": "support-app:DeleteSlackWorkspaceConfiguration",
    "EventSource": "support-app",
    "EventName": "DeleteSlackWorkspaceConfiguration",
    "Description": "Deletes a Slack workspace configuration from your Amazon Web Services account"
  },
  {
    "API": "support-app:GeneratePresignedUrl",
    "EventSource": "support-app",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "support-app:GetAccountAlias",
    "EventSource": "support-app",
    "EventName": "GetAccountAlias",
    "Description": "Retrieves the alias from an Amazon Web Services account ID"
  },
  {
    "API": "support-app:ListSlackChannelConfigurations",
    "EventSource": "support-app",
    "EventName": "ListSlackChannelConfigurations",
    "Description": "Lists the Slack channel configurations for an Amazon Web Services account"
  },
  {
    "API": "support-app:ListSlackWorkspaceConfigurations",
    "EventSource": "support-app",
    "EventName": "ListSlackWorkspaceConfigurations",
    "Description": "Lists the Slack workspace configurations for an Amazon Web Services account"
  },
  {
    "API": "support-app:PutAccountAlias",
    "EventSource": "support-app",
    "EventName": "PutAccountAlias",
    "Description": "Creates or updates an individual alias for each Amazon Web Services account ID"
  },
  {
    "API": "support-app:RegisterSlackWorkspaceForOrganization",
    "EventSource": "support-app",
    "EventName": "RegisterSlackWorkspaceForOrganization",
    "Description": "Registers a Slack workspace for your Amazon Web Services account"
  },
  {
    "API": "support-app:UpdateSlackChannelConfiguration",
    "EventSource": "support-app",
    "EventName": "UpdateSlackChannelConfiguration",
    "Description": "Updates the configuration for a Slack channel, such as case update notifications"
  },
  {
    "API": "swf:CountClosedWorkflowExecutions",
    "EventSource": "swf",
    "EventName": "CountClosedWorkflowExecutions",
    "Description": "Returns the number of closed workflow executions within the given domain that meet the specified filtering criteria"
  },
  {
    "API": "swf:CountOpenWorkflowExecutions",
    "EventSource": "swf",
    "EventName": "CountOpenWorkflowExecutions",
    "Description": "Returns the number of open workflow executions within the given domain that meet the specified filtering criteria"
  },
  {
    "API": "swf:CountPendingActivityTasks",
    "EventSource": "swf",
    "EventName": "CountPendingActivityTasks",
    "Description": "Returns the estimated number of activity tasks in the specified task list"
  },
  {
    "API": "swf:CountPendingDecisionTasks",
    "EventSource": "swf",
    "EventName": "CountPendingDecisionTasks",
    "Description": "Returns the estimated number of decision tasks in the specified task list"
  },
  {
    "API": "swf:DeleteActivityType",
    "EventSource": "swf",
    "EventName": "DeleteActivityType",
    "Description": "Deletes the specified *activity type*"
  },
  {
    "API": "swf:DeleteWorkflowType",
    "EventSource": "swf",
    "EventName": "DeleteWorkflowType",
    "Description": "Deletes the specified *workflow type*"
  },
  {
    "API": "swf:DeprecateActivityType",
    "EventSource": "swf",
    "EventName": "DeprecateActivityType",
    "Description": "Deprecates the specified *activity type*"
  },
  {
    "API": "swf:DeprecateDomain",
    "EventSource": "swf",
    "EventName": "DeprecateDomain",
    "Description": "Deprecates the specified domain"
  },
  {
    "API": "swf:DeprecateWorkflowType",
    "EventSource": "swf",
    "EventName": "DeprecateWorkflowType",
    "Description": "Deprecates the specified *workflow type*"
  },
  {
    "API": "swf:DescribeActivityType",
    "EventSource": "swf",
    "EventName": "DescribeActivityType",
    "Description": "Returns information about the specified activity type"
  },
  {
    "API": "swf:DescribeDomain",
    "EventSource": "swf",
    "EventName": "DescribeDomain",
    "Description": "Returns information about the specified domain, including description and status"
  },
  {
    "API": "swf:DescribeWorkflowExecution",
    "EventSource": "swf",
    "EventName": "DescribeWorkflowExecution",
    "Description": "Returns information about the specified workflow execution including its type and some statistics"
  },
  {
    "API": "swf:DescribeWorkflowType",
    "EventSource": "swf",
    "EventName": "DescribeWorkflowType",
    "Description": "Returns information about the specified *workflow type*"
  },
  {
    "API": "swf:GeneratePresignedUrl",
    "EventSource": "swf",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "swf:GetWorkflowExecutionHistory",
    "EventSource": "swf",
    "EventName": "GetWorkflowExecutionHistory",
    "Description": "Returns the history of the specified workflow execution"
  },
  {
    "API": "swf:ListActivityTypes",
    "EventSource": "swf",
    "EventName": "ListActivityTypes",
    "Description": "Returns information about all activities registered in the specified domain that match the specified name and registration status"
  },
  {
    "API": "swf:ListClosedWorkflowExecutions",
    "EventSource": "swf",
    "EventName": "ListClosedWorkflowExecutions",
    "Description": "Returns a list of closed workflow executions in the specified domain that meet the filtering criteria"
  },
  {
    "API": "swf:ListDomains",
    "EventSource": "swf",
    "EventName": "ListDomains",
    "Description": "Returns the list of domains registered in the account"
  },
  {
    "API": "swf:ListOpenWorkflowExecutions",
    "EventSource": "swf",
    "EventName": "ListOpenWorkflowExecutions",
    "Description": "Returns a list of open workflow executions in the specified domain that meet the filtering criteria"
  },
  {
    "API": "swf:ListTagsForResource",
    "EventSource": "swf",
    "EventName": "ListTagsForResource",
    "Description": "List tags for a given domain"
  },
  {
    "API": "swf:ListWorkflowTypes",
    "EventSource": "swf",
    "EventName": "ListWorkflowTypes",
    "Description": "Returns information about workflow types in the specified domain"
  },
  {
    "API": "swf:PollForActivityTask",
    "EventSource": "swf",
    "EventName": "PollForActivityTask",
    "Description": "Used by workers to get an  ActivityTask from the specified activity ``taskList``"
  },
  {
    "API": "swf:PollForDecisionTask",
    "EventSource": "swf",
    "EventName": "PollForDecisionTask",
    "Description": "Used by deciders to get a  DecisionTask from the specified decision ``taskList``"
  },
  {
    "API": "swf:RecordActivityTaskHeartbeat",
    "EventSource": "swf",
    "EventName": "RecordActivityTaskHeartbeat",
    "Description": "Used by activity workers to report to the service that the  ActivityTask represented by the specified ``taskToken`` is still making progress"
  },
  {
    "API": "swf:RegisterActivityType",
    "EventSource": "swf",
    "EventName": "RegisterActivityType",
    "Description": "Registers a new *activity type* along with its configuration settings in the specified domain"
  },
  {
    "API": "swf:RegisterDomain",
    "EventSource": "swf",
    "EventName": "RegisterDomain",
    "Description": "Registers a new domain"
  },
  {
    "API": "swf:RegisterWorkflowType",
    "EventSource": "swf",
    "EventName": "RegisterWorkflowType",
    "Description": "Registers a new *workflow type* and its configuration settings in the specified domain"
  },
  {
    "API": "swf:RequestCancelWorkflowExecution",
    "EventSource": "swf",
    "EventName": "RequestCancelWorkflowExecution",
    "Description": "Records a ``WorkflowExecutionCancelRequested`` event in the currently running workflow execution identified by the given domain, workflowId, and runId"
  },
  {
    "API": "swf:RespondActivityTaskCanceled",
    "EventSource": "swf",
    "EventName": "RespondActivityTaskCanceled",
    "Description": "Used by workers to tell the service that the  ActivityTask identified by the ``taskToken`` was successfully canceled"
  },
  {
    "API": "swf:RespondActivityTaskCompleted",
    "EventSource": "swf",
    "EventName": "RespondActivityTaskCompleted",
    "Description": "Used by workers to tell the service that the  ActivityTask identified by the ``taskToken`` completed successfully with a ``result`` (if provided)"
  },
  {
    "API": "swf:RespondActivityTaskFailed",
    "EventSource": "swf",
    "EventName": "RespondActivityTaskFailed",
    "Description": "Used by workers to tell the service that the  ActivityTask identified by the ``taskToken`` has failed with ``reason`` (if specified)"
  },
  {
    "API": "swf:RespondDecisionTaskCompleted",
    "EventSource": "swf",
    "EventName": "RespondDecisionTaskCompleted",
    "Description": "Used by deciders to tell the service that the  DecisionTask identified by the ``taskToken`` has successfully completed"
  },
  {
    "API": "swf:SignalWorkflowExecution",
    "EventSource": "swf",
    "EventName": "SignalWorkflowExecution",
    "Description": "Records a ``WorkflowExecutionSignaled`` event in the workflow execution history and creates a decision task for the workflow execution identified by the given domain, workflowId and runId"
  },
  {
    "API": "swf:StartWorkflowExecution",
    "EventSource": "swf",
    "EventName": "StartWorkflowExecution",
    "Description": "Starts an execution of the workflow type in the specified domain using the provided ``workflowId`` and input data"
  },
  {
    "API": "swf:TagResource",
    "EventSource": "swf",
    "EventName": "TagResource",
    "Description": "Add a tag to a Amazon SWF domain"
  },
  {
    "API": "swf:TerminateWorkflowExecution",
    "EventSource": "swf",
    "EventName": "TerminateWorkflowExecution",
    "Description": "Records a ``WorkflowExecutionTerminated`` event and forces closure of the workflow execution identified by the given domain, runId, and workflowId"
  },
  {
    "API": "swf:UndeprecateActivityType",
    "EventSource": "swf",
    "EventName": "UndeprecateActivityType",
    "Description": "Undeprecates a previously deprecated *activity type*"
  },
  {
    "API": "swf:UndeprecateDomain",
    "EventSource": "swf",
    "EventName": "UndeprecateDomain",
    "Description": "Undeprecates a previously deprecated domain"
  },
  {
    "API": "swf:UndeprecateWorkflowType",
    "EventSource": "swf",
    "EventName": "UndeprecateWorkflowType",
    "Description": "Undeprecates a previously deprecated *workflow type*"
  },
  {
    "API": "swf:UntagResource",
    "EventSource": "swf",
    "EventName": "UntagResource",
    "Description": "Remove a tag from a Amazon SWF domain"
  },
  {
    "API": "synthetics:AssociateResource",
    "EventSource": "synthetics",
    "EventName": "AssociateResource",
    "Description": "Associates a canary with a group"
  },
  {
    "API": "synthetics:CreateCanary",
    "EventSource": "synthetics",
    "EventName": "CreateCanary",
    "Description": "Creates a canary"
  },
  {
    "API": "synthetics:CreateGroup",
    "EventSource": "synthetics",
    "EventName": "CreateGroup",
    "Description": "Creates a group which you can use to associate canaries with each other, including cross-Region canaries"
  },
  {
    "API": "synthetics:DeleteCanary",
    "EventSource": "synthetics",
    "EventName": "DeleteCanary",
    "Description": "Permanently deletes the specified canary"
  },
  {
    "API": "synthetics:DeleteGroup",
    "EventSource": "synthetics",
    "EventName": "DeleteGroup",
    "Description": "Deletes a group"
  },
  {
    "API": "synthetics:DescribeCanaries",
    "EventSource": "synthetics",
    "EventName": "DescribeCanaries",
    "Description": "This operation returns a list of the canaries in your account, along with full details about each canary"
  },
  {
    "API": "synthetics:DescribeCanariesLastRun",
    "EventSource": "synthetics",
    "EventName": "DescribeCanariesLastRun",
    "Description": "Use this operation to see information from the most recent run of each canary that you have created"
  },
  {
    "API": "synthetics:DescribeRuntimeVersions",
    "EventSource": "synthetics",
    "EventName": "DescribeRuntimeVersions",
    "Description": "Returns a list of Synthetics canary runtime versions"
  },
  {
    "API": "synthetics:DisassociateResource",
    "EventSource": "synthetics",
    "EventName": "DisassociateResource",
    "Description": "Removes a canary from a group"
  },
  {
    "API": "synthetics:GeneratePresignedUrl",
    "EventSource": "synthetics",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "synthetics:GetCanary",
    "EventSource": "synthetics",
    "EventName": "GetCanary",
    "Description": "Retrieves complete information about one canary"
  },
  {
    "API": "synthetics:GetCanaryRuns",
    "EventSource": "synthetics",
    "EventName": "GetCanaryRuns",
    "Description": "Retrieves a list of runs for a specified canary"
  },
  {
    "API": "synthetics:GetGroup",
    "EventSource": "synthetics",
    "EventName": "GetGroup",
    "Description": "Returns information about one group"
  },
  {
    "API": "synthetics:ListAssociatedGroups",
    "EventSource": "synthetics",
    "EventName": "ListAssociatedGroups",
    "Description": "Returns a list of the groups that the specified canary is associated with"
  },
  {
    "API": "synthetics:ListGroupResources",
    "EventSource": "synthetics",
    "EventName": "ListGroupResources",
    "Description": "This operation returns a list of the ARNs of the canaries that are associated with the specified group"
  },
  {
    "API": "synthetics:ListGroups",
    "EventSource": "synthetics",
    "EventName": "ListGroups",
    "Description": "Returns a list of all groups in the account, displaying their names, unique IDs, and ARNs"
  },
  {
    "API": "synthetics:ListTagsForResource",
    "EventSource": "synthetics",
    "EventName": "ListTagsForResource",
    "Description": "Displays the tags associated with a canary or group"
  },
  {
    "API": "synthetics:StartCanary",
    "EventSource": "synthetics",
    "EventName": "StartCanary",
    "Description": "Use this operation to run a canary that has already been created"
  },
  {
    "API": "synthetics:StopCanary",
    "EventSource": "synthetics",
    "EventName": "StopCanary",
    "Description": "Stops the canary to prevent all future runs"
  },
  {
    "API": "synthetics:TagResource",
    "EventSource": "synthetics",
    "EventName": "TagResource",
    "Description": "Assigns one or more tags (key-value pairs) to the specified canary or group"
  },
  {
    "API": "synthetics:UntagResource",
    "EventSource": "synthetics",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags from the specified resource"
  },
  {
    "API": "synthetics:UpdateCanary",
    "EventSource": "synthetics",
    "EventName": "UpdateCanary",
    "Description": "Updates the configuration of a canary that has already been created"
  },
  {
    "API": "taxsettings:BatchDeleteTaxRegistration",
    "EventSource": "taxsettings",
    "EventName": "BatchDeleteTaxRegistration",
    "Description": "Deletes tax registration for multiple accounts in batch"
  },
  {
    "API": "taxsettings:BatchPutTaxRegistration",
    "EventSource": "taxsettings",
    "EventName": "BatchPutTaxRegistration",
    "Description": "Adds or updates tax registration for multiple accounts in batch"
  },
  {
    "API": "taxsettings:DeleteTaxRegistration",
    "EventSource": "taxsettings",
    "EventName": "DeleteTaxRegistration",
    "Description": "Deletes tax registration for a single account"
  },
  {
    "API": "taxsettings:GeneratePresignedUrl",
    "EventSource": "taxsettings",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "taxsettings:GetTaxRegistration",
    "EventSource": "taxsettings",
    "EventName": "GetTaxRegistration",
    "Description": "Retrieves tax registration for a single account"
  },
  {
    "API": "taxsettings:GetTaxRegistrationDocument",
    "EventSource": "taxsettings",
    "EventName": "GetTaxRegistrationDocument",
    "Description": "Downloads your tax documents to the Amazon S3 bucket that you specify in your request"
  },
  {
    "API": "taxsettings:ListTaxRegistrations",
    "EventSource": "taxsettings",
    "EventName": "ListTaxRegistrations",
    "Description": "Retrieves the tax registration of accounts listed in a consolidated billing family"
  },
  {
    "API": "taxsettings:PutTaxRegistration",
    "EventSource": "taxsettings",
    "EventName": "PutTaxRegistration",
    "Description": "Adds or updates tax registration for a single account"
  },
  {
    "API": "textract:AnalyzeDocument",
    "EventSource": "textract",
    "EventName": "AnalyzeDocument",
    "Description": "Analyzes an input document for relationships between detected items"
  },
  {
    "API": "textract:AnalyzeExpense",
    "EventSource": "textract",
    "EventName": "AnalyzeExpense",
    "Description": "``AnalyzeExpense`` synchronously analyzes an input document for financially related relationships between text"
  },
  {
    "API": "textract:AnalyzeId",
    "EventSource": "textract",
    "EventName": "AnalyzeId",
    "Description": "Analyzes identity documents for relevant information"
  },
  {
    "API": "textract:CreateAdapter",
    "EventSource": "textract",
    "EventName": "CreateAdapter",
    "Description": "Creates an adapter, which can be fine-tuned for enhanced performance on user provided documents"
  },
  {
    "API": "textract:CreateAdapterVersion",
    "EventSource": "textract",
    "EventName": "CreateAdapterVersion",
    "Description": "Creates a new version of an adapter"
  },
  {
    "API": "textract:DeleteAdapter",
    "EventSource": "textract",
    "EventName": "DeleteAdapter",
    "Description": "Deletes an Amazon Textract adapter"
  },
  {
    "API": "textract:DeleteAdapterVersion",
    "EventSource": "textract",
    "EventName": "DeleteAdapterVersion",
    "Description": "Deletes an Amazon Textract adapter version"
  },
  {
    "API": "textract:DetectDocumentText",
    "EventSource": "textract",
    "EventName": "DetectDocumentText",
    "Description": "Detects text in the input document"
  },
  {
    "API": "textract:GeneratePresignedUrl",
    "EventSource": "textract",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "textract:GetAdapter",
    "EventSource": "textract",
    "EventName": "GetAdapter",
    "Description": "Gets configuration information for an adapter specified by an AdapterId, returning information on AdapterName, Description, CreationTime, AutoUpdate status, and FeatureTypes"
  },
  {
    "API": "textract:GetAdapterVersion",
    "EventSource": "textract",
    "EventName": "GetAdapterVersion",
    "Description": "Gets configuration information for the specified adapter version, including: AdapterId, AdapterVersion, FeatureTypes, Status, StatusMessage, DatasetConfig, KMSKeyId, OutputConfig, Tags and EvaluationMetrics"
  },
  {
    "API": "textract:GetDocumentAnalysis",
    "EventSource": "textract",
    "EventName": "GetDocumentAnalysis",
    "Description": "Gets the results for an Amazon Textract asynchronous operation that analyzes text in a document"
  },
  {
    "API": "textract:GetDocumentTextDetection",
    "EventSource": "textract",
    "EventName": "GetDocumentTextDetection",
    "Description": "Gets the results for an Amazon Textract asynchronous operation that detects text in a document"
  },
  {
    "API": "textract:GetExpenseAnalysis",
    "EventSource": "textract",
    "EventName": "GetExpenseAnalysis",
    "Description": "Gets the results for an Amazon Textract asynchronous operation that analyzes invoices and receipts"
  },
  {
    "API": "textract:GetLendingAnalysis",
    "EventSource": "textract",
    "EventName": "GetLendingAnalysis",
    "Description": "Gets the results for an Amazon Textract asynchronous operation that analyzes text in a lending document"
  },
  {
    "API": "textract:GetLendingAnalysisSummary",
    "EventSource": "textract",
    "EventName": "GetLendingAnalysisSummary",
    "Description": "Gets summarized results for the ``StartLendingAnalysis`` operation, which analyzes text in a lending document"
  },
  {
    "API": "textract:ListAdapterVersions",
    "EventSource": "textract",
    "EventName": "ListAdapterVersions",
    "Description": "List all version of an adapter that meet the specified filtration criteria"
  },
  {
    "API": "textract:ListAdapters",
    "EventSource": "textract",
    "EventName": "ListAdapters",
    "Description": "Lists all adapters that match the specified filtration criteria"
  },
  {
    "API": "textract:ListTagsForResource",
    "EventSource": "textract",
    "EventName": "ListTagsForResource",
    "Description": "Lists all tags for an Amazon Textract resource"
  },
  {
    "API": "textract:StartDocumentAnalysis",
    "EventSource": "textract",
    "EventName": "StartDocumentAnalysis",
    "Description": "Starts the asynchronous analysis of an input document for relationships between detected items such as key-value pairs, tables, and selection elements"
  },
  {
    "API": "textract:StartDocumentTextDetection",
    "EventSource": "textract",
    "EventName": "StartDocumentTextDetection",
    "Description": "Starts the asynchronous detection of text in a document"
  },
  {
    "API": "textract:StartExpenseAnalysis",
    "EventSource": "textract",
    "EventName": "StartExpenseAnalysis",
    "Description": "Starts the asynchronous analysis of invoices or receipts for data like contact information, items purchased, and vendor names"
  },
  {
    "API": "textract:StartLendingAnalysis",
    "EventSource": "textract",
    "EventName": "StartLendingAnalysis",
    "Description": "Starts the classification and analysis of an input document"
  },
  {
    "API": "textract:TagResource",
    "EventSource": "textract",
    "EventName": "TagResource",
    "Description": "Adds one or more tags to the specified resource"
  },
  {
    "API": "textract:UntagResource",
    "EventSource": "textract",
    "EventName": "UntagResource",
    "Description": "Removes any tags with the specified keys from the specified resource"
  },
  {
    "API": "textract:UpdateAdapter",
    "EventSource": "textract",
    "EventName": "UpdateAdapter",
    "Description": "Update the configuration for an adapter"
  },
  {
    "API": "timestream-influxdb:CreateDbInstance",
    "EventSource": "timestream-influxdb",
    "EventName": "CreateDbInstance",
    "Description": "Creates a new Timestream for InfluxDB DB instance"
  },
  {
    "API": "timestream-influxdb:CreateDbParameterGroup",
    "EventSource": "timestream-influxdb",
    "EventName": "CreateDbParameterGroup",
    "Description": "Creates a new Timestream for InfluxDB DB parameter group to associate with DB instances"
  },
  {
    "API": "timestream-influxdb:DeleteDbInstance",
    "EventSource": "timestream-influxdb",
    "EventName": "DeleteDbInstance",
    "Description": "Deletes a Timestream for InfluxDB DB instance"
  },
  {
    "API": "timestream-influxdb:GeneratePresignedUrl",
    "EventSource": "timestream-influxdb",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "timestream-influxdb:GetDbInstance",
    "EventSource": "timestream-influxdb",
    "EventName": "GetDbInstance",
    "Description": "Returns a Timestream for InfluxDB DB instance"
  },
  {
    "API": "timestream-influxdb:GetDbParameterGroup",
    "EventSource": "timestream-influxdb",
    "EventName": "GetDbParameterGroup",
    "Description": "Returns a Timestream for InfluxDB DB parameter group"
  },
  {
    "API": "timestream-influxdb:ListDbInstances",
    "EventSource": "timestream-influxdb",
    "EventName": "ListDbInstances",
    "Description": "Returns a list of Timestream for InfluxDB DB instances"
  },
  {
    "API": "timestream-influxdb:ListDbParameterGroups",
    "EventSource": "timestream-influxdb",
    "EventName": "ListDbParameterGroups",
    "Description": "Returns a list of Timestream for InfluxDB DB parameter groups"
  },
  {
    "API": "timestream-influxdb:ListTagsForResource",
    "EventSource": "timestream-influxdb",
    "EventName": "ListTagsForResource",
    "Description": "A list of tags applied to the resource"
  },
  {
    "API": "timestream-influxdb:TagResource",
    "EventSource": "timestream-influxdb",
    "EventName": "TagResource",
    "Description": "Tags are composed of a Key/Value pairs"
  },
  {
    "API": "timestream-influxdb:UntagResource",
    "EventSource": "timestream-influxdb",
    "EventName": "UntagResource",
    "Description": "Removes the tag from the specified resource"
  },
  {
    "API": "timestream-influxdb:UpdateDbInstance",
    "EventSource": "timestream-influxdb",
    "EventName": "UpdateDbInstance",
    "Description": "Updates a Timestream for InfluxDB DB instance"
  },
  {
    "API": "timestream-query:CancelQuery",
    "EventSource": "timestream-query",
    "EventName": "CancelQuery",
    "Description": "Cancels a query that has been issued"
  },
  {
    "API": "timestream-query:CreateScheduledQuery",
    "EventSource": "timestream-query",
    "EventName": "CreateScheduledQuery",
    "Description": "Create a scheduled query that will be run on your behalf at the configured schedule"
  },
  {
    "API": "timestream-query:DeleteScheduledQuery",
    "EventSource": "timestream-query",
    "EventName": "DeleteScheduledQuery",
    "Description": "Deletes a given scheduled query"
  },
  {
    "API": "timestream-query:DescribeAccountSettings",
    "EventSource": "timestream-query",
    "EventName": "DescribeAccountSettings",
    "Description": "Describes the settings for your account that include the query pricing model and the configured maximum TCUs the service can use for your query workload"
  },
  {
    "API": "timestream-query:DescribeEndpoints",
    "EventSource": "timestream-query",
    "EventName": "DescribeEndpoints",
    "Description": "DescribeEndpoints returns a list of available endpoints to make Timestream API calls against"
  },
  {
    "API": "timestream-query:DescribeScheduledQuery",
    "EventSource": "timestream-query",
    "EventName": "DescribeScheduledQuery",
    "Description": "Provides detailed information about a scheduled query"
  },
  {
    "API": "timestream-query:ExecuteScheduledQuery",
    "EventSource": "timestream-query",
    "EventName": "ExecuteScheduledQuery",
    "Description": "You can use this API to run a scheduled query manually"
  },
  {
    "API": "timestream-query:GeneratePresignedUrl",
    "EventSource": "timestream-query",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "timestream-query:ListScheduledQueries",
    "EventSource": "timestream-query",
    "EventName": "ListScheduledQueries",
    "Description": "Gets a list of all scheduled queries in the caller's Amazon account and Region"
  },
  {
    "API": "timestream-query:ListTagsForResource",
    "EventSource": "timestream-query",
    "EventName": "ListTagsForResource",
    "Description": "List all tags on a Timestream query resource"
  },
  {
    "API": "timestream-query:PrepareQuery",
    "EventSource": "timestream-query",
    "EventName": "PrepareQuery",
    "Description": "A synchronous operation that allows you to submit a query with parameters to be stored by Timestream for later running"
  },
  {
    "API": "timestream-query:TagResource",
    "EventSource": "timestream-query",
    "EventName": "TagResource",
    "Description": "Associate a set of tags with a Timestream resource"
  },
  {
    "API": "timestream-query:UntagResource",
    "EventSource": "timestream-query",
    "EventName": "UntagResource",
    "Description": "Removes the association of tags from a Timestream query resource"
  },
  {
    "API": "timestream-query:UpdateAccountSettings",
    "EventSource": "timestream-query",
    "EventName": "UpdateAccountSettings",
    "Description": "Transitions your account to use TCUs for query pricing and modifies the maximum query compute units that you've configured"
  },
  {
    "API": "timestream-query:UpdateScheduledQuery",
    "EventSource": "timestream-query",
    "EventName": "UpdateScheduledQuery",
    "Description": "Update a scheduled query"
  },
  {
    "API": "timestream-write:CreateBatchLoadTask",
    "EventSource": "timestream-write",
    "EventName": "CreateBatchLoadTask",
    "Description": "Creates a new Timestream batch load task"
  },
  {
    "API": "timestream-write:CreateDatabase",
    "EventSource": "timestream-write",
    "EventName": "CreateDatabase",
    "Description": "Creates a new Timestream database"
  },
  {
    "API": "timestream-write:CreateTable",
    "EventSource": "timestream-write",
    "EventName": "CreateTable",
    "Description": "Adds a new table to an existing database in your account"
  },
  {
    "API": "timestream-write:DeleteDatabase",
    "EventSource": "timestream-write",
    "EventName": "DeleteDatabase",
    "Description": "Deletes a given Timestream database"
  },
  {
    "API": "timestream-write:DeleteTable",
    "EventSource": "timestream-write",
    "EventName": "DeleteTable",
    "Description": "Deletes a given Timestream table"
  },
  {
    "API": "timestream-write:DescribeBatchLoadTask",
    "EventSource": "timestream-write",
    "EventName": "DescribeBatchLoadTask",
    "Description": "Returns information about the batch load task, including configurations, mappings, progress, and other details"
  },
  {
    "API": "timestream-write:DescribeDatabase",
    "EventSource": "timestream-write",
    "EventName": "DescribeDatabase",
    "Description": "Returns information about the database, including the database name, time that the database was created, and the total number of tables found within the database"
  },
  {
    "API": "timestream-write:DescribeEndpoints",
    "EventSource": "timestream-write",
    "EventName": "DescribeEndpoints",
    "Description": "Returns a list of available endpoints to make Timestream API calls against"
  },
  {
    "API": "timestream-write:DescribeTable",
    "EventSource": "timestream-write",
    "EventName": "DescribeTable",
    "Description": "Returns information about the table, including the table name, database name, retention duration of the memory store and the magnetic store"
  },
  {
    "API": "timestream-write:GeneratePresignedUrl",
    "EventSource": "timestream-write",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "timestream-write:ListBatchLoadTasks",
    "EventSource": "timestream-write",
    "EventName": "ListBatchLoadTasks",
    "Description": "Provides a list of batch load tasks, along with the name, status, when the task is resumable until, and other details"
  },
  {
    "API": "timestream-write:ListDatabases",
    "EventSource": "timestream-write",
    "EventName": "ListDatabases",
    "Description": "Returns a list of your Timestream databases"
  },
  {
    "API": "timestream-write:ListTables",
    "EventSource": "timestream-write",
    "EventName": "ListTables",
    "Description": "Provides a list of tables, along with the name, status, and retention properties of each table"
  },
  {
    "API": "timestream-write:ListTagsForResource",
    "EventSource": "timestream-write",
    "EventName": "ListTagsForResource",
    "Description": "Lists all tags on a Timestream resource"
  },
  {
    "API": "timestream-write:ResumeBatchLoadTask",
    "EventSource": "timestream-write",
    "EventName": "ResumeBatchLoadTask",
    "Description": "See also: `AWS API Documentation <https://docs"
  },
  {
    "API": "timestream-write:TagResource",
    "EventSource": "timestream-write",
    "EventName": "TagResource",
    "Description": "Associates a set of tags with a Timestream resource"
  },
  {
    "API": "timestream-write:UntagResource",
    "EventSource": "timestream-write",
    "EventName": "UntagResource",
    "Description": "Removes the association of tags from a Timestream resource"
  },
  {
    "API": "timestream-write:UpdateDatabase",
    "EventSource": "timestream-write",
    "EventName": "UpdateDatabase",
    "Description": "Modifies the KMS key for an existing database"
  },
  {
    "API": "timestream-write:UpdateTable",
    "EventSource": "timestream-write",
    "EventName": "UpdateTable",
    "Description": "Modifies the retention duration of the memory store and magnetic store for your Timestream table"
  },
  {
    "API": "timestream-write:WriteRecords",
    "EventSource": "timestream-write",
    "EventName": "WriteRecords",
    "Description": "Enables you to write your time-series data into Timestream"
  },
  {
    "API": "tnb:CancelSolNetworkOperation",
    "EventSource": "tnb",
    "EventName": "CancelSolNetworkOperation",
    "Description": "Cancels a network operation"
  },
  {
    "API": "tnb:CreateSolFunctionPackage",
    "EventSource": "tnb",
    "EventName": "CreateSolFunctionPackage",
    "Description": "Creates a function package"
  },
  {
    "API": "tnb:CreateSolNetworkInstance",
    "EventSource": "tnb",
    "EventName": "CreateSolNetworkInstance",
    "Description": "Creates a network instance"
  },
  {
    "API": "tnb:CreateSolNetworkPackage",
    "EventSource": "tnb",
    "EventName": "CreateSolNetworkPackage",
    "Description": "Creates a network package"
  },
  {
    "API": "tnb:DeleteSolFunctionPackage",
    "EventSource": "tnb",
    "EventName": "DeleteSolFunctionPackage",
    "Description": "Deletes a function package"
  },
  {
    "API": "tnb:DeleteSolNetworkInstance",
    "EventSource": "tnb",
    "EventName": "DeleteSolNetworkInstance",
    "Description": "Deletes a network instance"
  },
  {
    "API": "tnb:DeleteSolNetworkPackage",
    "EventSource": "tnb",
    "EventName": "DeleteSolNetworkPackage",
    "Description": "Deletes network package"
  },
  {
    "API": "tnb:GeneratePresignedUrl",
    "EventSource": "tnb",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "tnb:GetSolFunctionInstance",
    "EventSource": "tnb",
    "EventName": "GetSolFunctionInstance",
    "Description": "Gets the details of a network function instance, including the instantation state and metadata from the function package descriptor in the network function package"
  },
  {
    "API": "tnb:GetSolFunctionPackage",
    "EventSource": "tnb",
    "EventName": "GetSolFunctionPackage",
    "Description": "Gets the details of an individual function package, such as the operational state and whether the package is in use"
  },
  {
    "API": "tnb:GetSolFunctionPackageContent",
    "EventSource": "tnb",
    "EventName": "GetSolFunctionPackageContent",
    "Description": "Gets the contents of a function package"
  },
  {
    "API": "tnb:GetSolFunctionPackageDescriptor",
    "EventSource": "tnb",
    "EventName": "GetSolFunctionPackageDescriptor",
    "Description": "Gets a function package descriptor in a function package"
  },
  {
    "API": "tnb:GetSolNetworkInstance",
    "EventSource": "tnb",
    "EventName": "GetSolNetworkInstance",
    "Description": "Gets the details of the network instance"
  },
  {
    "API": "tnb:GetSolNetworkOperation",
    "EventSource": "tnb",
    "EventName": "GetSolNetworkOperation",
    "Description": "Gets the details of a network operation, including the tasks involved in the network operation and the status of the tasks"
  },
  {
    "API": "tnb:GetSolNetworkPackage",
    "EventSource": "tnb",
    "EventName": "GetSolNetworkPackage",
    "Description": "Gets the details of a network package"
  },
  {
    "API": "tnb:GetSolNetworkPackageContent",
    "EventSource": "tnb",
    "EventName": "GetSolNetworkPackageContent",
    "Description": "Gets the contents of a network package"
  },
  {
    "API": "tnb:GetSolNetworkPackageDescriptor",
    "EventSource": "tnb",
    "EventName": "GetSolNetworkPackageDescriptor",
    "Description": "Gets the content of the network service descriptor"
  },
  {
    "API": "tnb:InstantiateSolNetworkInstance",
    "EventSource": "tnb",
    "EventName": "InstantiateSolNetworkInstance",
    "Description": "Instantiates a network instance"
  },
  {
    "API": "tnb:ListSolFunctionInstances",
    "EventSource": "tnb",
    "EventName": "ListSolFunctionInstances",
    "Description": "Lists network function instances"
  },
  {
    "API": "tnb:ListSolFunctionPackages",
    "EventSource": "tnb",
    "EventName": "ListSolFunctionPackages",
    "Description": "Lists information about function packages"
  },
  {
    "API": "tnb:ListSolNetworkInstances",
    "EventSource": "tnb",
    "EventName": "ListSolNetworkInstances",
    "Description": "Lists your network instances"
  },
  {
    "API": "tnb:ListSolNetworkOperations",
    "EventSource": "tnb",
    "EventName": "ListSolNetworkOperations",
    "Description": "Lists details for a network operation, including when the operation started and the status of the operation"
  },
  {
    "API": "tnb:ListSolNetworkPackages",
    "EventSource": "tnb",
    "EventName": "ListSolNetworkPackages",
    "Description": "Lists network packages"
  },
  {
    "API": "tnb:ListTagsForResource",
    "EventSource": "tnb",
    "EventName": "ListTagsForResource",
    "Description": "Lists tags for AWS TNB resources"
  },
  {
    "API": "tnb:PutSolFunctionPackageContent",
    "EventSource": "tnb",
    "EventName": "PutSolFunctionPackageContent",
    "Description": "Uploads the contents of a function package"
  },
  {
    "API": "tnb:PutSolNetworkPackageContent",
    "EventSource": "tnb",
    "EventName": "PutSolNetworkPackageContent",
    "Description": "Uploads the contents of a network package"
  },
  {
    "API": "tnb:TagResource",
    "EventSource": "tnb",
    "EventName": "TagResource",
    "Description": "Tags an AWS TNB resource"
  },
  {
    "API": "tnb:TerminateSolNetworkInstance",
    "EventSource": "tnb",
    "EventName": "TerminateSolNetworkInstance",
    "Description": "Terminates a network instance"
  },
  {
    "API": "tnb:UntagResource",
    "EventSource": "tnb",
    "EventName": "UntagResource",
    "Description": "Untags an AWS TNB resource"
  },
  {
    "API": "tnb:UpdateSolFunctionPackage",
    "EventSource": "tnb",
    "EventName": "UpdateSolFunctionPackage",
    "Description": "Updates the operational state of function package"
  },
  {
    "API": "tnb:UpdateSolNetworkInstance",
    "EventSource": "tnb",
    "EventName": "UpdateSolNetworkInstance",
    "Description": "Update a network instance"
  },
  {
    "API": "tnb:UpdateSolNetworkPackage",
    "EventSource": "tnb",
    "EventName": "UpdateSolNetworkPackage",
    "Description": "Updates the operational state of a network package"
  },
  {
    "API": "tnb:ValidateSolFunctionPackageContent",
    "EventSource": "tnb",
    "EventName": "ValidateSolFunctionPackageContent",
    "Description": "Validates function package content"
  },
  {
    "API": "tnb:ValidateSolNetworkPackageContent",
    "EventSource": "tnb",
    "EventName": "ValidateSolNetworkPackageContent",
    "Description": "Validates network package content"
  },
  {
    "API": "transcribe:CreateCallAnalyticsCategory",
    "EventSource": "transcribe",
    "EventName": "CreateCallAnalyticsCategory",
    "Description": "Creates a new Call Analytics category"
  },
  {
    "API": "transcribe:CreateLanguageModel",
    "EventSource": "transcribe",
    "EventName": "CreateLanguageModel",
    "Description": "Creates a new custom language model"
  },
  {
    "API": "transcribe:CreateMedicalVocabulary",
    "EventSource": "transcribe",
    "EventName": "CreateMedicalVocabulary",
    "Description": "Creates a new custom medical vocabulary"
  },
  {
    "API": "transcribe:CreateVocabulary",
    "EventSource": "transcribe",
    "EventName": "CreateVocabulary",
    "Description": "Creates a new custom vocabulary"
  },
  {
    "API": "transcribe:CreateVocabularyFilter",
    "EventSource": "transcribe",
    "EventName": "CreateVocabularyFilter",
    "Description": "Creates a new custom vocabulary filter"
  },
  {
    "API": "transcribe:DeleteCallAnalyticsCategory",
    "EventSource": "transcribe",
    "EventName": "DeleteCallAnalyticsCategory",
    "Description": "Deletes a Call Analytics category"
  },
  {
    "API": "transcribe:DeleteCallAnalyticsJob",
    "EventSource": "transcribe",
    "EventName": "DeleteCallAnalyticsJob",
    "Description": "Deletes a Call Analytics job"
  },
  {
    "API": "transcribe:DeleteLanguageModel",
    "EventSource": "transcribe",
    "EventName": "DeleteLanguageModel",
    "Description": "Deletes a custom language model"
  },
  {
    "API": "transcribe:DeleteMedicalScribeJob",
    "EventSource": "transcribe",
    "EventName": "DeleteMedicalScribeJob",
    "Description": "Deletes a Medical Scribe job"
  },
  {
    "API": "transcribe:DeleteMedicalTranscriptionJob",
    "EventSource": "transcribe",
    "EventName": "DeleteMedicalTranscriptionJob",
    "Description": "Deletes a medical transcription job"
  },
  {
    "API": "transcribe:DeleteMedicalVocabulary",
    "EventSource": "transcribe",
    "EventName": "DeleteMedicalVocabulary",
    "Description": "Deletes a custom medical vocabulary"
  },
  {
    "API": "transcribe:DeleteTranscriptionJob",
    "EventSource": "transcribe",
    "EventName": "DeleteTranscriptionJob",
    "Description": "Deletes a transcription job"
  },
  {
    "API": "transcribe:DeleteVocabulary",
    "EventSource": "transcribe",
    "EventName": "DeleteVocabulary",
    "Description": "Deletes a custom vocabulary"
  },
  {
    "API": "transcribe:DeleteVocabularyFilter",
    "EventSource": "transcribe",
    "EventName": "DeleteVocabularyFilter",
    "Description": "Deletes a custom vocabulary filter"
  },
  {
    "API": "transcribe:DescribeLanguageModel",
    "EventSource": "transcribe",
    "EventName": "DescribeLanguageModel",
    "Description": "Provides information about the specified custom language model"
  },
  {
    "API": "transcribe:GeneratePresignedUrl",
    "EventSource": "transcribe",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "transcribe:GetCallAnalyticsCategory",
    "EventSource": "transcribe",
    "EventName": "GetCallAnalyticsCategory",
    "Description": "Provides information about the specified Call Analytics category"
  },
  {
    "API": "transcribe:GetCallAnalyticsJob",
    "EventSource": "transcribe",
    "EventName": "GetCallAnalyticsJob",
    "Description": "Provides information about the specified Call Analytics job"
  },
  {
    "API": "transcribe:GetMedicalScribeJob",
    "EventSource": "transcribe",
    "EventName": "GetMedicalScribeJob",
    "Description": "Provides information about the specified Medical Scribe job"
  },
  {
    "API": "transcribe:GetMedicalTranscriptionJob",
    "EventSource": "transcribe",
    "EventName": "GetMedicalTranscriptionJob",
    "Description": "Provides information about the specified medical transcription job"
  },
  {
    "API": "transcribe:GetMedicalVocabulary",
    "EventSource": "transcribe",
    "EventName": "GetMedicalVocabulary",
    "Description": "Provides information about the specified custom medical vocabulary"
  },
  {
    "API": "transcribe:GetTranscriptionJob",
    "EventSource": "transcribe",
    "EventName": "GetTranscriptionJob",
    "Description": "Provides information about the specified transcription job"
  },
  {
    "API": "transcribe:GetVocabulary",
    "EventSource": "transcribe",
    "EventName": "GetVocabulary",
    "Description": "Provides information about the specified custom vocabulary"
  },
  {
    "API": "transcribe:GetVocabularyFilter",
    "EventSource": "transcribe",
    "EventName": "GetVocabularyFilter",
    "Description": "Provides information about the specified custom vocabulary filter"
  },
  {
    "API": "transcribe:ListCallAnalyticsCategories",
    "EventSource": "transcribe",
    "EventName": "ListCallAnalyticsCategories",
    "Description": "Provides a list of Call Analytics categories, including all rules that make up each category"
  },
  {
    "API": "transcribe:ListCallAnalyticsJobs",
    "EventSource": "transcribe",
    "EventName": "ListCallAnalyticsJobs",
    "Description": "Provides a list of Call Analytics jobs that match the specified criteria"
  },
  {
    "API": "transcribe:ListLanguageModels",
    "EventSource": "transcribe",
    "EventName": "ListLanguageModels",
    "Description": "Provides a list of custom language models that match the specified criteria"
  },
  {
    "API": "transcribe:ListMedicalScribeJobs",
    "EventSource": "transcribe",
    "EventName": "ListMedicalScribeJobs",
    "Description": "Provides a list of Medical Scribe jobs that match the specified criteria"
  },
  {
    "API": "transcribe:ListMedicalTranscriptionJobs",
    "EventSource": "transcribe",
    "EventName": "ListMedicalTranscriptionJobs",
    "Description": "Provides a list of medical transcription jobs that match the specified criteria"
  },
  {
    "API": "transcribe:ListMedicalVocabularies",
    "EventSource": "transcribe",
    "EventName": "ListMedicalVocabularies",
    "Description": "Provides a list of custom medical vocabularies that match the specified criteria"
  },
  {
    "API": "transcribe:ListTagsForResource",
    "EventSource": "transcribe",
    "EventName": "ListTagsForResource",
    "Description": "Lists all tags associated with the specified transcription job, vocabulary, model, or resource"
  },
  {
    "API": "transcribe:ListTranscriptionJobs",
    "EventSource": "transcribe",
    "EventName": "ListTranscriptionJobs",
    "Description": "Provides a list of transcription jobs that match the specified criteria"
  },
  {
    "API": "transcribe:ListVocabularies",
    "EventSource": "transcribe",
    "EventName": "ListVocabularies",
    "Description": "Provides a list of custom vocabularies that match the specified criteria"
  },
  {
    "API": "transcribe:ListVocabularyFilters",
    "EventSource": "transcribe",
    "EventName": "ListVocabularyFilters",
    "Description": "Provides a list of custom vocabulary filters that match the specified criteria"
  },
  {
    "API": "transcribe:StartCallAnalyticsJob",
    "EventSource": "transcribe",
    "EventName": "StartCallAnalyticsJob",
    "Description": "Transcribes the audio from a customer service call and applies any additional Request Parameters you choose to include in your request"
  },
  {
    "API": "transcribe:StartMedicalScribeJob",
    "EventSource": "transcribe",
    "EventName": "StartMedicalScribeJob",
    "Description": "Transcribes patient-clinician conversations and generates clinical notes"
  },
  {
    "API": "transcribe:StartMedicalTranscriptionJob",
    "EventSource": "transcribe",
    "EventName": "StartMedicalTranscriptionJob",
    "Description": "Transcribes the audio from a medical dictation or conversation and applies any additional Request Parameters you choose to include in your request"
  },
  {
    "API": "transcribe:StartTranscriptionJob",
    "EventSource": "transcribe",
    "EventName": "StartTranscriptionJob",
    "Description": "Transcribes the audio from a media file and applies any additional Request Parameters you choose to include in your request"
  },
  {
    "API": "transcribe:TagResource",
    "EventSource": "transcribe",
    "EventName": "TagResource",
    "Description": "Adds one or more custom tags, each in the form of a key:value pair, to the specified resource"
  },
  {
    "API": "transcribe:UntagResource",
    "EventSource": "transcribe",
    "EventName": "UntagResource",
    "Description": "Removes the specified tags from the specified Amazon Transcribe resource"
  },
  {
    "API": "transcribe:UpdateCallAnalyticsCategory",
    "EventSource": "transcribe",
    "EventName": "UpdateCallAnalyticsCategory",
    "Description": "Updates the specified Call Analytics category with new rules"
  },
  {
    "API": "transcribe:UpdateMedicalVocabulary",
    "EventSource": "transcribe",
    "EventName": "UpdateMedicalVocabulary",
    "Description": "Updates an existing custom medical vocabulary with new values"
  },
  {
    "API": "transcribe:UpdateVocabulary",
    "EventSource": "transcribe",
    "EventName": "UpdateVocabulary",
    "Description": "Updates an existing custom vocabulary with new values"
  },
  {
    "API": "transcribe:UpdateVocabularyFilter",
    "EventSource": "transcribe",
    "EventName": "UpdateVocabularyFilter",
    "Description": "Updates an existing custom vocabulary filter with a new list of words"
  },
  {
    "API": "transfer:CreateAccess",
    "EventSource": "transfer",
    "EventName": "CreateAccess",
    "Description": "Used by administrators to choose which groups in the directory should have access to upload and download files over the enabled protocols using Transfer Family"
  },
  {
    "API": "transfer:CreateAgreement",
    "EventSource": "transfer",
    "EventName": "CreateAgreement",
    "Description": "Creates an agreement"
  },
  {
    "API": "transfer:CreateConnector",
    "EventSource": "transfer",
    "EventName": "CreateConnector",
    "Description": "Creates the connector, which captures the parameters for a connection for the AS2 or SFTP protocol"
  },
  {
    "API": "transfer:CreateProfile",
    "EventSource": "transfer",
    "EventName": "CreateProfile",
    "Description": "Creates the local or partner profile to use for AS2 transfers"
  },
  {
    "API": "transfer:CreateServer",
    "EventSource": "transfer",
    "EventName": "CreateServer",
    "Description": "Instantiates an auto-scaling virtual server based on the selected file transfer protocol in Amazon Web Services"
  },
  {
    "API": "transfer:CreateUser",
    "EventSource": "transfer",
    "EventName": "CreateUser",
    "Description": "Creates a user and associates them with an existing file transfer protocol-enabled server"
  },
  {
    "API": "transfer:CreateWorkflow",
    "EventSource": "transfer",
    "EventName": "CreateWorkflow",
    "Description": "Allows you to create a workflow with specified steps and step details the workflow invokes after file transfer completes"
  },
  {
    "API": "transfer:DeleteAccess",
    "EventSource": "transfer",
    "EventName": "DeleteAccess",
    "Description": "Allows you to delete the access specified in the ``ServerID`` and ``ExternalID`` parameters"
  },
  {
    "API": "transfer:DeleteAgreement",
    "EventSource": "transfer",
    "EventName": "DeleteAgreement",
    "Description": "Delete the agreement that's specified in the provided ``AgreementId``"
  },
  {
    "API": "transfer:DeleteCertificate",
    "EventSource": "transfer",
    "EventName": "DeleteCertificate",
    "Description": "Deletes the certificate that's specified in the ``CertificateId`` parameter"
  },
  {
    "API": "transfer:DeleteConnector",
    "EventSource": "transfer",
    "EventName": "DeleteConnector",
    "Description": "Deletes the connector that's specified in the provided ``ConnectorId``"
  },
  {
    "API": "transfer:DeleteHostKey",
    "EventSource": "transfer",
    "EventName": "DeleteHostKey",
    "Description": "Deletes the host key that's specified in the ``HostKeyId`` parameter"
  },
  {
    "API": "transfer:DeleteProfile",
    "EventSource": "transfer",
    "EventName": "DeleteProfile",
    "Description": "Deletes the profile that's specified in the ``ProfileId`` parameter"
  },
  {
    "API": "transfer:DeleteServer",
    "EventSource": "transfer",
    "EventName": "DeleteServer",
    "Description": "Deletes the file transfer protocol-enabled server that you specify"
  },
  {
    "API": "transfer:DeleteSshPublicKey",
    "EventSource": "transfer",
    "EventName": "DeleteSshPublicKey",
    "Description": "Deletes a user's Secure Shell (SSH) public key"
  },
  {
    "API": "transfer:DeleteUser",
    "EventSource": "transfer",
    "EventName": "DeleteUser",
    "Description": "Deletes the user belonging to a file transfer protocol-enabled server you specify"
  },
  {
    "API": "transfer:DeleteWorkflow",
    "EventSource": "transfer",
    "EventName": "DeleteWorkflow",
    "Description": "Deletes the specified workflow"
  },
  {
    "API": "transfer:DescribeAccess",
    "EventSource": "transfer",
    "EventName": "DescribeAccess",
    "Description": "Describes the access that is assigned to the specific file transfer protocol-enabled server, as identified by its ``ServerId`` property and its ``ExternalId``"
  },
  {
    "API": "transfer:DescribeAgreement",
    "EventSource": "transfer",
    "EventName": "DescribeAgreement",
    "Description": "Describes the agreement that's identified by the ``AgreementId``"
  },
  {
    "API": "transfer:DescribeCertificate",
    "EventSource": "transfer",
    "EventName": "DescribeCertificate",
    "Description": "Describes the certificate that's identified by the ``CertificateId``"
  },
  {
    "API": "transfer:DescribeConnector",
    "EventSource": "transfer",
    "EventName": "DescribeConnector",
    "Description": "Describes the connector that's identified by the ``ConnectorId"
  },
  {
    "API": "transfer:DescribeExecution",
    "EventSource": "transfer",
    "EventName": "DescribeExecution",
    "Description": "You can use ``DescribeExecution`` to check the details of the execution of the specified workflow"
  },
  {
    "API": "transfer:DescribeHostKey",
    "EventSource": "transfer",
    "EventName": "DescribeHostKey",
    "Description": "Returns the details of the host key that's specified by the ``HostKeyId`` and ``ServerId``"
  },
  {
    "API": "transfer:DescribeProfile",
    "EventSource": "transfer",
    "EventName": "DescribeProfile",
    "Description": "Returns the details of the profile that's specified by the ``ProfileId``"
  },
  {
    "API": "transfer:DescribeSecurityPolicy",
    "EventSource": "transfer",
    "EventName": "DescribeSecurityPolicy",
    "Description": "Describes the security policy that is attached to your server or SFTP connector"
  },
  {
    "API": "transfer:DescribeServer",
    "EventSource": "transfer",
    "EventName": "DescribeServer",
    "Description": "Describes a file transfer protocol-enabled server that you specify by passing the ``ServerId`` parameter"
  },
  {
    "API": "transfer:DescribeUser",
    "EventSource": "transfer",
    "EventName": "DescribeUser",
    "Description": "Describes the user assigned to the specific file transfer protocol-enabled server, as identified by its ``ServerId`` property"
  },
  {
    "API": "transfer:DescribeWorkflow",
    "EventSource": "transfer",
    "EventName": "DescribeWorkflow",
    "Description": "Describes the specified workflow"
  },
  {
    "API": "transfer:GeneratePresignedUrl",
    "EventSource": "transfer",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "transfer:ImportCertificate",
    "EventSource": "transfer",
    "EventName": "ImportCertificate",
    "Description": "Imports the signing and encryption certificates that you need to create local (AS2) profiles and partner profiles"
  },
  {
    "API": "transfer:ImportHostKey",
    "EventSource": "transfer",
    "EventName": "ImportHostKey",
    "Description": "Adds a host key to the server that's specified by the ``ServerId`` parameter"
  },
  {
    "API": "transfer:ImportSshPublicKey",
    "EventSource": "transfer",
    "EventName": "ImportSshPublicKey",
    "Description": "Adds a Secure Shell (SSH) public key to a Transfer Family user identified by a ``UserName`` value assigned to the specific file transfer protocol-enabled server, identified by ``ServerId``"
  },
  {
    "API": "transfer:ListAccesses",
    "EventSource": "transfer",
    "EventName": "ListAccesses",
    "Description": "Lists the details for all the accesses you have on your server"
  },
  {
    "API": "transfer:ListAgreements",
    "EventSource": "transfer",
    "EventName": "ListAgreements",
    "Description": "Returns a list of the agreements for the server that's identified by the ``ServerId`` that you supply"
  },
  {
    "API": "transfer:ListCertificates",
    "EventSource": "transfer",
    "EventName": "ListCertificates",
    "Description": "Returns a list of the current certificates that have been imported into Transfer Family"
  },
  {
    "API": "transfer:ListConnectors",
    "EventSource": "transfer",
    "EventName": "ListConnectors",
    "Description": "Lists the connectors for the specified Region"
  },
  {
    "API": "transfer:ListExecutions",
    "EventSource": "transfer",
    "EventName": "ListExecutions",
    "Description": "Lists all in-progress executions for the specified workflow"
  },
  {
    "API": "transfer:ListHostKeys",
    "EventSource": "transfer",
    "EventName": "ListHostKeys",
    "Description": "Returns a list of host keys for the server that's specified by the ``ServerId`` parameter"
  },
  {
    "API": "transfer:ListProfiles",
    "EventSource": "transfer",
    "EventName": "ListProfiles",
    "Description": "Returns a list of the profiles for your system"
  },
  {
    "API": "transfer:ListSecurityPolicies",
    "EventSource": "transfer",
    "EventName": "ListSecurityPolicies",
    "Description": "Lists the security policies that are attached to your servers and SFTP connectors"
  },
  {
    "API": "transfer:ListServers",
    "EventSource": "transfer",
    "EventName": "ListServers",
    "Description": "Lists the file transfer protocol-enabled servers that are associated with your Amazon Web Services account"
  },
  {
    "API": "transfer:ListTagsForResource",
    "EventSource": "transfer",
    "EventName": "ListTagsForResource",
    "Description": "Lists all of the tags associated with the Amazon Resource Name (ARN) that you specify"
  },
  {
    "API": "transfer:ListUsers",
    "EventSource": "transfer",
    "EventName": "ListUsers",
    "Description": "Lists the users for a file transfer protocol-enabled server that you specify by passing the ``ServerId`` parameter"
  },
  {
    "API": "transfer:ListWorkflows",
    "EventSource": "transfer",
    "EventName": "ListWorkflows",
    "Description": "Lists all workflows associated with your Amazon Web Services account for your current region"
  },
  {
    "API": "transfer:SendWorkflowStepState",
    "EventSource": "transfer",
    "EventName": "SendWorkflowStepState",
    "Description": "Sends a callback for asynchronous custom steps"
  },
  {
    "API": "transfer:StartDirectoryListing",
    "EventSource": "transfer",
    "EventName": "StartDirectoryListing",
    "Description": "Retrieves a list of the contents of a directory from a remote SFTP server"
  },
  {
    "API": "transfer:StartFileTransfer",
    "EventSource": "transfer",
    "EventName": "StartFileTransfer",
    "Description": "Begins a file transfer between local Amazon Web Services storage and a remote AS2 or SFTP server"
  },
  {
    "API": "transfer:StartServer",
    "EventSource": "transfer",
    "EventName": "StartServer",
    "Description": "Changes the state of a file transfer protocol-enabled server from ``OFFLINE`` to ``ONLINE``"
  },
  {
    "API": "transfer:StopServer",
    "EventSource": "transfer",
    "EventName": "StopServer",
    "Description": "Changes the state of a file transfer protocol-enabled server from ``ONLINE`` to ``OFFLINE``"
  },
  {
    "API": "transfer:TagResource",
    "EventSource": "transfer",
    "EventName": "TagResource",
    "Description": "Attaches a key-value pair to a resource, as identified by its Amazon Resource Name (ARN)"
  },
  {
    "API": "transfer:TestConnection",
    "EventSource": "transfer",
    "EventName": "TestConnection",
    "Description": "Tests whether your SFTP connector is set up successfully"
  },
  {
    "API": "transfer:TestIdentityProvider",
    "EventSource": "transfer",
    "EventName": "TestIdentityProvider",
    "Description": "If the ``IdentityProviderType`` of a file transfer protocol-enabled server is ``AWS_DIRECTORY_SERVICE`` or ``API_Gateway``, tests whether your identity provider is set up successfully"
  },
  {
    "API": "transfer:UntagResource",
    "EventSource": "transfer",
    "EventName": "UntagResource",
    "Description": "Detaches a key-value pair from a resource, as identified by its Amazon Resource Name (ARN)"
  },
  {
    "API": "transfer:UpdateAccess",
    "EventSource": "transfer",
    "EventName": "UpdateAccess",
    "Description": "Allows you to update parameters for the access specified in the ``ServerID`` and ``ExternalID`` parameters"
  },
  {
    "API": "transfer:UpdateAgreement",
    "EventSource": "transfer",
    "EventName": "UpdateAgreement",
    "Description": "Updates some of the parameters for an existing agreement"
  },
  {
    "API": "transfer:UpdateCertificate",
    "EventSource": "transfer",
    "EventName": "UpdateCertificate",
    "Description": "Updates the active and inactive dates for a certificate"
  },
  {
    "API": "transfer:UpdateConnector",
    "EventSource": "transfer",
    "EventName": "UpdateConnector",
    "Description": "Updates some of the parameters for an existing connector"
  },
  {
    "API": "transfer:UpdateHostKey",
    "EventSource": "transfer",
    "EventName": "UpdateHostKey",
    "Description": "Updates the description for the host key that's specified by the ``ServerId`` and ``HostKeyId`` parameters"
  },
  {
    "API": "transfer:UpdateProfile",
    "EventSource": "transfer",
    "EventName": "UpdateProfile",
    "Description": "Updates some of the parameters for an existing profile"
  },
  {
    "API": "transfer:UpdateServer",
    "EventSource": "transfer",
    "EventName": "UpdateServer",
    "Description": "Updates the file transfer protocol-enabled server's properties after that server has been created"
  },
  {
    "API": "transfer:UpdateUser",
    "EventSource": "transfer",
    "EventName": "UpdateUser",
    "Description": "Assigns new properties to a user"
  },
  {
    "API": "translate:CreateParallelData",
    "EventSource": "translate",
    "EventName": "CreateParallelData",
    "Description": "Creates a parallel data resource in Amazon Translate by importing an input file from Amazon S3"
  },
  {
    "API": "translate:DeleteParallelData",
    "EventSource": "translate",
    "EventName": "DeleteParallelData",
    "Description": "Deletes a parallel data resource in Amazon Translate"
  },
  {
    "API": "translate:DeleteTerminology",
    "EventSource": "translate",
    "EventName": "DeleteTerminology",
    "Description": "A synchronous action that deletes a custom terminology"
  },
  {
    "API": "translate:DescribeTextTranslationJob",
    "EventSource": "translate",
    "EventName": "DescribeTextTranslationJob",
    "Description": "Gets the properties associated with an asynchronous batch translation job including name, ID, status, source and target languages, input/output S3 buckets, and so on"
  },
  {
    "API": "translate:GeneratePresignedUrl",
    "EventSource": "translate",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "translate:GetParallelData",
    "EventSource": "translate",
    "EventName": "GetParallelData",
    "Description": "Provides information about a parallel data resource"
  },
  {
    "API": "translate:GetTerminology",
    "EventSource": "translate",
    "EventName": "GetTerminology",
    "Description": "Retrieves a custom terminology"
  },
  {
    "API": "translate:ImportTerminology",
    "EventSource": "translate",
    "EventName": "ImportTerminology",
    "Description": "Creates or updates a custom terminology, depending on whether one already exists for the given terminology name"
  },
  {
    "API": "translate:ListLanguages",
    "EventSource": "translate",
    "EventName": "ListLanguages",
    "Description": "Provides a list of languages (RFC-5646 codes and names) that Amazon Translate supports"
  },
  {
    "API": "translate:ListParallelData",
    "EventSource": "translate",
    "EventName": "ListParallelData",
    "Description": "Provides a list of your parallel data resources in Amazon Translate"
  },
  {
    "API": "translate:ListTagsForResource",
    "EventSource": "translate",
    "EventName": "ListTagsForResource",
    "Description": "Lists all tags associated with a given Amazon Translate resource"
  },
  {
    "API": "translate:ListTerminologies",
    "EventSource": "translate",
    "EventName": "ListTerminologies",
    "Description": "Provides a list of custom terminologies associated with your account"
  },
  {
    "API": "translate:ListTextTranslationJobs",
    "EventSource": "translate",
    "EventName": "ListTextTranslationJobs",
    "Description": "Gets a list of the batch translation jobs that you have submitted"
  },
  {
    "API": "translate:StartTextTranslationJob",
    "EventSource": "translate",
    "EventName": "StartTextTranslationJob",
    "Description": "Starts an asynchronous batch translation job"
  },
  {
    "API": "translate:StopTextTranslationJob",
    "EventSource": "translate",
    "EventName": "StopTextTranslationJob",
    "Description": "Stops an asynchronous batch translation job that is in progress"
  },
  {
    "API": "translate:TagResource",
    "EventSource": "translate",
    "EventName": "TagResource",
    "Description": "Associates a specific tag with a resource"
  },
  {
    "API": "translate:TranslateDocument",
    "EventSource": "translate",
    "EventName": "TranslateDocument",
    "Description": "Translates the input document from the source language to the target language"
  },
  {
    "API": "translate:TranslateText",
    "EventSource": "translate",
    "EventName": "TranslateText",
    "Description": "Translates input text from the source language to the target language"
  },
  {
    "API": "translate:UntagResource",
    "EventSource": "translate",
    "EventName": "UntagResource",
    "Description": "Removes a specific tag associated with an Amazon Translate resource"
  },
  {
    "API": "translate:UpdateParallelData",
    "EventSource": "translate",
    "EventName": "UpdateParallelData",
    "Description": "Updates a previously created parallel data resource by importing a new input file from Amazon S3"
  },
  {
    "API": "trustedadvisor:BatchUpdateRecommendationResourceExclusion",
    "EventSource": "trustedadvisor",
    "EventName": "BatchUpdateRecommendationResourceExclusion",
    "Description": "Update one or more exclusion status for a list of recommendation resources"
  },
  {
    "API": "trustedadvisor:GeneratePresignedUrl",
    "EventSource": "trustedadvisor",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "trustedadvisor:GetOrganizationRecommendation",
    "EventSource": "trustedadvisor",
    "EventName": "GetOrganizationRecommendation",
    "Description": "Get a specific recommendation within an AWS Organizations organization"
  },
  {
    "API": "trustedadvisor:GetRecommendation",
    "EventSource": "trustedadvisor",
    "EventName": "GetRecommendation",
    "Description": "Get a specific Recommendation"
  },
  {
    "API": "trustedadvisor:ListChecks",
    "EventSource": "trustedadvisor",
    "EventName": "ListChecks",
    "Description": "List a filterable set of Checks"
  },
  {
    "API": "trustedadvisor:ListOrganizationRecommendationAccounts",
    "EventSource": "trustedadvisor",
    "EventName": "ListOrganizationRecommendationAccounts",
    "Description": "Lists the accounts that own the resources for an organization aggregate recommendation"
  },
  {
    "API": "trustedadvisor:ListOrganizationRecommendationResources",
    "EventSource": "trustedadvisor",
    "EventName": "ListOrganizationRecommendationResources",
    "Description": "List Resources of a Recommendation within an Organization"
  },
  {
    "API": "trustedadvisor:ListOrganizationRecommendations",
    "EventSource": "trustedadvisor",
    "EventName": "ListOrganizationRecommendations",
    "Description": "List a filterable set of Recommendations within an Organization"
  },
  {
    "API": "trustedadvisor:ListRecommendationResources",
    "EventSource": "trustedadvisor",
    "EventName": "ListRecommendationResources",
    "Description": "List Resources of a Recommendation"
  },
  {
    "API": "trustedadvisor:ListRecommendations",
    "EventSource": "trustedadvisor",
    "EventName": "ListRecommendations",
    "Description": "List a filterable set of Recommendations"
  },
  {
    "API": "trustedadvisor:UpdateOrganizationRecommendationLifecycle",
    "EventSource": "trustedadvisor",
    "EventName": "UpdateOrganizationRecommendationLifecycle",
    "Description": "Update the lifecycle of a Recommendation within an Organization"
  },
  {
    "API": "trustedadvisor:UpdateRecommendationLifecycle",
    "EventSource": "trustedadvisor",
    "EventName": "UpdateRecommendationLifecycle",
    "Description": "Update the lifecyle of a Recommendation"
  },
  {
    "API": "verifiedpermissions:BatchIsAuthorized",
    "EventSource": "verifiedpermissions",
    "EventName": "BatchIsAuthorized",
    "Description": "Makes a series of decisions about multiple authorization requests for one principal or resource"
  },
  {
    "API": "verifiedpermissions:BatchIsAuthorizedWithToken",
    "EventSource": "verifiedpermissions",
    "EventName": "BatchIsAuthorizedWithToken",
    "Description": "Makes a series of decisions about multiple authorization requests for one token"
  },
  {
    "API": "verifiedpermissions:CreateIdentitySource",
    "EventSource": "verifiedpermissions",
    "EventName": "CreateIdentitySource",
    "Description": "Adds an identity source to a policy store–an Amazon Cognito user pool or OpenID Connect (OIDC) identity provider (IdP)"
  },
  {
    "API": "verifiedpermissions:CreatePolicy",
    "EventSource": "verifiedpermissions",
    "EventName": "CreatePolicy",
    "Description": "Creates a Cedar policy and saves it in the specified policy store"
  },
  {
    "API": "verifiedpermissions:CreatePolicyStore",
    "EventSource": "verifiedpermissions",
    "EventName": "CreatePolicyStore",
    "Description": "Creates a policy store"
  },
  {
    "API": "verifiedpermissions:CreatePolicyTemplate",
    "EventSource": "verifiedpermissions",
    "EventName": "CreatePolicyTemplate",
    "Description": "Creates a policy template"
  },
  {
    "API": "verifiedpermissions:DeleteIdentitySource",
    "EventSource": "verifiedpermissions",
    "EventName": "DeleteIdentitySource",
    "Description": "Deletes an identity source that references an identity provider (IdP) such as Amazon Cognito"
  },
  {
    "API": "verifiedpermissions:DeletePolicy",
    "EventSource": "verifiedpermissions",
    "EventName": "DeletePolicy",
    "Description": "Deletes the specified policy from the policy store"
  },
  {
    "API": "verifiedpermissions:DeletePolicyStore",
    "EventSource": "verifiedpermissions",
    "EventName": "DeletePolicyStore",
    "Description": "Deletes the specified policy store"
  },
  {
    "API": "verifiedpermissions:DeletePolicyTemplate",
    "EventSource": "verifiedpermissions",
    "EventName": "DeletePolicyTemplate",
    "Description": "Deletes the specified policy template from the policy store"
  },
  {
    "API": "verifiedpermissions:GeneratePresignedUrl",
    "EventSource": "verifiedpermissions",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "verifiedpermissions:GetIdentitySource",
    "EventSource": "verifiedpermissions",
    "EventName": "GetIdentitySource",
    "Description": "Retrieves the details about the specified identity source"
  },
  {
    "API": "verifiedpermissions:GetPolicy",
    "EventSource": "verifiedpermissions",
    "EventName": "GetPolicy",
    "Description": "Retrieves information about the specified policy"
  },
  {
    "API": "verifiedpermissions:GetPolicyStore",
    "EventSource": "verifiedpermissions",
    "EventName": "GetPolicyStore",
    "Description": "Retrieves details about a policy store"
  },
  {
    "API": "verifiedpermissions:GetPolicyTemplate",
    "EventSource": "verifiedpermissions",
    "EventName": "GetPolicyTemplate",
    "Description": "Retrieve the details for the specified policy template in the specified policy store"
  },
  {
    "API": "verifiedpermissions:GetSchema",
    "EventSource": "verifiedpermissions",
    "EventName": "GetSchema",
    "Description": "Retrieve the details for the specified schema in the specified policy store"
  },
  {
    "API": "verifiedpermissions:IsAuthorized",
    "EventSource": "verifiedpermissions",
    "EventName": "IsAuthorized",
    "Description": "Makes an authorization decision about a service request described in the parameters"
  },
  {
    "API": "verifiedpermissions:IsAuthorizedWithToken",
    "EventSource": "verifiedpermissions",
    "EventName": "IsAuthorizedWithToken",
    "Description": "Makes an authorization decision about a service request described in the parameters"
  },
  {
    "API": "verifiedpermissions:ListIdentitySources",
    "EventSource": "verifiedpermissions",
    "EventName": "ListIdentitySources",
    "Description": "Returns a paginated list of all of the identity sources defined in the specified policy store"
  },
  {
    "API": "verifiedpermissions:ListPolicies",
    "EventSource": "verifiedpermissions",
    "EventName": "ListPolicies",
    "Description": "Returns a paginated list of all policies stored in the specified policy store"
  },
  {
    "API": "verifiedpermissions:ListPolicyStores",
    "EventSource": "verifiedpermissions",
    "EventName": "ListPolicyStores",
    "Description": "Returns a paginated list of all policy stores in the calling Amazon Web Services account"
  },
  {
    "API": "verifiedpermissions:ListPolicyTemplates",
    "EventSource": "verifiedpermissions",
    "EventName": "ListPolicyTemplates",
    "Description": "Returns a paginated list of all policy templates in the specified policy store"
  },
  {
    "API": "verifiedpermissions:PutSchema",
    "EventSource": "verifiedpermissions",
    "EventName": "PutSchema",
    "Description": "Creates or updates the policy schema in the specified policy store"
  },
  {
    "API": "verifiedpermissions:UpdateIdentitySource",
    "EventSource": "verifiedpermissions",
    "EventName": "UpdateIdentitySource",
    "Description": "Updates the specified identity source to use a new identity provider (IdP), or to change the mapping of identities from the IdP to a different principal entity type"
  },
  {
    "API": "verifiedpermissions:UpdatePolicy",
    "EventSource": "verifiedpermissions",
    "EventName": "UpdatePolicy",
    "Description": "Modifies a Cedar static policy in the specified policy store"
  },
  {
    "API": "verifiedpermissions:UpdatePolicyStore",
    "EventSource": "verifiedpermissions",
    "EventName": "UpdatePolicyStore",
    "Description": "Modifies the validation setting for a policy store"
  },
  {
    "API": "verifiedpermissions:UpdatePolicyTemplate",
    "EventSource": "verifiedpermissions",
    "EventName": "UpdatePolicyTemplate",
    "Description": "Updates the specified policy template"
  },
  {
    "API": "voice-id:AssociateFraudster",
    "EventSource": "voice-id",
    "EventName": "AssociateFraudster",
    "Description": "Associates the fraudsters with the watchlist specified in the same domain"
  },
  {
    "API": "voice-id:CreateDomain",
    "EventSource": "voice-id",
    "EventName": "CreateDomain",
    "Description": "Creates a domain that contains all Amazon Connect Voice ID data, such as speakers, fraudsters, customer audio, and voiceprints"
  },
  {
    "API": "voice-id:CreateWatchlist",
    "EventSource": "voice-id",
    "EventName": "CreateWatchlist",
    "Description": "Creates a watchlist that fraudsters can be a part of"
  },
  {
    "API": "voice-id:DeleteDomain",
    "EventSource": "voice-id",
    "EventName": "DeleteDomain",
    "Description": "Deletes the specified domain from Voice ID"
  },
  {
    "API": "voice-id:DeleteFraudster",
    "EventSource": "voice-id",
    "EventName": "DeleteFraudster",
    "Description": "Deletes the specified fraudster from Voice ID"
  },
  {
    "API": "voice-id:DeleteSpeaker",
    "EventSource": "voice-id",
    "EventName": "DeleteSpeaker",
    "Description": "Deletes the specified speaker from Voice ID"
  },
  {
    "API": "voice-id:DeleteWatchlist",
    "EventSource": "voice-id",
    "EventName": "DeleteWatchlist",
    "Description": "Deletes the specified watchlist from Voice ID"
  },
  {
    "API": "voice-id:DescribeDomain",
    "EventSource": "voice-id",
    "EventName": "DescribeDomain",
    "Description": "Describes the specified domain"
  },
  {
    "API": "voice-id:DescribeFraudster",
    "EventSource": "voice-id",
    "EventName": "DescribeFraudster",
    "Description": "Describes the specified fraudster"
  },
  {
    "API": "voice-id:DescribeFraudsterRegistrationJob",
    "EventSource": "voice-id",
    "EventName": "DescribeFraudsterRegistrationJob",
    "Description": "Describes the specified fraudster registration job"
  },
  {
    "API": "voice-id:DescribeSpeaker",
    "EventSource": "voice-id",
    "EventName": "DescribeSpeaker",
    "Description": "Describes the specified speaker"
  },
  {
    "API": "voice-id:DescribeSpeakerEnrollmentJob",
    "EventSource": "voice-id",
    "EventName": "DescribeSpeakerEnrollmentJob",
    "Description": "Describes the specified speaker enrollment job"
  },
  {
    "API": "voice-id:DescribeWatchlist",
    "EventSource": "voice-id",
    "EventName": "DescribeWatchlist",
    "Description": "Describes the specified watchlist"
  },
  {
    "API": "voice-id:DisassociateFraudster",
    "EventSource": "voice-id",
    "EventName": "DisassociateFraudster",
    "Description": "Disassociates the fraudsters from the watchlist specified"
  },
  {
    "API": "voice-id:EvaluateSession",
    "EventSource": "voice-id",
    "EventName": "EvaluateSession",
    "Description": "Evaluates a specified session based on audio data accumulated during a streaming Amazon Connect Voice ID call"
  },
  {
    "API": "voice-id:GeneratePresignedUrl",
    "EventSource": "voice-id",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "voice-id:ListDomains",
    "EventSource": "voice-id",
    "EventName": "ListDomains",
    "Description": "Lists all the domains in the Amazon Web Services account"
  },
  {
    "API": "voice-id:ListFraudsterRegistrationJobs",
    "EventSource": "voice-id",
    "EventName": "ListFraudsterRegistrationJobs",
    "Description": "Lists all the fraudster registration jobs in the domain with the given ``JobStatus``"
  },
  {
    "API": "voice-id:ListFraudsters",
    "EventSource": "voice-id",
    "EventName": "ListFraudsters",
    "Description": "Lists all fraudsters in a specified watchlist or domain"
  },
  {
    "API": "voice-id:ListSpeakerEnrollmentJobs",
    "EventSource": "voice-id",
    "EventName": "ListSpeakerEnrollmentJobs",
    "Description": "Lists all the speaker enrollment jobs in the domain with the specified ``JobStatus``"
  },
  {
    "API": "voice-id:ListSpeakers",
    "EventSource": "voice-id",
    "EventName": "ListSpeakers",
    "Description": "Lists all speakers in a specified domain"
  },
  {
    "API": "voice-id:ListTagsForResource",
    "EventSource": "voice-id",
    "EventName": "ListTagsForResource",
    "Description": "Lists all tags associated with a specified Voice ID resource"
  },
  {
    "API": "voice-id:ListWatchlists",
    "EventSource": "voice-id",
    "EventName": "ListWatchlists",
    "Description": "Lists all watchlists in a specified domain"
  },
  {
    "API": "voice-id:OptOutSpeaker",
    "EventSource": "voice-id",
    "EventName": "OptOutSpeaker",
    "Description": "Opts out a speaker from Voice ID"
  },
  {
    "API": "voice-id:StartFraudsterRegistrationJob",
    "EventSource": "voice-id",
    "EventName": "StartFraudsterRegistrationJob",
    "Description": "Starts a new batch fraudster registration job using provided details"
  },
  {
    "API": "voice-id:StartSpeakerEnrollmentJob",
    "EventSource": "voice-id",
    "EventName": "StartSpeakerEnrollmentJob",
    "Description": "Starts a new batch speaker enrollment job using specified details"
  },
  {
    "API": "voice-id:TagResource",
    "EventSource": "voice-id",
    "EventName": "TagResource",
    "Description": "Tags a Voice ID resource with the provided list of tags"
  },
  {
    "API": "voice-id:UntagResource",
    "EventSource": "voice-id",
    "EventName": "UntagResource",
    "Description": "Removes specified tags from a specified Amazon Connect Voice ID resource"
  },
  {
    "API": "voice-id:UpdateDomain",
    "EventSource": "voice-id",
    "EventName": "UpdateDomain",
    "Description": "Updates the specified domain"
  },
  {
    "API": "voice-id:UpdateWatchlist",
    "EventSource": "voice-id",
    "EventName": "UpdateWatchlist",
    "Description": "Updates the specified watchlist"
  },
  {
    "API": "vpc-lattice:BatchUpdateRule",
    "EventSource": "vpc-lattice",
    "EventName": "BatchUpdateRule",
    "Description": "Updates the listener rules in a batch"
  },
  {
    "API": "vpc-lattice:CreateAccessLogSubscription",
    "EventSource": "vpc-lattice",
    "EventName": "CreateAccessLogSubscription",
    "Description": "Enables access logs to be sent to Amazon CloudWatch, Amazon S3, and Amazon Kinesis Data Firehose"
  },
  {
    "API": "vpc-lattice:CreateListener",
    "EventSource": "vpc-lattice",
    "EventName": "CreateListener",
    "Description": "Creates a listener for a service"
  },
  {
    "API": "vpc-lattice:CreateRule",
    "EventSource": "vpc-lattice",
    "EventName": "CreateRule",
    "Description": "Creates a listener rule"
  },
  {
    "API": "vpc-lattice:CreateService",
    "EventSource": "vpc-lattice",
    "EventName": "CreateService",
    "Description": "Creates a service"
  },
  {
    "API": "vpc-lattice:CreateServiceNetwork",
    "EventSource": "vpc-lattice",
    "EventName": "CreateServiceNetwork",
    "Description": "Creates a service network"
  },
  {
    "API": "vpc-lattice:CreateServiceNetworkServiceAssociation",
    "EventSource": "vpc-lattice",
    "EventName": "CreateServiceNetworkServiceAssociation",
    "Description": "Associates a service with a service network"
  },
  {
    "API": "vpc-lattice:CreateServiceNetworkVpcAssociation",
    "EventSource": "vpc-lattice",
    "EventName": "CreateServiceNetworkVpcAssociation",
    "Description": "Associates a VPC with a service network"
  },
  {
    "API": "vpc-lattice:CreateTargetGroup",
    "EventSource": "vpc-lattice",
    "EventName": "CreateTargetGroup",
    "Description": "Creates a target group"
  },
  {
    "API": "vpc-lattice:DeleteAccessLogSubscription",
    "EventSource": "vpc-lattice",
    "EventName": "DeleteAccessLogSubscription",
    "Description": "Deletes the specified access log subscription"
  },
  {
    "API": "vpc-lattice:DeleteAuthPolicy",
    "EventSource": "vpc-lattice",
    "EventName": "DeleteAuthPolicy",
    "Description": "Deletes the specified auth policy"
  },
  {
    "API": "vpc-lattice:DeleteListener",
    "EventSource": "vpc-lattice",
    "EventName": "DeleteListener",
    "Description": "Deletes the specified listener"
  },
  {
    "API": "vpc-lattice:DeleteResourcePolicy",
    "EventSource": "vpc-lattice",
    "EventName": "DeleteResourcePolicy",
    "Description": "Deletes the specified resource policy"
  },
  {
    "API": "vpc-lattice:DeleteRule",
    "EventSource": "vpc-lattice",
    "EventName": "DeleteRule",
    "Description": "Deletes a listener rule"
  },
  {
    "API": "vpc-lattice:DeleteService",
    "EventSource": "vpc-lattice",
    "EventName": "DeleteService",
    "Description": "Deletes a service"
  },
  {
    "API": "vpc-lattice:DeleteServiceNetwork",
    "EventSource": "vpc-lattice",
    "EventName": "DeleteServiceNetwork",
    "Description": "Deletes a service network"
  },
  {
    "API": "vpc-lattice:DeleteServiceNetworkServiceAssociation",
    "EventSource": "vpc-lattice",
    "EventName": "DeleteServiceNetworkServiceAssociation",
    "Description": "Deletes the association between a specified service and the specific service network"
  },
  {
    "API": "vpc-lattice:DeleteServiceNetworkVpcAssociation",
    "EventSource": "vpc-lattice",
    "EventName": "DeleteServiceNetworkVpcAssociation",
    "Description": "Disassociates the VPC from the service network"
  },
  {
    "API": "vpc-lattice:DeleteTargetGroup",
    "EventSource": "vpc-lattice",
    "EventName": "DeleteTargetGroup",
    "Description": "Deletes a target group"
  },
  {
    "API": "vpc-lattice:DeregisterTargets",
    "EventSource": "vpc-lattice",
    "EventName": "DeregisterTargets",
    "Description": "Deregisters the specified targets from the specified target group"
  },
  {
    "API": "vpc-lattice:GeneratePresignedUrl",
    "EventSource": "vpc-lattice",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "vpc-lattice:GetAccessLogSubscription",
    "EventSource": "vpc-lattice",
    "EventName": "GetAccessLogSubscription",
    "Description": "Retrieves information about the specified access log subscription"
  },
  {
    "API": "vpc-lattice:GetAuthPolicy",
    "EventSource": "vpc-lattice",
    "EventName": "GetAuthPolicy",
    "Description": "Retrieves information about the auth policy for the specified service or service network"
  },
  {
    "API": "vpc-lattice:GetListener",
    "EventSource": "vpc-lattice",
    "EventName": "GetListener",
    "Description": "Retrieves information about the specified listener for the specified service"
  },
  {
    "API": "vpc-lattice:GetResourcePolicy",
    "EventSource": "vpc-lattice",
    "EventName": "GetResourcePolicy",
    "Description": "Retrieves information about the resource policy"
  },
  {
    "API": "vpc-lattice:GetRule",
    "EventSource": "vpc-lattice",
    "EventName": "GetRule",
    "Description": "Retrieves information about listener rules"
  },
  {
    "API": "vpc-lattice:GetService",
    "EventSource": "vpc-lattice",
    "EventName": "GetService",
    "Description": "Retrieves information about the specified service"
  },
  {
    "API": "vpc-lattice:GetServiceNetwork",
    "EventSource": "vpc-lattice",
    "EventName": "GetServiceNetwork",
    "Description": "Retrieves information about the specified service network"
  },
  {
    "API": "vpc-lattice:GetServiceNetworkServiceAssociation",
    "EventSource": "vpc-lattice",
    "EventName": "GetServiceNetworkServiceAssociation",
    "Description": "Retrieves information about the specified association between a service network and a service"
  },
  {
    "API": "vpc-lattice:GetServiceNetworkVpcAssociation",
    "EventSource": "vpc-lattice",
    "EventName": "GetServiceNetworkVpcAssociation",
    "Description": "Retrieves information about the association between a service network and a VPC"
  },
  {
    "API": "vpc-lattice:GetTargetGroup",
    "EventSource": "vpc-lattice",
    "EventName": "GetTargetGroup",
    "Description": "Retrieves information about the specified target group"
  },
  {
    "API": "vpc-lattice:ListAccessLogSubscriptions",
    "EventSource": "vpc-lattice",
    "EventName": "ListAccessLogSubscriptions",
    "Description": "Lists all access log subscriptions for the specified service network or service"
  },
  {
    "API": "vpc-lattice:ListListeners",
    "EventSource": "vpc-lattice",
    "EventName": "ListListeners",
    "Description": "Lists the listeners for the specified service"
  },
  {
    "API": "vpc-lattice:ListRules",
    "EventSource": "vpc-lattice",
    "EventName": "ListRules",
    "Description": "Lists the rules for the listener"
  },
  {
    "API": "vpc-lattice:ListServiceNetworkServiceAssociations",
    "EventSource": "vpc-lattice",
    "EventName": "ListServiceNetworkServiceAssociations",
    "Description": "Lists the associations between the service network and the service"
  },
  {
    "API": "vpc-lattice:ListServiceNetworkVpcAssociations",
    "EventSource": "vpc-lattice",
    "EventName": "ListServiceNetworkVpcAssociations",
    "Description": "Lists the service network and VPC associations"
  },
  {
    "API": "vpc-lattice:ListServiceNetworks",
    "EventSource": "vpc-lattice",
    "EventName": "ListServiceNetworks",
    "Description": "Lists the service networks owned by the caller account or shared with the caller account"
  },
  {
    "API": "vpc-lattice:ListServices",
    "EventSource": "vpc-lattice",
    "EventName": "ListServices",
    "Description": "Lists the services owned by the caller account or shared with the caller account"
  },
  {
    "API": "vpc-lattice:ListTagsForResource",
    "EventSource": "vpc-lattice",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags for the specified resource"
  },
  {
    "API": "vpc-lattice:ListTargetGroups",
    "EventSource": "vpc-lattice",
    "EventName": "ListTargetGroups",
    "Description": "Lists your target groups"
  },
  {
    "API": "vpc-lattice:ListTargets",
    "EventSource": "vpc-lattice",
    "EventName": "ListTargets",
    "Description": "Lists the targets for the target group"
  },
  {
    "API": "vpc-lattice:PutAuthPolicy",
    "EventSource": "vpc-lattice",
    "EventName": "PutAuthPolicy",
    "Description": "Creates or updates the auth policy"
  },
  {
    "API": "vpc-lattice:PutResourcePolicy",
    "EventSource": "vpc-lattice",
    "EventName": "PutResourcePolicy",
    "Description": "Attaches a resource-based permission policy to a service or service network"
  },
  {
    "API": "vpc-lattice:RegisterTargets",
    "EventSource": "vpc-lattice",
    "EventName": "RegisterTargets",
    "Description": "Registers the targets with the target group"
  },
  {
    "API": "vpc-lattice:TagResource",
    "EventSource": "vpc-lattice",
    "EventName": "TagResource",
    "Description": "Adds the specified tags to the specified resource"
  },
  {
    "API": "vpc-lattice:UntagResource",
    "EventSource": "vpc-lattice",
    "EventName": "UntagResource",
    "Description": "Removes the specified tags from the specified resource"
  },
  {
    "API": "vpc-lattice:UpdateAccessLogSubscription",
    "EventSource": "vpc-lattice",
    "EventName": "UpdateAccessLogSubscription",
    "Description": "Updates the specified access log subscription"
  },
  {
    "API": "vpc-lattice:UpdateListener",
    "EventSource": "vpc-lattice",
    "EventName": "UpdateListener",
    "Description": "Updates the specified listener for the specified service"
  },
  {
    "API": "vpc-lattice:UpdateRule",
    "EventSource": "vpc-lattice",
    "EventName": "UpdateRule",
    "Description": "Updates a rule for the listener"
  },
  {
    "API": "vpc-lattice:UpdateService",
    "EventSource": "vpc-lattice",
    "EventName": "UpdateService",
    "Description": "Updates the specified service"
  },
  {
    "API": "vpc-lattice:UpdateServiceNetwork",
    "EventSource": "vpc-lattice",
    "EventName": "UpdateServiceNetwork",
    "Description": "Updates the specified service network"
  },
  {
    "API": "vpc-lattice:UpdateServiceNetworkVpcAssociation",
    "EventSource": "vpc-lattice",
    "EventName": "UpdateServiceNetworkVpcAssociation",
    "Description": "Updates the service network and VPC association"
  },
  {
    "API": "vpc-lattice:UpdateTargetGroup",
    "EventSource": "vpc-lattice",
    "EventName": "UpdateTargetGroup",
    "Description": "Updates the specified target group"
  },
  {
    "API": "waf:CreateByteMatchSet",
    "EventSource": "waf",
    "EventName": "CreateByteMatchSet",
    "Description": ""
  },
  {
    "API": "waf:CreateGeoMatchSet",
    "EventSource": "waf",
    "EventName": "CreateGeoMatchSet",
    "Description": ""
  },
  {
    "API": "waf:CreateIpSet",
    "EventSource": "waf",
    "EventName": "CreateIpSet",
    "Description": ""
  },
  {
    "API": "waf:CreateRateBasedRule",
    "EventSource": "waf",
    "EventName": "CreateRateBasedRule",
    "Description": ""
  },
  {
    "API": "waf:CreateRegexMatchSet",
    "EventSource": "waf",
    "EventName": "CreateRegexMatchSet",
    "Description": ""
  },
  {
    "API": "waf:CreateRegexPatternSet",
    "EventSource": "waf",
    "EventName": "CreateRegexPatternSet",
    "Description": ""
  },
  {
    "API": "waf:CreateRule",
    "EventSource": "waf",
    "EventName": "CreateRule",
    "Description": ""
  },
  {
    "API": "waf:CreateRuleGroup",
    "EventSource": "waf",
    "EventName": "CreateRuleGroup",
    "Description": ""
  },
  {
    "API": "waf:CreateSizeConstraintSet",
    "EventSource": "waf",
    "EventName": "CreateSizeConstraintSet",
    "Description": ""
  },
  {
    "API": "waf:CreateSqlInjectionMatchSet",
    "EventSource": "waf",
    "EventName": "CreateSqlInjectionMatchSet",
    "Description": ""
  },
  {
    "API": "waf:CreateWebAcl",
    "EventSource": "waf",
    "EventName": "CreateWebAcl",
    "Description": ""
  },
  {
    "API": "waf:CreateWebAclMigrationStack",
    "EventSource": "waf",
    "EventName": "CreateWebAclMigrationStack",
    "Description": "Creates an AWS CloudFormation WAFV2 template for the specified web ACL in the specified Amazon S3 bucket"
  },
  {
    "API": "waf:CreateXssMatchSet",
    "EventSource": "waf",
    "EventName": "CreateXssMatchSet",
    "Description": ""
  },
  {
    "API": "waf:DeleteByteMatchSet",
    "EventSource": "waf",
    "EventName": "DeleteByteMatchSet",
    "Description": ""
  },
  {
    "API": "waf:DeleteGeoMatchSet",
    "EventSource": "waf",
    "EventName": "DeleteGeoMatchSet",
    "Description": ""
  },
  {
    "API": "waf:DeleteIpSet",
    "EventSource": "waf",
    "EventName": "DeleteIpSet",
    "Description": ""
  },
  {
    "API": "waf:DeleteLoggingConfiguration",
    "EventSource": "waf",
    "EventName": "DeleteLoggingConfiguration",
    "Description": ""
  },
  {
    "API": "waf:DeletePermissionPolicy",
    "EventSource": "waf",
    "EventName": "DeletePermissionPolicy",
    "Description": ""
  },
  {
    "API": "waf:DeleteRateBasedRule",
    "EventSource": "waf",
    "EventName": "DeleteRateBasedRule",
    "Description": ""
  },
  {
    "API": "waf:DeleteRegexMatchSet",
    "EventSource": "waf",
    "EventName": "DeleteRegexMatchSet",
    "Description": ""
  },
  {
    "API": "waf:DeleteRegexPatternSet",
    "EventSource": "waf",
    "EventName": "DeleteRegexPatternSet",
    "Description": ""
  },
  {
    "API": "waf:DeleteRule",
    "EventSource": "waf",
    "EventName": "DeleteRule",
    "Description": ""
  },
  {
    "API": "waf:DeleteRuleGroup",
    "EventSource": "waf",
    "EventName": "DeleteRuleGroup",
    "Description": ""
  },
  {
    "API": "waf:DeleteSizeConstraintSet",
    "EventSource": "waf",
    "EventName": "DeleteSizeConstraintSet",
    "Description": ""
  },
  {
    "API": "waf:DeleteSqlInjectionMatchSet",
    "EventSource": "waf",
    "EventName": "DeleteSqlInjectionMatchSet",
    "Description": ""
  },
  {
    "API": "waf:DeleteWebAcl",
    "EventSource": "waf",
    "EventName": "DeleteWebAcl",
    "Description": ""
  },
  {
    "API": "waf:DeleteXssMatchSet",
    "EventSource": "waf",
    "EventName": "DeleteXssMatchSet",
    "Description": ""
  },
  {
    "API": "waf:GeneratePresignedUrl",
    "EventSource": "waf",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "waf:GetByteMatchSet",
    "EventSource": "waf",
    "EventName": "GetByteMatchSet",
    "Description": ""
  },
  {
    "API": "waf:GetChangeToken",
    "EventSource": "waf",
    "EventName": "GetChangeToken",
    "Description": ""
  },
  {
    "API": "waf:GetChangeTokenStatus",
    "EventSource": "waf",
    "EventName": "GetChangeTokenStatus",
    "Description": ""
  },
  {
    "API": "waf:GetGeoMatchSet",
    "EventSource": "waf",
    "EventName": "GetGeoMatchSet",
    "Description": ""
  },
  {
    "API": "waf:GetIpSet",
    "EventSource": "waf",
    "EventName": "GetIpSet",
    "Description": ""
  },
  {
    "API": "waf:GetLoggingConfiguration",
    "EventSource": "waf",
    "EventName": "GetLoggingConfiguration",
    "Description": ""
  },
  {
    "API": "waf:GetPermissionPolicy",
    "EventSource": "waf",
    "EventName": "GetPermissionPolicy",
    "Description": ""
  },
  {
    "API": "waf:GetRateBasedRule",
    "EventSource": "waf",
    "EventName": "GetRateBasedRule",
    "Description": ""
  },
  {
    "API": "waf:GetRateBasedRuleManagedKeys",
    "EventSource": "waf",
    "EventName": "GetRateBasedRuleManagedKeys",
    "Description": ""
  },
  {
    "API": "waf:GetRegexMatchSet",
    "EventSource": "waf",
    "EventName": "GetRegexMatchSet",
    "Description": ""
  },
  {
    "API": "waf:GetRegexPatternSet",
    "EventSource": "waf",
    "EventName": "GetRegexPatternSet",
    "Description": ""
  },
  {
    "API": "waf:GetRule",
    "EventSource": "waf",
    "EventName": "GetRule",
    "Description": ""
  },
  {
    "API": "waf:GetRuleGroup",
    "EventSource": "waf",
    "EventName": "GetRuleGroup",
    "Description": ""
  },
  {
    "API": "waf:GetSampledRequests",
    "EventSource": "waf",
    "EventName": "GetSampledRequests",
    "Description": ""
  },
  {
    "API": "waf:GetSizeConstraintSet",
    "EventSource": "waf",
    "EventName": "GetSizeConstraintSet",
    "Description": ""
  },
  {
    "API": "waf:GetSqlInjectionMatchSet",
    "EventSource": "waf",
    "EventName": "GetSqlInjectionMatchSet",
    "Description": ""
  },
  {
    "API": "waf:GetWebAcl",
    "EventSource": "waf",
    "EventName": "GetWebAcl",
    "Description": ""
  },
  {
    "API": "waf:GetXssMatchSet",
    "EventSource": "waf",
    "EventName": "GetXssMatchSet",
    "Description": ""
  },
  {
    "API": "waf:ListActivatedRulesInRuleGroup",
    "EventSource": "waf",
    "EventName": "ListActivatedRulesInRuleGroup",
    "Description": ""
  },
  {
    "API": "waf:ListByteMatchSets",
    "EventSource": "waf",
    "EventName": "ListByteMatchSets",
    "Description": ""
  },
  {
    "API": "waf:ListGeoMatchSets",
    "EventSource": "waf",
    "EventName": "ListGeoMatchSets",
    "Description": ""
  },
  {
    "API": "waf:ListIpSets",
    "EventSource": "waf",
    "EventName": "ListIpSets",
    "Description": ""
  },
  {
    "API": "waf:ListLoggingConfigurations",
    "EventSource": "waf",
    "EventName": "ListLoggingConfigurations",
    "Description": ""
  },
  {
    "API": "waf:ListRateBasedRules",
    "EventSource": "waf",
    "EventName": "ListRateBasedRules",
    "Description": ""
  },
  {
    "API": "waf:ListRegexMatchSets",
    "EventSource": "waf",
    "EventName": "ListRegexMatchSets",
    "Description": ""
  },
  {
    "API": "waf:ListRegexPatternSets",
    "EventSource": "waf",
    "EventName": "ListRegexPatternSets",
    "Description": ""
  },
  {
    "API": "waf:ListRuleGroups",
    "EventSource": "waf",
    "EventName": "ListRuleGroups",
    "Description": ""
  },
  {
    "API": "waf:ListRules",
    "EventSource": "waf",
    "EventName": "ListRules",
    "Description": ""
  },
  {
    "API": "waf:ListSizeConstraintSets",
    "EventSource": "waf",
    "EventName": "ListSizeConstraintSets",
    "Description": ""
  },
  {
    "API": "waf:ListSqlInjectionMatchSets",
    "EventSource": "waf",
    "EventName": "ListSqlInjectionMatchSets",
    "Description": ""
  },
  {
    "API": "waf:ListSubscribedRuleGroups",
    "EventSource": "waf",
    "EventName": "ListSubscribedRuleGroups",
    "Description": ""
  },
  {
    "API": "waf:ListTagsForResource",
    "EventSource": "waf",
    "EventName": "ListTagsForResource",
    "Description": ""
  },
  {
    "API": "waf:ListWebAcls",
    "EventSource": "waf",
    "EventName": "ListWebAcls",
    "Description": ""
  },
  {
    "API": "waf:ListXssMatchSets",
    "EventSource": "waf",
    "EventName": "ListXssMatchSets",
    "Description": ""
  },
  {
    "API": "waf:PutLoggingConfiguration",
    "EventSource": "waf",
    "EventName": "PutLoggingConfiguration",
    "Description": ""
  },
  {
    "API": "waf:PutPermissionPolicy",
    "EventSource": "waf",
    "EventName": "PutPermissionPolicy",
    "Description": ""
  },
  {
    "API": "waf:TagResource",
    "EventSource": "waf",
    "EventName": "TagResource",
    "Description": ""
  },
  {
    "API": "waf:UntagResource",
    "EventSource": "waf",
    "EventName": "UntagResource",
    "Description": ""
  },
  {
    "API": "waf:UpdateByteMatchSet",
    "EventSource": "waf",
    "EventName": "UpdateByteMatchSet",
    "Description": ""
  },
  {
    "API": "waf:UpdateGeoMatchSet",
    "EventSource": "waf",
    "EventName": "UpdateGeoMatchSet",
    "Description": ""
  },
  {
    "API": "waf:UpdateIpSet",
    "EventSource": "waf",
    "EventName": "UpdateIpSet",
    "Description": ""
  },
  {
    "API": "waf:UpdateRateBasedRule",
    "EventSource": "waf",
    "EventName": "UpdateRateBasedRule",
    "Description": ""
  },
  {
    "API": "waf:UpdateRegexMatchSet",
    "EventSource": "waf",
    "EventName": "UpdateRegexMatchSet",
    "Description": ""
  },
  {
    "API": "waf:UpdateRegexPatternSet",
    "EventSource": "waf",
    "EventName": "UpdateRegexPatternSet",
    "Description": ""
  },
  {
    "API": "waf:UpdateRule",
    "EventSource": "waf",
    "EventName": "UpdateRule",
    "Description": ""
  },
  {
    "API": "waf:UpdateRuleGroup",
    "EventSource": "waf",
    "EventName": "UpdateRuleGroup",
    "Description": ""
  },
  {
    "API": "waf:UpdateSizeConstraintSet",
    "EventSource": "waf",
    "EventName": "UpdateSizeConstraintSet",
    "Description": ""
  },
  {
    "API": "waf:UpdateSqlInjectionMatchSet",
    "EventSource": "waf",
    "EventName": "UpdateSqlInjectionMatchSet",
    "Description": ""
  },
  {
    "API": "waf:UpdateWebAcl",
    "EventSource": "waf",
    "EventName": "UpdateWebAcl",
    "Description": ""
  },
  {
    "API": "waf:UpdateXssMatchSet",
    "EventSource": "waf",
    "EventName": "UpdateXssMatchSet",
    "Description": ""
  },
  {
    "API": "waf-regional:AssociateWebAcl",
    "EventSource": "waf-regional",
    "EventName": "AssociateWebAcl",
    "Description": ""
  },
  {
    "API": "waf-regional:CreateByteMatchSet",
    "EventSource": "waf-regional",
    "EventName": "CreateByteMatchSet",
    "Description": ""
  },
  {
    "API": "waf-regional:CreateGeoMatchSet",
    "EventSource": "waf-regional",
    "EventName": "CreateGeoMatchSet",
    "Description": ""
  },
  {
    "API": "waf-regional:CreateIpSet",
    "EventSource": "waf-regional",
    "EventName": "CreateIpSet",
    "Description": ""
  },
  {
    "API": "waf-regional:CreateRateBasedRule",
    "EventSource": "waf-regional",
    "EventName": "CreateRateBasedRule",
    "Description": ""
  },
  {
    "API": "waf-regional:CreateRegexMatchSet",
    "EventSource": "waf-regional",
    "EventName": "CreateRegexMatchSet",
    "Description": ""
  },
  {
    "API": "waf-regional:CreateRegexPatternSet",
    "EventSource": "waf-regional",
    "EventName": "CreateRegexPatternSet",
    "Description": ""
  },
  {
    "API": "waf-regional:CreateRule",
    "EventSource": "waf-regional",
    "EventName": "CreateRule",
    "Description": ""
  },
  {
    "API": "waf-regional:CreateRuleGroup",
    "EventSource": "waf-regional",
    "EventName": "CreateRuleGroup",
    "Description": ""
  },
  {
    "API": "waf-regional:CreateSizeConstraintSet",
    "EventSource": "waf-regional",
    "EventName": "CreateSizeConstraintSet",
    "Description": ""
  },
  {
    "API": "waf-regional:CreateSqlInjectionMatchSet",
    "EventSource": "waf-regional",
    "EventName": "CreateSqlInjectionMatchSet",
    "Description": ""
  },
  {
    "API": "waf-regional:CreateWebAcl",
    "EventSource": "waf-regional",
    "EventName": "CreateWebAcl",
    "Description": ""
  },
  {
    "API": "waf-regional:CreateWebAclMigrationStack",
    "EventSource": "waf-regional",
    "EventName": "CreateWebAclMigrationStack",
    "Description": "Creates an AWS CloudFormation WAFV2 template for the specified web ACL in the specified Amazon S3 bucket"
  },
  {
    "API": "waf-regional:CreateXssMatchSet",
    "EventSource": "waf-regional",
    "EventName": "CreateXssMatchSet",
    "Description": ""
  },
  {
    "API": "waf-regional:DeleteByteMatchSet",
    "EventSource": "waf-regional",
    "EventName": "DeleteByteMatchSet",
    "Description": ""
  },
  {
    "API": "waf-regional:DeleteGeoMatchSet",
    "EventSource": "waf-regional",
    "EventName": "DeleteGeoMatchSet",
    "Description": ""
  },
  {
    "API": "waf-regional:DeleteIpSet",
    "EventSource": "waf-regional",
    "EventName": "DeleteIpSet",
    "Description": ""
  },
  {
    "API": "waf-regional:DeleteLoggingConfiguration",
    "EventSource": "waf-regional",
    "EventName": "DeleteLoggingConfiguration",
    "Description": ""
  },
  {
    "API": "waf-regional:DeletePermissionPolicy",
    "EventSource": "waf-regional",
    "EventName": "DeletePermissionPolicy",
    "Description": ""
  },
  {
    "API": "waf-regional:DeleteRateBasedRule",
    "EventSource": "waf-regional",
    "EventName": "DeleteRateBasedRule",
    "Description": ""
  },
  {
    "API": "waf-regional:DeleteRegexMatchSet",
    "EventSource": "waf-regional",
    "EventName": "DeleteRegexMatchSet",
    "Description": ""
  },
  {
    "API": "waf-regional:DeleteRegexPatternSet",
    "EventSource": "waf-regional",
    "EventName": "DeleteRegexPatternSet",
    "Description": ""
  },
  {
    "API": "waf-regional:DeleteRule",
    "EventSource": "waf-regional",
    "EventName": "DeleteRule",
    "Description": ""
  },
  {
    "API": "waf-regional:DeleteRuleGroup",
    "EventSource": "waf-regional",
    "EventName": "DeleteRuleGroup",
    "Description": ""
  },
  {
    "API": "waf-regional:DeleteSizeConstraintSet",
    "EventSource": "waf-regional",
    "EventName": "DeleteSizeConstraintSet",
    "Description": ""
  },
  {
    "API": "waf-regional:DeleteSqlInjectionMatchSet",
    "EventSource": "waf-regional",
    "EventName": "DeleteSqlInjectionMatchSet",
    "Description": ""
  },
  {
    "API": "waf-regional:DeleteWebAcl",
    "EventSource": "waf-regional",
    "EventName": "DeleteWebAcl",
    "Description": ""
  },
  {
    "API": "waf-regional:DeleteXssMatchSet",
    "EventSource": "waf-regional",
    "EventName": "DeleteXssMatchSet",
    "Description": ""
  },
  {
    "API": "waf-regional:DisassociateWebAcl",
    "EventSource": "waf-regional",
    "EventName": "DisassociateWebAcl",
    "Description": ""
  },
  {
    "API": "waf-regional:GeneratePresignedUrl",
    "EventSource": "waf-regional",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "waf-regional:GetByteMatchSet",
    "EventSource": "waf-regional",
    "EventName": "GetByteMatchSet",
    "Description": ""
  },
  {
    "API": "waf-regional:GetChangeToken",
    "EventSource": "waf-regional",
    "EventName": "GetChangeToken",
    "Description": ""
  },
  {
    "API": "waf-regional:GetChangeTokenStatus",
    "EventSource": "waf-regional",
    "EventName": "GetChangeTokenStatus",
    "Description": ""
  },
  {
    "API": "waf-regional:GetGeoMatchSet",
    "EventSource": "waf-regional",
    "EventName": "GetGeoMatchSet",
    "Description": ""
  },
  {
    "API": "waf-regional:GetIpSet",
    "EventSource": "waf-regional",
    "EventName": "GetIpSet",
    "Description": ""
  },
  {
    "API": "waf-regional:GetLoggingConfiguration",
    "EventSource": "waf-regional",
    "EventName": "GetLoggingConfiguration",
    "Description": ""
  },
  {
    "API": "waf-regional:GetPermissionPolicy",
    "EventSource": "waf-regional",
    "EventName": "GetPermissionPolicy",
    "Description": ""
  },
  {
    "API": "waf-regional:GetRateBasedRule",
    "EventSource": "waf-regional",
    "EventName": "GetRateBasedRule",
    "Description": ""
  },
  {
    "API": "waf-regional:GetRateBasedRuleManagedKeys",
    "EventSource": "waf-regional",
    "EventName": "GetRateBasedRuleManagedKeys",
    "Description": ""
  },
  {
    "API": "waf-regional:GetRegexMatchSet",
    "EventSource": "waf-regional",
    "EventName": "GetRegexMatchSet",
    "Description": ""
  },
  {
    "API": "waf-regional:GetRegexPatternSet",
    "EventSource": "waf-regional",
    "EventName": "GetRegexPatternSet",
    "Description": ""
  },
  {
    "API": "waf-regional:GetRule",
    "EventSource": "waf-regional",
    "EventName": "GetRule",
    "Description": ""
  },
  {
    "API": "waf-regional:GetRuleGroup",
    "EventSource": "waf-regional",
    "EventName": "GetRuleGroup",
    "Description": ""
  },
  {
    "API": "waf-regional:GetSampledRequests",
    "EventSource": "waf-regional",
    "EventName": "GetSampledRequests",
    "Description": ""
  },
  {
    "API": "waf-regional:GetSizeConstraintSet",
    "EventSource": "waf-regional",
    "EventName": "GetSizeConstraintSet",
    "Description": ""
  },
  {
    "API": "waf-regional:GetSqlInjectionMatchSet",
    "EventSource": "waf-regional",
    "EventName": "GetSqlInjectionMatchSet",
    "Description": ""
  },
  {
    "API": "waf-regional:GetWebAcl",
    "EventSource": "waf-regional",
    "EventName": "GetWebAcl",
    "Description": ""
  },
  {
    "API": "waf-regional:GetWebAclForResource",
    "EventSource": "waf-regional",
    "EventName": "GetWebAclForResource",
    "Description": ""
  },
  {
    "API": "waf-regional:GetXssMatchSet",
    "EventSource": "waf-regional",
    "EventName": "GetXssMatchSet",
    "Description": ""
  },
  {
    "API": "waf-regional:ListActivatedRulesInRuleGroup",
    "EventSource": "waf-regional",
    "EventName": "ListActivatedRulesInRuleGroup",
    "Description": ""
  },
  {
    "API": "waf-regional:ListByteMatchSets",
    "EventSource": "waf-regional",
    "EventName": "ListByteMatchSets",
    "Description": ""
  },
  {
    "API": "waf-regional:ListGeoMatchSets",
    "EventSource": "waf-regional",
    "EventName": "ListGeoMatchSets",
    "Description": ""
  },
  {
    "API": "waf-regional:ListIpSets",
    "EventSource": "waf-regional",
    "EventName": "ListIpSets",
    "Description": ""
  },
  {
    "API": "waf-regional:ListLoggingConfigurations",
    "EventSource": "waf-regional",
    "EventName": "ListLoggingConfigurations",
    "Description": ""
  },
  {
    "API": "waf-regional:ListRateBasedRules",
    "EventSource": "waf-regional",
    "EventName": "ListRateBasedRules",
    "Description": ""
  },
  {
    "API": "waf-regional:ListRegexMatchSets",
    "EventSource": "waf-regional",
    "EventName": "ListRegexMatchSets",
    "Description": ""
  },
  {
    "API": "waf-regional:ListRegexPatternSets",
    "EventSource": "waf-regional",
    "EventName": "ListRegexPatternSets",
    "Description": ""
  },
  {
    "API": "waf-regional:ListResourcesForWebAcl",
    "EventSource": "waf-regional",
    "EventName": "ListResourcesForWebAcl",
    "Description": ""
  },
  {
    "API": "waf-regional:ListRuleGroups",
    "EventSource": "waf-regional",
    "EventName": "ListRuleGroups",
    "Description": ""
  },
  {
    "API": "waf-regional:ListRules",
    "EventSource": "waf-regional",
    "EventName": "ListRules",
    "Description": ""
  },
  {
    "API": "waf-regional:ListSizeConstraintSets",
    "EventSource": "waf-regional",
    "EventName": "ListSizeConstraintSets",
    "Description": ""
  },
  {
    "API": "waf-regional:ListSqlInjectionMatchSets",
    "EventSource": "waf-regional",
    "EventName": "ListSqlInjectionMatchSets",
    "Description": ""
  },
  {
    "API": "waf-regional:ListSubscribedRuleGroups",
    "EventSource": "waf-regional",
    "EventName": "ListSubscribedRuleGroups",
    "Description": ""
  },
  {
    "API": "waf-regional:ListTagsForResource",
    "EventSource": "waf-regional",
    "EventName": "ListTagsForResource",
    "Description": ""
  },
  {
    "API": "waf-regional:ListWebAcls",
    "EventSource": "waf-regional",
    "EventName": "ListWebAcls",
    "Description": ""
  },
  {
    "API": "waf-regional:ListXssMatchSets",
    "EventSource": "waf-regional",
    "EventName": "ListXssMatchSets",
    "Description": ""
  },
  {
    "API": "waf-regional:PutLoggingConfiguration",
    "EventSource": "waf-regional",
    "EventName": "PutLoggingConfiguration",
    "Description": ""
  },
  {
    "API": "waf-regional:PutPermissionPolicy",
    "EventSource": "waf-regional",
    "EventName": "PutPermissionPolicy",
    "Description": ""
  },
  {
    "API": "waf-regional:TagResource",
    "EventSource": "waf-regional",
    "EventName": "TagResource",
    "Description": ""
  },
  {
    "API": "waf-regional:UntagResource",
    "EventSource": "waf-regional",
    "EventName": "UntagResource",
    "Description": ""
  },
  {
    "API": "waf-regional:UpdateByteMatchSet",
    "EventSource": "waf-regional",
    "EventName": "UpdateByteMatchSet",
    "Description": ""
  },
  {
    "API": "waf-regional:UpdateGeoMatchSet",
    "EventSource": "waf-regional",
    "EventName": "UpdateGeoMatchSet",
    "Description": ""
  },
  {
    "API": "waf-regional:UpdateIpSet",
    "EventSource": "waf-regional",
    "EventName": "UpdateIpSet",
    "Description": ""
  },
  {
    "API": "waf-regional:UpdateRateBasedRule",
    "EventSource": "waf-regional",
    "EventName": "UpdateRateBasedRule",
    "Description": ""
  },
  {
    "API": "waf-regional:UpdateRegexMatchSet",
    "EventSource": "waf-regional",
    "EventName": "UpdateRegexMatchSet",
    "Description": ""
  },
  {
    "API": "waf-regional:UpdateRegexPatternSet",
    "EventSource": "waf-regional",
    "EventName": "UpdateRegexPatternSet",
    "Description": ""
  },
  {
    "API": "waf-regional:UpdateRule",
    "EventSource": "waf-regional",
    "EventName": "UpdateRule",
    "Description": ""
  },
  {
    "API": "waf-regional:UpdateRuleGroup",
    "EventSource": "waf-regional",
    "EventName": "UpdateRuleGroup",
    "Description": ""
  },
  {
    "API": "waf-regional:UpdateSizeConstraintSet",
    "EventSource": "waf-regional",
    "EventName": "UpdateSizeConstraintSet",
    "Description": ""
  },
  {
    "API": "waf-regional:UpdateSqlInjectionMatchSet",
    "EventSource": "waf-regional",
    "EventName": "UpdateSqlInjectionMatchSet",
    "Description": ""
  },
  {
    "API": "waf-regional:UpdateWebAcl",
    "EventSource": "waf-regional",
    "EventName": "UpdateWebAcl",
    "Description": ""
  },
  {
    "API": "waf-regional:UpdateXssMatchSet",
    "EventSource": "waf-regional",
    "EventName": "UpdateXssMatchSet",
    "Description": ""
  },
  {
    "API": "wafv2:AssociateWebAcl",
    "EventSource": "wafv2",
    "EventName": "AssociateWebAcl",
    "Description": "Associates a web ACL with a regional application resource, to protect the resource"
  },
  {
    "API": "wafv2:CheckCapacity",
    "EventSource": "wafv2",
    "EventName": "CheckCapacity",
    "Description": "Returns the web ACL capacity unit (WCU) requirements for a specified scope and set of rules"
  },
  {
    "API": "wafv2:CreateApiKey",
    "EventSource": "wafv2",
    "EventName": "CreateApiKey",
    "Description": "Creates an API key that contains a set of token domains"
  },
  {
    "API": "wafv2:CreateIpSet",
    "EventSource": "wafv2",
    "EventName": "CreateIpSet",
    "Description": "Creates an  IPSet, which you use to identify web requests that originate from specific IP addresses or ranges of IP addresses"
  },
  {
    "API": "wafv2:CreateRegexPatternSet",
    "EventSource": "wafv2",
    "EventName": "CreateRegexPatternSet",
    "Description": "Creates a  RegexPatternSet, which you reference in a  RegexPatternSetReferenceStatement, to have WAF inspect a web request component for the specified patterns"
  },
  {
    "API": "wafv2:CreateRuleGroup",
    "EventSource": "wafv2",
    "EventName": "CreateRuleGroup",
    "Description": "Creates a  RuleGroup per the specifications provided"
  },
  {
    "API": "wafv2:CreateWebAcl",
    "EventSource": "wafv2",
    "EventName": "CreateWebAcl",
    "Description": "Creates a  WebACL per the specifications provided"
  },
  {
    "API": "wafv2:DeleteApiKey",
    "EventSource": "wafv2",
    "EventName": "DeleteApiKey",
    "Description": "Deletes the specified API key"
  },
  {
    "API": "wafv2:DeleteFirewallManagerRuleGroups",
    "EventSource": "wafv2",
    "EventName": "DeleteFirewallManagerRuleGroups",
    "Description": "Deletes all rule groups that are managed by Firewall Manager for the specified web ACL"
  },
  {
    "API": "wafv2:DeleteIpSet",
    "EventSource": "wafv2",
    "EventName": "DeleteIpSet",
    "Description": "Deletes the specified  IPSet"
  },
  {
    "API": "wafv2:DeleteLoggingConfiguration",
    "EventSource": "wafv2",
    "EventName": "DeleteLoggingConfiguration",
    "Description": "Deletes the  LoggingConfiguration from the specified web ACL"
  },
  {
    "API": "wafv2:DeletePermissionPolicy",
    "EventSource": "wafv2",
    "EventName": "DeletePermissionPolicy",
    "Description": "Permanently deletes an IAM policy from the specified rule group"
  },
  {
    "API": "wafv2:DeleteRegexPatternSet",
    "EventSource": "wafv2",
    "EventName": "DeleteRegexPatternSet",
    "Description": "Deletes the specified  RegexPatternSet"
  },
  {
    "API": "wafv2:DeleteRuleGroup",
    "EventSource": "wafv2",
    "EventName": "DeleteRuleGroup",
    "Description": "Deletes the specified  RuleGroup"
  },
  {
    "API": "wafv2:DeleteWebAcl",
    "EventSource": "wafv2",
    "EventName": "DeleteWebAcl",
    "Description": "Deletes the specified  WebACL"
  },
  {
    "API": "wafv2:DescribeAllManagedProducts",
    "EventSource": "wafv2",
    "EventName": "DescribeAllManagedProducts",
    "Description": "Provides high-level information for the Amazon Web Services Managed Rules rule groups and Amazon Web Services Marketplace managed rule groups"
  },
  {
    "API": "wafv2:DescribeManagedProductsByVendor",
    "EventSource": "wafv2",
    "EventName": "DescribeManagedProductsByVendor",
    "Description": "Provides high-level information for the managed rule groups owned by a specific vendor"
  },
  {
    "API": "wafv2:DescribeManagedRuleGroup",
    "EventSource": "wafv2",
    "EventName": "DescribeManagedRuleGroup",
    "Description": "Provides high-level information for a managed rule group, including descriptions of the rules"
  },
  {
    "API": "wafv2:DisassociateWebAcl",
    "EventSource": "wafv2",
    "EventName": "DisassociateWebAcl",
    "Description": "Disassociates the specified regional application resource from any existing web ACL association"
  },
  {
    "API": "wafv2:GenerateMobileSdkReleaseUrl",
    "EventSource": "wafv2",
    "EventName": "GenerateMobileSdkReleaseUrl",
    "Description": "Generates a presigned download URL for the specified release of the mobile SDK"
  },
  {
    "API": "wafv2:GeneratePresignedUrl",
    "EventSource": "wafv2",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "wafv2:GetDecryptedApiKey",
    "EventSource": "wafv2",
    "EventName": "GetDecryptedApiKey",
    "Description": "Returns your API key in decrypted form"
  },
  {
    "API": "wafv2:GetIpSet",
    "EventSource": "wafv2",
    "EventName": "GetIpSet",
    "Description": "Retrieves the specified  IPSet"
  },
  {
    "API": "wafv2:GetLoggingConfiguration",
    "EventSource": "wafv2",
    "EventName": "GetLoggingConfiguration",
    "Description": "Returns the  LoggingConfiguration for the specified web ACL"
  },
  {
    "API": "wafv2:GetManagedRuleSet",
    "EventSource": "wafv2",
    "EventName": "GetManagedRuleSet",
    "Description": "Retrieves the specified managed rule set"
  },
  {
    "API": "wafv2:GetMobileSdkRelease",
    "EventSource": "wafv2",
    "EventName": "GetMobileSdkRelease",
    "Description": "Retrieves information for the specified mobile SDK release, including release notes and tags"
  },
  {
    "API": "wafv2:GetPermissionPolicy",
    "EventSource": "wafv2",
    "EventName": "GetPermissionPolicy",
    "Description": "Returns the IAM policy that is attached to the specified rule group"
  },
  {
    "API": "wafv2:GetRateBasedStatementManagedKeys",
    "EventSource": "wafv2",
    "EventName": "GetRateBasedStatementManagedKeys",
    "Description": "Retrieves the IP addresses that are currently blocked by a rate-based rule instance"
  },
  {
    "API": "wafv2:GetRegexPatternSet",
    "EventSource": "wafv2",
    "EventName": "GetRegexPatternSet",
    "Description": "Retrieves the specified  RegexPatternSet"
  },
  {
    "API": "wafv2:GetRuleGroup",
    "EventSource": "wafv2",
    "EventName": "GetRuleGroup",
    "Description": "Retrieves the specified  RuleGroup"
  },
  {
    "API": "wafv2:GetSampledRequests",
    "EventSource": "wafv2",
    "EventName": "GetSampledRequests",
    "Description": "Gets detailed information about a specified number of requests--a sample--that WAF randomly selects from among the first 5,000 requests that your Amazon Web Services resource received during a time range that you choose"
  },
  {
    "API": "wafv2:GetWebAcl",
    "EventSource": "wafv2",
    "EventName": "GetWebAcl",
    "Description": "Retrieves the specified  WebACL"
  },
  {
    "API": "wafv2:GetWebAclForResource",
    "EventSource": "wafv2",
    "EventName": "GetWebAclForResource",
    "Description": "Retrieves the  WebACL for the specified resource"
  },
  {
    "API": "wafv2:ListApiKeys",
    "EventSource": "wafv2",
    "EventName": "ListApiKeys",
    "Description": "Retrieves a list of the API keys that you've defined for the specified scope"
  },
  {
    "API": "wafv2:ListAvailableManagedRuleGroupVersions",
    "EventSource": "wafv2",
    "EventName": "ListAvailableManagedRuleGroupVersions",
    "Description": "Returns a list of the available versions for the specified managed rule group"
  },
  {
    "API": "wafv2:ListAvailableManagedRuleGroups",
    "EventSource": "wafv2",
    "EventName": "ListAvailableManagedRuleGroups",
    "Description": "Retrieves an array of managed rule groups that are available for you to use"
  },
  {
    "API": "wafv2:ListIpSets",
    "EventSource": "wafv2",
    "EventName": "ListIpSets",
    "Description": "Retrieves an array of  IPSetSummary objects for the IP sets that you manage"
  },
  {
    "API": "wafv2:ListLoggingConfigurations",
    "EventSource": "wafv2",
    "EventName": "ListLoggingConfigurations",
    "Description": "Retrieves an array of your  LoggingConfiguration objects"
  },
  {
    "API": "wafv2:ListManagedRuleSets",
    "EventSource": "wafv2",
    "EventName": "ListManagedRuleSets",
    "Description": "Retrieves the managed rule sets that you own"
  },
  {
    "API": "wafv2:ListMobileSdkReleases",
    "EventSource": "wafv2",
    "EventName": "ListMobileSdkReleases",
    "Description": "Retrieves a list of the available releases for the mobile SDK and the specified device platform"
  },
  {
    "API": "wafv2:ListRegexPatternSets",
    "EventSource": "wafv2",
    "EventName": "ListRegexPatternSets",
    "Description": "Retrieves an array of  RegexPatternSetSummary objects for the regex pattern sets that you manage"
  },
  {
    "API": "wafv2:ListResourcesForWebAcl",
    "EventSource": "wafv2",
    "EventName": "ListResourcesForWebAcl",
    "Description": "Retrieves an array of the Amazon Resource Names (ARNs) for the regional resources that are associated with the specified web ACL"
  },
  {
    "API": "wafv2:ListRuleGroups",
    "EventSource": "wafv2",
    "EventName": "ListRuleGroups",
    "Description": "Retrieves an array of  RuleGroupSummary objects for the rule groups that you manage"
  },
  {
    "API": "wafv2:ListTagsForResource",
    "EventSource": "wafv2",
    "EventName": "ListTagsForResource",
    "Description": "Retrieves the  TagInfoForResource for the specified resource"
  },
  {
    "API": "wafv2:ListWebAcls",
    "EventSource": "wafv2",
    "EventName": "ListWebAcls",
    "Description": "Retrieves an array of  WebACLSummary objects for the web ACLs that you manage"
  },
  {
    "API": "wafv2:PutLoggingConfiguration",
    "EventSource": "wafv2",
    "EventName": "PutLoggingConfiguration",
    "Description": "Enables the specified  LoggingConfiguration, to start logging from a web ACL, according to the configuration provided"
  },
  {
    "API": "wafv2:PutManagedRuleSetVersions",
    "EventSource": "wafv2",
    "EventName": "PutManagedRuleSetVersions",
    "Description": "Defines the versions of your managed rule set that you are offering to the customers"
  },
  {
    "API": "wafv2:PutPermissionPolicy",
    "EventSource": "wafv2",
    "EventName": "PutPermissionPolicy",
    "Description": "Attaches an IAM policy to the specified resource"
  },
  {
    "API": "wafv2:TagResource",
    "EventSource": "wafv2",
    "EventName": "TagResource",
    "Description": "Associates tags with the specified Amazon Web Services resource"
  },
  {
    "API": "wafv2:UntagResource",
    "EventSource": "wafv2",
    "EventName": "UntagResource",
    "Description": "Disassociates tags from an Amazon Web Services resource"
  },
  {
    "API": "wafv2:UpdateIpSet",
    "EventSource": "wafv2",
    "EventName": "UpdateIpSet",
    "Description": "Updates the specified  IPSet"
  },
  {
    "API": "wafv2:UpdateManagedRuleSetVersionExpiryDate",
    "EventSource": "wafv2",
    "EventName": "UpdateManagedRuleSetVersionExpiryDate",
    "Description": "Updates the expiration information for your managed rule set"
  },
  {
    "API": "wafv2:UpdateRegexPatternSet",
    "EventSource": "wafv2",
    "EventName": "UpdateRegexPatternSet",
    "Description": "Updates the specified  RegexPatternSet"
  },
  {
    "API": "wafv2:UpdateRuleGroup",
    "EventSource": "wafv2",
    "EventName": "UpdateRuleGroup",
    "Description": "Updates the specified  RuleGroup"
  },
  {
    "API": "wafv2:UpdateWebAcl",
    "EventSource": "wafv2",
    "EventName": "UpdateWebAcl",
    "Description": "Updates the specified  WebACL"
  },
  {
    "API": "wellarchitected:AssociateLenses",
    "EventSource": "wellarchitected",
    "EventName": "AssociateLenses",
    "Description": "Associate a lens to a workload"
  },
  {
    "API": "wellarchitected:AssociateProfiles",
    "EventSource": "wellarchitected",
    "EventName": "AssociateProfiles",
    "Description": "Associate a profile with a workload"
  },
  {
    "API": "wellarchitected:CreateLensShare",
    "EventSource": "wellarchitected",
    "EventName": "CreateLensShare",
    "Description": "Create a lens share"
  },
  {
    "API": "wellarchitected:CreateLensVersion",
    "EventSource": "wellarchitected",
    "EventName": "CreateLensVersion",
    "Description": "Create a new lens version"
  },
  {
    "API": "wellarchitected:CreateMilestone",
    "EventSource": "wellarchitected",
    "EventName": "CreateMilestone",
    "Description": "Create a milestone for an existing workload"
  },
  {
    "API": "wellarchitected:CreateProfile",
    "EventSource": "wellarchitected",
    "EventName": "CreateProfile",
    "Description": "Create a profile"
  },
  {
    "API": "wellarchitected:CreateProfileShare",
    "EventSource": "wellarchitected",
    "EventName": "CreateProfileShare",
    "Description": "Create a profile share"
  },
  {
    "API": "wellarchitected:CreateReviewTemplate",
    "EventSource": "wellarchitected",
    "EventName": "CreateReviewTemplate",
    "Description": "Create a review template"
  },
  {
    "API": "wellarchitected:CreateTemplateShare",
    "EventSource": "wellarchitected",
    "EventName": "CreateTemplateShare",
    "Description": "Create a review template share"
  },
  {
    "API": "wellarchitected:CreateWorkload",
    "EventSource": "wellarchitected",
    "EventName": "CreateWorkload",
    "Description": "Create a new workload"
  },
  {
    "API": "wellarchitected:CreateWorkloadShare",
    "EventSource": "wellarchitected",
    "EventName": "CreateWorkloadShare",
    "Description": "Create a workload share"
  },
  {
    "API": "wellarchitected:DeleteLens",
    "EventSource": "wellarchitected",
    "EventName": "DeleteLens",
    "Description": "Delete an existing lens"
  },
  {
    "API": "wellarchitected:DeleteLensShare",
    "EventSource": "wellarchitected",
    "EventName": "DeleteLensShare",
    "Description": "Delete a lens share"
  },
  {
    "API": "wellarchitected:DeleteProfile",
    "EventSource": "wellarchitected",
    "EventName": "DeleteProfile",
    "Description": "Delete a profile"
  },
  {
    "API": "wellarchitected:DeleteProfileShare",
    "EventSource": "wellarchitected",
    "EventName": "DeleteProfileShare",
    "Description": "Delete a profile share"
  },
  {
    "API": "wellarchitected:DeleteReviewTemplate",
    "EventSource": "wellarchitected",
    "EventName": "DeleteReviewTemplate",
    "Description": "Delete a review template"
  },
  {
    "API": "wellarchitected:DeleteTemplateShare",
    "EventSource": "wellarchitected",
    "EventName": "DeleteTemplateShare",
    "Description": "Delete a review template share"
  },
  {
    "API": "wellarchitected:DeleteWorkload",
    "EventSource": "wellarchitected",
    "EventName": "DeleteWorkload",
    "Description": "Delete an existing workload"
  },
  {
    "API": "wellarchitected:DeleteWorkloadShare",
    "EventSource": "wellarchitected",
    "EventName": "DeleteWorkloadShare",
    "Description": "Delete a workload share"
  },
  {
    "API": "wellarchitected:DisassociateLenses",
    "EventSource": "wellarchitected",
    "EventName": "DisassociateLenses",
    "Description": "Disassociate a lens from a workload"
  },
  {
    "API": "wellarchitected:DisassociateProfiles",
    "EventSource": "wellarchitected",
    "EventName": "DisassociateProfiles",
    "Description": "Disassociate a profile from a workload"
  },
  {
    "API": "wellarchitected:ExportLens",
    "EventSource": "wellarchitected",
    "EventName": "ExportLens",
    "Description": "Export an existing lens"
  },
  {
    "API": "wellarchitected:GeneratePresignedUrl",
    "EventSource": "wellarchitected",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "wellarchitected:GetAnswer",
    "EventSource": "wellarchitected",
    "EventName": "GetAnswer",
    "Description": "Get the answer to a specific question in a workload review"
  },
  {
    "API": "wellarchitected:GetConsolidatedReport",
    "EventSource": "wellarchitected",
    "EventName": "GetConsolidatedReport",
    "Description": "Get a consolidated report of your workloads"
  },
  {
    "API": "wellarchitected:GetGlobalSettings",
    "EventSource": "wellarchitected",
    "EventName": "GetGlobalSettings",
    "Description": "Global settings for all workloads"
  },
  {
    "API": "wellarchitected:GetLens",
    "EventSource": "wellarchitected",
    "EventName": "GetLens",
    "Description": "Get an existing lens"
  },
  {
    "API": "wellarchitected:GetLensReview",
    "EventSource": "wellarchitected",
    "EventName": "GetLensReview",
    "Description": "Get lens review"
  },
  {
    "API": "wellarchitected:GetLensReviewReport",
    "EventSource": "wellarchitected",
    "EventName": "GetLensReviewReport",
    "Description": "Get lens review report"
  },
  {
    "API": "wellarchitected:GetLensVersionDifference",
    "EventSource": "wellarchitected",
    "EventName": "GetLensVersionDifference",
    "Description": "Get lens version differences"
  },
  {
    "API": "wellarchitected:GetMilestone",
    "EventSource": "wellarchitected",
    "EventName": "GetMilestone",
    "Description": "Get a milestone for an existing workload"
  },
  {
    "API": "wellarchitected:GetProfile",
    "EventSource": "wellarchitected",
    "EventName": "GetProfile",
    "Description": "Get profile information"
  },
  {
    "API": "wellarchitected:GetProfileTemplate",
    "EventSource": "wellarchitected",
    "EventName": "GetProfileTemplate",
    "Description": "Get profile template"
  },
  {
    "API": "wellarchitected:GetReviewTemplate",
    "EventSource": "wellarchitected",
    "EventName": "GetReviewTemplate",
    "Description": "Get review template"
  },
  {
    "API": "wellarchitected:GetReviewTemplateAnswer",
    "EventSource": "wellarchitected",
    "EventName": "GetReviewTemplateAnswer",
    "Description": "Get review template answer"
  },
  {
    "API": "wellarchitected:GetReviewTemplateLensReview",
    "EventSource": "wellarchitected",
    "EventName": "GetReviewTemplateLensReview",
    "Description": "Get a lens review associated with a review template"
  },
  {
    "API": "wellarchitected:GetWorkload",
    "EventSource": "wellarchitected",
    "EventName": "GetWorkload",
    "Description": "Get an existing workload"
  },
  {
    "API": "wellarchitected:ImportLens",
    "EventSource": "wellarchitected",
    "EventName": "ImportLens",
    "Description": "Import a new custom lens or update an existing custom lens"
  },
  {
    "API": "wellarchitected:ListAnswers",
    "EventSource": "wellarchitected",
    "EventName": "ListAnswers",
    "Description": "List of answers for a particular workload and lens"
  },
  {
    "API": "wellarchitected:ListCheckDetails",
    "EventSource": "wellarchitected",
    "EventName": "ListCheckDetails",
    "Description": "List of Trusted Advisor check details by account related to the workload"
  },
  {
    "API": "wellarchitected:ListCheckSummaries",
    "EventSource": "wellarchitected",
    "EventName": "ListCheckSummaries",
    "Description": "List of Trusted Advisor checks summarized for all accounts related to the workload"
  },
  {
    "API": "wellarchitected:ListLensReviewImprovements",
    "EventSource": "wellarchitected",
    "EventName": "ListLensReviewImprovements",
    "Description": "List the improvements of a particular lens review"
  },
  {
    "API": "wellarchitected:ListLensReviews",
    "EventSource": "wellarchitected",
    "EventName": "ListLensReviews",
    "Description": "List lens reviews for a particular workload"
  },
  {
    "API": "wellarchitected:ListLensShares",
    "EventSource": "wellarchitected",
    "EventName": "ListLensShares",
    "Description": "List the lens shares associated with the lens"
  },
  {
    "API": "wellarchitected:ListLenses",
    "EventSource": "wellarchitected",
    "EventName": "ListLenses",
    "Description": "List the available lenses"
  },
  {
    "API": "wellarchitected:ListMilestones",
    "EventSource": "wellarchitected",
    "EventName": "ListMilestones",
    "Description": "List all milestones for an existing workload"
  },
  {
    "API": "wellarchitected:ListNotifications",
    "EventSource": "wellarchitected",
    "EventName": "ListNotifications",
    "Description": "List lens notifications"
  },
  {
    "API": "wellarchitected:ListProfileNotifications",
    "EventSource": "wellarchitected",
    "EventName": "ListProfileNotifications",
    "Description": "List profile notifications"
  },
  {
    "API": "wellarchitected:ListProfileShares",
    "EventSource": "wellarchitected",
    "EventName": "ListProfileShares",
    "Description": "List profile shares"
  },
  {
    "API": "wellarchitected:ListProfiles",
    "EventSource": "wellarchitected",
    "EventName": "ListProfiles",
    "Description": "List profiles"
  },
  {
    "API": "wellarchitected:ListReviewTemplateAnswers",
    "EventSource": "wellarchitected",
    "EventName": "ListReviewTemplateAnswers",
    "Description": "List the answers of a review template"
  },
  {
    "API": "wellarchitected:ListReviewTemplates",
    "EventSource": "wellarchitected",
    "EventName": "ListReviewTemplates",
    "Description": "List review templates"
  },
  {
    "API": "wellarchitected:ListShareInvitations",
    "EventSource": "wellarchitected",
    "EventName": "ListShareInvitations",
    "Description": "List the share invitations"
  },
  {
    "API": "wellarchitected:ListTagsForResource",
    "EventSource": "wellarchitected",
    "EventName": "ListTagsForResource",
    "Description": "List the tags for a resource"
  },
  {
    "API": "wellarchitected:ListTemplateShares",
    "EventSource": "wellarchitected",
    "EventName": "ListTemplateShares",
    "Description": "List review template shares"
  },
  {
    "API": "wellarchitected:ListWorkloadShares",
    "EventSource": "wellarchitected",
    "EventName": "ListWorkloadShares",
    "Description": "List the workload shares associated with the workload"
  },
  {
    "API": "wellarchitected:ListWorkloads",
    "EventSource": "wellarchitected",
    "EventName": "ListWorkloads",
    "Description": "Paginated list of workloads"
  },
  {
    "API": "wellarchitected:TagResource",
    "EventSource": "wellarchitected",
    "EventName": "TagResource",
    "Description": "Adds one or more tags to the specified resource"
  },
  {
    "API": "wellarchitected:UntagResource",
    "EventSource": "wellarchitected",
    "EventName": "UntagResource",
    "Description": "Deletes specified tags from a resource"
  },
  {
    "API": "wellarchitected:UpdateAnswer",
    "EventSource": "wellarchitected",
    "EventName": "UpdateAnswer",
    "Description": "Update the answer to a specific question in a workload review"
  },
  {
    "API": "wellarchitected:UpdateGlobalSettings",
    "EventSource": "wellarchitected",
    "EventName": "UpdateGlobalSettings",
    "Description": "Update whether the Amazon Web Services account is opted into organization sharing and discovery integration features"
  },
  {
    "API": "wellarchitected:UpdateIntegration",
    "EventSource": "wellarchitected",
    "EventName": "UpdateIntegration",
    "Description": "Update integration features"
  },
  {
    "API": "wellarchitected:UpdateLensReview",
    "EventSource": "wellarchitected",
    "EventName": "UpdateLensReview",
    "Description": "Update lens review for a particular workload"
  },
  {
    "API": "wellarchitected:UpdateProfile",
    "EventSource": "wellarchitected",
    "EventName": "UpdateProfile",
    "Description": "Update a profile"
  },
  {
    "API": "wellarchitected:UpdateReviewTemplate",
    "EventSource": "wellarchitected",
    "EventName": "UpdateReviewTemplate",
    "Description": "Update a review template"
  },
  {
    "API": "wellarchitected:UpdateReviewTemplateAnswer",
    "EventSource": "wellarchitected",
    "EventName": "UpdateReviewTemplateAnswer",
    "Description": "Update a review template answer"
  },
  {
    "API": "wellarchitected:UpdateReviewTemplateLensReview",
    "EventSource": "wellarchitected",
    "EventName": "UpdateReviewTemplateLensReview",
    "Description": "Update a lens review associated with a review template"
  },
  {
    "API": "wellarchitected:UpdateShareInvitation",
    "EventSource": "wellarchitected",
    "EventName": "UpdateShareInvitation",
    "Description": "Update a workload or custom lens share invitation"
  },
  {
    "API": "wellarchitected:UpdateWorkload",
    "EventSource": "wellarchitected",
    "EventName": "UpdateWorkload",
    "Description": "Update an existing workload"
  },
  {
    "API": "wellarchitected:UpdateWorkloadShare",
    "EventSource": "wellarchitected",
    "EventName": "UpdateWorkloadShare",
    "Description": "Update a workload share"
  },
  {
    "API": "wellarchitected:UpgradeLensReview",
    "EventSource": "wellarchitected",
    "EventName": "UpgradeLensReview",
    "Description": "Upgrade lens review for a particular workload"
  },
  {
    "API": "wellarchitected:UpgradeProfileVersion",
    "EventSource": "wellarchitected",
    "EventName": "UpgradeProfileVersion",
    "Description": "Upgrade a profile"
  },
  {
    "API": "wellarchitected:UpgradeReviewTemplateLensReview",
    "EventSource": "wellarchitected",
    "EventName": "UpgradeReviewTemplateLensReview",
    "Description": "Upgrade the lens review of a review template"
  },
  {
    "API": "wisdom:CreateAssistant",
    "EventSource": "wisdom",
    "EventName": "CreateAssistant",
    "Description": "Creates an Amazon Connect Wisdom assistant"
  },
  {
    "API": "wisdom:CreateAssistantAssociation",
    "EventSource": "wisdom",
    "EventName": "CreateAssistantAssociation",
    "Description": "Creates an association between an Amazon Connect Wisdom assistant and another resource"
  },
  {
    "API": "wisdom:CreateContent",
    "EventSource": "wisdom",
    "EventName": "CreateContent",
    "Description": "Creates Wisdom content"
  },
  {
    "API": "wisdom:CreateKnowledgeBase",
    "EventSource": "wisdom",
    "EventName": "CreateKnowledgeBase",
    "Description": "Creates a knowledge base"
  },
  {
    "API": "wisdom:CreateQuickResponse",
    "EventSource": "wisdom",
    "EventName": "CreateQuickResponse",
    "Description": "Creates a Wisdom quick response"
  },
  {
    "API": "wisdom:CreateSession",
    "EventSource": "wisdom",
    "EventName": "CreateSession",
    "Description": "Creates a session"
  },
  {
    "API": "wisdom:DeleteAssistant",
    "EventSource": "wisdom",
    "EventName": "DeleteAssistant",
    "Description": "Deletes an assistant"
  },
  {
    "API": "wisdom:DeleteAssistantAssociation",
    "EventSource": "wisdom",
    "EventName": "DeleteAssistantAssociation",
    "Description": "Deletes an assistant association"
  },
  {
    "API": "wisdom:DeleteContent",
    "EventSource": "wisdom",
    "EventName": "DeleteContent",
    "Description": "Deletes the content"
  },
  {
    "API": "wisdom:DeleteImportJob",
    "EventSource": "wisdom",
    "EventName": "DeleteImportJob",
    "Description": "Deletes the quick response import job"
  },
  {
    "API": "wisdom:DeleteKnowledgeBase",
    "EventSource": "wisdom",
    "EventName": "DeleteKnowledgeBase",
    "Description": "Deletes the knowledge base"
  },
  {
    "API": "wisdom:DeleteQuickResponse",
    "EventSource": "wisdom",
    "EventName": "DeleteQuickResponse",
    "Description": "Deletes a quick response"
  },
  {
    "API": "wisdom:GeneratePresignedUrl",
    "EventSource": "wisdom",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "wisdom:GetAssistant",
    "EventSource": "wisdom",
    "EventName": "GetAssistant",
    "Description": "Retrieves information about an assistant"
  },
  {
    "API": "wisdom:GetAssistantAssociation",
    "EventSource": "wisdom",
    "EventName": "GetAssistantAssociation",
    "Description": "Retrieves information about an assistant association"
  },
  {
    "API": "wisdom:GetContent",
    "EventSource": "wisdom",
    "EventName": "GetContent",
    "Description": "Retrieves content, including a pre-signed URL to download the content"
  },
  {
    "API": "wisdom:GetContentSummary",
    "EventSource": "wisdom",
    "EventName": "GetContentSummary",
    "Description": "Retrieves summary information about the content"
  },
  {
    "API": "wisdom:GetImportJob",
    "EventSource": "wisdom",
    "EventName": "GetImportJob",
    "Description": "Retrieves the started import job"
  },
  {
    "API": "wisdom:GetKnowledgeBase",
    "EventSource": "wisdom",
    "EventName": "GetKnowledgeBase",
    "Description": "Retrieves information about the knowledge base"
  },
  {
    "API": "wisdom:GetQuickResponse",
    "EventSource": "wisdom",
    "EventName": "GetQuickResponse",
    "Description": "Retrieves the quick response"
  },
  {
    "API": "wisdom:GetRecommendations",
    "EventSource": "wisdom",
    "EventName": "GetRecommendations",
    "Description": "Retrieves recommendations for the specified session"
  },
  {
    "API": "wisdom:GetSession",
    "EventSource": "wisdom",
    "EventName": "GetSession",
    "Description": "Retrieves information for a specified session"
  },
  {
    "API": "wisdom:ListAssistantAssociations",
    "EventSource": "wisdom",
    "EventName": "ListAssistantAssociations",
    "Description": "Lists information about assistant associations"
  },
  {
    "API": "wisdom:ListAssistants",
    "EventSource": "wisdom",
    "EventName": "ListAssistants",
    "Description": "Lists information about assistants"
  },
  {
    "API": "wisdom:ListContents",
    "EventSource": "wisdom",
    "EventName": "ListContents",
    "Description": "Lists the content"
  },
  {
    "API": "wisdom:ListImportJobs",
    "EventSource": "wisdom",
    "EventName": "ListImportJobs",
    "Description": "Lists information about import jobs"
  },
  {
    "API": "wisdom:ListKnowledgeBases",
    "EventSource": "wisdom",
    "EventName": "ListKnowledgeBases",
    "Description": "Lists the knowledge bases"
  },
  {
    "API": "wisdom:ListQuickResponses",
    "EventSource": "wisdom",
    "EventName": "ListQuickResponses",
    "Description": "Lists information about quick response"
  },
  {
    "API": "wisdom:ListTagsForResource",
    "EventSource": "wisdom",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags for the specified resource"
  },
  {
    "API": "wisdom:NotifyRecommendationsReceived",
    "EventSource": "wisdom",
    "EventName": "NotifyRecommendationsReceived",
    "Description": "Removes the specified recommendations from the specified assistant's queue of newly available recommendations"
  },
  {
    "API": "wisdom:QueryAssistant",
    "EventSource": "wisdom",
    "EventName": "QueryAssistant",
    "Description": "Performs a manual search against the specified assistant"
  },
  {
    "API": "wisdom:RemoveKnowledgeBaseTemplateUri",
    "EventSource": "wisdom",
    "EventName": "RemoveKnowledgeBaseTemplateUri",
    "Description": "Removes a URI template from a knowledge base"
  },
  {
    "API": "wisdom:SearchContent",
    "EventSource": "wisdom",
    "EventName": "SearchContent",
    "Description": "Searches for content in a specified knowledge base"
  },
  {
    "API": "wisdom:SearchQuickResponses",
    "EventSource": "wisdom",
    "EventName": "SearchQuickResponses",
    "Description": "Searches existing Wisdom quick responses in a Wisdom knowledge base"
  },
  {
    "API": "wisdom:SearchSessions",
    "EventSource": "wisdom",
    "EventName": "SearchSessions",
    "Description": "Searches for sessions"
  },
  {
    "API": "wisdom:StartContentUpload",
    "EventSource": "wisdom",
    "EventName": "StartContentUpload",
    "Description": "Get a URL to upload content to a knowledge base"
  },
  {
    "API": "wisdom:StartImportJob",
    "EventSource": "wisdom",
    "EventName": "StartImportJob",
    "Description": "Start an asynchronous job to import Wisdom resources from an uploaded source file"
  },
  {
    "API": "wisdom:TagResource",
    "EventSource": "wisdom",
    "EventName": "TagResource",
    "Description": "Adds the specified tags to the specified resource"
  },
  {
    "API": "wisdom:UntagResource",
    "EventSource": "wisdom",
    "EventName": "UntagResource",
    "Description": "Removes the specified tags from the specified resource"
  },
  {
    "API": "wisdom:UpdateContent",
    "EventSource": "wisdom",
    "EventName": "UpdateContent",
    "Description": "Updates information about the content"
  },
  {
    "API": "wisdom:UpdateKnowledgeBaseTemplateUri",
    "EventSource": "wisdom",
    "EventName": "UpdateKnowledgeBaseTemplateUri",
    "Description": "Updates the template URI of a knowledge base"
  },
  {
    "API": "wisdom:UpdateQuickResponse",
    "EventSource": "wisdom",
    "EventName": "UpdateQuickResponse",
    "Description": "Updates an existing Wisdom quick response"
  },
  {
    "API": "workdocs:AbortDocumentVersionUpload",
    "EventSource": "workdocs",
    "EventName": "AbortDocumentVersionUpload",
    "Description": "Aborts the upload of the specified document version that was previously initiated by  InitiateDocumentVersionUpload"
  },
  {
    "API": "workdocs:ActivateUser",
    "EventSource": "workdocs",
    "EventName": "ActivateUser",
    "Description": "Activates the specified user"
  },
  {
    "API": "workdocs:AddResourcePermissions",
    "EventSource": "workdocs",
    "EventName": "AddResourcePermissions",
    "Description": "Creates a set of permissions for the specified folder or document"
  },
  {
    "API": "workdocs:CreateComment",
    "EventSource": "workdocs",
    "EventName": "CreateComment",
    "Description": "Adds a new comment to the specified document version"
  },
  {
    "API": "workdocs:CreateCustomMetadata",
    "EventSource": "workdocs",
    "EventName": "CreateCustomMetadata",
    "Description": "Adds one or more custom properties to the specified resource (a folder, document, or version)"
  },
  {
    "API": "workdocs:CreateFolder",
    "EventSource": "workdocs",
    "EventName": "CreateFolder",
    "Description": "Creates a folder with the specified name and parent folder"
  },
  {
    "API": "workdocs:CreateLabels",
    "EventSource": "workdocs",
    "EventName": "CreateLabels",
    "Description": "Adds the specified list of labels to the given resource (a document or folder)"
  },
  {
    "API": "workdocs:CreateNotificationSubscription",
    "EventSource": "workdocs",
    "EventName": "CreateNotificationSubscription",
    "Description": "Configure Amazon WorkDocs to use Amazon SNS notifications"
  },
  {
    "API": "workdocs:CreateUser",
    "EventSource": "workdocs",
    "EventName": "CreateUser",
    "Description": "Creates a user in a Simple AD or Microsoft AD directory"
  },
  {
    "API": "workdocs:DeactivateUser",
    "EventSource": "workdocs",
    "EventName": "DeactivateUser",
    "Description": "Deactivates the specified user, which revokes the user's access to Amazon WorkDocs"
  },
  {
    "API": "workdocs:DeleteComment",
    "EventSource": "workdocs",
    "EventName": "DeleteComment",
    "Description": "Deletes the specified comment from the document version"
  },
  {
    "API": "workdocs:DeleteCustomMetadata",
    "EventSource": "workdocs",
    "EventName": "DeleteCustomMetadata",
    "Description": "Deletes custom metadata from the specified resource"
  },
  {
    "API": "workdocs:DeleteDocument",
    "EventSource": "workdocs",
    "EventName": "DeleteDocument",
    "Description": "Permanently deletes the specified document and its associated metadata"
  },
  {
    "API": "workdocs:DeleteDocumentVersion",
    "EventSource": "workdocs",
    "EventName": "DeleteDocumentVersion",
    "Description": "Deletes a specific version of a document"
  },
  {
    "API": "workdocs:DeleteFolder",
    "EventSource": "workdocs",
    "EventName": "DeleteFolder",
    "Description": "Permanently deletes the specified folder and its contents"
  },
  {
    "API": "workdocs:DeleteFolderContents",
    "EventSource": "workdocs",
    "EventName": "DeleteFolderContents",
    "Description": "Deletes the contents of the specified folder"
  },
  {
    "API": "workdocs:DeleteLabels",
    "EventSource": "workdocs",
    "EventName": "DeleteLabels",
    "Description": "Deletes the specified list of labels from a resource"
  },
  {
    "API": "workdocs:DeleteNotificationSubscription",
    "EventSource": "workdocs",
    "EventName": "DeleteNotificationSubscription",
    "Description": "Deletes the specified subscription from the specified organization"
  },
  {
    "API": "workdocs:DeleteUser",
    "EventSource": "workdocs",
    "EventName": "DeleteUser",
    "Description": "Deletes the specified user from a Simple AD or Microsoft AD directory"
  },
  {
    "API": "workdocs:DescribeActivities",
    "EventSource": "workdocs",
    "EventName": "DescribeActivities",
    "Description": "Describes the user activities in a specified time period"
  },
  {
    "API": "workdocs:DescribeComments",
    "EventSource": "workdocs",
    "EventName": "DescribeComments",
    "Description": "List all the comments for the specified document version"
  },
  {
    "API": "workdocs:DescribeDocumentVersions",
    "EventSource": "workdocs",
    "EventName": "DescribeDocumentVersions",
    "Description": "Retrieves the document versions for the specified document"
  },
  {
    "API": "workdocs:DescribeFolderContents",
    "EventSource": "workdocs",
    "EventName": "DescribeFolderContents",
    "Description": "Describes the contents of the specified folder, including its documents and subfolders"
  },
  {
    "API": "workdocs:DescribeGroups",
    "EventSource": "workdocs",
    "EventName": "DescribeGroups",
    "Description": "Describes the groups specified by the query"
  },
  {
    "API": "workdocs:DescribeNotificationSubscriptions",
    "EventSource": "workdocs",
    "EventName": "DescribeNotificationSubscriptions",
    "Description": "Lists the specified notification subscriptions"
  },
  {
    "API": "workdocs:DescribeResourcePermissions",
    "EventSource": "workdocs",
    "EventName": "DescribeResourcePermissions",
    "Description": "Describes the permissions of a specified resource"
  },
  {
    "API": "workdocs:DescribeRootFolders",
    "EventSource": "workdocs",
    "EventName": "DescribeRootFolders",
    "Description": "Describes the current user's special folders; the ``RootFolder`` and the ``RecycleBin``"
  },
  {
    "API": "workdocs:DescribeUsers",
    "EventSource": "workdocs",
    "EventName": "DescribeUsers",
    "Description": "Describes the specified users"
  },
  {
    "API": "workdocs:GeneratePresignedUrl",
    "EventSource": "workdocs",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "workdocs:GetCurrentUser",
    "EventSource": "workdocs",
    "EventName": "GetCurrentUser",
    "Description": "Retrieves details of the current user for whom the authentication token was generated"
  },
  {
    "API": "workdocs:GetDocument",
    "EventSource": "workdocs",
    "EventName": "GetDocument",
    "Description": "Retrieves details of a document"
  },
  {
    "API": "workdocs:GetDocumentPath",
    "EventSource": "workdocs",
    "EventName": "GetDocumentPath",
    "Description": "Retrieves the path information (the hierarchy from the root folder) for the requested document"
  },
  {
    "API": "workdocs:GetDocumentVersion",
    "EventSource": "workdocs",
    "EventName": "GetDocumentVersion",
    "Description": "Retrieves version metadata for the specified document"
  },
  {
    "API": "workdocs:GetFolder",
    "EventSource": "workdocs",
    "EventName": "GetFolder",
    "Description": "Retrieves the metadata of the specified folder"
  },
  {
    "API": "workdocs:GetFolderPath",
    "EventSource": "workdocs",
    "EventName": "GetFolderPath",
    "Description": "Retrieves the path information (the hierarchy from the root folder) for the specified folder"
  },
  {
    "API": "workdocs:GetResources",
    "EventSource": "workdocs",
    "EventName": "GetResources",
    "Description": "Retrieves a collection of resources, including folders and documents"
  },
  {
    "API": "workdocs:InitiateDocumentVersionUpload",
    "EventSource": "workdocs",
    "EventName": "InitiateDocumentVersionUpload",
    "Description": "Creates a new document object and version object"
  },
  {
    "API": "workdocs:RemoveAllResourcePermissions",
    "EventSource": "workdocs",
    "EventName": "RemoveAllResourcePermissions",
    "Description": "Removes all the permissions from the specified resource"
  },
  {
    "API": "workdocs:RemoveResourcePermission",
    "EventSource": "workdocs",
    "EventName": "RemoveResourcePermission",
    "Description": "Removes the permission for the specified principal from the specified resource"
  },
  {
    "API": "workdocs:RestoreDocumentVersions",
    "EventSource": "workdocs",
    "EventName": "RestoreDocumentVersions",
    "Description": "Recovers a deleted version of an Amazon WorkDocs document"
  },
  {
    "API": "workdocs:SearchResources",
    "EventSource": "workdocs",
    "EventName": "SearchResources",
    "Description": "Searches metadata and the content of folders, documents, document versions, and comments"
  },
  {
    "API": "workdocs:UpdateDocument",
    "EventSource": "workdocs",
    "EventName": "UpdateDocument",
    "Description": "Updates the specified attributes of a document"
  },
  {
    "API": "workdocs:UpdateDocumentVersion",
    "EventSource": "workdocs",
    "EventName": "UpdateDocumentVersion",
    "Description": "Changes the status of the document version to ACTIVE"
  },
  {
    "API": "workdocs:UpdateFolder",
    "EventSource": "workdocs",
    "EventName": "UpdateFolder",
    "Description": "Updates the specified attributes of the specified folder"
  },
  {
    "API": "workdocs:UpdateUser",
    "EventSource": "workdocs",
    "EventName": "UpdateUser",
    "Description": "Updates the specified attributes of the specified user, and grants or revokes administrative privileges to the Amazon WorkDocs site"
  },
  {
    "API": "worklink:AssociateDomain",
    "EventSource": "worklink",
    "EventName": "AssociateDomain",
    "Description": "Specifies a domain to be associated to Amazon WorkLink"
  },
  {
    "API": "worklink:AssociateWebsiteAuthorizationProvider",
    "EventSource": "worklink",
    "EventName": "AssociateWebsiteAuthorizationProvider",
    "Description": "Associates a website authorization provider with a specified fleet"
  },
  {
    "API": "worklink:AssociateWebsiteCertificateAuthority",
    "EventSource": "worklink",
    "EventName": "AssociateWebsiteCertificateAuthority",
    "Description": "Imports the root certificate of a certificate authority (CA) used to obtain TLS certificates used by associated websites within the company network"
  },
  {
    "API": "worklink:CreateFleet",
    "EventSource": "worklink",
    "EventName": "CreateFleet",
    "Description": "Creates a fleet"
  },
  {
    "API": "worklink:DeleteFleet",
    "EventSource": "worklink",
    "EventName": "DeleteFleet",
    "Description": "Deletes a fleet"
  },
  {
    "API": "worklink:DescribeAuditStreamConfiguration",
    "EventSource": "worklink",
    "EventName": "DescribeAuditStreamConfiguration",
    "Description": "Describes the configuration for delivering audit streams to the customer account"
  },
  {
    "API": "worklink:DescribeCompanyNetworkConfiguration",
    "EventSource": "worklink",
    "EventName": "DescribeCompanyNetworkConfiguration",
    "Description": "Describes the networking configuration to access the internal websites associated with the specified fleet"
  },
  {
    "API": "worklink:DescribeDevice",
    "EventSource": "worklink",
    "EventName": "DescribeDevice",
    "Description": "Provides information about a user's device"
  },
  {
    "API": "worklink:DescribeDevicePolicyConfiguration",
    "EventSource": "worklink",
    "EventName": "DescribeDevicePolicyConfiguration",
    "Description": "Describes the device policy configuration for the specified fleet"
  },
  {
    "API": "worklink:DescribeDomain",
    "EventSource": "worklink",
    "EventName": "DescribeDomain",
    "Description": "Provides information about the domain"
  },
  {
    "API": "worklink:DescribeFleetMetadata",
    "EventSource": "worklink",
    "EventName": "DescribeFleetMetadata",
    "Description": "Provides basic information for the specified fleet, excluding identity provider, networking, and device configuration details"
  },
  {
    "API": "worklink:DescribeIdentityProviderConfiguration",
    "EventSource": "worklink",
    "EventName": "DescribeIdentityProviderConfiguration",
    "Description": "Describes the identity provider configuration of the specified fleet"
  },
  {
    "API": "worklink:DescribeWebsiteCertificateAuthority",
    "EventSource": "worklink",
    "EventName": "DescribeWebsiteCertificateAuthority",
    "Description": "Provides information about the certificate authority"
  },
  {
    "API": "worklink:DisassociateDomain",
    "EventSource": "worklink",
    "EventName": "DisassociateDomain",
    "Description": "Disassociates a domain from Amazon WorkLink"
  },
  {
    "API": "worklink:DisassociateWebsiteAuthorizationProvider",
    "EventSource": "worklink",
    "EventName": "DisassociateWebsiteAuthorizationProvider",
    "Description": "Disassociates a website authorization provider from a specified fleet"
  },
  {
    "API": "worklink:DisassociateWebsiteCertificateAuthority",
    "EventSource": "worklink",
    "EventName": "DisassociateWebsiteCertificateAuthority",
    "Description": "Removes a certificate authority (CA)"
  },
  {
    "API": "worklink:GeneratePresignedUrl",
    "EventSource": "worklink",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "worklink:ListDevices",
    "EventSource": "worklink",
    "EventName": "ListDevices",
    "Description": "Retrieves a list of devices registered with the specified fleet"
  },
  {
    "API": "worklink:ListDomains",
    "EventSource": "worklink",
    "EventName": "ListDomains",
    "Description": "Retrieves a list of domains associated to a specified fleet"
  },
  {
    "API": "worklink:ListFleets",
    "EventSource": "worklink",
    "EventName": "ListFleets",
    "Description": "Retrieves a list of fleets for the current account and Region"
  },
  {
    "API": "worklink:ListTagsForResource",
    "EventSource": "worklink",
    "EventName": "ListTagsForResource",
    "Description": "Retrieves a list of tags for the specified resource"
  },
  {
    "API": "worklink:ListWebsiteAuthorizationProviders",
    "EventSource": "worklink",
    "EventName": "ListWebsiteAuthorizationProviders",
    "Description": "Retrieves a list of website authorization providers associated with a specified fleet"
  },
  {
    "API": "worklink:ListWebsiteCertificateAuthorities",
    "EventSource": "worklink",
    "EventName": "ListWebsiteCertificateAuthorities",
    "Description": "Retrieves a list of certificate authorities added for the current account and Region"
  },
  {
    "API": "worklink:RestoreDomainAccess",
    "EventSource": "worklink",
    "EventName": "RestoreDomainAccess",
    "Description": "Moves a domain to ACTIVE status if it was in the INACTIVE status"
  },
  {
    "API": "worklink:RevokeDomainAccess",
    "EventSource": "worklink",
    "EventName": "RevokeDomainAccess",
    "Description": "Moves a domain to INACTIVE status if it was in the ACTIVE status"
  },
  {
    "API": "worklink:SignOutUser",
    "EventSource": "worklink",
    "EventName": "SignOutUser",
    "Description": "Signs the user out from all of their devices"
  },
  {
    "API": "worklink:TagResource",
    "EventSource": "worklink",
    "EventName": "TagResource",
    "Description": "Adds or overwrites one or more tags for the specified resource, such as a fleet"
  },
  {
    "API": "worklink:UntagResource",
    "EventSource": "worklink",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags from the specified resource"
  },
  {
    "API": "worklink:UpdateAuditStreamConfiguration",
    "EventSource": "worklink",
    "EventName": "UpdateAuditStreamConfiguration",
    "Description": "Updates the audit stream configuration for the fleet"
  },
  {
    "API": "worklink:UpdateCompanyNetworkConfiguration",
    "EventSource": "worklink",
    "EventName": "UpdateCompanyNetworkConfiguration",
    "Description": "Updates the company network configuration for the fleet"
  },
  {
    "API": "worklink:UpdateDevicePolicyConfiguration",
    "EventSource": "worklink",
    "EventName": "UpdateDevicePolicyConfiguration",
    "Description": "Updates the device policy configuration for the fleet"
  },
  {
    "API": "worklink:UpdateDomainMetadata",
    "EventSource": "worklink",
    "EventName": "UpdateDomainMetadata",
    "Description": "Updates domain metadata, such as DisplayName"
  },
  {
    "API": "worklink:UpdateFleetMetadata",
    "EventSource": "worklink",
    "EventName": "UpdateFleetMetadata",
    "Description": "Updates fleet metadata, such as DisplayName"
  },
  {
    "API": "worklink:UpdateIdentityProviderConfiguration",
    "EventSource": "worklink",
    "EventName": "UpdateIdentityProviderConfiguration",
    "Description": "Updates the identity provider configuration for the fleet"
  },
  {
    "API": "workmail:AssociateDelegateToResource",
    "EventSource": "workmail",
    "EventName": "AssociateDelegateToResource",
    "Description": "Adds a member (user or group) to the resource's set of delegates"
  },
  {
    "API": "workmail:AssociateMemberToGroup",
    "EventSource": "workmail",
    "EventName": "AssociateMemberToGroup",
    "Description": "Adds a member (user or group) to the group's set"
  },
  {
    "API": "workmail:AssumeImpersonationRole",
    "EventSource": "workmail",
    "EventName": "AssumeImpersonationRole",
    "Description": "Assumes an impersonation role for the given WorkMail organization"
  },
  {
    "API": "workmail:CancelMailboxExportJob",
    "EventSource": "workmail",
    "EventName": "CancelMailboxExportJob",
    "Description": "Cancels a mailbox export job"
  },
  {
    "API": "workmail:CreateAlias",
    "EventSource": "workmail",
    "EventName": "CreateAlias",
    "Description": "Adds an alias to the set of a given member (user or group) of WorkMail"
  },
  {
    "API": "workmail:CreateAvailabilityConfiguration",
    "EventSource": "workmail",
    "EventName": "CreateAvailabilityConfiguration",
    "Description": "Creates an ``AvailabilityConfiguration`` for the given WorkMail organization and domain"
  },
  {
    "API": "workmail:CreateGroup",
    "EventSource": "workmail",
    "EventName": "CreateGroup",
    "Description": "Creates a group that can be used in WorkMail by calling the  RegisterToWorkMail operation"
  },
  {
    "API": "workmail:CreateImpersonationRole",
    "EventSource": "workmail",
    "EventName": "CreateImpersonationRole",
    "Description": "Creates an impersonation role for the given WorkMail organization"
  },
  {
    "API": "workmail:CreateMobileDeviceAccessRule",
    "EventSource": "workmail",
    "EventName": "CreateMobileDeviceAccessRule",
    "Description": "Creates a new mobile device access rule for the specified WorkMail organization"
  },
  {
    "API": "workmail:CreateOrganization",
    "EventSource": "workmail",
    "EventName": "CreateOrganization",
    "Description": "Creates a new WorkMail organization"
  },
  {
    "API": "workmail:CreateResource",
    "EventSource": "workmail",
    "EventName": "CreateResource",
    "Description": "Creates a new WorkMail resource"
  },
  {
    "API": "workmail:CreateUser",
    "EventSource": "workmail",
    "EventName": "CreateUser",
    "Description": "Creates a user who can be used in WorkMail by calling the  RegisterToWorkMail operation"
  },
  {
    "API": "workmail:DeleteAccessControlRule",
    "EventSource": "workmail",
    "EventName": "DeleteAccessControlRule",
    "Description": "Deletes an access control rule for the specified WorkMail organization"
  },
  {
    "API": "workmail:DeleteAlias",
    "EventSource": "workmail",
    "EventName": "DeleteAlias",
    "Description": "Remove one or more specified aliases from a set of aliases for a given user"
  },
  {
    "API": "workmail:DeleteAvailabilityConfiguration",
    "EventSource": "workmail",
    "EventName": "DeleteAvailabilityConfiguration",
    "Description": "Deletes the ``AvailabilityConfiguration`` for the given WorkMail organization and domain"
  },
  {
    "API": "workmail:DeleteEmailMonitoringConfiguration",
    "EventSource": "workmail",
    "EventName": "DeleteEmailMonitoringConfiguration",
    "Description": "Deletes the email monitoring configuration for a specified organization"
  },
  {
    "API": "workmail:DeleteGroup",
    "EventSource": "workmail",
    "EventName": "DeleteGroup",
    "Description": "Deletes a group from WorkMail"
  },
  {
    "API": "workmail:DeleteImpersonationRole",
    "EventSource": "workmail",
    "EventName": "DeleteImpersonationRole",
    "Description": "Deletes an impersonation role for the given WorkMail organization"
  },
  {
    "API": "workmail:DeleteMailboxPermissions",
    "EventSource": "workmail",
    "EventName": "DeleteMailboxPermissions",
    "Description": "Deletes permissions granted to a member (user or group)"
  },
  {
    "API": "workmail:DeleteMobileDeviceAccessOverride",
    "EventSource": "workmail",
    "EventName": "DeleteMobileDeviceAccessOverride",
    "Description": "Deletes the mobile device access override for the given WorkMail organization, user, and device"
  },
  {
    "API": "workmail:DeleteMobileDeviceAccessRule",
    "EventSource": "workmail",
    "EventName": "DeleteMobileDeviceAccessRule",
    "Description": "Deletes a mobile device access rule for the specified WorkMail organization"
  },
  {
    "API": "workmail:DeleteOrganization",
    "EventSource": "workmail",
    "EventName": "DeleteOrganization",
    "Description": "Deletes an WorkMail organization and all underlying AWS resources managed by WorkMail as part of the organization"
  },
  {
    "API": "workmail:DeleteResource",
    "EventSource": "workmail",
    "EventName": "DeleteResource",
    "Description": "Deletes the specified resource"
  },
  {
    "API": "workmail:DeleteRetentionPolicy",
    "EventSource": "workmail",
    "EventName": "DeleteRetentionPolicy",
    "Description": "Deletes the specified retention policy from the specified organization"
  },
  {
    "API": "workmail:DeleteUser",
    "EventSource": "workmail",
    "EventName": "DeleteUser",
    "Description": "Deletes a user from WorkMail and all subsequent systems"
  },
  {
    "API": "workmail:DeregisterFromWorkMail",
    "EventSource": "workmail",
    "EventName": "DeregisterFromWorkMail",
    "Description": "Mark a user, group, or resource as no longer used in WorkMail"
  },
  {
    "API": "workmail:DeregisterMailDomain",
    "EventSource": "workmail",
    "EventName": "DeregisterMailDomain",
    "Description": "Removes a domain from WorkMail, stops email routing to WorkMail, and removes the authorization allowing WorkMail use"
  },
  {
    "API": "workmail:DescribeEmailMonitoringConfiguration",
    "EventSource": "workmail",
    "EventName": "DescribeEmailMonitoringConfiguration",
    "Description": "Describes the current email monitoring configuration for a specified organization"
  },
  {
    "API": "workmail:DescribeEntity",
    "EventSource": "workmail",
    "EventName": "DescribeEntity",
    "Description": "Returns basic details about an entity in WorkMail"
  },
  {
    "API": "workmail:DescribeGroup",
    "EventSource": "workmail",
    "EventName": "DescribeGroup",
    "Description": "Returns the data available for the group"
  },
  {
    "API": "workmail:DescribeInboundDmarcSettings",
    "EventSource": "workmail",
    "EventName": "DescribeInboundDmarcSettings",
    "Description": "Lists the settings in a DMARC policy for a specified organization"
  },
  {
    "API": "workmail:DescribeMailboxExportJob",
    "EventSource": "workmail",
    "EventName": "DescribeMailboxExportJob",
    "Description": "Describes the current status of a mailbox export job"
  },
  {
    "API": "workmail:DescribeOrganization",
    "EventSource": "workmail",
    "EventName": "DescribeOrganization",
    "Description": "Provides more information regarding a given organization based on its identifier"
  },
  {
    "API": "workmail:DescribeResource",
    "EventSource": "workmail",
    "EventName": "DescribeResource",
    "Description": "Returns the data available for the resource"
  },
  {
    "API": "workmail:DescribeUser",
    "EventSource": "workmail",
    "EventName": "DescribeUser",
    "Description": "Provides information regarding the user"
  },
  {
    "API": "workmail:DisassociateDelegateFromResource",
    "EventSource": "workmail",
    "EventName": "DisassociateDelegateFromResource",
    "Description": "Removes a member from the resource's set of delegates"
  },
  {
    "API": "workmail:DisassociateMemberFromGroup",
    "EventSource": "workmail",
    "EventName": "DisassociateMemberFromGroup",
    "Description": "Removes a member from a group"
  },
  {
    "API": "workmail:GeneratePresignedUrl",
    "EventSource": "workmail",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "workmail:GetAccessControlEffect",
    "EventSource": "workmail",
    "EventName": "GetAccessControlEffect",
    "Description": "Gets the effects of an organization's access control rules as they apply to a specified IPv4 address, access protocol action, and user ID or impersonation role ID"
  },
  {
    "API": "workmail:GetDefaultRetentionPolicy",
    "EventSource": "workmail",
    "EventName": "GetDefaultRetentionPolicy",
    "Description": "Gets the default retention policy details for the specified organization"
  },
  {
    "API": "workmail:GetImpersonationRole",
    "EventSource": "workmail",
    "EventName": "GetImpersonationRole",
    "Description": "Gets the impersonation role details for the given WorkMail organization"
  },
  {
    "API": "workmail:GetImpersonationRoleEffect",
    "EventSource": "workmail",
    "EventName": "GetImpersonationRoleEffect",
    "Description": "Tests whether the given impersonation role can impersonate a target user"
  },
  {
    "API": "workmail:GetMailDomain",
    "EventSource": "workmail",
    "EventName": "GetMailDomain",
    "Description": "Gets details for a mail domain, including domain records required to configure your domain with recommended security"
  },
  {
    "API": "workmail:GetMailboxDetails",
    "EventSource": "workmail",
    "EventName": "GetMailboxDetails",
    "Description": "Requests a user's mailbox details for a specified organization and user"
  },
  {
    "API": "workmail:GetMobileDeviceAccessEffect",
    "EventSource": "workmail",
    "EventName": "GetMobileDeviceAccessEffect",
    "Description": "Simulates the effect of the mobile device access rules for the given attributes of a sample access event"
  },
  {
    "API": "workmail:GetMobileDeviceAccessOverride",
    "EventSource": "workmail",
    "EventName": "GetMobileDeviceAccessOverride",
    "Description": "Gets the mobile device access override for the given WorkMail organization, user, and device"
  },
  {
    "API": "workmail:ListAccessControlRules",
    "EventSource": "workmail",
    "EventName": "ListAccessControlRules",
    "Description": "Lists the access control rules for the specified organization"
  },
  {
    "API": "workmail:ListAliases",
    "EventSource": "workmail",
    "EventName": "ListAliases",
    "Description": "Creates a paginated call to list the aliases associated with a given entity"
  },
  {
    "API": "workmail:ListAvailabilityConfigurations",
    "EventSource": "workmail",
    "EventName": "ListAvailabilityConfigurations",
    "Description": "List all the ``AvailabilityConfiguration``'s for the given WorkMail organization"
  },
  {
    "API": "workmail:ListGroupMembers",
    "EventSource": "workmail",
    "EventName": "ListGroupMembers",
    "Description": "Returns an overview of the members of a group"
  },
  {
    "API": "workmail:ListGroups",
    "EventSource": "workmail",
    "EventName": "ListGroups",
    "Description": "Returns summaries of the organization's groups"
  },
  {
    "API": "workmail:ListGroupsForEntity",
    "EventSource": "workmail",
    "EventName": "ListGroupsForEntity",
    "Description": "Returns all the groups to which an entity belongs"
  },
  {
    "API": "workmail:ListImpersonationRoles",
    "EventSource": "workmail",
    "EventName": "ListImpersonationRoles",
    "Description": "Lists all the impersonation roles for the given WorkMail organization"
  },
  {
    "API": "workmail:ListMailDomains",
    "EventSource": "workmail",
    "EventName": "ListMailDomains",
    "Description": "Lists the mail domains in a given WorkMail organization"
  },
  {
    "API": "workmail:ListMailboxExportJobs",
    "EventSource": "workmail",
    "EventName": "ListMailboxExportJobs",
    "Description": "Lists the mailbox export jobs started for the specified organization within the last seven days"
  },
  {
    "API": "workmail:ListMailboxPermissions",
    "EventSource": "workmail",
    "EventName": "ListMailboxPermissions",
    "Description": "Lists the mailbox permissions associated with a user, group, or resource mailbox"
  },
  {
    "API": "workmail:ListMobileDeviceAccessOverrides",
    "EventSource": "workmail",
    "EventName": "ListMobileDeviceAccessOverrides",
    "Description": "Lists all the mobile device access overrides for any given combination of WorkMail organization, user, or device"
  },
  {
    "API": "workmail:ListMobileDeviceAccessRules",
    "EventSource": "workmail",
    "EventName": "ListMobileDeviceAccessRules",
    "Description": "Lists the mobile device access rules for the specified WorkMail organization"
  },
  {
    "API": "workmail:ListOrganizations",
    "EventSource": "workmail",
    "EventName": "ListOrganizations",
    "Description": "Returns summaries of the customer's organizations"
  },
  {
    "API": "workmail:ListResourceDelegates",
    "EventSource": "workmail",
    "EventName": "ListResourceDelegates",
    "Description": "Lists the delegates associated with a resource"
  },
  {
    "API": "workmail:ListResources",
    "EventSource": "workmail",
    "EventName": "ListResources",
    "Description": "Returns summaries of the organization's resources"
  },
  {
    "API": "workmail:ListTagsForResource",
    "EventSource": "workmail",
    "EventName": "ListTagsForResource",
    "Description": "Lists the tags applied to an WorkMail organization resource"
  },
  {
    "API": "workmail:ListUsers",
    "EventSource": "workmail",
    "EventName": "ListUsers",
    "Description": "Returns summaries of the organization's users"
  },
  {
    "API": "workmail:PutAccessControlRule",
    "EventSource": "workmail",
    "EventName": "PutAccessControlRule",
    "Description": "Adds a new access control rule for the specified organization"
  },
  {
    "API": "workmail:PutEmailMonitoringConfiguration",
    "EventSource": "workmail",
    "EventName": "PutEmailMonitoringConfiguration",
    "Description": "Creates or updates the email monitoring configuration for a specified organization"
  },
  {
    "API": "workmail:PutInboundDmarcSettings",
    "EventSource": "workmail",
    "EventName": "PutInboundDmarcSettings",
    "Description": "Enables or disables a DMARC policy for a given organization"
  },
  {
    "API": "workmail:PutMailboxPermissions",
    "EventSource": "workmail",
    "EventName": "PutMailboxPermissions",
    "Description": "Sets permissions for a user, group, or resource"
  },
  {
    "API": "workmail:PutMobileDeviceAccessOverride",
    "EventSource": "workmail",
    "EventName": "PutMobileDeviceAccessOverride",
    "Description": "Creates or updates a mobile device access override for the given WorkMail organization, user, and device"
  },
  {
    "API": "workmail:PutRetentionPolicy",
    "EventSource": "workmail",
    "EventName": "PutRetentionPolicy",
    "Description": "Puts a retention policy to the specified organization"
  },
  {
    "API": "workmail:RegisterMailDomain",
    "EventSource": "workmail",
    "EventName": "RegisterMailDomain",
    "Description": "Registers a new domain in WorkMail and SES, and configures it for use by WorkMail"
  },
  {
    "API": "workmail:RegisterToWorkMail",
    "EventSource": "workmail",
    "EventName": "RegisterToWorkMail",
    "Description": "Registers an existing and disabled user, group, or resource for WorkMail use by associating a mailbox and calendaring capabilities"
  },
  {
    "API": "workmail:ResetPassword",
    "EventSource": "workmail",
    "EventName": "ResetPassword",
    "Description": "Allows the administrator to reset the password for a user"
  },
  {
    "API": "workmail:StartMailboxExportJob",
    "EventSource": "workmail",
    "EventName": "StartMailboxExportJob",
    "Description": "Starts a mailbox export job to export MIME-format email messages and calendar items from the specified mailbox to the specified Amazon Simple Storage Service (Amazon S3) bucket"
  },
  {
    "API": "workmail:TagResource",
    "EventSource": "workmail",
    "EventName": "TagResource",
    "Description": "Applies the specified tags to the specified WorkMailorganization resource"
  },
  {
    "API": "workmail:TestAvailabilityConfiguration",
    "EventSource": "workmail",
    "EventName": "TestAvailabilityConfiguration",
    "Description": "Performs a test on an availability provider to ensure that access is allowed"
  },
  {
    "API": "workmail:UntagResource",
    "EventSource": "workmail",
    "EventName": "UntagResource",
    "Description": "Untags the specified tags from the specified WorkMail organization resource"
  },
  {
    "API": "workmail:UpdateAvailabilityConfiguration",
    "EventSource": "workmail",
    "EventName": "UpdateAvailabilityConfiguration",
    "Description": "Updates an existing ``AvailabilityConfiguration`` for the given WorkMail organization and domain"
  },
  {
    "API": "workmail:UpdateDefaultMailDomain",
    "EventSource": "workmail",
    "EventName": "UpdateDefaultMailDomain",
    "Description": "Updates the default mail domain for an organization"
  },
  {
    "API": "workmail:UpdateGroup",
    "EventSource": "workmail",
    "EventName": "UpdateGroup",
    "Description": "Updates attibutes in a group"
  },
  {
    "API": "workmail:UpdateImpersonationRole",
    "EventSource": "workmail",
    "EventName": "UpdateImpersonationRole",
    "Description": "Updates an impersonation role for the given WorkMail organization"
  },
  {
    "API": "workmail:UpdateMailboxQuota",
    "EventSource": "workmail",
    "EventName": "UpdateMailboxQuota",
    "Description": "Updates a user's current mailbox quota for a specified organization and user"
  },
  {
    "API": "workmail:UpdateMobileDeviceAccessRule",
    "EventSource": "workmail",
    "EventName": "UpdateMobileDeviceAccessRule",
    "Description": "Updates a mobile device access rule for the specified WorkMail organization"
  },
  {
    "API": "workmail:UpdatePrimaryEmailAddress",
    "EventSource": "workmail",
    "EventName": "UpdatePrimaryEmailAddress",
    "Description": "Updates the primary email for a user, group, or resource"
  },
  {
    "API": "workmail:UpdateResource",
    "EventSource": "workmail",
    "EventName": "UpdateResource",
    "Description": "Updates data for the resource"
  },
  {
    "API": "workmail:UpdateUser",
    "EventSource": "workmail",
    "EventName": "UpdateUser",
    "Description": "Updates data for the user"
  },
  {
    "API": "workmailmessageflow:GeneratePresignedUrl",
    "EventSource": "workmailmessageflow",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "workmailmessageflow:GetRawMessageContent",
    "EventSource": "workmailmessageflow",
    "EventName": "GetRawMessageContent",
    "Description": "Retrieves the raw content of an in-transit email message, in MIME format"
  },
  {
    "API": "workmailmessageflow:PutRawMessageContent",
    "EventSource": "workmailmessageflow",
    "EventName": "PutRawMessageContent",
    "Description": "Updates the raw content of an in-transit email message, in MIME format"
  },
  {
    "API": "workspaces:AcceptAccountLinkInvitation",
    "EventSource": "workspaces",
    "EventName": "AcceptAccountLinkInvitation",
    "Description": "Accepts the account link invitation"
  },
  {
    "API": "workspaces:AssociateConnectionAlias",
    "EventSource": "workspaces",
    "EventName": "AssociateConnectionAlias",
    "Description": "Associates the specified connection alias with the specified directory to enable cross-Region redirection"
  },
  {
    "API": "workspaces:AssociateIpGroups",
    "EventSource": "workspaces",
    "EventName": "AssociateIpGroups",
    "Description": "Associates the specified IP access control group with the specified directory"
  },
  {
    "API": "workspaces:AssociateWorkspaceApplication",
    "EventSource": "workspaces",
    "EventName": "AssociateWorkspaceApplication",
    "Description": "Associates the specified application to the specified WorkSpace"
  },
  {
    "API": "workspaces:AuthorizeIpRules",
    "EventSource": "workspaces",
    "EventName": "AuthorizeIpRules",
    "Description": "Adds one or more rules to the specified IP access control group"
  },
  {
    "API": "workspaces:CopyWorkspaceImage",
    "EventSource": "workspaces",
    "EventName": "CopyWorkspaceImage",
    "Description": "Copies the specified image from the specified Region to the current Region"
  },
  {
    "API": "workspaces:CreateAccountLinkInvitation",
    "EventSource": "workspaces",
    "EventName": "CreateAccountLinkInvitation",
    "Description": "Creates the account link invitation"
  },
  {
    "API": "workspaces:CreateConnectClientAddIn",
    "EventSource": "workspaces",
    "EventName": "CreateConnectClientAddIn",
    "Description": "Creates a client-add-in for Amazon Connect within a directory"
  },
  {
    "API": "workspaces:CreateConnectionAlias",
    "EventSource": "workspaces",
    "EventName": "CreateConnectionAlias",
    "Description": "Creates the specified connection alias for use with cross-Region redirection"
  },
  {
    "API": "workspaces:CreateIpGroup",
    "EventSource": "workspaces",
    "EventName": "CreateIpGroup",
    "Description": "Creates an IP access control group"
  },
  {
    "API": "workspaces:CreateStandbyWorkspaces",
    "EventSource": "workspaces",
    "EventName": "CreateStandbyWorkspaces",
    "Description": "Creates a standby WorkSpace in a secondary Region"
  },
  {
    "API": "workspaces:CreateTags",
    "EventSource": "workspaces",
    "EventName": "CreateTags",
    "Description": "Creates the specified tags for the specified WorkSpaces resource"
  },
  {
    "API": "workspaces:CreateUpdatedWorkspaceImage",
    "EventSource": "workspaces",
    "EventName": "CreateUpdatedWorkspaceImage",
    "Description": "Creates a new updated WorkSpace image based on the specified source image"
  },
  {
    "API": "workspaces:CreateWorkspaceBundle",
    "EventSource": "workspaces",
    "EventName": "CreateWorkspaceBundle",
    "Description": "Creates the specified WorkSpace bundle"
  },
  {
    "API": "workspaces:CreateWorkspaceImage",
    "EventSource": "workspaces",
    "EventName": "CreateWorkspaceImage",
    "Description": "Creates a new WorkSpace image from an existing WorkSpace"
  },
  {
    "API": "workspaces:CreateWorkspaces",
    "EventSource": "workspaces",
    "EventName": "CreateWorkspaces",
    "Description": "Creates one or more WorkSpaces"
  },
  {
    "API": "workspaces:DeleteAccountLinkInvitation",
    "EventSource": "workspaces",
    "EventName": "DeleteAccountLinkInvitation",
    "Description": "Deletes the account link invitation"
  },
  {
    "API": "workspaces:DeleteClientBranding",
    "EventSource": "workspaces",
    "EventName": "DeleteClientBranding",
    "Description": "Deletes customized client branding"
  },
  {
    "API": "workspaces:DeleteConnectClientAddIn",
    "EventSource": "workspaces",
    "EventName": "DeleteConnectClientAddIn",
    "Description": "Deletes a client-add-in for Amazon Connect that is configured within a directory"
  },
  {
    "API": "workspaces:DeleteConnectionAlias",
    "EventSource": "workspaces",
    "EventName": "DeleteConnectionAlias",
    "Description": "Deletes the specified connection alias"
  },
  {
    "API": "workspaces:DeleteIpGroup",
    "EventSource": "workspaces",
    "EventName": "DeleteIpGroup",
    "Description": "Deletes the specified IP access control group"
  },
  {
    "API": "workspaces:DeleteTags",
    "EventSource": "workspaces",
    "EventName": "DeleteTags",
    "Description": "Deletes the specified tags from the specified WorkSpaces resource"
  },
  {
    "API": "workspaces:DeleteWorkspaceBundle",
    "EventSource": "workspaces",
    "EventName": "DeleteWorkspaceBundle",
    "Description": "Deletes the specified WorkSpace bundle"
  },
  {
    "API": "workspaces:DeleteWorkspaceImage",
    "EventSource": "workspaces",
    "EventName": "DeleteWorkspaceImage",
    "Description": "Deletes the specified image from your account"
  },
  {
    "API": "workspaces:DeployWorkspaceApplications",
    "EventSource": "workspaces",
    "EventName": "DeployWorkspaceApplications",
    "Description": "Deploys associated applications to the specified WorkSpace"
  },
  {
    "API": "workspaces:DeregisterWorkspaceDirectory",
    "EventSource": "workspaces",
    "EventName": "DeregisterWorkspaceDirectory",
    "Description": "Deregisters the specified directory"
  },
  {
    "API": "workspaces:DescribeAccount",
    "EventSource": "workspaces",
    "EventName": "DescribeAccount",
    "Description": "Retrieves a list that describes the configuration of Bring Your Own License (BYOL) for the specified account"
  },
  {
    "API": "workspaces:DescribeAccountModifications",
    "EventSource": "workspaces",
    "EventName": "DescribeAccountModifications",
    "Description": "Retrieves a list that describes modifications to the configuration of Bring Your Own License (BYOL) for the specified account"
  },
  {
    "API": "workspaces:DescribeApplicationAssociations",
    "EventSource": "workspaces",
    "EventName": "DescribeApplicationAssociations",
    "Description": "Describes the associations between the application and the specified associated resources"
  },
  {
    "API": "workspaces:DescribeApplications",
    "EventSource": "workspaces",
    "EventName": "DescribeApplications",
    "Description": "Describes the specified applications by filtering based on their compute types, license availability, operating systems, and owners"
  },
  {
    "API": "workspaces:DescribeBundleAssociations",
    "EventSource": "workspaces",
    "EventName": "DescribeBundleAssociations",
    "Description": "Describes the associations between the applications and the specified bundle"
  },
  {
    "API": "workspaces:DescribeClientBranding",
    "EventSource": "workspaces",
    "EventName": "DescribeClientBranding",
    "Description": "Describes the specified client branding"
  },
  {
    "API": "workspaces:DescribeClientProperties",
    "EventSource": "workspaces",
    "EventName": "DescribeClientProperties",
    "Description": "Retrieves a list that describes one or more specified Amazon WorkSpaces clients"
  },
  {
    "API": "workspaces:DescribeConnectClientAddIns",
    "EventSource": "workspaces",
    "EventName": "DescribeConnectClientAddIns",
    "Description": "Retrieves a list of Amazon Connect client add-ins that have been created"
  },
  {
    "API": "workspaces:DescribeConnectionAliasPermissions",
    "EventSource": "workspaces",
    "EventName": "DescribeConnectionAliasPermissions",
    "Description": "Describes the permissions that the owner of a connection alias has granted to another Amazon Web Services account for the specified connection alias"
  },
  {
    "API": "workspaces:DescribeConnectionAliases",
    "EventSource": "workspaces",
    "EventName": "DescribeConnectionAliases",
    "Description": "Retrieves a list that describes the connection aliases used for cross-Region redirection"
  },
  {
    "API": "workspaces:DescribeImageAssociations",
    "EventSource": "workspaces",
    "EventName": "DescribeImageAssociations",
    "Description": "Describes the associations between the applications and the specified image"
  },
  {
    "API": "workspaces:DescribeIpGroups",
    "EventSource": "workspaces",
    "EventName": "DescribeIpGroups",
    "Description": "Describes one or more of your IP access control groups"
  },
  {
    "API": "workspaces:DescribeTags",
    "EventSource": "workspaces",
    "EventName": "DescribeTags",
    "Description": "Describes the specified tags for the specified WorkSpaces resource"
  },
  {
    "API": "workspaces:DescribeWorkspaceAssociations",
    "EventSource": "workspaces",
    "EventName": "DescribeWorkspaceAssociations",
    "Description": "Describes the associations betweens applications and the specified WorkSpace"
  },
  {
    "API": "workspaces:DescribeWorkspaceBundles",
    "EventSource": "workspaces",
    "EventName": "DescribeWorkspaceBundles",
    "Description": "Retrieves a list that describes the available WorkSpace bundles"
  },
  {
    "API": "workspaces:DescribeWorkspaceDirectories",
    "EventSource": "workspaces",
    "EventName": "DescribeWorkspaceDirectories",
    "Description": "Describes the available directories that are registered with Amazon WorkSpaces"
  },
  {
    "API": "workspaces:DescribeWorkspaceImagePermissions",
    "EventSource": "workspaces",
    "EventName": "DescribeWorkspaceImagePermissions",
    "Description": "Describes the permissions that the owner of an image has granted to other Amazon Web Services accounts for an image"
  },
  {
    "API": "workspaces:DescribeWorkspaceImages",
    "EventSource": "workspaces",
    "EventName": "DescribeWorkspaceImages",
    "Description": "Retrieves a list that describes one or more specified images, if the image identifiers are provided"
  },
  {
    "API": "workspaces:DescribeWorkspaceSnapshots",
    "EventSource": "workspaces",
    "EventName": "DescribeWorkspaceSnapshots",
    "Description": "Describes the snapshots for the specified WorkSpace"
  },
  {
    "API": "workspaces:DescribeWorkspaces",
    "EventSource": "workspaces",
    "EventName": "DescribeWorkspaces",
    "Description": "Describes the specified WorkSpaces"
  },
  {
    "API": "workspaces:DescribeWorkspacesConnectionStatus",
    "EventSource": "workspaces",
    "EventName": "DescribeWorkspacesConnectionStatus",
    "Description": "Describes the connection status of the specified WorkSpaces"
  },
  {
    "API": "workspaces:DisassociateConnectionAlias",
    "EventSource": "workspaces",
    "EventName": "DisassociateConnectionAlias",
    "Description": "Disassociates a connection alias from a directory"
  },
  {
    "API": "workspaces:DisassociateIpGroups",
    "EventSource": "workspaces",
    "EventName": "DisassociateIpGroups",
    "Description": "Disassociates the specified IP access control group from the specified directory"
  },
  {
    "API": "workspaces:DisassociateWorkspaceApplication",
    "EventSource": "workspaces",
    "EventName": "DisassociateWorkspaceApplication",
    "Description": "Disassociates the specified application from a WorkSpace"
  },
  {
    "API": "workspaces:GeneratePresignedUrl",
    "EventSource": "workspaces",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "workspaces:GetAccountLink",
    "EventSource": "workspaces",
    "EventName": "GetAccountLink",
    "Description": "Retrieves account link information"
  },
  {
    "API": "workspaces:ImportClientBranding",
    "EventSource": "workspaces",
    "EventName": "ImportClientBranding",
    "Description": "Imports client branding"
  },
  {
    "API": "workspaces:ImportWorkspaceImage",
    "EventSource": "workspaces",
    "EventName": "ImportWorkspaceImage",
    "Description": "Imports the specified Windows 10 or 11 Bring Your Own License (BYOL) image into Amazon WorkSpaces"
  },
  {
    "API": "workspaces:ListAccountLinks",
    "EventSource": "workspaces",
    "EventName": "ListAccountLinks",
    "Description": "Lists all account links"
  },
  {
    "API": "workspaces:ListAvailableManagementCidrRanges",
    "EventSource": "workspaces",
    "EventName": "ListAvailableManagementCidrRanges",
    "Description": "Retrieves a list of IP address ranges, specified as IPv4 CIDR blocks, that you can use for the network management interface when you enable Bring Your Own License (BYOL)"
  },
  {
    "API": "workspaces:MigrateWorkspace",
    "EventSource": "workspaces",
    "EventName": "MigrateWorkspace",
    "Description": "Migrates a WorkSpace from one operating system or bundle type to another, while retaining the data on the user volume"
  },
  {
    "API": "workspaces:ModifyAccount",
    "EventSource": "workspaces",
    "EventName": "ModifyAccount",
    "Description": "Modifies the configuration of Bring Your Own License (BYOL) for the specified account"
  },
  {
    "API": "workspaces:ModifyCertificateBasedAuthProperties",
    "EventSource": "workspaces",
    "EventName": "ModifyCertificateBasedAuthProperties",
    "Description": "Modifies the properties of the certificate-based authentication you want to use with your WorkSpaces"
  },
  {
    "API": "workspaces:ModifyClientProperties",
    "EventSource": "workspaces",
    "EventName": "ModifyClientProperties",
    "Description": "Modifies the properties of the specified Amazon WorkSpaces clients"
  },
  {
    "API": "workspaces:ModifySamlProperties",
    "EventSource": "workspaces",
    "EventName": "ModifySamlProperties",
    "Description": "Modifies multiple properties related to SAML 2"
  },
  {
    "API": "workspaces:ModifySelfservicePermissions",
    "EventSource": "workspaces",
    "EventName": "ModifySelfservicePermissions",
    "Description": "Modifies the self-service WorkSpace management capabilities for your users"
  },
  {
    "API": "workspaces:ModifyWorkspaceAccessProperties",
    "EventSource": "workspaces",
    "EventName": "ModifyWorkspaceAccessProperties",
    "Description": "Specifies which devices and operating systems users can use to access their WorkSpaces"
  },
  {
    "API": "workspaces:ModifyWorkspaceCreationProperties",
    "EventSource": "workspaces",
    "EventName": "ModifyWorkspaceCreationProperties",
    "Description": "Modify the default properties used to create WorkSpaces"
  },
  {
    "API": "workspaces:ModifyWorkspaceProperties",
    "EventSource": "workspaces",
    "EventName": "ModifyWorkspaceProperties",
    "Description": "Modifies the specified WorkSpace properties"
  },
  {
    "API": "workspaces:ModifyWorkspaceState",
    "EventSource": "workspaces",
    "EventName": "ModifyWorkspaceState",
    "Description": "Sets the state of the specified WorkSpace"
  },
  {
    "API": "workspaces:RebootWorkspaces",
    "EventSource": "workspaces",
    "EventName": "RebootWorkspaces",
    "Description": "Reboots the specified WorkSpaces"
  },
  {
    "API": "workspaces:RebuildWorkspaces",
    "EventSource": "workspaces",
    "EventName": "RebuildWorkspaces",
    "Description": "Rebuilds the specified WorkSpace"
  },
  {
    "API": "workspaces:RegisterWorkspaceDirectory",
    "EventSource": "workspaces",
    "EventName": "RegisterWorkspaceDirectory",
    "Description": "Registers the specified directory"
  },
  {
    "API": "workspaces:RejectAccountLinkInvitation",
    "EventSource": "workspaces",
    "EventName": "RejectAccountLinkInvitation",
    "Description": "Rejects the account link invitation"
  },
  {
    "API": "workspaces:RestoreWorkspace",
    "EventSource": "workspaces",
    "EventName": "RestoreWorkspace",
    "Description": "Restores the specified WorkSpace to its last known healthy state"
  },
  {
    "API": "workspaces:RevokeIpRules",
    "EventSource": "workspaces",
    "EventName": "RevokeIpRules",
    "Description": "Removes one or more rules from the specified IP access control group"
  },
  {
    "API": "workspaces:StartWorkspaces",
    "EventSource": "workspaces",
    "EventName": "StartWorkspaces",
    "Description": "Starts the specified WorkSpaces"
  },
  {
    "API": "workspaces:StopWorkspaces",
    "EventSource": "workspaces",
    "EventName": "StopWorkspaces",
    "Description": "Stops the specified WorkSpaces"
  },
  {
    "API": "workspaces:TerminateWorkspaces",
    "EventSource": "workspaces",
    "EventName": "TerminateWorkspaces",
    "Description": "Terminates the specified WorkSpaces"
  },
  {
    "API": "workspaces:UpdateConnectClientAddIn",
    "EventSource": "workspaces",
    "EventName": "UpdateConnectClientAddIn",
    "Description": "Updates a Amazon Connect client add-in"
  },
  {
    "API": "workspaces:UpdateConnectionAliasPermission",
    "EventSource": "workspaces",
    "EventName": "UpdateConnectionAliasPermission",
    "Description": "Shares or unshares a connection alias with one account by specifying whether that account has permission to associate the connection alias with a directory"
  },
  {
    "API": "workspaces:UpdateRulesOfIpGroup",
    "EventSource": "workspaces",
    "EventName": "UpdateRulesOfIpGroup",
    "Description": "Replaces the current rules of the specified IP access control group with the specified rules"
  },
  {
    "API": "workspaces:UpdateWorkspaceBundle",
    "EventSource": "workspaces",
    "EventName": "UpdateWorkspaceBundle",
    "Description": "Updates a WorkSpace bundle with a new image"
  },
  {
    "API": "workspaces:UpdateWorkspaceImagePermission",
    "EventSource": "workspaces",
    "EventName": "UpdateWorkspaceImagePermission",
    "Description": "Shares or unshares an image with one account in the same Amazon Web Services Region by specifying whether that account has permission to copy the image"
  },
  {
    "API": "workspaces-thin-client:CreateEnvironment",
    "EventSource": "workspaces-thin-client",
    "EventName": "CreateEnvironment",
    "Description": "Creates an environment for your thin client devices"
  },
  {
    "API": "workspaces-thin-client:DeleteDevice",
    "EventSource": "workspaces-thin-client",
    "EventName": "DeleteDevice",
    "Description": "Deletes a thin client device"
  },
  {
    "API": "workspaces-thin-client:DeleteEnvironment",
    "EventSource": "workspaces-thin-client",
    "EventName": "DeleteEnvironment",
    "Description": "Deletes an environment"
  },
  {
    "API": "workspaces-thin-client:DeregisterDevice",
    "EventSource": "workspaces-thin-client",
    "EventName": "DeregisterDevice",
    "Description": "Deregisters a thin client device"
  },
  {
    "API": "workspaces-thin-client:GeneratePresignedUrl",
    "EventSource": "workspaces-thin-client",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "workspaces-thin-client:GetDevice",
    "EventSource": "workspaces-thin-client",
    "EventName": "GetDevice",
    "Description": "Returns information for a thin client device"
  },
  {
    "API": "workspaces-thin-client:GetEnvironment",
    "EventSource": "workspaces-thin-client",
    "EventName": "GetEnvironment",
    "Description": "Returns information for an environment"
  },
  {
    "API": "workspaces-thin-client:GetSoftwareSet",
    "EventSource": "workspaces-thin-client",
    "EventName": "GetSoftwareSet",
    "Description": "Returns information for a software set"
  },
  {
    "API": "workspaces-thin-client:ListDevices",
    "EventSource": "workspaces-thin-client",
    "EventName": "ListDevices",
    "Description": "Returns a list of thin client devices"
  },
  {
    "API": "workspaces-thin-client:ListEnvironments",
    "EventSource": "workspaces-thin-client",
    "EventName": "ListEnvironments",
    "Description": "Returns a list of environments"
  },
  {
    "API": "workspaces-thin-client:ListSoftwareSets",
    "EventSource": "workspaces-thin-client",
    "EventName": "ListSoftwareSets",
    "Description": "Returns a list of software sets"
  },
  {
    "API": "workspaces-thin-client:ListTagsForResource",
    "EventSource": "workspaces-thin-client",
    "EventName": "ListTagsForResource",
    "Description": "Returns a list of tags for a resource"
  },
  {
    "API": "workspaces-thin-client:TagResource",
    "EventSource": "workspaces-thin-client",
    "EventName": "TagResource",
    "Description": "Assigns one or more tags (key-value pairs) to the specified resource"
  },
  {
    "API": "workspaces-thin-client:UntagResource",
    "EventSource": "workspaces-thin-client",
    "EventName": "UntagResource",
    "Description": "Removes a tag or tags from a resource"
  },
  {
    "API": "workspaces-thin-client:UpdateDevice",
    "EventSource": "workspaces-thin-client",
    "EventName": "UpdateDevice",
    "Description": "Updates a thin client device"
  },
  {
    "API": "workspaces-thin-client:UpdateEnvironment",
    "EventSource": "workspaces-thin-client",
    "EventName": "UpdateEnvironment",
    "Description": "Updates an environment"
  },
  {
    "API": "workspaces-thin-client:UpdateSoftwareSet",
    "EventSource": "workspaces-thin-client",
    "EventName": "UpdateSoftwareSet",
    "Description": "Updates a software set"
  },
  {
    "API": "workspaces-web:AssociateBrowserSettings",
    "EventSource": "workspaces-web",
    "EventName": "AssociateBrowserSettings",
    "Description": "Associates a browser settings resource with a web portal"
  },
  {
    "API": "workspaces-web:AssociateIpAccessSettings",
    "EventSource": "workspaces-web",
    "EventName": "AssociateIpAccessSettings",
    "Description": "Associates an IP access settings resource with a web portal"
  },
  {
    "API": "workspaces-web:AssociateNetworkSettings",
    "EventSource": "workspaces-web",
    "EventName": "AssociateNetworkSettings",
    "Description": "Associates a network settings resource with a web portal"
  },
  {
    "API": "workspaces-web:AssociateTrustStore",
    "EventSource": "workspaces-web",
    "EventName": "AssociateTrustStore",
    "Description": "Associates a trust store with a web portal"
  },
  {
    "API": "workspaces-web:AssociateUserAccessLoggingSettings",
    "EventSource": "workspaces-web",
    "EventName": "AssociateUserAccessLoggingSettings",
    "Description": "Associates a user access logging settings resource with a web portal"
  },
  {
    "API": "workspaces-web:AssociateUserSettings",
    "EventSource": "workspaces-web",
    "EventName": "AssociateUserSettings",
    "Description": "Associates a user settings resource with a web portal"
  },
  {
    "API": "workspaces-web:CreateBrowserSettings",
    "EventSource": "workspaces-web",
    "EventName": "CreateBrowserSettings",
    "Description": "Creates a browser settings resource that can be associated with a web portal"
  },
  {
    "API": "workspaces-web:CreateIdentityProvider",
    "EventSource": "workspaces-web",
    "EventName": "CreateIdentityProvider",
    "Description": "Creates an identity provider resource that is then associated with a web portal"
  },
  {
    "API": "workspaces-web:CreateIpAccessSettings",
    "EventSource": "workspaces-web",
    "EventName": "CreateIpAccessSettings",
    "Description": "Creates an IP access settings resource that can be associated with a web portal"
  },
  {
    "API": "workspaces-web:CreateNetworkSettings",
    "EventSource": "workspaces-web",
    "EventName": "CreateNetworkSettings",
    "Description": "Creates a network settings resource that can be associated with a web portal"
  },
  {
    "API": "workspaces-web:CreatePortal",
    "EventSource": "workspaces-web",
    "EventName": "CreatePortal",
    "Description": "Creates a web portal"
  },
  {
    "API": "workspaces-web:CreateTrustStore",
    "EventSource": "workspaces-web",
    "EventName": "CreateTrustStore",
    "Description": "Creates a trust store that can be associated with a web portal"
  },
  {
    "API": "workspaces-web:CreateUserAccessLoggingSettings",
    "EventSource": "workspaces-web",
    "EventName": "CreateUserAccessLoggingSettings",
    "Description": "Creates a user access logging settings resource that can be associated with a web portal"
  },
  {
    "API": "workspaces-web:CreateUserSettings",
    "EventSource": "workspaces-web",
    "EventName": "CreateUserSettings",
    "Description": "Creates a user settings resource that can be associated with a web portal"
  },
  {
    "API": "workspaces-web:DeleteBrowserSettings",
    "EventSource": "workspaces-web",
    "EventName": "DeleteBrowserSettings",
    "Description": "Deletes browser settings"
  },
  {
    "API": "workspaces-web:DeleteIdentityProvider",
    "EventSource": "workspaces-web",
    "EventName": "DeleteIdentityProvider",
    "Description": "Deletes the identity provider"
  },
  {
    "API": "workspaces-web:DeleteIpAccessSettings",
    "EventSource": "workspaces-web",
    "EventName": "DeleteIpAccessSettings",
    "Description": "Deletes IP access settings"
  },
  {
    "API": "workspaces-web:DeleteNetworkSettings",
    "EventSource": "workspaces-web",
    "EventName": "DeleteNetworkSettings",
    "Description": "Deletes network settings"
  },
  {
    "API": "workspaces-web:DeletePortal",
    "EventSource": "workspaces-web",
    "EventName": "DeletePortal",
    "Description": "Deletes a web portal"
  },
  {
    "API": "workspaces-web:DeleteTrustStore",
    "EventSource": "workspaces-web",
    "EventName": "DeleteTrustStore",
    "Description": "Deletes the trust store"
  },
  {
    "API": "workspaces-web:DeleteUserAccessLoggingSettings",
    "EventSource": "workspaces-web",
    "EventName": "DeleteUserAccessLoggingSettings",
    "Description": "Deletes user access logging settings"
  },
  {
    "API": "workspaces-web:DeleteUserSettings",
    "EventSource": "workspaces-web",
    "EventName": "DeleteUserSettings",
    "Description": "Deletes user settings"
  },
  {
    "API": "workspaces-web:DisassociateBrowserSettings",
    "EventSource": "workspaces-web",
    "EventName": "DisassociateBrowserSettings",
    "Description": "Disassociates browser settings from a web portal"
  },
  {
    "API": "workspaces-web:DisassociateIpAccessSettings",
    "EventSource": "workspaces-web",
    "EventName": "DisassociateIpAccessSettings",
    "Description": "Disassociates IP access settings from a web portal"
  },
  {
    "API": "workspaces-web:DisassociateNetworkSettings",
    "EventSource": "workspaces-web",
    "EventName": "DisassociateNetworkSettings",
    "Description": "Disassociates network settings from a web portal"
  },
  {
    "API": "workspaces-web:DisassociateTrustStore",
    "EventSource": "workspaces-web",
    "EventName": "DisassociateTrustStore",
    "Description": "Disassociates a trust store from a web portal"
  },
  {
    "API": "workspaces-web:DisassociateUserAccessLoggingSettings",
    "EventSource": "workspaces-web",
    "EventName": "DisassociateUserAccessLoggingSettings",
    "Description": "Disassociates user access logging settings from a web portal"
  },
  {
    "API": "workspaces-web:DisassociateUserSettings",
    "EventSource": "workspaces-web",
    "EventName": "DisassociateUserSettings",
    "Description": "Disassociates user settings from a web portal"
  },
  {
    "API": "workspaces-web:GeneratePresignedUrl",
    "EventSource": "workspaces-web",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "workspaces-web:GetBrowserSettings",
    "EventSource": "workspaces-web",
    "EventName": "GetBrowserSettings",
    "Description": "Gets browser settings"
  },
  {
    "API": "workspaces-web:GetIdentityProvider",
    "EventSource": "workspaces-web",
    "EventName": "GetIdentityProvider",
    "Description": "Gets the identity provider"
  },
  {
    "API": "workspaces-web:GetIpAccessSettings",
    "EventSource": "workspaces-web",
    "EventName": "GetIpAccessSettings",
    "Description": "Gets the IP access settings"
  },
  {
    "API": "workspaces-web:GetNetworkSettings",
    "EventSource": "workspaces-web",
    "EventName": "GetNetworkSettings",
    "Description": "Gets the network settings"
  },
  {
    "API": "workspaces-web:GetPortal",
    "EventSource": "workspaces-web",
    "EventName": "GetPortal",
    "Description": "Gets the web portal"
  },
  {
    "API": "workspaces-web:GetPortalServiceProviderMetadata",
    "EventSource": "workspaces-web",
    "EventName": "GetPortalServiceProviderMetadata",
    "Description": "Gets the service provider metadata"
  },
  {
    "API": "workspaces-web:GetTrustStore",
    "EventSource": "workspaces-web",
    "EventName": "GetTrustStore",
    "Description": "Gets the trust store"
  },
  {
    "API": "workspaces-web:GetTrustStoreCertificate",
    "EventSource": "workspaces-web",
    "EventName": "GetTrustStoreCertificate",
    "Description": "Gets the trust store certificate"
  },
  {
    "API": "workspaces-web:GetUserAccessLoggingSettings",
    "EventSource": "workspaces-web",
    "EventName": "GetUserAccessLoggingSettings",
    "Description": "Gets user access logging settings"
  },
  {
    "API": "workspaces-web:GetUserSettings",
    "EventSource": "workspaces-web",
    "EventName": "GetUserSettings",
    "Description": "Gets user settings"
  },
  {
    "API": "workspaces-web:ListBrowserSettings",
    "EventSource": "workspaces-web",
    "EventName": "ListBrowserSettings",
    "Description": "Retrieves a list of browser settings"
  },
  {
    "API": "workspaces-web:ListIdentityProviders",
    "EventSource": "workspaces-web",
    "EventName": "ListIdentityProviders",
    "Description": "Retrieves a list of identity providers for a specific web portal"
  },
  {
    "API": "workspaces-web:ListIpAccessSettings",
    "EventSource": "workspaces-web",
    "EventName": "ListIpAccessSettings",
    "Description": "Retrieves a list of IP access settings"
  },
  {
    "API": "workspaces-web:ListNetworkSettings",
    "EventSource": "workspaces-web",
    "EventName": "ListNetworkSettings",
    "Description": "Retrieves a list of network settings"
  },
  {
    "API": "workspaces-web:ListPortals",
    "EventSource": "workspaces-web",
    "EventName": "ListPortals",
    "Description": "Retrieves a list or web portals"
  },
  {
    "API": "workspaces-web:ListTagsForResource",
    "EventSource": "workspaces-web",
    "EventName": "ListTagsForResource",
    "Description": "Retrieves a list of tags for a resource"
  },
  {
    "API": "workspaces-web:ListTrustStoreCertificates",
    "EventSource": "workspaces-web",
    "EventName": "ListTrustStoreCertificates",
    "Description": "Retrieves a list of trust store certificates"
  },
  {
    "API": "workspaces-web:ListTrustStores",
    "EventSource": "workspaces-web",
    "EventName": "ListTrustStores",
    "Description": "Retrieves a list of trust stores"
  },
  {
    "API": "workspaces-web:ListUserAccessLoggingSettings",
    "EventSource": "workspaces-web",
    "EventName": "ListUserAccessLoggingSettings",
    "Description": "Retrieves a list of user access logging settings"
  },
  {
    "API": "workspaces-web:ListUserSettings",
    "EventSource": "workspaces-web",
    "EventName": "ListUserSettings",
    "Description": "Retrieves a list of user settings"
  },
  {
    "API": "workspaces-web:TagResource",
    "EventSource": "workspaces-web",
    "EventName": "TagResource",
    "Description": "Adds or overwrites one or more tags for the specified resource"
  },
  {
    "API": "workspaces-web:UntagResource",
    "EventSource": "workspaces-web",
    "EventName": "UntagResource",
    "Description": "Removes one or more tags from the specified resource"
  },
  {
    "API": "workspaces-web:UpdateBrowserSettings",
    "EventSource": "workspaces-web",
    "EventName": "UpdateBrowserSettings",
    "Description": "Updates browser settings"
  },
  {
    "API": "workspaces-web:UpdateIdentityProvider",
    "EventSource": "workspaces-web",
    "EventName": "UpdateIdentityProvider",
    "Description": "Updates the identity provider"
  },
  {
    "API": "workspaces-web:UpdateIpAccessSettings",
    "EventSource": "workspaces-web",
    "EventName": "UpdateIpAccessSettings",
    "Description": "Updates IP access settings"
  },
  {
    "API": "workspaces-web:UpdateNetworkSettings",
    "EventSource": "workspaces-web",
    "EventName": "UpdateNetworkSettings",
    "Description": "Updates network settings"
  },
  {
    "API": "workspaces-web:UpdatePortal",
    "EventSource": "workspaces-web",
    "EventName": "UpdatePortal",
    "Description": "Updates a web portal"
  },
  {
    "API": "workspaces-web:UpdateTrustStore",
    "EventSource": "workspaces-web",
    "EventName": "UpdateTrustStore",
    "Description": "Updates the trust store"
  },
  {
    "API": "workspaces-web:UpdateUserAccessLoggingSettings",
    "EventSource": "workspaces-web",
    "EventName": "UpdateUserAccessLoggingSettings",
    "Description": "Updates the user access logging settings"
  },
  {
    "API": "workspaces-web:UpdateUserSettings",
    "EventSource": "workspaces-web",
    "EventName": "UpdateUserSettings",
    "Description": "Updates the user settings"
  },
  {
    "API": "xray:BatchGetTraces",
    "EventSource": "xray",
    "EventName": "BatchGetTraces",
    "Description": "Retrieves a list of traces specified by ID"
  },
  {
    "API": "xray:CreateGroup",
    "EventSource": "xray",
    "EventName": "CreateGroup",
    "Description": "Creates a group resource with a name and a filter expression"
  },
  {
    "API": "xray:CreateSamplingRule",
    "EventSource": "xray",
    "EventName": "CreateSamplingRule",
    "Description": "Creates a rule to control sampling behavior for instrumented applications"
  },
  {
    "API": "xray:DeleteGroup",
    "EventSource": "xray",
    "EventName": "DeleteGroup",
    "Description": "Deletes a group resource"
  },
  {
    "API": "xray:DeleteResourcePolicy",
    "EventSource": "xray",
    "EventName": "DeleteResourcePolicy",
    "Description": "Deletes a resource policy from the target Amazon Web Services account"
  },
  {
    "API": "xray:DeleteSamplingRule",
    "EventSource": "xray",
    "EventName": "DeleteSamplingRule",
    "Description": "Deletes a sampling rule"
  },
  {
    "API": "xray:GeneratePresignedUrl",
    "EventSource": "xray",
    "EventName": "GeneratePresignedUrl",
    "Description": "Generate a presigned url given a client, its method, and arguments"
  },
  {
    "API": "xray:GetEncryptionConfig",
    "EventSource": "xray",
    "EventName": "GetEncryptionConfig",
    "Description": "Retrieves the current encryption configuration for X-Ray data"
  },
  {
    "API": "xray:GetGroup",
    "EventSource": "xray",
    "EventName": "GetGroup",
    "Description": "Retrieves group resource details"
  },
  {
    "API": "xray:GetGroups",
    "EventSource": "xray",
    "EventName": "GetGroups",
    "Description": "Retrieves all active group details"
  },
  {
    "API": "xray:GetInsight",
    "EventSource": "xray",
    "EventName": "GetInsight",
    "Description": "Retrieves the summary information of an insight"
  },
  {
    "API": "xray:GetInsightEvents",
    "EventSource": "xray",
    "EventName": "GetInsightEvents",
    "Description": "X-Ray reevaluates insights periodically until they're resolved, and records each intermediate state as an event"
  },
  {
    "API": "xray:GetInsightImpactGraph",
    "EventSource": "xray",
    "EventName": "GetInsightImpactGraph",
    "Description": "Retrieves a service graph structure filtered by the specified insight"
  },
  {
    "API": "xray:GetInsightSummaries",
    "EventSource": "xray",
    "EventName": "GetInsightSummaries",
    "Description": "Retrieves the summaries of all insights in the specified group matching the provided filter values"
  },
  {
    "API": "xray:GetSamplingRules",
    "EventSource": "xray",
    "EventName": "GetSamplingRules",
    "Description": "Retrieves all sampling rules"
  },
  {
    "API": "xray:GetSamplingStatisticSummaries",
    "EventSource": "xray",
    "EventName": "GetSamplingStatisticSummaries",
    "Description": "Retrieves information about recent sampling results for all sampling rules"
  },
  {
    "API": "xray:GetSamplingTargets",
    "EventSource": "xray",
    "EventName": "GetSamplingTargets",
    "Description": "Requests a sampling quota for rules that the service is using to sample requests"
  },
  {
    "API": "xray:GetServiceGraph",
    "EventSource": "xray",
    "EventName": "GetServiceGraph",
    "Description": "Retrieves a document that describes services that process incoming requests, and downstream services that they call as a result"
  },
  {
    "API": "xray:GetTimeSeriesServiceStatistics",
    "EventSource": "xray",
    "EventName": "GetTimeSeriesServiceStatistics",
    "Description": "Get an aggregation of service statistics defined by a specific time range"
  },
  {
    "API": "xray:GetTraceGraph",
    "EventSource": "xray",
    "EventName": "GetTraceGraph",
    "Description": "Retrieves a service graph for one or more specific trace IDs"
  },
  {
    "API": "xray:GetTraceSummaries",
    "EventSource": "xray",
    "EventName": "GetTraceSummaries",
    "Description": "Retrieves IDs and annotations for traces available for a specified time frame using an optional filter"
  },
  {
    "API": "xray:ListResourcePolicies",
    "EventSource": "xray",
    "EventName": "ListResourcePolicies",
    "Description": "Returns the list of resource policies in the target Amazon Web Services account"
  },
  {
    "API": "xray:ListTagsForResource",
    "EventSource": "xray",
    "EventName": "ListTagsForResource",
    "Description": "Returns a list of tags that are applied to the specified Amazon Web Services X-Ray group or sampling rule"
  },
  {
    "API": "xray:PutEncryptionConfig",
    "EventSource": "xray",
    "EventName": "PutEncryptionConfig",
    "Description": "Updates the encryption configuration for X-Ray data"
  },
  {
    "API": "xray:PutResourcePolicy",
    "EventSource": "xray",
    "EventName": "PutResourcePolicy",
    "Description": "Sets the resource policy to grant one or more Amazon Web Services services and accounts permissions to access X-Ray"
  },
  {
    "API": "xray:PutTelemetryRecords",
    "EventSource": "xray",
    "EventName": "PutTelemetryRecords",
    "Description": "Used by the Amazon Web Services X-Ray daemon to upload telemetry"
  },
  {
    "API": "xray:PutTraceSegments",
    "EventSource": "xray",
    "EventName": "PutTraceSegments",
    "Description": "Uploads segment documents to Amazon Web Services X-Ray"
  },
  {
    "API": "xray:TagResource",
    "EventSource": "xray",
    "EventName": "TagResource",
    "Description": "Applies tags to an existing Amazon Web Services X-Ray group or sampling rule"
  },
  {
    "API": "xray:UntagResource",
    "EventSource": "xray",
    "EventName": "UntagResource",
    "Description": "Removes tags from an Amazon Web Services X-Ray group or sampling rule"
  },
  {
    "API": "xray:UpdateGroup",
    "EventSource": "xray",
    "EventName": "UpdateGroup",
    "Description": "Updates a group resource"
  },
  {
    "API": "xray:UpdateSamplingRule",
    "EventSource": "xray",
    "EventName": "UpdateSamplingRule",
    "Description": "Modifies a sampling rule's configuration"
  }
]
